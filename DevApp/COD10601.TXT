OBJECT Codeunit 10601 DocumentTools
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVNO9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      SalesSetup@1080000 : Record 311;
      AmountKr@1080001 : Integer;
      Amountkre@1080002 : Integer;
      KIDDocumentNo@1080005 : Text[24];
      KIDCustomerNo@1080006 : Text[24];
      KIDDocType@1080007 : Text[1];
      i@1080008 : Integer;
      KIDSetupErr@1080009 : TextConst 'ENU=If KID is used on the Finance Charge Memo/Reminder then KID setup has to be %1 or %2.';

    PROCEDURE SetupGiro@1080009(PrintGiro@1080000 : Boolean;DocumentType@1080001 : Integer;DocumentNo@1080002 : Code[20];CustomerNo@1080003 : Code[20];GiroAmount@1080004 : Decimal;GiroCurrencyCode@1080005 : Code[10];VAR GiroAmountKr@1080006 : Text[20];VAR GiroAmountkre@1080007 : Text[2];VAR CheckDigit@1080008 : Text[1];VAR GiroKID@1080009 : Text[25];VAR KIDError@1080010 : Boolean);
    VAR
      AmountControl@1080011 : Text[25];
    BEGIN
      SalesSetup.GET;
      IF NOT PrintGiro THEN BEGIN
        // Format amount on pages before the last
        GiroAmountKr := '***';
        GiroAmountkre := '**';
        CheckDigit := ' ';
        GiroKID := '';
      END ELSE BEGIN
        // Format amount on the last page
        IF GiroCurrencyCode <> '' THEN BEGIN
          // Currency not possible. Blank amounts
          GiroAmountKr := '';
          GiroAmountkre := '';
          CheckDigit := ' ';
        END ELSE BEGIN
          GiroAmount := ABS(GiroAmount);
          AmountKr := ROUND(GiroAmount,1,'<');
          Amountkre := (GiroAmount - AmountKr) * 100;
          GiroAmountKr := STRSUBSTNO('%1',AmountKr);
          IF Amountkre = 0 THEN
            GiroAmountkre := '00';
          IF Amountkre < 10 THEN
            GiroAmountkre := STRSUBSTNO('0%1',Amountkre);
          IF Amountkre >= 10 THEN
            GiroAmountkre := STRSUBSTNO('%1',Amountkre);
          AmountControl := GiroAmountKr + GiroAmountkre;
          CheckDigit := Modulus10(AmountControl);
        END;

        // Test if KID has to be used
        CASE TRUE OF
          (SalesSetup."KID Setup" = SalesSetup."KID Setup"::"Do not use"):
            GiroKID := '';
          (DocumentType = 2) AND (NOT SalesSetup."Use KID on Fin. Charge Memo"):
            GiroKID := '';
          (DocumentType = 3) AND (NOT SalesSetup."Use KID on Reminder"):
            GiroKID := '';
          NOT KIDTextOK(DocumentNo,SalesSetup."Document No. length",KIDError):
            GiroKID := '';
          ELSE
            // Format KID
            SalesSetup.TESTFIELD("Document No. length");
            KIDDocumentNo :=
              FORMAT(DocumentNo,0,
                STRSUBSTNO('<text,%1><filler character,0>',SalesSetup."Document No. length"));
            KIDDocType := FORMAT(DocumentType);
            IF SalesSetup."Customer No. length" > 0 THEN
              KIDCustomerNo :=
                FORMAT(CustomerNo,0,
                  STRSUBSTNO('<text,%1><filler character,0>',SalesSetup."Customer No. length"));

            CASE SalesSetup."KID Setup" OF
              SalesSetup."KID Setup"::"Document No.":
                GiroKID := KIDDocumentNo;
              SalesSetup."KID Setup"::"Document No.+Customer No.":
                GiroKID := COPYSTR(KIDDocumentNo + KIDCustomerNo,1,MAXSTRLEN(GiroKID) - 1);
              SalesSetup."KID Setup"::"Customer No.+Document No.":
                GiroKID := COPYSTR(KIDCustomerNo + KIDDocumentNo,1,MAXSTRLEN(GiroKID) - 1);
              SalesSetup."KID Setup"::"Document Type+Document No.":
                GiroKID := COPYSTR(KIDDocType + KIDDocumentNo,1,MAXSTRLEN(GiroKID) - 1);
              SalesSetup."KID Setup"::"Document No.+Document Type":
                GiroKID := COPYSTR(KIDDocumentNo + KIDDocType,1,MAXSTRLEN(GiroKID) - 1);
            END;
            GiroKID := GiroKID + Modulus10(GiroKID);
        END;
      END;
    END;

    LOCAL PROCEDURE KIDTextOK@1080010(KIDText@1080000 : Text[30];MaxLength@1080001 : Integer;VAR KIDError@1080002 : Boolean) : Boolean;
    VAR
      NoOK@1080003 : Boolean;
      i@1080004 : Integer;
    BEGIN
      NoOK := TRUE;
      IF STRLEN(KIDText) > MaxLength THEN
        NoOK := FALSE;
      // Only digits allowed
      FOR i := 1 TO STRLEN(KIDText) DO
        IF STRPOS('0123456789',COPYSTR(KIDText,i,1)) = 0 THEN
          NoOK := FALSE;

      IF NOT NoOK THEN
        KIDError := TRUE;
      EXIT(NoOK);
    END;

    PROCEDURE Modulus10@1080011(KIDText@1080000 : Text[25]) : Text[1];
    VAR
      TempText@1080001 : Text[60];
      Digit@1080002 : Integer;
      i@1080003 : Integer;
    BEGIN
      TempText := '0000000000000000000000000' + KIDText + '0';
      KIDText := COPYSTR(TempText,STRLEN(TempText) - 24);
      FOR i := 1 TO 12 DO BEGIN
        EVALUATE(Digit,COPYSTR(KIDText,i * 2,1));
        Digit := Digit * 2;
        IF Digit > 10 THEN BEGIN
          TempText := FORMAT(Digit);
          Digit := 99 - STRCHECKSUM(TempText,'11',99);
        END;
        TempText := FORMAT(Digit);
        KIDText[i * 2] := TempText[1];
      END;
      // Calculate control digit
      EXIT(STRSUBSTNO('%1',STRCHECKSUM(KIDText,'1111111111111111111111111',10)));
    END;

    PROCEDURE FindPrintingSetup@1080012(ObjectID@1080001 : Text[30];VAR PrinterSelection@1080000 : Record 78) : Boolean;
    BEGIN
      EXIT(PrinterSelection.GET(USERID,FindObjectNumber(ObjectID)));
    END;

    LOCAL PROCEDURE FindObjectNumber@1080013(ObjectID@1080001 : Text[30]) ObjectNumber@1080002 : Integer;
    BEGIN
      i := STRLEN(ObjectID);
      WHILE (ObjectID[i] <> ' ') AND (i > 0) DO
        i := i - 1;
      IF i = 0 THEN
        ObjectNumber := 0
      ELSE
        EVALUATE(ObjectNumber,COPYSTR(ObjectID,i));
      EXIT;
    END;

    PROCEDURE TestKIDSetup@1080014(SRSetup@1080000 : Record 311);
    VAR
      SRSetup1@1080001 : Record 311;
      SRSetup2@1080002 : Record 311;
    BEGIN
      SRSetup1."KID Setup" := SRSetup1."KID Setup"::"Document Type+Document No.";
      SRSetup2."KID Setup" := SRSetup2."KID Setup"::"Document No.+Document Type";
      IF (SRSetup."Use KID on Fin. Charge Memo" OR SRSetup."Use KID on Reminder") AND
         NOT (SRSetup."KID Setup" IN
              [SRSetup."KID Setup"::"Document Type+Document No.",SRSetup."KID Setup"::"Document No.+Document Type"])
      THEN
        ERROR(KIDSetupErr,SRSetup1."KID Setup",SRSetup2."KID Setup");
    END;

    BEGIN
    END.
  }
}

