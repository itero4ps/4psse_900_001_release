OBJECT Codeunit 10610 E-Invoice Document Encode
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVNO9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      CompanyInfo@1080001 : Record 79;
      GLSetup@1080003 : Record 98;
      WrongLengthErr@1080006 : TextConst 'ENU=should be %1 characters long';
      CompanyInfoRead@1080004 : Boolean;
      GLSetupRead@1080005 : Boolean;

    PROCEDURE DateToText@1080039(VarDate@1000 : Date) : Text[20];
    BEGIN
      IF VarDate = 0D THEN
        EXIT('1753-01-01');
      EXIT(FORMAT(VarDate,0,'<Year4>-<Month,2>-<Day,2>'));
    END;

    PROCEDURE BooleanToText@1080034(VarBoolean@1000 : Boolean) : Text[5];
    BEGIN
      CASE VarBoolean OF
        TRUE:
          EXIT('true');
        FALSE:
          EXIT('false');
      END;
    END;

    PROCEDURE DecimalToText@1080036(VarDecimal@1000 : Decimal) : Text[30];
    BEGIN
      EXIT(FORMAT(VarDecimal,0,'<Precision,2:2><Sign><Integer><Decimals><Comma,.>'));
    END;

    PROCEDURE IntegerToText@1080009(VarInteger@1000 : Integer) : Text[250];
    BEGIN
      EXIT(FORMAT(VarInteger,0,'<Sign><Integer,2><Filler Character,0>'));
    END;

    PROCEDURE IsValidEANNo@1080010(EAN@1000 : Code[13];AllowEmpty@1080000 : Boolean) : Boolean;
    BEGIN
      CASE TRUE OF
        EAN = '':
          EXIT(AllowEmpty);
        STRLEN(EAN) <> 13:
          EXIT(FALSE);
        FORMAT(STRCHECKSUM(COPYSTR(EAN,1,12),'131313131313')) <> FORMAT(EAN[13]):
          EXIT(FALSE);
        ELSE
          EXIT(TRUE);
      END;
    END;

    PROCEDURE CheckCurrencyCode@1080011(CurrencyCode@1000 : Code[10]) : Boolean;
    BEGIN
      EXIT(STRLEN(CurrencyCode) = 3);
    END;

    PROCEDURE DecimalToPromille@1080012(Decimal@1080000 : Decimal) : Text[4];
    BEGIN
      EXIT(FORMAT(ABS(Decimal * 10),0,'<Integer,4><Filler Character,0>'));
    END;

    PROCEDURE GetEInvoiceCountryRegionCode@1080013(CountryRegionCode@1080000 : Code[10]) : Code[10];
    VAR
      CountryRegion@1080001 : Record 9;
    BEGIN
      IF CountryRegionCode = '' THEN BEGIN
        ReadCompanyInfo;
        CompanyInfo.TESTFIELD("Country/Region Code");
        CountryRegionCode := CompanyInfo."Country/Region Code";
      END;

      CountryRegion.GET(CountryRegionCode);
      IF STRLEN(CountryRegion.Code) <> 2 THEN
        CountryRegion.FIELDERROR(Code,STRSUBSTNO(WrongLengthErr,2));
      EXIT(CountryRegion.Code);
    END;

    PROCEDURE GetEInvoiceCurrencyCode@1080014(CurrencyCode@1080000 : Code[10]) : Code[10];
    VAR
      Currency@1080001 : Record 4;
    BEGIN
      IF CurrencyCode = '' THEN BEGIN
        ReadGLSetup;
        GLSetup.TESTFIELD("LCY Code");
        CurrencyCode := GLSetup."LCY Code";
      END;

      IF NOT Currency.GET(CurrencyCode) THEN BEGIN
        IF STRLEN(CurrencyCode) <> 3 THEN
          GLSetup.FIELDERROR("LCY Code",STRSUBSTNO(WrongLengthErr,3));
        EXIT(CurrencyCode);
      END;

      IF STRLEN(Currency.Code) <> 3 THEN
        Currency.FIELDERROR(Code,STRSUBSTNO(WrongLengthErr,3));
      EXIT(Currency.Code);
    END;

    PROCEDURE ReadCompanyInfo@1080015();
    BEGIN
      IF NOT CompanyInfoRead THEN BEGIN
        CompanyInfo.GET;
        CompanyInfoRead := TRUE;
      END;
    END;

    PROCEDURE ReadGLSetup@1080016();
    BEGIN
      IF NOT GLSetupRead THEN BEGIN
        GLSetup.GET;
        GLSetupRead := TRUE;
      END;
    END;

    PROCEDURE GetVATRegNo@1080020(VATRegNo@1060000 : Text[20];PartyTaxScheme@1080000 : Boolean;CountryRegionCode@1080001 : Code[10]) : Text[30];
    VAR
      TempVATRegNo@1080002 : Text[20];
    BEGIN
      IF VATRegNo = '' THEN
        EXIT('');

      CASE PartyTaxScheme OF
        TRUE:
          BEGIN
            TempVATRegNo := VATRegNo;
            IF COPYSTR(VATRegNo,1,2) <> CountryRegionCode THEN
              TempVATRegNo := CountryRegionCode + ' ' + TempVATRegNo;
            IF COPYSTR(VATRegNo,STRLEN(VATRegNo) - 2,3) <> 'MVA' THEN
              TempVATRegNo := TempVATRegNo + ' MVA';
            EXIT(TempVATRegNo);
          END;
        FALSE:
          EXIT(DELCHR(VATRegNo,'=',DELCHR(VATRegNo,'=','0123456789')));
      END;
    END;

    BEGIN
    END.
  }
}

