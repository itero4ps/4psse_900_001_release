OBJECT Codeunit 11 Gen. Jnl.-Check Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,4PS9.00;
  }
  PROPERTIES
  {
    TableNo=81;
    Permissions=TableData 252=rimd;
    OnRun=BEGIN
            GLSetup.GET;
            RunCheck(Rec);
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=can only be a closing date for G/L entries';
      Text001@1001 : TextConst 'ENU=is not within your range of allowed posting dates';
      Text002@1002 : TextConst 'ENU=%1 or %2 must be G/L Account or Bank Account.';
      Text003@1003 : TextConst 'ENU=must have the same sign as %1';
      Text004@1004 : TextConst 'ENU=You must not specify %1 when %2 is %3.';
      Text005@1005 : TextConst 'ENU=%1 + %2 must be %3.';
      Text006@1006 : TextConst 'ENU=%1 + %2 must be -%3.';
      Text007@1007 : TextConst 'ENU=must be positive';
      Text008@1008 : TextConst 'ENU=must be negative';
      Text009@1009 : TextConst 'ENU=must have a different sign than %1';
      Text010@1010 : TextConst 'ENU=%1 %2 and %3 %4 is not allowed.';
      Text011@1011 : TextConst 'ENU=The combination of dimensions used in %1 %2, %3, %4 is blocked. %5';
      Text012@1012 : TextConst 'ENU=A dimension used in %1 %2, %3, %4 has caused an error. %5';
      AccountingPeriod@1013 : Record 50;
      GLSetup@1014 : Record 98;
      UserSetup@1015 : Record 91;
      GenJnlTemplate@1020 : Record 80;
      CostAccSetup@1024 : Record 1108;
      DimMgt@1017 : Codeunit 408;
      CostAccMgt@1023 : Codeunit 1100;
      AllowPostingFrom@1018 : Date;
      AllowPostingTo@1019 : Date;
      GenJnlTemplateFound@1021 : Boolean;
      OverrideDimErr@1022 : Boolean;
      SalesDocAlreadyExistsErr@1026 : TextConst '@@@="%1 = Document Type; %2 = Document No.";ENU=Sales %1 %2 already exists.';
      PurchDocAlreadyExistsErr@1025 : TextConst '@@@="%1 = Document Type; %2 = Document No.";ENU=Purchase %1 %2 already exists.';
      PurchSetup@1100485002 : Record 312;
      DimValRec@11012003 : Record 349;
      ProjTypeRec@11012004 : Record 11012009;
      ProjRec@11012005 : Record 11072003;
      ProjElemRec@1100485001 : Record 11012010;
      GlAccount@11012006 : Record 15;
      ErrorStr@11012010 : Text[50];
      Text11012000@1000000002 : TextConst 'ENU="%1 %2 may not be a %3 if entries are posted without %4 "';
      Text11012001@1000000000 : TextConst 'ENU="%1 %2 must be a %3 to be able to post %4 %5 "';
      Text11012002@1000000001 : TextConst 'ENU=does not match with Cost Type';
      ProjSetupRec@1210190000 : Record 315;
      Servicesetup@1100525000 : Record 11012800;
      EmployeeRec@1100485005 : Record 5200;
      VendorRec@1100485006 : Record 23;
      PurchSetupRead@1100485003 : Boolean;
      Text11012003@1100485004 : TextConst 'ENU=%1 %2 ''%3'' does not exist in Company ''%4''.';
      Text11012004@1100525001 : TextConst 'ENU=and without %1';

    PROCEDURE RunCheck@4(VAR GenJnlLine@1000 : Record 81);
    VAR
      PaymentTerms@1004 : Record 3;
      Cust@1005 : Record 18;
      Vendor@1006 : Record 23;
      ICPartner@1007 : Record 413;
      ICGLAcount@1008 : Record 410;
      GLBalAccount@1100409001 : Record 15;
      TableID@1002 : ARRAY [10] OF Integer;
      No@1003 : ARRAY [10] OF Code[20];
    BEGIN
      WITH GenJnlLine DO BEGIN
        IF EmptyLine THEN
          EXIT;
        IF NOT GenJnlTemplateFound THEN BEGIN
          IF GenJnlTemplate.GET("Journal Template Name") THEN;
          GenJnlTemplateFound := TRUE;
        END;

        TESTFIELD("Posting Date");
        IF "Posting Date" <> NORMALDATE("Posting Date") THEN BEGIN
          IF ("Account Type" <> "Account Type"::"G/L Account") OR
             ("Bal. Account Type" <> "Bal. Account Type"::"G/L Account")
          THEN
            FIELDERROR("Posting Date",Text000);
          AccountingPeriod.GET(NORMALDATE("Posting Date") + 1);
          AccountingPeriod.TESTFIELD("New Fiscal Year",TRUE);
          AccountingPeriod.TESTFIELD("Date Locked",TRUE);
        END;

        IF DateNotAllowed("Posting Date") THEN
          FIELDERROR("Posting Date",Text001);

        IF "Document Date" <> 0D THEN
          IF ("Document Date" <> NORMALDATE("Document Date")) AND
             (("Account Type" <> "Account Type"::"G/L Account") OR
              ("Bal. Account Type" <> "Bal. Account Type"::"G/L Account"))
          THEN
            FIELDERROR("Document Date",Text000);

        TESTFIELD("Document No.");

        IF ("Account Type" IN
            ["Account Type"::Customer,
             "Account Type"::Vendor,
             "Account Type"::"Fixed Asset",
             "Account Type"::"IC Partner"]) AND
           ("Bal. Account Type" IN
            ["Bal. Account Type"::Customer,
             "Bal. Account Type"::Vendor,
             "Bal. Account Type"::"Fixed Asset",
             "Bal. Account Type"::"IC Partner"])
        THEN
          ERROR(
            Text002,
            FIELDCAPTION("Account Type"),FIELDCAPTION("Bal. Account Type"));

        IF "Bal. Account No." = '' THEN
          TESTFIELD("Account No.");

        IF ("Account No." <> '') AND
           NOT "System-Created Entry" AND
           NOT "Allow Zero-Amount Posting" AND
           ("Account Type" <> "Account Type"::"Fixed Asset")
        THEN
          TESTFIELD(Amount);

        IF Amount * "Amount (LCY)" < 0 THEN
          FIELDERROR("Amount (LCY)",STRSUBSTNO(Text003,FIELDCAPTION(Amount)));

        //TESTFIELD(Description); // M19033

        IF ("Account Type" = "Account Type"::"G/L Account") AND
           ("Bal. Account Type" = "Bal. Account Type"::"G/L Account")
        THEN
          TESTFIELD("Applies-to Doc. No.",'');

        IF ("Recurring Method" IN
            ["Recurring Method"::"B  Balance","Recurring Method"::"RB Reversing Balance"]) AND
           ("Currency Code" <> '')
        THEN
          ERROR(
            Text004,
            FIELDCAPTION("Currency Code"),FIELDCAPTION("Recurring Method"),"Recurring Method");

        IF "Account No." <> '' THEN
          CASE "Account Type" OF
            "Account Type"::"G/L Account":
              BEGIN
                IF ("Gen. Bus. Posting Group" <> '') OR ("Gen. Prod. Posting Group" <> '') OR
                   ("VAT Bus. Posting Group" <> '') OR ("VAT Prod. Posting Group" <> '')
                THEN
                  IF NOT GenJnlLine."Block VAT Posting" THEN  //**4PS.n 20-12-2007
                    TESTFIELD("Gen. Posting Type");
                IF ("Gen. Posting Type" <> "Gen. Posting Type"::" ") AND
                   ("VAT Posting" = "VAT Posting"::"Automatic VAT Entry")
                THEN BEGIN
                  IF "VAT Amount" + "VAT Base Amount" <> Amount THEN
                    ERROR(
                      Text005,FIELDCAPTION("VAT Amount"),FIELDCAPTION("VAT Base Amount"),
                      FIELDCAPTION(Amount));
                  IF "Currency Code" <> '' THEN
                    IF "VAT Amount (LCY)" + "VAT Base Amount (LCY)" <> "Amount (LCY)" THEN
                      ERROR(
                        Text005,FIELDCAPTION("VAT Amount (LCY)"),
                        FIELDCAPTION("VAT Base Amount (LCY)"),FIELDCAPTION("Amount (LCY)"));
                END;
                ValidateAccount(GenJnlLine);  //**4PS.n
                IF "Plant Type" <> '' THEN    //**4PS.n SR, 09-12-13 C004021
                  ValidatePlantNo;
              END;
            "Account Type"::Customer,"Account Type"::Vendor:
              BEGIN
                TESTFIELD("Gen. Posting Type",0);
                TESTFIELD("Gen. Bus. Posting Group",'');
                TESTFIELD("Gen. Prod. Posting Group",'');
                TESTFIELD("VAT Bus. Posting Group",'');
                TESTFIELD("VAT Prod. Posting Group",'');

                IF (("Account Type" = "Account Type"::Customer) AND
                    ("Bal. Gen. Posting Type" = "Bal. Gen. Posting Type"::Purchase)) OR
                   (("Account Type" = "Account Type"::Vendor) AND
                    ("Bal. Gen. Posting Type" = "Bal. Gen. Posting Type"::Sale))
                THEN
                  ERROR(
                    STRSUBSTNO(
                      Text010,
                      FIELDCAPTION("Account Type"),"Account Type",
                      FIELDCAPTION("Bal. Gen. Posting Type"),"Bal. Gen. Posting Type"));
                CheckGenJnlLineDocType(GenJnlLine);
      //**4PS.so
      //          IF NOT "System-Created Entry" AND (Amount * "Sales/Purch. (LCY)" < 0) THEN
      //            FIELDERROR(
      //              "Sales/Purch. (LCY)",STRSUBSTNO(Text003,FIELDCAPTION(Amount)));
      //**4PS.eo
                TESTFIELD("Job No.",'');
                IF "Account Type" = "Account Type"::Customer THEN BEGIN
                  IF Cust.GET("Account No.") THEN BEGIN
                    Cust.CheckBlockedCustOnJnls(Cust,"Document Type",TRUE);
                    IF (Cust."IC Partner Code" <> '') AND (GenJnlTemplate.Type = GenJnlTemplate.Type::Intercompany) AND
                       ICPartner.GET(Cust."IC Partner Code")
                    THEN
                      ICPartner.CheckICPartnerIndirect(FORMAT("Account Type"),"Account No.");
                  END;
                END ELSE BEGIN
                  IF Vendor.GET("Account No.") THEN BEGIN
                    Vendor.CheckBlockedVendOnJnls(Vendor,"Document Type",TRUE);
                    IF (Vendor."IC Partner Code" <> '') AND (GenJnlTemplate.Type = GenJnlTemplate.Type::Intercompany) AND
                       ICPartner.GET(Vendor."IC Partner Code")
                    THEN
                      ICPartner.CheckICPartnerIndirect(FORMAT("Account Type"),"Account No.");
                  END;
                END;
              END;
            "Account Type"::"Bank Account":
              BEGIN
                TESTFIELD("Gen. Posting Type",0);
                TESTFIELD("Gen. Bus. Posting Group",'');
                TESTFIELD("Gen. Prod. Posting Group",'');
                TESTFIELD("VAT Bus. Posting Group",'');
                TESTFIELD("VAT Prod. Posting Group",'');
                TESTFIELD("Job No.",'');
                IF (Amount < 0) AND ("Bank Payment Type" = "Bank Payment Type"::"Computer Check") THEN
                  TESTFIELD("Check Printed",TRUE);
              END;
            "Account Type"::"IC Partner":
              BEGIN
                ICPartner.GET("Account No.");
                ICPartner.CheckICPartner;
                IF "Journal Template Name" <> '' THEN
                  IF GenJnlTemplate.Type <> GenJnlTemplate.Type::Intercompany THEN
                    FIELDERROR("Account Type");
              END;
          END;

        IF "Bal. Account No." <> '' THEN
          CASE "Bal. Account Type" OF
            "Bal. Account Type"::"G/L Account":
              BEGIN
                IF ("Bal. Gen. Bus. Posting Group" <> '') OR ("Bal. Gen. Prod. Posting Group" <> '') OR
                   ("Bal. VAT Bus. Posting Group" <> '') OR ("Bal. VAT Prod. Posting Group" <> '')
                THEN
                  TESTFIELD("Bal. Gen. Posting Type");
                IF ("Bal. Gen. Posting Type" <> "Bal. Gen. Posting Type"::" ") AND
                   ("VAT Posting" = "VAT Posting"::"Automatic VAT Entry")
                THEN BEGIN
                  IF "Bal. VAT Amount" + "Bal. VAT Base Amount" <> -Amount THEN
                    ERROR(
                      Text006,FIELDCAPTION("Bal. VAT Amount"),FIELDCAPTION("Bal. VAT Base Amount"),
                      FIELDCAPTION(Amount));
                  IF "Currency Code" <> '' THEN
                    IF "Bal. VAT Amount (LCY)" + "Bal. VAT Base Amount (LCY)" <> -"Amount (LCY)" THEN
                      ERROR(
                        Text006,FIELDCAPTION("Bal. VAT Amount (LCY)"),
                        FIELDCAPTION("Bal. VAT Base Amount (LCY)"),FIELDCAPTION("Amount (LCY)"));
                END;
                //**4PS.sn C016580
                IF ("Closed Project No." = '') AND ("Closed Service Order No." = '') AND
                   ("Closed Service Contract No." = '') THEN
                BEGIN //C019579
                  GLBalAccount.GET("Bal. Account No.");
                  GLBalAccount.TESTFIELD("WIP Account",FALSE);
                END; //C019579
                //**4PS.en
              END;
            "Bal. Account Type"::Customer,"Bal. Account Type"::Vendor:
              BEGIN
                TESTFIELD("Bal. Gen. Posting Type",0);
                TESTFIELD("Bal. Gen. Bus. Posting Group",'');
                TESTFIELD("Bal. Gen. Prod. Posting Group",'');
                TESTFIELD("Bal. VAT Bus. Posting Group",'');
                TESTFIELD("Bal. VAT Prod. Posting Group",'');

                IF (("Bal. Account Type" = "Bal. Account Type"::Customer) AND
                    ("Gen. Posting Type" = "Gen. Posting Type"::Purchase)) OR
                   (("Bal. Account Type" = "Bal. Account Type"::Vendor) AND
                    ("Gen. Posting Type" = "Gen. Posting Type"::Sale))
                THEN
                  ERROR(
                    STRSUBSTNO(
                      Text010,
                      FIELDCAPTION("Bal. Account Type"),"Bal. Account Type",
                      FIELDCAPTION("Gen. Posting Type"),"Gen. Posting Type"));

                IF "Document Type" <> 0 THEN BEGIN
                  IF ("Bal. Account Type" = "Bal. Account Type"::Customer) =
                     ("Document Type" IN ["Document Type"::Payment,"Document Type"::"Credit Memo"])
                  THEN BEGIN
                    IF Amount < 0 THEN
                      FIELDERROR(Amount,Text007);
                  END ELSE
                    IF Amount > 0 THEN
                      FIELDERROR(Amount,Text008);
                END;
      //**4PS.so
      //          IF Amount * "Sales/Purch. (LCY)" > 0 THEN
      //            FIELDERROR(
      //              "Sales/Purch. (LCY)",
      //              STRSUBSTNO(Text009,FIELDCAPTION(Amount)));
      //**4PS.eo
                TESTFIELD("Job No.",'');
                IF "Bal. Account Type" = "Bal. Account Type"::Customer THEN BEGIN
                  IF Cust.GET("Bal. Account No.") THEN BEGIN
                    Cust.CheckBlockedCustOnJnls(Cust,"Document Type",TRUE);
                    IF (Cust."IC Partner Code" <> '') AND (GenJnlTemplate.Type = GenJnlTemplate.Type::Intercompany) AND
                       ICPartner.GET(Cust."IC Partner Code")
                    THEN
                      ICPartner.CheckICPartnerIndirect(FORMAT("Bal. Account Type"),"Bal. Account No.");
                  END
                END ELSE BEGIN
                  IF Vendor.GET("Bal. Account No.") THEN BEGIN
                    Vendor.CheckBlockedVendOnJnls(Vendor,"Document Type",TRUE);
                    IF (Vendor."IC Partner Code" <> '') AND (GenJnlTemplate.Type = GenJnlTemplate.Type::Intercompany) AND
                       ICPartner.GET(Vendor."IC Partner Code")
                    THEN
                      ICPartner.CheckICPartnerIndirect(FORMAT("Bal. Account Type"),"Bal. Account No.");
                  END;
                END;
              END;
            "Bal. Account Type"::"Bank Account":
              BEGIN
                TESTFIELD("Bal. Gen. Posting Type",0);
                TESTFIELD("Bal. Gen. Bus. Posting Group",'');
                TESTFIELD("Bal. Gen. Prod. Posting Group",'');
                TESTFIELD("Bal. VAT Bus. Posting Group",'');
                TESTFIELD("Bal. VAT Prod. Posting Group",'');
                IF (Amount > 0) AND ("Bank Payment Type" = "Bank Payment Type"::"Computer Check") THEN
                  TESTFIELD("Check Printed",TRUE);
              END;
            "Bal. Account Type"::"IC Partner":
              BEGIN
                ICPartner.GET("Bal. Account No.");
                ICPartner.CheckICPartner;
                IF GenJnlTemplate.Type <> GenJnlTemplate.Type::Intercompany THEN
                  FIELDERROR("Bal. Account Type");
              END;
          END;

        CheckInterestDate(GenJnlLine);  //**4PS.n

        IF "IC Partner G/L Acc. No." <> '' THEN
          IF ICGLAcount.GET("IC Partner G/L Acc. No.") THEN
            ICGLAcount.TESTFIELD(Blocked,FALSE);

        IF NOT PaymentTerms.GET("Payment Terms Code") THEN
          CLEAR(PaymentTerms);
        IF (("Account Type" = "Account Type"::"G/L Account") AND
            ("Bal. Account Type" = "Bal. Account Type"::"G/L Account")) OR
           (("Document Type" <> "Document Type"::Invoice) AND
            (NOT
             (("Document Type" = "Document Type"::"Credit Memo") AND
              PaymentTerms."Calc. Pmt. Disc. on Cr. Memos")))
        THEN BEGIN
          TESTFIELD("Pmt. Discount Date",0D);
          TESTFIELD("Payment Discount %",0);
        END;

        IF (("Account Type" = "Account Type"::"G/L Account") AND
            ("Bal. Account Type" = "Bal. Account Type"::"G/L Account")) OR
           ("Applies-to Doc. No." <> '')
        THEN
          TESTFIELD("Applies-to ID",'');

        IF ("Account Type" <> "Account Type"::"Bank Account") AND
           ("Bal. Account Type" <> "Bal. Account Type"::"Bank Account")
        THEN
          TESTFIELD("Bank Payment Type","Bank Payment Type"::" ");

        IF ("Account Type" = "Account Type"::"Fixed Asset") OR
           ("Bal. Account Type" = "Bal. Account Type"::"Fixed Asset")
        THEN
          CODEUNIT.RUN(CODEUNIT::"FA Jnl.-Check Line",GenJnlLine);

        IF ("Account Type" <> "Account Type"::"Fixed Asset") AND
           ("Bal. Account Type" <> "Bal. Account Type"::"Fixed Asset")
        THEN BEGIN
          TESTFIELD("Depreciation Book Code",'');
          TESTFIELD("FA Posting Type",0);
        END;

        IF OverrideDimErr THEN
          EXIT;

        IF NOT DimMgt.CheckDimIDComb("Dimension Set ID") THEN
          ERROR(
            Text011,
            TABLECAPTION,"Journal Template Name","Journal Batch Name","Line No.",
            DimMgt.GetDimCombErr);

        TableID[1] := DimMgt.TypeToTableID1("Account Type");
        No[1] := "Account No.";
        TableID[2] := DimMgt.TypeToTableID1("Bal. Account Type");
        No[2] := "Bal. Account No.";
        IF NOT ("Plant Invoice" AND ("Job No." <> '')) THEN BEGIN  //**4PS.n
          TableID[3] := DATABASE::Job;
          No[3] := "Job No.";
        END;  //**4PS.n
        TableID[4] := DATABASE::"Salesperson/Purchaser";
        No[4] := "Salespers./Purch. Code";
        TableID[5] := DATABASE::Campaign;
        No[5] := "Campaign No.";
      //**4PS.sn C020939
        IF ("Receiving Company" <> '') AND
           ( "Memo Posting" OR NOT "Intercompany Transaction" ) THEN //C022038
          DimMgt.SetCompany("Receiving Company")
        ELSE
          DimMgt.SetCompany(COMPANYNAME);
      //**4PS.en C020939
        IF NOT DimMgt.CheckDimValuePosting(TableID,No,"Dimension Set ID") THEN
          IF "Line No." <> 0 THEN
            ERROR(
              Text012,
              TABLECAPTION,"Journal Template Name","Journal Batch Name","Line No.",
              DimMgt.GetDimValuePostingErr)
          ELSE
            ERROR(DimMgt.GetDimValuePostingErr);
      END;

      IF CostAccSetup.GET THEN
        CostAccMgt.CheckValidCCAndCOInGLEntry(GenJnlLine."Dimension Set ID");

      OnAfterCheckGenJnlLine(GenJnlLine);
    END;

    PROCEDURE DateNotAllowed@1(PostingDate@1000 : Date) : Boolean;
    BEGIN
      IF (AllowPostingFrom = 0D) AND (AllowPostingTo = 0D) THEN BEGIN
        IF USERID <> '' THEN
          IF UserSetup.GET(USERID) THEN BEGIN
            AllowPostingFrom := UserSetup."Allow Posting From";
            AllowPostingTo := UserSetup."Allow Posting To";
          END;
        IF (AllowPostingFrom = 0D) AND (AllowPostingTo = 0D) THEN BEGIN
          GLSetup.GET;
          AllowPostingFrom := GLSetup."Allow Posting From";
          AllowPostingTo := GLSetup."Allow Posting To";
        END;
        IF AllowPostingTo = 0D THEN
          AllowPostingTo := 99991231D;
      END;
      EXIT((PostingDate < AllowPostingFrom) OR (PostingDate > AllowPostingTo));
    END;

    LOCAL PROCEDURE ErrorIfPositiveAmt@2(GenJnlLine@1000 : Record 81);
    BEGIN
      IF GenJnlLine.Amount > 0 THEN
        GenJnlLine.FIELDERROR(Amount,Text008);
    END;

    LOCAL PROCEDURE ErrorIfNegativeAmt@3(GenJnlLine@1000 : Record 81);
    BEGIN
      IF GenJnlLine.Amount < 0 THEN
        GenJnlLine.FIELDERROR(Amount,Text007);
    END;

    PROCEDURE SetOverDimErr@5(lvOverrideDimErr@1100525000 : Boolean);
    BEGIN
      //OverrideDimErr := TRUE;
      OverrideDimErr := lvOverrideDimErr; //**4PS n DP00387
    END;

    PROCEDURE CheckSalesDocNoIsNotUsed@115(DocType@1000 : Option;DocNo@1001 : Code[20]);
    VAR
      OldCustLedgEntry@1002 : Record 21;
    BEGIN
      OldCustLedgEntry.SETRANGE("Document No.",DocNo);
      OldCustLedgEntry.SETRANGE("Document Type",DocType);
      IF OldCustLedgEntry.FINDFIRST THEN
        ERROR(SalesDocAlreadyExistsErr,OldCustLedgEntry."Document Type",DocNo);
    END;

    PROCEDURE CheckPurchDocNoIsNotUsed@107(DocType@1000 : Option;DocNo@1002 : Code[20]);
    VAR
      OldVendLedgEntry@1001 : Record 25;
    BEGIN
      OldVendLedgEntry.SETRANGE("Document No.",DocNo);
      OldVendLedgEntry.SETRANGE("Document Type",DocType);
      IF OldVendLedgEntry.FINDFIRST THEN
        ERROR(PurchDocAlreadyExistsErr,OldVendLedgEntry."Document Type",DocNo);
    END;

    LOCAL PROCEDURE CheckGenJnlLineDocType@7(GenJnlLine@1001 : Record 81);
    VAR
      IsPayment@1000 : Boolean;
    BEGIN
      WITH GenJnlLine DO
        IF "Document Type" <> 0 THEN BEGIN
          IsPayment := "Document Type" IN ["Document Type"::Payment,"Document Type"::"Credit Memo"];
          IF IsPayment XOR ("Account Type" = "Account Type"::Customer) THEN
            ErrorIfNegativeAmt(GenJnlLine)
          ELSE
            ErrorIfPositiveAmt(GenJnlLine);
        END;
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCheckGenJnlLine@6(VAR GenJournalLine@1000 : Record 81);
    BEGIN
    END;

    PROCEDURE ValidateAccount@11012000(GenJnlLine@11012000 : Record 81);
    VAR
      ServContrRec@1210190003 : Record 11012812;
      ServOrderRec@1210190004 : Record 11012823;
      ServTypeRec@1210190005 : Record 11012814;
      lvSalesHeadRec@1100485001 : Record 36;
      lvSalesInvoiceRec@1100485003 : Record 112;
      lvSalesCrMemoRec@1100485004 : Record 114;
      lvICRelationRec@1100525000 : Record 11012057;
      lvICPostingSetupBySourceRec@1100525003 : Record 11020565;
      lvDoCheck@1100485002 : Boolean;
      IsPlantServiceOrder@1100525005 : Boolean;
      RentalUnitWIP@1100409000 : Boolean;
      lvCompName@1100485000 : Text[50];
      LvVendorCde@1100485005 : Code[20];
      lvVendorPostingGroep@1100525001 : Code[20];
      lvICHoursPosting@1100525002 : 'NotApplicable,ReceiverSide,Supplierside';
      TableText@1100525004 : Text[250];
    BEGIN
      //**4PS
      WITH GenJnlLine DO BEGIN
        lvCheckCompanyIC(GenJnlLine);
        IF ("Receiving Company" = '') OR AccountIsSupplyingCurrentCompanyICAccount THEN
          GlAccount.GET("Account No.")
        ELSE BEGIN
          IF NOT GlAccount.GET("Account No.") THEN
            ERROR(Text11012003, GlAccount.TABLECAPTION, GlAccount.FIELDCAPTION("No."), "Account No.", "Receiving Company");
        END;
        IF GlAccount."WIP Account" THEN BEGIN
      //    IF ("Job No." + "Service Contract No." = '') AND NOT "Skip WIP Check" THEN BEGIN
          IF ("Job No." + "Service Contract No." + "Service Order No." = '') AND NOT "Skip WIP Check" THEN BEGIN //mg.c, 21-07-11
            IF "Posting Date" <> CLOSINGDATE("Posting Date") THEN BEGIN // M18028
              TableText := ProjRec.TABLECAPTION;
              IF ServContrRec.READPERMISSION THEN
                TableText := TableText + ' ' + STRSUBSTNO(Text11012004, ServContrRec.TABLECAPTION);
              ERROR(STRSUBSTNO(Text11012000,
                FIELDCAPTION("Account No."), "Account No.",
                GlAccount.FIELDCAPTION("WIP Account"),
                TableText));
            END;
          END;
        END;

        IF "Job No." <> '' THEN BEGIN
          lvDoCheck := TRUE;
          IF "Plant Invoice" THEN BEGIN
            IF lvSalesHeadRec.GET("Document Type", "Document No.") THEN BEGIN
              IF (lvSalesHeadRec."Company Name" <> '') AND (lvSalesHeadRec."Company Name" <> COMPANYNAME) THEN
                lvDoCheck := FALSE;
            END ELSE BEGIN
              //* Sometimes (depending setup) the invoice is already deleted here, then read in posted
              IF "Document Type" <> "Document Type"::"Credit Memo" THEN BEGIN
                IF lvSalesInvoiceRec.GET("Document No.") THEN BEGIN
                  IF (lvSalesInvoiceRec."Company Name" <> '') AND (lvSalesInvoiceRec."Company Name" <> COMPANYNAME) THEN
                    lvDoCheck := FALSE;
                END;
              END ELSE BEGIN
                IF lvSalesCrMemoRec.GET("Document No.") THEN BEGIN
                  IF (lvSalesCrMemoRec."Company Name" <> '') AND (lvSalesCrMemoRec."Company Name" <> COMPANYNAME) THEN
                    lvDoCheck := FALSE;
                END;
              END;
            END;
          END;
          IF lvDoCheck THEN BEGIN
            ProjRec.GET("Job No.");
            IF (ProjSetupRec."Provisions at Closure") THEN
              ProjRec.CheckProjectStatus(-1)
            ELSE
              ProjRec.CheckProjectStatus(0);
          END;
          GetPurchSetup;

          IF NOT ((PurchSetup."Approve Purchase Invoices") AND
                  (PurchSetup."Preregister WIP Purch. Inv.") AND
                  (PurchSetup."Preregistration WIP Account" = "Account No.") AND
                  ("Shortcut Dimension 2 Code" = '')) THEN
          BEGIN
            TESTFIELD("Shortcut Dimension 2 Code");
            DimMgt.GetDimValueRec(2, "Shortcut Dimension 2 Code", DimValRec, TRUE, '');
          END;
        END;

        //call 22156.sn
      //  IF ("Service Contract No." <> '') THEN BEGIN
        IF ("Service Order No." <> '') THEN BEGIN //mg, 21-07-2011
          IF ("Closed Service Contract No." = '') THEN BEGIN  //db, 10-11-10: M23807
            Servicesetup.GET;
            IF Servicesetup."Cost Component Mandatory" THEN
              TESTFIELD("Cost Component");
          END;
        END;
        IF ("Job No." <> '') THEN BEGIN
          IF ("Closed Project No." = '') THEN BEGIN
            IF ProjSetupRec."Cost Component Mandatory" THEN  //db, 10-11-10: M23807
              TESTFIELD("Cost Component");
          END;
        END;
        //call 22156.en
        IF ("Service Order No." <> '') THEN
          IF ServOrderRec.GET("Service Order No.") THEN
             IsPlantServiceOrder := ServOrderRec.IsPlantServiceOrder;
        IF (NOT "Plant Invoice") AND (NOT (("Job No."<>'') AND ProjRec."Small Project" AND ProjRec."Plant Job Order"))
            AND (NOT (("Job No."<>'') AND ("Origin Type" = "Origin Type"::Service) AND IsPlantServiceOrder)) //DP00195
        THEN BEGIN
          IF "Job No." <> '' THEN BEGIN
            IF NOT "Skip WIP Check" AND NOT GlAccount."WIP Account" THEN
              ERROR(STRSUBSTNO(Text11012001,
                FIELDCAPTION("Account No."), "Account No.",
                GlAccount.FIELDCAPTION("WIP Account"),
                FIELDCAPTION("Job No."), "Job No."));

            IF "Origin Type" = "Origin Type"::Service THEN BEGIN
              //I removed some code here call22156.o
              //use of code below is unclear, possibly deprecated
              IF ServOrderRec.GET("Service Order No.") THEN BEGIN
                ServOrderRec.CheckStatus(0);
                ServOrderRec.TESTFIELD("Service Type");
                ServTypeRec.GET(ServOrderRec."Service Type");
              END ELSE BEGIN
                IF ServContrRec.GET("Service Contract No.") THEN BEGIN
                  ServContrRec.TESTFIELD("Service Type");
                  ServTypeRec.GET(ServContrRec."Service Type");
                END ELSE BEGIN
                  ServTypeRec.INIT;
                END;
              END;
              ProjTypeRec."WIP Account Labor" := ServTypeRec."WIP Account Labor";
              ProjTypeRec."WIP Account Material" := ServTypeRec."WIP Account Material";
              ProjTypeRec."WIP Account Subcontracting" := ServTypeRec."WIP Account Subcontracting";
              ProjTypeRec."WIP Account Plant" := ServTypeRec."WIP Account Plant";
              ProjTypeRec."WIP Account Sundry" := ServTypeRec."WIP Account Sundry";
              ProjTypeRec."WIP Account Revenue" := ServTypeRec."WIP Account Revenue";
              ProjTypeRec."WIP Account Revenue Labor" := '';
            END ELSE BEGIN

              ProjRec.TESTFIELD("Project Type");
              ProjTypeRec.GET(ProjRec."Project Type");
              //IF ProjSetupRec."Posting Element Mandatory" THEN  //**4PS01.o
              IF ProjRec."Posting Element Mandatory" THEN         //**4PS01.n
                TESTFIELD(Element);
              IF Element <> '' THEN BEGIN // Call 6564
                ProjElemRec.GET("Job No.", Element);
                ProjElemRec.CheckProjectElementBlocked;
              END;
            END;
            ErrorStr := Text11012002;
            IF "Document Type" = 0 THEN BEGIN

              lvICHoursPosting := lvICHoursPosting::NotApplicable;
              IF ("Origin Type" <> "Origin Type"::Service) AND NOT "Intercompany Transaction" THEN BEGIN
                IF "Receiving Company" <> '' THEN
                  lvCompName := "Receiving Company"
                ELSE
                  lvCompName := COMPANYNAME;

                LvVendorCde := '';
                IF ("Employee No." <> '') THEN BEGIN
                  IF EmployeeRec.GET("Employee No.") THEN BEGIN
                    IF (EmployeeRec.External) AND (EmployeeRec.Employer <> '' ) THEN BEGIN
                      IF VendorRec.GET(EmployeeRec.Employer) THEN
                        LvVendorCde := VendorRec."No.";
                    END;
                  END;
                END;

                IF "Supplying Company" <> '' THEN
                BEGIN
                  IF lvICPostingSetupBySourceRec.GET("Source Code", "Supplying Company", COMPANYNAME) THEN
                  BEGIN
                    lvICHoursPosting := lvICHoursPosting::ReceiverSide;
                    IF lvICRelationRec.GET("Supplying Company", COMPANYNAME) THEN BEGIN
                       lvVendorPostingGroep := lvICRelationRec."Vendor Posting Group";
                    END;
                  END;
                END;

                IF NOT "Skip WIP Check" THEN BEGIN //M22739
                  IF "Account No." <> ProjTypeRec.GetWipAccByVendorPostingGrp(
                                                            ProjRec."Project Type",
                                                            DimValRec."Cost Type",
                                                            ProjRec."Project Status",
                                                            ProjSetupRec."Provisions at Closure",
                                                            lvCompName,
                                                            "Cost Type Cost Plus Line",
                                                            LvVendorCde,
                                                            lvICHoursPosting,
                                                            lvVendorPostingGroep)
                  THEN
                    FIELDERROR("Account No.",ErrorStr);
                END; //M22739
              END;
            END ELSE BEGIN
              IF NOT "Skip WIP Check" THEN BEGIN //C006064 n
                RentalUnitWIP := (("Rental Unit" <>'') AND ("Rental Unit Line Type" <> 0));  //*C017909.n
                IF ("Origin Type" = "Origin Type"::Project) AND
                   (ProjRec."Project Status" >= ProjRec."Project Status"::Finished) AND
                   (ProjSetupRec."Provisions at Closure" = TRUE) THEN
                BEGIN
                  IF (DimValRec."Cost Type" = DimValRec."Cost Type"::Revenue) AND
                     ((("Account No." <> ProjTypeRec."Provision Account Revenue") AND (NOT RentalUnitWIP)) OR //*C017909.c
                      (("Account No." <> ProjTypeRec."Provision Account Rental UR") AND RentalUnitWIP) )      //*C017909.c
                  THEN
                    FIELDERROR("Account No.",ErrorStr);
                END ELSE BEGIN
                  ProjTypeRec.GET(ProjRec."Project Type");
                  IF (DimValRec."Cost Type" = DimValRec."Cost Type"::Revenue) THEN BEGIN
                    IF (NOT RentalUnitWIP) THEN BEGIN  //*C017909.c
                      IF ("Account No." <> ProjTypeRec."WIP Account Revenue") AND
                         ("Account No." <> ProjTypeRec."WIP Account Revenue Labor") AND
                         ("Account No." <> ProjTypeRec."WIP Account Revenue Material") AND
                         ("Account No." <> ProjTypeRec."WIP Account Revenue Subcontr.") AND
                         ("Account No." <> ProjTypeRec."WIP Account Revenue Plant") AND
                         ("Account No." <> ProjTypeRec."WIP Account Revenue Sundry") AND
                         ("Account No." <> ProjTypeRec."Interest Installments")     //call: C-013502
                      THEN
                        FIELDERROR("Account No.",ErrorStr);
                    END ELSE BEGIN
                      IF ("Account No." <> ProjTypeRec."Rental Unit Account Revenue") AND
                         ("Account No." <> ProjTypeRec."Rental Unit Service Cost Rev.") AND
                         ("Account No." <> ProjTypeRec."Rental Unit Acc Utilities Rev.")
                      THEN
                        FIELDERROR("Account No.",ErrorStr);
                    END;
                  END;
                END;
              END; //C006064 n
            END;
          END;
        END;
      END;
    END;

    PROCEDURE lvCheckCompanyIC@32(GenJnlLine@11012000 : Record 81);
    BEGIN
      //**4PS
      IF GenJnlLine."Receiving Company" <> '' THEN BEGIN
        IF NOT GenJnlLine.AccountIsSupplyingCurrentCompanyICAccount THEN
          GlAccount.CHANGECOMPANY(GenJnlLine."Receiving Company")
        ELSE
          GlAccount.CHANGECOMPANY(COMPANYNAME);
        ProjSetupRec.CHANGECOMPANY(GenJnlLine."Receiving Company");
        ProjRec.CHANGECOMPANY(GenJnlLine."Receiving Company");
        ProjElemRec.CHANGECOMPANY(GenJnlLine."Receiving Company");
        DimValRec.CHANGECOMPANY(GenJnlLine."Receiving Company");
        ProjTypeRec.CHANGECOMPANY(GenJnlLine."Receiving Company");
      END ELSE BEGIN
        GlAccount.CHANGECOMPANY(COMPANYNAME);
        ProjSetupRec.CHANGECOMPANY(COMPANYNAME);
        ProjRec.CHANGECOMPANY(COMPANYNAME);
        ProjElemRec.CHANGECOMPANY(COMPANYNAME);
        DimValRec.CHANGECOMPANY(COMPANYNAME);
        ProjTypeRec.CHANGECOMPANY(COMPANYNAME);
      END;

      ProjSetupRec.GET;
    END;

    PROCEDURE CheckInterestDate@1210190000(VAR IGenJnlLineRec@1210190004 : Record 81);
    VAR
      lvInterestSetupRec@1100485000 : Record 11012117;
      lvICAccInterestRec@1210190001 : Record 11012118;
      lvText11012000@1210190002 : TextConst 'ENU=may not be empty for posting on %4 ''%5''';
      lvText11012001@1210190000 : TextConst 'ENU=(%1) may not be greater than the de %2 (%3)';
      lvInterestCalcMgtCU@1210190003 : Codeunit 11012049;
    BEGIN
      //**4PS.n
      IF NOT lvInterestCalcMgtCU.PermissionInterestGranule() THEN
        EXIT;

      WITH IGenJnlLineRec DO BEGIN
        IF ("Interest Date" = 0D) THEN BEGIN
          lvInterestSetupRec.GET;
          IF ("Account No." <> '') AND ("Account Type" = "Account Type"::"G/L Account") THEN BEGIN
            IF lvICAccInterestRec.GET("Account No.") THEN BEGIN
              IF lvInterestSetupRec."Aut. fill empty Interest Date" THEN
                "Interest Date" := "Posting Date"
              ELSE
                FIELDERROR("Interest Date", STRSUBSTNO(lvText11012000, FIELDCAPTION("Account No."), "Account No."));
            END;
          END;
          IF ("Bal. Account No." <> '') AND ("Bal. Account Type" = "Bal. Account Type"::"G/L Account") THEN BEGIN
            IF lvICAccInterestRec.GET("Bal. Account No.") THEN BEGIN
              IF lvInterestSetupRec."Aut. fill empty Interest Date" THEN
                "Interest Date" := "Posting Date"
              ELSE
                FIELDERROR("Interest Date", STRSUBSTNO(lvText11012000, FIELDCAPTION("Bal. Account No."), "Bal. Account No."));
            END;
          END;
        END;

        IF ("Interest Date" <> 0D) THEN BEGIN
          IF ("Interest Date" > "Posting Date") THEN
            FIELDERROR("Interest Date", STRSUBSTNO(lvText11012001, "Interest Date", FIELDCAPTION("Posting Date"), "Posting Date"));
          IF DateNotAllowed("Interest Date") THEN
            FIELDERROR("Interest Date",Text001);
        END;
      END;
    END;

    LOCAL PROCEDURE GetPurchSetup@1100485000();
    BEGIN
      //**4PS
      IF NOT PurchSetupRead THEN
        PurchSetup.GET;
      PurchSetupRead := TRUE;
    END;

    BEGIN
    {
      4PS
      30-10-2000 A. Overeem.  Test added on project postings.
      10-11-2000 A. Overeem.  Strengthen test on work in proces G/L account.
      4PS01 JD, 8 aug 2007, Call 5990, "Posting Element Mandatory" also on project card
    }
    END.
  }
}

