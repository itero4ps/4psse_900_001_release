OBJECT Codeunit 11012002 Check Hour Accounting
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    TableNo=11012038;
    OnRun=BEGIN
            HourAccRec.COPY(Rec);
            Code;
          END;

  }
  CODE
  {
    VAR
      Text004@11012010 : TextConst 'ENU=%1 is not filled.';
      Text005@1100485007 : TextConst 'ENU=No Hour Accountinglines Received';
      Text007@11012013 : TextConst 'ENU=No errors found.';
      ProjectSetup@11012000 : Record 315;
      ServiceSetup@1100525000 : Record 11012800;
      HumanResourcesSetup@1100528400 : Record 5218;
      EmployeeRec@11012001 : Record 5200;
      HourAccRec@1210190000 : Record 11012038;
      HourLineRec@11012002 : Record 11012039;
      ProjRec@1100485002 : Record 11072003;
      ReceivingProjectSetup@1100485005 : Record 315;
      ErrorRec@11012003 : Record 11012051;
      Text008@1100485003 : TextConst 'ENU=%1 %2 is %3.';
      Text009@1100485004 : TextConst 'ENU=%1 %2 has %3 %4.';

    PROCEDURE Code@2();
    BEGIN
      //**4PS, Call 18316.sn
      ErrorRec.SETRANGE("User ID", USERID);
      ErrorRec.SETRANGE("Source Type", ErrorRec."Source Type"::"Hours Accounting");
      ErrorRec.DELETEALL;
      //**4PS, Call 18316.en

      WITH HourAccRec DO BEGIN
        ProjectSetup.GET;
        IF HumanResourcesSetup.READPERMISSION THEN
          HumanResourcesSetup.GET;

        //Check completeness
        EmployeeRec.SETRANGE("Account Hours", EmployeeRec."Account Hours"::"Required according to Norm");
        IF EmployeeRec.FINDSET THEN BEGIN
          REPEAT
            IF ("Posting Date" >= EmployeeRec."Employment Date") OR (EmployeeRec."Employment Date" = 0D) THEN BEGIN //DJN 9-6-2011 19381
              SETRANGE(Year,Year);
              SETRANGE(Week,Week);
              SETRANGE("Employee No.",EmployeeRec."No.");
              HourLineRec.SETRANGE(Year,Year);
              HourLineRec.SETRANGE(Week,Week);
              HourLineRec.SETRANGE("Employee No.",EmployeeRec."No.");
              HourLineRec.SETRANGE("Component Type", HourLineRec."Component Type"::Hours);

              //Check receiving Hour Accounting for Pre registration
              IF NOT HourLineRec.FINDSET(FALSE,FALSE) THEN BEGIN
                IF HumanResourcesSetup.READPERMISSION THEN
                  IF HumanResourcesSetup."Pre Registration Hours" THEN BEGIN
                    StoreMessage(STRSUBSTNO(Text005, EmployeeRec.FIELDCAPTION(EmployeeRec."Full Name")));
                  END;

                //Create fictitious Hour Line
                HourLineRec.INIT;
                HourLineRec.Year := Year;
                HourLineRec.Week := Week;
                HourLineRec."Document No." := "Document No.";
                HourLineRec."Employee No." := EmployeeRec."No.";
                HourLineRec."Posting Date" := "Posting Date"; //call 29880
                CheckNormHours;
              END;
            END; //DJN 9-6-2011 19381
          UNTIL EmployeeRec.NEXT = 0;
        END;

        //Check hours and days.
        SETRANGE("Document No.","Document No.");
        SETRANGE("Posting Date","Posting Date");
        SETRANGE("Employee No.");
        IF FINDSET THEN
          REPEAT
            HourLineRec.SETRANGE(Year,Year);
            HourLineRec.SETRANGE(Week,Week);
            HourLineRec.SETRANGE("Employee No.","Employee No.");
            HourLineRec.SETRANGE("Component Type", HourLineRec."Component Type"::Hours);

            EmployeeRec.CHANGECOMPANY("Supplying Company");
            IF "Employee No." <> '' THEN BEGIN
              EmployeeRec.GET("Employee No.");
              IF EmployeeRec."Trade Association" = '' THEN
                StoreMessage(STRSUBSTNO(Text004, EmployeeRec.FIELDCAPTION("Trade Association")));
            END ELSE
              CLEAR(EmployeeRec);

            IF HourLineRec.FINDSET THEN BEGIN
              IF EmployeeRec."Account Hours" = EmployeeRec."Account Hours"::"Required according to Norm" THEN
                CheckNormHours;
              REPEAT
                IF HourLineRec."Total Line" <> 0 THEN BEGIN
                  IF ProjectSetup."Salary Application" <> ProjectSetup."Salary Application"::Multipay THEN BEGIN
                    CASE HourLineRec.Type OF
                      HourLineRec.Type::Project:
                        BEGIN
                          IF HourLineRec."Project No." = '' THEN
                            StoreMessage(STRSUBSTNO(Text004, HourLineRec.FIELDCAPTION("Project No.")));
                          IF HourLineRec."Cost Object" = '' THEN
                            StoreMessage(STRSUBSTNO(Text004, HourLineRec.FIELDCAPTION("Cost Object")));
                          IF ProjectSetup."Cost Component Mandatory" AND (HourLineRec."Cost Component" = '') THEN
                            StoreMessage(STRSUBSTNO(Text004, HourLineRec.FIELDCAPTION("Cost Component")));
                        END;
                      HourLineRec.Type::Service:
                        BEGIN
                          IF HourLineRec."Service Order No." = '' THEN
                            StoreMessage(STRSUBSTNO(Text004, HourLineRec.FIELDCAPTION("Service Order No.")));
                          IF HourLineRec."Cost Object" = '' THEN
                            StoreMessage(STRSUBSTNO(Text004, HourLineRec.FIELDCAPTION("Cost Object")));
                          ServiceSetup.GET;
                          IF ServiceSetup."Cost Component Mandatory" AND (HourLineRec."Cost Component" = '') THEN
                            StoreMessage(STRSUBSTNO(Text004, HourLineRec.FIELDCAPTION("Cost Component")));
                        END;
                      HourLineRec.Type::Indirect:
                        IF HourLineRec."Cost Code" = '' THEN
                          StoreMessage(STRSUBSTNO(Text004, HourLineRec.FIELDCAPTION("Cost Code")));
                    END;

      //              IF HourLineRec.Type <> HourLineRec.Type::Indirect THEN BEGIN
      //                GLSetup.GET;
      //                IF GLSetup."Cost Component Mandatory" AND (HourLineRec."Cost Component" = '') THEN
      //                  StoreMessage(STRSUBSTNO(Text004, HourLineRec.FIELDCAPTION("Cost Component")));
      //              END;

                  END;
                  IF (HourLineRec."Cost Type" <> HourLineRec."Cost Type"::Plant) THEN BEGIN
                    IF (HourLineRec."Employee No." = '') THEN
                      StoreMessage(STRSUBSTNO(Text004, HourLineRec.FIELDCAPTION("Employee No.")));

                    IF HourLineRec."Wage Component" = '' THEN
                      StoreMessage(STRSUBSTNO(Text004, HourLineRec.FIELDCAPTION("Wage Component")));
                  END;
                  IF HourLineRec."Project No." <> '' THEN BEGIN
                    ProjRec.CHANGECOMPANY(HourLineRec."Receiving Company");
                    ReceivingProjectSetup.CHANGECOMPANY(HourLineRec."Receiving Company");
                    ProjRec.GET(HourLineRec."Project No.");
                    IF ProjRec.Blocked <> ProjRec.Blocked::" " THEN
                      StoreMessage(STRSUBSTNO(
                        Text008,ProjRec.TABLECAPTION,HourLineRec."Project No.",
                        ProjRec.FIELDCAPTION(Blocked)));

                    IF (ReceivingProjectSetup."Provisions at Closure" AND
                         (ProjRec."Project Status" >= (ProjRec."Project Status"::Finished +1))) OR
                       (NOT ReceivingProjectSetup."Provisions at Closure" AND
                         (ProjRec."Project Status" >= (ProjRec."Project Status"::Finished -1)))
                    THEN
                      StoreMessage(STRSUBSTNO(
                        Text009,ProjRec.TABLECAPTION,HourLineRec."Project No.",
                        ProjRec.FIELDCAPTION("Project Status"),ProjRec."Project Status"));
                  END;
                END;
              UNTIL HourLineRec.NEXT = 0;
            END;
          UNTIL NEXT = 0;

        COMMIT;
        ErrorRec.SETRANGE("User ID", USERID);
        ErrorRec.SETRANGE("Source Type", ErrorRec."Source Type"::"Hours Accounting");
        IF ErrorRec.FINDFIRST THEN
          PAGE.RUNMODAL(PAGE::Errors, ErrorRec)
        ELSE
          MESSAGE(Text007);
        RESET;
      END;
    END;

    PROCEDURE CheckNormHours@1100485000();
    VAR
      CheckHourLine@1100528700 : Codeunit 11012003;
      ErrMsg@1100528701 : Text[1024];
    BEGIN
      WITH HourLineRec DO BEGIN
        //DJN 9-6-2011 19381
        IF ("Posting Date" < EmployeeRec."Employment Date") THEN
          EXIT;
        //DJN 9-6-2011 19381

        IF NOT CheckHourLine.CheckNormPostingHours(HourLineRec, FALSE, TRUE, ErrMsg) THEN
          StoreMessage(ErrMsg);
      END;
    END;

    PROCEDURE StoreMessage@7(lvMess@11012001 : Text[250]);
    VAR
      lvError@11012002 : Integer;
    BEGIN
      WITH ErrorRec DO BEGIN
        SETRANGE("User ID", USERID);
        SETRANGE("Source Type", "Source Type"::"Hours Accounting");
        IF FINDLAST THEN
          lvError := "Line No." + 1
        ELSE
          lvError := 1;

        INIT;
        "User ID" := USERID;
        "Source Type" := "Source Type"::"Hours Accounting";
        "Line No." := lvError;
        "Error message" := lvMess;
        "Employee No." := EmployeeRec."No.";
        "Document No." := HourAccRec."Document No.";
        "Posting Date" := HourAccRec."Posting Date";
        "Department Code" := EmployeeRec."Global Dimension 1 Code";
        INSERT;
      END;
    END;

    BEGIN
    END.
  }
}

