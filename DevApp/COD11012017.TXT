OBJECT Codeunit 11012017 Copy Item
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1100485000 : TextConst 'ENU=Item        #1################# @2@@@@@@@@@@@@@';
      DontCopySales@1100525001 : Boolean;
      DontCopyPurchase@1100525000 : Boolean;

    PROCEDURE CopyItem@1100485000(VAR ItemRec@1100485002 : Record 27;NewSeries@1100485001 : Code[20];NewItem@1100485004 : Code[20];NewDesc@1100485005 : Text[50];StoreLink@1100485003 : Boolean;CopySales@1100525001 : Boolean;CopyPurchase@1100525000 : Boolean);
    VAR
      ItemRec2@1100485000 : Record 27;
      LastItem@1100485006 : Code[20];
      NoSeriesMgt@1100485007 : Codeunit 396;
    BEGIN
      ItemRec2.COPY(ItemRec);
      ItemRec2."No." := NewItem;
      ItemRec2.VALIDATE(Description, NewDesc);
      ItemRec2."No. Series" := NewSeries;
      IF StoreLink THEN
        ItemRec2."Parent Item" := ItemRec."No."
      ELSE
        ItemRec2."Parent Item" := '';
      ItemRec2.INSERT(TRUE);

      IF NewSeries <> '' THEN BEGIN
        LastItem := NoSeriesMgt.GetNextNo(NewSeries,0D,FALSE);
        IF LastItem = NewItem THEN
          NewItem := NoSeriesMgt.GetNextNo(NewSeries,0D,TRUE);
      END;

      DontCopySales := (NOT CopySales);
      DontCopyPurchase := (NOT CopyPurchase);

      UpdateItem(ItemRec."No.", ItemRec2."No.");

      ItemRec2.VALIDATE("Global Dimension 1 Code", ItemRec."Global Dimension 1 Code");
      ItemRec2.VALIDATE("Global Dimension 2 Code", ItemRec."Global Dimension 2 Code");
      ItemRec2.MODIFY(TRUE);

      ItemRec.GET(ItemRec2."No.");
    END;

    PROCEDURE UpdateItem@2(ItemOld@1100485000 : Code[20];ItemNew@1100485001 : Code[20]);
    VAR
      CommentLine@1100485023 : Record 97;
      CommentLine2@1100485022 : Record 97;
      ItemVendor@1100485021 : Record 99;
      ItemVendor2@1100485020 : Record 99;
      ItemDescription@1100485019 : Record 30;
      ItemDescription2@1100485018 : Record 30;
      ItemUnit@1100485017 : Record 5404;
      ItemUnit2@1100485016 : Record 5404;
      ItemVariant@1100485015 : Record 5401;
      ItemVariant2@1100485014 : Record 5401;
      BOMComp@1100485013 : Record 90;
      BOMComp2@1100485012 : Record 90;
      TextHeader@1100485011 : Record 279;
      TextHeader2@1100485010 : Record 279;
      TextLine@1100485009 : Record 280;
      TextLine2@1100485008 : Record 280;
      ItemFeature@1100485007 : Record 11020301;
      ItemFeature2@1100485006 : Record 11020301;
      PurchPrice@1100485005 : Record 7012;
      PurchPrice2@1100485004 : Record 7012;
      PurchDisc@1100485003 : Record 7014;
      PurchDisc2@1100485002 : Record 7014;
      SalesPrice@1100485027 : Record 7002;
      SalesPrice2@1100485026 : Record 7002;
      SalesDisc@1100485025 : Record 7004;
      SalesDisc2@1100485024 : Record 7004;
      CopySales@1100525001 : Boolean;
      CopyPurchase@1100525000 : Boolean;
    BEGIN
      CopySales := (NOT DontCopySales);
      CopyPurchase := (NOT DontCopyPurchase);

      CommentLine.SETRANGE("Table Name", CommentLine."Table Name"::Item);
      CommentLine.SETRANGE("No.", ItemOld);
      IF CommentLine.FINDSET(FALSE, FALSE) THEN BEGIN
        REPEAT
          CommentLine2.COPY(CommentLine);
          CommentLine2."No." := ItemNew;
          CommentLine2.INSERT;
        UNTIL CommentLine.NEXT = 0;
      END;

      ItemVendor.SETRANGE("Item No.", ItemOld);
      IF ItemVendor.FINDSET(FALSE, FALSE) THEN BEGIN
        REPEAT
          ItemVendor2.COPY(ItemVendor);
          ItemVendor2."Item No." := ItemNew;
          ItemVendor2.INSERT;
        UNTIL ItemVendor.NEXT = 0;
      END;

      ItemDescription.SETRANGE("Item No.", ItemOld);
      IF ItemDescription.FINDSET(FALSE, FALSE) THEN BEGIN
        REPEAT
          ItemDescription2.COPY(ItemDescription);
          ItemDescription2."Item No." := ItemNew;
          ItemDescription2.INSERT;
        UNTIL ItemDescription.NEXT = 0;
      END;

      ItemUnit.SETRANGE("Item No.", ItemOld);
      IF ItemUnit.FINDSET(FALSE, FALSE) THEN BEGIN
        REPEAT
          ItemUnit2.COPY(ItemUnit);
          ItemUnit2."Item No." := ItemNew;
          ItemUnit2.INSERT;
        UNTIL ItemUnit.NEXT = 0;
      END;

      ItemVariant.SETRANGE("Item No.", ItemOld);
      IF ItemVariant.FINDSET(FALSE, FALSE) THEN BEGIN
        REPEAT
          ItemVariant2.COPY(ItemVariant);
          ItemVariant2."Item No." := ItemNew;
          ItemVariant2.INSERT;
        UNTIL ItemVariant.NEXT = 0;
      END;

      BOMComp.SETRANGE("Parent Item No.", ItemOld);
      IF BOMComp.FINDSET(FALSE, FALSE) THEN BEGIN
        REPEAT
          BOMComp2.COPY(BOMComp);
          BOMComp2."Parent Item No." := ItemNew;
          BOMComp2.INSERT;
        UNTIL BOMComp.NEXT = 0;
      END;

      TextHeader.SETRANGE("Table Name", TextHeader."Table Name"::Item);
      TextHeader.SETRANGE("No.", ItemOld);
      IF TextHeader.FINDSET(FALSE, FALSE) THEN BEGIN
        REPEAT
          TextHeader2.COPY(TextHeader);
          TextHeader2."No." := ItemNew;
          TextHeader2.INSERT;
        UNTIL TextHeader.NEXT = 0;
      END;

      TextLine.SETRANGE("No.", ItemOld);
      IF TextLine.FINDSET(FALSE, FALSE) THEN BEGIN
        REPEAT
          TextLine2.COPY(TextLine);
          TextLine2."No." := ItemNew;
          TextLine2.INSERT;
        UNTIL TextLine.NEXT = 0;
      END;

      IF ItemFeature.READPERMISSION THEN BEGIN
        ItemFeature.SETRANGE("Item No.", ItemOld);
        IF ItemFeature.FINDSET(FALSE, FALSE) THEN BEGIN
          REPEAT
            ItemFeature2.COPY(ItemFeature);
            ItemFeature2."Item No." := ItemNew;
            ItemFeature2.INSERT;
          UNTIL ItemFeature.NEXT = 0;
        END;
      END;

      IF CopyPurchase THEN BEGIN
        IF PurchPrice.READPERMISSION THEN BEGIN
          PurchPrice.SETRANGE("Item No.", ItemOld);
          IF PurchPrice.FINDSET(FALSE, FALSE) THEN BEGIN
            REPEAT
              PurchPrice2.COPY(PurchPrice);
              PurchPrice2."Item No." := ItemNew;
              PurchPrice2.INSERT(TRUE);  //db, 18-06-14: C012247
            UNTIL PurchPrice.NEXT = 0;
          END;
        END;

        IF PurchDisc.READPERMISSION THEN BEGIN
          PurchDisc.SETRANGE("Item No.", ItemOld);
          IF PurchDisc.FINDSET(FALSE, FALSE) THEN BEGIN
            REPEAT
              PurchDisc2.COPY(PurchDisc);
              PurchDisc2."Item No." := ItemNew;
              PurchDisc2.INSERT(TRUE);  //db, 18-06-14: C012247
            UNTIL PurchDisc.NEXT = 0;
          END;
        END;
      END;

      IF CopySales THEN BEGIN
        IF SalesPrice.READPERMISSION THEN BEGIN
          SalesPrice.SETRANGE("Item No.", ItemOld);
          IF SalesPrice.FINDSET(FALSE, FALSE) THEN BEGIN
            REPEAT
              SalesPrice2.COPY(SalesPrice);
              SalesPrice2."Item No." := ItemNew;
              SalesPrice2.INSERT(TRUE);  //db, 18-06-14: C012247
            UNTIL SalesPrice.NEXT = 0;
          END;
        END;

        IF SalesDisc.READPERMISSION THEN BEGIN
          SalesDisc.SETRANGE(Type, SalesDisc.Type::Item);
          SalesDisc.SETRANGE(Code, ItemOld);
          IF SalesDisc.FINDSET(FALSE, FALSE) THEN BEGIN
            REPEAT
              SalesDisc2.COPY(SalesDisc);
              SalesDisc2.Code := ItemNew;
              SalesDisc2.INSERT(TRUE);  //db, 18-06-14: C012247
            UNTIL SalesDisc.NEXT = 0;
          END;
        END;
      END;
    END;

    PROCEDURE UpdateFromParent@1100485001(lvItem@1100485001 : Code[20]);
    VAR
      ItemRec@1100485000 : Record 27;
      BOMComp@1100485007 : Record 90;
      BOMComp2@1100485006 : Record 90;
      PurchPrice@1100485005 : Record 7012;
      PurchPrice2@1100485004 : Record 7012;
      PurchDisc@1100485003 : Record 7014;
      PurchDisc2@1100485002 : Record 7014;
      SalesPrice@1100485014 : Record 7002;
      SalesPrice2@1100485015 : Record 7002;
      SalesDisc@1100485013 : Record 7004;
      SalesDisc2@1100485016 : Record 7004;
      ItemVendor@1100485009 : Record 99;
      ItemVendor2@1100485008 : Record 99;
      Status@1100485012 : Dialog;
      currec@1100485011 : Integer;
      maxrec@1100485010 : Integer;
    BEGIN
      Status.OPEN(Text000);
      currec := 0;

      ItemRec.SETRANGE("Parent Item", lvItem);
      IF ItemRec.FINDSET(FALSE, FALSE) THEN BEGIN
        maxrec := ItemRec.COUNT;
        REPEAT
          BOMComp2.SETRANGE("Parent Item No.", ItemRec."No.");
          BOMComp2.DELETEALL;

          BOMComp.SETRANGE("Parent Item No.", lvItem);
          IF BOMComp.FINDSET(FALSE, FALSE) THEN BEGIN
            REPEAT
              BOMComp2.COPY(BOMComp);
              BOMComp2."Parent Item No." := ItemRec."No.";
              BOMComp2.INSERT;
            UNTIL BOMComp.NEXT = 0;
          END;

          ItemVendor.SETRANGE("Item No.", ItemRec."No.");
          ItemVendor.DELETEALL;

          ItemVendor.SETRANGE("Item No.", lvItem);
          IF ItemVendor.FINDSET(FALSE, FALSE) THEN BEGIN
            REPEAT
              ItemVendor2.COPY(ItemVendor);
              ItemVendor2."Item No." := ItemRec."No.";
              ItemVendor2.INSERT;
            UNTIL ItemVendor.NEXT = 0;
          END;

          IF PurchPrice.READPERMISSION THEN BEGIN
            PurchPrice2.SETRANGE("Item No.", ItemRec."No.");
            PurchPrice2.DELETEALL;

            PurchPrice.SETRANGE("Item No.", lvItem);
            IF PurchPrice.FINDSET(FALSE, FALSE) THEN BEGIN
              REPEAT
                PurchPrice2.COPY(PurchPrice);
                PurchPrice2."Item No." := ItemRec."No.";
                PurchPrice2.INSERT;
              UNTIL PurchPrice.NEXT = 0;
            END;
          END;

          IF PurchDisc.READPERMISSION THEN BEGIN
            PurchDisc2.SETRANGE("Item No.", ItemRec."No.");
            PurchDisc2.DELETEALL;

            PurchDisc.SETRANGE("Item No.", lvItem);
            IF PurchDisc.FINDSET(FALSE, FALSE) THEN BEGIN
              REPEAT
                PurchDisc2.COPY(PurchDisc);
                PurchDisc2."Item No." := ItemRec."No.";
                PurchDisc2.INSERT;
              UNTIL PurchDisc.NEXT = 0;
            END;
          END;

          IF SalesPrice.READPERMISSION THEN BEGIN
            SalesPrice2.SETRANGE("Item No.", ItemRec."No.");
            SalesPrice2.DELETEALL;

            SalesPrice.SETRANGE("Item No.", lvItem);
            IF SalesPrice.FINDSET(FALSE, FALSE) THEN BEGIN
              REPEAT
                SalesPrice2.COPY(SalesPrice);
                SalesPrice2."Item No." := ItemRec."No.";
                SalesPrice2.INSERT;
              UNTIL SalesPrice.NEXT = 0;
            END;
          END;

          IF SalesDisc.READPERMISSION THEN BEGIN
            SalesDisc2.SETRANGE(Type, SalesDisc2.Type::Item);
            SalesDisc2.SETRANGE(Code, ItemRec."No.");
            SalesDisc2.DELETEALL;

            SalesDisc.SETRANGE(Type, SalesDisc.Type::Item);
            SalesDisc.SETRANGE(Code, lvItem);
            IF SalesDisc.FINDSET(FALSE, FALSE) THEN BEGIN
              REPEAT
                SalesDisc2.COPY(SalesDisc);
                SalesDisc2.Code := ItemRec."No.";
                SalesDisc2.INSERT;
              UNTIL SalesDisc.NEXT = 0;
            END;
          END;

          currec := currec + 1;
          Status.UPDATE(1, ItemRec."No.");
          Status.UPDATE(2,ROUND(currec / maxrec * 10000,1));
        UNTIL ItemRec.NEXT = 0;
      END;

      Status.CLOSE;
    END;

    BEGIN
    END.
  }
}

