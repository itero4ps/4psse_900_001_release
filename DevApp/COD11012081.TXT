OBJECT Codeunit 11012081 Managemind Process Management
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    Permissions=TableData 25=rimd,
                TableData 122=rimd,
                TableData 124=rimd;
    OnRun=BEGIN
            CASE ProcessType OF
              ProcessType::"Process Invoice":
                ProcessSingleInvoice(ScannedInvoicesManagemind);
              ProcessType::"Process On Hold":
                ProcessSingleOnHold(ScannedInvoicesManagemind);
            END;
          END;

  }
  CODE
  {
    VAR
      Text000@1100485000 : TextConst 'ENU=Combination VAT Bus. Posting Group %1 and VAT Prod. Posting Group %2 is not Manually.';
      ProcessType@1100525001 : ' ,Process Invoice LIP,Process Invoice,Process On Hold';
      ScannedInvoicesManagemind@1100525000 : Record 11012133;

    PROCEDURE ProcessInvoicesLIP@1100485002();
    VAR
      InvoiceCounter@1100485003 : Integer;
      ScannedInvoicesRec@1100485002 : Record 11012135;
      PurchHeaderrec@1100485001 : Record 38;
    BEGIN
      ScannedInvoicesRec.SETRANGE(Processed,FALSE);
      ScannedInvoicesRec.SETRANGE("Document No.",'');
      IF ScannedInvoicesRec.FIND('-') THEN BEGIN
        REPEAT
          CLEAR(PurchHeaderrec);
          PurchHeaderrec.INIT;
          IF ScannedInvoicesRec."Amount incl. VAT" >= 0 THEN
            PurchHeaderrec."Document Type" := PurchHeaderrec."Document Type"::Invoice
          ELSE
           PurchHeaderrec."Document Type" := PurchHeaderrec."Document Type"::"Credit Memo";
          PurchHeaderrec.INSERT(TRUE);
          InvoiceCounter := InvoiceCounter + 1;
          PurchHeaderrec.VALIDATE("Buy-from Vendor No.",ScannedInvoicesRec."Buy-from Vendor No.");
          PurchHeaderrec.VALIDATE("Vendor Invoice No.",ScannedInvoicesRec."Vendor Invoice No.");
          PurchHeaderrec.VALIDATE("Document Date",ScannedInvoicesRec."Invoice Date");
          PurchHeaderrec.VALIDATE("Posting Date",ScannedInvoicesRec."Invoice Date");
          PurchHeaderrec.VALIDATE("Job No.",ScannedInvoicesRec."Project No.");
          //PurchHeaderrec.VALIDATE("Related Purch. Order No.",ScannedInvoicesRec."Purchase Order");
          PurchHeaderrec.VALIDATE("VAT Prod. Posting Group",ScannedInvoicesRec."VAT Prod. Posting Group");
          PurchHeaderrec.VALIDATE("Amount incl. VAT",ScannedInvoicesRec."Amount incl. VAT");
          PurchHeaderrec.VALIDATE("Ext. Document ID", ScannedInvoicesRec."DM Document No.");
          PurchHeaderrec.MODIFY(TRUE);
          ScannedInvoicesRec."Document No." := PurchHeaderrec."No.";
          ScannedInvoicesRec.Processed := TRUE;
          ScannedInvoicesRec."Processing date" := TODAY;
          ScannedInvoicesRec."Processed by" := USERID;
          ScannedInvoicesRec.MODIFY;
          COMMIT;
        UNTIL ScannedInvoicesRec.NEXT = 0;
      END;
    END;

    PROCEDURE ProcessInvoices@1100485000();
    VAR
      ScannedInvoicesRec@1100485001 : Record 11012133;
      ManagemindProcessManagementCU@1100525003 : Codeunit 11012081;
      ErrorRec@1100525002 : Record 11012051;
      ErrorMessage@1100525001 : Text[250];
      LineNo@1100525000 : Integer;
    BEGIN
      ScannedInvoicesRec.SETRANGE(Processed,FALSE);
      ScannedInvoicesRec.SETRANGE("Document No.",'');
      IF ScannedInvoicesRec.FIND('-') THEN BEGIN
        REPEAT
          ManagemindProcessManagementCU.InitProcessInvoices(ScannedInvoicesRec);
          IF NOT ManagemindProcessManagementCU.RUN THEN BEGIN
            ErrorMessage := COPYSTR(GETLASTERRORTEXT, 1, MAXSTRLEN(ErrorMessage));
            CLEARLASTERROR;

            LineNo += 1;
            ErrorRec.INIT;
            ErrorRec."User ID" := USERID;
            ErrorRec."Source Type" := ErrorRec."Source Type"::"Managemind Invoices";
            ErrorRec."Line No." := LineNo;
            ErrorRec."Document No." := ScannedInvoicesRec."Vendor Invoice No.";
            ErrorRec."Vendor No." := ScannedInvoicesRec."Buy-from Vendor No.";
            ErrorRec."Error message" := ErrorMessage;
            ErrorRec.INSERT;
          END;
          COMMIT;
        UNTIL ScannedInvoicesRec.NEXT = 0;
        ErrorRec.SETRANGE("User ID", USERID);
        ErrorRec.SETRANGE("Source Type", ErrorRec."Source Type"::"Managemind Invoices");
        IF (GUIALLOWED) AND (ErrorRec.COUNT > 0) THEN
          PAGE.RUNMODAL(PAGE::Errors, ErrorRec);
      END;
    END;

    PROCEDURE ProcessSingleInvoice@1100525000(IScannedInvoicesRec@1100525000 : Record 11012133);
    VAR
      PurchHeaderrec@1100525006 : Record 38;
      VATPostSetupRec@1100525005 : Record 325;
      PurchOrderHeadRec@1100525004 : Record 38;
      ScanAppsSetup@1100525003 : Record 11012134;
      PurchaseSetup@1100525002 : Record 312;
      NoSeriesMgt@1100525001 : Codeunit 396;
      UseDate@1100525007 : Date;
    BEGIN
      ScanAppsSetup.GET;
      PurchaseSetup.GET;

      //CALL C006089 sn
      IF PurchaseSetup."Use Doc. Date as Posting Date" THEN
        UseDate := IScannedInvoicesRec."Document Date"
      ELSE
        UseDate := IScannedInvoicesRec."Posting Date";

      IF UseDate = 0D THEN
        UseDate := WORKDATE;
      //CALL C006089 en

      CLEAR(PurchHeaderrec);
      PurchHeaderrec.INIT;
      IF IScannedInvoicesRec."Amount incl. VAT" >= 0 THEN BEGIN
        PurchHeaderrec."Document Type" := PurchHeaderrec."Document Type"::Invoice;
        IF ScanAppsSetup."Scanned Invoice Nos." <> '' THEN BEGIN
          ScanAppsSetup.TESTFIELD("Posted Scanned Invoice Nos.");
      //  PurchHeaderrec."No." := NoSeriesMgt.GetNextNo(ScanAppsSetup."Scanned Invoice Nos.",WORKDATE,TRUE);   CALL C006089 old
          PurchHeaderrec."No." := NoSeriesMgt.GetNextNo(ScanAppsSetup."Scanned Invoice Nos.",UseDate,TRUE);  //CALL C006089 new
          PurchHeaderrec."No. Series" := ScanAppsSetup."Scanned Invoice Nos.";
          PurchHeaderrec."Posting No. Series" := ScanAppsSetup."Posted Scanned Invoice Nos.";
        END;
      END ELSE BEGIN
        PurchHeaderrec."Document Type" := PurchHeaderrec."Document Type"::"Credit Memo";
        IF ScanAppsSetup."Scanned Credit Memo Nos." <> '' THEN BEGIN
          ScanAppsSetup.TESTFIELD("Posted Scanned Credit Memo Nos");
      //  PurchHeaderrec."No." := NoSeriesMgt.GetNextNo(ScanAppsSetup."Scanned Credit Memo Nos.",WORKDATE,TRUE);  CALL C006089 old
          PurchHeaderrec."No." := NoSeriesMgt.GetNextNo(ScanAppsSetup."Scanned Credit Memo Nos.",UseDate,TRUE); //CALL C006089 new
          PurchHeaderrec."No. Series" := ScanAppsSetup."Scanned Credit Memo Nos.";
          PurchHeaderrec."Posting No. Series" := ScanAppsSetup."Posted Scanned Credit Memo Nos";
        END;
      END;
      PurchHeaderrec.INSERT(TRUE);
      //InvoiceCounter := InvoiceCounter + 1;
      PurchHeaderrec.VALIDATE("Buy-from Vendor No.",IScannedInvoicesRec."Buy-from Vendor No.");

      IF PurchaseSetup."Use Doc. Date as Posting Date" THEN
        PurchHeaderrec.VALIDATE("Posting Date",IScannedInvoicesRec."Document Date")
      ELSE
        PurchHeaderrec.VALIDATE("Posting Date",IScannedInvoicesRec."Posting Date");

      PurchHeaderrec.VALIDATE("Document Date",IScannedInvoicesRec."Document Date");
      PurchHeaderrec.VALIDATE("Job No.",IScannedInvoicesRec."Project No.");
      PurchHeaderrec.VALIDATE("Service Order No.",IScannedInvoicesRec."Service Order No."); //tz
      PurchHeaderrec.VALIDATE("Related Purch. Order No.",IScannedInvoicesRec."Purchase Order");
      IF PurchHeaderrec."Subcontracting Invoice" THEN
        IF PurchOrderHeadRec.GET(PurchOrderHeadRec."Document Type"::Order,PurchHeaderrec."Related Purch. Order No.") THEN
          IF PurchOrderHeadRec."Payment Agreement" <> '' THEN
            PurchHeaderrec.VALIDATE("Payment Agreement",PurchOrderHeadRec."Payment Agreement");
      IF IScannedInvoicesRec."Shortcut Dimension 2 Code" <> '' THEN
        PurchHeaderrec.VALIDATE("Shortcut Dimension 2 Code",IScannedInvoicesRec."Shortcut Dimension 2 Code");
      PurchHeaderrec.VALIDATE("VAT Prod. Posting Group",IScannedInvoicesRec."VAT Prod. Posting Group");
      PurchHeaderrec.VALIDATE("On Hold",IScannedInvoicesRec."On Hold");
      PurchHeaderrec."Input by" := IScannedInvoicesRec."Scanned by";
      PurchHeaderrec."Input Date" := TODAY;

      IF PurchHeaderrec."Document Type" = PurchHeaderrec."Document Type"::"Credit Memo" THEN
        PurchHeaderrec.VALIDATE("Vendor Cr. Memo No.",IScannedInvoicesRec."Vendor Invoice No.")
      ELSE BEGIN
        PurchHeaderrec.VALIDATE("Ext. Document ID",IScannedInvoicesRec."Vendor Invoice No.");
        PurchHeaderrec.VALIDATE("Vendor Invoice No.",IScannedInvoicesRec."Vendor Invoice No.");
      END;
      IF IScannedInvoicesRec."Manually VAT Posting" THEN BEGIN
        VATPostSetupRec.GET(PurchHeaderrec."VAT Bus. Posting Group",PurchHeaderrec."VAT Prod. Posting Group");
        IF NOT VATPostSetupRec.Manually THEN
          ERROR(STRSUBSTNO(Text000,PurchHeaderrec."VAT Bus. Posting Group",PurchHeaderrec."VAT Prod. Posting Group"));
        IF PurchHeaderrec."Document Type" = PurchHeaderrec."Document Type"::"Credit Memo" THEN BEGIN
          PurchHeaderrec.VALIDATE("Amount excl. VAT",IScannedInvoicesRec."Amount excl. VAT" * -1);
          PurchHeaderrec.VALIDATE("VAT Amount",IScannedInvoicesRec."VAT Amount" * -1);
          PurchHeaderrec.VALIDATE("Amount incl. VAT",IScannedInvoicesRec."Amount incl. VAT" * -1);
        END ELSE BEGIN
          PurchHeaderrec.VALIDATE("Amount excl. VAT",IScannedInvoicesRec."Amount excl. VAT");
          PurchHeaderrec.VALIDATE("VAT Amount",IScannedInvoicesRec."VAT Amount");
          PurchHeaderrec.VALIDATE("Amount incl. VAT",IScannedInvoicesRec."Amount incl. VAT");
        END;
      END ELSE
        IF PurchHeaderrec."Document Type" = PurchHeaderrec."Document Type"::"Credit Memo" THEN
          PurchHeaderrec.VALIDATE("Amount incl. VAT",IScannedInvoicesRec."Amount incl. VAT" * -1)
        ELSE
          PurchHeaderrec.VALIDATE("Amount incl. VAT",IScannedInvoicesRec."Amount incl. VAT");
      PurchHeaderrec.MODIFY(TRUE);

      IScannedInvoicesRec."Document No." := PurchHeaderrec."No.";
      IScannedInvoicesRec.Processed := TRUE;
      IScannedInvoicesRec."Processing date" := TODAY;
      IScannedInvoicesRec."Processed by" := USERID;
      IScannedInvoicesRec.MODIFY;
      ProcessType := ProcessType::" ";
    END;

    PROCEDURE ProcessOnHold@1100485003();
    VAR
      ScannedInvoicesRec@1100485000 : Record 11012133;
      ManagemindProcessManagementCU@1100525003 : Codeunit 11012081;
      ErrorMessage@1100525002 : Text[250];
      LineNo@1100525001 : Integer;
      ErrorRec@1100525000 : Record 11012051;
    BEGIN
      ScannedInvoicesRec.SETRANGE(Processed,FALSE);
      ScannedInvoicesRec.SETFILTER("Document No.",'<>%1','');

      IF ScannedInvoicesRec.FIND('-') THEN BEGIN
        REPEAT
          ManagemindProcessManagementCU.InitProcessOnHold(ScannedInvoicesRec);
          IF NOT ManagemindProcessManagementCU.RUN THEN BEGIN
            ErrorMessage := COPYSTR(GETLASTERRORTEXT, 1, MAXSTRLEN(ErrorMessage));
            CLEARLASTERROR;

            LineNo += 1;
            ErrorRec.INIT;
            ErrorRec."User ID" := USERID;
            ErrorRec."Source Type" := ErrorRec."Source Type"::"Managemind Invoices";
            ErrorRec."Line No." := LineNo;
            ErrorRec."Document No." := ScannedInvoicesRec."Vendor Invoice No.";
            ErrorRec."Vendor No." := ScannedInvoicesRec."Buy-from Vendor No.";
            ErrorRec."Error message" := ErrorMessage;
            ErrorRec.INSERT;
          END;
          COMMIT;
        UNTIL ScannedInvoicesRec.NEXT = 0;
        ErrorRec.SETRANGE("User ID", USERID);
        ErrorRec.SETRANGE("Source Type", ErrorRec."Source Type"::"Managemind Invoices");
        IF (GUIALLOWED) AND (ErrorRec.COUNT > 0) THEN
          PAGE.RUNMODAL(PAGE::Errors, ErrorRec);
      END;
    END;

    PROCEDURE ProcessSingleOnHold@1100525009(IScannedInvoicesRec@1100525000 : Record 11012133);
    VAR
      PurchCreditMemoHdr@1100525003 : Record 124;
      PurchInvHeader@1100525002 : Record 122;
      PurchHeader@1100525001 : Record 38;
    BEGIN
      IF IScannedInvoicesRec."Amount excl. VAT" > 0 THEN BEGIN
        PurchInvHeader.SETCURRENTKEY("Pre-Assigned No.");
        PurchInvHeader.SETRANGE("Pre-Assigned No.",IScannedInvoicesRec."Document No.");
        IF PurchInvHeader.FIND('-') THEN BEGIN
          IF PurchInvHeader."Pay-to Vendor No." <> PurchInvHeader."Buy-from Vendor No." THEN
            ModifyVendLedger(PurchInvHeader."No.",0,PurchInvHeader."Pay-to Vendor No.",IScannedInvoicesRec."On Hold")
          ELSE
            ModifyVendLedger(PurchInvHeader."No.",0,IScannedInvoicesRec."Buy-from Vendor No.",IScannedInvoicesRec."On Hold");
        END ELSE BEGIN
          IF PurchHeader.GET(PurchHeader."Document Type"::Invoice,IScannedInvoicesRec."Document No.") THEN BEGIN
            PurchHeader.VALIDATE("On Hold",IScannedInvoicesRec."On Hold");
            PurchHeader.MODIFY;
          END;
        END;
      END ELSE BEGIN
        PurchCreditMemoHdr.SETCURRENTKEY("Pre-Assigned No.");
        PurchCreditMemoHdr.SETRANGE("Pre-Assigned No.",IScannedInvoicesRec."Document No.");
        IF PurchCreditMemoHdr.FIND('-') THEN BEGIN
          IF PurchCreditMemoHdr."Pay-to Vendor No." <> PurchCreditMemoHdr."Buy-from Vendor No." THEN
            ModifyVendLedger(PurchCreditMemoHdr."No.",1,PurchCreditMemoHdr."Pay-to Vendor No.",IScannedInvoicesRec."On Hold")
          ELSE
            ModifyVendLedger(PurchCreditMemoHdr."No.",1,IScannedInvoicesRec."Buy-from Vendor No.",IScannedInvoicesRec."On Hold");
        END ELSE BEGIN
          IF PurchHeader.GET(PurchHeader."Document Type"::"Credit Memo",IScannedInvoicesRec."Document No.") THEN BEGIN
            PurchHeader.VALIDATE("On Hold",IScannedInvoicesRec."On Hold");
            PurchHeader.MODIFY;
          END;
        END;
      END;
      IScannedInvoicesRec.Processed := TRUE;
      IScannedInvoicesRec.MODIFY;
      ProcessType := ProcessType::" ";
    END;

    PROCEDURE ModifyVendLedger@1100485015(DocNo@1100485000 : Code[20];DocType@1100485001 : Integer;VendorCde@1100485002 : Code[20];OnHoldCde@1100485004 : Code[20]);
    VAR
      VendLedgRec@1100485003 : Record 25;
    BEGIN
      VendLedgRec.SETCURRENTKEY("Document No.");
      VendLedgRec.SETRANGE("Vendor No.",VendorCde);
      VendLedgRec.SETRANGE("Document No.",DocNo);
      IF DocType = 0 THEN
        VendLedgRec.SETRANGE("Document Type",VendLedgRec."Document Type"::Invoice)
      ELSE
        VendLedgRec.SETRANGE("Document Type",VendLedgRec."Document Type"::"Credit Memo");
      IF VendLedgRec.FIND('-') THEN BEGIN
        VendLedgRec.VALIDATE("On Hold",OnHoldCde);
        VendLedgRec.MODIFY;
      END;
    END;

    PROCEDURE CheckPostingGroup@1100485001(VAR PurchHeaderrec@1100485001 : Record 38;VAR ScannedInvoicesRec@1100485002 : Record 11012133) : Boolean;
    BEGIN
      PurchHeaderrec.VALIDATE("VAT Prod. Posting Group",ScannedInvoicesRec."VAT Prod. Posting Group")
    END;

    PROCEDURE InitProcessInvoices@1100525001(IScannedInvoicesManagemind@1100525000 : Record 11012133);
    BEGIN
      ProcessType := ProcessType::"Process Invoice";
      ScannedInvoicesManagemind := IScannedInvoicesManagemind;
    END;

    PROCEDURE InitProcessOnHold@1100525010(IScannedInvoicesManagemind@1100525000 : Record 11012133);
    BEGIN
      ProcessType := ProcessType::"Process On Hold";
      ScannedInvoicesManagemind := IScannedInvoicesManagemind;
    END;

    BEGIN
    {
      4PS01 JD 29-04-2009 Call C-016509 Locking problem on SQL-server
    }
    END.
  }
}

