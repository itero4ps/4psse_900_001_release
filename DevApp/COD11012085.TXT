OBJECT Codeunit 11012085 EP Update Hour Acc. Type
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            IF CONFIRM(Text0001,TRUE) THEN BEGIN
              //Aantallen resetten...
              NoOfJobsInt                 := 0;
              NoOfJobsSkippedInt          := 0;
              NoOfServiceOrdersInt        := 0;
              NoOfServiceOrdersSkippedInt := 0;
              NoOfCostCodesInt            := 0;
              NoOfCostCodesSkippedInt     := 0;

              //Projecten toevoegen...
              JobRec.RESET;
              JobRec.SETFILTER("Project Status",'<> %1',JobRec."Project Status"::Finished);
              IF JobRec.FINDSET THEN BEGIN
                REPEAT
                  HourAccountingTypeRec.INIT;
                  HourAccountingTypeRec.Type  := HourAccountingTypeRec.Type::Project;
                  HourAccountingTypeRec."No." := JobRec."No.";
                  IF HourAccountingTypeRec.INSERT(TRUE) THEN BEGIN
                    HourAccountingTypeRec.Description := JobRec.Description;
                    HourAccountingTypeRec.MODIFY;
                    NoOfJobsInt += 1;
                  END ELSE BEGIN
                    NoOfJobsSkippedInt += 1;
                  END;

                UNTIL JobRec.NEXT <=0;
              END;

              //Service Orders Toevoegen...
              ServiceOrderRec.RESET;
              ServiceOrderRec.SETFILTER(Status,'< %1',ServiceOrderRec.Status::Finished);
              IF ServiceOrderRec.FINDSET THEN BEGIN
                REPEAT
                  HourAccountingTypeRec.INIT;
                  HourAccountingTypeRec.Type  := HourAccountingTypeRec.Type::Service;
                  HourAccountingTypeRec."No." := ServiceOrderRec."No.";
                  IF HourAccountingTypeRec.INSERT(TRUE) THEN BEGIN
                    HourAccountingTypeRec.Description := ServiceOrderRec.Description;
                    HourAccountingTypeRec.MODIFY;
                    NoOfServiceOrdersInt += 1;
                  END ELSE BEGIN
                    NoOfServiceOrdersSkippedInt +=1;
                  END;

                UNTIL ServiceOrderRec.NEXT <=0;
              END;

              //Kostencodes Toevoegen...
              CostCodeRec.RESET;
              IF CostCodeRec.FINDSET THEN BEGIN
                REPEAT
                  HourAccountingTypeRec.INIT;
                  HourAccountingTypeRec.Type  := HourAccountingTypeRec.Type::Indirect;
                  HourAccountingTypeRec."No." := CostCodeRec.Code;
                  IF HourAccountingTypeRec.INSERT(TRUE) THEN BEGIN
                    HourAccountingTypeRec.Description := CostCodeRec.Description;
                    HourAccountingTypeRec.MODIFY;
                    NoOfCostCodesInt += 1;
                  END ELSE BEGIN
                    NoOfCostCodesSkippedInt +=1;
                  END;
                UNTIL ServiceOrderRec.NEXT <=0;
              END;

              MESSAGE(Text0002,NoOfJobsInt,NoOfJobsSkippedInt,
                               NoOfServiceOrdersInt,NoOfServiceOrdersSkippedInt,
                               NoOfCostCodesInt,NoOfCostCodesSkippedInt)
            END;
          END;

  }
  CODE
  {
    VAR
      CostCodeRec@1100485009 : Record 11012083;
      HourAccountingTypeRec@1100485000 : Record 11012206;
      JobRec@1100485001 : Record 11072003;
      ServiceOrderRec@1100485002 : Record 11012823;
      NoOfJobsInt@1100485003 : Integer;
      NoOfJobsSkippedInt@1100485005 : Integer;
      NoOfServiceOrdersInt@1100485004 : Integer;
      NoOfServiceOrdersSkippedInt@1100485006 : Integer;
      NoOfCostCodesInt@1100485007 : Integer;
      NoOfCostCodesSkippedInt@1100485008 : Integer;
      Text0001@1100485010 : TextConst 'ENU=Do you want to insert Jobs, Service Orders and Cost Codes?';
      Text0002@1100485011 : TextConst 'ENU=Finished.\     - Jobs (%1 entered - %2 skipped)\     - Service Orders (%3 entered - %4 skipped)\     - Cost Codes (%5 entered - %6 skipped)';

    BEGIN
    END.
  }
}

