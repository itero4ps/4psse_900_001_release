OBJECT Codeunit 11012265 Internal Charge Mgt
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      gInternalCounter@1210190005 : Integer;
      NextLineNo@1210190014 : Integer;
      gInsertFirst@1100409001 : Boolean;
      UseCostObjectRelIC@1100529000 : Boolean;
      UseOrigCostObject@1100529003 : Boolean;
      CostObjectInternChargeRev@1100529002 : Code[20];
      CostObjectInternChargeCost@1100529001 : Code[20];

    PROCEDURE GetNumInternalCharges@1210190002() : Integer;
    BEGIN
      EXIT(gInternalCounter);
    END;

    PROCEDURE ShowSourceTypeInternalCharge@1210190003(iSourceType@1210190005 : Integer;iProject@1210190000 : Code[20]);
    VAR
      ProjRec@1210190003 : Record 11072003;
      ServOrderRec@1210190001 : Record 11012823;
      ServOrderExtensionRec@1210190002 : Record 11071727;
    BEGIN
      // Input 'iProject' is the current ProjectNo, if this is a Master Project then the internal projects (or Service Orders) of
      // this Master Project will be shown.
      // Note (DP00847): Only for projects (SO's) that are in the same company as the Master Project .
      IF iSourceType = 1 THEN BEGIN
        ProjRec.SETRANGE("Internal Project", TRUE);
        ProjRec.SETRANGE("Master Project", iProject);
        PAGE.RUNMODAL(0, ProjRec);
      END;
      //IF iSourceType = 2 THEN BEGIN  // '2' Not used since Service Objects
      IF iSourceType = 3 THEN BEGIN
        ServOrderExtensionRec.SETRANGE("Master Project", iProject);
        IF ServOrderExtensionRec.FINDSET THEN BEGIN
          REPEAT
            IF ServOrderRec.GET(ServOrderExtensionRec."Service Order No.") THEN
              ServOrderRec.MARK(TRUE);
          UNTIL ServOrderExtensionRec.NEXT = 0;
          //ServOrderRec.MARKEDONLY(TRUE);
        END;
        ServOrderRec.MARKEDONLY(TRUE);
        PAGE.RUNMODAL(0, ServOrderRec);
      END;
    END;

    PROCEDURE InsertTempGLEntry@1100409000(iRunType@1100529008 : 'Project,Service';iOrigNo@1210190011 : Code[20];iDescription@1100525000 : Text[50];iDescription2@1210190007 : Text[50];iQuantity@1100525004 : Decimal;iAmount@1100525002 : Decimal;iCostObject@1210190000 : Code[20];iCostComponent@1210190016 : Code[20];iElement@1100525001 : Code[20];VAR TempGenJnlLine@1100409000 : TEMPORARY Record 81;VAR TmpIcEntry@1100529009 : TEMPORARY Record 11012058);
    VAR
      ProjSetup@1210190004 : Record 315;
      ServSetup@1210190017 : Record 11012800;
      DestProjRec@1210190001 : Record 11072003;
      DestElemRec@1210190024 : Record 11012010;
      OrigProjRec@1210190006 : Record 11072003;
      OrigContractRec@1210190018 : Record 11012812;
      OrigServOrderRec@1210190022 : Record 11071727;
      IcRel@1100529001 : Record 11012057;
      DimValRec@1210190013 : Record 349;
      DimMgt@1210190019 : Codeunit 408;
      CostObjectMaster@1100529007 : Code[20];
      MasterProject@1100529000 : Code[20];
      MasterElement@1100529003 : Code[20];
      MasterCompany@1100529002 : Text[30];
    BEGIN
      IF gInsertFirst = FALSE THEN BEGIN
        ProjSetup.GET;
        IF iRunType = iRunType::Project THEN BEGIN
          CostObjectInternChargeCost := ProjSetup."Cost Object Intern Charge Cost";
          CostObjectInternChargeRev := ProjSetup."Cost Object Intern Charge Rev";
          UseOrigCostObject := ProjSetup."Orig.Cost Object Intern Charge";
        END;
        IF iRunType = iRunType::Service THEN BEGIN
          ServSetup.GET;
          CostObjectInternChargeCost := ServSetup."Cost Object Intern Charge Cost";
          CostObjectInternChargeRev := ServSetup."Cost Object Intern Charge Rev";
          UseOrigCostObject := ServSetup."Orig.Cost Object Intern Charge";
        END;
        UseCostObjectRelIC := ProjSetup."Use C.Obj. Rel. S-P Int.Charge";  //DP00847.n
        NextLineNo := 1;
        gInsertFirst := TRUE;
      END;

      IF iRunType = iRunType::Project THEN BEGIN
        OrigProjRec.GET(iOrigNo);
        IF OrigProjRec."Cost Object Inter Project Cost" <> '' THEN
          CostObjectInternChargeCost := OrigProjRec."Cost Object Inter Project Cost";
        IF OrigProjRec."Cost Object Inter Project Rev" <> '' THEN
          CostObjectInternChargeRev := OrigProjRec."Cost Object Inter Project Rev";
      END;
      IF iRunType = iRunType::Service THEN BEGIN
        OrigServOrderRec.GET(iOrigNo);
      END;

      CostObjectMaster := CostObjectInternChargeCost;
      IF UseOrigCostObject AND (iCostObject <> '') THEN BEGIN
        DimMgt.GetDimValueRec(2, iCostObject, DimValRec, TRUE, '');
        IF DimValRec."Cost Type" <> DimValRec."Cost Type"::Revenue THEN
          CostObjectMaster := iCostObject;
      END;

      WITH TempGenJnlLine DO BEGIN
        CLEAR(TempGenJnlLine);

        //Fill Debit Line
        "Line No." := NextLineNo;
        "Account Type" := "Account Type"::"G/L Account";
        IF iRunType = iRunType::Project THEN BEGIN
          "Job No." := iOrigNo;
          Element := iElement;
          "Shortcut Dimension 2 Code" := CostObjectInternChargeRev;
          "Origin Type" := "Origin Type"::Project;
        END;
        IF iRunType = iRunType::Service THEN BEGIN
          "Service Order No." := iOrigNo;
          "Shortcut Dimension 2 Code" := CostObjectInternChargeRev;
          "Origin Type" := "Origin Type"::Service;
        END;

        Description := iDescription;
        "Description 2" := iDescription2;
        //>> 150622 ITERO.SB IME-360
        DimMgt.GetDimValueRec(2, CostObjectInternChargeRev, DimValRec, TRUE, '');
        IF DimValRec."Cost Component"<>'' THEN
          "Cost Component" := DimValRec."Cost Component";
        //IF iCostComponent <> '' THEN
        //  "Cost Component" := iCostComponent;
        //<<

        "System-Created Entry" := TRUE;
        "Posting Date" := WORKDATE;
        "Gen. Prod. Posting Group" := '';
        "Gen. Bus. Posting Group" := '';
        "VAT Prod. Posting Group" :='';
        "VAT Bus. Posting Group" := '';
        "Gen. Posting Type" := 0;

        "Interest Date" := "Posting Date";
        Amount := iAmount * -1;
        Amount := Amount * iQuantity;

        TempGenJnlLine.INSERT;

        //Fill Credit Line
        NextLineNo := NextLineNo + 1;
        "Line No." := NextLineNo;
        "Account Type" := "Account Type"::"G/L Account";

        //DP00847.sn
        "Job No." := '';
        Element := '';
        "Service Order No." := '';
        "Service Contract No." := '';
        "Service Location No." := '';
        MasterCompany := '';  // If Master Company filled then IC
        MasterProject := '';
        MasterElement := '';
        //DP00847.en

        IF iRunType = iRunType::Project THEN BEGIN
          OrigProjRec.TESTFIELD("Master Project");
          //"Job No." := OrigProjRec."Master Project";  //DP00847.o
          //Element := OrigProjRec."Master Element";    //DP00847.o
          //DP00847.sn
          IF (OrigProjRec."Master Company" <> '') AND (OrigProjRec."Master Company" <> COMPANYNAME) THEN BEGIN
            MasterCompany := OrigProjRec."Master Company";
            // Do not fill JobNo and Element in TempGenJnlLine because MasterProject/Element not in this company!
          END ELSE BEGIN
            "Job No." := OrigProjRec."Master Project";
            Element := OrigProjRec."Master Element";
          END;
          MasterProject := OrigProjRec."Master Project";
          MasterElement := OrigProjRec."Master Element";
          //DP00847.en
          "Shortcut Dimension 2 Code" := CostObjectMaster;
          "Origin Type" := "Origin Type"::Project;
        END;
        IF iRunType = iRunType::Service THEN BEGIN
          OrigServOrderRec.TESTFIELD("Master Project");
          "Job No." := OrigServOrderRec."Master Project";
          Element := OrigServOrderRec."Master Element";
          MasterProject := OrigServOrderRec."Master Project";  //DP00847.n
          MasterElement := OrigServOrderRec."Master Element";  //DP00847.n
         "Shortcut Dimension 2 Code" := CostObjectMaster;
         "Origin Type" := "Origin Type"::Project;
        END;

        //DP00847.sn
        IF MasterCompany <> '' THEN BEGIN
          IcRel.GET(COMPANYNAME, MasterCompany);
          IcRel.TESTFIELD("Supplying Company IC Account");
          IcRel.TESTFIELD("Receiving Company IC Account");
          DestProjRec.CHANGECOMPANY(MasterCompany);
          DestElemRec.CHANGECOMPANY(MasterCompany);
        END;
        //DP00847.en
        DestProjRec.GET(MasterProject);  // "Job No." is not filled if IC
        DestProjRec.TESTFIELD("Project Type");
        IF DestProjRec."Posting Element Mandatory" AND (Element = '') THEN BEGIN
          IF iRunType = iRunType::Project THEN
            OrigProjRec.TESTFIELD("Master Element");
          IF iRunType = iRunType::Service THEN
            OrigServOrderRec.TESTFIELD("Master Element");
        END;
        IF Element <> '' THEN
          DestElemRec.GET("Job No.", Element);

        Description := iDescription;
        "Description 2" := iDescription2;

        //>> 150622 ITERO.SB IME-360
        DimMgt.GetDimValueRec(2, CostObjectMaster, DimValRec, TRUE, '');
        IF DimValRec."Cost Component"<>'' THEN
          "Cost Component" := DimValRec."Cost Component";
        //IF iCostComponent <> '' THEN
        //  "Cost Component" := iCostComponent;
        //<<
        "System-Created Entry" := TRUE;
        "Posting Date" := WORKDATE;
        "Gen. Prod. Posting Group" := '';
        "Gen. Bus. Posting Group" := '';
        "VAT Prod. Posting Group" :='';
        "VAT Bus. Posting Group" := '';
        "Gen. Posting Type" := 0;
        "Bal. Account No." := '';
        Amount := iAmount;
        Amount := Amount * iQuantity;
        "Interest Date" := "Posting Date";

        //DP00847.sn
        IF MasterCompany <> '' THEN
          CreateICEntry(TempGenJnlLine, DestProjRec, MasterCompany, MasterProject, MasterElement, IcRel, TmpIcEntry);
        //DP00847.en
        TempGenJnlLine.INSERT;
        gInternalCounter := gInternalCounter + 1;
        NextLineNo := NextLineNo + 1;
      END;
    END;

    PROCEDURE PostBatch@1100409001(iRunType@1100529002 : 'Project,Service';VAR TempGenJnlLine@1100409000 : TEMPORARY Record 81;VAR TmpIcEntry@1100529003 : TEMPORARY Record 11012058);
    VAR
      ProjSetup@1210190004 : Record 315;
      ServSetup@1210190017 : Record 11012800;
      GenJnlTemplate@1210190005 : Record 80;
      GenJnlBatch@1210190008 : Record 232;
      GenJnlLine@1210190003 : Record 81;
      NoSeriesMgt@1210190020 : Codeunit 396;
      DocumentNo@1100529004 : Code[20];
      JnlTemplateName@1100529001 : Text[30];
      JnlBatchName@1100529000 : Text[30];
    BEGIN
      ProjSetup.GET;
      IF iRunType = iRunType::Project THEN BEGIN
        JnlTemplateName := ProjSetup."Intern Charge Journal Template";
        JnlBatchName := ProjSetup."Intern Charge Journal Batch";
      END;
      IF iRunType = iRunType::Service  THEN BEGIN
        ServSetup.GET;
        JnlTemplateName := ServSetup."Intern Charge Journal Template";
        JnlBatchName := ServSetup."Intern Charge Journal Batch";
      END;

      GenJnlTemplate.GET(JnlTemplateName);
      GenJnlBatch.GET(JnlTemplateName, JnlBatchName);
      GenJnlBatch.TESTFIELD("No. Series");
      CLEAR(NoSeriesMgt);
      DocumentNo := NoSeriesMgt.GetNextNo(GenJnlBatch."No. Series", WORKDATE, FALSE);

      GenJnlLine.LOCKTABLE;
      GenJnlLine.SETRANGE("Journal Template Name", JnlTemplateName);
      GenJnlLine.SETRANGE("Journal Batch Name", JnlBatchName);
      IF GenJnlLine.FINDLAST THEN
        NextLineNo := GenJnlLine."Line No." + 1
      ELSE
        NextLineNo := 1;

      WITH GenJnlLine DO BEGIN
        IF TempGenJnlLine.FINDSET THEN BEGIN
          REPEAT
            CLEAR(GenJnlLine);

            "Line No." := TempGenJnlLine."Line No.";
            "Account Type" := TempGenJnlLine."Account Type";
            VALIDATE("Journal Template Name", JnlTemplateName);
            VALIDATE("Journal Batch Name", JnlBatchName);
            "Document No." := DocumentNo;
            IF TempGenJnlLine."Job No." <> '' THEN BEGIN
              VALIDATE("Job No.", TempGenJnlLine."Job No.");
              Element := TempGenJnlLine.Element;
            END;
            IF (TempGenJnlLine."Service Order No." <> '') OR (TempGenJnlLine."Service Contract No." <> '') THEN BEGIN
              IF TempGenJnlLine."Service Order No." <> '' THEN
                VALIDATE("Service Order No.", TempGenJnlLine."Service Order No.")
              ELSE
                VALIDATE("Service Contract No.", TempGenJnlLine."Service Contract No.");
            END;
            //DP00847.sn
            IF TmpIcEntry.GET(TempGenJnlLine."Line No.") THEN BEGIN
              "Account No." := TmpIcEntry.GetICAccountNoOfCurrentCompany;    //Is the "Intercompany Account"
              PostICEntry(TmpIcEntry, DocumentNo);
            END;
            //DP00847.en
            VALIDATE("Shortcut Dimension 2 Code", TempGenJnlLine."Shortcut Dimension 2 Code");
            "Origin Type" := TempGenJnlLine."Origin Type";
            "Source Code" := GenJnlTemplate."Source Code";

            Description := TempGenJnlLine.Description;
            "Description 2" := TempGenJnlLine."Description 2";
            IF TempGenJnlLine."Cost Component" <> '' THEN
              "Cost Component" := TempGenJnlLine."Cost Component";

            "System-Created Entry" := TempGenJnlLine."System-Created Entry";
            "Posting Date" := TempGenJnlLine."Posting Date";
            "Interest Date" := TempGenJnlLine."Interest Date";

            IF GenJnlBatch."Bal. Account No." <> '' THEN BEGIN
              "Bal. Account Type" := "Bal. Account Type"::"G/L Account";
              "Bal. Account No." := GenJnlBatch."Bal. Account No.";
            END;

            "Gen. Prod. Posting Group" := TempGenJnlLine."Gen. Prod. Posting Group";
            "Gen. Bus. Posting Group" := TempGenJnlLine."Gen. Bus. Posting Group";
            "VAT Prod. Posting Group" := TempGenJnlLine."VAT Prod. Posting Group";
            "VAT Bus. Posting Group" := TempGenJnlLine."VAT Bus. Posting Group";
            "Gen. Posting Type" := TempGenJnlLine."Gen. Posting Type";

            VALIDATE(Amount, TempGenJnlLine.Amount);

            INSERT(TRUE);
            TempGenJnlLine.DELETE;
          UNTIL TempGenJnlLine.NEXT = 0;
        END;

        SETRANGE("Journal Template Name", JnlTemplateName);
        SETRANGE("Journal Batch Name", JnlBatchName);
        SETRANGE("Document No.", DocumentNo);
        IF FINDSET THEN
          CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post Batch", GenJnlLine);
      END;
    END;

    LOCAL PROCEDURE CreateICEntry@1100529001(GenJnlLine@1100529001 : Record 81;DestProj@1100529006 : Record 11072003;MasterCompany@1100529003 : Text[30];MasterProject@1100529004 : Code[20];MasterElement@1100529005 : Code[20];IntercompanyRelation@1100529000 : Record 11012057;VAR TmpIcEntry@1100529010 : TEMPORARY Record 11012058);
    VAR
      ProjSetup@1100529007 : Record 315;
      ProjectType@1100529008 : Record 11012009;
      CostObjectRelation@1100529009 : Record 11020243;
      DimVal@1100529002 : Record 349;
    BEGIN
      //DP00847
      WITH GenJnlLine DO BEGIN
        ProjSetup.CHANGECOMPANY(MasterCompany);
        ProjectType.CHANGECOMPANY(MasterCompany);
        DimVal.CHANGECOMPANY(MasterCompany);

        ProjSetup.GET;
        ProjectType.GET(DestProj."Project Type");

        TmpIcEntry.INIT;
        TmpIcEntry."Line No." := "Line No.";  // Fill with LineNo of (Temp)GenJnlLine
        TmpIcEntry."Post in Company" := MasterCompany;
        TmpIcEntry."Supplying Company" := COMPANYNAME;
        TmpIcEntry."Receiving Company" := MasterCompany;
        TmpIcEntry."Posting Date" := "Posting Date";
        TmpIcEntry."Interest Date" := "Interest Date";
        TmpIcEntry."Account Type" := TmpIcEntry."Account Type"::"G/L Account";
        TmpIcEntry."Account No." := IntercompanyRelation."Receiving Company IC Account";
        TmpIcEntry."Global Dimension 1 Code" := DestProj."Global Dimension 1 Code";

        TmpIcEntry."Cost Object" := "Shortcut Dimension 2 Code";
        IF UseCostObjectRelIC THEN
          TmpIcEntry."Cost Object" := CostObjectRelation.ConvertCostObject(TmpIcEntry."Cost Object", MasterCompany);
        TmpIcEntry.TESTFIELD("Cost Object");
        DimVal.SETCURRENTKEY(Code, "Global Dimension No.");
        DimVal.SETRANGE(Code, TmpIcEntry."Cost Object");
        DimVal.SETRANGE("Global Dimension No.", 2);
        DimVal.FINDFIRST;

        TmpIcEntry."Bal. Account No." := ProjectType.GetWipAccByVendorPostingGrp(
          DestProj."Project Type", DimVal."Cost Type", DestProj."Project Status",
          ProjSetup."Provisions at Closure", MasterCompany, DimVal."Cost Type", '', 0, ''
          );

        TmpIcEntry."Project No." := MasterProject;
        TmpIcEntry.Element := MasterElement;
        TmpIcEntry."Cost Component" := "Cost Component";
        TmpIcEntry.Description := Description;
        TmpIcEntry."Description 2" := "Description 2";
        TmpIcEntry.Quantity := 1;
        TmpIcEntry.Price := Amount;
        TmpIcEntry.Amount := Amount;

        TmpIcEntry.TESTFIELD("Account No.");
        TmpIcEntry.TESTFIELD("Bal. Account No.");
        TmpIcEntry.TESTFIELD("Cost Object");
        TmpIcEntry.CheckProjStatusReceivingComp();
        IF TmpIcEntry.Element <> '' THEN
          TmpIcEntry.CheckProjElemBlockedRecComp();
        TmpIcEntry.INSERT;
      END;
    END;

    LOCAL PROCEDURE PostICEntry@1100529000(VAR TmpIcEntry@1100529010 : TEMPORARY Record 11012058;DocumentNo@1100529001 : Code[20]);
    VAR
      IcEntry@1100529000 : Record 11012058;
      IcEntry2@1100529002 : Record 11012058;
    BEGIN
      //DP00847
      IcEntry := TmpIcEntry;
      IcEntry."Document No." := DocumentNo;
      IF IcEntry."Global Dimension 1 Code" <> '' THEN
        IcEntry.VALIDATE("Global Dimension 1 Code" );
      IcEntry.VALIDATE("Cost Object" );

      IF IcEntry2.FINDLAST THEN
        IcEntry."Line No." := IcEntry2."Line No." + 1
      ELSE
        IcEntry."Line No." := 1;
      IcEntry.INSERT(TRUE);
      TmpIcEntry.DELETE;
    END;

    BEGIN
    {
      150622 ITERO.SB IME-360 Wrong cost component for credit line for internal charge
    }
    END.
  }
}

