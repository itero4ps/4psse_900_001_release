OBJECT Codeunit 11012275 Contact Data Validation
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1100528701 : TextConst 'ENU=%1 should contain a ''@'' once.';
      Text002@1100528700 : TextConst 'ENU=%1 should contain at least one ''.'' behind the ''@''.';
      Text003@1100528702 : TextConst 'ENU=%1 is more than %2 years ago.';
      Text004@1100528703 : TextConst 'ENU=%1 is in the future.';
      Text005@1100528704 : TextConst 'ENU=%1 donot have %2 days.';

    PROCEDURE ValidateEmail@1100528702(FldRef@1100528702 : FieldRef;VAR FieldValue@1100528703 : Text[100]);
    VAR
      EMail@1100528700 : Text[1024];
      Pos1@1100528704 : Integer;
      Pos2@1100528705 : Integer;
      StringFunctions@1100409000 : Codeunit 11012273;
      EMailArray@1100409001 : ARRAY [10] OF Text[250];
      I@1100409002 : Integer;
    BEGIN
      IF NOT EVALUATE(EMail, FORMAT(FldRef.VALUE)) THEN
        EXIT;

      IF EMail = '' THEN
        EXIT;

      EMail := LOWERCASE(EMail);
      FieldValue := EMail;

      StringFunctions.SplitString(EMail, ';', EMailArray);

      FOR I := 1 TO ARRAYLEN(EMailArray) DO BEGIN
        IF EMailArray[I] <> '' THEN BEGIN
          Pos1 := STRPOS(EMailArray[I], '@');
          IF Pos1 = 0 THEN
            ERROR(Text001, FldRef.CAPTION)
          ELSE BEGIN
            Pos2 := STRPOS(COPYSTR(EMailArray[I], Pos1 + 1), '@');
            IF Pos2 <> 0 THEN
              ERROR(Text001, FldRef.CAPTION);
          END;

          IF STRPOS(COPYSTR(EMailArray[I], Pos1 + 1), '.') = 0 THEN
            ERROR(Text002, FldRef.CAPTION);
        END;
      END;
    END;

    PROCEDURE ValidateInitials@1100528703(VAR Initials@1100528700 : Text[30]);
    VAR
      I@1100528701 : Integer;
      Initials2@1100528702 : Text[30];
      CurrChar@1100528704 : Text[2];
      PrevChar@1100528703 : Text[2];
      LastChar@1100528705 : Text[2];
      InAbbreviation@1100528706 : Boolean;
    BEGIN
      FOR I := 1 TO STRLEN(Initials) DO BEGIN
        CurrChar := COPYSTR(Initials, I, 1);
        IF CurrChar IN [' ', '.'] THEN BEGIN
          IF NOT (PrevChar IN ['', ' ', '.']) THEN
            Initials2 := Initials2 + '.';
          InAbbreviation := FALSE;
        END ELSE BEGIN
          IF (NOT (PrevChar IN ['', ' ', '.'])) AND
             (PrevChar = UPPERCASE(PrevChar)) AND
             (CurrChar = LOWERCASE(CurrChar)) THEN
            InAbbreviation := TRUE; // Th. Joh.

          IF InAbbreviation THEN
            Initials2 := Initials2 + CurrChar
          ELSE BEGIN
            IF NOT (PrevChar IN ['', ' ', '.']) THEN
              Initials2 := Initials2 + '.' + UPPERCASE(CurrChar)
            ELSE
              Initials2 := Initials2 + UPPERCASE(CurrChar);
          END;
        END;
        PrevChar := CurrChar;
        IF Initials2 <> '' THEN
          LastChar := COPYSTR(Initials2, STRLEN(Initials2), 1);
      END;

      IF (Initials2 <> '') AND (LastChar <> '.') THEN
        Initials2 := Initials2 + '.';

      Initials := Initials2;
    END;

    PROCEDURE ValidateName@1210190000(VAR Name@1210190000 : Text[80]);
    BEGIN
      IF Name <> '' THEN
        Name := UPPERCASE(COPYSTR(Name, 1, 1)) + COPYSTR(Name, 2);
    END;

    PROCEDURE ValidateBirthDate@1100528701(FldRef@1100528700 : FieldRef);
    VAR
      BirthDate@1100528701 : Date;
    BEGIN
      IF FORMAT(FldRef.TYPE) <> 'Date' THEN
        EXIT;

      IF NOT EVALUATE(BirthDate, FORMAT(FldRef.VALUE)) THEN
        EXIT;

      IF BirthDate = 0D THEN
        EXIT;

      IF CALCDATE('<+100Y>', BirthDate) < TODAY THEN
        MESSAGE(Text003, FldRef.CAPTION, 100);

      IF BirthDate > TODAY THEN
        MESSAGE(Text004, FldRef.CAPTION);
    END;

    PROCEDURE ValidateWeddingDate@1100528704(FldRef@1100528700 : FieldRef);
    VAR
      WeddingDate@1100528701 : Date;
    BEGIN
      IF FORMAT(FldRef.TYPE) <> 'Date' THEN
        EXIT;

      IF NOT EVALUATE(WeddingDate, FORMAT(FldRef.VALUE)) THEN
        EXIT;

      IF WeddingDate = 0D THEN
        EXIT;

      IF CALCDATE('<+75Y>', WeddingDate) < TODAY THEN
        MESSAGE(Text003, FldRef.CAPTION, 75);
    END;

    PROCEDURE ValidateDayOfMonth@1100528705(Day@1100528700 : Integer;Month@1100528701 : Integer);
    VAR
      MonthText@1100528703 : Text[30];
    BEGIN
      //**4PS
      // The min and max values for day and month must be entered by the field properties
      IF (Day = 0) OR (Month = 0) THEN
        EXIT;

      MonthText := FORMAT(DMY2DATE(1, Month, DATE2DMY(TODAY, 3)), 0, '<Month Text>');

      IF Month = 2 THEN BEGIN
        IF Day > 29 THEN
          ERROR(Text005, MonthText, Day);
        EXIT;
      END;

      IF Month < 8 THEN BEGIN
        IF ((Month MOD 2) = 0) AND (Day > 30) THEN
          ERROR(Text005, MonthText, Day);
      END ELSE BEGIN
        IF ((Month MOD 2) = 1) AND (Day > 30) THEN
          ERROR(Text005, MonthText, Day);
      END;
    END;

    BEGIN
    END.
  }
}

