OBJECT Codeunit 11012280 Web Service Mgt per Product
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            //ToggleAllWebservices(TRUE); //This is needed for unit tests of GWP
            MESSAGE('This CU is depricated and replaced by CU 11125354. Contact your systen Administrator.');
          END;

  }
  CODE
  {
    VAR
      TempWebServicePerProduct@1100409000 : TEMPORARY Record 11229795;

    PROCEDURE Toggle4PSMobileWebservices@1100528100(Published@1100528100 : Boolean);
    BEGIN
      ToggleProductWebservices(TempWebServicePerProduct.Product::MOB, Published);
      IF Published THEN
        PublishSharedDocManWebservices;
    END;

    PROCEDURE ToggleGWPWebservices@1100527000(Published@1100527000 : Boolean);
    BEGIN
      ToggleProductWebservices(TempWebServicePerProduct.Product::GWP, Published);
    END;

    PROCEDURE ToggleSPTWebservices@1100409001(Published@1100409000 : Boolean);
    BEGIN
      ToggleProductWebservices(TempWebServicePerProduct.Product::SPT, Published);
      IF Published THEN
        PublishSharedDocManWebservices;
    END;

    PROCEDURE ToggleOPTWebservices@1100409002(Published@1100409000 : Boolean);
    BEGIN
      ToggleProductWebservices(TempWebServicePerProduct.Product::OPT, Published);
    END;

    PROCEDURE ToggleCPTWebservices@1100409003(Published@1100409000 : Boolean);
    BEGIN
      ToggleProductWebservices(TempWebServicePerProduct.Product::CPT, Published);
    END;

    PROCEDURE ToggleCESWebservices@1100409004(Published@1100409000 : Boolean);
    BEGIN
      ToggleProductWebservices(TempWebServicePerProduct.Product::CES, Published);
    END;

    PROCEDURE ToggleVoidMgtWebservices@1100528103(Published@1100528100 : Boolean);
    BEGIN
      ToggleProductWebservices(TempWebServicePerProduct.Product::VoidMgt, Published);
      IF Published THEN BEGIN
        PublishSharedDocManWebservices;
        PublishTestWebApiWebservices;
      END;
    END;

    PROCEDURE ToggleSCAWebservices@1100409022(Published@1100528100 : Boolean);
    BEGIN
      ToggleProductWebservices(TempWebServicePerProduct.Product::SCA, Published);
      IF Published THEN BEGIN
        PublishSharedDocManWebservices;
        PublishTestWebApiWebservices;
      END;
    END;

    PROCEDURE ToggleMRAWebservices@1100528200(Published@1100528100 : Boolean);
    BEGIN
      ToggleProductWebservices(TempWebServicePerProduct.Product::MRA, Published);
      IF Published THEN BEGIN
        PublishSharedDocManWebservices;
        PublishTestWebApiWebservices;
      END;
    END;

    PROCEDURE ToggleFSWWebservices@1100528000(Published@1100528100 : Boolean);
    VAR
      WebService@1100528101 : Record 2000000076;
    BEGIN
      ToggleProductWebservices(TempWebServicePerProduct.Product::FSW, Published);
      IF Published THEN BEGIN
        PublishSharedDocManWebservices;
        PublishTestWebApiWebservices;
      END;
    END;

    PROCEDURE PublishTestWebApiWebservices@1100525022();
    VAR
      WebService@1100528101 : Record 2000000076;
    BEGIN
      //Never unpublish document management services automatically because we cannot tell if anyone is using it
      ToggleProductWebservices(TempWebServicePerProduct.Product::TestWebApi, TRUE);
    END;

    PROCEDURE ToggleSharedDocManWebservices@1100409005(Published@1100528100 : Boolean);
    BEGIN
      ToggleProductWebservices(TempWebServicePerProduct.Product::SharedDocMan, Published);
    END;

    PROCEDURE PublishSharedDocManWebservices@1100528102();
    BEGIN
      //Never unpublish document management services automatically because we cannot tell if anyone is using it
      ToggleProductWebservices(TempWebServicePerProduct.Product::SharedDocMan, TRUE);
    END;

    PROCEDURE TogglePPTWebservices@1100409000(Published@1100409000 : Boolean);
    BEGIN
      ToggleProductWebservices(TempWebServicePerProduct.Product::PPT, Published);
    END;

    PROCEDURE ToggleHPTWebservices@1100409008(Published@1100409000 : Boolean);
    BEGIN
      ToggleProductWebservices(TempWebServicePerProduct.Product::HPT, Published);
    END;

    PROCEDURE ToggleChangeMgtWebservices@1100528300(Published@1100528100 : Boolean);
    BEGIN
      ToggleProductWebservices(TempWebServicePerProduct.Product::ChangeMgt, Published);
    END;

    PROCEDURE ToggleINSBOUWebservices@1100525001(Published@1100525000 : Boolean);
    BEGIN
      ToggleProductWebservices(TempWebServicePerProduct.Product::INSBOU, Published);
    END;

    PROCEDURE ToggleWSToolsWebservices@1100525034(Published@1100525000 : Boolean);
    BEGIN
      ToggleProductWebservices(TempWebServicePerProduct.Product::"WS Tools", Published);
    END;

    PROCEDURE ToggleCTBPortalWebservices@1100409025(Published@1100409000 : Boolean);
    BEGIN
      ToggleProductWebservices(TempWebServicePerProduct.Product::CTBportal, Published);
    END;

    PROCEDURE ToggleServiceCallRecognitionWebservices@1100525009(Published@1100409000 : Boolean);
    BEGIN
      ToggleProductWebservices(TempWebServicePerProduct.Product::SCR, Published);
    END;

    PROCEDURE ToggleWhiteVisionWebservices@1100409027(Published@1100409000 : Boolean);
    BEGIN
      ToggleProductWebservices(TempWebServicePerProduct.Product::WhiteVision, Published);
    END;

    PROCEDURE ToggleEmpolyWebservices@1100525004(Published@1100409000 : Boolean);
    BEGIN
      ToggleProductWebservices(TempWebServicePerProduct.Product::Empoly, Published);
    END;

    PROCEDURE ToggleBuyerGuidanceWebservices@1100525008(Published@1100409000 : Boolean);
    BEGIN
      ToggleProductWebservices(TempWebServicePerProduct.Product::BuyerGuidance, Published);
    END;

    PROCEDURE TogglePlantTransportPlanningWebservices@1100529003(Published@1100409000 : Boolean);
    BEGIN
      ToggleProductWebservices(TempWebServicePerProduct.Product::PlantTransportPlanning, Published);
    END;

    PROCEDURE Is4PSMobilePublished@1100409011() : Boolean;
    BEGIN
      EXIT(IsProductWebservicesPublished(TempWebServicePerProduct.Product::MOB));
    END;

    PROCEDURE IsGWPPublished@1100409020() : Boolean;
    BEGIN
      EXIT(IsProductWebservicesPublished(TempWebServicePerProduct.Product::GWP));
    END;

    PROCEDURE IsSPTPublished@1100409019() : Boolean;
    BEGIN
      EXIT(IsProductWebservicesPublished(TempWebServicePerProduct.Product::SPT));
    END;

    PROCEDURE IsOPTPublished@1100409018() : Boolean;
    BEGIN
      EXIT(IsProductWebservicesPublished(TempWebServicePerProduct.Product::OPT));
    END;

    PROCEDURE IsCPTPublished@1100409017() : Boolean;
    BEGIN
      EXIT(IsProductWebservicesPublished(TempWebServicePerProduct.Product::CPT));
    END;

    PROCEDURE IsCESPublished@1100409016() : Boolean;
    BEGIN
      EXIT(IsProductWebservicesPublished(TempWebServicePerProduct.Product::CES));
    END;

    PROCEDURE IsVoidMgtPublished@1100409015() : Boolean;
    BEGIN
      EXIT(IsProductWebservicesPublished(TempWebServicePerProduct.Product::VoidMgt));
    END;

    PROCEDURE IsMRAPublished@1100528201() : Boolean;
    BEGIN
      EXIT(IsProductWebservicesPublished(TempWebServicePerProduct.Product::MRA));
    END;

    PROCEDURE IsFSWPublished@1100528001() : Boolean;
    BEGIN
      EXIT(IsProductWebservicesPublished(TempWebServicePerProduct.Product::FSW));
    END;

    PROCEDURE IsSCAPublished@1100409021() : Boolean;
    BEGIN
      EXIT(IsProductWebservicesPublished(TempWebServicePerProduct.Product::SCA));
    END;

    PROCEDURE IsSharedDocManPublished@1100409013() : Boolean;
    BEGIN
      EXIT(IsProductWebservicesPublished(TempWebServicePerProduct.Product::SharedDocMan));
    END;

    PROCEDURE IsPPTPublished@1100409012() : Boolean;
    BEGIN
      EXIT(IsProductWebservicesPublished(TempWebServicePerProduct.Product::PPT));
    END;

    PROCEDURE IsHPTPublished@1100409024() : Boolean;
    BEGIN
      EXIT(IsProductWebservicesPublished(TempWebServicePerProduct.Product::HPT));
    END;

    PROCEDURE IsChangeMgtPublished@1100528301() : Boolean;
    BEGIN
      EXIT(IsProductWebservicesPublished(TempWebServicePerProduct.Product::ChangeMgt));
    END;

    PROCEDURE IsINSBOUPublished@1100525003() : Boolean;
    BEGIN
      EXIT(IsProductWebservicesPublished(TempWebServicePerProduct.Product::INSBOU));
    END;

    PROCEDURE IsWSToolsPublished@1100525033() : Boolean;
    BEGIN
      EXIT(IsProductWebservicesPublished(TempWebServicePerProduct.Product::"WS Tools"));
    END;

    PROCEDURE IsCTBPortalPublished@1100409026() : Boolean;
    BEGIN
      EXIT(IsProductWebservicesPublished(TempWebServicePerProduct.Product::CTBportal));
    END;

    PROCEDURE IsServiceCallRecognitionPublished@1100525012() : Boolean;
    BEGIN
      EXIT(IsProductWebservicesPublished(TempWebServicePerProduct.Product::SCR));
    END;

    PROCEDURE IsWhiteVisionPublished@1100409028() : Boolean;
    BEGIN
      EXIT(IsProductWebservicesPublished(TempWebServicePerProduct.Product::WhiteVision));
    END;

    PROCEDURE IsEmpolyPublished@1100525005() : Boolean;
    BEGIN
      EXIT(IsProductWebservicesPublished(TempWebServicePerProduct.Product::Empoly));
    END;

    PROCEDURE IsBuyerGuidancePublished@1100525011() : Boolean;
    BEGIN
      EXIT(IsProductWebservicesPublished(TempWebServicePerProduct.Product::BuyerGuidance));
    END;

    PROCEDURE IsPlantTransportPlanningPublished@1100529000() : Boolean;
    BEGIN
      EXIT(IsProductWebservicesPublished(TempWebServicePerProduct.Product::PlantTransportPlanning));
    END;

    PROCEDURE Show4PSMobileWebServices@1100525031() : Boolean;
    BEGIN
      ShowProductWebservices(TempWebServicePerProduct.Product::MOB);
    END;

    PROCEDURE ShowGWPWebServices@1100525030() : Boolean;
    BEGIN
      ShowProductWebservices(TempWebServicePerProduct.Product::GWP);
    END;

    PROCEDURE ShowSPTWebServices@1100525029() : Boolean;
    BEGIN
      ShowProductWebservices(TempWebServicePerProduct.Product::SPT);
    END;

    PROCEDURE ShowOPTWebServices@1100525028() : Boolean;
    BEGIN
      ShowProductWebservices(TempWebServicePerProduct.Product::OPT);
    END;

    PROCEDURE ShowCPTWebServices@1100525027() : Boolean;
    BEGIN
      ShowProductWebservices(TempWebServicePerProduct.Product::CPT);
    END;

    PROCEDURE ShowCESWebServices@1100525026() : Boolean;
    BEGIN
      ShowProductWebservices(TempWebServicePerProduct.Product::CES);
    END;

    PROCEDURE ShowVoidMgtWebServices@1100525025() : Boolean;
    BEGIN
      ShowProductWebservices(TempWebServicePerProduct.Product::VoidMgt);
    END;

    PROCEDURE ShowMRAWebServices@1100525024() : Boolean;
    BEGIN
      ShowProductWebservices(TempWebServicePerProduct.Product::MRA);
    END;

    PROCEDURE ShowFSWWebServices@1100528002() : Boolean;
    BEGIN
      ShowProductWebservices(TempWebServicePerProduct.Product::FSW);
    END;

    PROCEDURE ShowSCAWebServices@1100525023() : Boolean;
    BEGIN
      ShowProductWebservices(TempWebServicePerProduct.Product::SCA);
    END;

    PROCEDURE ShowSharedDocManWebServices@1100525006() : Boolean;
    BEGIN
      ShowProductWebservices(TempWebServicePerProduct.Product::SharedDocMan);
    END;

    PROCEDURE ShowPPTWebServices@1100525021() : Boolean;
    BEGIN
      ShowProductWebservices(TempWebServicePerProduct.Product::PPT);
    END;

    PROCEDURE ShowHPTWebServices@1100525020() : Boolean;
    BEGIN
      ShowProductWebservices(TempWebServicePerProduct.Product::HPT);
    END;

    PROCEDURE ShowChangeMgtWebServices@1100525019() : Boolean;
    BEGIN
      ShowProductWebservices(TempWebServicePerProduct.Product::ChangeMgt);
    END;

    PROCEDURE ShowINSBOUWebServices@1100525018() : Boolean;
    BEGIN
      ShowProductWebservices(TempWebServicePerProduct.Product::INSBOU);
    END;

    PROCEDURE ShowWSToolsWebServices@1100525032() : Boolean;
    BEGIN
      ShowProductWebservices(TempWebServicePerProduct.Product::"WS Tools");
    END;

    PROCEDURE ShowCTBPortalWebServices@1100525017() : Boolean;
    BEGIN
      ShowProductWebservices(TempWebServicePerProduct.Product::CTBportal);
    END;

    PROCEDURE ShowServiceCallRecognitionWebServices@1100525016() : Boolean;
    BEGIN
      ShowProductWebservices(TempWebServicePerProduct.Product::SCR);
    END;

    PROCEDURE ShowWhiteVisionWebServices@1100525015() : Boolean;
    BEGIN
      ShowProductWebservices(TempWebServicePerProduct.Product::WhiteVision);
    END;

    PROCEDURE ShowEmpolyWebServices@1100525014() : Boolean;
    BEGIN
      ShowProductWebservices(TempWebServicePerProduct.Product::Empoly);
    END;

    PROCEDURE ShowBuyerGuidanceWebServices@1100525013() : Boolean;
    BEGIN
      ShowProductWebservices(TempWebServicePerProduct.Product::BuyerGuidance);
    END;

    PROCEDURE ShowPlantTransportPlanningWebServices@1100529004() : Boolean;
    BEGIN
      ShowProductWebservices(TempWebServicePerProduct.Product::PlantTransportPlanning);
    END;

    PROCEDURE ToggleAllWebservices@1100525000(Published@1100409001 : Boolean);
    BEGIN
      InitialiseMetaData();
      TempWebServicePerProduct.RESET;
      IF TempWebServicePerProduct.FINDSET THEN
        REPEAT
          ToggleWebservice(TempWebServicePerProduct."Object Type", TempWebServicePerProduct."Object ID",
            TempWebServicePerProduct."Service Name", Published);
        UNTIL TempWebServicePerProduct.NEXT = 0;
    END;

    LOCAL PROCEDURE "---Locals---"@1100525002();
    BEGIN
    END;

    LOCAL PROCEDURE ToggleProductWebservices@1100409014(Product@1100409000 : Option;Published@1100409001 : Boolean);
    BEGIN
      InitialiseMetaData();
      TempWebServicePerProduct.RESET;
      TempWebServicePerProduct.SETRANGE(Product, Product);
      IF TempWebServicePerProduct.FINDSET THEN
        REPEAT
          ToggleWebservice(TempWebServicePerProduct."Object Type", TempWebServicePerProduct."Object ID",
            TempWebServicePerProduct."Service Name", Published);
        UNTIL TempWebServicePerProduct.NEXT = 0;
    END;

    LOCAL PROCEDURE ShowProductWebservices@1100525010(Product@1100409000 : Option);
    VAR
      WebService@1100525000 : Record 2000000076;
      WebServices@1100525001 : Page 810;
    BEGIN
      InitialiseMetaData();
      TempWebServicePerProduct.RESET;
      TempWebServicePerProduct.SETRANGE(Product, Product);
      IF (NOT TempWebServicePerProduct.FINDSET) THEN
        EXIT;

      REPEAT
        IF (WebService.GET(TempWebServicePerProduct."Object Type", TempWebServicePerProduct."Service Name")) THEN
          WebService.MARK(TRUE);
      UNTIL TempWebServicePerProduct.NEXT = 0;

      WebService.MARKEDONLY(TRUE);
      WebServices.EDITABLE(FALSE);
      WebServices.SETTABLEVIEW(WebService);
      WebServices.RUNMODAL;
    END;

    LOCAL PROCEDURE IsProductWebservicesPublished@1100409009(Product@1100409000 : Option) : Boolean;
    BEGIN
      InitialiseMetaData();
      TempWebServicePerProduct.RESET;
      TempWebServicePerProduct.SETRANGE(Product, Product);
      IF TempWebServicePerProduct.FINDSET THEN BEGIN
        REPEAT
          IF NOT IsWebservicePublished(TempWebServicePerProduct."Object Type", TempWebServicePerProduct."Object ID",
            TempWebServicePerProduct."Service Name")
          THEN
            EXIT(FALSE);
        UNTIL TempWebServicePerProduct.NEXT = 0;
        EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE ToggleWebservice@1100528101(ObjectType@1100528101 : Option;OjbectID@1100528102 : Integer;ServiceName@1100528103 : Text[240];Published@1100528104 : Boolean);
    VAR
      WebService@1100528100 : Record 2000000076;
    BEGIN
      IF NOT WebService.GET(ObjectType, ServiceName) THEN BEGIN
        WebService."Object Type" := ObjectType;
        WebService."Service Name" := ServiceName;
        WebService.INSERT(TRUE);
      END;
      WebService."Object ID" := OjbectID;
      WebService.Published := Published;
      WebService.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE IsWebservicePublished@1100409010(ObjectType@1100528101 : Option;OjbectID@1100409000 : Integer;ServiceName@1100528103 : Text[240]) : Boolean;
    VAR
      WebService@1100528100 : Record 2000000076;
    BEGIN
      IF NOT WebService.GET(ObjectType, ServiceName) THEN
        EXIT(FALSE);
      EXIT(WebService.Published AND (OjbectID = WebService."Object ID"));
    END;

    LOCAL PROCEDURE InitialiseMetaData@1100409006();
    BEGIN
      //the temp table has only one usage: making it in this codeunit possible to do several things with the meta data while keeping the knowledge only in this codeunit.
      TempWebServicePerProduct.RESET;
      IF NOT TempWebServicePerProduct.ISEMPTY THEN
        EXIT;

      InitialiseMetaData4PSProducts;
      InitialiseMetaDataExternalProducts;
    END;

    LOCAL PROCEDURE InitialiseMetaData4PSProducts@1100409030();
    BEGIN
      //MOB
      AddMetaDataRecord(TempWebServicePerProduct.Product::MOB, TempWebServicePerProduct."Object Type"::Codeunit, CODEUNIT::"Count Paged Entities", 'CountPagedEntitiesMOB');
      AddMetaDataRecord(TempWebServicePerProduct.Product::MOB, TempWebServicePerProduct."Object Type"::Page, PAGE::"Work Order WS (MOB)", 'WorkOrderMOB');
      AddMetaDataRecord(TempWebServicePerProduct.Product::MOB, TempWebServicePerProduct."Object Type"::Page, PAGE::"Serv.Loc. by Desc. (MOB)", 'ServLocByDescMOB');
      AddMetaDataRecord(TempWebServicePerProduct.Product::MOB, TempWebServicePerProduct."Object Type"::Page, PAGE::"Serv.Loc. by City (MOB)", 'ServLocByCityMOB');
      AddMetaDataRecord(TempWebServicePerProduct.Product::MOB, TempWebServicePerProduct."Object Type"::Page, PAGE::"Serv.Loc. by No. (MOB)", 'ServLocByNoMOB');
      AddMetaDataRecord(TempWebServicePerProduct.Product::MOB, TempWebServicePerProduct."Object Type"::Page, PAGE::"Item by Desc. (MOB)", 'ItemByDescMOB');
      AddMetaDataRecord(TempWebServicePerProduct.Product::MOB, TempWebServicePerProduct."Object Type"::Page, PAGE::"Item by No. (MOB)", 'ItemByNoMOB');
      AddMetaDataRecord(TempWebServicePerProduct.Product::MOB, TempWebServicePerProduct."Object Type"::Page, PAGE::"Objects by Service Loc. (MOB)", 'ObjectByServiceLocMOB');
      AddMetaDataRecord(TempWebServicePerProduct.Product::MOB, TempWebServicePerProduct."Object Type"::Page, PAGE::"Service Object Lookup (Mob.)", 'ServiceObjectLookupMOB');
      AddMetaDataRecord(TempWebServicePerProduct.Product::MOB, TempWebServicePerProduct."Object Type"::Page, PAGE::"Std. Obj. Lookup by No. (Mob.)", 'StandardObjectLookupByNoMOB');
      AddMetaDataRecord(TempWebServicePerProduct.Product::MOB, TempWebServicePerProduct."Object Type"::Page, PAGE::"Std. Obj. Lookup by Br. (Mob.)", 'StandardObjectLookupByBrandModelTypeMOB');
      AddMetaDataRecord(TempWebServicePerProduct.Product::MOB, TempWebServicePerProduct."Object Type"::Page, PAGE::"Open Work Order (MOB)", 'OpenWorkOrderMOB');
      AddMetaDataRecord(TempWebServicePerProduct.Product::MOB, TempWebServicePerProduct."Object Type"::Page, PAGE::"Service Object Brand (MOB)", 'ServiceObjectBrandMOB');
      AddMetaDataRecord(TempWebServicePerProduct.Product::MOB, TempWebServicePerProduct."Object Type"::Page, PAGE::"Service Object Model (MOB)", 'ServiceObjectModelMOB');
      AddMetaDataRecord(TempWebServicePerProduct.Product::MOB, TempWebServicePerProduct."Object Type"::Page, PAGE::"Service Object Type (MOB)", 'ServiceObjectTypeMOB');
      AddMetaDataRecord(TempWebServicePerProduct.Product::MOB, TempWebServicePerProduct."Object Type"::Page, PAGE::"Customer Lookup by Name (MOB)", 'CustomerLookupByNameMOB');
      AddMetaDataRecord(TempWebServicePerProduct.Product::MOB, TempWebServicePerProduct."Object Type"::Codeunit, CODEUNIT::"Dispatch Interface (MOB)", 'DispatchInterfaceMOB');
      //GWP
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Page, PAGE::"Work Order WS (GWP)", 'WorkOrderPageGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Work Order Service (GWP)", 'WorkOrderServiceGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Work Order Projects (GWP)", 'WorkOrderProjectsGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Resource Work Order Pl. (GWP)", 'ResourceWorkOrderPlanningGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Consignment Roster (GWP)", 'ConsignmentRosterGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Employee Absence (GWP)", 'EmployeeAbsenceGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Service Priority (GWP)", 'ServicePriorityGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Order Kind (GWP)", 'OrderKindGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Order Type (GWP)", 'OrderTypeGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Cause of Absence (GWP)", 'CauseOfAbsenceGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Trade Association (GWP)", 'TradeAssociationGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Territory (GWP)", 'TerritoryGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"User Setup (GWP)", 'UserSetupGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Reference Point (GWP)", 'ReferencePointGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"4PS Mobile Setup (GWP)", 'FPSMobileSetupGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Base Calendar Change (GWP)", 'BaseCalendarChangeGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Page, PAGE::"Source No. Lookup (GWP)", 'SourceNoLookupGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Work Order Lookup (GWP)", 'WorkOrderLookupGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Page, PAGE::"Work Order Count (GWP)", 'WorkOrderCountGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Volatile Resource Data (GWP)", 'VolatileResourceDataGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Service Order Lookup (GWP)", 'ServiceOrderLookupGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Page, PAGE::"Service Order Count (GWP)", 'ServiceOrderCountGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Sales/Purchaser Lookup (GWP)", 'SalesPurchaserLookupGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Page, PAGE::"Sales/Purchaser Count (GWP)", 'SalesPurchaserCountGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Service Location Lookup (GWP)", 'ServiceLocationLookupGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Page, PAGE::"Service Location Count (GWP)", 'ServiceLocationCountGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Service Priority Lookup (GWP)", 'ServicePriorityLookupGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Employee Lookup (GWP)", 'EmployeeLookupGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Page, PAGE::"Employee Count (GWP)", 'EmployeeCountGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Customer Lookup (GWP)", 'CustomerLookupGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Page, PAGE::"Customer Count (GWP)", 'CustomerCountGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Territory Lookup (GWP)", 'TerritoryLookupGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"On Hold Code Lookup (GWP)", 'OnHoldCodeLookupGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Service Contract Lookup (GWP)", 'ServiceContractLookupGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Page, PAGE::"Service Contract Count (GWP)", 'ServiceContractCountGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Reference Point Lookup (GWP)", 'ReferencePointLookupGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Discipline Lookup (GWP)", 'DisciplineLookupGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Trade Association Lookup (GWP)", 'TradeAssociationLookupGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Codeunit, CODEUNIT::"Integration (GWP)", 'IntegrationGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Base Calendar (GWP)", 'BaseCalendarGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Project Type (GWP)", 'ProjectTypeGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Type (GWP)", 'GeneralTypeGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Trade Speciality (GWP)", 'TradeSpecialityGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Subcont.Port. Setup (GWP)", 'SubcontPortSetupGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Company Plan Group (GWP)", 'CompanyPlanGroupGWP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::GWP, TempWebServicePerProduct."Object Type"::Query, QUERY::"Company Plan Group Line (GWP)", 'CompanyPlanGroupLineGWP');
      //SPT
      AddMetaDataRecord(TempWebServicePerProduct.Product::SPT, TempWebServicePerProduct."Object Type"::Codeunit, CODEUNIT::"Serv.Port. Call Management", 'CallManagementSPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SPT, TempWebServicePerProduct."Object Type"::Codeunit, CODEUNIT::"Appointment Mgt. (SPT) WS", 'AppointmentMgtSPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SPT, TempWebServicePerProduct."Object Type"::Codeunit, CODEUNIT::"Export Service Priorities WS", 'ServicePrioritiesWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SPT, TempWebServicePerProduct."Object Type"::Codeunit, CODEUNIT::"Change Request Mgt WS", 'ChangeRequestMgtWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SPT, TempWebServicePerProduct."Object Type"::Codeunit, CODEUNIT::"Service Portal Management WS", 'ServicePortalManagementWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Change Request WS", 'ChangeRequestWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Document Properties (SPT)", 'DocumentProperties'); //Move this line to the new DocMan function
      AddMetaDataRecord(TempWebServicePerProduct.Product::SPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"General Advanced Text WS", 'GeneralAdvancedTextWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Change Request Impact Line WS", 'ChangeRequestImpactLineWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Service Call Prob. Text (SPT)", 'ServiceCallProbTextSPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Service Call (Serv.Port.)", 'ServiceCallSPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"User (Serv.Port.)", 'UserSPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"User Filter (Serv.Port.)", 'UserFilterSPT');
      //OPT
      AddMetaDataRecord(TempWebServicePerProduct.Product::OPT, TempWebServicePerProduct."Object Type"::Codeunit, CODEUNIT::"Subcont.Port.Serv.Order Mgt", 'SubcontPortServOrderMgt');
      AddMetaDataRecord(TempWebServicePerProduct.Product::OPT, TempWebServicePerProduct."Object Type"::Codeunit, CODEUNIT::"Subcontr. Portal Management WS", 'SubcontrPortalManagementWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::OPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Subcont.Port.Doc.Properties WS", 'SubcontPortDocumentProperties');
      AddMetaDataRecord(TempWebServicePerProduct.Product::OPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Subcont.Port.Service Order WS", 'SubcontPortServiceOrder');
      AddMetaDataRecord(TempWebServicePerProduct.Product::OPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Subcont.Port. User WS", 'SubcontPortUser');
      AddMetaDataRecord(TempWebServicePerProduct.Product::OPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Subcont.Port.Work Order WS", 'SubcontPortWorkOrder');
      AddMetaDataRecord(TempWebServicePerProduct.Product::OPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Work Order Text WS", 'WorkOrderTextWS');
      //CPT
      AddMetaDataRecord(TempWebServicePerProduct.Product::CPT, TempWebServicePerProduct."Object Type"::Codeunit, CODEUNIT::"CRM Port. Functions", 'CRMPortFunctions');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Document Properties (SPT)", 'DocumentProperties');   //Move this line to the new DocMan function
      AddMetaDataRecord(TempWebServicePerProduct.Product::CPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"CRM Port. Appointment", 'CRMPortAppointment');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"CRM Port. Attendees", 'CRMPortAttendees');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"CRM Port. Salesperson by Cont.", 'CRMPortSalespersonByContact');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"CRM Port. To-Do", 'CRMPortToDo');
      //CES
      AddMetaDataRecord(TempWebServicePerProduct.Product::CES, TempWebServicePerProduct."Object Type"::Page, PAGE::"Central Enter Scr. Comp. WS", 'CompaniesCES');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CES, TempWebServicePerProduct."Object Type"::Page, PAGE::"Central Enter Scr. Post CodeWS", 'PostCodesCES');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CES, TempWebServicePerProduct."Object Type"::Page, PAGE::"Central Enter Scr. SL. WS", 'ServiceLocationsCES');
      //SCA
      AddMetaDataRecord(TempWebServicePerProduct.Product::SCA, TempWebServicePerProduct."Object Type"::Page, PAGE::"SCA User WS", 'ScaUserSCA');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SCA, TempWebServicePerProduct."Object Type"::Page, PAGE::"SCA Users per Service Location", 'SCAUserPerServiceLocationSCA');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SCA, TempWebServicePerProduct."Object Type"::Page, PAGE::"Service Call SCA WS", 'ServiceCallSCA');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SCA, TempWebServicePerProduct."Object Type"::Page, PAGE::"Service Location SCA WS", 'ServiceLocationSCA');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SCA, TempWebServicePerProduct."Object Type"::Page, PAGE::"Service Object SCA WS", 'ServiceObjectSCA');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SCA, TempWebServicePerProduct."Object Type"::Page, PAGE::"Company Information SCA WS", 'CompanyInformationSCA');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SCA, TempWebServicePerProduct."Object Type"::Page, PAGE::"Contact SCA WS", 'ContactSCA');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SCA, TempWebServicePerProduct."Object Type"::Page, PAGE::"Service Contract SCA WS", 'ServiceContractSCA');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SCA, TempWebServicePerProduct."Object Type"::Page, PAGE::"Service Contract Priority SCA", 'ServiceContractPrioritySCA');
      //PPT
      AddMetaDataRecord(TempWebServicePerProduct.Product::PPT, TempWebServicePerProduct."Object Type"::Codeunit, CODEUNIT::"Document Portal Web Services", 'SharepointWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::PPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Contacts WS", 'ContactsWS');
      //SharedDocMan
      AddMetaDataRecord(TempWebServicePerProduct.Product::SharedDocMan, TempWebServicePerProduct."Object Type"::Codeunit, CODEUNIT::"Document Management Webservice", 'DocumentManagement');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SharedDocMan, TempWebServicePerProduct."Object Type"::Page, PAGE::"Document Props Basic WS", 'DocumentPropsBasicWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SharedDocMan, TempWebServicePerProduct."Object Type"::Page, PAGE::"Allowed File Extension WS", 'AllowedFileExtensionWS');
      //VoidMgt
      AddMetaDataRecord(TempWebServicePerProduct.Product::VoidMgt, TempWebServicePerProduct."Object Type"::Page, PAGE::"SUP Recording Lines VoidMgt WS", 'SUPRecordingLinesVoidMgt');
      AddMetaDataRecord(TempWebServicePerProduct.Product::VoidMgt, TempWebServicePerProduct."Object Type"::Page, PAGE::"Service Order VoidMgt WS", 'ServiceOrderVoidMgt');
      AddMetaDataRecord(TempWebServicePerProduct.Product::VoidMgt, TempWebServicePerProduct."Object Type"::Page, PAGE::"SUP Rooms VoidMgt WS", 'SUPRoomsVoidMgt');
      AddMetaDataRecord(TempWebServicePerProduct.Product::VoidMgt, TempWebServicePerProduct."Object Type"::Page, PAGE::"Service Price Book VoidMgt WS", 'ServicePriceBookVoidMgt');
      AddMetaDataRecord(TempWebServicePerProduct.Product::VoidMgt, TempWebServicePerProduct."Object Type"::Page, PAGE::"Service Unit Price VoidMgt WS", 'ServiceUnitPriceVoidMgt');
      AddMetaDataRecord(TempWebServicePerProduct.Product::VoidMgt, TempWebServicePerProduct."Object Type"::Page, PAGE::"SUP Production WS", 'SUPProductionVoidMgt');
      AddMetaDataRecord(TempWebServicePerProduct.Product::VoidMgt, TempWebServicePerProduct."Object Type"::Page, PAGE::"VMA App Feature WS", 'AppFeatureVMA');
      //MRA
      AddMetaDataRecord(TempWebServicePerProduct.Product::MRA, TempWebServicePerProduct."Object Type"::Page, PAGE::"MMR Job List WS", 'JobMRA');
      AddMetaDataRecord(TempWebServicePerProduct.Product::MRA, TempWebServicePerProduct."Object Type"::Page, PAGE::"MMR Plot List WS", 'PlotMRA');
      AddMetaDataRecord(TempWebServicePerProduct.Product::MRA, TempWebServicePerProduct."Object Type"::Page, PAGE::"MMR House Model List WS", 'HouseModelMRA');
      AddMetaDataRecord(TempWebServicePerProduct.Product::MRA, TempWebServicePerProduct."Object Type"::Page, PAGE::"MMR Units per H. Model List WS", 'StandardRoomMRA');
      AddMetaDataRecord(TempWebServicePerProduct.Product::MRA, TempWebServicePerProduct."Object Type"::Page, PAGE::"Plot R. Cross List WS", 'CrossListItemMRA');
      AddMetaDataRecord(TempWebServicePerProduct.Product::MRA, TempWebServicePerProduct."Object Type"::Page, PAGE::"Plot Recording Line WS", 'RecordingLineMRA');
      //FSW
      AddMetaDataRecord(TempWebServicePerProduct.Product::FSW, TempWebServicePerProduct."Object Type"::Page, PAGE::"FS Cost Object WS", 'FSCostObject');
      AddMetaDataRecord(TempWebServicePerProduct.Product::FSW, TempWebServicePerProduct."Object Type"::Page, PAGE::"FS Fire Retardancy Factor WS", 'FSFireRetardancyFactor');
      AddMetaDataRecord(TempWebServicePerProduct.Product::FSW, TempWebServicePerProduct."Object Type"::Page, PAGE::"FS Item WS", 'FSItem');
      AddMetaDataRecord(TempWebServicePerProduct.Product::FSW, TempWebServicePerProduct."Object Type"::Page, PAGE::"FS Service Price Book WS", 'FSServicePriceBook');
      AddMetaDataRecord(TempWebServicePerProduct.Product::FSW, TempWebServicePerProduct."Object Type"::Page, PAGE::"FS Service Unit Price WS", 'FSServiceUnitPrice');
      AddMetaDataRecord(TempWebServicePerProduct.Product::FSW, TempWebServicePerProduct."Object Type"::Page, PAGE::"FS Transit Indication WS", 'FSTransitIndication');
      AddMetaDataRecord(TempWebServicePerProduct.Product::FSW, TempWebServicePerProduct."Object Type"::Page, PAGE::"FS Transit Lines WS", 'FSTransitLine');
      AddMetaDataRecord(TempWebServicePerProduct.Product::FSW, TempWebServicePerProduct."Object Type"::Page, PAGE::"FS Workorder WS", 'FSWorkOrder');
      AddMetaDataRecord(TempWebServicePerProduct.Product::FSW, TempWebServicePerProduct."Object Type"::Page, PAGE::"FS Worksheet WS", 'FSWorksheet');
      AddMetaDataRecord(TempWebServicePerProduct.Product::FSW, TempWebServicePerProduct."Object Type"::Page, PAGE::"FS Worksheet Line WS", 'FSWorksheetLine');
      AddMetaDataRecord(TempWebServicePerProduct.Product::FSW, TempWebServicePerProduct."Object Type"::Page, PAGE::"FS Worksh. Hour Line WS", 'FSWorkshHourLine');
      AddMetaDataRecord(TempWebServicePerProduct.Product::FSW, TempWebServicePerProduct."Object Type"::Page, PAGE::"FS Worksh. Item Line WS", 'FSWorkshItemLine');
      AddMetaDataRecord(TempWebServicePerProduct.Product::FSW, TempWebServicePerProduct."Object Type"::Page, PAGE::"FS Worksheet Setup WS", 'FSWorksheetSetup');
      AddMetaDataRecord(TempWebServicePerProduct.Product::FSW, TempWebServicePerProduct."Object Type"::Page, PAGE::"FS Worksh. Serv.Ord. WS", 'FSWorkshServOrd');
      AddMetaDataRecord(TempWebServicePerProduct.Product::FSW, TempWebServicePerProduct."Object Type"::Query, QUERY::"FSW Lns. Trans. In Progress WS", 'FSWLnsTransInProgressWS');
      //TestWebApi
      AddMetaDataRecord(TempWebServicePerProduct.Product::TestWebApi, TempWebServicePerProduct."Object Type"::Page, PAGE::"WebAPI Test WS", 'WebApiTest');
      //HPT
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Codeunit, CODEUNIT::"Hour Portal WS (HPT)", 'HourPortalWSHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Cost Object WS (HPT)", 'CostObjectWSHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Extension Contract WS (HPT)", 'ExtensionContractWSHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Hour Line Templates (HPT)", 'HourLineTemplatesHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Hour Portal Users (HPT)", 'HourPortalUsersHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Hours Consent Lines (HPT)", 'HoursConsentLinesHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Leave Ledger Entry 4PS (HPT)", 'LeaveLedgerEntry4PSHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Leave Overview 4PS (HPT)", 'LeaveOverview4PSHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Site Mgt Hour Header (HPT)", 'SiteMgtHourHeaderHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Site Mgt Hour Lines (HPT)", 'SiteMgtHourLinesHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Site Mgt Hours Codes (HPT)", 'SiteMgtHoursCodesHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Site Mgt Hours Companies(HPT)", 'SiteMgtHoursCompaniesHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Site Mgt Hours Overview (HPT)", 'SiteMgtHoursOverviewHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Site Mgt Plant Companies (HPT)", 'SiteMgtPlantCompaniesHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Plant Location List (HPT)", 'PlantLocationListHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Plant Type List (HPT)", 'PlantTypeListHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Plant Number List (HPT)", 'PlantNumberListHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Cost Comp. Plant List (HPT)", 'CostCompPlantListHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Project Shift List (HPT)", 'ProjectShiftListHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Hour Portal Color Set (HPT)", 'HourPortalColorSetHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Company Logo (HPT)", 'CompanyLogoHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Page, PAGE::"Site Mgt Hours Objects (HPT)", 'SiteMgtHoursObjectsHPTSoap');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Query, QUERY::"Site Mgt Hours Objects (HPT)", 'SiteMgtHoursObjectsHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Query, QUERY::"Hour Portal Fields Templ (HPT)", 'HourPortalFieldsTemplHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Query, QUERY::"Hour Portal Text (HPT)", 'HourPortalTextHPT');
      AddMetaDataRecord(TempWebServicePerProduct.Product::HPT, TempWebServicePerProduct."Object Type"::Query, QUERY::"Site Mgt Hours Employee (HPT)", 'SiteMgtHoursEmployeeHPT');
      //INSBOU
      AddMetaDataRecord(TempWebServicePerProduct.Product::INSBOU, TempWebServicePerProduct."Object Type"::Codeunit, CODEUNIT::"INSBOU Management WS", 'INSBOUManagementWS');
      //WS Tools
      AddMetaDataRecord(TempWebServicePerProduct.Product::"WS Tools", TempWebServicePerProduct."Object Type"::Page, PAGE::"WS Option Fields WS", 'WSOptionFieldsWS');
    END;

    LOCAL PROCEDURE InitialiseMetaDataExternalProducts@1100409029();
    BEGIN
      //CTBportal
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Codeunit, CODEUNIT::"Project Site WS", 'ProjectSiteMgtCTBPP');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Project Site Change Log WS", 'ChangeLogCTBPPCardWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Accident QA WS", 'AccidentQAWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Contact List WS", 'ContactCardWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Document Category WS", 'DocumentCategoryWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Generic Temp Table WS", 'DocumentLinksTempWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Document Link WS", 'DocumentLinkWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Document Properties (SPT)", 'DocumentProperties');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Document Properties WS", 'DocumentPropertiesWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Document Type WS", 'DocumentTypeWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Employee WS", 'EmployeeCardWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Extension Contract WS", 'ExtensionContractWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"House Model WS", 'HouseModelWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Get Order Line (SMF) WS", 'OrderLineWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Get Order (SMF) WS", 'OrderWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Inspection SMF WS", 'InspectionSMFWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Plot WS", 'PlotWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Project Authority WS", 'ProjectAuthorityWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Project WS", 'ProjectCardWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Project Element WS", 'ProjectElementWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Project Principal WS", 'ProjectPrincipalWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Proj Purchase Action WS", 'ProjectPurchaseActionWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Project Responsible Person WS", 'ProjectResponsiblePersonWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Project Site Header WS", 'ProjectSiteHeaderCTBPPWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Project Site Line List  WS", 'ProjectSiteLineCTBPPWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Purchase Header WS", 'PurchaseHeaderWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Purchase Line List WS", 'PurchaseLineWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"QA Deviation WS", 'QADeviationWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Responsibility WS", 'ResponsibilityWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Text Line (SMF) WS", 'TextLineSMFWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Try-out WS", 'TryoutHeaderWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Try-out Line WS", 'TryoutLineWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::CTBportal, TempWebServicePerProduct."Object Type"::Page, PAGE::"Try-out Responsible Person WS", 'TryoutResponsiblePersonWS');
      //SCR (Service Call Recognition) (f.i. WhiteVision)
      AddMetaDataRecord(TempWebServicePerProduct.Product::SCR, TempWebServicePerProduct."Object Type"::Page, PAGE::"SCR Customer WS", 'CustomerSCR');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SCR, TempWebServicePerProduct."Object Type"::Page, PAGE::"SCR Service Location WS", 'ServiceLocationSCR');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SCR, TempWebServicePerProduct."Object Type"::Page, PAGE::"SCR Service Object WS", 'ServiceObjectSCR');
      AddMetaDataRecord(TempWebServicePerProduct.Product::SCR, TempWebServicePerProduct."Object Type"::Codeunit, CODEUNIT::"Service Call Recognition WS", 'ServiceCallRecognitionSCR');
      //WhiteVision
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Codeunit, CODEUNIT::"Pstd. Purch. Doc. Func. (DMS)", 'PstdPurchDocFuncDMS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Codeunit, CODEUNIT::"Purch. Header Functions (DMS)", 'PurchHeaderFunctionsDMS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"Cost Center Card (DMS)", 'DimensionValues');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"Document Approvers (DMS)", 'DocumentApproverDMS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"Employee Card (DMS)", 'EmployeeDMS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"G/L Account Card", 'GLAccountCard');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"Inv. Approval Line Card (DMS)", 'InvoiceApprovalLineDMS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"Pstd. Purch.Cr.Memo Card (DMS)", 'PostedPurchaseCreditMemoDMS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"Posted Purch. Inv. Card (DMS)", 'PostedPurchaseInvoiceDMS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"Purch. Rcpt. Line Card (DMS)", 'PostedPurchaseReceiptLinesDMS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"Project Card (DMS)", 'ProjectCardDMS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"Project Responsible Persons", 'ProjectResponsible');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"Purchase Cr.Memo Card (DMS)", 'PurchaseCreditMemoDMS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"Purch. Cr.Memo Line Card (DMS)", 'PurchaseCreditMemoLineDMS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"Purchase Invoice Card (DMS)", 'PurchaseInvoiceCardDMS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"Purch. Inv. Line Card (DMS)", 'PurchaseInvoiceLineDMS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"Purchase Line Card (DMS)", 'PurchaseLineCardDMS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"Purchase Order Card (DMS)", 'PurchaseOrderCardDMS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"Service Order (General)", 'ServiceOrder');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"Service Responsible Persons", 'ServiceOrderResponsible');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"User Setup", 'UserSetup');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"Currency Card (DMS)", 'ValutaCardDMS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"VAT Posting Setup Card (DMS)", 'VatPostingSetupCardDMS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"VAT Prod. Post. Grp. (DMS)", 'VatProdPostGrpDMS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"Vendor Bank Account Card (DMS)", 'VendorBankAccountDMS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::WhiteVision, TempWebServicePerProduct."Object Type"::Page, PAGE::"Vendor Card (DMS)", 'VendorCardDMS');
      //Empoly
      AddMetaDataRecord(TempWebServicePerProduct.Product::Empoly, TempWebServicePerProduct."Object Type"::Page, PAGE::"Empoly Projects WS", 'EmpolyProjectWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::Empoly, TempWebServicePerProduct."Object Type"::Page, PAGE::"Empoly Project Elements WS", 'EmpolyProjectElementWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::Empoly, TempWebServicePerProduct."Object Type"::Page, PAGE::"Empoly Service Orders WS", 'EmpolyServiceOrderWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::Empoly, TempWebServicePerProduct."Object Type"::Page, PAGE::"Empoly Items WS", 'EmpolyItemWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::Empoly, TempWebServicePerProduct."Object Type"::Page, PAGE::"Empoly Companies WS", 'EmpolyCompanyWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::Empoly, TempWebServicePerProduct."Object Type"::Page, PAGE::"Empoly Locations WS", 'EmpolyLocationWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::Empoly, TempWebServicePerProduct."Object Type"::Page, PAGE::"Empoly Warehouse Order WS", 'EmpolyWarehouseOrderWS');
      AddMetaDataRecord(TempWebServicePerProduct.Product::Empoly, TempWebServicePerProduct."Object Type"::Page, PAGE::"Reason Codes WS", 'ReasonCodesWS');
      //BuyerGuidance (Kopersbegeleiding.nl)
      AddMetaDataRecord(TempWebServicePerProduct.Product::BuyerGuidance, TempWebServicePerProduct."Object Type"::Codeunit, CODEUNIT::"Buyer Management Integation", 'BuyerManagementIntegation');
      AddMetaDataRecord(TempWebServicePerProduct.Product::BuyerGuidance, TempWebServicePerProduct."Object Type"::Page, PAGE::"Project WS (BM Integration)", 'ProjectWSBMIntegration');
      AddMetaDataRecord(TempWebServicePerProduct.Product::BuyerGuidance, TempWebServicePerProduct."Object Type"::Page, PAGE::"Project Principal WS (BM Int.)", 'ProjectPrincipalWSBMInt');
      AddMetaDataRecord(TempWebServicePerProduct.Product::BuyerGuidance, TempWebServicePerProduct."Object Type"::Page, PAGE::"House Type WS (BM Integration)", 'HouseTypeWSBMIntegration');
      AddMetaDataRecord(TempWebServicePerProduct.Product::BuyerGuidance, TempWebServicePerProduct."Object Type"::Page, PAGE::"House Model WS (BM Intr.)", 'HouseModelWSBMIntr');
      AddMetaDataRecord(TempWebServicePerProduct.Product::BuyerGuidance, TempWebServicePerProduct."Object Type"::Page, PAGE::"Option Main Group WS (BM Int.)", 'OptionMainGroupWSBMInt');
      AddMetaDataRecord(TempWebServicePerProduct.Product::BuyerGuidance, TempWebServicePerProduct."Object Type"::Page, PAGE::"Option Group WS (BM Intr.)", 'OptionGroupWSBMIntr');
      AddMetaDataRecord(TempWebServicePerProduct.Product::BuyerGuidance, TempWebServicePerProduct."Object Type"::Page, PAGE::"Option Sub Group WS (BM Intr.)", 'OptionSubGroupWSBMIntr');
      AddMetaDataRecord(TempWebServicePerProduct.Product::BuyerGuidance, TempWebServicePerProduct."Object Type"::Page, PAGE::"Plot WS (BM Integration)", 'PlotWSBMIntegration');
      AddMetaDataRecord(TempWebServicePerProduct.Product::BuyerGuidance, TempWebServicePerProduct."Object Type"::Page, PAGE::"Option WS (BM Integration)", 'OptionWSBMIntegration');
      AddMetaDataRecord(TempWebServicePerProduct.Product::BuyerGuidance, TempWebServicePerProduct."Object Type"::Page, PAGE::"Option S./T. Text WS (BM Int.)", 'OptionSTTextWSBMInt');
      AddMetaDataRecord(TempWebServicePerProduct.Product::BuyerGuidance, TempWebServicePerProduct."Object Type"::Page, PAGE::"Project Authority WS (BM Int.)", 'ProjectAuthorityWSBMInt');
      AddMetaDataRecord(TempWebServicePerProduct.Product::BuyerGuidance, TempWebServicePerProduct."Object Type"::Page, PAGE::"Installment WS (BM int.)", 'InstallmentWSBMint');
      //Plant Transport Planning (External Package)
      AddMetaDataRecord(TempWebServicePerProduct.Product::PlantTransportPlanning,
        TempWebServicePerProduct."Object Type"::Page, PAGE::"PO Transport Request WS", 'PlantOrderTransportRequestTRPL');
      AddMetaDataRecord(TempWebServicePerProduct.Product::PlantTransportPlanning,
        TempWebServicePerProduct."Object Type"::Codeunit, CODEUNIT::"External Transport Planning WS", 'PlantTransportPlanningTRPL');
    END;

    LOCAL PROCEDURE AddMetaDataRecord@1100409007(Product@1100409000 : Option;ObjectType@1100409003 : Option;OjbectID@1100409002 : Integer;ServiceName@1100409001 : Text[240]);
    BEGIN
      TempWebServicePerProduct.Product := Product;
      TempWebServicePerProduct."Object Type" := ObjectType;
      TempWebServicePerProduct."Object ID" := OjbectID;
      TempWebServicePerProduct."Service Name" := ServiceName;
      TempWebServicePerProduct.INSERT(TRUE);
    END;

    BEGIN
    {
      -

      **********************
      **********DEPRICATED********
      This CU is depricated. It is replaced by CU Possible Web Service Mgt (11125354)
      **********DEPRICATED********
      **********************






      NOTE:
      ** When adding a new product, also change:
      ** - table 11229795 Temp. Web Service per Product
      ** - page 11229479 Web Service Setup per Product
      ** And add the web services to this function:
      ** - InitialiseMetaData4PSProducts
      ** - InitialiseMetaDataExternalProducts

      Function Structure:
      - Toggle<product>Webservices(Published : Boolean)
      - Is<Product>Published() : Boolean
      - Show<Product>Webservices()


      //dbeekman: regular expression find/replace in Notepad++
      (Page)                                     .*(FS\s.*\S).*(FS\S*).*
      AddMetaDataRecord\(TempWebServicePerProduct.Product::MRA, TempWebServicePerProduct."Object Type"::\1, \1::"\2", '\3'\);
    }
    END.
  }
}

