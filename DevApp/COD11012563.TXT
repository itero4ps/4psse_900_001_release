OBJECT Codeunit 11012563 Post Rental Correction
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    TableNo=11012565;
    OnRun=BEGIN
            AdjustmentRec.COPY(Rec);
            Code;
            Rec := AdjustmentRec;
          END;

  }
  CODE
  {
    VAR
      Text000@11012002 : TextConst 'ENU=Enter %1 and/or %2.';
      Text001@11012003 : TextConst 'ENU=There are no %1s present.';
      Text002@11012004 : TextConst 'ENU=Quantity must be 1 for Plant No. %1 %2.';
      Text003@11012005 : TextConst 'ENU=Quantity could not be 0 for Plant %1';
      PlantSetupRec@1100485000 : Record 11012550;
      AdjustmentRec@11012000 : Record 11012565;
      CorrLineRec@11012001 : Record 11012566;
      PlantRateCodeRec@1100525000 : Record 11020502;

    PROCEDURE Code@1();
    BEGIN
      WITH AdjustmentRec DO BEGIN
        PlantSetupRec.GET;

        LOCKTABLE;

        TESTFIELD(Posted,FALSE);
        IF ("Debit Location" = '') AND ("Credit Location" = '') THEN
          ERROR(
            Text000,
            FIELDCAPTION("Debit Location"),
            FIELDCAPTION("Credit Location"));

        IF "Debit Location" <> '' THEN BEGIN
          TESTFIELD("Debit Location");
          CheckBlock("Debit Location");
        END;

        IF "Credit Location" <> '' THEN BEGIN
          TESTFIELD("Credit Location");
          CheckBlock("Credit Location");
        END;

        CorrLineRec.SETRANGE("Rental  Correction No.","No.");
        CorrLineRec.SETRANGE(Type,CorrLineRec.Type::Plant);
        IF CorrLineRec.FIND('-') THEN
          REPEAT
            TestCorrectionLine;
          UNTIL CorrLineRec.NEXT = 0
        ELSE
          ERROR(Text001, CorrLineRec.TABLECAPTION);

        Posted := TRUE;
        IF "Posting Date" = 0D THEN
          "Posting Date" := WORKDATE;
        MODIFY;

      END;
    END;

    PROCEDURE TestCorrectionLine@4();
    BEGIN
      WITH CorrLineRec DO BEGIN
        TESTFIELD("Plant Type");
        TESTFIELD("No.");
        TESTFIELD("Starting Date");
        IF ("Debit Rental Type" = "Debit Rental Type"::Rental) OR
           ("Credit Rental Type" = "Credit Rental Type"::Rental)
        THEN
          TESTFIELD("Ending Date");

        IF PlantSetupRec."Rate Codes" AND (AdjustmentRec."Debit Location" <> '') AND
           ("Debit Rental Type" = "Debit Rental Type"::Rental)
        THEN BEGIN
          TESTFIELD("Debit Rate Code");
          PlantRateCodeRec.CheckPlantRateCode(AdjustmentRec."Debit Location", "Debit Rate Code", TRUE, '');
        END ELSE
          TESTFIELD("Debit Rate Code", '');

        IF PlantSetupRec."Rate Codes" AND (AdjustmentRec."Credit Location" <> '') AND
           ("Credit Rental Type" = "Credit Rental Type"::Rental)
        THEN BEGIN
          TESTFIELD("Credit Rate Code");
          PlantRateCodeRec.CheckPlantRateCode(AdjustmentRec."Credit Location", "Credit Rate Code", TRUE, '');
        END ELSE
          TESTFIELD("Credit Rate Code", '');

        CALCFIELDS(Bulk);
        IF NOT Bulk AND (Quantity <> 1) THEN
          ERROR(Text002,"Plant Type","No.");
        IF Bulk AND (Quantity = 0) THEN
          ERROR(Text003,"Plant Type");
        IF (AdjustmentRec."Debit Location" <> '') AND ("Debit Rental Type" = "Debit Rental Type"::Rental) THEN BEGIN
          CorrLineRec.TESTFIELD("Debit No. of Rental Periods");
          CorrLineRec.TESTFIELD("Debet Amount");
        END;
        IF (AdjustmentRec."Credit Location" <> '') AND ("Credit Rental Type" = "Credit Rental Type"::Rental) THEN BEGIN
          CorrLineRec.TESTFIELD("Credit No. of Rental Periods");
          CorrLineRec.TESTFIELD("Credit Amount");
        END;
        TESTFIELD(Description);  //*33268
        IF NOT PlantSetupRec.CheckElementMandatory(AdjustmentRec."Debit Location", "Debit Element", '') THEN //*C004558
          TESTFIELD("Debit Element");
        IF NOT PlantSetupRec.CheckElementMandatory(AdjustmentRec."Credit Location", "Credit Element", '') THEN //*C004558
          TESTFIELD("Credit Element");
      END;
    END;

    PROCEDURE ProcessCorrectionLine@2();
    BEGIN
    END;

    BEGIN
    END.
  }
}

