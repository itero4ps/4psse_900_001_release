OBJECT Codeunit 11012601 UAR Hour Acc.-Check Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1210190000 : TextConst 'ENU=cannot be a closing date';
      HrsSetupRec@1210190008 : Record 11012600;
      ProjSetupRec@1210190011 : Record 315;
      GLSetupRec@1210190002 : Record 98;
      UserSetupRec@1210190001 : Record 91;
      Text001@1210190003 : TextConst 'ENU=is not within your range of allowed posting dates';
      Text002@1210190004 : TextConst 'ENU=may not be %1 ''%2'' from the %3';
      ProjRec@1210190012 : Record 11072003;
      ProjElemRec@1100485000 : Record 11012010;
      ServOrderRec@1100485001 : Record 11012823;
      HourAccFunctionsCU@1210190010 : Codeunit 11012607;
      AllowPostingFrom@1210190006 : Date;
      AllowPostingTo@1210190005 : Date;
      Text003@1210190007 : TextConst 'ENU=Starting and ending time must be entered, in line %1, week %2-%3, employee ''%4''.';
      Text004@1210190009 : TextConst 'ENU=Travel hours not allowed for UAR Task ''%1''  of project ''%2'', in week %3-%4, employee ''%5'', line %6.';
      Text005@1210190013 : TextConst 'ENU=Travel hours only allowed in combination with working hours, in week %2-%3, employee ''%4'', line %5, project ''%1'', service order ''%6''.';
      Text006@1210190014 : TextConst 'ENU=Pause not allowed for UAR Task ''%1''  of project ''%2'', in week %3-%4, employee ''%5'', line %6.';
      Text007@1210190015 : TextConst 'ENU=Starting and ending time of the pause must be entered for hour line %1, week %2-%3, employee ''%4''.';

    PROCEDURE RunCheck@1(VAR HourAccRec@1000 : Record 11012609;VAR HourAccLineRec@1210190000 : Record 11012610);
    VAR
      lvHourAccPauseRec@1210190001 : Record 11012611;
    BEGIN
      IF HourAccLineRec.EmptyLine THEN
        EXIT;

      WITH HourAccRec DO BEGIN
        TESTFIELD(Year);
        TESTFIELD(Week);
        TESTFIELD("Document No.");
        TESTFIELD("Posting Date");
        TESTFIELD("Employee No.");
        CALCFIELDS("Company No. Paymaster", "Administration No. Paymaster");
        IF NOT External THEN BEGIN
          TESTFIELD("Company No. Paymaster");
          TESTFIELD("Administration No. Paymaster");
        END ELSE BEGIN
          TESTFIELD(HourAccRec.Employer);
        END;

        IF "Posting Date" <> NORMALDATE("Posting Date") THEN
          FIELDERROR("Posting Date",Text000);

        IF (AllowPostingFrom = 0D) AND (AllowPostingTo = 0D) THEN BEGIN
          HrsSetupRec.GET;
          HrsSetupRec.TESTFIELD("UAR Task Worked Hours");
          IF USERID <> '' THEN
            IF UserSetupRec.GET(USERID) THEN BEGIN
              AllowPostingFrom := UserSetupRec."Allow Posting From";
              AllowPostingTo := UserSetupRec."Allow Posting To";
            END;
          IF (AllowPostingFrom = 0D) AND (AllowPostingTo = 0D) THEN BEGIN
            GLSetupRec.GET;
            AllowPostingFrom := GLSetupRec."Allow Posting From";
            AllowPostingTo := GLSetupRec."Allow Posting To";
          END;
          IF AllowPostingTo = 0D THEN
            AllowPostingTo := 99991231D;
        END;
        IF ("Posting Date" < AllowPostingFrom) OR ("Posting Date" > AllowPostingTo) THEN
          FIELDERROR("Posting Date",Text001);
      END;

      WITH HourAccLineRec DO BEGIN
        IF "Receiving Company" <> '' THEN BEGIN
          ProjSetupRec.CHANGECOMPANY("Receiving Company");
          ProjRec.CHANGECOMPANY("Receiving Company");
          ProjElemRec.CHANGECOMPANY("Receiving Company");
          ServOrderRec.CHANGECOMPANY("Receiving Company");
        END ELSE BEGIN
          ProjSetupRec.CHANGECOMPANY(COMPANYNAME);
          ProjRec.CHANGECOMPANY(COMPANYNAME);
          ProjElemRec.CHANGECOMPANY(COMPANYNAME);
          ServOrderRec.CHANGECOMPANY(COMPANYNAME);
        END;
        ProjSetupRec.GET;

        TESTFIELD("Cost Component");
        IF ("Project No." <> '') THEN BEGIN
          //IF (ProjSetupRec."Posting Element Mandatory") THEN     //**4PS01.o
          IF (ProjRec."Posting Element Mandatory") THEN            //**4PS01.n
            TESTFIELD(Element);
          ProjRec.GET("Project No.");
          IF (ProjSetupRec."Provisions at Closure") THEN
            ProjRec.CheckProjectStatus(-1)
          ELSE
            ProjRec.CheckProjectStatus(1);
          IF Element <> '' THEN BEGIN //Call 6564
            ProjElemRec.GET("Project No.", Element);
            ProjElemRec.CheckProjectElementBlocked;
          END;
          ProjRec.TESTFIELD("UAR Task");
          ProjRec.CALCFIELDS("UAR Task Pause Allowed", "UAR Task Travel Hours Allowed");
        END;
        CASE Type OF
          Type::Project:
            BEGIN
              TESTFIELD("Project No.");
              TESTFIELD("Service Order No.", '');
            END;
          Type::Service:
            BEGIN
              TESTFIELD("Service Order No.");
              //TESTFIELD("Service Contract No.");   //db, 17-08-15: only relevant for old service module
              ServOrderRec.GET("Service Order No.");
              ServOrderRec.CheckStatus(1);
              //ServOrderRec.TESTFIELD("Service Contract No.");   //db, 17-08-15: only relevant for old service module
              IF "Additional Cost (Service)" THEN
                ServOrderRec.TESTFIELD("Service Type (Other)")
              ELSE
                ServOrderRec.TESTFIELD("Service Type");
              ProjRec."UAR Task" := HrsSetupRec."UAR Task Worked Hours";
              ProjRec."UAR Task Pause Allowed" := TRUE;
              ProjRec."UAR Task Travel Hours Allowed" := TRUE;
              ProjRec."UAR Indirect" := FALSE;
            END;
        END;

        IF ("Cost Component" = HrsSetupRec."Cost Component Pause") THEN BEGIN
          FIELDERROR("Cost Component", STRSUBSTNO(Text002, HrsSetupRec.FIELDCAPTION("Cost Component Pause"),
            HrsSetupRec."Cost Component Pause", HrsSetupRec.TABLECAPTION));
        END;

        IF (("Monday From" <> 0T) AND ("Monday To" = 0T)) OR
           (("Monday From" = 0T) AND ("Monday To" <> 0T)) OR
           (("Tuesday From" <> 0T) AND ("Tuesday To" = 0T)) OR
           (("Tuesday From" = 0T) AND ("Tuesday To" <> 0T)) OR
           (("Wednesday From" <> 0T) AND ("Wednesday To" = 0T)) OR
           (("Wednesday From" = 0T) AND ("Wednesday To" <> 0T)) OR
           (("Thursday From" <> 0T) AND ("Thursday To" = 0T)) OR
           (("Thursday From" = 0T) AND ("Thursday To" <> 0T)) OR
           (("Friday From" <> 0T) AND ("Friday To" = 0T)) OR
           (("Friday From" = 0T) AND ("Friday To" <> 0T)) OR
           (("Saterday From" <> 0T) AND ("Saterday To" = 0T)) OR
           (("Saterday From" = 0T) AND ("Saterday To" <> 0T)) OR
           (("Sunday From" <> 0T) AND ("Sunday To" = 0T)) OR
           (("Sunday From" = 0T) AND ("Sunday To" <> 0T))
        THEN
          ERROR(Text003, "Line No.", Year, Week, "Employee No.");

         IF (NOT ProjRec."UAR Task Travel Hours Allowed") AND
            (("Monday Travel To" <> 0) OR ("Monday Travel Back" <> 0)  OR
             ("Tuesday Travel To" <> 0) OR ("Tuesday Travel Back" <> 0) OR
             ("Wednesday Travel To" <> 0) OR ("Wednesday Travel Back" <> 0) OR
             ("Thursday Travel To" <> 0) OR ("Thursday Travel Back" <> 0) OR
             ("Friday Travel To" <> 0) OR ("Friday Travel Back" <> 0) OR
             ("Saterday Travel To" <> 0) OR ("Saterday Travel Back" <> 0) OR
             ("Sunday Travel To" <> 0) OR ("Sunday Travel Back" <> 0) )
          THEN
            ERROR(Text004, ProjRec."UAR Task", "Project No.", Year, Week, "Employee No.", "Line No.");

        IF ( (("Monday From" = 0T) AND ("Monday To" = 0T)) AND
             (("Monday Travel To" <> 0) OR ("Monday Travel Back" <> 0)) ) OR
           ( (("Tuesday From" = 0T) AND ("Tuesday To" = 0T)) AND
             (("Tuesday Travel To" <> 0) OR ("Tuesday Travel Back" <> 0)) ) OR
           ( (("Wednesday From" = 0T) AND ("Wednesday To" = 0T)) AND
             (("Wednesday Travel To" <> 0) OR ("Wednesday Travel Back" <> 0)) ) OR
           ( (("Thursday From" = 0T) AND ("Thursday To" = 0T)) AND
             (("Thursday Travel To" <> 0) OR ("Thursday Travel Back" <> 0)) ) OR
           ( (("Friday From" = 0T) AND ("Friday To" = 0T)) AND
             (("Friday Travel To" <> 0) OR ("Friday Travel Back" <> 0)) ) OR
           ( (("Saterday From" = 0T) AND ("Saterday To" = 0T)) AND
             (("Saterday Travel To" <> 0) OR ("Saterday Travel Back" <> 0)) ) OR
           ( (("Sunday From" = 0T) AND ("Sunday To" = 0T)) AND
             (("Sunday Travel To" <> 0) OR ("Sunday Travel Back" <> 0)) )
          THEN
            ERROR(Text005, "Project No.", Year, Week, "Employee No.", "Line No.", "Service Order No.");
      END;

      WITH lvHourAccPauseRec DO BEGIN
        SETRANGE(Year, HourAccLineRec.Year);
        SETRANGE(Week, HourAccLineRec.Week);
        SETRANGE("Employee No.", HourAccLineRec."Employee No.");
        SETRANGE("Hour Acc. Line No.", HourAccLineRec."Line No.");
        IF FIND('-') THEN BEGIN
          REPEAT
            IF NOT EmptyLine THEN BEGIN
              IF (NOT ProjRec."UAR Task Pause Allowed") THEN
                ERROR(Text006, ProjRec."UAR Task", HourAccLineRec."Project No.", Year, Week, "Employee No.", "Line No.");

              IF (("Monday From" <> 0T) AND ("Monday To" = 0T)) OR
                 (("Monday From" = 0T) AND ("Monday To" <> 0T)) OR
                 (("Tuesday From" <> 0T) AND ("Tuesday To" = 0T)) OR
                 (("Tuesday From" = 0T) AND ("Tuesday To" <> 0T)) OR
                 (("Wednesday From" <> 0T) AND ("Wednesday To" = 0T)) OR
                 (("Wednesday From" = 0T) AND ("Wednesday To" <> 0T)) OR
                 (("Thursday From" <> 0T) AND ("Thursday To" = 0T)) OR
                 (("Thursday From" = 0T) AND ("Thursday To" <> 0T)) OR
                 (("Friday From" <> 0T) AND ("Friday To" = 0T)) OR
                 (("Friday From" = 0T) AND ("Friday To" <> 0T)) OR
                 (("Saterday From" <> 0T) AND ("Saterday To" = 0T)) OR
                 (("Saterday From" = 0T) AND ("Saterday To" <> 0T)) OR
                 (("Sunday From" <> 0T) AND ("Sunday To" = 0T)) OR
                 (("Sunday From" = 0T) AND ("Sunday To" <> 0T))
              THEN
                ERROR(Text007, "Hour Acc. Line No.", Year, Week, "Employee No.");

              HourAccFunctionsCU.CheckPauseDuringWorktime(1, lvHourAccPauseRec);
              HourAccFunctionsCU.CheckPauseDuringWorktime(2, lvHourAccPauseRec);
              HourAccFunctionsCU.CheckPauseDuringWorktime(3, lvHourAccPauseRec);
              HourAccFunctionsCU.CheckPauseDuringWorktime(4, lvHourAccPauseRec);
              HourAccFunctionsCU.CheckPauseDuringWorktime(5, lvHourAccPauseRec);
              HourAccFunctionsCU.CheckPauseDuringWorktime(6, lvHourAccPauseRec);
              HourAccFunctionsCU.CheckPauseDuringWorktime(7, lvHourAccPauseRec);
            END;
          UNTIL NEXT = 0;
        END;
      END;
    END;

    BEGIN
    {
      4PS01 JD, 8 aug 2007, Call 5990, "Boeken element veplicht" ook op project kaart
    }
    END.
  }
}

