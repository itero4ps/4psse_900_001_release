OBJECT Codeunit 11012686 Buyer Management Integation
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      OK@1100525000 : TextConst 'ENU=ok';

    PROCEDURE UpdateOptionStatusOffered@1100409000(ProjectNo@1100409001 : Code[20];PlotNo@1100409002 : Code[10];MainGroup@1100409003 : Code[20];Group@1100409004 : Code[20];SubGroup@1100409005 : Code[20];OptionCode@1100409006 : Code[20]);
    VAR
      Option@1100528700 : Record 11012502;
    BEGIN
      UpdateOptionStatus(
        ProjectNo,
        PlotNo,
        MainGroup,
        Group,
        SubGroup,
        OptionCode,
        Option.Status::Offered);
    END;

    PROCEDURE UpdateOptionStatusOrder@1100409003(ProjectNo@1100409001 : Code[20];PlotNo@1100409002 : Code[10];MainGroup@1100409003 : Code[20];Group@1100409004 : Code[20];SubGroup@1100409005 : Code[20];OptionCode@1100409006 : Code[20]);
    VAR
      Option@1100409000 : Record 11012502;
    BEGIN
      UpdateOptionStatus(
        ProjectNo,
        PlotNo,
        MainGroup,
        Group,
        SubGroup,
        OptionCode,
        Option.Status::Order);
    END;

    LOCAL PROCEDURE UpdateOptionStatus@1100528703(ProjectNo@1100409001 : Code[20];PlotNo@1100409002 : Code[10];MainGroup@1100409003 : Code[20];Group@1100409004 : Code[20];SubGroup@1100409005 : Code[20];OptionCode@1100409006 : Code[20];Status@1100528703 : Option);
    VAR
      Option@1100409000 : Record 11012502;
      OldOption@1100528700 : Record 11012502;
      DeleteBudget@1100528701 : Boolean;
      UpdateBudget@1100528702 : Boolean;
    BEGIN
      AddOptionToPlotIfNotExist(
        ProjectNo,
        PlotNo,
        MainGroup,
        Group,
        SubGroup,
        OptionCode);

      Option.SETRANGE("Project No.", ProjectNo);
      Option.SETRANGE("Plot No.", PlotNo);
      Option.SETRANGE("Main Group", MainGroup);
      Option.SETRANGE(Group, Group);
      Option.SETRANGE("Sub Group", SubGroup);
      Option.SETRANGE(Option, OptionCode);
      IF Option.FINDSET(TRUE) THEN BEGIN
        OldOption := Option;
        Option.VALIDATE(Status, Status);
        Option.UpdateOptQuoteStatus(Option);
        Option.MODIFY(TRUE);

        DeleteBudget := FALSE;
        UpdateBudget := Option.CheckUpdateBudgetOnStatChange(OldOption.Status, Option.Status);
        IF NOT UpdateBudget THEN
          DeleteBudget := Option.CheckDeleteBudgetOnStatChange(OldOption.Status, Option.Status);

        IF UpdateBudget THEN
          Option.UpdateWorkBudgetOnChanges(Option, FALSE, FALSE)
        ELSE BEGIN
          IF DeleteBudget THEN
            Option.UpdateWorkBudgetOnChanges(OldOption, FALSE, TRUE);
        END;
      END ELSE
        ERROR('');
    END;

    PROCEDURE UpdateOptionQuantity@1100525000(ProjectNo@1100409001 : Code[20];PlotNo@1100409002 : Code[10];MainGroup@1100409003 : Code[20];Group@1100409004 : Code[20];SubGroup@1100409005 : Code[20];OptionCode@1100409006 : Code[20];Quantity@1100528703 : Decimal);
    VAR
      Option@1100409000 : Record 11012502;
    BEGIN
      AddOptionToPlotIfNotExist(
        ProjectNo,
        PlotNo,
        MainGroup,
        Group,
        SubGroup,
        OptionCode);

      Option.SETRANGE("Project No.", ProjectNo);
      Option.SETRANGE("Plot No.", PlotNo);
      Option.SETRANGE("Main Group", MainGroup);
      Option.SETRANGE(Group, Group);
      Option.SETRANGE("Sub Group", SubGroup);
      Option.SETRANGE(Option, OptionCode);
      IF Option.FINDSET(TRUE) THEN BEGIN
        IF Option.Quantities THEN BEGIN
          Option.VALIDATE(Quantity, Quantity);
          Option.MODIFY(TRUE);
        END;
      END ELSE
        ERROR('');
    END;

    PROCEDURE AddOptionToPlot@1100525001(ProjectNo@1100528708 : Code[20];PlotNo@1100525000 : Code[10];HouseModel@1100528707 : Code[20];MainGroup@1100528706 : Code[20];Group@1100528705 : Code[20];SubGroup@1100528704 : Code[20];OptionCode@1100528703 : Code[20]) : Text;
    VAR
      BuyersManagement@1100528702 : Codeunit 11012500;
      Plot@1100528710 : Record 11012500;
      Option@1100528709 : Record 11012502;
      LevelFrom@1100528701 : 'Standard,Project,Plot';
      LevelTo@1100528700 : 'Standard,Project,Plot';
    BEGIN
      Plot.GET(ProjectNo, PlotNo);
      Option.GET(ProjectNo, '', HouseModel, MainGroup, Group, SubGroup, OptionCode);

      BuyersManagement.BmCopyOptions(LevelFrom::Project, LevelTo::Plot, ProjectNo, ProjectNo, '',
          PlotNo, Plot."House Model", Plot."House Model",
          MainGroup, '', Group, '', SubGroup, '', OptionCode, '');
      EXIT(OK);
    END;

    LOCAL PROCEDURE AddOptionToPlotIfNotExist@1100528700(ProjectNo@1100528708 : Code[20];PlotNo@1100528707 : Code[10];MainGroup@1100528706 : Code[20];Group@1100528705 : Code[20];SubGroup@1100528704 : Code[20];OptionCode@1100528703 : Code[20]);
    VAR
      BuyersManagement@1100528702 : Codeunit 11012500;
      Plot@1100528710 : Record 11012500;
      Option@1100528709 : Record 11012502;
      LevelFrom@1100528701 : 'Standard,Project,Plot';
      LevelTo@1100528700 : 'Standard,Project,Plot';
    BEGIN
      IF NOT Plot.GET(ProjectNo, PlotNo) THEN
        ERROR('');

      Option.SETRANGE("Project No.", ProjectNo);
      Option.SETRANGE("Plot No.", PlotNo);
      Option.SETRANGE("Main Group", MainGroup);
      Option.SETRANGE(Group, Group);
      Option.SETRANGE("Sub Group", SubGroup);
      Option.SETRANGE(Option, OptionCode);
      IF NOT Option.FINDFIRST THEN
        BuyersManagement.BmCopyOptions(
          LevelFrom::Project,
          LevelTo::Plot,
          ProjectNo,
          ProjectNo,
          '',
          PlotNo,
          Plot."House Model",
          Plot."House Model",
          MainGroup,
          '',
          Group,
          '',
          SubGroup,
          '',
          OptionCode,
          '');
    END;

    BEGIN
    {
      This page is designed for integration with kopersbegeleiding.nl.
    }
    END.
  }
}

