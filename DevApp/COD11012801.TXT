OBJECT Codeunit 11012801 Service Jnl. Check Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    TableNo=11012820;
    OnRun=BEGIN
            GLSetup.GET;
            RunCheck(Rec);
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=cannot be a closing date';
      Text001@1001 : TextConst 'ENU=is not within your range of allowed posting dates';
      Text002@1002 : TextConst 'ENU=The combination of dimensions used in %1 %2, %3, %4 is blocked. %5';
      Text003@1003 : TextConst 'ENU=A dimension used in %1 %2, %3, %4 has caused an error. %5';
      ServiceSetup@1100525000 : Record 11012800;
      GLSetup@1004 : Record 98;
      UserSetup@1005 : Record 91;
      DimMgt@1007 : Codeunit 408;
      AllowPostingFrom@1008 : Date;
      AllowPostingTo@1009 : Date;

    PROCEDURE RunCheck@1(VAR SMJnlLine@1000 : Record 11012820);
    VAR
      ServiceOrder@1100528600 : Record 11012823;
      TableID@1002 : ARRAY [10] OF Integer;
      No@1003 : ARRAY [10] OF Code[20];
    BEGIN
      WITH SMJnlLine DO BEGIN
        IF EmptyLine THEN
          EXIT;

        IF "Service Order No." <> '' THEN
          IF NOT ServiceOrder.GET("Service Order No.") THEN
            ServiceOrder.INIT;

        TESTFIELD("Document No.");
        TESTFIELD("Posting Date");

        IF NORMALDATE("Posting Date") <> "Posting Date" THEN
          FIELDERROR("Posting Date",Text000);

        IF (AllowPostingFrom = 0D) AND (AllowPostingTo = 0D) THEN BEGIN
          IF USERID <> '' THEN BEGIN
            IF UserSetup.GET(USERID) THEN BEGIN
              AllowPostingFrom := UserSetup."Allow Posting From";
              AllowPostingTo := UserSetup."Allow Posting To";
            END;
          END;
          IF (AllowPostingFrom = 0D) AND (AllowPostingTo = 0D) THEN BEGIN
            GLSetup.GET;
            AllowPostingFrom := GLSetup."Allow Posting From";
            AllowPostingTo := GLSetup."Allow Posting To";
          END;
          IF AllowPostingTo = 0D THEN
            AllowPostingTo := 99991231D;
        END;
        IF ("Posting Date" < AllowPostingFrom) OR ("Posting Date" > AllowPostingTo) THEN
          FIELDERROR("Posting Date",Text001);

        //IF ("Document Date" <> 0D) THEN
        //  IF ("Document Date" <> NORMALDATE("Document Date")) THEN
        //    FIELDERROR("Document Date",Text000);

        ServiceSetup.GET;
        IF (ServiceSetup."Cost Component Mandatory") AND
           ("Service Order No." <> '') AND
           ("Shortcut Dimension 2 Code" <> '') THEN
          TESTFIELD("Cost Component");

        //DP00387 sn
        IF NOT DimMgt.CheckDimIDComb("Dimension Set ID") THEN
          ERROR(
            Text002,
            TABLECAPTION,
            "Line No.",
            DimMgt.GetDimCombErr);

        TableID[1] := DATABASE::"Service-Contract";
        No[1] := "Service Contract No.";
        IF NOT DimMgt.CheckDimValuePosting(TableID,No,"Dimension Set ID") THEN
          IF "Line No." <> 0 THEN
            ERROR(
              Text003,
              TABLECAPTION,
              "Line No.",
              DimMgt.GetDimValuePostingErr)
          ELSE
            ERROR(DimMgt.GetDimValuePostingErr);

        //DP00387 en
        {FIXED
        IF NOT DimMgt.CheckJnlLineDimComb(JnlLineDim) THEN
          ERROR(
            Text002,
            TABLECAPTION,
            "Line No.",
            DimMgt.GetDimCombErr);

        TableID[1] := DATABASE::"Service-Contract";
        No[1] := "Service Contract No.";
        IF NOT DimMgt.CheckJnlLineDimValuePosting(JnlLineDim,TableID,No) THEN
          IF "Line No." <> 0 THEN
            ERROR(
              Text003,
              TABLECAPTION,
              "Line No.",
              DimMgt.GetDimValuePostingErr)
          ELSE
            ERROR(DimMgt.GetDimValuePostingErr);
         }
      END;
    END;

    BEGIN
    END.
  }
}

