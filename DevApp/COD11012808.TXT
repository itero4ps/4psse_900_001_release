OBJECT Codeunit 11012808 Service Object Management
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1100528601 : TextConst 'ENU=Service Package %1 is not part of standard object %2';
      Text001@1100528600 : TextConst 'ENU=%1 %2 is not part of standard object %3 and service package %4';
      Text002@1100528300 : TextConst 'ENU=%1  processed.';

    PROCEDURE CreateServiceLocation@1100525002(VAR ContrRec@1100525005 : Record 11012812);
    VAR
      ServSetup@1100525014 : Record 11012800;
      ServLocRec@1100525000 : Record 11012801;
      ObjectRec@1100525011 : Record 11020334;
      ObjectGrpRec@1100525012 : Record 11012830;
    BEGIN
      ServSetup.GET;

      ObjectGrpRec.GET(ObjectRec."Object Group");

      ServLocRec.VALIDATE(Description, ContrRec.Description);
      ServLocRec."Description 2" := ContrRec."Description 2";
      ServLocRec.VALIDATE("Customer No." , ContrRec."Customer No.");
      ServLocRec."Contact Name" := ContrRec."Contact Name";
      ServLocRec."Phone No." := ContrRec."Phone No.";
      ServLocRec."Fax No." := ContrRec."Fax No.";
      ServLocRec."E-Mail" := ContrRec."E-Mail";
      ServLocRec."Phone No. 2" := ContrRec."Phone No. 2";
      ServLocRec."Mobile Phone No." := ContrRec."Mobile Phone No.";
      ServLocRec."Location Manager" := ContrRec."Contract Manager";
      ServLocRec.VALIDATE("Global Dimension 1 Code" , ContrRec."Global Dimension 1 Code");
      ServLocRec.MODIFY;
    END;

    PROCEDURE FillDefaultContractData@1100526200(VAR lvContractRec@1100525000 : Record 11012812);
    VAR
      ServSetup@1100525001 : Record 11012800;
    BEGIN
      //db, 12-10-10: SERV_CONS
      ServSetup.GET;
      WITH lvContractRec DO BEGIN
        IF Description = '' THEN
          Description := ServSetup."Service Contract Description 1";
        IF "Description 2" = '' THEN
          "Description 2" := ServSetup."Service Contract Description 2";
      //  IF "Index Date" = 0D THEN
      //    "Index Date" := ServSetup."Default Index Date";
      END;
    END;

    PROCEDURE LookupServicePackageStdObj@1100526201(IStandardObjectNo@1100526200 : Code[20];VAR IServicePackage@1100526201 : Code[20]) : Boolean;
    VAR
      DefMaintSchServObject@1100526202 : Record 11071703;
      ServicePackage@1100526203 : Record 11012806;
      ServicePackageFrm@1100526204 : Page 11012857;
    BEGIN
      //mg, 14-01-11: M24715
      DefMaintSchServObject.SETRANGE("Object No.", IStandardObjectNo);
      IF DefMaintSchServObject.FINDFIRST THEN BEGIN
        REPEAT
          IF ServicePackage.GET(DefMaintSchServObject."Service Package") THEN
            ServicePackage.MARK(TRUE);
        UNTIL DefMaintSchServObject.NEXT = 0;
        ServicePackage.MARKEDONLY(TRUE);
      END ELSE
        ServicePackage.SETRANGE("Select for Maint. Sales Rate", TRUE);

      ServicePackageFrm.LOOKUPMODE(TRUE);
      ServicePackageFrm.EDITABLE(FALSE);
      ServicePackageFrm.SETTABLEVIEW(ServicePackage);
      IF ServicePackage.GET(IServicePackage) THEN
        ServicePackageFrm.SETRECORD(ServicePackage);
      IF ServicePackageFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
        ServicePackageFrm.GETRECORD(ServicePackage);
        IServicePackage := ServicePackage.Code;
        EXIT(TRUE);
      END;
    END;

    PROCEDURE TestServicePackageOfStdObj@1100526202(IStandardObjectNo@1100526201 : Code[20];IServicePackage@1100526200 : Code[20]) : Boolean;
    BEGIN
      //mg, 14-01-11: M24715
      IF NOT IsServicePackageOfStdObj(IStandardObjectNo, IServicePackage) THEN
        ERROR(Text000, IServicePackage, IStandardObjectNo);
    END;

    PROCEDURE IsServicePackageOfStdObj@1100526204(IStandardObjectNo@1100526201 : Code[20];IServicePackage@1100526200 : Code[20]) : Boolean;
    VAR
      DefMaintSchServObject@1100526202 : Record 11071703;
    BEGIN
      //mg, 21-01-11: M25216
      DefMaintSchServObject.SETRANGE("Object No.", IStandardObjectNo);
      DefMaintSchServObject.SETRANGE("Service Package", IServicePackage);
      EXIT(DefMaintSchServObject.FINDFIRST);
    END;

    PROCEDURE TestMaintSchemeOfStdObj@1100526203(IStandardObjectNo@1100526202 : Code[20];IServicePackage@1100526201 : Code[20];IMaintenanceScheme@1100526203 : Code[20]);
    VAR
      DefMaintSchServObject@1100526200 : Record 11071703;
    BEGIN
      //mg, 20-01-11
      DefMaintSchServObject.SETRANGE("Object No.", IStandardObjectNo);
      DefMaintSchServObject.SETRANGE("Service Package", IServicePackage);
      DefMaintSchServObject.SETRANGE("Maintenance Scheme", IMaintenanceScheme);
      IF NOT DefMaintSchServObject.FINDFIRST THEN
        ERROR(Text001, DefMaintSchServObject.FIELDCAPTION("Maintenance Scheme"),
          IMaintenanceScheme, IStandardObjectNo, IServicePackage);
    END;

    PROCEDURE CreateFromAYNO@1100528300(VAR AYNORec@1100528305 : Record 11020596;CustomerCode@1100528300 : Code[20];LocationCode@1100528301 : Code[20];ContractType@1100525000 : Option;ContractTypeCode@1100528302 : Code[20];StartDate@1100528309 : Date;Address@1100525001 : Text[50];PostCode@1100525002 : Code[20];City@1100525003 : Text[30]);
    VAR
      ServiceContract@1100528307 : Record 11012812;
      Counter@1100528304 : Integer;
      ServiceContractCode@1100528306 : Code[20];
      ServiceObjectCode@1100528308 : Code[20];
    BEGIN
      IF (NOT AYNORec.FINDFIRST) THEN
        EXIT;

      IF (ContractTypeCode <> '') THEN BEGIN
        CASE ContractType OF
          0: ServiceContractCode := CreateAYNOContract(ContractTypeCode, CustomerCode, StartDate, AYNORec."Project No.");
          1: ServiceContractCode := ContractTypeCode;
        END;
      END;

      IF (LocationCode = '') THEN
        LocationCode := CreateAYNOLocation(AYNORec, CustomerCode, StartDate, Address, PostCode, City);

      REPEAT
        FOR Counter := 1 TO AYNORec."Qty. Service Objects" DO BEGIN
          ServiceObjectCode := CreateAYNOObject(AYNORec, ServiceContractCode,
            LocationCode, CustomerCode, StartDate, Counter);
          IF (ServiceContractCode <> '') THEN
            LinkAYNOObjectToContract(ServiceContractCode, ServiceObjectCode, StartDate);
        END;
      UNTIL (AYNORec.NEXT = 0);

      MESSAGE(Text002, AYNORec.TABLECAPTION);
    END;

    LOCAL PROCEDURE CreateAYNOContract@1100528302(ContractTemplateCode@1100528300 : Code[20];CustomerCode@1100528306 : Code[20];StartDate@1100528308 : Date;ProjectNo@1100528307 : Code[20]) : Code[20];
    VAR
      ServiceContractTemplate@1100528301 : Record 11071754;
      ServiceContract@1100528302 : Record 11012812;
      Project@1100528305 : Record 11072003;
    BEGIN
      ServiceContractTemplate.GET(ContractTemplateCode);
      Project.GET(ProjectNo);

      ServiceContract.INIT;
      ServiceContract."No. Series" := ServiceContractTemplate."No. Series";
      ServiceContract.INSERT(TRUE);

      ServiceContract.TRANSFERFIELDS(ServiceContractTemplate);

      ServiceContract.VALIDATE("Contract Template Code", ContractTemplateCode);
      ServiceContract.Description := Project.Description;
      ServiceContract.VALIDATE("Customer No.", CustomerCode);
      ServiceContract.VALIDATE("Service Package", ServiceContractTemplate."Service Package");
      FillDefaultContractData(ServiceContract);
      ServiceContract.VALIDATE("Starting Date", StartDate);

      ServiceContract.MODIFY(TRUE);
      EXIT(ServiceContract."No.");
    END;

    LOCAL PROCEDURE CreateAYNOObject@1100528303(AYNORec@1100409003 : Record 11020596;ServiceContractCode@1100528301 : Code[20];LocationCode@1100528305 : Code[20];CustomerCode@1100528302 : Code[20];StartDate@1100525000 : Date;SeqNo@1100525001 : Integer) : Code[20];
    VAR
      ServiceObject@1100528300 : Record 11071691;
      Job@1100409000 : Record 11072003;
    BEGIN
      Job.GET(AYNORec."Project No."); //#C018090.n
      ServiceObject.INIT;
      IF (AYNORec."Object No." <> '') THEN BEGIN
        ServiceObject."No." := AYNORec."Object No.";
        IF (SeqNo > 1) THEN
          ServiceObject."No." := ServiceObject."No." + '-' + FORMAT(SeqNo);
      END;
      ServiceObject.INSERT(TRUE);

      IF (AYNORec."Standard Object No." <> '') THEN
        ServiceObject."Standard Object No." := AYNORec."Standard Object No.";

      ServiceObject.Description := Job.Description; //#C018090.c
      ServiceObject."Description 2" := Job."Description 2";
      ServiceObject."In use since" := StartDate;
      ServiceObject.VALIDATE("Object Customer", CustomerCode);
      ServiceObject."Service Location No." := LocationCode;
      ServiceObject.Quantity := 1;

      ServiceObject."Project No." := AYNORec."Project No.";
      ServiceObject."Yard No. (AYNO)" := AYNORec."Yard No.";
      ServiceObject."Entity Type (AYNO)" := AYNORec."Entity Type";
      ServiceObject."System No. (AYNO)" := AYNORec."System No.";
      ServiceObject."Entity No. (AYNO)" := AYNORec."Entity No.";

      ServiceObject.MODIFY(TRUE);
      EXIT(ServiceObject."No.");
    END;

    LOCAL PROCEDURE LinkAYNOObjectToContract@1100528305(ServiceContractCode@1100528301 : Code[20];ServiceObjectCode@1100528302 : Code[20];StartDate@1100525000 : Date);
    VAR
      ContractObject@1100528300 : Record 11071702;
      ServiceContract@1100528304 : Record 11012812;
    BEGIN
      ServiceContract.GET(ServiceContractCode);

      ContractObject.INIT;
      ContractObject.VALIDATE("Service Contract No.", ServiceContractCode);
      ContractObject.VALIDATE("Service Object No.", ServiceObjectCode);
      ContractObject."Starting Date" := StartDate;
      ContractObject.VALIDATE("Service Package", ServiceContract."Service Package");
      ContractObject.Quantity := 1;

      ContractObject.INSERT(TRUE);
    END;

    LOCAL PROCEDURE CreateAYNOLocation@1100525000(AYNORec@1100525000 : Record 11020596;CustomerCode@1100525001 : Code[20];StartDate@1100525002 : Date;Address@1100525003 : Text[50];PostCode@1100525004 : Code[20];City@1100525005 : Text[30]) : Code[20];
    VAR
      ServiceLocation@1100525006 : Record 11012801;
      ServiceSetup@1100525007 : Record 11012800;
      Job@1100409000 : Record 11072003;
    BEGIN
      ServiceSetup.GET;

      ServiceLocation.INIT;
      ServiceLocation.INSERT(TRUE);

      ServiceLocation.Description := AYNORec.Description;
      ServiceLocation.VALIDATE("Customer No.", CustomerCode);
      ServiceLocation.VALIDATE("Starting Date", StartDate);
      ServiceLocation.Address := Address;
      ServiceLocation."Post Code" := PostCode;
      ServiceLocation.City := City;

      ServiceLocation.MODIFY(TRUE);
      EXIT(ServiceLocation."No.");
    END;

    PROCEDURE FillAYNOObjectDefaults@1100409000(VAR AYNORec@1100409000 : Record 11020596);
    BEGIN
      IF (NOT AYNORec.FINDFIRST) THEN
        EXIT;
      REPEAT
        AYNORec."Object No." := COPYSTR(AYNORec."Project No." + '-' + AYNORec."Entity No.", 1, 20);
        AYNORec.MODIFY;
      UNTIL (AYNORec.NEXT = 0);
    END;

    PROCEDURE ShowRelatedObjects@1100525001(IServiceObjectNo@1100525000 : Code[20]);
    VAR
      TmpRelatedObject@1100525002 : TEMPORARY Record 11071704;
    BEGIN
      BuildRelatedObjectRecSet(IServiceObjectNo, '', TmpRelatedObject);
      PAGE.RUNMODAL(0, TmpRelatedObject);
    END;

    PROCEDURE BuildRelatedObjectRecSet@1100525004(IServiceObjectNo@1100525001 : Code[20];IInitialServiceObjectNo@1100525003 : Code[20];VAR OTmpRelatedObject@1100525000 : Record 11071704);
    VAR
      RelatedObject@1100525002 : Record 11071704;
    BEGIN
      IF IInitialServiceObjectNo = '' THEN
        IInitialServiceObjectNo := IServiceObjectNo;
      RelatedObject.SETRANGE("Object No.", IServiceObjectNo);
      IF RelatedObject.FINDSET THEN
        REPEAT
          OTmpRelatedObject := RelatedObject;
          OTmpRelatedObject.SETRANGE("Related Object", OTmpRelatedObject."Related Object");
          IF OTmpRelatedObject.ISEMPTY AND (RelatedObject."Related Object" <> IInitialServiceObjectNo) THEN BEGIN
            OTmpRelatedObject.INSERT;
            BuildRelatedObjectRecSet(RelatedObject."Related Object", IInitialServiceObjectNo, OTmpRelatedObject);
          END;
        UNTIL RelatedObject.NEXT = 0;
      OTmpRelatedObject.SETRANGE("Related Object");
      OTmpRelatedObject.SETCURRENTKEY("Related Object");
    END;

    PROCEDURE ApplyStandardObjectFilter@1100528600(VAR OStandardObject@1100528600 : Record 11020334);
    VAR
      ServiceGroupFilter@1100525001 : Text[250];
    BEGIN
      ServiceGroupFilter := GetServiceGroupFilter;
      IF ServiceGroupFilter <> '' THEN
        OStandardObject.SETFILTER("Object Group", ServiceGroupFilter);
    END;

    PROCEDURE HandleLookupStandardObject@1100528603(IServiceGroup@1100528600 : Code[10];IReadOnly@1100528603 : Boolean;VAR IOStandardObjectNo@1100528601 : Code[20]) : Boolean;
    VAR
      StandardObject@1100528602 : Record 11020334;
    BEGIN
      ApplyStandardObjectFilter(StandardObject);

      IF IOStandardObjectNo <> '' THEN
        IF StandardObject.GET(IOStandardObjectNo) THEN;
      IF NOT IReadOnly THEN BEGIN
        IF PAGE.RUNMODAL(0, StandardObject) = ACTION::LookupOK THEN BEGIN
          IOStandardObjectNo := StandardObject."No.";
          EXIT(TRUE);
        END;
      END ELSE
        PAGE.RUNMODAL(0, StandardObject);
      EXIT(FALSE);
    END;

    PROCEDURE GetServiceGroupFilter@1100525005() Filter : Text[250];
    VAR
      ServiceSetup@1100525001 : Record 11012800;
      ServiceGroup@1100525000 : Record 11012830;
      FirstNo@1100525002 : Code[10];
      LastNo@1100525003 : Code[10];
    BEGIN
      ServiceSetup.GET;
      IF NOT ServiceSetup."Service Object Group Filter" THEN
        EXIT;

      ServiceGroup.SETRANGE("Customer No.", '');
      IF ServiceGroup.FINDSET THEN BEGIN
        REPEAT
          IF ServiceGroup.Display THEN BEGIN
            IF FirstNo = '' THEN
              FirstNo := ServiceGroup."No.";
            LastNo := ServiceGroup."No.";
          END ELSE
            CheckFilter(FirstNo, LastNo, Filter, FALSE);
        UNTIL ServiceGroup.NEXT = 0;
      END;
      CheckFilter(FirstNo, LastNo, Filter, FALSE);
      IF Filter <> '' THEN
        Filter := Filter + '|''''';
    END;

    LOCAL PROCEDURE CheckFilter@1100485003(VAR IOFirst@1100485001 : Code[10];VAR IOLast@1100485000 : Code[10];VAR IOFilter@1100485002 : Text[250];ISkipMess@1100485003 : Boolean);
    VAR
      SaveFilter@1100485004 : Text[1000];
      CurrFilter@1100485005 : Text[1000];
    BEGIN
      SaveFilter := IOFilter;
      CurrFilter := IOFilter;

      IF IOFirst <> '' THEN BEGIN
        IF CurrFilter <> '' THEN
          CurrFilter := CurrFilter + '|';
        IF IOFirst = IOLast THEN
          CurrFilter := CurrFilter + IOFirst
        ELSE
          CurrFilter := CurrFilter + IOFirst + '..' + IOLast;
      END;

      IF STRLEN(CurrFilter) <= MAXSTRLEN(IOFilter) THEN
        IOFilter := CurrFilter
      ELSE
        IF NOT ISkipMess THEN
          IOFilter := PADSTR('', MAXSTRLEN(IOFilter),'*')
        ELSE
          IOFilter := SaveFilter;

      IOFirst := '';
      IOLast := '';
    END;

    PROCEDURE CreateStandardObjectByItemNo@1100528601(IOItem@1100528600 : Record 27) : Code[20];
    VAR
      StandardObject@1100528601 : Record 11020334;
    BEGIN
      IOItem.TESTFIELD("Standard Object No.", '');
      StandardObject.INIT;
      StandardObject.INSERT(TRUE);
      StandardObject.VALIDATE("Item No.", IOItem."No.");
      StandardObject.MODIFY(TRUE);
      IOItem.VALIDATE("Standard Object No.", StandardObject."No.");
      IOItem.MODIFY(TRUE);
      EXIT(StandardObject."No.");
    END;

    BEGIN
    END.
  }
}

