OBJECT Codeunit 11012830 Lab Order Webservice
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1100525000 : TextConst 'ENU=The Web Service returned the following message:\\%1';
      LabOrderSetup@1100525003 : Record 11071953;
      Request@1100525001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A0A-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.XMLHTTP60";
      Ord@1100525005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      Sam@1100525006 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      Text001@1100525004 : TextConst 'ENU=The request timed out.';
      FileMgt@1100525500 : Codeunit 419;
      LabOrderSetupRead@1100525002 : Boolean;
      Text002@1100525007 : TextConst 'ENU=Empty response received from the lab.';
      Debug@1100409000 : Boolean;

    PROCEDURE GetOrders@1100525000(StartDate@1100525002 : Date;EndDate@1100525003 : Date;VAR Response@1100525004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60");
    VAR
      StartDateText@1100525000 : Text[8];
      EndDateText@1100525001 : Text[8];
    BEGIN
      StartDateText := FORMAT(StartDate, 0, '<Year4><Month,2><Day,2>');
      EndDateText := FORMAT(EndDate, 0, '<Year4><Month,2><Day,2>');
      SendRequest(STRSUBSTNO('service=PERIODE_ORDERS&StartDate=%1&EndDate=%2', StartDateText, EndDateText));

      TestResponseText;

      Response := Request.responseXML;
      RemoveSchema(Response);
    END;

    PROCEDURE GetInvoices@1100525010(StartDate@1100525000 : Date;EndDate@1100525001 : Date;VAR Response@1100525002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60");
    VAR
      StartDateText@1100525004 : Text[8];
      EndDateText@1100525003 : Text[8];
    BEGIN
      StartDateText := FORMAT(StartDate, 0, '<Year4><Month,2><Day,2>');
      EndDateText := FORMAT(EndDate, 0, '<Year4><Month,2><Day,2>');
      SendRequest(STRSUBSTNO('service=INVOICES_PERIODE&StartDate=%1&EndDate=%2', StartDateText, EndDateText));

      TestResponseText;

      Response := Request.responseXML;
    END;

    PROCEDURE GetCertificate@1100525007(OrderNo@1100525001 : Code[20];FileName@1100525000 : Text[260]);
    VAR
      ResponseStream@1100525002 : InStream;
      OutputStream@1100525005 : OutStream;
      OutputFile@1100525004 : File;
      Buffer@1100525003 : BigText;
      ServerTempFileName@1100525500 : Text[1024];
    BEGIN
      SendRequest(STRSUBSTNO('service=ORDER_PDF&ProjectCode=%1', OrderNo));
      TestResponseText;

      OutputFile.TEXTMODE := FALSE;
      OutputFile.WRITEMODE := TRUE;

      ServerTempFileName := FileMgt.ServerTempFileName('txt');
      OutputFile.CREATE(ServerTempFileName);
      OutputFile.CREATEOUTSTREAM(OutputStream);

      Buffer.ADDTEXT(Request.responseText);
      Buffer.WRITE(OutputStream);

      OutputFile.CLOSE;

      FileMgt.DownloadToFile(
        ServerTempFileName, FileName);
      ERASE(ServerTempFileName);
    END;

    PROCEDURE GetInvoice@1100525014(OrderNo@1100525000 : Code[20];FileName@1100525001 : Text[260]);
    VAR
      OutputFile@1100525002 : File;
      OutputStream@1100525003 : OutStream;
      ResponseStream@1100525005 : InStream;
      Buffer@1100525004 : BigText;
      ServerTempFileName@1100525500 : Text[1024];
    BEGIN
      SendRequest(STRSUBSTNO('service=INVOICE_PDF&Ordernumber=%1', OrderNo));
      TestResponseText;

      OutputFile.TEXTMODE := FALSE;
      OutputFile.WRITEMODE := TRUE;
      ServerTempFileName := FileMgt.ServerTempFileName('txt');
      OutputFile.CREATE(ServerTempFileName);
      OutputFile.CREATEOUTSTREAM(OutputStream);

      Buffer.ADDTEXT(Request.responseText);
      Buffer.WRITE(OutputStream);

      OutputFile.CLOSE;

      FileMgt.DownloadToFile(
        ServerTempFileName, FileName);
      ERASE(ServerTempFileName);
    END;

    PROCEDURE GetOrderResults@1100525012(OrderNo@1100525001 : Code[20];VAR Response@1100525000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60");
    BEGIN
      SendRequest(STRSUBSTNO('service=ORDER_RESULTS&ProjectCode=%1', OrderNo));
      TestResponseText;

      Response := Request.responseXML;
      RemoveSchema(Response);
    END;

    PROCEDURE PrepareNewOrder@1100525001(OrderID@1100525001 : Code[20];CustCode@1100525009 : Code[4];Contact@1100525010 : Text[80];ProjectCode@1100525011 : Code[20];ProjectDescription@1100525012 : Text[250];InvoiceReference@1100525013 : Text[80];OrderComments@1100525014 : Text[250];StartDate@1100525015 : Date;Priority@1100525016 : Text[30]);
    VAR
      NewOrder@1100525000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
      Order@1100525002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      Element@1100525005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
    BEGIN
      CREATE(NewOrder, FALSE, TRUE);
      AppendProcessingInstruction(NewOrder, 'xml', 'version="1.0" encoding="Windows-1252"');
      AppendElement(NewOrder, NewOrder, 'order', '', Order);
      AppendElement(NewOrder, Order, 'ord', '', Ord);
      AppendElement(NewOrder, Ord, 'order_id', FORMAT(OrderID), Element);
      AppendElement(NewOrder, Ord, 'cus', CustCode, Element);
      AppendElement(NewOrder, Ord, 'contact', Contact, Element);
      AppendElement(NewOrder, Ord, 'proj', ProjectCode, Element);
      AppendElement(NewOrder, Ord, 'projd', ProjectDescription, Element);
      AppendElement(NewOrder, Ord, 'inv', InvoiceReference, Element);
      AppendElement(NewOrder, Ord, 'opm', OrderComments, Element);
      AppendElement(NewOrder, Ord, 'start', FORMAT(StartDate, 0, '<Year4><Month,2><Day,2>'), Element);
      AppendElement(NewOrder, Ord, 'shelf', '0', Element);
      AppendElement(NewOrder, Ord, 'urg', Priority, Element);
      AppendElement(NewOrder, Ord, 'deliv', '2', Element);
    END;

    PROCEDURE AppendSample@1100525006(SampleNo@1100525001 : Code[20];SampleDescription@1100525003 : Text[250];SampleDescription2@1100525004 : Text[250];FeatureCode@1100409000 : Code[10]);
    VAR
      Element@1100525002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
    BEGIN
      AppendElement(Ord.ownerDocument, Ord, 'sam', '', Sam);
      AppendElement(Ord.ownerDocument, Sam, 'samid', SampleNo, Element);
      AppendElement(Ord.ownerDocument, Sam, 'descr', SampleDescription, Element);
      AppendElement(Ord.ownerDocument, Sam, 'descr2', SampleDescription2, Element);
      AppendElement(Ord.ownerDocument, Sam, 'numbcont', '1', Element);
      AppendElement(Ord.ownerDocument, Sam, 'type', FeatureCode, Element);
    END;

    PROCEDURE AppendAnalysis@1100525045(AnalysisCode@1100525000 : Code[10]);
    VAR
      Ana@1100525002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      Element@1100525001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
    BEGIN
      AppendElement(Sam.ownerDocument, Sam, 'ana', '', Ana);
      AppendElement(Sam.ownerDocument, Ana, 'anaid', AnalysisCode, Element);
    END;

    PROCEDURE SubmitNewOrder@1100525005(SendToLab@1100525003 : Boolean) : Boolean;
    VAR
      Response@1100525000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
      ErrorElement@1100525001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      MessageElement@1100525004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      ErrorText@1100525002 : Text[1024];
    BEGIN
      //Debug := TRUE;

      IF Debug THEN
        Ord.ownerDocument.save('D:\LabOrderRequest.xml'); //For debugging purposes

      SendRequestWithBody(
        STRSUBSTNO(
          'service=ORDER_NEW&SendToLab=%1&XMLResponse=%2',
          FormatBoolean(SendToLab),
          FormatBoolean(TRUE)),
        Ord.ownerDocument);

      Response := Request.responseXML;

      IF Debug THEN
        Response.save('D:\LabOrderResponse.xml'); //For debugging purposes

      ErrorElement := Response.documentElement.selectSingleNode('qerrorxml');
      IF NOT ISCLEAR(ErrorElement) THEN BEGIN
        ErrorText := ErrorElement.selectSingleNode('errortext').text;
        ERROR(ErrorText);
      END;

      MessageElement := Response.documentElement.selectSingleNode('qmessage');

      IF ISCLEAR(MessageElement) THEN BEGIN
        MESSAGE(Text002);
        EXIT(FALSE);
      END;

      EXIT(MessageElement.selectSingleNode('portalid').text <> '');
    END;

    LOCAL PROCEDURE SendRequest@1100525003(QueryString@1100525001 : Text[1024]);
    BEGIN
      CLEAR(Request);
      CREATE(Request, FALSE, TRUE);

      Request.open('GET', BuildRequestUrl(QueryString), FALSE);
      Request.send;

      IF Request.readyState <> Completed THEN
        ERROR(Text001);
    END;

    PROCEDURE SendRequestWithBody@1100525011(QueryString@1100525000 : Text[1024];Body@1100525001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60");
    BEGIN
      CLEAR(Request);
      CREATE(Request, FALSE, TRUE);

      Request.open('POST', BuildRequestUrl(QueryString), FALSE);
      Request.send(Body);

      IF Request.readyState <> Completed THEN
        ERROR(Text001);
    END;

    LOCAL PROCEDURE RemoveSchema@1100525008(Response@1100525000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60");
    VAR
      Schema@1100525001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
    BEGIN
      Schema := Response.documentElement.selectSingleNode('*[@id="VFPData"]');
      Schema.parentNode.removeChild(Schema);
    END;

    LOCAL PROCEDURE AppendElement@1100525025(Document@1100525000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";ParentNode@1100525001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";Name@1100525002 : Text[80];Value@1100525003 : Text[1024];VAR Element@1100525004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement");
    VAR
      TextNode@1100525005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF87-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMText";
    BEGIN
      Element := Document.createElement(Name);
      ParentNode.appendChild(Element);

      IF Value <> '' THEN BEGIN
        TextNode := Document.createTextNode(Value);
        Element.appendChild(TextNode);
      END;
    END;

    LOCAL PROCEDURE AppendProcessingInstruction@1100525015(DOMDocument@1100525002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";Target@1100525000 : Text[1024];Data@1100525001 : Text[1024]);
    VAR
      ProcessingInstruction@1100525003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF89-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMProcessingInstruction";
    BEGIN
      ProcessingInstruction := DOMDocument.createProcessingInstruction(Target, Data);
      DOMDocument.appendChild(ProcessingInstruction);
    END;

    LOCAL PROCEDURE TestResponseText@1100525013();
    VAR
      ResponseStream@1100525000 : InStream;
      Text@1100525001 : Text[1024];
      ResponseText@1100528400 : Text;
    BEGIN
      ResponseText := Request.responseText;
      Text := COPYSTR(ResponseText, 1, MAXSTRLEN(Text));

      CASE TRUE OF
        StartsWith(Text, 'error:', TRUE): ERROR(Text000, Text);
        StartsWith(Text, 'ok:', TRUE): MESSAGE(Text000, Text);
      END;
    END;

    LOCAL PROCEDURE BuildRequestUrl@1100525020(QueryString@1100525000 : Text[1024]) : Text[1024];
    BEGIN
      ReadLabOrderSetup;

      EXIT(
        STRSUBSTNO('%1?Username=%2&Password=%3&%4',
          LabOrderSetup."Lab URL",
          LabOrderSetup."Lab User Name",
          LabOrderSetup."Lab Password",
          QueryString));
    END;

    PROCEDURE Completed@1100525019() : Integer;
    BEGIN
      EXIT(4);
    END;

    LOCAL PROCEDURE StartsWith@1100525002(Text@1100525000 : Text[1024];StartsWith@1100525001 : Text[1024];IgnoreCase@1100525002 : Boolean) : Boolean;
    BEGIN
      IF IgnoreCase THEN BEGIN
        Text := UPPERCASE(Text);
        StartsWith := UPPERCASE(StartsWith);
      END;

      EXIT(COPYSTR(Text, 1, STRLEN(StartsWith)) = StartsWith);
    END;

    PROCEDURE FormatBoolean@1100525004(Boolean@1100525000 : Boolean) : Text[10];
    BEGIN
      CASE Boolean OF
        TRUE: EXIT('TRUE');
        FALSE: EXIT('FALSE');
      END;
    END;

    PROCEDURE ReadLabOrderSetup@1100525009();
    BEGIN
      IF NOT LabOrderSetupRead THEN BEGIN
        LabOrderSetupRead := LabOrderSetup.GET;

        LabOrderSetup.TESTFIELD("Lab URL");
        LabOrderSetup.TESTFIELD("Lab User Name");
        LabOrderSetup.TESTFIELD("Lab Password");
      END;
    END;

    BEGIN
    {
      In this codeunit xml automation variables are still used, because it is difficult to test test this functionality
      after conversion to xml dotnet variables. The automation variables are used on the client and no events are used,
      so it should not be a problem to use automation here.
    }
    END.
  }
}

