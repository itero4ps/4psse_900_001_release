OBJECT Codeunit 11012837 Service BudgetLine-Explode BOM
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    TableNo=11012875;
    OnRun=VAR
            TempBudgetLine@1100525003 : TEMPORARY Record 11012875;
            OrigLineNo@1100525000 : Integer;
            OrigQuantity@1100525001 : Decimal;
            BomComp@1100525002 : Record 90;
            LevelBOM@1100525004 : Integer;
          BEGIN
            FromBOMComp.SETRANGE("Parent Item No.","Item No.");
            FromBOMComp.SETFILTER(Type, '<>%1', FromBOMComp.Type::Resource);
            NoOfBOMComp := FromBOMComp.COUNT;
            IF NoOfBOMComp = 0 THEN
              ERROR(Text001,"Item No.");

            ToSOBudgetLine := Rec;
            ToSOBudgetLine.SETRECFILTER;
            ToSOBudgetLine.SETRANGE("Line No.");

            OrigLineNo := "Line No.";
            OrigQuantity := Quantity;

            IF ToSOBudgetLine.FIND('>') THEN BEGIN
              LineSpacing := (ToSOBudgetLine."Line No." - "Line No.") DIV (1 + NoOfBOMComp);
              IF LineSpacing = 0 THEN
                ERROR(Text003);
            END ELSE
              LineSpacing := 10000;

            ToSOBudgetLine := Rec;
            ToSOBudgetLine.INIT;
            ToSOBudgetLine."Cost Type" := "Cost Type"::Material;
            ToSOBudgetLine.Description := Description;
            ToSOBudgetLine."Description 2" := "Description 2";
            ToSOBudgetLine."Original Quantity" := OrigQuantity;
            ToSOBudgetLine."Part of Line" := "Part of Line";
            ToSOBudgetLine."Level BOM" := "Level BOM";
            ToSOBudgetLine.MODIFY;
            LevelBOM := "Level BOM" + 1;

            FromBOMComp.FINDSET;
            NextLineNo := "Line No.";
            REPEAT
              ToSOBudgetLine.INIT;
              NextLineNo := NextLineNo + LineSpacing;
              ToSOBudgetLine."Line No." := NextLineNo;
              ToSOBudgetLine."Cost Type" := "Cost Type"::Material;
              IF FromBOMComp.Type = FromBOMComp.Type::Item THEN BEGIN
                FromBOMComp.TESTFIELD("No.");
                ToSOBudgetLine.VALIDATE("Item No.",FromBOMComp."No.");
                ToSOBudgetLine.VALIDATE(Quantity,Quantity * FromBOMComp."Quantity per");
              END;
              ToSOBudgetLine.Description := FromBOMComp.Description;
              ToSOBudgetLine."Part of Line" := OrigLineNo;
              ToSOBudgetLine."Level BOM" := LevelBOM;
              ToSOBudgetLine.INSERT;

              IF FromBOMComp.Type = FromBOMComp.Type::Item THEN BEGIN
                BomComp.SETRANGE("Parent Item No.", ToSOBudgetLine."Item No.");
                IF NOT BomComp.ISEMPTY THEN BEGIN
                  TempBudgetLine := ToSOBudgetLine;
                  TempBudgetLine.INSERT;
                END;
              END;
            UNTIL FromBOMComp.NEXT = 0;

            IF TempBudgetLine.FINDSET THEN BEGIN
              //Explode BOMS
              COMMIT;
              REPEAT
                CODEUNIT.RUN(CODEUNIT::"Service BudgetLine-Explode BOM", TempBudgetLine);
              UNTIL TempBudgetLine.NEXT = 0;
            END;
          END;

  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=Item %1 is not a bill of materials.';
      Text003@1002 : TextConst 'ENU=There is not enough space to explode the BOM.';
      ToSOBudgetLine@1004 : Record 11012875;
      FromBOMComp@1005 : Record 90;
      Item@1008 : Record 27;
      LineSpacing@1012 : Integer;
      NextLineNo@1013 : Integer;
      NoOfBOMComp@1014 : Integer;

    BEGIN
    END.
  }
}

