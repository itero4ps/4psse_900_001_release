OBJECT Codeunit 11012855 Service Call Info Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ServiceSetup@1100409000 : Record 11012800;

    PROCEDURE GetNoOfServiceTextLines@1100525000(INo@1100525001 : Code[20];ITextType@1100525000 : 'Problem,Internal,Resolve,Report Procedure,Contract Terms') : Integer;
    VAR
      ServiceText@1100525002 : Record 11012882;
    BEGIN
      IF INo = '' THEN EXIT(0);  //C026680
      FilterServiceTextLines(INo, ITextType, ServiceText);
      EXIT(ServiceText.COUNT);
    END;

    PROCEDURE ShowServiceTextLines@1100525001(INo@1100525001 : Code[20];ITextType@1100525000 : 'Problem,Internal,Resolve,Report Procedure,Contract Terms');
    VAR
      ServiceText@1100525002 : Record 11012882;
    BEGIN
      FilterServiceTextLines(INo, ITextType, ServiceText);
      PAGE.RUNMODAL(PAGE::"Service Text 2", ServiceText);
    END;

    LOCAL PROCEDURE FilterServiceTextLines@1100525002(INo@1100525001 : Code[20];ITextType@1100525000 : 'Problem,Internal,Resolve,Report Procedure,Contract Terms';VAR OServiceText@1100525002 : Record 11012882);
    BEGIN
      OServiceText.RESET;
      OServiceText.SETRANGE("No.", INo);
      CASE ITextType OF
        ITextType::Problem:
          BEGIN
            OServiceText.SETRANGE("Table Name", OServiceText."Table Name"::"Service Call");
            OServiceText.SETRANGE("Table Field", 60);
          END;
        ITextType::Internal:
          BEGIN
            OServiceText.SETRANGE("Table Name", OServiceText."Table Name"::"Service Call");
            OServiceText.SETRANGE("Table Field", 70);
          END;
        ITextType::Resolve:
          BEGIN
            OServiceText.SETRANGE("Table Name", OServiceText."Table Name"::"Service Call");
            OServiceText.SETRANGE("Table Field", 75);
          END;
        ITextType::"Report Procedure":
          BEGIN
            OServiceText.SETRANGE("Table Name", OServiceText."Table Name"::"Service Location");
            OServiceText.SETRANGE("Table Field", 0);
          END;
        ITextType::"Contract Terms":
          BEGIN
            OServiceText.SETRANGE("Table Name", OServiceText."Table Name"::"Service Contract");
            OServiceText.SETRANGE("Table Field", 0);
          END;
      END;
    END;

    PROCEDURE GetDSHistorySOs@1100409004(IServiceLocationNo@1100409001 : Code[20];IServiceObjectNo@1100409002 : Code[20];VAR OServiceOrder@1100409000 : Record 11012823);
    VAR
      ServiceLocationInfoMgt@1100409003 : Codeunit 11012856;
      ServiceObjectInfoMgt@1100409004 : Codeunit 11012840;
    BEGIN
      IF IServiceObjectNo = '' THEN
        ServiceLocationInfoMgt.GetDataSetHistorySOs(IServiceLocationNo, OServiceOrder)
      ELSE
        ServiceObjectInfoMgt.GetDSHistorySOsBySourceType(IServiceObjectNo, -1, TRUE, OServiceOrder);
    END;

    PROCEDURE GetNoOfHistorySOs@1100409000(IServiceLocationNo@1100409001 : Code[20];IServiceObjectNo@1100409000 : Code[20]) : Integer;
    VAR
      ServiceOrder@1100409002 : Record 11012823;
    BEGIN
      IF (IServiceLocationNo = '') AND (IServiceObjectNo = '') THEN EXIT(0);  //C026680
      GetDSHistorySOs(IServiceLocationNo, IServiceObjectNo, ServiceOrder);
      EXIT(ServiceOrder.COUNT);
    END;

    PROCEDURE ShowHistorySOs@1100409002(IServiceLocationNo@1100409001 : Code[20];IServiceObjectNo@1100409000 : Code[20]);
    VAR
      ServiceOrder@1100409002 : Record 11012823;
    BEGIN
      GetDSHistorySOs(IServiceLocationNo, IServiceObjectNo, ServiceOrder);
      PAGE.RUN(0, ServiceOrder);
    END;

    PROCEDURE GetDSOpenMaintSOs@1100409005(IServiceLocationNo@1100409002 : Code[20];IServiceObjectNo@1100409001 : Code[20];VAR OServiceOrder@1100409000 : Record 11012823);
    VAR
      ServiceLocationInfoMgt@1100409004 : Codeunit 11012856;
      ServiceObjectInfoMgt@1100409003 : Codeunit 11012840;
    BEGIN
      IF IServiceObjectNo = '' THEN
        ServiceLocationInfoMgt.GetDSOpenSOsBySourceType(IServiceLocationNo, OServiceOrder."Source Type"::Contract, OServiceOrder)
      ELSE
        ServiceObjectInfoMgt.GetDSOpenSOsBySourceType(IServiceObjectNo, OServiceOrder."Source Type"::Contract, OServiceOrder);
    END;

    PROCEDURE GetDSOpenSOs@1100409006(IServiceLocationNo@1100409002 : Code[20];IServiceObjectNo@1100409001 : Code[20];VAR OServiceOrder@1100409000 : Record 11012823);
    VAR
      ServiceLocationInfoMgt@1100409004 : Codeunit 11012856;
      ServiceObjectInfoMgt@1100409003 : Codeunit 11012840;
    BEGIN
      IF IServiceObjectNo = '' THEN
        ServiceLocationInfoMgt.GetDSOpenSOsBySourceType(IServiceLocationNo, -1, OServiceOrder)
      ELSE
        ServiceObjectInfoMgt.GetDSOpenSOsBySourceType(IServiceObjectNo, -1, OServiceOrder);
    END;

    PROCEDURE GetNoOfOpenMaintSOs@1100409001(IServiceLocationNo@1100409001 : Code[20];IServiceObjectNo@1100409000 : Code[20]) : Integer;
    VAR
      ServiceOrder@1100409002 : Record 11012823;
    BEGIN
      IF (IServiceLocationNo = '') AND (IServiceObjectNo = '') THEN EXIT(0);  //C026680
      GetDSOpenMaintSOs(IServiceLocationNo, IServiceObjectNo, ServiceOrder);
      EXIT(ServiceOrder.COUNT);
    END;

    PROCEDURE GetNoOfOpenSOs@1100409007(IServiceLocationNo@1100409002 : Code[20];IServiceObjectNo@1100409001 : Code[20]) : Integer;
    VAR
      ServiceOrder@1100409000 : Record 11012823;
    BEGIN
      IF (IServiceLocationNo = '') AND (IServiceObjectNo = '') THEN EXIT(0);  //C026680
      GetDSOpenSOs(IServiceLocationNo, IServiceObjectNo, ServiceOrder);
      EXIT(ServiceOrder.COUNT);
    END;

    PROCEDURE ShowOpenMaintSOs@1100409003(IServiceLocationNo@1100409001 : Code[20];IServiceObjectNo@1100409000 : Code[20]);
    VAR
      ServiceOrder@1100409002 : Record 11012823;
    BEGIN
      GetDSOpenMaintSOs(IServiceLocationNo, IServiceObjectNo, ServiceOrder);
      PAGE.RUN(0, ServiceOrder);
    END;

    PROCEDURE ShowOpenSOs@1100409008(IServiceLocationNo@1100409002 : Code[20];IServiceObjectNo@1100409001 : Code[20]);
    VAR
      ServiceOrder@1100409000 : Record 11012823;
    BEGIN
      GetDSOpenSOs(IServiceLocationNo, IServiceObjectNo, ServiceOrder);
      PAGE.RUN(0, ServiceOrder);
    END;

    PROCEDURE GetFirstLineServiceText@1100409017(IServiceCallNo@1100409002 : Code[20];ITextType@1100409001 : 'Problem,Internal,Resolve,Report Procedure,Contract Terms') : Text[80];
    VAR
      ServiceText@1100409000 : Record 11012882;
    BEGIN
      FilterServiceTextLines(IServiceCallNo, ITextType, ServiceText);
      ServiceText.SETFILTER(Comment, '<>%1', '');
      IF ServiceText.FINDFIRST THEN
        EXIT(ServiceText.Comment);
    END;

    PROCEDURE GetFirstLineProblemText@1100409016(IServiceOrderNo@1100409000 : Code[20]) : Text[80];
    VAR
      TextType@1100409001 : 'Problem,Internal,Resolve,Report Procedure,Contract Terms';
    BEGIN
      EXIT(GetFirstLineServiceText(IServiceOrderNo, TextType::Problem));
    END;

    PROCEDURE GetFirstLineInternalText@1100409018(IServiceOrderNo@1100409000 : Code[20]) : Text[80];
    VAR
      TextType@1100409001 : 'Problem,Internal,Resolve,Report Procedure,Contract Terms';
    BEGIN
      EXIT(GetFirstLineServiceText(IServiceOrderNo, TextType::Internal));
    END;

    PROCEDURE GetFirstLineSolutionText@1100525003(IServiceOrderNo@1100409000 : Code[20]) : Text[80];
    VAR
      TextType@1100409001 : 'Problem,Internal,Resolve,Report Procedure,Contract Terms';
    BEGIN
      EXIT(GetFirstLineServiceText(IServiceOrderNo, TextType::Resolve));  //C026664
    END;

    PROCEDURE GetServicePriorityDS@1100528800(IServiceContractNo@1100528800 : Code[20];ICustomerNo@1100528801 : Code[20];IDiscipline@1100528802 : Code[10];ITradeSpeciality@1100528803 : Code[10];IPriority@1100528804 : Code[10];VAR DSServicePriority@1100528805 : Record 11012829);
    VAR
      ServiceContractPriority@1100528806 : Record 11012880;
      PrioRec@1100528807 : Record 11012829;
      RefNormRec@1100528808 : Record 11012856;
      RefPeriodRec@1100528809 : Record 11020272;
      NoReferenceNorms@1100528810 : Boolean;
    BEGIN
      IF (IServiceContractNo <> '') OR (ICustomerNo <> '') THEN BEGIN
        //db, 22-12-10: check RefNormRec by Contract and IDiscipline Filter
        IF IServiceContractNo <> '' THEN
          RefNormRec.SETRANGE("Service Contract No.", IServiceContractNo)
        ELSE BEGIN
          RefNormRec.SETCURRENTKEY("Customer No.");
          RefNormRec.SETRANGE("Customer No.", ICustomerNo);
        END;
        IF IDiscipline = '' THEN
          RefNormRec.SETFILTER(Discipline, '%1', '')
        ELSE
          RefNormRec.SETFILTER(Discipline, '%1|%2', IDiscipline, '');
        IF ITradeSpeciality = '' THEN  //db, 04-07-11
          RefNormRec.SETFILTER("Trade Speciality", '%1', '')
        ELSE
          RefNormRec.SETFILTER("Trade Speciality", '%1|%2', ITradeSpeciality, '');
        IF RefNormRec.FINDSET THEN BEGIN
          REPEAT
            //db, 15-08-11: M28438
            IF NOT RefPeriodRec.GET(RefPeriodRec.Type::Common, '', RefNormRec."Reference Period") THEN  //db, 14-09-12: C002432
              RefPeriodRec.INIT;
            IF (RefPeriodRec.Apply = RefPeriodRec.Apply::ServCall) OR
               (RefPeriodRec.Apply = RefPeriodRec.Apply::ServOrder)  THEN BEGIN
              IF DSServicePriority.GET(RefNormRec.Priority) THEN BEGIN
                DSServicePriority.MARK := TRUE;
                DSServicePriority.MARKEDONLY(TRUE);
              END;
            END;
          UNTIL RefNormRec.NEXT = 0;
        END ELSE
          NoReferenceNorms := TRUE;
      END ELSE
        NoReferenceNorms := TRUE;

      IF IPriority <> '' THEN
        DSServicePriority.GET(IPriority);

      IF IServiceContractNo <> '' THEN
        DSServicePriority.SETFILTER("Contract Filter", IServiceContractNo);   //db, 22-12-10: M24525

      ServiceSetup.GET();

      IF NoReferenceNorms AND ServiceSetup."Show only Company Priorities" THEN
        DSServicePriority.SETRANGE(DSServicePriority."Company Priority", TRUE);

      PrioRec.SETRANGE("Contract Priority");
      IF (DSServicePriority.GETFILTER("Contract Filter")<>'') THEN BEGIN
        ServiceContractPriority.SETFILTER("Service Contract No.",  DSServicePriority.GETFILTER("Contract Filter"));
        IF ServiceContractPriority.FINDFIRST THEN
          DSServicePriority.SETRANGE("Contract Priority", TRUE);
      END;
    END;

    PROCEDURE GetNoOfCommunicationTextLines@1100528306(ServiceCall@1100525001 : Record 11012822;FieldNo@1100525000 : Integer) : Integer;
    VAR
      GeneralAdvancedText@1100525002 : Record 11072231;
    BEGIN
      FilterCommunicationTextLines(GeneralAdvancedText, ServiceCall, FieldNo);
      EXIT(GeneralAdvancedText.COUNT);
    END;

    PROCEDURE ShowCommunicationTextLines@1100528308(ServiceCall@1100409001 : Record 11012822;FieldNo@1100525000 : Integer);
    VAR
      GeneralAdvancedText@1100525002 : Record 11072231;
      GeneralAdvancedTextPage@1100409000 : Page 11229247;
    BEGIN
      FilterCommunicationTextLines(GeneralAdvancedText, ServiceCall, FieldNo);
      GeneralAdvancedTextPage.SETTABLEVIEW(GeneralAdvancedText);
      GeneralAdvancedTextPage.RUNMODAL;
    END;

    LOCAL PROCEDURE FilterCommunicationTextLines@1100528310(VAR GeneralAdvancedText@1100528300 : Record 11072231;ServiceCall@1100409000 : Record 11012822;FieldNo@1100525000 : Integer);
    VAR
      RecRef@1100409002 : RecordRef;
    BEGIN
      RecRef.GETTABLE(ServiceCall);
      GeneralAdvancedText.RESET;
      GeneralAdvancedText.SETRANGE("Table No.", DATABASE::"Service Call");
      GeneralAdvancedText.SETRANGE("Field No.", FieldNo);
      GeneralAdvancedText.SETRANGE(RecId, RecRef.RECORDID);
    END;

    BEGIN
    END.
  }
}

