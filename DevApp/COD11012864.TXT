OBJECT Codeunit 11012864 Appointment Mgt. (SPT) WS
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE ValidateServiceOrderHash@1100528600(IServiceOrderNo@1100528600 : Code[20];IHash@1100528601 : Text[250]) : Boolean;
    BEGIN
      EXIT((IHash <> '') AND (IHash = GetMaintAppointmentHash(IServiceOrderNo)));
    END;

    PROCEDURE GetCurrentAppointmentBlock@1100528608(ServiceOrderNo@1100528600 : Code[20];VAR PlannedDate@1100528606 : Date;VAR BlockCode@1100528608 : Code[10];VAR BlockDescription@1100528603 : Text[30];VAR BlockStart@1100528601 : Time;VAR BlockEnd@1100528602 : Time) : Boolean;
    VAR
      ServiceOrder@1100528607 : Record 11012823;
      PlanningAgreement@1100528605 : Record 11071729;
      AppointmentManagement@1100528609 : Codeunit 11012865;
    BEGIN
      IF ServiceOrder.GET(ServiceOrderNo) THEN
        PlannedDate := ServiceOrder."Starting Date";
      IF PlanningAgreement.GET(AppointmentManagement.GetPlanningAgreementCode(ServiceOrderNo)) THEN BEGIN
        BlockCode := PlanningAgreement.Code;
        BlockDescription := PlanningAgreement.Description;
        BlockStart := PlanningAgreement."Starting Time";
        BlockEnd := PlanningAgreement."Ending Time";
        EXIT(TRUE);
      END ELSE
        EXIT(FALSE);
    END;

    PROCEDURE GetAvailAppointmentDays@1100528601(ServiceOrderNo@1100528600 : Code[20];VAR AppointmentDays@1100528602 : XMLport 11012801) : Boolean;
    BEGIN
      AppointmentDays.SetParams(ServiceOrderNo);
      EXIT(TRUE);
    END;

    PROCEDURE GetAppointmentBlocks@1100528602(ServiceOrderNo@1100528600 : Code[20];AppointmentDate@1100528601 : Date;VAR AppointmentBlocks@1100528602 : XMLport 11012802) : Boolean;
    BEGIN
      AppointmentBlocks.SetParams(ServiceOrderNo, AppointmentDate);
      EXIT(TRUE);
    END;

    PROCEDURE ReplanServiceOrder@1100528603(ServiceOrderNo@1100528600 : Code[20];NewAppointmentDate@1100528602 : Date;NewAppointmentCode@1100528601 : Code[10];VAR MailSent@1100525000 : Boolean) : Boolean;
    VAR
      AppointmentManagement@1100528603 : Codeunit 11012865;
      Replanned@1100528604 : Boolean;
    BEGIN
      Replanned := AppointmentManagement.ReplanServiceOrder(ServiceOrderNo, NewAppointmentDate, NewAppointmentCode);
      IF Replanned THEN
        MailSent := LogConfirmDocRefPoint(ServiceOrderNo);
      EXIT(Replanned);
    END;

    PROCEDURE ConfirmAppointment@1100528605(ServiceOrderNo@1100528600 : Code[20];VAR Status@1100528603 : Integer;VAR MailSent@1100525000 : Boolean) : Boolean;
    VAR
      ServiceSetup@1100528601 : Record 11012800;
    BEGIN
      ServiceSetup.GET;
      IF ServiceSetup."Ref. Point Appointm. Confirm." <> 0 THEN BEGIN
        IF NOT AppointmentAlreadyConfirmed(ServiceOrderNo) THEN BEGIN
          MailSent := LogConfirmDocRefPoint(ServiceOrderNo);
          SetServiceOrderFirmPlanned(ServiceOrderNo);
          Status := 1; //Status::Confirmed;
          EXIT(TRUE);
        END ELSE
          Status := 2; //Status::"Already Confirmed";
      END ELSE
        Status := 3; //Status::"Not Confirmed";
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE LogConfirmDocRefPoint@1100528604(ServiceOrderNo@1100528603 : Code[20]) : Boolean;
    VAR
      ServiceSetup@1100528602 : Record 11012800;
      DocumentReferencePoint@1100528601 : Record 11020296;
      ServiceOrderStatusMail@1100528600 : Codeunit 11012816;
    BEGIN
      ServiceSetup.GET;
      IF ServiceSetup."Ref. Point Appointm. Confirm." <> 0 THEN BEGIN
        DocumentReferencePoint.InsertDocRefPointWithNo(
          DocumentReferencePoint.Type::ServOrder, ServiceOrderNo, ServiceSetup."Ref. Point Appointm. Confirm.", TODAY, TIME);
        ServiceOrderStatusMail.SetNoConfirms(TRUE);
        ServiceOrderStatusMail.SetMailAction(5);
        SetLanguage;
        EXIT(ServiceOrderStatusMail.ServiceOrderMail(ServiceOrderNo));
      END;
    END;

    PROCEDURE AppointmentAlreadyConfirmed@1100528617(IServiceOrderNo@1100528600 : Code[20]) : Boolean;
    VAR
      ServiceSetup@1100528602 : Record 11012800;
      DocumentReferencePoint@1100528601 : Record 11020296;
    BEGIN
      ServiceSetup.GET;
      IF ServiceSetup."Ref. Point Appointm. Confirm." <> 0 THEN BEGIN
        DocumentReferencePoint.SETRANGE(Type, DocumentReferencePoint.Type::ServOrder);
        DocumentReferencePoint.SETRANGE("Document No.", IServiceOrderNo);
        DocumentReferencePoint.SETRANGE("Reference Point", ServiceSetup."Ref. Point Appointm. Confirm.");
        EXIT(NOT DocumentReferencePoint.ISEMPTY);
      END;
    END;

    PROCEDURE IsReplannable@1100528606(ServiceOrderNo@1100528600 : Code[20];VAR LastPossibleChangeDate@1100525000 : Date) : Boolean;
    VAR
      ServiceOrder@1100528601 : Record 11012823;
      ServiceContractClusterSeq@1100528602 : Record 11071966;
      AppointmentManagement@1100525001 : Codeunit 11012865;
    BEGIN
      IF NOT ServiceOrder.GET(ServiceOrderNo) THEN
        EXIT;
      IF NOT ServiceContractClusterSeq.GET(
        AppointmentManagement.GetClusterContractNo(ServiceOrder."Service Contract No."),
        ServiceOrder."Service Cluster", ServiceOrder."Service Cluster Seqn.")
      THEN
        EXIT;
      LastPossibleChangeDate := ServiceContractClusterSeq."Last Possible Change Date";
      EXIT((TODAY <= LastPossibleChangeDate) OR (LastPossibleChangeDate = 0D));
    END;

    PROCEDURE GetMaintAppointmentHash@1100528625(IServiceOrderNo@1100528601 : Code[20]) : Text[250];
    VAR
      ServiceOrder@1100528602 : Record 11012823;
      EncryptionMgt@1100525000 : Codeunit 824;
      ControlText@1100528603 : Text[250];
    BEGIN
      IF IServiceOrderNo = '' THEN
        EXIT;
      IF NOT ServiceOrder.GET(IServiceOrderNo) THEN
        EXIT;
      ControlText := STRSUBSTNO('%1-%2-%3', ServiceOrder."No.", ServiceOrder."Post Code", ServiceOrder.Address);

      EXIT(EncryptionMgt.CalculateStringMD5(ControlText));
    END;

    PROCEDURE SetLanguage@1100525000();
    VAR
      UserPersonalization@1100525000 : Record 2000000073;
    BEGIN
      IF UserPersonalization.GET(USERSECURITYID) THEN
        IF UserPersonalization."Language ID" <> 0 THEN
          GLOBALLANGUAGE(UserPersonalization."Language ID");
    END;

    LOCAL PROCEDURE SetServiceOrderFirmPlanned@1100528611(IServiceOrderNo@1100528600 : Code[20]);
    VAR
      ServiceOrder@1100528601 : Record 11012823;
    BEGIN
      ServiceOrder.GET(IServiceOrderNo);
      ServiceOrder."Firm Planned" := TRUE;
      ServiceOrder.MODIFY;
    END;

    BEGIN
    END.
  }
}

