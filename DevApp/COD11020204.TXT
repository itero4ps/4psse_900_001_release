OBJECT Codeunit 11020204 Mathematical Functions
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      MSScriptControl@1100485000 : Automation "{0E59F1D2-1FBE-11D0-8FF2-00A0D10038BC} 1.0:{0E59F1D5-1FBE-11D0-8FF2-00A0D10038BC}:'Microsoft Script Control 1.0'.ScriptControl";
      Initialised@1100485001 : Boolean;

    PROCEDURE Log@1100485000(Arg@1100485000 : Decimal) : Decimal;
    BEGIN
      EXIT(EvaluateFormula(STRSUBSTNO('log(%1)/log(10)', FormatDec(Arg))));
    END;

    PROCEDURE Ln@1100485002(Arg@1100485000 : Decimal) : Decimal;
    BEGIN
      EXIT(EvaluateFormula(STRSUBSTNO('log(%1)', FormatDec(Arg))));
    END;

    PROCEDURE Sin@1100485007(Arg@1100485000 : Decimal) : Decimal;
    BEGIN
      EXIT(EvaluateFormula(STRSUBSTNO('sin(%1)', FormatDec(Deg2Rad(Arg)))));
    END;

    PROCEDURE Cos@1100485008(Arg@1100485000 : Decimal) : Decimal;
    BEGIN
      EXIT(EvaluateFormula(STRSUBSTNO('cos(%1)', FormatDec(Deg2Rad(Arg)))));
    END;

    PROCEDURE Tan@1100485009(Arg@1100485000 : Decimal) : Decimal;
    BEGIN
      EXIT(EvaluateFormula(STRSUBSTNO('tan(%1)', FormatDec(Deg2Rad(Arg)))));
    END;

    PROCEDURE Deg2Rad@1100485004(Deg@1100485000 : Decimal) : Decimal;
    BEGIN
      EXIT(Deg * 3.14159265358979323 / 180);
    END;

    PROCEDURE FormatDec@1100485001(Arg@1100485000 : Decimal) : Text[250];
    BEGIN
      EXIT(FORMAT(Arg,0,1));  //* Format '1': Geen duizendtalteken
    END;

    PROCEDURE EvaluateFormula@1100485005(Formula@1100485000 : Text[1024]) Result : Decimal;
    VAR
      ResultTxt@1100525000 : Text;
    BEGIN
      InitControl;
      //kkleermaker.so, 130409
      //This code would result in error message
      //Unable to convert from System.Double to Microsoft.Dynamics.Nav.Runtime.Decimal18.
      //EXIT(MSScriptControl.Eval(CONVERTSTR(Formula, ',', '.')));
      //kkleermaker.eo
      //kkleermaker.sn, 130409
      ResultTxt := FORMAT(MSScriptControl.Eval(CONVERTSTR(Formula, ',', '.')), 0, 9); // 9: decimal in XML format
      EVALUATE(Result, ResultTxt, 9);
      //kkleermaker.en
    END;

    PROCEDURE ReverseDateFormula@1100528600(IDateFormula@1100528600 : DateFormula;VAR ODateFormula@1100528601 : DateFormula);
    VAR
      DateFormulaText@1100528602 : Text;
    BEGIN
      DateFormulaText := FORMAT(IDateFormula);
      IF DateFormulaText = '' THEN
        EXIT;
      DateFormulaText := CONVERTSTR(DateFormulaText, '+-', '-+');
      IF NOT (DateFormulaText[1] IN ['-', '+']) THEN
        DateFormulaText := '-' + DateFormulaText;
      EVALUATE(ODateFormula, DateFormulaText);
    END;

    PROCEDURE InitControl@1100485003();
    BEGIN
      IF Initialised THEN
        EXIT;

      CREATE(MSScriptControl, FALSE, TRUE); //Until now no DotNet alternative with Eval method has been found.
      MSScriptControl.Language('VBScript');
      Initialised := TRUE;
    END;

    EVENT MSScriptControl@1100485000::Error@3000();
    BEGIN
    END;

    EVENT MSScriptControl@1100485000::Timeout@3001();
    BEGIN
    END;

    BEGIN
    END.
  }
}

