OBJECT Codeunit 11020206 Evaluate Revision Rule
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnRun=VAR
            RevRule@1100485000 : Record 11012473;
            Result@1100485001 : Decimal;
          BEGIN
            //Testing
            RevRule.FIND('+');
            Result := EvaluateRule(RevRule.Formula, 060201D, 061023D, '408');
            MESSAGE('Result is %1.', Result);
          END;

  }
  CODE
  {
    VAR
      ErrMsg1@1100485000 : TextConst 'ENU=No matching closing bracket found for a opening bracket.';
      ErrMsg2@1100485001 : TextConst 'ENU=No value found for index ''%1'' and date ''%2''';
      ErrMsg3@1100485002 : TextConst 'ENU=''%1'' is not a valid index';
      ErrMsg4@1100485003 : TextConst 'ENU=Variable ''%1'' not found for project ''%2''';

    PROCEDURE EvaluateRule@1100485001(RevRuleFormula@1100485000 : Text[1024];Date1@1100485008 : Date;Date2@1100485009 : Date;ProjectNo@1100485012 : Code[20]) : Decimal;
    VAR
      RevRuleInd@1100485001 : Record 11012474;
      Math@1100485002 : Codeunit 11020204;
      RemainderFormula@1100485003 : Text[1024];
      OpeningBracket@1100485004 : Integer;
      ClosingBracket@1100485005 : Integer;
      Variable@1100485006 : Text[10];
      NewFormula@1100485007 : Text[1024];
      SearchDate@1100485010 : Date;
      ProjectVar@1100485011 : Boolean;
      lProjNo@1100485013 : Code[20];
    BEGIN
      //Substitute indexes (variables)
      IF NOT RevRuleInd.SETCURRENTKEY(Code, "Start Date") THEN
        ERROR('Unknown key');
      RemainderFormula := COPYSTR(RevRuleFormula, 1);
      OpeningBracket := STRPOS(RemainderFormula, '[');
      IF OpeningBracket = 0 THEN
        NewFormula := RemainderFormula;
      WHILE OpeningBracket > 0 DO BEGIN
        NewFormula := NewFormula + COPYSTR(RemainderFormula, 1, OpeningBracket - 1);
        ClosingBracket := STRPOS(RemainderFormula, ']');
        IF (ClosingBracket = 0) OR (ClosingBracket < OpeningBracket) THEN
          //No matching closing bracket found for an opening bracket
          ERROR(ErrMsg1);
        Variable := COPYSTR(RemainderFormula, OpeningBracket + 1, ClosingBracket -1 -OpeningBracket);
        IF STRLEN(Variable) <= 1 THEN
          ERROR(ErrMsg3, Variable);

        //look for the variable
        lProjNo := '';
        SearchDate := 17540101D;
        ProjectVar := FALSE;
        IF Variable[STRLEN(Variable)] = '1' THEN BEGIN
          Variable := COPYSTR(Variable, 1, STRLEN(Variable) -1);
          SearchDate := Date1;
        END ELSE IF Variable[STRLEN(Variable)] = '2' THEN BEGIN
          Variable := COPYSTR(Variable, 1, STRLEN(Variable) -1);
          SearchDate := Date2;
        END ELSE BEGIN
          ProjectVar := TRUE;
          lProjNo := ProjectNo;
        END;

        RevRuleInd.SETFILTER("Project No.", lProjNo);
        RevRuleInd.SETFILTER(Code, Variable);
        RevRuleInd."Start Date" := SearchDate;
        RevRuleInd."Project No." := lProjNo;
        RevRuleInd.Code := Variable;
        IF NOT RevRuleInd.FIND('=<') THEN BEGIN
          IF ProjectVar THEN
            //Variable %1 not found for project %2
            ERROR(ErrMsg4, Variable, ProjectNo)
          ELSE
            //Index %1 not found for date %2
            ERROR(ErrMsg2, Variable, SearchDate);
        END;
        NewFormula := NewFormula + STRSUBSTNO('%1', RevRuleInd.Index);

        //find next opening bracket
        IF ClosingBracket = STRLEN(RemainderFormula) THEN BEGIN
          RemainderFormula := '';
          OpeningBracket := 0;
        END ELSE BEGIN
          RemainderFormula := COPYSTR(RemainderFormula, ClosingBracket + 1);
          OpeningBracket := STRPOS(RemainderFormula, '[');
        END;
      END;
      NewFormula := NewFormula + RemainderFormula;

      //Evaluate formula
      EXIT(Math.EvaluateFormula(NewFormula));
    END;

    BEGIN
    END.
  }
}

