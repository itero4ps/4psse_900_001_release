OBJECT Codeunit 11125351 Workflow Response Handling 4PS
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    EventSubscriberInstance=Static-Automatic;
    Permissions=TableData 36=rm,
                TableData 38=rm,
                TableData 1511=imd;
    SingleInstance=No;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      CreateApprovalRequestsTxt@1001 : TextConst 'ENU=Create an approval request for the record using approver type %1 and %2 (DC).';
      ResponseAlreadyExistErr@1000 : TextConst 'ENU=A response with description %1 already exists.';
      SetDocumentOnHoldTxt@1100528200 : TextConst 'ENU=Set Document On Hold. (4PS)';

    [EventSubscriber(Codeunit,1520,OnAddWorkflowEventsToLibrary,"",Skip)]
    PROCEDURE OnCreateResponsesLibrary@25();
    BEGIN
      AddResponseToLibrary(SetDocumentOnHoldCode,0,SetDocumentOnHoldTxt,'GROUP 0');
      {
      AddResponseToLibrary(ApproveAndDelegateRequestCode,0,ApproveAndDelegateApprovalTxt,'GROUP 0');
      AddResponseToLibrary(CreateApprovalRequestDCCode,0,CreateApprovalRequestsTxt,'GROUP 5');
      AddResponseToLibrary(DelegateAndSendBackRequestCode,0,DelegateApprovalAndSendBackTxt,'GROUP 0');
      AddResponseToLibrary(DelegateWithoutApprovalRequestCode,0,DelegateApprovalTxt,'GROUP 0');
      AddResponseToLibrary(ForceApproveApprovalRequestDCCode,0,ForceApprovalRequestTxt,'GROUP 0');
      AddResponseToLibrary(OnAfterApproveApprovalRequestCode,0,OnAfterApproveApprovalRequestTxt,'GROUP 5');
      AddResponseToLibrary(ReturnToInitialStateCode,0,ReturnToInitialStateTxt,'GROUP 0');
      AddResponseToLibrary(SendBackApprovalRequestDCCode,0,SendBackApprovalRequestTxt,'GROUP 0');
      }
    END;

    LOCAL PROCEDURE AddResponsePredecessors@33(ResponseFunctionName@1002 : Code[128]);
    VAR
      WorkflowEventHandling@1000 : Codeunit 1520;
      DCWorkflowEventHandling@1001 : Codeunit 6085785;
    BEGIN
      {
      CASE ResponseFunctionName OF
        SendBackApprovalRequestDCCode:
          BEGIN
          END;
        ApproveAndDelegateRequestCode:
          AddResponsePredecessor(ApproveAndDelegateRequestCode,DCWorkflowEventHandling.RunWorkflowOnApproveAndDelegateRequestCode);
        DelegateAndSendBackRequestCode:
          AddResponsePredecessor(DelegateAndSendBackRequestCode,DCWorkflowEventHandling.RunWorkflowOnDelegateAndSendBackRequestCode);
        DelegateWithoutApprovalRequestCode:
          AddResponsePredecessor(DelegateWithoutApprovalRequestCode,DCWorkflowEventHandling.RunWorkflowOnDelegateWithoutApprovalRequestCode);
      END;
      }
    END;

    [EventSubscriber(Codeunit,1521,OnAddWorkflowResponsePredecessorsToLibrary,"",Skip)]
    LOCAL PROCEDURE OnAddResponsePredecessors@21(ResponseFunctionName@1000 : Code[128]);
    VAR
      DCWorkflowEventHandling@1002 : Codeunit 6085785;
      WorkflowResponseHandling@1001 : Codeunit 1521;
    BEGIN
      {
      // In order to enable standard responses to succes DC events
      CASE ResponseFunctionName OF
        WorkflowResponseHandling.ReleaseDocumentCode:
          AddResponsePredecessor(WorkflowResponseHandling.ReleaseDocumentCode, DCWorkflowEventHandling.RunWorkflowOnAdvancedAppCompleteRequestCode)
      END;
      }
    END;

    [EventSubscriber(Codeunit,1521,OnExecuteWorkflowResponse,"",Skip)]
    PROCEDURE ExecuteResponse@2(VAR ResponseExecuted@1000 : Boolean;Variant@1001 : Variant;xVariant@1004 : Variant;ResponseWorkflowStepInstance@1005 : Record 1504);
    VAR
      WorkflowResponse@1002 : Record 1521;
      WorkflowChangeRecMgt@1007 : Codeunit 1531;
      Handled@1003 : Boolean;
    BEGIN
      Handled := TRUE;

      OnBeforeExecuteResponseStepInstance(ResponseWorkflowStepInstance);

      IF WorkflowResponse.GET(ResponseWorkflowStepInstance."Function Name") THEN
        CASE WorkflowResponse."Function Name" OF
          CreateApprovalRequestDCCode:  //THIS RESPONSE IS ALS HANDLED IN 6085786 DC Workflow Response Handling, for Purchase Header, here we catch tables 122 and 124
            CreateApprovalRequestDC(Variant,ResponseWorkflowStepInstance);
          OnAfterApproveApprovalRequestCode: //THIS RESPONSE IS ALS HANDLED IN 6085786 DC Workflow Response Handling, for Purchase Header
            OnAfterApproveApprovalRequest(Variant,ResponseWorkflowStepInstance);
          ForceApproveApprovalRequestDCCode://THIS RESPONSE IS ALS HANDLED IN 6085786 DC Workflow Response Handling, for Purchase Header
            ForceApproveApprovalRequestDC(Variant,ResponseWorkflowStepInstance);
          SetDocumentOnHoldCode:
            SetDocumentOnHold(Variant,ResponseWorkflowStepInstance);
          ELSE
            Handled := FALSE;
        END;

      IF Handled THEN
        ResponseExecuted := TRUE;
    END;

    PROCEDURE CreateApprovalRequestDCCode@9() : Code[128];
    BEGIN
      EXIT(UPPERCASE('CreateApprovalRequestsDC'));
    END;

    LOCAL PROCEDURE CreateApprovalRequestDC@8(Variant@1001 : Variant;WorkflowStepInstance@1000 : Record 1504);
    VAR
      ApprovalManagement4PSConstr@1003 : Codeunit 11125349;
    BEGIN
      ApprovalManagement4PSConstr.CreateApprovalRequests(Variant);
    END;

    PROCEDURE OnAfterApproveApprovalRequestCode@16() : Text;
    BEGIN
      EXIT(UPPERCASE('OnAfterApproveApprovalRequest'));
    END;

    LOCAL PROCEDURE OnAfterApproveApprovalRequest@17(Variant@1003 : Variant;WorkflowStepInstance@1002 : Record 1504);
    VAR
      ApprovalEntry@1004 : Record 454;
      ApprovalManagement4PSConstr@1100528200 : Codeunit 11125349;
    BEGIN
      GetApprovalEntryFromVariant(Variant,ApprovalEntry);
      ApprovalManagement4PSConstr.OnAfterApproveApprovalRequest(ApprovalEntry);
    END;

    PROCEDURE ForceApproveApprovalRequestDCCode@6() : Code[128];
    BEGIN
      EXIT(UPPERCASE('ForcApproveApprovalRequestsDC'));  //** Typo's originally DC, don't change
    END;

    LOCAL PROCEDURE ForceApproveApprovalRequestDC@5(Variant@1001 : Variant;WorkflowStepInstance@1000 : Record 1504);
    VAR
      ApprovalManagement4PSConstr@1100528200 : Codeunit 11125349;
    BEGIN
      ApprovalManagement4PSConstr.ForceApproval(Variant);
    END;

    PROCEDURE SetDocumentOnHoldCode@1100528201() : Code[128];
    BEGIN
      EXIT(UPPERCASE('SetDocumentOnHold'));
    END;

    LOCAL PROCEDURE SetDocumentOnHold@1100528200(Variant@1001 : Variant;WorkflowStepInstance@1000 : Record 1504);
    VAR
      ApprovalManagement4PSConstr@1100528200 : Codeunit 11125349;
    BEGIN
      ApprovalManagement4PSConstr.FinishApprovals(Variant);
    END;

    PROCEDURE AddResponseToLibrary@26(FunctionName@1002 : Code[128];TableID@1001 : Integer;Description@1000 : Text[250];ResponseOptionGroup@1004 : Code[20]);
    VAR
      WorkflowResponse@1003 : Record 1521;
    BEGIN
      IF WorkflowResponse.GET(FunctionName) THEN
        EXIT;

      WorkflowResponse.SETRANGE(Description,Description);
      IF WorkflowResponse.FINDFIRST THEN
        ERROR(ResponseAlreadyExistErr,Description);

      WorkflowResponse.INIT;
      WorkflowResponse."Function Name" := FunctionName;
      WorkflowResponse."Table ID" := TableID;
      WorkflowResponse.Description := Description;
      WorkflowResponse."Response Option Group" := ResponseOptionGroup;
      WorkflowResponse.INSERT;

      AddResponsePredecessors(WorkflowResponse."Function Name");
    END;

    PROCEDURE AddResponsePredecessor@61(FunctionName@1000 : Code[128];PredecessorFunctionName@1001 : Code[128]);
    VAR
      WFEventResponseCombination@1002 : Record 1509;
    BEGIN
      WFEventResponseCombination.INIT;
      WFEventResponseCombination.Type := WFEventResponseCombination.Type::Response;
      WFEventResponseCombination."Function Name" := FunctionName;
      WFEventResponseCombination."Predecessor Type" := WFEventResponseCombination."Predecessor Type"::"Event";
      WFEventResponseCombination."Predecessor Function Name" := PredecessorFunctionName;
      IF WFEventResponseCombination.INSERT THEN;

      //This PUBLISHER IS superfluous, remove this one?
    END;

    [Integration]
    PROCEDURE OnBeforeExecuteResponseStepInstance@19(VAR NewWorkflowStepInstance@1000 : Record 1504);
    BEGIN
    END;

    LOCAL PROCEDURE GetApprovalEntryFromVariant@23(VAR Variant@1000 : Variant;VAR ApprovalEntry@1001 : Record 454);
    VAR
      RecRef@1002 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Variant);
      ApprovalEntry.SETPOSITION(RecRef.GETPOSITION);
      ApprovalEntry.FIND;
    END;

    LOCAL PROCEDURE GetPurchaseHeaderFromVariant@20(VAR Variant@1001 : Variant;VAR PurchaseHeader@1000 : Record 38);
    VAR
      RecRef@1002 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Variant);
      PurchaseHeader.SETPOSITION(RecRef.GETPOSITION);
      PurchaseHeader.FIND;
    END;

    BEGIN
    END.
  }
}

