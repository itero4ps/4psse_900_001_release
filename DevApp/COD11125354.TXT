OBJECT Codeunit 11125354 Possible Web Service Mgt
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            InitialiseWebServices;
            COMMIT;
            CheckWebServices;
          END;

  }
  CODE
  {
    VAR
      TempPossibleWebService@1100525002 : TEMPORARY Record 11229317;
      WSProductCode@1100525001 : Code[20];
      WSProductDescription@1100525003 : Text[50];
      WSObjectType@1100525000 : ',,,,,Codeunit,,,Page,Query';

    PROCEDURE ToggleMOB@1100525032(Publish@1100525001 : Boolean);
    BEGIN
      InitializeMOB;
      ToggleWebServiceSet(Publish);
    END;

    PROCEDURE IsPublishedMOB@1100525077() : Boolean;
    BEGIN
      InitDataMOB;
      EXIT(IsPublishedWebServiceSet);
    END;

    PROCEDURE ToggleGWP@1100525033(Publish@1100525000 : Boolean);
    BEGIN
      InitializeGWP;
      ToggleWebServiceSet(Publish);
    END;

    PROCEDURE IsPublishedGWP@1100525076() : Boolean;
    BEGIN
      InitDataGWP;
      EXIT(IsPublishedWebServiceSet);
    END;

    PROCEDURE ToggleSPT@1100525030(Publish@1100525000 : Boolean);
    BEGIN
      InitializeSPT;
      ToggleWebServiceSet(Publish);
    END;

    PROCEDURE IsPublishedSPT@1100525081() : Boolean;
    BEGIN
      InitDataSPT;
      EXIT(IsPublishedWebServiceSet);
    END;

    PROCEDURE ToggleOPT@1100525031(Publish@1100525000 : Boolean);
    BEGIN
      InitializeOPT;
      ToggleWebServiceSet(Publish);
    END;

    PROCEDURE IsPublishedOPT@1100525082() : Boolean;
    BEGIN
      InitDataOPT;
      EXIT(IsPublishedWebServiceSet);
    END;

    PROCEDURE ToggleCPT@1100525016(Publish@1100525000 : Boolean);
    BEGIN
      InitializeCPT;
      ToggleWebServiceSet(Publish);
    END;

    PROCEDURE IsPublishedCPT@1100525083() : Boolean;
    BEGIN
      InitDataCPT;
      EXIT(IsPublishedWebServiceSet);
    END;

    PROCEDURE ToggleCES@1100525050(Publish@1100525000 : Boolean);
    BEGIN
      InitializeCES;
      ToggleWebServiceSet(Publish);
    END;

    PROCEDURE IsPublishedCES@1100525084() : Boolean;
    BEGIN
      InitDataCES;
      EXIT(IsPublishedWebServiceSet);
    END;

    PROCEDURE ToggleSCA@1100525049(Publish@1100525000 : Boolean);
    BEGIN
      InitializeSCA;
      ToggleWebServiceSet(Publish);
    END;

    PROCEDURE IsPublishedSCA@1100525085() : Boolean;
    BEGIN
      InitDataSCA;
      EXIT(IsPublishedWebServiceSet);
    END;

    PROCEDURE ToggleDPT@1100525048(Publish@1100525000 : Boolean);
    BEGIN
      InitializeDPT;
      ToggleWebServiceSet(Publish);
    END;

    PROCEDURE IsPublishedDPT@1100525086() : Boolean;
    BEGIN
      InitDataDPT;
      EXIT(IsPublishedWebServiceSet);
    END;

    PROCEDURE ToggleVoidMgt@1100525047(Publish@1100525000 : Boolean);
    BEGIN
      InitializeVoidMgt;
      ToggleWebServiceSet(Publish);
    END;

    PROCEDURE IsPublishedVoidMgt@1100525087() : Boolean;
    BEGIN
      InitDataVoidMgt;
      EXIT(IsPublishedWebServiceSet);
    END;

    PROCEDURE ToggleMRA@1100525045(Publish@1100525000 : Boolean);
    BEGIN
      InitializeMRA;
      ToggleWebServiceSet(Publish);
    END;

    PROCEDURE IsPublishedMRA@1100525088() : Boolean;
    BEGIN
      InitDataMRA;
      EXIT(IsPublishedWebServiceSet);
    END;

    PROCEDURE ToggleFSW@1100525044(Publish@1100525000 : Boolean);
    BEGIN
      InitializeFSW;
      ToggleWebServiceSet(Publish);
    END;

    PROCEDURE IsPublishedFSW@1100525089() : Boolean;
    BEGIN
      InitDataFSW;
      EXIT(IsPublishedWebServiceSet);
    END;

    PROCEDURE ToggleHPT@1100525046(Publish@1100525000 : Boolean);
    BEGIN
      InitializeHPT;
      ToggleWebServiceSet(Publish);
    END;

    PROCEDURE IsPublishedHPT@1100525090() : Boolean;
    BEGIN
      InitDataHPT;
      EXIT(IsPublishedWebServiceSet);
    END;

    PROCEDURE ToggleINSBOU@1100525043(Publish@1100525000 : Boolean);
    BEGIN
      InitializeINSBOU;
      ToggleWebServiceSet(Publish);
    END;

    PROCEDURE IsPublishedINSBOU@1100525091() : Boolean;
    BEGIN
      InitDataINSBOU;
      EXIT(IsPublishedWebServiceSet);
    END;

    PROCEDURE ToggleTools@1100525042(Publish@1100525000 : Boolean);
    BEGIN
      InitializeTools;
      ToggleWebServiceSet(Publish);
    END;

    PROCEDURE IsPublishedTools@1100525092() : Boolean;
    BEGIN
      InitDataTools;
      EXIT(IsPublishedWebServiceSet);
    END;

    PROCEDURE ToggleCTBPortal@1100525041(Publish@1100525000 : Boolean);
    BEGIN
      InitializeCTBPortal;
      ToggleWebServiceSet(Publish);
    END;

    PROCEDURE IsPublishedCTBPortal@1100525093() : Boolean;
    BEGIN
      InitDataCTBPortal;
      EXIT(IsPublishedWebServiceSet);
    END;

    PROCEDURE ToggleSCR@1100525040(Publish@1100525000 : Boolean);
    BEGIN
      InitializeSCR;
      ToggleWebServiceSet(Publish);
    END;

    PROCEDURE IsPublishedSCR@1100525094() : Boolean;
    BEGIN
      InitDataSCR;
      EXIT(IsPublishedWebServiceSet);
    END;

    PROCEDURE ToggleWhiteVision@1100525039(Publish@1100525000 : Boolean);
    BEGIN
      InitializeWhiteVision;
      ToggleWebServiceSet(Publish);
    END;

    PROCEDURE IsPublishedWhiteVision@1100525095() : Boolean;
    BEGIN
      InitDataWhiteVision;
      EXIT(IsPublishedWebServiceSet);
    END;

    PROCEDURE ToggleEmpoly@1100525038(Publish@1100525000 : Boolean);
    BEGIN
      InitializeEmpoly;
      ToggleWebServiceSet(Publish);
    END;

    PROCEDURE IsPublishedEmpoly@1100525096() : Boolean;
    BEGIN
      InitDataEmpoly;
      EXIT(IsPublishedWebServiceSet);
    END;

    PROCEDURE ToggleBuyerGuidance@1100525037(Publish@1100525000 : Boolean);
    BEGIN
      InitializeBuyerGuidance;
      ToggleWebServiceSet(Publish);
    END;

    PROCEDURE IsPublishedBuyerGuidance@1100525097() : Boolean;
    BEGIN
      InitDataBuyerGuidance;
      EXIT(IsPublishedWebServiceSet);
    END;

    PROCEDURE TogglePlantWebShop@1100525036(Publish@1100525000 : Boolean);
    BEGIN
      InitializePlantWebShop;
      ToggleWebServiceSet(Publish);
    END;

    PROCEDURE IsPublishedPlantWebShop@1100525098() : Boolean;
    BEGIN
      InitDataPlantWebShop;
      EXIT(IsPublishedWebServiceSet);
    END;

    PROCEDURE TogglePlantTransportPlanning@1100525035(Publish@1100525000 : Boolean);
    BEGIN
      InitializePlantTransportPlanning;
      ToggleWebServiceSet(Publish);
    END;

    PROCEDURE IsPublishedPlantTransportPlanning@1100525099() : Boolean;
    BEGIN
      InitDataPlantTransportPlanning;
      EXIT(IsPublishedWebServiceSet);
    END;

    PROCEDURE ToggleBasware@1100525034(Publish@1100525000 : Boolean);
    BEGIN
      InitializeBasware;
      ToggleWebServiceSet(Publish);
    END;

    PROCEDURE IsPublishedBasware@1100525100() : Boolean;
    BEGIN
      InitDataBasware;
      EXIT(IsPublishedWebServiceSet);
    END;

    LOCAL PROCEDURE "---Locals---"@1100525029();
    BEGIN
    END;

    LOCAL PROCEDURE InitialiseWebServices@1100409006();
    BEGIN
      //4PS Products
      InitializeMOB;
      InitializeGWP;
      InitializeSPT;
      InitializeOPT;
      InitializeCPT;
      InitializeCES;
      InitializeSCA;
      InitializeDPT;
      InitializeVoidMgt;
      InitializeMRA;
      InitializeFSW;
      InitializeHPT;
      InitializeINSBOU;
      InitializeTools;

      //External Products
      InitializeCTBPortal;
      InitializeSCR;
      InitializeWhiteVision;
      InitializeEmpoly;
      InitializeBuyerGuidance;
      InitializePlantWebShop;
      InitializePlantTransportPlanning;
      InitializeBasware;
    END;

    LOCAL PROCEDURE InitDataMOB@1100525051();
    BEGIN
      InitData('MOB', '4PS Mobile');
    END;

    LOCAL PROCEDURE InitDataGWP@1100525052();
    BEGIN
      InitData('GWP', '4PS GWP');
    END;

    LOCAL PROCEDURE InitDataSPT@1100525053();
    BEGIN
      InitData('SPT', '4PS SPT');
    END;

    LOCAL PROCEDURE InitDataOPT@1100525055();
    BEGIN
      InitData('OPT', '4PS OPT');
    END;

    LOCAL PROCEDURE InitDataCPT@1100525056();
    BEGIN
      InitData('CPT', '4PS CPT');
    END;

    LOCAL PROCEDURE InitDataCES@1100525057();
    BEGIN
      InitData('CES', '4PS CES');
    END;

    LOCAL PROCEDURE InitDataSCA@1100525058();
    BEGIN
      InitData('SCA', '4PS SCA');
    END;

    LOCAL PROCEDURE InitDataDPT@1100525059();
    BEGIN
      InitData('DPT', '4PS Document Portal');
    END;

    LOCAL PROCEDURE InitDataVoidMgt@1100525060();
    BEGIN
      InitData('VoidMgt', '4PS Void Management');
    END;

    LOCAL PROCEDURE InitDataMRA@1100525061();
    BEGIN
      InitData('MRA', '4PS MRA');
    END;

    LOCAL PROCEDURE InitDataFSW@1100525062();
    BEGIN
      InitData('FSW', '4PS FSW');
    END;

    LOCAL PROCEDURE InitDataHPT@1100525063();
    BEGIN
      InitData('HPT', '4PS Hours Portal');
    END;

    LOCAL PROCEDURE InitDataINSBOU@1100525064();
    BEGIN
      InitData('INSBOU', '4PS INSBOU');
    END;

    LOCAL PROCEDURE InitDataTools@1100525065();
    BEGIN
      InitData('Tools', '4PS Web Service Tools');
    END;

    LOCAL PROCEDURE InitDataCTBPortal@1100525066();
    BEGIN
      InitData('CTBportal', '4PS External Project Portal (CTB)');
    END;

    LOCAL PROCEDURE InitDataSCR@1100525067();
    BEGIN
      InitData('SCR', '4PS Service Call Recognition (White Vision)');
    END;

    LOCAL PROCEDURE InitDataWhiteVision@1100525068();
    BEGIN
      InitData('WhiteVision', '4PS White Vision');
    END;

    LOCAL PROCEDURE InitDataEmpoly@1100525069();
    BEGIN
      InitData('Empoly', '4PS Empoly');
    END;

    LOCAL PROCEDURE InitDataBuyerGuidance@1100525070();
    BEGIN
      InitData('BuyerGuidance', '4PS Buyer Guidance (Kopersbegeleiding.nl)');
    END;

    LOCAL PROCEDURE InitDataPlantWebShop@1100525071();
    BEGIN
      InitData('PlantWebShop', '4PS Plant Webshop (Be-Sync)');
    END;

    LOCAL PROCEDURE InitDataPlantTransportPlanning@1100525072();
    BEGIN
      InitData('PlantTransPlan', '4PS Plant Transport Planning (External Package)');
    END;

    LOCAL PROCEDURE InitDataBasware@1100525073();
    BEGIN
      InitData('Basware', '4PS Basware');
    END;

    LOCAL PROCEDURE CheckWebServices@1100525020();
    VAR
      PossibleWebService@1100525000 : Record 11229317;
      WebService@1100525001 : Record 2000000076;
      WebServiceSetLine@1100525002 : Record 11229309;
    BEGIN
      IF (PossibleWebService.FINDSET) THEN BEGIN
        REPEAT
          IF (NOT TempPossibleWebService.GET(PossibleWebService."Object Type", PossibleWebService."Service Name")) THEN BEGIN
            PossibleWebService."Is Standard" := FALSE;
            PossibleWebService.GetInLicense;
            PossibleWebService.MODIFY;
          END;
        UNTIL (PossibleWebService.NEXT = 0);
      END;

      IF (WebService.FINDSET(TRUE, TRUE)) THEN BEGIN
        REPEAT
          IF (NOT PossibleWebService.GET(WebService."Object Type", WebService."Service Name")) THEN BEGIN
            PossibleWebService.INIT;
            PossibleWebService."Object Type" := WebService."Object Type";
            PossibleWebService."Service Name" := WebService."Service Name";
            PossibleWebService."Object Id" := WebService."Object ID";
            PossibleWebService.GetInLicense;
            PossibleWebService.INSERT;
          END;
          IF (WebService.Published) THEN BEGIN
            WebServiceSetLine.SETRANGE("Object Type", WebService."Object Type");
            WebServiceSetLine.SETRANGE("Service Name", WebService."Service Name");
            WebServiceSetLine.MODIFYALL(Published, WebService.Published);
          END ELSE
            WebService.DELETE;
        UNTIL (WebService.NEXT = 0);
      END;
    END;

    LOCAL PROCEDURE AddPossibleWebServiceObject@1100525027(ObjectType@1100525001 : Option;ObjectId@1100525002 : Integer;ServiceName@1100525003 : Text);
    VAR
      PossibleWebService@1100525000 : Record 11229317;
    BEGIN
      IF (NOT PossibleWebService.GET(ObjectType, ServiceName)) THEN BEGIN
        PossibleWebService."Object Type" := ObjectType;
        PossibleWebService."Service Name" := ServiceName;
        PossibleWebService.INSERT;
      END;
      PossibleWebService."Object Id" := ObjectId;
      PossibleWebService."Is Standard" := TRUE;
      PossibleWebService.GetInLicense;
      PossibleWebService.MODIFY;

      TempPossibleWebService.COPY(PossibleWebService);
      IF (TempPossibleWebService.INSERT) THEN;

      AddWebServiceSetLine(PossibleWebService);
    END;

    LOCAL PROCEDURE AddWebServiceSet@1100525001();
    VAR
      WebServiceSet@1100525000 : Record 11229298;
    BEGIN
      IF (NOT WebServiceSet.GET(WSProductCode)) THEN BEGIN
        WebServiceSet.Code := WSProductCode;
        WebServiceSet.INSERT;
      END;
      WebServiceSet.Description := WSProductDescription;
      WebServiceSet."Is Standard"  := TRUE;
      WebServiceSet.MODIFY;
    END;

    LOCAL PROCEDURE AddWebServiceSetLine@1100409007(PossibleWebService@1100525001 : Record 11229317);
    VAR
      WebServiceSetLine@1100525000 : Record 11229309;
    BEGIN
      IF (NOT WebServiceSetLine.GET(WSProductCode, PossibleWebService."Object Type", PossibleWebService."Service Name")) THEN BEGIN
        WebServiceSetLine."Web Service Set Code" := WSProductCode;
        WebServiceSetLine."Object Type" := PossibleWebService."Object Type";
        WebServiceSetLine."Service Name" := PossibleWebService."Service Name";
        WebServiceSetLine.INSERT;
      END;
      //WebServiceSetLine.MODIFY;
    END;

    LOCAL PROCEDURE InitData@1100525002(ProductCode@1100525000 : Code[20];ProductDescription@1100525001 : Text);
    BEGIN
      WSProductCode := ProductCode;
      WSProductDescription := ProductDescription;
    END;

    LOCAL PROCEDURE ToggleWebServiceSet@1100525054(Publish@1100525000 : Boolean);
    VAR
      WebServiceSet@1100525001 : Record 11229298;
    BEGIN
      WebServiceSet.SETRANGE(Code, WSProductCode);
      WebServiceSet.TogglePublishWebService(WebServiceSet, Publish);
    END;

    LOCAL PROCEDURE IsPublishedWebServiceSet@1100525079() : Boolean;
    VAR
      WebServiceSet@1100525000 : Record 11229298;
      WebServiceSetLine@1100525001 : Record 11229309;
    BEGIN
      WebServiceSet.GET(WSProductCode);
      WebServiceSet.CALCFIELDS("Web Service Lines", "Not Published Lines");
      EXIT(WebServiceSet."Not Published Lines" = 0);
    END;

    LOCAL PROCEDURE "---4PS Products---"@1100525007();
    BEGIN
    END;

    LOCAL PROCEDURE InitializeMOB@1100525000();
    BEGIN
      InitDataMOB;
      AddWebServiceSet;
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Count Paged Entities", 'CountPagedEntitiesMOB');
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Dispatch Interface (MOB)", 'DispatchInterfaceMOB');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Work Order WS (MOB)", 'WorkOrderMOB');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Serv.Loc. by Desc. (MOB)", 'ServLocByDescMOB');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Serv.Loc. by City (MOB)", 'ServLocByCityMOB');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Serv.Loc. by No. (MOB)", 'ServLocByNoMOB');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Item by Desc. (MOB)", 'ItemByDescMOB');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Item by No. (MOB)", 'ItemByNoMOB');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Objects by Service Loc. (MOB)", 'ObjectByServiceLocMOB');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Service Object Lookup (Mob.)", 'ServiceObjectLookupMOB');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Std. Obj. Lookup by No. (Mob.)", 'StandardObjectLookupByNoMOB');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Std. Obj. Lookup by Br. (Mob.)", 'StandardObjectLookupByBrandModelTypeMOB');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Open Work Order (MOB)", 'OpenWorkOrderMOB');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Service Object Brand (MOB)", 'ServiceObjectBrandMOB');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Service Object Model (MOB)", 'ServiceObjectModelMOB');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Service Object Type (MOB)", 'ServiceObjectTypeMOB');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Customer Lookup by Name (MOB)", 'CustomerLookupByNameMOB');
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Document Management Webservice", 'DocumentManagement');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Document Props Basic WS", 'DocumentPropsBasicWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Allowed File Extension WS", 'AllowedFileExtensionWS');
    END;

    LOCAL PROCEDURE InitializeGWP@1100525008();
    BEGIN
      InitDataGWP;
      AddWebServiceSet;
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Work Order WS (GWP)", 'WorkOrderPageGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Work Order Service (GWP)", 'WorkOrderServiceGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Work Order Projects (GWP)", 'WorkOrderProjectsGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Resource Work Order Pl. (GWP)", 'ResourceWorkOrderPlanningGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Consignment Roster (GWP)", 'ConsignmentRosterGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Employee Absence (GWP)", 'EmployeeAbsenceGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Service Priority (GWP)", 'ServicePriorityGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Order Kind (GWP)", 'OrderKindGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Order Type (GWP)", 'OrderTypeGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Cause of Absence (GWP)", 'CauseOfAbsenceGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Trade Association (GWP)", 'TradeAssociationGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Territory (GWP)", 'TerritoryGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"User Setup (GWP)", 'UserSetupGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Reference Point (GWP)", 'ReferencePointGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"4PS Mobile Setup (GWP)", 'FPSMobileSetupGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Base Calendar Change (GWP)", 'BaseCalendarChangeGWP');
      AddPossibleWebServiceObject(WSObjectType::Page,  PAGE::"Source No. Lookup (GWP)", 'SourceNoLookupGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Work Order Lookup (GWP)", 'WorkOrderLookupGWP');
      AddPossibleWebServiceObject(WSObjectType::Page,  PAGE::"Work Order Count (GWP)", 'WorkOrderCountGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Volatile Resource Data (GWP)", 'VolatileResourceDataGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Service Order Lookup (GWP)", 'ServiceOrderLookupGWP');
      AddPossibleWebServiceObject(WSObjectType::Page,  PAGE::"Service Order Count (GWP)", 'ServiceOrderCountGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Sales/Purchaser Lookup (GWP)", 'SalesPurchaserLookupGWP');
      AddPossibleWebServiceObject(WSObjectType::Page,  PAGE::"Sales/Purchaser Count (GWP)", 'SalesPurchaserCountGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Service Location Lookup (GWP)", 'ServiceLocationLookupGWP');
      AddPossibleWebServiceObject(WSObjectType::Page,  PAGE::"Service Location Count (GWP)", 'ServiceLocationCountGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Service Priority Lookup (GWP)", 'ServicePriorityLookupGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Employee Lookup (GWP)", 'EmployeeLookupGWP');
      AddPossibleWebServiceObject(WSObjectType::Page,  PAGE::"Employee Count (GWP)", 'EmployeeCountGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Customer Lookup (GWP)", 'CustomerLookupGWP');
      AddPossibleWebServiceObject(WSObjectType::Page,  PAGE::"Customer Count (GWP)", 'CustomerCountGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Territory Lookup (GWP)", 'TerritoryLookupGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"On Hold Code Lookup (GWP)", 'OnHoldCodeLookupGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Service Contract Lookup (GWP)", 'ServiceContractLookupGWP');
      AddPossibleWebServiceObject(WSObjectType::Page,  PAGE::"Service Contract Count (GWP)", 'ServiceContractCountGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Reference Point Lookup (GWP)", 'ReferencePointLookupGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Discipline Lookup (GWP)", 'DisciplineLookupGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Trade Association Lookup (GWP)", 'TradeAssociationLookupGWP');
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Integration (GWP)", 'IntegrationGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Base Calendar (GWP)", 'BaseCalendarGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Project Type (GWP)", 'ProjectTypeGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Type (GWP)", 'GeneralTypeGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Trade Speciality (GWP)", 'TradeSpecialityGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Subcont.Port. Setup (GWP)", 'SubcontPortSetupGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Company Plan Group (GWP)", 'CompanyPlanGroupGWP');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Company Plan Group Line (GWP)", 'CompanyPlanGroupLineGWP');
    END;

    LOCAL PROCEDURE InitializeSPT@1100525026();
    BEGIN
      InitDataSPT;
      AddWebServiceSet;
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Document Management Webservice", 'DocumentManagement');
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Serv.Port. Call Management", 'CallManagementSPT');
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Appointment Mgt. (SPT) WS", 'AppointmentMgtSPT');
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Export Service Priorities WS", 'ServicePrioritiesWS');
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Change Request Mgt WS", 'ChangeRequestMgtWS');
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Service Portal Management WS", 'ServicePortalManagementWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Change Request WS", 'ChangeRequestWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Document Properties (SPT)", 'DocumentProperties'); //Move this line to the new DocMan function
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"General Advanced Text WS", 'GeneralAdvancedTextWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Change Request Impact Line WS", 'ChangeRequestImpactLineWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Service Call Prob. Text (SPT)", 'ServiceCallProbTextSPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Service Call (Serv.Port.)", 'ServiceCallSPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"User (Serv.Port.)", 'UserSPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"User Filter (Serv.Port.)", 'UserFilterSPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Document Props Basic WS", 'DocumentPropsBasicWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Allowed File Extension WS", 'AllowedFileExtensionWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::Page11132117, 'ServPortTypesWS');
    END;

    LOCAL PROCEDURE InitializeOPT@1100525025();
    BEGIN
      InitDataOPT;
      AddWebServiceSet;
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Subcont.Port.Serv.Order Mgt", 'SubcontPortServOrderMgt');
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Subcontr. Portal Management WS", 'SubcontrPortalManagementWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Subcont.Port.Doc.Properties WS", 'SubcontPortDocumentProperties');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Subcont.Port.Service Order WS", 'SubcontPortServiceOrder');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Subcont.Port. User WS", 'SubcontPortUser');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Subcont.Port.Work Order WS", 'SubcontPortWorkOrder');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Work Order Text WS", 'WorkOrderTextWS');
    END;

    LOCAL PROCEDURE InitializeCPT@1100525024();
    BEGIN
      InitDataCPT;
      AddWebServiceSet;
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"CRM Port. Functions", 'CRMPortFunctions');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Document Properties (SPT)", 'DocumentProperties');   //Move this line to the new DocMan function
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"CRM Port. Appointment", 'CRMPortAppointment');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"CRM Port. Attendees", 'CRMPortAttendees');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"CRM Port. Salesperson by Cont.", 'CRMPortSalespersonByContact');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"CRM Port. To-Do", 'CRMPortToDo');
    END;

    LOCAL PROCEDURE InitializeCES@1100525023();
    BEGIN
      InitDataCES;
      AddWebServiceSet;
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Central Enter Scr. Comp. WS", 'CompaniesCES');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Central Enter Scr. Post CodeWS", 'PostCodesCES');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Central Enter Scr. SL. WS", 'ServiceLocationsCES');
    END;

    LOCAL PROCEDURE InitializeSCA@1100525022();
    BEGIN
      InitDataSCA;
      AddWebServiceSet;
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Document Management Webservice", 'DocumentManagement');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"SCA User WS", 'ScaUserSCA');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"SCA Users per Service Location", 'SCAUserPerServiceLocationSCA');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Service Call SCA WS", 'ServiceCallSCA');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Service Location SCA WS", 'ServiceLocationSCA');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Service Object SCA WS", 'ServiceObjectSCA');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Company Information SCA WS", 'CompanyInformationSCA');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Contact SCA WS", 'ContactSCA');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Service Contract SCA WS", 'ServiceContractSCA');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Service Contract Priority SCA", 'ServiceContractPrioritySCA');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Document Props Basic WS", 'DocumentPropsBasicWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Allowed File Extension WS", 'AllowedFileExtensionWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"WebAPI Test WS", 'WebApiTest');
    END;

    LOCAL PROCEDURE InitializeDPT@1100525021();
    BEGIN
      InitDataDPT;
      AddWebServiceSet;
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Document Portal Web Services", 'SharepointWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Contacts WS", 'ContactsWS');
    END;

    LOCAL PROCEDURE InitializeVoidMgt@1100525019();
    BEGIN
      InitDataVoidMgt;
      AddWebServiceSet;
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Document Management Webservice", 'DocumentManagement');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"SUP Recording Lines VoidMgt WS", 'SUPRecordingLinesVoidMgt');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Service Order VoidMgt WS", 'ServiceOrderVoidMgt');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"SUP Rooms VoidMgt WS", 'SUPRoomsVoidMgt');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Service Price Book VoidMgt WS", 'ServicePriceBookVoidMgt');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Service Unit Price VoidMgt WS", 'ServiceUnitPriceVoidMgt');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"SUP Production WS", 'SUPProductionVoidMgt');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Document Props Basic WS", 'DocumentPropsBasicWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Allowed File Extension WS", 'AllowedFileExtensionWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"WebAPI Test WS", 'WebApiTest');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"VMA App Feature WS", 'AppFeatureVMA');
    END;

    LOCAL PROCEDURE InitializeMRA@1100525018();
    BEGIN
      InitDataMRA;
      AddWebServiceSet;
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Document Management Webservice", 'DocumentManagement');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"MMR Job List WS", 'JobMRA');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"MMR Plot List WS", 'PlotMRA');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"MMR House Model List WS", 'HouseModelMRA');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"MMR Units per H. Model List WS", 'StandardRoomMRA');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plot R. Cross List WS", 'CrossListItemMRA');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plot Recording Line WS", 'RecordingLineMRA');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Document Props Basic WS", 'DocumentPropsBasicWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Allowed File Extension WS", 'AllowedFileExtensionWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"WebAPI Test WS", 'WebApiTest');
    END;

    LOCAL PROCEDURE InitializeFSW@1100525017();
    BEGIN
      InitDataFSW;
      AddWebServiceSet;
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Document Management Webservice", 'DocumentManagement');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"FS Cost Object WS", 'FSCostObject');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"FS Fire Retardancy Factor WS", 'FSFireRetardancyFactor');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"FS Item WS", 'FSItem');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"FS Service Price Book WS", 'FSServicePriceBook');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"FS Service Unit Price WS", 'FSServiceUnitPrice');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"FS Transit Indication WS", 'FSTransitIndication');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"FS Transit Lines WS", 'FSTransitLine');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"FS Workorder WS", 'FSWorkOrder');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"FS Worksheet WS", 'FSWorksheet');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"FS Worksheet Line WS", 'FSWorksheetLine');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"FS Worksh. Hour Line WS", 'FSWorkshHourLine');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"FS Worksh. Item Line WS", 'FSWorkshItemLine');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"FS Worksheet Setup WS", 'FSWorksheetSetup');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"FS Worksh. Serv.Ord. WS", 'FSWorkshServOrd');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"FSW Lns. Trans. In Progress WS", 'FSWLnsTransInProgressWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Document Props Basic WS", 'DocumentPropsBasicWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Allowed File Extension WS", 'AllowedFileExtensionWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"WebAPI Test WS", 'WebApiTest');
    END;

    LOCAL PROCEDURE InitializeHPT@1100525015();
    BEGIN
      InitDataHPT;
      AddWebServiceSet;
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Hour Portal WS (HPT)", 'HourPortalWSHPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Cost Object WS (HPT)", 'CostObjectWSHPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Extension Contract WS (HPT)", 'ExtensionContractWSHPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Hour Line Templates (HPT)", 'HourLineTemplatesHPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Hour Portal Users (HPT)", 'HourPortalUsersHPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Hours Consent Lines (HPT)", 'HoursConsentLinesHPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Leave Ledger Entry 4PS (HPT)", 'LeaveLedgerEntry4PSHPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Leave Overview 4PS (HPT)", 'LeaveOverview4PSHPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Site Mgt Hour Header (HPT)", 'SiteMgtHourHeaderHPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Site Mgt Hour Lines (HPT)", 'SiteMgtHourLinesHPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Site Mgt Hours Codes (HPT)", 'SiteMgtHoursCodesHPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Site Mgt Hours Companies(HPT)", 'SiteMgtHoursCompaniesHPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Site Mgt Hours Overview (HPT)", 'SiteMgtHoursOverviewHPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Site Mgt Plant Companies (HPT)", 'SiteMgtPlantCompaniesHPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plant Location List (HPT)", 'PlantLocationListHPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plant Type List (HPT)", 'PlantTypeListHPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plant Number List (HPT)", 'PlantNumberListHPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Cost Comp. Plant List (HPT)", 'CostCompPlantListHPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Project Shift List (HPT)", 'ProjectShiftListHPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Hour Portal Color Set (HPT)", 'HourPortalColorSetHPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Company Logo (HPT)", 'CompanyLogoHPT');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Site Mgt Hours Objects (HPT)", 'SiteMgtHoursObjectsHPTSoap');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Site Mgt Hours Objects (HPT)", 'SiteMgtHoursObjectsHPT');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Hour Portal Fields Templ (HPT)", 'HourPortalFieldsTemplHPT');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Hour Portal Text (HPT)", 'HourPortalTextHPT');
      AddPossibleWebServiceObject(WSObjectType::Query, QUERY::"Site Mgt Hours Employee (HPT)", 'SiteMgtHoursEmployeeHPT');
    END;

    LOCAL PROCEDURE InitializeINSBOU@1100525014();
    BEGIN
      InitDataINSBOU;
      AddWebServiceSet;
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"INSBOU Management WS", 'INSBOUManagementWS');
    END;

    LOCAL PROCEDURE InitializeTools@1100525013();
    BEGIN
      InitDataTools;
      AddWebServiceSet;
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"WS Option Fields WS", 'WSOptionFieldsWS');
    END;

    LOCAL PROCEDURE "---External Products---"@1100525028();
    BEGIN
    END;

    LOCAL PROCEDURE InitializeCTBPortal@1100525012();
    BEGIN
      InitDataCTBPortal;
      AddWebServiceSet;
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Project Site WS", 'ProjectSiteMgtCTBPP');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Project Site Change Log WS", 'ChangeLogCTBPPCardWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Accident QA WS", 'AccidentQAWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Contact List WS", 'ContactCardWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Document Category WS", 'DocumentCategoryWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Generic Temp Table WS", 'DocumentLinksTempWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Document Link WS", 'DocumentLinkWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Document Properties (SPT)", 'DocumentProperties');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Document Properties WS", 'DocumentPropertiesWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Document Type WS", 'DocumentTypeWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Employee WS", 'EmployeeCardWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Extension Contract WS", 'ExtensionContractWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"House Model WS", 'HouseModelWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Get Order Line (SMF) WS", 'OrderLineWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Get Order (SMF) WS", 'OrderWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Inspection SMF WS", 'InspectionSMFWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plot WS", 'PlotWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Project Authority WS", 'ProjectAuthorityWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Project WS", 'ProjectCardWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Project Element WS", 'ProjectElementWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Project Principal WS", 'ProjectPrincipalWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Proj Purchase Action WS", 'ProjectPurchaseActionWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Project Responsible Person WS", 'ProjectResponsiblePersonWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Project Site Header WS", 'ProjectSiteHeaderCTBPPWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Project Site Line List  WS", 'ProjectSiteLineCTBPPWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Purchase Header WS", 'PurchaseHeaderWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Purchase Line List WS", 'PurchaseLineWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"QA Deviation WS", 'QADeviationWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Responsibility WS", 'ResponsibilityWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Text Line (SMF) WS", 'TextLineSMFWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Try-out WS", 'TryoutHeaderWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Try-out Line WS", 'TryoutLineWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Try-out Responsible Person WS", 'TryoutResponsiblePersonWS');
    END;

    LOCAL PROCEDURE InitializeSCR@1100525011();
    BEGIN
      InitDataSCR;
      AddWebServiceSet;
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"SCR Customer WS", 'CustomerSCR');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"SCR Service Location WS", 'ServiceLocationSCR');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"SCR Service Object WS", 'ServiceObjectSCR');
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Service Call Recognition WS", 'ServiceCallRecognitionSCR');
    END;

    LOCAL PROCEDURE InitializeWhiteVision@1100525010();
    BEGIN
      InitDataWhiteVision;
      AddWebServiceSet;
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Pstd. Purch. Doc. Func. (DMS)", 'PstdPurchDocFuncDMS');
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Purch. Header Functions (DMS)", 'PurchHeaderFunctionsDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Cost Center Card (DMS)", 'DimensionValues');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Document Approvers (DMS)", 'DocumentApproverDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Employee Card (DMS)", 'EmployeeDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Inv. Approval Line Card (DMS)", 'InvoiceApprovalLineDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Pstd. Purch.Cr.Memo Card (DMS)", 'PostedPurchaseCreditMemoDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Posted Purch. Inv. Card (DMS)", 'PostedPurchaseInvoiceDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Purch. Rcpt. Line Card (DMS)", 'PostedPurchaseReceiptLinesDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Project Card (DMS)", 'ProjectCardDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Project Responsible Persons", 'ProjectResponsible');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Purchase Cr.Memo Card (DMS)", 'PurchaseCreditMemoDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Purch. Cr.Memo Line Card (DMS)", 'PurchaseCreditMemoLineDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Purchase Invoice Card (DMS)", 'PurchaseInvoiceCardDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Purch. Inv. Line Card (DMS)", 'PurchaseInvoiceLineDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Purchase Line Card (DMS)", 'PurchaseLineCardDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Purchase Order Card (DMS)", 'PurchaseOrderCardDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Currency Card (DMS)", 'ValutaCardDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"VAT Posting Setup Card (DMS)", 'VatPostingSetupCardDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"VAT Prod. Post. Grp. (DMS)", 'VatProdPostGrpDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Vendor Bank Account Card (DMS)", 'VendorBankAccountDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Vendor Card (DMS)", 'VendorCardDMS');
    END;

    LOCAL PROCEDURE InitializeEmpoly@1100525009();
    BEGIN
      InitDataEmpoly;
      AddWebServiceSet;
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Empoly Projects WS", 'EmpolyProjectWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Empoly Project Elements WS", 'EmpolyProjectElementWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Empoly Service Orders WS", 'EmpolyServiceOrderWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Empoly Items WS", 'EmpolyItemWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Empoly Companies WS", 'EmpolyCompanyWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Empoly Locations WS", 'EmpolyLocationWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Empoly Warehouse Order WS", 'EmpolyWarehouseOrderWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Reason Codes WS", 'ReasonCodesWS');
    END;

    LOCAL PROCEDURE InitializeBuyerGuidance@1100525003();
    BEGIN
      InitDataBuyerGuidance;
      AddWebServiceSet;
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Buyer Management Integation", 'BuyerManagementIntegation');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Project WS (BM Integration)", 'ProjectWSBMIntegration');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Project Principal WS (BM Int.)", 'ProjectPrincipalWSBMInt');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"House Type WS (BM Integration)", 'HouseTypeWSBMIntegration');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"House Model WS (BM Intr.)", 'HouseModelWSBMIntr');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Option Main Group WS (BM Int.)", 'OptionMainGroupWSBMInt');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Option Group WS (BM Intr.)", 'OptionGroupWSBMIntr');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Option Sub Group WS (BM Intr.)", 'OptionSubGroupWSBMIntr');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plot WS (BM Integration)", 'PlotWSBMIntegration');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Option WS (BM Integration)", 'OptionWSBMIntegration');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Option S./T. Text WS (BM Int.)", 'OptionSTTextWSBMInt');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Project Authority WS (BM Int.)", 'ProjectAuthorityWSBMInt');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Installment WS (BM int.)", 'InstallmentWSBMint');
    END;

    LOCAL PROCEDURE InitializePlantWebShop@1100525004();
    BEGIN
      InitDataPlantWebShop;
      AddWebServiceSet;
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::PlantItemWebservice, 'PlantItemWebService');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Web Combined Plant Item WS", 'CombinedPlantItemCard');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plant Comment Card (WS)", 'CommentLineCard');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Exit Order WS", 'ExitOrder');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Exit Order Cost Line WS", 'ExitOrderCostLine');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Exit Order Line WS", 'ExitOrderLineCard');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Item WS", 'ItemWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Item Feature Card WS", 'ItemFeatureCard');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Linked Plant Type WS", 'LinkedPlantTypeCard');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Web-Login Plant Location WS", 'LoginPlantLocationCard');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plant Request Card WS", 'PlantRequestCard');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plant Comment List (WS)", 'PlantCommentListWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plant Inventory Card WS", 'PlantInventoryCardWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plant Order Cost Line WS", 'PlantOrderCost');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plant Request Cost Line WS", 'PlantRequestCostLines');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plant Request Line List WS", 'PlantRequestLineList');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plant Standard Item WS", 'PlantStandardItemCard');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plant Location Address WS", 'PlantLocationAddressCard');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Web Comb. Plant Item St. WS", 'PlantItemStockCard');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plant Location Card WS", 'PlantLocationCard');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plant Location Rate Code WS", 'PlantLocationRateCodeCard');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plant Order WS", 'PlantOrderCard');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plant Order Line WS", 'PlantOrderLineCard');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plant Profile Answer WS", 'PlantProfileAnswerCard');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plant Request Line WS", 'PlantRequestLineCard');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Plant Type WS", 'PlantTypeCard');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Website Link Line WS", 'WebsiteLinkLineWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Website Text Line WS", 'WebsiteTextLineWS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Sales Invoice HeaderPlantLocWS", 'SalesInvoiceHeaderPlantLoc');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Sales Cr.MemoHeader PlantLocWS", 'SalesCrMemoHeaderPlantLoc');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Web Comb Plant Item PlantLocWS", 'WebCombPlantItemPlantLocWS');
    END;

    LOCAL PROCEDURE InitializePlantTransportPlanning@1100525005();
    BEGIN
      InitDataPlantTransportPlanning;
      AddWebServiceSet;
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"External Transport Planning WS", 'PlantTransportPlanningTRPL');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"PO Transport Request WS", 'PlantOrderTransportRequestTRPL');
    END;

    LOCAL PROCEDURE InitializeBasware@1100525006();
    BEGIN
      InitDataBasware;
      AddWebServiceSet;
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Purch. Header Functions (DMS)", 'PurchHeaderFunctionsDMS');
      AddPossibleWebServiceObject(WSObjectType::Codeunit, CODEUNIT::"Pstd. Purch. Doc. Func. (DMS)", 'PstdPurchDocFuncDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Vendor Card (DMS)", 'VendorCardDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Currency Card (DMS)", 'CurrencyCardDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Cost Center Card (DMS)", 'CostCenterCardDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Purchase Order Card (DMS)", 'PurchaseOrderCardDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Employee Card (DMS)", 'EmployeeCardDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Purchase Invoice Card (DMS)", 'PurchaseInvoiceCardDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Purchase Cr.Memo Card (DMS)", 'PurchaseCrMemoCardDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Document Approvers (DMS)", 'DocumentApproversDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Vendor Ledger Entry (DMS)", 'VendorLedgerEntryDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Posted Purch. Inv. Card (DMS)", 'PostedPurchInvCardDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Pstd. Purch.Cr.Memo Card (DMS)", 'PstdPurchCrMemoCardDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"VAT Prod. Post. Grp. (DMS)", 'VATProdPostGrpDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Payment Agreement (DMS)", 'PaymentAgreementDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Project Card (DMS)", 'ProjectCardDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Purch. Inv. Line Card (DMS)", 'PurchInvLineCardDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Purch. Cr.Memo Line Card (DMS)", 'PurchCrMemoLineCardDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Vendor Bank Account Card (DMS)", 'VendorBankAccountCardDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Service Order Card (DMS)", 'ServiceOrderCardDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Sales Cr.Memo Line Card (DMS)", 'SalesCrMemoLineCardDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Inv. Approval Line Card (DMS)", 'InvApprovalLineCardDMS');
      AddPossibleWebServiceObject(WSObjectType::Page, PAGE::"Purchase Line Card (DMS)", 'PurchaseLineCardDMS');
    END;

    BEGIN
    END.
  }
}

