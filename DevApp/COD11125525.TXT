OBJECT Codeunit 11125525 Run Forms Mgt. (SMF)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      SiteManFormSetup@1210190000 : Record 11125525;

    PROCEDURE RunSiteMgtProjlHours@1100525000(IProjectNo@1100525004 : Code[20];IDate@1210190000 : Date;IShiftCode@1210190001 : Code[10]);
    VAR
      lvSiteMgtProjObjRec@1100525005 : Record 11012359;
      lvSiteMgtProjHrsHeadRec@1100525001 : Record 11012362;
      HourAccountingProject@1210190003 : Record 11020224;
      ProjShift@1210190004 : Record 11125538;
      lvText001@1100525006 : TextConst 'ENU=Project ''%1'' of Company ''%2'' is not created in ''%3'', it is not possible to enter hours for this project.';
      lvText002@1210190005 : TextConst 'ENU=First select a %1.';
      HourAccountingProjectList@1100525000 : Page 11020246;
      SiteMngmntProjHoursList@1100525007 : Page 11072127;
      YearNo@1100525003 : Integer;
      WeekNo@1100525002 : Integer;
    BEGIN
      //kzwerver, 110609, c, #RfC ULC  (Rewritten)
      //IF NOT lvSiteMgtProjObjRec.GET(COMPANYNAME, lvSiteMgtProjObjRec.Type::Project, IProjectNo) THEN
      //  ERROR(lvText001, IProjectNo, COMPANYNAME, lvSiteMgtProjObjRec.TABLECAPTION);

      WeekNo := DATE2DWY(IDate, 2);
      YearNo := DATE2DWY(IDate, 3);
      SiteManFormSetup.GET;
      CASE SiteManFormSetup."Hour Accounting Form" OF
        SiteManFormSetup."Hour Accounting Form"::SiteManHrAccByProj:
          BEGIN
            IF NOT lvSiteMgtProjObjRec.GET(COMPANYNAME, lvSiteMgtProjObjRec.Type::Project, IProjectNo) THEN
              ERROR(lvText001, IProjectNo, COMPANYNAME, lvSiteMgtProjObjRec.TABLECAPTION);
            IF IShiftCode = '' THEN BEGIN  //*DP00033
              ProjShift.SETRANGE("Project No.", IProjectNo);
              ProjShift.SETFILTER("Shift Code", '<>%1', '');
              IF NOT ProjShift.ISEMPTY THEN
                ERROR(lvText002, ProjShift.FIELDCAPTION("Shift Code"));
            END;
            lvSiteMgtProjHrsHeadRec.FILTERGROUP(2);
            //filtergroup 2 for defaults at new record in page
            lvSiteMgtProjHrsHeadRec.SETRANGE(Year, YearNo);
            lvSiteMgtProjHrsHeadRec.SETRANGE(Week, WeekNo);
            lvSiteMgtProjHrsHeadRec.SETRANGE("Receiving Company", COMPANYNAME);
            lvSiteMgtProjHrsHeadRec.SETRANGE("Project No.", IProjectNo);
            lvSiteMgtProjHrsHeadRec.SETFILTER("Called From Site Mgt Form", '%1', TRUE);
            lvSiteMgtProjHrsHeadRec.SETFILTER("Shift Code Filter", '%1', IShiftCode);
            lvSiteMgtProjHrsHeadRec.SETFILTER("Work Date Filter", '%1', IDate);
            lvSiteMgtProjHrsHeadRec.FILTERGROUP(0);

            IF NOT lvSiteMgtProjHrsHeadRec.FINDFIRST THEN BEGIN
              lvSiteMgtProjHrsHeadRec.VALIDATE(Year, YearNo);
              lvSiteMgtProjHrsHeadRec.VALIDATE(Week, WeekNo);
              lvSiteMgtProjHrsHeadRec.VALIDATE("Receiving Company", COMPANYNAME);
              lvSiteMgtProjHrsHeadRec.VALIDATE("Project No.", IProjectNo);
              lvSiteMgtProjHrsHeadRec.INSERT(TRUE);
              COMMIT;
            END;
            SiteMngmntProjHoursList.SETTABLEVIEW(lvSiteMgtProjHrsHeadRec);
            SiteMngmntProjHoursList.RUNMODAL;
          END;
        SiteManFormSetup."Hour Accounting Form"::"Project Hour Accounting":
          BEGIN
            HourAccountingProject.FILTERGROUP(2);
            //filtergroup 2 for defaults at new record in page
            HourAccountingProject.SETRANGE(Year, YearNo);
            HourAccountingProject.SETRANGE(Week, WeekNo);
            HourAccountingProject.SETRANGE("Project No.", IProjectNo);
            HourAccountingProject.SETFILTER("Called From Site Mgt Form", '%1', TRUE);
            HourAccountingProject.FILTERGROUP(0);
            HourAccountingProjectList.SETTABLEVIEW(HourAccountingProject);
            HourAccountingProjectList.RUNMODAL;
          END;
      END;
    END;

    PROCEDURE RunReceipts@1100525001(IProjectNo@1100525000 : Code[20];IDate@1100525004 : Date);
    VAR
      lvPurchOrderLineRec@1100525001 : Record 39;
      lvPurchOrderRec@1100525003 : Record 38;
      lvTmpPurchOrderRec@1100525002 : TEMPORARY Record 38;
    BEGIN
      WITH lvPurchOrderLineRec DO BEGIN
        SETCURRENTKEY("Document Type", "Job No.");
        SETRANGE("Document Type", "Document Type"::Order);
        SETFILTER("Document No.", '<>%1', '');
        SETRANGE("Job No.", IProjectNo);
        IF FINDSET THEN BEGIN
          REPEAT
            IF NOT lvTmpPurchOrderRec.GET("Document Type", "Document No.") THEN BEGIN
              IF lvPurchOrderRec.GET("Document Type", "Document No.") THEN BEGIN
                lvTmpPurchOrderRec := lvPurchOrderRec;
                lvTmpPurchOrderRec.INSERT;
              END;
            END;
          UNTIL NEXT = 0;
        END;
      END;

      lvTmpPurchOrderRec."Document Type" := lvTmpPurchOrderRec."Document Type"::Order;
      lvTmpPurchOrderRec."No." := '';
      lvTmpPurchOrderRec."Buy-from Vendor Name" := '[RUN_RECEIPTS_TMP]';  //* Procesinfo
      lvTmpPurchOrderRec."Job No." := IProjectNo;
      lvTmpPurchOrderRec."Posting Date" := IDate;
      lvTmpPurchOrderRec.INSERT;

      PAGE.RUNMODAL(PAGE::"Purch. Orders by Project (SMF)", lvTmpPurchOrderRec);
    END;

    PROCEDURE RunInstallmentMotivation@1100525002(IProjectNo@1100525000 : Code[20];IDate@1100525001 : Date);
    VAR
      lvProjPrinRec@1100525002 : Record 11012005;
      lvInstallMotivRec@1100525003 : Record 11012471;
      lvInstallMotivPage@1210190000 : Page 11012474;
    BEGIN
      lvProjPrinRec.FILTERGROUP(9);
      lvProjPrinRec.SETRANGE("Project No.", IProjectNo);
      lvProjPrinRec.FILTERGROUP(0);
      lvProjPrinRec.FINDFIRST;  //* Error if no project principal, so do not use 'IF'
      IF lvProjPrinRec.NEXT <> 0 THEN BEGIN
        IF PAGE.RUNMODAL(0, lvProjPrinRec) <> ACTION::LookupOK THEN
          EXIT;
      END;
      lvInstallMotivRec.FILTERGROUP(9);
      lvInstallMotivRec.SETRANGE("Project No.", IProjectNo);
      lvInstallMotivRec.SETRANGE(Principal, lvProjPrinRec.Principal);
      lvInstallMotivRec.FILTERGROUP(2);
      lvInstallMotivRec.SETRANGE("Project No.", IProjectNo);
      lvInstallMotivRec.SETRANGE(Principal, lvProjPrinRec.Principal);
      lvInstallMotivRec.FILTERGROUP(0);
      lvInstallMotivPage.SETTABLEVIEW(lvInstallMotivRec);
      lvInstallMotivPage.SetFromSiteMgtForm(IDate);
      lvInstallMotivPage.RUNMODAL;
    END;

    PROCEDURE RunProgress@1100525003(IProjectNo@1100525000 : Code[20];IDate@1100525001 : Date;IProgressBasedOnTender@1100525005 : Boolean);
    VAR
      lvProgressRec@1100525002 : Record 11012036;
      lvProgressPTERec@1100525003 : Record 11012267;
      lvProgressListPage@1210190000 : Page 11012079;
      lvProgressPTEListPage@1210190001 : Page 11020561;
    BEGIN
      IF IProgressBasedOnTender THEN BEGIN
        lvProgressPTERec.FILTERGROUP(9);
        lvProgressPTERec.SETRANGE("Project No.", IProjectNo);
        lvProgressPTERec.FILTERGROUP(2);
        lvProgressPTERec.SETRANGE("Project No.", IProjectNo);
        lvProgressPTERec.SETRANGE("Progress Date", IDate);
        lvProgressPTERec.FILTERGROUP(0);
        lvProgressPTEListPage.SETTABLEVIEW(lvProgressPTERec);
        lvProgressPTEListPage.SetFromSiteMgtForm(IProjectNo, IDate);
        lvProgressPTEListPage.RUNMODAL;
      END ELSE BEGIN
        lvProgressRec.FILTERGROUP(9);
        lvProgressRec.SETRANGE("Project No.", IProjectNo);
        lvProgressRec.FILTERGROUP(2);
        lvProgressRec.SETRANGE("Project No.", IProjectNo);
        //lvProgressRec.SETRANGE("Progress Date", IDate);
        lvProgressRec.FILTERGROUP(0);
        lvProgressListPage.SETTABLEVIEW(lvProgressRec);
        lvProgressListPage.SetFromSiteMgtForm(IProjectNo, IDate);
        lvProgressListPage.RUNMODAL;
      END;
    END;

    PROCEDURE RunComplaintsByProject@1100525004(IProjectNo@1100525004 : Code[20];IDate@1100525002 : Date);
    VAR
      lvProjRec@1100525001 : Record 11072003;
      lvProjComplaintsPage@1100525000 : Page 11012465;
    BEGIN
      lvProjRec.FILTERGROUP(2);
      lvProjRec.SETRANGE("No.", IProjectNo);
      lvProjRec.FILTERGROUP(0);

      lvProjComplaintsPage.SETTABLEVIEW(lvProjRec);
      lvProjComplaintsPage.RUNMODAL;
    END;

    PROCEDURE RunExtensionContract@1100525005(IProjectNo@1100525004 : Code[20];IDate@1100525002 : Date);
    VAR
      ExtensionContract@1100525001 : Record 11012004;
    BEGIN
      ExtensionContract.FILTERGROUP(2);
      ExtensionContract.SETRANGE("Project No.", IProjectNo);
      ExtensionContract.FILTERGROUP(0);
      PAGE.RUNMODAL(0, ExtensionContract);
    END;

    PROCEDURE RunGetOrder@1100525007(IProjectNo@1100525004 : Code[20]);
    VAR
      GetOrderSMF@1100528000 : Record 11125531;
    BEGIN
      GetOrderSMF.FILTERGROUP(2);
      GetOrderSMF.SETRANGE("Project No.", IProjectNo);
      GetOrderSMF.FILTERGROUP(0);
      PAGE.RUNMODAL(PAGE::"Get Order List (SMF)", GetOrderSMF);
    END;

    PROCEDURE RunPlantRequestByProject@1100525006(IProjectNo@1100525004 : Code[20]);
    VAR
      PlantRequestSMF@1100528000 : Record 11125529;
    BEGIN
      PlantRequestSMF.FILTERGROUP(2);
      PlantRequestSMF.SETRANGE("Project No.", IProjectNo);
      PlantRequestSMF.FILTERGROUP(0);
      PAGE.RUNMODAL(PAGE::"Plant Request List (SMF)", PlantRequestSMF);
    END;

    PROCEDURE RunPlantNeedByProject@1100409000(IProjectNo@1100525004 : Code[20]);
    VAR
      SiteMgtPlantNeedPage@1100525000 : Page 11125549;
    BEGIN
      SiteMgtPlantNeedPage.SetProject(IProjectNo);  //* Set filter on on 'Project No."
      SiteMgtPlantNeedPage.RUNMODAL;
    END;

    PROCEDURE RunPlantInventory@1100525009(IProjectNo@1100525004 : Code[20];IDate@1100525001 : Date);
    VAR
      PlantInventory@1100525000 : Record 11012555;
      PlantMgtComp@1100409000 : Record 11020586;
      PlantInventoryPage@1100525002 : Page 11012559;
      PlantCompany@1100525003 : Text[30];
      PlantLocationFilter@1100409001 : Text[250];
    BEGIN
      //IF NOT SetLocationFilterOnPlantInvent(IProjectNo, PlantInventory, PlantCompany) THEN
      IF NOT PlantMgtComp.PlantLocationFilterOfProject(IProjectNo, PlantLocationFilter, PlantCompany) THEN
        EXIT;
      PlantInventory.FILTERGROUP(9);
      PlantInventory.SETFILTER(Location, PlantLocationFilter);
      PlantInventory.FILTERGROUP(0);
      PlantInventoryPage.SETTABLEVIEW(PlantInventory);
      PlantInventoryPage.SetCompany(PlantCompany);
      PlantInventoryPage.RUNMODAL;
    END;

    PROCEDURE RunPlantInventHistory@1100525011(IProjectNo@1100525004 : Code[20];IDate@1100525001 : Date);
    VAR
      PlantInventory@1100525000 : Record 11012555;
      PlantMgtComp@1100409000 : Record 11020586;
      PlantInventHistPage@1100525002 : Page 11012560;
      PlantCompany@1100525003 : Text[30];
      PlantLocationFilter@1100409001 : Text[250];
    BEGIN
      //IF NOT SetLocationFilterOnPlantInvent(IProjectNo, PlantInventory, PlantCompany) THEN
      IF NOT PlantMgtComp.PlantLocationFilterOfProject(IProjectNo, PlantLocationFilter, PlantCompany) THEN
        EXIT;
      PlantInventory.FILTERGROUP(9);
      PlantInventory.SETFILTER(Location, PlantLocationFilter);
      PlantInventory.FILTERGROUP(0);
      PlantInventHistPage.SETTABLEVIEW(PlantInventory);
      PlantInventHistPage.SetCompany(PlantCompany);
      PlantInventHistPage.RUNMODAL;
    END;

    PROCEDURE RunQADeviationCard@1100525010(ProjectNo@1100525000 : Code[20];QADeviationNo@1100525001 : Code[20]);
    VAR
      QADeviation@1100528400 : Record 11125986;
      QADeviationCardPage@1100525005 : Page 11125986;
    BEGIN
      QADeviationCardPage.SetProjectFilter(ProjectNo);
      IF QADeviation.GET(QADeviationNo) THEN
        QADeviationCardPage.SETRECORD(QADeviation);
      QADeviationCardPage.SetSourceNonEditable(TRUE);
      QADeviationCardPage.RUNMODAL;
    END;

    PROCEDURE RunAccidentCardQA@1100525008(ProjectNo@1100525000 : Code[20];AccidentNo@1100525001 : Code[20]);
    VAR
      Accident@1100525004 : Record 11126005;
      AccidentCardPage@1100525006 : Page 11126005;
    BEGIN
      AccidentCardPage.SetProject(ProjectNo, TRUE);
      IF Accident.GET(AccidentNo) THEN
        AccidentCardPage.SETRECORD(Accident);
      AccidentCardPage.RUNMODAL;
    END;

    PROCEDURE RunSiB@1100528900(IProjectNo@1100528900 : Code[20];IAction@1100528901 : Integer);
    VAR
      lvDispatchNoteRec@1100528902 : Record 11072651;
      lvInvoiceRec@1100528903 : Record 11072653;
    BEGIN
      //DP00065
      IF (IAction = 1) OR (IAction = 2) THEN BEGIN
        lvDispatchNoteRec.SETRANGE("Project No.", IProjectNo);
        lvDispatchNoteRec.SETRANGE(Approved, (IAction=2));
        IF (IAction = 1) THEN
          PAGE.RUNMODAL(PAGE::"Dispatch Note List (SiB)", lvDispatchNoteRec)
        ELSE
          PAGE.RUNMODAL(PAGE::"Approved Disp Note List (SiB)", lvDispatchNoteRec);
      END;

      IF (IAction = 3) OR (IAction = 4) THEN BEGIN
        lvInvoiceRec.CALCFIELDS("Project No.");
        lvInvoiceRec.SETRANGE("Project No.", IProjectNo);
        lvInvoiceRec.SETRANGE(Approved, (IAction=4));
        PAGE.RUNMODAL(PAGE::"Invoice List (SiB)", lvInvoiceRec)
      END
    END;

    PROCEDURE RunPrognosis@1100528700(ProjectNo@1100528700 : Code[20]);
    VAR
      Job@1100525000 : Record 11072003;
      PrognosisList@1100528703 : Page 11012087;
    BEGIN
      Job.GET(ProjectNo);
      PrognosisList.SetProject(ProjectNo);
      PrognosisList.RUNMODAL;
    END;

    PROCEDURE RunProjectInstallments@1100528701(ProjectNo@1100528702 : Code[20]);
    VAR
      ProjectInstallments@1100528700 : Page 11012025;
    BEGIN
      ProjectInstallments.SetProject(ProjectNo);
      ProjectInstallments.RUNMODAL;
    END;

    PROCEDURE RunDocuments@1100528702(ProjectNo@1100528700 : Code[20]);
    VAR
      Job@1100528701 : Record 11072003;
      RecRef@1100528702 : RecordRef;
      DocumentFilters@1100528703 : Codeunit 11012432;
    BEGIN
      Job.GET(ProjectNo);
      RecRef.GETTABLE(Job);
      // ByCompany changed to FALSE, otherwise documents are not showed in the archive company
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, Job."Global Dimension 1 Code", FALSE, FALSE);
    END;

    BEGIN
    END.
  }
}

