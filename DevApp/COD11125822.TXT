OBJECT Codeunit 11125822 BIM Viewer Management
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1100529001 : TextConst 'ENU=Building IFC objects.';
      Text002@1100525003 : TextConst 'ENU=No IFC Object found';
      Text003@1100529002 : TextConst 'ENU=Ifc Object (%1) is already linked to %2 ''%3'', %4 ''%5''';

    PROCEDURE GetDefaultLinkNoOfLinkType@1100525000(BimModelNo@1100525000 : Code[20];LinkType@1100529000 : Option) LinkNo : Code[20];
    VAR
      BimModelLink@1100525001 : Record 11125824;
      BimModelUserDefaults@1100525002 : Record 11125825;
      LinkNo2@1100529001 : Code[20];
    BEGIN
      IF BimModelNo <> '' THEN BEGIN
        SetFilterOnBimModelLinkType(BimModelNo, LinkType, BimModelLink);
        IF BimModelLink.FINDFIRST THEN BEGIN
          LinkNo := BimModelLink."No.";
          IF BimModelLink.COUNT > 1 THEN BEGIN
            IF BimModelUserDefaults.GET(BimModelNo, USERID) THEN BEGIN
              IF LinkType = BimModelLink.Type::ServiceLocation THEN
                LinkNo2 := BimModelUserDefaults."Service Location No."
              ELSE
                LinkNo2 := BimModelUserDefaults."Project No.";
              IF LinkNo2 <> '' THEN BEGIN
                IF BimModelLink.GET(BimModelNo, LinkType, LinkNo2) THEN
                  LinkNo := LinkNo2;
              END;
            END;
          END;
        END;
      END;
    END;

    PROCEDURE GetNoOfLinksOfLinkType@1100525001(BimModelNo@1100525000 : Code[20];LinkType@1100529000 : Option) : Integer;
    VAR
      BimModelLink@1100525001 : Record 11125824;
    BEGIN
      IF BimModelNo <> '' THEN BEGIN
        SetFilterOnBimModelLinkType(BimModelNo, LinkType, BimModelLink);
        EXIT(BimModelLink.COUNT);
      END;
      EXIT(0);
    END;

    PROCEDURE SetUserDefaultLinkNoOfLinkType@1100525005(BimModelNo@1100525001 : Code[20];LinkType@1100529000 : Option;LinkNo@1100525002 : Code[20]);
    VAR
      BimModelLink@1100525003 : Record 11125824;
      BimModelUserDefaults@1100525000 : Record 11125825;
    BEGIN
      IF (BimModelNo = '') OR (LinkNo = '') THEN
        EXIT;
      IF NOT BimModelLink.GET(BimModelNo, LinkType, LinkNo) THEN
        EXIT;

      IF NOT BimModelUserDefaults.GET(BimModelNo, USERID) THEN BEGIN
        BimModelUserDefaults.INIT;
        BimModelUserDefaults."BIM Model No." := BimModelNo;
        BimModelUserDefaults."User ID" := USERID;
        BimModelUserDefaults.INSERT;
      END;
      IF ((LinkType = BimModelLink.Type::ServiceLocation) AND (LinkNo <> BimModelUserDefaults."Service Location No.")) OR
         ((LinkType = BimModelLink.Type::Project) AND (LinkNo <> BimModelUserDefaults."Project No."))
      THEN BEGIN
        IF LinkType = BimModelLink.Type::ServiceLocation THEN
          BimModelUserDefaults."Service Location No." := LinkNo
        ELSE
          BimModelUserDefaults."Project No." := LinkNo;
        BimModelUserDefaults.MODIFY;
        COMMIT;
      END;
    END;

    PROCEDURE LookupBimModelLinkedServiceLocations@1100525004(BimModelNo@1100525002 : Code[20];VAR ServiceLocationNo@1100525003 : Code[20];ServiceLocationNoEditable@1100525004 : Boolean);
    VAR
      BimModelLink@1100525000 : Record 11125824;
      ServiceLocation@1100525005 : Record 11012801;
      BimModelLinks@1100525001 : Page 11130584;
    BEGIN
      BimModelLink.FILTERGROUP(9);
      SetFilterOnBimModelLinkType(BimModelNo, BimModelLink.Type::ServiceLocation, BimModelLink);
      BimModelLink.FILTERGROUP(0);
      IF BimModelLink.FINDSET THEN BEGIN
        REPEAT
          IF ServiceLocation.GET(BimModelLink."No.") THEN
            ServiceLocation.MARK(TRUE);
        UNTIL BimModelLink.NEXT = 0;
        ServiceLocation.MARKEDONLY(TRUE);
        ServiceLocation."No." := ServiceLocationNo;
        IF NOT ServiceLocationNoEditable THEN
          PAGE.RUNMODAL(0, ServiceLocation)
        ELSE BEGIN
          IF PAGE.RUNMODAL(0, ServiceLocation) = ACTION::LookupOK THEN BEGIN
            IF ServiceLocation."No." <> '' THEN BEGIN
              IF BimModelLink.GET(BimModelNo, BimModelLink.Type::ServiceLocation, ServiceLocation."No.") THEN
                ServiceLocationNo := ServiceLocation."No.";
            END;
          END;
        END;
      END;
    END;

    PROCEDURE LookupBimModelLinkedProjects@1100529003(BimModelNo@1100525002 : Code[20];VAR ProjectNo@1100525003 : Code[20];ProjectNoEditable@1100525004 : Boolean);
    VAR
      BimModelLink@1100525000 : Record 11125824;
      Project@1100525005 : Record 11072003;
      BimModelLinks@1100525001 : Page 11130584;
    BEGIN
      BimModelLink.FILTERGROUP(9);
      SetFilterOnBimModelLinkType(BimModelNo, BimModelLink.Type::Project, BimModelLink);
      BimModelLink.FILTERGROUP(0);
      IF BimModelLink.FINDSET THEN BEGIN
        REPEAT
          IF Project.GET(BimModelLink."No.") THEN
            Project.MARK(TRUE);
        UNTIL BimModelLink.NEXT = 0;
        Project.MARKEDONLY(TRUE);
        Project."No." := ProjectNo;
        IF NOT ProjectNoEditable THEN
          PAGE.RUNMODAL(0, Project)
        ELSE BEGIN
          IF PAGE.RUNMODAL(0, Project) = ACTION::LookupOK THEN BEGIN
            IF Project."No." <> '' THEN BEGIN
              IF BimModelLink.GET(BimModelNo, BimModelLink.Type::Project, Project."No.") THEN
                ProjectNo := Project."No.";
            END;
          END;
        END;
      END;
    END;

    PROCEDURE IfcObjectServiceObject@1100525006(BimModelNo@1100525003 : Code[20];IfcGuid@1100525000 : Text;VAR ServiceObject2@1100525004 : Record 11071691) ObjectFound : Boolean;
    VAR
      ServiceObject@1100525005 : Record 11071691;
    BEGIN
      IF (BimModelNo <> '') AND (IfcGuid <> '')  THEN BEGIN
        ServiceObject.SETCURRENTKEY("BIM Model No.", "IFC Object ID");
        ServiceObject.SETRANGE("BIM Model No.", BimModelNo);
        ServiceObject.SETRANGE("IFC Object ID", IfcGuid);
        ObjectFound := ServiceObject.FINDFIRST;
      END;
      IF ObjectFound THEN
        ServiceObject2 := ServiceObject
      ELSE BEGIN
        ServiceObject2."No." := '';
        ServiceObject2.INIT;
      END;
    END;

    PROCEDURE IfcObjectProjectObject@1100529002(BimModelNo@1100525003 : Code[20];IfcGuid@1100525000 : Text;VAR ProjectObject2@1100525004 : Record 11229311) ObjectFound : Boolean;
    VAR
      ProjectObject@1100525005 : Record 11229311;
    BEGIN
      IF (BimModelNo <> '') AND (IfcGuid <> '')  THEN BEGIN
        ProjectObject.SETCURRENTKEY("BIM Model No.", "IFC Object ID");
        ProjectObject.SETRANGE("BIM Model No.", BimModelNo);
        ProjectObject.SETRANGE("IFC Object ID", IfcGuid);
        ObjectFound := ProjectObject.FINDFIRST;
      END;
      IF ObjectFound THEN
        ProjectObject2 := ProjectObject
      ELSE BEGIN
        ProjectObject2."No." := '';
        ProjectObject2.INIT;
      END;
    END;

    PROCEDURE IfcObjectLinkedToServiceObject@1100525007(BimModelNo@1100525003 : Code[20];IfcGuid@1100525000 : Text) : Boolean;
    VAR
      ServiceObject@1100525005 : Record 11071691;
    BEGIN
      IF (BimModelNo <> '') AND (IfcGuid <> '')  THEN BEGIN
        ServiceObject.SETCURRENTKEY("BIM Model No.", "IFC Object ID");
        ServiceObject.SETRANGE("BIM Model No.", BimModelNo);
        ServiceObject.SETRANGE("IFC Object ID", IfcGuid);
        IF NOT ServiceObject.ISEMPTY THEN
          EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    PROCEDURE IfcObjectLinkedToProjectObject@1100529001(BimModelNo@1100525003 : Code[20];IfcGuid@1100525000 : Text) : Boolean;
    VAR
      ProjectObject@1100525005 : Record 11229311;
    BEGIN
      IF (BimModelNo <> '') AND (IfcGuid <> '')  THEN BEGIN
        ProjectObject.SETCURRENTKEY("BIM Model No.", "IFC Object ID");
        ProjectObject.SETRANGE("BIM Model No.", BimModelNo);
        ProjectObject.SETRANGE("IFC Object ID", IfcGuid);
        IF NOT ProjectObject.ISEMPTY THEN
          EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    PROCEDURE LinkServiceObjectToCurrIfcObject@1100529000(VAR ServiceObject@1100529000 : Record 11071691;BimModelNo@1100529003 : Code[20];IfcGuid@1100529001 : Text);
    VAR
      ServiceObject2@1100529002 : Record 11071691;
    BEGIN
      ServiceObject.TESTFIELD("No.");
      ServiceObject.TESTFIELD("IFC Object ID", '');
      IF IfcObjectServiceObject(BimModelNo, IfcGuid, ServiceObject2) THEN
        ERROR(Text003, IfcGuid,
          ServiceObject.TABLECAPTION, ServiceObject2."No.",
          ServiceObject.FIELDCAPTION("Service Location No."), ServiceObject2."Service Location No.");

      ServiceObject."BIM Model No." := BimModelNo;
      ServiceObject."IFC Object ID" := IfcGuid;
      ServiceObject.MODIFY;
    END;

    PROCEDURE LinkProjectObjectToCurrIfcObject@1100529006(VAR ProjectObject@1100529000 : Record 11229311;BimModelNo@1100529003 : Code[20];IfcGuid@1100529001 : Text);
    VAR
      ProjectObject2@1100529002 : Record 11229311;
    BEGIN
      ProjectObject.TESTFIELD("No.");
      ProjectObject.TESTFIELD("IFC Object ID", '');
      IF IfcObjectProjectObject(BimModelNo, IfcGuid, ProjectObject2) THEN
        ERROR(Text003, IfcGuid,
          ProjectObject.TABLECAPTION, ProjectObject2."No.",
          ProjectObject.FIELDCAPTION("Project No."), ProjectObject2."Project No.");

      ProjectObject."BIM Model No." := BimModelNo;
      ProjectObject."IFC Object ID" := IfcGuid;
      ProjectObject.MODIFY;
    END;

    PROCEDURE CopyIfcPropertiesToCurrObject@1100529009(VAR IfcObject@1100529000 : DotNet "'Fps.Nav.Windows.Addin.Bim.Interface, Version=1.0.0.0, Culture=neutral, PublicKeyToken=024bd013665211e9'.Fps.Nav.Windows.Addin.Bim.Interface.IIfcObject" RUNONCLIENT;ObjectNo@1100529001 : Code[20];TableNo@1100529002 : Integer);
    VAR
      TmpIfcObjectProperty@1100529003 : TEMPORARY Record 11020579;
    BEGIN
      BuildTmpTableIfcObjectProperties(IfcObject, TmpIfcObjectProperty);

      TmpIfcObjectProperty.Bool4 := TRUE;
      TmpIfcObjectProperty.Bool5 := FALSE;
      PAGE.RUNMODAL(PAGE::"IFC Object Properties", TmpIfcObjectProperty);
      InsertObjectProperties(ObjectNo, TableNo, TmpIfcObjectProperty);
    END;

    LOCAL PROCEDURE SetFilterOnBimModelLinkType@1100525002(BimModelNo@1100525001 : Code[20];LinkType@1100529000 : Option;VAR BimModelLink@1100525000 : Record 11125824);
    BEGIN
      BimModelLink.SETRANGE("BIM Model No.", BimModelNo);
      BimModelLink.SETRANGE(Type, LinkType);
      BimModelLink.SETFILTER("No.", '<>%1', '');
    END;

    PROCEDURE FillCurrentIfcObjectInfoTmpTable@1100525003(VAR IfcObject@1100525004 : DotNet "'Fps.Nav.Windows.Addin.Bim.Interface, Version=1.0.0.0, Culture=neutral, PublicKeyToken=024bd013665211e9'.Fps.Nav.Windows.Addin.Bim.Interface.IIfcObject" RUNONCLIENT;VAR TmpCurrIfcObjectInfo@1100525005 : TEMPORARY Record 11020579);
    VAR
      StringFunctions@1100525002 : Codeunit 11012273;
      InfoArray@1100525003 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array" RUNONCLIENT;
      ArrayNo@1100525000 : Integer;
      SplittedArray@1100525001 : ARRAY [10] OF Text[250];
    BEGIN
      WITH TmpCurrIfcObjectInfo DO BEGIN  //Table must be Temporary in the calling process!
        RESET;
        DELETEALL;
        IF IfcObject.Guid = '' THEN
          EXIT;
        InfoArray :=IfcObject.GetInformation();
        FOR ArrayNo := 0 TO InfoArray.Length - 1 DO BEGIN
          INIT;
          "Key Code1" := FORMAT(ArrayNo+1);
          IF STRLEN("Key Code1") < 10 THEN
            "Key Code1" := COPYSTR('0000000000', 1, 10-STRLEN("Key Code1")) + "Key Code1";
          CLEAR(SplittedArray);
          StringFunctions.SplitString(InfoArray.GetValue(ArrayNo), ' = ', SplittedArray);
          Text1 := SplittedArray[1];
          Text2 := SplittedArray[2];
          IF (Text1 + Text2) <> '' THEN
            INSERT;
        END;
        IF NOT FINDFIRST THEN
          INIT;
      END;
    END;

    PROCEDURE FillSelectedBimIfcObjectTmpTable@1100525013(VAR IfcObjects@1100525002 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array" RUNONCLIENT;BimModelNo@1100525006 : Code[20];LinkType@1100529001 : Option;SkipAlreadyLinked@1100525007 : Boolean;VAR TmpIfcObjectProperty@1100529005 : TEMPORARY Record 11020579;VAR TmpBimIfcObject@1100525000 : TEMPORARY Record 11125826);
    VAR
      BimModelLink@1100529002 : Record 11125824;
      ServiceObject@1100529003 : Record 11071691;
      ProjectObject@1100529004 : Record 11229311;
      TmpProperty@1100529006 : TEMPORARY Record 11020579;
      IfcObject@1100525003 : DotNet "'Fps.Nav.Windows.Addin.Bim.Interface, Version=1.0.0.0, Culture=neutral, PublicKeyToken=024bd013665211e9'.Fps.Nav.Windows.Addin.Bim.Interface.IIfcObject" RUNONCLIENT;
      Window@1100525005 : Dialog;
      SkipObject@1100525008 : Boolean;
      ArrayNo@1100525004 : Integer;
      ArrayLen@1100525001 : Integer;
      UpdatePerc@1100529000 : Integer;
    BEGIN
      WITH TmpBimIfcObject DO BEGIN  //Table must be Temporary in the calling process!
        Window.OPEN(Text001 + ' @1@@@@@@@@@@@@@@@@@@@@');
        RESET;
        DELETEALL;
        TmpProperty.COPY(TmpIfcObjectProperty, TRUE);
        TmpProperty.RESET;
        TmpProperty.SETRANGE(Bool2, TRUE);  // Bool2 is indator for 'Filter on property'

        ArrayLen := IfcObjects.Length;
        FOR ArrayNo := 1 TO ArrayLen DO BEGIN
          IF UpdatePerc <> ROUND((ArrayNo / ArrayLen * 10000), 1) THEN BEGIN
            UpdatePerc := ROUND(ArrayNo / ArrayLen * 10000, 1);
            Window.UPDATE(1, UpdatePerc);
          END;
          IfcObject := IfcObjects.GetValue(ArrayNo-1);
          TmpBimIfcObject.INIT;
          TmpBimIfcObject."Entry No." := ArrayNo;
          TmpBimIfcObject.ID := IfcObject.Guid;
          SkipObject := FALSE;
          IF SkipAlreadyLinked THEN BEGIN
            IF LinkType = BimModelLink.Type::ServiceLocation THEN
              SkipObject := IfcObjectLinkedToServiceObject(BimModelNo, TmpBimIfcObject.ID);
            IF LinkType = BimModelLink.Type::Project THEN
              SkipObject := IfcObjectLinkedToProjectObject(BimModelNo, TmpBimIfcObject.ID);
          END;
          IF NOT SkipObject THEN BEGIN
            IF TmpProperty.FINDSET THEN BEGIN
              REPEAT
                IF TmpProperty.Text5 = '' THEN
                  TmpProperty.Bool3 := FALSE;
                SkipObject := (NOT IfcObject.CheckPropertyValue(TmpProperty.Text1, TmpProperty.Text5, TmpProperty.Bool3));
              UNTIL (TmpProperty.NEXT = 0) OR SkipObject;
            END;
          END;
          IF NOT SkipObject THEN BEGIN
            IF NOT (SkipAlreadyLinked AND (LinkType = BimModelLink.Type::ServiceLocation) )THEN
              IfcObjectServiceObject(BimModelNo, TmpBimIfcObject.ID, ServiceObject);
            IF NOT (SkipAlreadyLinked AND (LinkType = BimModelLink.Type::Project) )THEN
              IfcObjectProjectObject(BimModelNo, TmpBimIfcObject.ID, ProjectObject);
            TmpBimIfcObject.Name := IfcObject.Name;
            TmpBimIfcObject."IFC Type" := IfcObject.DefiningIfcTypeName;
            TmpBimIfcObject.Type := IfcObject.TypeName;
            TmpBimIfcObject.Site := GetIfcObjectInfoName(IfcObject, 1, MAXSTRLEN(TmpBimIfcObject.Site));
            TmpBimIfcObject.Building := GetIfcObjectInfoName(IfcObject, 2, MAXSTRLEN(TmpBimIfcObject.Building));
            TmpBimIfcObject.Floor := GetIfcObjectInfoName(IfcObject, 3, MAXSTRLEN(TmpBimIfcObject.Floor));
            TmpBimIfcObject.Space := GetIfcObjectInfoName(IfcObject, 4, MAXSTRLEN(TmpBimIfcObject.Space));
            TmpBimIfcObject."Service Object No." := ServiceObject."No.";
            TmpBimIfcObject."Project Object No." := ProjectObject."No.";
            TmpBimIfcObject.INSERT;
          END;
        END;
        Window.CLOSE;
        IF NOT FINDFIRST THEN
          ERROR(Text002);
      END;
    END;

    PROCEDURE ShowPropertiesCurrentIfcObject@1100529010(VAR IfcObject@1100529000 : DotNet "'Fps.Nav.Windows.Addin.Bim.Interface, Version=1.0.0.0, Culture=neutral, PublicKeyToken=024bd013665211e9'.Fps.Nav.Windows.Addin.Bim.Interface.IIfcObject" RUNONCLIENT;VAR TmpIfcObjectPropertyToCopy@1100529002 : TEMPORARY Record 11020579);
    VAR
      TmpIfcObjectProperty@1100529001 : TEMPORARY Record 11020579;
    BEGIN
      BuildTmpTableIfcObjectProperties(IfcObject, TmpIfcObjectProperty);
      IF NOT TmpIfcObjectProperty.ISEMPTY THEN BEGIN
        TmpIfcObjectPropertyToCopy.RESET;
        TmpIfcObjectPropertyToCopy.SETRANGE(Bool1, TRUE);
        IF TmpIfcObjectPropertyToCopy.FINDSET THEN BEGIN
          REPEAT
            IF TmpIfcObjectProperty.GET(TmpIfcObjectPropertyToCopy."Key Code1") THEN BEGIN
              TmpIfcObjectProperty.Bool1 := TRUE;
              TmpIfcObjectProperty.MODIFY;
            END;
          UNTIL TmpIfcObjectPropertyToCopy.NEXT = 0;
          TmpIfcObjectProperty.FINDFIRST;
        END;
      END;
      TmpIfcObjectProperty.Bool4 := FALSE;
      TmpIfcObjectProperty.Bool5 := FALSE;
      PAGE.RUNMODAL(PAGE::"IFC Object Properties", TmpIfcObjectProperty);
    END;

    PROCEDURE FillCurrentBimIfcObjectTableFields@1100525015(VAR IfcObject@1100525001 : DotNet "'Fps.Nav.Windows.Addin.Bim.Interface, Version=1.0.0.0, Culture=neutral, PublicKeyToken=024bd013665211e9'.Fps.Nav.Windows.Addin.Bim.Interface.IIfcObject" RUNONCLIENT;VAR BimIfcObject@1100525000 : Record 11125826);
    BEGIN
      WITH BimIfcObject DO BEGIN
        BimIfcObject.INIT;
        BimIfcObject."Entry No." := 1;
        BimIfcObject.ID := IfcObject.Guid;
        BimIfcObject.Name := IfcObject.Name;
        BimIfcObject."IFC Type" := IfcObject.DefiningIfcTypeName;
        BimIfcObject.Type := IfcObject.TypeName;
        BimIfcObject.Site := GetIfcObjectInfoName(IfcObject, 1, MAXSTRLEN(BimIfcObject.Site));
        BimIfcObject.Building := GetIfcObjectInfoName(IfcObject, 2, MAXSTRLEN(BimIfcObject.Building));
        BimIfcObject.Floor := GetIfcObjectInfoName(IfcObject, 3, MAXSTRLEN(BimIfcObject.Floor));
        BimIfcObject.Space := GetIfcObjectInfoName(IfcObject, 4, MAXSTRLEN(BimIfcObject.Space));
      END;
    END;

    PROCEDURE GetIfcObjectInfoName@1100525014(VAR IfcObject@1100525000 : DotNet "'Fps.Nav.Windows.Addin.Bim.Interface, Version=1.0.0.0, Culture=neutral, PublicKeyToken=024bd013665211e9'.Fps.Nav.Windows.Addin.Bim.Interface.IIfcObject" RUNONCLIENT;InfoType@1100525002 : Integer;MaxLen@1100525003 : Integer) Name : Text;
    VAR
      IfcObjectInfo@1100525001 : DotNet "'Fps.Nav.Windows.Addin.Bim.Interface, Version=1.0.0.0, Culture=neutral, PublicKeyToken=024bd013665211e9'.Fps.Nav.Windows.Addin.Bim.Interface.IIfcObject" RUNONCLIENT;
    BEGIN
      //InfoType: 1=Site, 2=Building, 3=Floor, 4=Space
      CASE InfoType OF
        1:
          BEGIN
            IF IfcObject.HasIfcSite() THEN BEGIN
              IfcObjectInfo := IfcObject.IfcSite();
              Name := IfcObjectInfo.Name;
            END;
          END;
        2:
          BEGIN
            IF IfcObject.HasIfcBuilding() THEN BEGIN
              IfcObjectInfo := IfcObject.IfcBuilding();
              Name := IfcObjectInfo.Name;
            END;
          END;
        3:
          BEGIN
            IF IfcObject.HasIfcBuildingStorey() THEN BEGIN
              IfcObjectInfo := IfcObject.IfcBuildingStorey();
              Name := IfcObjectInfo.Name;
            END;
          END;
        4:
          BEGIN
            IF IfcObject.HasIfcSpace() THEN BEGIN
              IfcObjectInfo := IfcObject.IfcSpace();
              Name := IfcObjectInfo.Name;
            END;
          END;
      END;
      IF MaxLen > 0 THEN
        Name := COPYSTR(Name, 1, MaxLen);
    END;

    PROCEDURE CreateServiceObjectsSelections@1100525011(VAR IfcObject@1100525011 : DotNet "'Fps.Nav.Windows.Addin.Bim.Interface, Version=1.0.0.0, Culture=neutral, PublicKeyToken=024bd013665211e9'.Fps.Nav.Windows.Addin.Bim.Interface.IIfcObject" RUNONCLIENT;BimModelNo@1100525007 : Code[20];ServiceLocationNo@1100525006 : Code[20];VAR CreateFor@1100525002 : Integer;VAR StandardObjectNo@1100525003 : Code[20];VAR PartOfIfcName@1100525001 : Text;VAR IfcDefType@1100525000 : Text;VAR PropertyName@1100529004 : Text;VAR PropertyValue@1100529003 : Text;VAR TmpIfcObjectProperty@1100529002 : TEMPORARY Record 11020579);
    VAR
      BimModel@1100525009 : Record 11125823;
      BimModelLink@1100525008 : Record 11125824;
      ServiceLocation@1100525010 : Record 11012801;
      StandardObject@1100529000 : Record 11020334;
      IfcObjectCreateServObjects@1100525005 : Report 11125365;
      CurrentLinked@1100529001 : Boolean;
    BEGIN
      BimModel.GET(BimModelNo);
      BimModel.TESTFIELD("No.");
      BimModelLink.GET(BimModelNo, BimModelLink.Type::ServiceLocation, ServiceLocationNo);
      BimModelLink.TESTFIELD("No.");
      ServiceLocation.GET(ServiceLocationNo);
      ServiceLocation.TESTFIELD(Blocked, FALSE);

      CurrentLinked := IfcObjectLinkedToServiceObject(BimModelNo, IfcObject.Guid);
      IfcDefType := IfcObject.DefiningIfcTypeName;
      BuildTmpTableIfcObjectProperties(IfcObject, TmpIfcObjectProperty);
      IfcObjectCreateServObjects.SetSelection(IfcDefType, IfcObject.Name, ServiceLocationNo, CurrentLinked, TmpIfcObjectProperty);
      IfcObjectCreateServObjects.RUNMODAL;
      IfcObjectCreateServObjects.GetSelection(CreateFor, PartOfIfcName, StandardObjectNo, PropertyName, PropertyValue);
      IF CreateFor < 1 THEN
        ERROR('');
    END;

    PROCEDURE CreateProjectObjectsSelections@1100529004(VAR IfcObject@1100525011 : DotNet "'Fps.Nav.Windows.Addin.Bim.Interface, Version=1.0.0.0, Culture=neutral, PublicKeyToken=024bd013665211e9'.Fps.Nav.Windows.Addin.Bim.Interface.IIfcObject" RUNONCLIENT;BimModelNo@1100525007 : Code[20];ProjectNo@1100525006 : Code[20];VAR CreateFor@1100525002 : Integer;VAR ItemNo@1100525003 : Code[20];VAR CostObject@1100529000 : Code[20];VAR PartOfIfcName@1100525001 : Text;VAR IfcDefType@1100525000 : Text;VAR PropertyName@1100529004 : Text;VAR PropertyValue@1100529003 : Text;VAR TmpIfcObjectProperty@1100529002 : TEMPORARY Record 11020579);
    VAR
      BimModel@1100525009 : Record 11125823;
      BimModelLink@1100525008 : Record 11125824;
      IfcObjectCreateProjObjects@1100525005 : Report 11125366;
      CurrentLinked@1100529001 : Boolean;
    BEGIN
      BimModel.GET(BimModelNo);
      BimModel.TESTFIELD("No.");
      BimModelLink.GET(BimModelNo, BimModelLink.Type::Project, ProjectNo);
      BimModelLink.TESTFIELD("No.");

      CurrentLinked := IfcObjectLinkedToProjectObject(BimModelNo, IfcObject.Guid);
      IfcDefType := IfcObject.DefiningIfcTypeName;
      BuildTmpTableIfcObjectProperties(IfcObject, TmpIfcObjectProperty);
      IfcObjectCreateProjObjects.SetSelection(IfcDefType, IfcObject.Name, ProjectNo, CurrentLinked, TmpIfcObjectProperty);;
      IfcObjectCreateProjObjects.RUNMODAL;
      IfcObjectCreateProjObjects.GetSelection(CreateFor, PartOfIfcName, ItemNo, CostObject, PropertyName, PropertyValue);
      IF CreateFor < 1 THEN
        ERROR('');
    END;

    PROCEDURE InsertServiceObjectFromBimIfcObject@1100525012(BimIfcObject@1100525000 : TEMPORARY Record 11125826;BimModelNo@1100525004 : Code[20];StandardObjectNo@1100525002 : Code[20];ServiceLocationNo@1100525003 : Code[20];VAR TmpIfcObjectProperty@1100529000 : TEMPORARY Record 11020579) : Code[20];
    VAR
      ServiceObject@1100525001 : Record 11071691;
    BEGIN
      IF IfcObjectLinkedToServiceObject(BimModelNo, BimIfcObject.ID) THEN
        EXIT;
      WITH ServiceObject DO BEGIN
        "No." := '';
        INSERT(TRUE);
        TESTFIELD("No.");
        IF StandardObjectNo <> '' THEN
          VALIDATE("Standard Object No.", StandardObjectNo);
        VALIDATE("Service Location No.", ServiceLocationNo);
        Description := COPYSTR(BimIfcObject.Name, 1, MAXSTRLEN(Description));
        "Description 2" := COPYSTR(BimIfcObject.Name, MAXSTRLEN(Description)+1, MAXSTRLEN("Description 2"));
        Building := COPYSTR(BimIfcObject.Building, 1, MAXSTRLEN(Building));
        Floor := COPYSTR(BimIfcObject.Floor, 1, MAXSTRLEN(Floor));
        Room := COPYSTR(BimIfcObject.Space, 1, MAXSTRLEN(Room));
        "BIM Model No." := BimModelNo;
        "IFC Object ID" := BimIfcObject.ID;
        MODIFY(TRUE);
        InsertObjectProperties("No.", DATABASE::"Service-Object", TmpIfcObjectProperty);
        EXIT("No.");
      END;
    END;

    PROCEDURE InsertProjectObjectFromBimIfcObject@1100529005(BimIfcObject@1100525000 : TEMPORARY Record 11125826;BimModelNo@1100525004 : Code[20];ItemNo@1100525002 : Code[20];CostObject@1100529000 : Code[20];ProjectNo@1100525003 : Code[20];VAR TmpIfcObjectProperty@1100529001 : TEMPORARY Record 11020579) : Code[20];
    VAR
      ProjectObject@1100525001 : Record 11229311;
    BEGIN
      IF IfcObjectLinkedToProjectObject(BimModelNo, BimIfcObject.ID) THEN
        EXIT;
      WITH ProjectObject DO BEGIN
        "No." := '';
        INSERT(TRUE);
        TESTFIELD("No.");
        IF ItemNo <> '' THEN
          VALIDATE("Item No.", ItemNo);
        IF CostObject <> '' THEN
          VALIDATE("Cost Object", CostObject);
        VALIDATE("Project No.", ProjectNo);
        Description := COPYSTR(BimIfcObject.Name, 1, MAXSTRLEN(Description));
        "Description 2" := COPYSTR(BimIfcObject.Name, MAXSTRLEN(Description)+1, MAXSTRLEN("Description 2"));
        Building := COPYSTR(BimIfcObject.Building, 1, MAXSTRLEN(Building));
        Floor := COPYSTR(BimIfcObject.Floor, 1, MAXSTRLEN(Floor));
        Room := COPYSTR(BimIfcObject.Space, 1, MAXSTRLEN(Room));
        "BIM Model No." := BimModelNo;
        "IFC Object ID" := BimIfcObject.ID;
        MODIFY(TRUE);
        InsertObjectProperties("No.", DATABASE::"Project Object", TmpIfcObjectProperty);
        EXIT("No.");
      END;
    END;

    LOCAL PROCEDURE InsertObjectProperties@1100529008(ObjectNo@1100529001 : Code[20];TableNo@1100529002 : Integer;VAR TmpIfcObjectProperty@1100529000 : TEMPORARY Record 11020579);
    VAR
      ServiceObjectProperty@1100529004 : Record 11072287;
      ProjectObjectProperty@1100529005 : Record 11229314;
      TmpProperty@1100529003 : TEMPORARY Record 11020579;
    BEGIN
      TmpProperty.COPY(TmpIfcObjectProperty, TRUE);
      TmpProperty.RESET;
      TmpProperty.SETRANGE(Bool1, TRUE);  //Bool1 indicator for 'Copy property'
      IF TmpProperty.FINDSET THEN BEGIN
        REPEAT
          CASE TableNo OF
            DATABASE::"Service-Object":
              BEGIN
                TmpProperty.Text1 := COPYSTR(TmpProperty.Text1, 1, MAXSTRLEN(ServiceObjectProperty.Property));
                TmpProperty.Text2 := COPYSTR(TmpProperty.Text2, 1, MAXSTRLEN(ServiceObjectProperty.Value));
                IF NOT ServiceObjectProperty.GET(ObjectNo, TmpProperty.Text1) THEN BEGIN
                  ServiceObjectProperty.INIT;
                  ServiceObjectProperty."Service Object No." := ObjectNo;
                  ServiceObjectProperty.Property := TmpProperty.Text1;
                  ServiceObjectProperty.Value := TmpProperty.Text2;
                  ServiceObjectProperty.INSERT;
                END ELSE BEGIN
                  ServiceObjectProperty.Value := TmpProperty.Text2;
                  ServiceObjectProperty.MODIFY;
                END;
              END;
            DATABASE::"Project Object":
              BEGIN
                TmpProperty.Text1 := COPYSTR(TmpProperty.Text1, 1, MAXSTRLEN(ProjectObjectProperty.Property));
                TmpProperty.Text2 := COPYSTR(TmpProperty.Text2, 1, MAXSTRLEN(ProjectObjectProperty.Value));
                IF NOT ProjectObjectProperty.GET(ObjectNo, TmpProperty.Text1) THEN BEGIN
                  ProjectObjectProperty.INIT;
                  ProjectObjectProperty."Project Object No." := ObjectNo;
                  ProjectObjectProperty.Property := COPYSTR(TmpProperty.Text1, 1, MAXSTRLEN(ProjectObjectProperty.Property));
                  ProjectObjectProperty.Value := COPYSTR(TmpProperty.Text2, 1, MAXSTRLEN(ProjectObjectProperty.Value));
                  ProjectObjectProperty.INSERT;
                END ELSE BEGIN
                  ProjectObjectProperty.Value := TmpProperty.Text2;
                  ProjectObjectProperty.MODIFY;
                END;
              END;
          END;
        UNTIL TmpProperty.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE BuildTmpTableIfcObjectProperties@1100529007(VAR IfcObject@1100525004 : DotNet "'Fps.Nav.Windows.Addin.Bim.Interface, Version=1.0.0.0, Culture=neutral, PublicKeyToken=024bd013665211e9'.Fps.Nav.Windows.Addin.Bim.Interface.IIfcObject" RUNONCLIENT;VAR TmpIfcObjectProperty@1100525005 : TEMPORARY Record 11020579);
    VAR
      InfoArray@1100529000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array" RUNONCLIENT;
      ArrayNo@1100525000 : Integer;
    BEGIN
      WITH TmpIfcObjectProperty DO BEGIN  //Table must be Temporary in the calling process!
        RESET;
        DELETEALL;
        IF IfcObject.Guid = '' THEN
          EXIT;
        InfoArray :=IfcObject.GetPropertyNames();
        FOR ArrayNo := 0 TO InfoArray.Length - 1 DO BEGIN
          INIT;
          "Key Code1" := FORMAT(ArrayNo+1);
          IF STRLEN("Key Code1") < 10 THEN
            "Key Code1" := COPYSTR('0000000000', 1, 10-STRLEN("Key Code1")) + "Key Code1";
          Text1 := InfoArray.GetValue(ArrayNo);
          IF Text1 <> '' THEN BEGIN
            Text2 := IfcObject.GetPropertyValue(Text1, 100);
            INSERT;
          END;
        END;
        IF NOT FINDFIRST THEN
          INIT;
      END;
    END;

    BEGIN
    END.
  }
}

