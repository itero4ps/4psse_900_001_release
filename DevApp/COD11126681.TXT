OBJECT Codeunit 11126681 Empoly Warehouse Mgt
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text008@1100525002 : TextConst 'ENU=Journal Template/Batch not present for Item Journal';
      InvtSetup@1100525005 : Record 313;
      ItemJnlTemplate@1100525004 : Record 82;
      ItemJnlBatch@1100525003 : Record 233;
      ReqWkshTemplate@1100525000 : Record 244;
      ReqWkshBatch@1100525001 : Record 245;

    PROCEDURE CreateItemJnlLineDelivery@1100525000(OrderHeader@1100525001 : Record 11126687;OrderLine@1100525000 : Record 11126688);
    VAR
      ItemJnlLine@1100525002 : Record 83;
      LastLineNo@1100525007 : Integer;
    BEGIN
      //copy from codeunit 11012041
      FillTemplateAndBatchDelivery;
      ItemJnlLine.SETRANGE("Journal Template Name", ItemJnlBatch."Journal Template Name");
      ItemJnlLine.SETRANGE("Journal Batch Name", ItemJnlBatch.Name);
      IF ItemJnlLine.FINDLAST THEN
        LastLineNo := ItemJnlLine."Line No."
      ELSE
        LastLineNo := 0;

      ItemJnlLine.INIT;
      ItemJnlLine."Journal Template Name" := ItemJnlBatch."Journal Template Name";
      ItemJnlLine."Journal Batch Name" := ItemJnlBatch.Name;
      ItemJnlLine."Line No." := LastLineNo + 1;
      ItemJnlLine.INSERT(TRUE);

      GetDefaultsFromTemplateBatch(ItemJnlLine);

      ItemJnlLine."Receiving Company" := OrderHeader."Receiving Company";  //db, 18-12-15
      ItemJnlLine."Entry Type" := ItemJnlLine."Entry Type"::Sale;
      IF OrderHeader."Project No." <> '' THEN BEGIN
        ItemJnlLine.VALIDATE("Job No.", OrderHeader."Project No.");
        ItemJnlLine.Element := OrderHeader.Element;
      END;
      IF OrderHeader."Service Order No." <> '' THEN
        ItemJnlLine.VALIDATE("Service Order No.", OrderHeader."Service Order No.");
      CheckItemCostObject(OrderLine."Item No.");
      ItemJnlLine.VALIDATE("Item No.", OrderLine."Item No.");
      IF OrderHeader."Location Code" <> '' THEN
        ItemJnlLine.VALIDATE("Location Code", OrderHeader."Location Code");
      ItemJnlLine.VALIDATE(Quantity, OrderLine.Quantity);  //db, 21-12-15
      ItemJnlLine."Posting Date" := TODAY;
      ItemJnlLine."Document Date" := TODAY;
      ItemJnlLine."Document No." := OrderHeader."No.";
      ItemJnlLine.Blocked := InvtSetup."Default Blocked";
      ItemJnlLine."Reason Code" := OrderLine."Reason Code";
      ItemJnlLine.MODIFY(TRUE);
    END;

    PROCEDURE CreateItemJnlLinePhysInventory@1100525001(OrderHeader@1100525003 : Record 11126687;OrderLine@1100525002 : Record 11126688);
    VAR
      ItemJnlLine@1100525001 : Record 83;
      ItemLedgEntry@1100525006 : Record 32;
      NoSeriesMgt@1100525005 : Codeunit 396;
      LastLineNo@1100525004 : Integer;
      ItemRec@1100525000 : Record 27;
    BEGIN
      //copy from report 790
      FillTemplateAndBatchPhysInventory;
      ItemJnlLine.SETRANGE("Journal Template Name", ItemJnlBatch."Journal Template Name");
      ItemJnlLine.SETRANGE("Journal Batch Name", ItemJnlBatch.Name);
      IF ItemJnlLine.FINDLAST THEN
        LastLineNo := ItemJnlLine."Line No."
      ELSE
        LastLineNo := 0;

      ItemJnlLine.INIT;
      ItemJnlLine."Journal Template Name" := ItemJnlBatch."Journal Template Name";
      ItemJnlLine."Journal Batch Name" := ItemJnlBatch.Name;
      ItemJnlLine."Line No." := LastLineNo + 1;
      ItemJnlLine.INSERT(TRUE);

      GetDefaultsFromTemplateBatch(ItemJnlLine);

      ItemRec.GET(OrderLine."Item No.");
      ItemRec.SETRANGE("Date Filter", 0D, OrderHeader."Order Date");
      ItemRec.SETRANGE("Location Filter", OrderHeader."Location Code");
      ItemRec.CALCFIELDS("Net Change");

      ItemJnlLine."Receiving Company" := OrderHeader."Receiving Company";  //db, 18-12-15
      ItemJnlLine."Entry Type" := ItemJnlLine."Entry Type"::"Positive Adjmt.";
      ItemJnlLine.VALIDATE("Item No.", OrderLine."Item No.");
      IF OrderHeader."Location Code" <> '' THEN
        ItemJnlLine.VALIDATE("Location Code", OrderHeader."Location Code");
      ItemJnlLine."Phys. Inventory" := TRUE;
      ItemJnlLine."Qty. (Calculated)" := ItemRec."Net Change";
      ItemJnlLine.VALIDATE("Qty. (Phys. Inventory)", OrderLine.Quantity);
      // Calculate 'Quantity' and fill 'Entry Type' (Pos/Neg Adjmt)

      ItemLedgEntry.SETCURRENTKEY("Item No.");
      ItemLedgEntry.SETRANGE("Item No.", OrderLine."Item No.");
      IF ItemLedgEntry.FINDLAST THEN
        ItemJnlLine."Last Item Ledger Entry No." := ItemLedgEntry."Entry No.";
      ItemJnlLine."Document No." := OrderHeader."No.";
      ItemJnlLine.MODIFY(TRUE);
    END;

    PROCEDURE CreateItemJnlLineStockTransfer@1100525005(OrderHeader@1100525003 : Record 11126687;OrderLine@1100525002 : Record 11126688);
    VAR
      ItemJnlLine@1100525001 : Record 83;
      NoSeriesMgt@1100525005 : Codeunit 396;
      LastLineNo@1100525004 : Integer;
      ItemRec@1100525000 : Record 27;
    BEGIN
      FillTemplateAndBatchStockTransfer;
      ItemJnlLine.SETRANGE("Journal Template Name", ItemJnlBatch."Journal Template Name");
      ItemJnlLine.SETRANGE("Journal Batch Name", ItemJnlBatch.Name);
      IF ItemJnlLine.FINDLAST THEN
        LastLineNo := ItemJnlLine."Line No."
      ELSE
        LastLineNo := 0;

      ItemJnlLine.INIT;
      ItemJnlLine."Journal Template Name" := ItemJnlBatch."Journal Template Name";
      ItemJnlLine."Journal Batch Name" := ItemJnlBatch.Name;
      ItemJnlLine."Line No." := LastLineNo + 1;
      ItemJnlLine.INSERT(TRUE);

      GetDefaultsFromTemplateBatch(ItemJnlLine);

      ItemJnlLine."Receiving Company" := OrderHeader."Receiving Company";  //db, 18-12-15
      ItemJnlLine.VALIDATE("Entry Type", ItemJnlLine."Entry Type"::Transfer);
      ItemJnlLine.VALIDATE("Item No.", OrderLine."Item No.");
      ItemJnlLine."Entry Type" := ItemJnlLine."Entry Type"::Transfer;

      ItemJnlLine.VALIDATE("Location Code", OrderHeader."Location Code");
      ItemJnlLine.VALIDATE("New Location Code", OrderHeader."To Location Code");
      ItemJnlLine.VALIDATE(Quantity, OrderLine.Quantity);
      ItemJnlLine."Document No." := OrderHeader."No.";
      ItemJnlLine.MODIFY(TRUE);
    END;

    PROCEDURE CreateReqLine@1100525003(OrderHeader@1100525001 : Record 11126687;OrderLine@1100525000 : Record 11126688);
    VAR
      InvtSetup@1100525003 : Record 313;
      ReqLine@1100525002 : Record 246;
      LastLineNo@1100525007 : Integer;
    BEGIN
      //copy from codeunit 11012041
      FillTemplateAndBatchReqLine;  //db, 21-12-15
      ReqLine.SETRANGE("Worksheet Template Name", ReqWkshBatch."Worksheet Template Name");
      ReqLine.SETRANGE("Journal Batch Name", ReqWkshBatch.Name);
      IF ReqLine.FINDLAST THEN
        LastLineNo := ReqLine."Line No."
      ELSE
        LastLineNo := 0;

      ReqLine.INIT;
      ReqLine."Worksheet Template Name" := ReqWkshBatch."Worksheet Template Name";
      ReqLine."Journal Batch Name" := ReqWkshBatch.Name;
      ReqLine."Line No." := LastLineNo + 1;
      ReqLine.INSERT;

      ReqLine.Type := ReqLine.Type::Item;
      CheckItemCostObject(OrderLine."Item No.");
      ReqLine.VALIDATE("No.", OrderLine."Item No.");
      ReqLine.VALIDATE(Quantity, OrderLine.Quantity);  //db, 21-12-15
      OrderLine.CALCFIELDS("Base Unit of Measure");
      ReqLine.VALIDATE("Unit of Measure Code", OrderLine."Base Unit of Measure");  //db, 28-12-15
      ReqLine."Order Date" := TODAY;
      ReqLine."Created by" := USERID;
      ReqLine."Date Created" := TODAY;
      ReqLine."Accept Action Message" := TRUE;
      ReqLine."Location Code" := OrderHeader."Location Code";
      ReqLine."Modified by" := USERID;
      ReqLine."Last Date Modified" := TODAY;
      ReqLine.MODIFY;
    END;

    PROCEDURE FillTemplateAndBatchDelivery@1210190000();
    BEGIN
      InvtSetup.GET;
      InvtSetup.TESTFIELD("Scanned Item Journal Template");
      InvtSetup.TESTFIELD("Scanned Item Journal Batch");

      ItemJnlTemplate.GET(InvtSetup."Scanned Item Journal Template");
      ItemJnlBatch.GET(InvtSetup."Scanned Item Journal Template", InvtSetup."Scanned Item Journal Batch");
    END;

    PROCEDURE FillTemplateAndBatchPhysInventory@1210190002();
    BEGIN
      InvtSetup.GET;
      InvtSetup.TESTFIELD("Scanned Phys. Inv Jnl Template");
      InvtSetup.TESTFIELD("Scanned Phys. Inv Jnl Batch");

      ItemJnlTemplate.GET(InvtSetup."Scanned Phys. Inv Jnl Template");
      ItemJnlBatch.GET(InvtSetup."Scanned Phys. Inv Jnl Template", InvtSetup."Scanned Phys. Inv Jnl Batch");
    END;

    PROCEDURE FillTemplateAndBatchStockTransfer@1100525002();
    BEGIN
      InvtSetup.GET;
      InvtSetup.TESTFIELD("Scanned Stock Tr. Jnl Template");
      InvtSetup.TESTFIELD("Scanned Stock Tr. Jnl Batch");

      ItemJnlTemplate.GET(InvtSetup."Scanned Stock Tr. Jnl Template");
      ItemJnlBatch.GET(InvtSetup."Scanned Stock Tr. Jnl Template", InvtSetup."Scanned Stock Tr. Jnl Batch");
    END;

    PROCEDURE FillTemplateAndBatchReqLine@1100525006();
    BEGIN
      //db, 21-12-15
      InvtSetup.GET;
      InvtSetup.TESTFIELD("Scanned Purchase Jnl Template");
      InvtSetup.TESTFIELD("Scanned Purchase Journal Batch");

      ReqWkshTemplate.GET(InvtSetup."Scanned Purchase Jnl Template");
      ReqWkshBatch.GET(InvtSetup."Scanned Purchase Jnl Template", InvtSetup."Scanned Purchase Journal Batch");
    END;

    PROCEDURE CheckItemCostObject@1100525004(ItemNo@1100525000 : Code[20]);
    VAR
      ItemRec@1100525003 : Record 27;
      DimValRec@1100525002 : Record 349;
      DimMgt@1100525001 : Codeunit 408;
    BEGIN
      ItemRec.GET(ItemNo);
      ItemRec.TESTFIELD("Global Dimension 2 Code");
      DimMgt.GetDimValueRec(2,ItemRec."Global Dimension 2 Code",DimValRec,TRUE,'');
    END;

    PROCEDURE GetDefaultsFromTemplateBatch@1100525007(VAR ItemJnlLine@1100525000 : Record 83);
    VAR
      NoSeriesMgt@1100525001 : Codeunit 396;
    BEGIN
      IF ItemJnlBatch."No. Series" <> '' THEN BEGIN
        CLEAR(NoSeriesMgt);
        ItemJnlLine."Document No." := NoSeriesMgt.GetNextNo(ItemJnlBatch."No. Series",0D,FALSE);
      END;
      ItemJnlLine."Source Code" := ItemJnlTemplate."Source Code";
      ItemJnlLine."Reason Code" := ItemJnlBatch."Reason Code";
    END;

    BEGIN
    END.
  }
}

