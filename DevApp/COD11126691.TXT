OBJECT Codeunit 11126691 Dataset Management
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Dataset_CRM@1100525103 : TextConst 'ENU=CRM';
      DatasetDesc_CRM@1100525102 : TextConst 'ENU=Customer Relation Management';
      Dataset_General@1100525101 : TextConst 'ENU=GENERAL';
      DatasetDesc_General@1100525100 : TextConst 'ENU=General';
      Dataset_Projects@1100525099 : TextConst 'ENU=PROJECTS';
      DatasetDesc_Projects@1100525098 : TextConst 'ENU=Projects';
      Dataset_HR_Hours@1100525097 : TextConst 'ENU=HRHOURS';
      DatasetDesc_HR_Hours@1100525096 : TextConst 'ENU=Human Resource and Hours';
      Dataset_Plant@1100525095 : TextConst 'ENU=PLANT';
      DatasetDesc_Plant@1100525094 : TextConst 'ENU=Plant';
      Dataset_Inventory@1100525093 : TextConst 'ENU=INVENTORY';
      DatasetDesc_Inventory@1100525092 : TextConst 'ENU=Inventory';
      Dataset_BuyerMgt@1100525091 : TextConst 'ENU=BUYERMANAGEMENT';
      DatasetDesc_BuyerMgt@1100525090 : TextConst 'ENU=Buyer Management';
      Dataset_Financial@1100525089 : TextConst 'ENU=FINANCIAL';
      DatasetDesc_Financial@1100525088 : TextConst 'ENU=Financial';
      Dataset_Service@1100528800 : TextConst 'ENU=SERVICE';
      DatasetDesc_Service@1100528801 : TextConst 'ENU=Service';
      Datapart_Tryouts@1100525087 : TextConst 'ENU=TRYOUTS';
      Datapart_TryoutsDescription@1100525086 : TextConst 'ENU=Try-outs';
      Datapart_TryoutQuotes@1100525085 : TextConst 'ENU=TRYOUTQUOTES';
      Datapart_TryoutQuotesDescription@1100525084 : TextConst 'ENU=Try-out Quotes';
      Datapart_DatePeriod@1100525083 : TextConst 'ENU=DATEPERIOD';
      Datapart_DatePeriodDescription@1100525082 : TextConst 'ENU=Date to Periods';
      Datapart_TryoutStatus@1100525081 : TextConst 'ENU=TRYOUTSTATUSES';
      Datapart_TryoutStatusDescription@1100525080 : TextConst 'ENU=Try-out Statuses';
      Datapart_ContactFeatureTypes@1100525079 : TextConst 'ENU=CONTACTFEATURETYPE';
      Datapart_ContactFeatureTypesDescription@1100525078 : TextConst 'ENU=Contact Feature Types';
      Datapart_Salespersons@1100525077 : TextConst 'ENU=SALESPERSONS';
      Datapart_SalespersonsDescription@1100525076 : TextConst 'ENU=Salespersons/Purchasers';
      Datapart_Contacts@1100525075 : TextConst 'ENU=CONTACTS';
      Datapart_ContactsDescription@1100525074 : TextConst 'ENU=Contacts';
      Datapart_ReasonCodes@1100525073 : TextConst 'ENU=REASONCODES';
      Datapart_ReasonCodesDescription@1100525072 : TextConst 'ENU=Reason Codes';
      Datapart_Territories@1100525071 : TextConst 'ENU=TERRITORIES';
      Datapart_TerritoriesDescription@1100525070 : TextConst 'ENU=Territories';
      Datapart_Dimensions@1100525069 : TextConst 'ENU=DIMENSIONS';
      Datapart_DimensionsDescription@1100525068 : TextConst 'ENU=Dimensions';
      Datapart_TryoutLines@1100525067 : TextConst 'ENU=TRYOUTLINES';
      Datapart_TryoutLinesDescription@1100525066 : TextConst 'ENU=Try-out Lines';
      Datapart_Employees@1100525065 : TextConst 'ENU=EMPLOYEES';
      Datapart_EmployeesDescription@1100525064 : TextConst 'ENU=Employees';
      Datapart_EmployeesAbsence@1100525063 : TextConst 'ENU=EMPLOYEESABSENCE';
      Datapart_EmployeesAbsenceDescription@1100525062 : TextConst 'ENU=Employees Absence';
      Datapart_PostHourAccountingLine@1100525061 : TextConst 'ENU=POSTHOURACCOUNTLINE';
      Datapart_PostHourAccountingLineDescription@1100525060 : TextConst 'ENU=Posted Hour Accounting Lines';
      Datapart_DatasetParts@1100525059 : TextConst 'ENU=DATASETPART';
      Datapart_DatasetPartsDescription@1100525058 : TextConst 'ENU=Datasetparts';
      Datapart_Projects@1100525057 : TextConst 'ENU=PROJECTS';
      Datapart_ProjectsDescription@1100525056 : TextConst 'ENU=Projects';
      Datapart_ProjectInstallments@1100525055 : TextConst 'ENU=PROJECTINSTALLMENTS';
      Datapart_ProjectInstallmentsDescription@1100525054 : TextConst 'ENU=Project Installments';
      Datapart_ExtensionContracts@1100525053 : TextConst 'ENU=EXTENSIONCONTRACTS';
      Datapart_ExtensionContractsDescription@1100525052 : TextConst 'ENU=Extension Contracts';
      Datapart_PlantTypes@1100525051 : TextConst 'ENU=PLANTTYPES';
      Datapart_PlantTypesDescription@1100525050 : TextConst 'ENU=Plant Types';
      Datapart_PlantLedgerEntries@1100525049 : TextConst 'ENU=PLANTLEDGERENTRIES';
      Datapart_PlantLedgerEntriesDescription@1100525048 : TextConst 'ENU=Plant Ledger Entries';
      Datapart_PlantRateCompEntries@1100525047 : TextConst 'ENU=PLANTRATECOMPENTRIES';
      Datapart_PlantRateCompEntriesDescription@1100525046 : TextConst 'ENU=Plant Rate Component Entries';
      Datapart_PlantRateCodes@1100525045 : TextConst 'ENU=MATERIEELTARIEFCODES';
      Datapart_PlantRateCodesDescription@1100525044 : TextConst 'ENU=Plant Rate Codes';
      Datapart_StdRateComponents@1100525043 : TextConst 'ENU=STDRATECOMPONENTS';
      Datapart_StdRateComponentsDescription@1100525042 : TextConst 'ENU=Standard Rate Components';
      Datapart_PlantInventory@1100525041 : TextConst 'ENU=PLANTINVENTORY';
      Datapart_PlantInventoryDescription@1100525040 : TextConst 'ENU=Plant Inventory';
      Datapart_PlantLocations@1100525039 : TextConst 'ENU=PLANTLOCATIONS';
      Datapart_PlantLocationsDescription@1100525038 : TextConst 'ENU=Plant Locations';
      Datapart_ItemLedgerEntries@1100525037 : TextConst 'ENU=ITEMLEDGERENTRIES';
      Datapart_ItemLedgerEntriesDescription@1100525036 : TextConst 'ENU=Item Ledger Entries';
      Datapart_Locations@1100525035 : TextConst 'ENU=LOCATIONS';
      Datapart_LocationsDescription@1100525034 : TextConst 'ENU=Locations';
      Datapart_ProductGroups@1100525033 : TextConst 'ENU=PRODUCTGROUPS';
      Datapart_ProductGroupsDescription@1100525032 : TextConst 'ENU=Product Groups';
      Datapart_CostComponents@1100525031 : TextConst 'ENU=COSTCOMPONENTS';
      Datapart_CostComponentsDescription@1100525030 : TextConst 'ENU=Cost Components';
      Datapart_ProjectElements@1100525029 : TextConst 'ENU=PROJECTELEMENTS';
      Datapart_ProjectElementsDescription@1100525028 : TextConst 'ENU=Project Elements';
      Datapart_Plots@1100525027 : TextConst 'ENU=PLOTS';
      Datapart_PlotsDescription@1100525026 : TextConst 'ENU=Plots';
      Datapart_Options@1100525025 : TextConst 'ENU=OPTIONS';
      Datapart_OptionsDescription@1100525024 : TextConst 'ENU=Options';
      Datapart_Complaints@1100525023 : TextConst 'ENU=COMPLAINTS';
      Datapart_ComplaintsDescription@1100525022 : TextConst 'ENU=Complaints';
      Datapart_InstallmentSchemes@1100525021 : TextConst 'ENU=INSTALLMENTSCHEMES';
      Datapart_InstallmentSchemesDescription@1100525020 : TextConst 'ENU=Installment Schemes';
      Datapart_PrognoseOccupation@1100525019 : TextConst 'ENU=PROGNOSISOCCUPATION';
      Datapart_PrognoseOccupationDescription@1100525018 : TextConst 'ENU=Prognosis - Occupation';
      Datapart_PrognoseTryOutQuotes@1100525017 : TextConst 'ENU=PRGNSISTRYOUTQUOTES';
      Datapart_PrognoseTryOutQuotesDescription@1100525016 : TextConst 'ENU=Prognosis - Try out Quotes';
      Datapart_Disciplines@1100525015 : TextConst 'ENU=DISCIPLINES';
      Datapart_DisciplinesDescription@1100525014 : TextConst 'ENU=Disciplines';
      Datapart_TradeSpecialities@1100525013 : TextConst 'ENU=TRADESPECIALITIES';
      Datapart_TradeSpecialitiesDescription@1100525012 : TextConst 'ENU=Trade Specialities';
      Datapart_WorkOrders@1100525011 : TextConst 'ENU=WORKORDERS';
      Datapart_WorkOrdersDescription@1100525010 : TextConst 'ENU=Work Orders';
      Datapart_Prognosis@1100525009 : TextConst 'ENU=PROGNOSIS';
      Datapart_PrognosisDescription@1100525008 : TextConst 'ENU=Prognosis';
      Datapart_ControlProjCostTypes@1100525007 : TextConst 'ENU=CNTRLPROJCOSTTYPES';
      Datapart_ControlProjCostTypesDescription@1100525006 : TextConst 'ENU=Cost Control Project/Cost Types';
      Datapart_ControlProjCostObjects@1100525005 : TextConst 'ENU=CNTRLPROJCOSTOBJECT';
      Datapart_ControlProjCostObjectsDescription@1100525004 : TextConst 'ENU=Cost Control Project/Cost Objects';
      Datapart_ControlProjElements@1100525003 : TextConst 'ENU=CNTRLPROJELEMENTS';
      Datapart_ControlProjElementsDescription@1100525002 : TextConst 'ENU=Cost Control Project/Elements';
      Datapart_ControlProjCostComponents@1100525001 : TextConst 'ENU=CNTRLPROJCOSTCOMP';
      Datapart_ControlProjCostComponentsDescription@1100525000 : TextConst 'ENU=Cost Control Project/Cost Components';
      Datapart_ProjectPrincipals@1100525104 : TextConst 'ENU=PROJPRINCIPALS';
      Datapart_ProjectPrincipalsDescription@1100525105 : TextConst 'ENU=Project Principals';
      Datapart_ContractInstallments@1100525107 : TextConst 'ENU=CONTRACTINSTALLMENTS';
      Datapart_ContractInstallmentsDescription@1100525106 : TextConst 'ENU=Contract Installments';
      Datapart_ServiceContracts@1100525109 : TextConst 'ENU=SERVICECONTRACTS';
      Datapart_ServiceContractsDescription@1100525108 : TextConst 'ENU=Service Contracts';
      Datapart_ContractAmountsByDates@1100525113 : TextConst 'ENU=CONTRAMTSBYDATES';
      Datapart_ContractAmountsByDatesDescription@1100525112 : TextConst 'ENU=Contract Amounts By Dates';
      Datapart_ServiceOrders@1100528802 : TextConst 'ENU=SERVICEORDERS';
      Datapart_ServiceOrdersDescription@1100528803 : TextConst 'ENU=Service Orders';
      Datapart_ServiceLocations@1100528804 : TextConst 'ENU=SERVICELOCATIONS';
      Datapart_ServiceLocationsDescription@1100528805 : TextConst 'ENU=Service Locations';
      Datapart_DimensionValues@1100528806 : TextConst 'ENU=DIMENSIONVALUES';
      Datapart_DimensionValuesDescription@1100528807 : TextConst 'ENU=Dimension Values';
      Datapart_ReferencePeriods@1100528810 : TextConst 'ENU=REFPERIODS';
      Datapart_ReferencePeriodsDescription@1100528811 : TextConst 'ENU=Reference Periods';
      Datapart_ServiceAnalysis@1100528808 : TextConst 'ENU=SERVICEANALYSIS';
      Datapart_ServiceAnalysisDescription@1100528809 : TextConst 'ENU=Service Analysis';
      Datapart_ServiceOrderObjects@1100528812 : TextConst 'ENU=SERVICEORDEROBJECTS';
      Datapart_ServiceOrderObjectsDescription@1100528813 : TextConst 'ENU=Service Order Objects';
      Datapart_ServiceObjects@1100528814 : TextConst 'ENU=SERVICEOBJECTS';
      Datapart_ServiceObjectsDescription@1100528815 : TextConst 'ENU=Service Objects';
      Datapart_ServiceCalls@1100528816 : TextConst 'ENU=SERVICECALLS';
      Datapart_ServiceCallsDescription@1100528819 : TextConst 'ENU=Service Calls';
      Datapart_SUPRooms@1100528817 : TextConst 'ENU=SUPROOMS';
      Datapart_SUPRoomsDescription@1100528820 : TextConst 'ENU=SUP Rooms';
      Datapart_SUPParts@1100528818 : TextConst 'ENU=SUPPARTS';
      Datapart_SUPPartsDescription@1100528821 : TextConst 'ENU=SUP Parts';

    PROCEDURE InitDatasetManagement@1100525000();
    BEGIN
      InitDatasets;
      InitDataparts;
      InitDatasetsDataparts;
    END;

    LOCAL PROCEDURE InitDatasets@1100525003();
    VAR
      ObjectType@1100525000 : ',,,,,Codeunit,,,Page,Query';
    BEGIN
      UpdateDataset(Dataset_CRM, DatasetDesc_CRM);
      UpdateDataset(Dataset_General, DatasetDesc_General);
      UpdateDataset(Dataset_Projects, DatasetDesc_Projects);
      UpdateDataset(Dataset_HR_Hours, DatasetDesc_HR_Hours);
      UpdateDataset(Dataset_Plant, DatasetDesc_Plant);
      UpdateDataset(Dataset_Inventory, DatasetDesc_Inventory);
      UpdateDataset(Dataset_BuyerMgt, DatasetDesc_BuyerMgt);
      UpdateDataset(Dataset_Financial, DatasetDesc_Financial);
      UpdateDataset(Dataset_Service, DatasetDesc_Service);
    END;

    LOCAL PROCEDURE InitDataparts@1100525013();
    VAR
      ObjectType@1100525000 : ',,,,,Codeunit,,,Page,Query';
    BEGIN
      UpdateDatapart(Datapart_TryoutQuotes, ObjectType::Query, 11128530, 'TryoutQuotes_DSMGT', Datapart_TryoutQuotesDescription);
      UpdateDatapart(Datapart_Tryouts, ObjectType::Query, 11128531, 'Tryouts_DSMGT', Datapart_TryoutsDescription);
      UpdateDatapart(Datapart_DatePeriod, ObjectType::Query, 11128532, 'DatePeriod_DSMGT', Datapart_DatePeriodDescription);
      UpdateDatapart(Datapart_DatasetParts, ObjectType::Query, 11128533, 'DatasetParameters_DSMGT', Datapart_DatasetPartsDescription);
      UpdateDatapart(Datapart_TryoutStatus, ObjectType::Query, 11128534, 'TryoutStatuses_DSMGT', Datapart_TryoutStatusDescription);
      UpdateDatapart(Datapart_ContactFeatureTypes, ObjectType::Query, 11128535, 'ContactFeatureTypes_DSMGT', Datapart_ContactFeatureTypesDescription);
      UpdateDatapart(Datapart_Salespersons, ObjectType::Query, 11128536, 'Salespersons_DSMGT', Datapart_SalespersonsDescription);
      UpdateDatapart(Datapart_Contacts, ObjectType::Query, 11128537, 'Contacts_DSMGT', Datapart_ContactsDescription);
      UpdateDatapart(Datapart_ReasonCodes, ObjectType::Query, 11128538, 'ReasonCodes_DSMGT', Datapart_ReasonCodesDescription);
      UpdateDatapart(Datapart_Territories, ObjectType::Query, 11128539, 'Territories_DSMGT', Datapart_TerritoriesDescription);
      UpdateDatapart(Datapart_Dimensions, ObjectType::Query, 11128540, 'Dimensions_DSMGT', Datapart_DimensionsDescription);
      UpdateDatapart(Datapart_TryoutLines, ObjectType::Query, 11128541, 'TryoutLines_DSMGT', Datapart_TryoutLinesDescription);
      UpdateDatapart(Datapart_Projects, ObjectType::Query, 11128542, 'Projects_DSMGT', Datapart_ProjectsDescription);
      UpdateDatapart(Datapart_Employees, ObjectType::Query, 11128543, 'Employees_DSMGT', Datapart_EmployeesDescription);
      UpdateDatapart(Datapart_EmployeesAbsence, ObjectType::Query, 11128544, 'EmployeesAbsence_DSMGT', Datapart_EmployeesAbsenceDescription);
      UpdateDatapart(Datapart_PostHourAccountingLine, ObjectType::Query, 11128545, 'PostedHourAccountingLine_DSMGT', Datapart_PostHourAccountingLineDescription);
      UpdateDatapart(Datapart_PlantTypes, ObjectType::Query, 11128546, 'PlantTypes_DSMGT', Datapart_PlantTypesDescription);
      UpdateDatapart(Datapart_PlantLedgerEntries, ObjectType::Query, 11128547, 'PlantLedgerEntries_DSMGT', Datapart_PlantLedgerEntriesDescription);
      UpdateDatapart(Datapart_PlantRateCompEntries, ObjectType::Query, 11128548, 'PlantRateComponentEntries_DSMGT', Datapart_PlantRateCompEntriesDescription);
      UpdateDatapart(Datapart_PlantRateCodes, ObjectType::Query, 11128549, 'PlantRateCodes_DSMGT', Datapart_PlantRateCodesDescription);
      UpdateDatapart(Datapart_StdRateComponents, ObjectType::Query, 11128550, 'StandardRateComponents_DSMGT', Datapart_StdRateComponentsDescription);
      UpdateDatapart(Datapart_PlantInventory, ObjectType::Query, 11128551, 'PlantInventory_DSMGT', Datapart_PlantInventoryDescription);
      UpdateDatapart(Datapart_PlantLocations, ObjectType::Query, 11128552, 'PlantLocations_DSMGT', Datapart_PlantLocationsDescription);
      UpdateDatapart(Datapart_ItemLedgerEntries, ObjectType::Query, 11128553, 'ItemLedgerEntries_DSMGT', Datapart_ItemLedgerEntriesDescription);
      UpdateDatapart(Datapart_Locations, ObjectType::Query, 11128554, 'Locations_DSMGT', Datapart_LocationsDescription);
      UpdateDatapart(Datapart_ProductGroups, ObjectType::Query, 11128555, 'ProductGroups_DSMGT', Datapart_ProductGroupsDescription);
      UpdateDatapart(Datapart_CostComponents, ObjectType::Query, 11128556, 'CostComponents_DSMGT', Datapart_CostComponentsDescription);
      UpdateDatapart(Datapart_ProjectElements, ObjectType::Query, 11128557, 'ProjectElements_DSMGT', Datapart_ProjectElementsDescription);
      UpdateDatapart(Datapart_Plots, ObjectType::Query, 11128558, 'Plots_DSMGT', Datapart_PlotsDescription);
      UpdateDatapart(Datapart_Options, ObjectType::Query, 11128559, 'Options_DSMGT', Datapart_OptionsDescription);
      UpdateDatapart(Datapart_Complaints, ObjectType::Query, 11128560, 'Complaints_DSMGT', Datapart_ComplaintsDescription);
      UpdateDatapart(Datapart_InstallmentSchemes, ObjectType::Query, 11128561, 'InstallmentSchemes_DSMGT', Datapart_InstallmentSchemesDescription);
      UpdateDatapart(Datapart_ExtensionContracts, ObjectType::Query, 11128562, 'ExtensionContracts_DSMGT', Datapart_ExtensionContractsDescription);
      UpdateDatapart(Datapart_ProjectPrincipals, ObjectType::Query, 11128563, 'ProjectPrincipals_DSMGT', Datapart_ProjectPrincipalsDescription);
      UpdateDatapart(Datapart_ContractInstallments, ObjectType::Query, 11128564, 'ContractInstallments_DSMGT', Datapart_ContractInstallmentsDescription);
      UpdateDatapart(Datapart_ServiceContracts, ObjectType::Query, 11128565, 'ServiceContracts_DSMGT', Datapart_ServiceContractsDescription);
      UpdateDatapart(Datapart_ContractAmountsByDates, ObjectType::Query, 11128566, 'ContractAmtsByDates_DSMGT', Datapart_ContractAmountsByDatesDescription);
      UpdateDatapart(Datapart_PrognoseOccupation, ObjectType::Query, 11128568, 'PrognoseOccupation_DSMGT', Datapart_PrognoseOccupationDescription);
      UpdateDatapart(Datapart_PrognoseTryOutQuotes, ObjectType::Query, 11128569, 'PrognoseTryOutQuotes_DSMGT', Datapart_PrognoseTryOutQuotesDescription);
      UpdateDatapart(Datapart_Disciplines, ObjectType::Query, 11128570, 'Disciplines_DSMGT', Datapart_DisciplinesDescription);
      UpdateDatapart(Datapart_TradeSpecialities, ObjectType::Query, 11128571, 'TradeSpecialities_DSMGT', Datapart_TradeSpecialitiesDescription);
      UpdateDatapart(Datapart_WorkOrders, ObjectType::Query, 11128572, 'WorkOrders_DSMGT', Datapart_WorkOrdersDescription);
      UpdateDatapart(Datapart_Prognosis, ObjectType::Query, 11128573, 'Prognosis_DSMGT', Datapart_PrognosisDescription);
      UpdateDatapart(Datapart_ProjectInstallments, ObjectType::Query, 11128574, 'ProjectInstallments_DSMGT', Datapart_ProjectInstallmentsDescription);
      UpdateDatapart(Datapart_ControlProjCostTypes, ObjectType::Query, 11128575, 'ControlProjCostTypes_DSMGT', Datapart_ControlProjCostTypesDescription);
      UpdateDatapart(Datapart_ControlProjCostObjects, ObjectType::Query, 11128576, 'ControlProjCostObjects_DSMGT', Datapart_ControlProjCostObjectsDescription);
      UpdateDatapart(Datapart_ControlProjElements, ObjectType::Query, 11128577, 'ControleProjElements_DSMGT', Datapart_ControlProjElementsDescription);
      UpdateDatapart(Datapart_ControlProjCostComponents, ObjectType::Query, 11128578, 'ControlProjCostComponents_DSMGT', Datapart_ControlProjCostComponentsDescription);
      UpdateDatapart(Datapart_ServiceOrders, ObjectType::Query, 11128567, 'ServiceOrders_DSMGT', Datapart_ServiceOrdersDescription);
      UpdateDatapart(Datapart_ServiceLocations, ObjectType::Query, 11128580, 'ServiceLocations_DSMGT', Datapart_ServiceLocationsDescription);
      UpdateDatapart(Datapart_DimensionValues, ObjectType::Query, 11128581, 'DimensionValues_DSMGT', Datapart_DimensionValuesDescription);
      UpdateDatapart(Datapart_ReferencePeriods, ObjectType::Query, 11128582, 'ReferencePeriods_DSMGT', Datapart_ReferencePeriodsDescription);
      UpdateDatapart(Datapart_ServiceAnalysis, ObjectType::Query, 11128583, 'ServiceAnalysis_DSMGT', Datapart_ServiceAnalysisDescription);
      UpdateDatapart(Datapart_ServiceOrderObjects, ObjectType::Query, 11128584, 'ServiceOrderObjects_DSMGT', Datapart_ServiceOrderObjectsDescription);
      UpdateDatapart(Datapart_ServiceObjects, ObjectType::Query, 11128585, 'ServiceObjects_DSMGT', Datapart_ServiceObjectsDescription);
      UpdateDatapart(Datapart_ServiceCalls, ObjectType::Query, 11128586, 'ServiceCalls_DSMGT', Datapart_ServiceObjectsDescription);
      UpdateDatapart(Datapart_SUPRooms, ObjectType::Query, 11128587, 'SUPRooms_DSMGT', Datapart_SUPRoomsDescription);
      UpdateDatapart(Datapart_SUPParts, ObjectType::Query, 11128588, 'SUPParts_DSMGT', Datapart_SUPPartsDescription);
    END;

    LOCAL PROCEDURE InitDatasetsDataparts@1100525020();
    BEGIN
      UpdateDatasetDatapart(Dataset_CRM, Datapart_Tryouts);
      UpdateDatasetDatapart(Dataset_CRM, Datapart_TryoutQuotes);
      UpdateDatasetDatapart(Dataset_CRM, Datapart_TryoutStatus);
      UpdateDatasetDatapart(Dataset_CRM, Datapart_ContactFeatureTypes);
      UpdateDatasetDatapart(Dataset_CRM, Datapart_Salespersons);
      UpdateDatasetDatapart(Dataset_CRM, Datapart_Contacts);
      UpdateDatasetDatapart(Dataset_CRM, Datapart_ReasonCodes);
      UpdateDatasetDatapart(Dataset_CRM, Datapart_Territories);
      UpdateDatasetDatapart(Dataset_CRM, Datapart_Dimensions);
      UpdateDatasetDatapart(Dataset_CRM, Datapart_TryoutLines);

      UpdateDatasetDatapart(Dataset_General, Datapart_DatasetParts);
      UpdateDatasetDatapart(Dataset_General, Datapart_DatePeriod);

      UpdateDatasetDatapart(Dataset_Projects, Datapart_Employees);
      UpdateDatasetDatapart(Dataset_Projects, Datapart_Dimensions);
      UpdateDatasetDatapart(Dataset_Projects, Datapart_Projects);

      UpdateDatasetDatapart(Dataset_HR_Hours, Datapart_Employees);
      UpdateDatasetDatapart(Dataset_HR_Hours, Datapart_EmployeesAbsence);
      UpdateDatasetDatapart(Dataset_HR_Hours, Datapart_PostHourAccountingLine);

      UpdateDatasetDatapart(Dataset_Plant, Datapart_PlantTypes);
      UpdateDatasetDatapart(Dataset_Plant, Datapart_Dimensions);
      UpdateDatasetDatapart(Dataset_Plant, Datapart_PlantLedgerEntries);
      UpdateDatasetDatapart(Dataset_Plant, Datapart_PlantRateCompEntries);
      UpdateDatasetDatapart(Dataset_Plant, Datapart_PlantRateCodes);
      UpdateDatasetDatapart(Dataset_Plant, Datapart_StdRateComponents);
      UpdateDatasetDatapart(Dataset_Plant, Datapart_PlantInventory);
      UpdateDatasetDatapart(Dataset_Plant, Datapart_PlantLocations);

      UpdateDatasetDatapart(Dataset_Inventory, Datapart_ItemLedgerEntries);
      UpdateDatasetDatapart(Dataset_Inventory, Datapart_Dimensions);
      UpdateDatasetDatapart(Dataset_Inventory, Datapart_Locations);
      UpdateDatasetDatapart(Dataset_Inventory, Datapart_ProductGroups);
      UpdateDatasetDatapart(Dataset_Inventory, Datapart_CostComponents);
      UpdateDatasetDatapart(Dataset_Inventory, Datapart_ProjectElements);

      UpdateDatasetDatapart(Dataset_BuyerMgt, Datapart_Projects);
      UpdateDatasetDatapart(Dataset_BuyerMgt, Datapart_Plots);
      UpdateDatasetDatapart(Dataset_BuyerMgt, Datapart_Options);
      UpdateDatasetDatapart(Dataset_BuyerMgt, Datapart_Complaints);
      UpdateDatasetDatapart(Dataset_BuyerMgt, Datapart_InstallmentSchemes);

      UpdateDatasetDatapart(Dataset_Financial, Datapart_Projects);
      UpdateDatasetDatapart(Dataset_Financial, Datapart_ProjectInstallments);
      UpdateDatasetDatapart(Dataset_Financial, Datapart_ExtensionContracts);
      UpdateDatasetDatapart(Dataset_Financial, Datapart_ProjectPrincipals);
      UpdateDatasetDatapart(Dataset_Financial, Datapart_ContractInstallments);
      UpdateDatasetDatapart(Dataset_Financial, Datapart_ServiceContracts);
      UpdateDatasetDatapart(Dataset_Financial, Datapart_ContractAmountsByDates);

      UpdateDatasetDatapart(Dataset_Service, Datapart_ServiceOrders);
      UpdateDatasetDatapart(Dataset_Service, Datapart_ServiceLocations);
      UpdateDatasetDatapart(Dataset_Service, Datapart_DimensionValues);
      UpdateDatasetDatapart(Dataset_Service, Datapart_ReferencePeriods);
      UpdateDatasetDatapart(Dataset_Service, Datapart_ServiceAnalysis);
      UpdateDatasetDatapart(Dataset_Service, Datapart_ServiceOrderObjects);
      UpdateDatasetDatapart(Dataset_Service, Datapart_ServiceObjects);
      UpdateDatasetDatapart(Dataset_Service, Datapart_ServiceContracts);
      UpdateDatasetDatapart(Dataset_Service, Datapart_ServiceCalls);
      UpdateDatasetDatapart(Dataset_Service, Datapart_SUPRooms);
      UpdateDatasetDatapart(Dataset_Service, Datapart_SUPParts);
    END;

    LOCAL PROCEDURE UpdateDataset@1100525005(IDatasetCode@1100525000 : Code[20];IDatasetDescription@1100525001 : Text[50]);
    VAR
      Dataset@1100525002 : Record 11129000;
    BEGIN
      IF NOT Dataset.GET(IDatasetCode, FALSE) THEN
        AddDataset(IDatasetCode, IDatasetDescription)
      ELSE BEGIN
        WITH Dataset DO BEGIN
          Description := IDatasetDescription;
          MODIFY;
        END;
      END;
    END;

    LOCAL PROCEDURE AddDataset@1100525006(IDatasetCode@1100525000 : Code[20];IDatasetDescription@1100525001 : Text[50]);
    VAR
      Dataset@1100525002 : Record 11129000;
    BEGIN
      WITH Dataset DO BEGIN
        INIT;
        Code := IDatasetCode;
        Description := IDatasetDescription;
        INSERT;
      END;
    END;

    LOCAL PROCEDURE UpdateDatapart@1100525004(IDatapartCode@1100525001 : Code[20];IObjectType@1100525008 : Option;IObjectID@1100525003 : Integer;IWebserviceName@1100525004 : Text[240];IDatapartDescription@1100525002 : Text[50]);
    VAR
      Datapart@1100525007 : Record 11129001;
      TempOldDatapart@1100528800 : Record 11129001;
    BEGIN
      IF NOT Datapart.GET(IDatapartCode, FALSE) THEN
        AddDatapart(IDatapartCode, IObjectType, IObjectID, IWebserviceName, IDatapartDescription)
      ELSE BEGIN
        WITH Datapart DO BEGIN
          TempOldDatapart.COPY(Datapart);
          "Object Type" := IObjectType;
          "Object ID" := IObjectID;
          "Web Service Name" := IWebserviceName;
          Description := IDatapartDescription;
          MODIFY;
          UpdateDatapartWebService(TempOldDatapart, Datapart);
        END;
      END;
    END;

    LOCAL PROCEDURE AddDatapart@1100525011(IDatapartCode@1100525005 : Code[20];IObjectType@1100525004 : Option;IObjectID@1100525003 : Integer;IWebserviceName@1100525002 : Text[240];IDatapartDescription@1100525001 : Text[50]);
    VAR
      Datapart@1100525000 : Record 11129001;
    BEGIN
      IF Datapart.GET(IDatapartCode, FALSE) THEN
        EXIT;
      WITH Datapart DO BEGIN
        INIT;
        Code := IDatapartCode;
        "Object Type" := IObjectType;
        "Object ID" := IObjectID;
        "Web Service Name" := IWebserviceName;
        Description := IDatapartDescription;
        INSERT;
      END;
    END;

    LOCAL PROCEDURE UpdateDatasetDatapart@1100525025(IDatasetCode@1100525000 : Code[20];IDatapartCode@1100525001 : Code[20]);
    VAR
      DatasetDatapart@1100525007 : Record 11129006;
    BEGIN
      IF NOT DatasetDatapart.GET(IDatasetCode, IDatapartCode, FALSE) THEN
        AddDatasetDatapart(IDatasetCode, IDatapartCode);
    END;

    LOCAL PROCEDURE AddDatasetDatapart@1100525024(IDatasetCode@1100525001 : Code[20];IDatapartCode@1100525002 : Code[20]);
    VAR
      DatasetDatapart@1100525000 : Record 11129006;
    BEGIN
      IF DatasetDatapart.GET(IDatasetCode, IDatapartCode, FALSE) THEN
        EXIT;

      WITH DatasetDatapart DO BEGIN
        INIT;
        Dataset := IDatasetCode;
        Datapart := IDatapartCode;
        INSERT;
      END;
    END;

    PROCEDURE InitDatePeriod@1100525001();
    VAR
      DatePeriod@1100525000 : Record 11129003;
      FromDate@1100525001 : Date;
      ToDate@1100525002 : Date;
      CurrentDate@1100525003 : Date;
      EmptyDateFormula@1100525004 : DateFormula;
    BEGIN
      DatePeriod.DELETEALL;
      GetDatasetPeriodFilter(FromDate, ToDate);

      CurrentDate := FromDate;
      REPEAT
        IF DatePeriod.GET(CurrentDate) THEN
          EXIT;
        DatePeriod.INIT;
        DatePeriod."Reference Date" := CurrentDate;
        DatePeriod.INSERT(TRUE);
        CurrentDate :=  CurrentDate + 1;
      UNTIL CurrentDate = ToDate;
    END;

    PROCEDURE GetDatasetPeriodFilter@1100525008(VAR FromDate@1100525001 : Date;VAR ToDate@1100525005 : Date);
    VAR
      DatasetSetup@1100525002 : Record 11129004;
      EmptyDateFormula@1100525004 : DateFormula;
    BEGIN
      DatasetSetup.GET;
      IF DatasetSetup."Date From" = 0D THEN
        FromDate :=  CALCDATE('<CY-2Y+1D>', TODAY)
      ELSE
        FromDate := DatasetSetup."Date From";

      IF DatasetSetup."Period Future" = EmptyDateFormula THEN
        ToDate := CALCDATE('<CY+2Y-1D>', TODAY)
      ELSE
        ToDate := CALCDATE(DatasetSetup."Period Future", TODAY);
    END;

    PROCEDURE ToggleDatapartActivation@1100525012(DatasetDatapart@1100525000 : Record 11129006);
    BEGIN
      IF DatasetDatapart.Activated THEN
        HandleDatapartActivation(DatasetDatapart.Datapart)
      ELSE
        HandleDatapartDeactivation(DatasetDatapart.Dataset, DatasetDatapart.Datapart);
    END;

    PROCEDURE HandleDatasetActivation@1100528804(IDatasetCode@1100525000 : Code[20]);
    VAR
      DatasetDatapart@1100525001 : Record 11129006;
    BEGIN
      DatasetDatapart.SETRANGE(Dataset, IDatasetCode);
      DatasetDatapart.SETRANGE(Activated, FALSE);
      IF DatasetDatapart.FINDSET THEN
        REPEAT
          DatasetDatapart.VALIDATE(Activated, TRUE);
          DatasetDatapart.MODIFY;
        UNTIL DatasetDatapart.NEXT = 0;
    END;

    LOCAL PROCEDURE HandleDatapartActivation@1100525009(IDatapartCode@1100525000 : Code[20]);
    BEGIN
      CreateDatapartWebService(IDatapartCode);
    END;

    PROCEDURE HandleDatasetDeactivation@1100528805(IDatasetCode@1100525000 : Code[20]);
    VAR
      DatasetDatapart@1100525001 : Record 11129006;
    BEGIN
      DatasetDatapart.SETRANGE(Dataset, IDatasetCode);
      IF DatasetDatapart.FINDSET THEN
        REPEAT
            HandleDatapartDeactivation(IDatasetCode, DatasetDatapart.Datapart);
            DatasetDatapart.Activated := FALSE;
            DatasetDatapart.MODIFY;
        UNTIL DatasetDatapart.NEXT = 0;
    END;

    LOCAL PROCEDURE HandleDatapartDeactivation@1100525007(IDatasetCode@1100525001 : Code[20];IDatapartCode@1100525000 : Code[20]);
    BEGIN
      DeleteDatapartWebService(IDatasetCode, IDatapartCode);
    END;

    LOCAL PROCEDURE CreateDatapartWebService@8(IDatapartCode@1100528800 : Code[20]);
    VAR
      Datapart@1100525000 : Record 11129001;
      WebService@1000 : Record 2000000076;
      WebServiceManagement@1001 : Codeunit 9750;
    BEGIN
      IF NOT Datapart.GET(IDatapartCode, FALSE) THEN
        IF NOT Datapart.GET(IDatapartCode, TRUE) THEN
          EXIT;

      IF WebService.GET(Datapart."Object Type", Datapart."Web Service Name") THEN
        IF WebService.Published THEN
          EXIT
        ELSE BEGIN
          WebService.Published := TRUE;
          WebService.MODIFY(TRUE);
        END
      ELSE BEGIN
        WebServiceManagement.CreateWebService(
          Datapart."Object Type",
          Datapart."Object ID",
          Datapart."Web Service Name",
          TRUE);
      END;
    END;

    LOCAL PROCEDURE DeleteDatapartWebService@12(IDatasetCode@1100525001 : Code[20];IDatapartCode@1100528800 : Code[20]) : Boolean;
    VAR
      Webservice@1100525002 : Record 2000000076;
      Datapart@1100525000 : Record 11129001;
    BEGIN
      IF NOT Datapart.GET(IDatapartCode, FALSE) THEN
        IF NOT Datapart.GET(IDatapartCode, TRUE) THEN
          EXIT;

      IF Webservice.GET(Datapart."Object Type", Datapart."Web Service Name") THEN
        IF NOT WebserviceIsActiveInOtherDataset(IDatasetCode, IDatapartCode) THEN BEGIN
          Webservice.DELETE(TRUE);
          EXIT(TRUE);
        END;
    END;

    PROCEDURE UpdateDatapartWebService@1100528800(VAR TempOldDatapart@1100528800 : TEMPORARY Record 11129001;NewDatapart@1100528802 : Record 11129001);
    VAR
      WebService@1100528801 : Record 2000000076;
    BEGIN
      IF WebService.GET(TempOldDatapart."Object Type", TempOldDatapart."Web Service Name") THEN BEGIN
        IF (TempOldDatapart."Object Type" <> NewDatapart."Object Type") OR
          (TempOldDatapart."Web Service Name" <> NewDatapart."Web Service Name") THEN
          WebService.RENAME(NewDatapart."Object Type",NewDatapart."Web Service Name");
        WebService."Object ID" := NewDatapart."Object ID";
        WebService.MODIFY;
      END;
    END;

    PROCEDURE WebserviceIsActiveInOtherDataset@1100525002(IDatasetCode@1100525002 : Code[20];IDatapartCode@1100525003 : Code[20]) : Boolean;
    VAR
      DatasetDatapart@1100525001 : Record 11129006;
    BEGIN
      DatasetDatapart.SETFILTER(Dataset, '<>%1', IDatasetCode);
      DatasetDatapart.SETRANGE(Datapart, IDatapartCode);
      DatasetDatapart.SETRANGE(Activated, TRUE);
      IF DatasetDatapart.FINDFIRST THEN
        EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}

