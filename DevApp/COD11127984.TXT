OBJECT Codeunit 11127984 ImportOrders
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            CLEAR(SymbrioMgmt);
            //SymbrioMgmt.SearchPurchaseFolder2();


            IF NOT SymbrioSetup.GET THEN
              EXIT;

            SymbrioSetup.TESTFIELD("Purchase Import Path");

            DirectoryInfo := DirectoryInfo.DirectoryInfo(SymbrioSetup."Purchase Import Path");
            List := DirectoryInfo.GetFiles('*.xml');
            enumerator := List.GetEnumerator();

            WHILE enumerator.MoveNext DO BEGIN
              FileInfo:= enumerator.Current();

            //>>SYM1000
              varXmlFile.OPEN(FileInfo.FullName);
              varXmlFile.CREATEINSTREAM(varInputStream);
              SymbrioImportPurchaseOrder.SetFileName(FileInfo.Name,FileInfo.FullName);
              SymbrioImportPurchaseOrder.SETSOURCE(varInputStream);
              IF SymbrioImportPurchaseOrder.IMPORT THEN BEGIN
                varXmlFile.CLOSE;
            //  IF SymbrioMgmt.ProcessPurchaseFile2(FileInfo.FullName) THEN BEGIN
            //<<SYM1000
                //move to archive
                IF EXISTS(SymbrioSetup."Archive Folder" + FileInfo.Name) THEN
                  ERASE(SymbrioSetup."Archive Folder" + FileInfo.Name);
                FileInfo.MoveTo(SymbrioSetup."Archive Folder" + FileInfo.Name);
              END
              ELSE BEGIN
            //>>SYM1000
                varXmlFile.CLOSE;
            //<<SYM1000
                //move to error-folder
                IF EXISTS(SymbrioSetup."Error file folder" + FileInfo.Name) THEN
                  ERASE(SymbrioSetup."Error file folder" + FileInfo.Name);
                FileInfo.MoveTo(SymbrioSetup."Error file folder" + FileInfo.Name);

                //ERROR('Failed to read '+FileInfo.FullName);
                SymbrioErrorLog.InsertNewErrorLine('Failed to read '+FileInfo.Name,'ImportOrders','')
              END;
              COMMIT;
            END;
          END;

  }
  CODE
  {
    VAR
      SymbrioMgmt@1100285000 : Codeunit 11127976;
      SymbrioSetup@1100285504 : Record 11127975;
      DirectoryInfo@1100285500 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.DirectoryInfo";
      FileInfo@1100285501 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.FileInfo";
      List@1100285502 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Generic.List`1";
      enumerator@1100285503 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.IEnumerator";
      errText@1100285505 : Text;
      SymbrioErrorLog@1100285506 : Record 11127987;
      SymbrioImportPurchaseOrder@1100285507 : XMLport 11127993;
      varXmlFile@1100285508 : File;
      varInputStream@1100285509 : InStream;

    BEGIN
    {
      SYM939 Created

      140226 ITERO.DL SYM993 NAS process stops on error, added error folder
      140306 ITERO.DL added COMMIT after file-movments

      140820 ITERO.DL SYM1000 import orders via XMLport not DotNet/DOM
    }
    END.
  }
}

