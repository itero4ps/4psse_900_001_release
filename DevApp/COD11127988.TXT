OBJECT Codeunit 11127988 ImportInvoices
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            IF NOT SymbrioSetup.GET THEN
              EXIT;

            SymbrioSetup.TESTFIELD("Path Invoice Import");

            DirectoryInfo := DirectoryInfo.DirectoryInfo(SymbrioSetup."Path Invoice Import");
            List := DirectoryInfo.GetFiles('*.xml');
            enumerator := List.GetEnumerator();

            WHILE enumerator.MoveNext DO BEGIN
              FileInfo:= enumerator.Current();

              varXmlFile.OPEN(FileInfo.FullName);
              varXmlFile.CREATEINSTREAM(varInputStream);
              SymbrioImportPurchaseInv.SetFileName(FileInfo.Name,FileInfo.FullName);
              SymbrioImportPurchaseInv.SETSOURCE(varInputStream);

              IF SymbrioImportPurchaseInv.IMPORT THEN BEGIN
                varXmlFile.CLOSE;
                IF EXISTS(SymbrioSetup."Archive Folder" + FileInfo.Name) THEN
                  ERASE(SymbrioSetup."Archive Folder" + FileInfo.Name);
                //RENAME(FileInfo.FullName, SymbrioSetup."Archive Folder" +FileInfo.Name);
                FileInfo.MoveTo(SymbrioSetup."Archive Folder" +FileInfo.Name);
                COMMIT;
              END ELSE BEGIN
                varXmlFile.CLOSE;
                IF EXISTS(SymbrioSetup."Error file folder" + FileInfo.Name) THEN
                  ERASE(SymbrioSetup."Error file folder" + FileInfo.Name);
                //RENAME(FileInfo.FullName,SymbrioSetup."Archive Folder" +FileInfo.Name);
                FileInfo.MoveTo(SymbrioSetup."Error file folder" +FileInfo.Name);
                IF gsetError THEN BEGIN
                  SymbrioErrorLog.InsertNewErrorLine('Failed to read '+FileInfo.Name,'ImportInvoices','');
                  ERROR(GETLASTERRORTEXT);
                END
                ELSE
                  EXIT;
              END;
            END;
          END;

  }
  CODE
  {
    VAR
      SymbrioSetup@1100285000 : Record 11127975;
      varXmlFile@1100285002 : File;
      varInputStream@1100285003 : InStream;
      SymbrioErrorLog@1100285005 : Record 11127987;
      SymbrioImportPurchaseInv@1100285006 : XMLport 11127991;
      RetVal@1100285007 : Boolean;
      gsetError@1100285500 : Boolean;
      DirectoryInfo@1100285505 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.DirectoryInfo";
      FileInfo@1100285504 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.FileInfo";
      List@1100285503 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Generic.List`1";
      enumerator@1100285502 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.IEnumerator";
      Text009@1100285509 : TextConst 'ENU=All Files (*.*)|*.*';

    PROCEDURE SetExitOnError@1100285500(setError@1100285500 : Boolean);
    BEGIN
      //140220 SYM982 Itero.DL, error handling
      gsetError := setError;
    END;

    BEGIN
    {
      SYM939 Created
      140220 SYM982 Itero.DL, error handling
      140226 ITERO.DL SYM993 NAS process stops on error, added error folder, rewrite to DotNet
      140306 ITERO.DL added COMMIT after file-movments
    }
    END.
  }
}

