OBJECT Codeunit 11128000 SE Utils
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    OnRun=VAR
            i@1100530600 : Integer;
            str1024@1100530601 : Text[1024];
          BEGIN
          END;

  }
  CODE
  {
    VAR
      gAnsiTxt@1000000001 : Text[250];
      gAsciiTxt@1000000000 : Text[250];

    PROCEDURE DMYT2DT@1100530633(value@1100530600 : Text[20]) outDateTime : DateTime;
    VAR
      sy@1100530608 : Text[4];
      sm@1100530607 : Text[2];
      sd@1100530606 : Text[2];
      stim@1100530605 : Text[2];
      smin@1100530604 : Text[2];
      ssek@1100530603 : Text[2];
      yy@1100530614 : Integer;
      mm@1100530613 : Integer;
      dd@1100530612 : Integer;
      fdate@1100530602 : Date;
      ftime@1100530601 : Time;
    BEGIN
            //ss††mmddYYMMSS
      sy := COPYSTR(value,1,4);
      sm := COPYSTR(value,5,2);
      sd := COPYSTR(value,7,2);
      stim := COPYSTR(value,9,2);
      smin := COPYSTR(value,11,2);
      ssek := COPYSTR(value,13,2);

      IF NOT EVALUATE(yy,sy) THEN yy := 0;
      IF NOT EVALUATE(dd,sd) THEN dd := 1;
      IF NOT EVALUATE(mm,sm) THEN mm := 1;

      IF (dd=0) OR (mm=0) THEN
        ERROR('Illegal date '+value);

      fdate := DMY2DATE(dd,mm,yy);
      IF STRLEN(value) > 8 THEN
        EVALUATE(ftime,stim+':'+smin+':'+ssek);

      outDateTime := CREATEDATETIME(fdate,ftime);
    END;

    PROCEDURE leftAlignText@1000000042(bredd@1000000001 : Integer;inrad@1000000000 : Text[1024]) : Text[1024];
    VAR
      cu2@1000000002 : Codeunit 2;
    BEGIN
      inrad:=Ascii2Ansi(inrad);
      inrad:=inrad+PADSTR('',bredd,' ');
      inrad:=COPYSTR(inrad,1,bredd);
      EXIT(inrad);
    END;

    PROCEDURE rightAlignText@1000000043(bredd@1000000001 : Integer;inrad@1000000000 : Text[1024]) : Text[1024];
    VAR
      cu2@1000000002 : Codeunit 2;
      s@1000000003 : Text[1024];
    BEGIN
      inrad:=Ascii2Ansi(inrad);
      bredd:=bredd-1;
      inrad:=PADSTR('',bredd+1,' ')+inrad;
      IF STRLEN(inrad)>bredd THEN
        inrad:=COPYSTR(inrad,STRLEN(inrad)-bredd);
      EXIT(inrad);
    END;

    PROCEDURE rightAlignNum@1000000021(bredd@1000000001 : Integer;inrad@1000000000 : Text[1024]) : Text[1024];
    VAR
      cu2@1000000002 : Codeunit 2;
      s@1000000003 : Text[1024];
    BEGIN
      IF inrad = '' THEN
        inrad:='0';
      inrad:=Ascii2Ansi(inrad);
      bredd:=bredd-1;
      inrad:=PADSTR('',bredd,'0')+inrad;
      IF STRLEN(inrad)>bredd THEN
        inrad:=COPYSTR(inrad,STRLEN(inrad)-bredd);
      EXIT(inrad);
    END;

    LOCAL PROCEDURE int2hex@1100285096(inInt@1100285000 : Integer) : Text[30];
    VAR
      outStr@1100285002 : Text[1024];
      hexCharStr@1100285003 : Text[30];
      b@1100285001 : Integer;
      r@1100285004 : Integer;
    BEGIN
      IF (inInt > 255) OR (inInt<0) THEN
        ERROR('unsupported value');

      hexCharStr := '0123456789ABCDEF';
      b := 1 + inInt MOD 16;
      r := 1 + inInt DIV 16;
      EXIT('0x'+FORMAT(hexCharStr[r])+FORMAT(hexCharStr[b]));
    END;

    PROCEDURE CleanTextFromNonPrintable@1100285501(intext@1100285500 : Text[1024]) : Text[1024];
    VAR
      i@1100285501 : Integer;
      newText@1100285502 : Text[1024];
    BEGIN
      //This issue is related to NON-printable characters that are in the project name.
      //These characters will also not be shown on the screen.
      //When you run the codeunit manual you get this error.

      IF intext = '' THEN EXIT('');

      IF CheckTextFromNonPrintable(intext) THEN
        EXIT(intext);

      newText := '';
      FOR i := 1 TO STRLEN(intext) DO BEGIN
        IF (intext[i] > 31) THEN
          newText += FORMAT(intext[i])
        ELSE
        IF (intext[i] = 9) THEN  //<TAB>
          newText += ' ';
      END;

      EXIT(newText);
    END;

    LOCAL PROCEDURE CheckTextFromNonPrintable@1100525000(VAR intext@1100525000 : Text[1024]) : Boolean;
    VAR
      i@1100525003 : Integer;
      isClean@1100525001 : Boolean;
    BEGIN
      FOR i := 1 TO STRLEN(intext) DO
        IF (intext[i] < 32) THEN
           EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE CreateCustomer@1100285005(SO@1100285000 : Record 11012823) CustNo : Code[10];
    VAR
      MESS001@1100285001 : TextConst;
      NoSerie@1100285002 : Codeunit 396;
      SESetup@1100285003 : Record 11128004;
      SESetupMall@1100285004 : Record 11128004;
      Cust@1100285005 : Record 18;
      TempCust@1100285006 : Record 5105;
    BEGIN

      IF SO."Customer No." <> '' THEN BEGIN
        MESSAGE(MESS001,SO."No.");
      END ELSE BEGIN
        SESetup.SETRANGE("Line type",SESetup."Line type"::Setup);
        SESetup.SETRANGE(Code,'SERVICE');
        SESetup.SETRANGE("Code 2",'KUNDNR');
        IF SESetup.FIND('-') THEN BEGIN
          Cust.INIT;
          Cust."No." := '';
          Cust."No. Series" := SESetup."Value (txt)";
          Cust.INSERT(TRUE);
          SESetupMall.SETRANGE("Line type",SESetup."Line type"::Setup);
          SESetupMall.SETRANGE(Code,'SERVICE');
          SESetupMall.SETRANGE("Code 2",'KUNDMALL');
          IF SESetupMall.FIND('-') THEN BEGIN
            IF TempCust.GET(SESetupMall."Value (txt)") THEN
              Cust.CreateCustFromTemplate(TempCust);
          END;
          Cust.VALIDATE(Name,SO.Name);
          Cust."Name 2" := SO."Name 2";
          Cust.Address := SO.Address;
          Cust."Address 2" := SO."Address 2";
          Cust.City := SO.City;
          Cust.Contact := SO."Contact Name";
          Cust."Phone No." := SO."Phone No.";
          Cust."Fax No." := SO."Fax No.";
          Cust."Post Code" := SO."Post Code";
          Cust."E-Mail" := SO."E-Mail";
          Cust.MODIFY();
          EXIT(Cust."No.");
        END;
      END;
    END;

    PROCEDURE Ansi2Ascii@1000000001(pText@1000 : Text[1024]) : Text[1024];
    BEGIN
      SetAnsiAscii;
      EXIT(CONVERTSTR(pText,gAnsiTxt,gAsciiTxt));
    END;

    PROCEDURE Ascii2Ansi@1000000000(pText@1000 : Text[1024]) : Text[1024];
    BEGIN
      SetAnsiAscii;
      EXIT(CONVERTSTR(pText,gAsciiTxt,gAnsiTxt));
    END;

    LOCAL PROCEDURE SetAnsiAscii@1100570006();
    BEGIN
      IF gAnsiTxt > '' THEN
        EXIT;

      gAsciiTxt[1] := 8364;
      gAsciiTxt[2] := 8218;
      gAsciiTxt[3] := 402;
      gAsciiTxt[4] := 8222;
      gAsciiTxt[5] := 8230;
      gAsciiTxt[6] := 8224;
      gAsciiTxt[7] := 8225;
      gAsciiTxt[8] := 710;
      gAsciiTxt[9] := 8240;
      gAsciiTxt[10] := 352;
      gAsciiTxt[11] := 8249;
      gAsciiTxt[12] := 338;
      gAsciiTxt[13] := 381;
      gAsciiTxt[14] := 8216;
      gAsciiTxt[15] := 8217;
      gAsciiTxt[16] := 8220;
      gAsciiTxt[17] := 8221;
      gAsciiTxt[18] := 8226;
      gAsciiTxt[19] := 8211;
      gAsciiTxt[20] := 8212;
      gAsciiTxt[21] := 732;
      gAsciiTxt[22] := 8482;
      gAsciiTxt[23] := 353;
      gAsciiTxt[24] := 8250;
      gAsciiTxt[25] := 339;
      gAsciiTxt[26] := 382;
      gAsciiTxt[27] := 376;
      gAsciiTxt[28] := 161;
      gAsciiTxt[29] := 162;
      gAsciiTxt[30] := 163;
      gAsciiTxt[31] := 164;
      gAsciiTxt[32] := 165;
      gAsciiTxt[33] := 166;
      gAsciiTxt[34] := 167;
      gAsciiTxt[35] := 168;
      gAsciiTxt[36] := 169;
      gAsciiTxt[37] := 170;
      gAsciiTxt[38] := 171;
      gAsciiTxt[39] := 172;
      gAsciiTxt[40] := 173;
      gAsciiTxt[41] := 174;
      gAsciiTxt[42] := 175;
      gAsciiTxt[43] := 176;
      gAsciiTxt[44] := 177;
      gAsciiTxt[45] := 178;
      gAsciiTxt[46] := 179;
      gAsciiTxt[47] := 180;
      gAsciiTxt[48] := 181;
      gAsciiTxt[49] := 182;
      gAsciiTxt[50] := 183;
      gAsciiTxt[51] := 184;
      gAsciiTxt[52] := 185;
      gAsciiTxt[53] := 186;
      gAsciiTxt[54] := 187;
      gAsciiTxt[55] := 188;
      gAsciiTxt[56] := 189;
      gAsciiTxt[57] := 190;
      gAsciiTxt[58] := 191;
      gAsciiTxt[59] := 192;
      gAsciiTxt[60] := 193;
      gAsciiTxt[61] := 194;
      gAsciiTxt[62] := 195;
      gAsciiTxt[63] := 196;
      gAsciiTxt[64] := 197;
      gAsciiTxt[65] := 198;
      gAsciiTxt[66] := 199;
      gAsciiTxt[67] := 200;
      gAsciiTxt[68] := 201;
      gAsciiTxt[69] := 202;
      gAsciiTxt[70] := 203;
      gAsciiTxt[71] := 204;
      gAsciiTxt[72] := 205;
      gAsciiTxt[73] := 206;
      gAsciiTxt[74] := 207;
      gAsciiTxt[75] := 208;
      gAsciiTxt[76] := 209;
      gAsciiTxt[77] := 210;
      gAsciiTxt[78] := 211;
      gAsciiTxt[79] := 212;
      gAsciiTxt[80] := 213;
      gAsciiTxt[81] := 214;
      gAsciiTxt[82] := 215;
      gAsciiTxt[83] := 216;
      gAsciiTxt[84] := 217;
      gAsciiTxt[85] := 218;
      gAsciiTxt[86] := 219;
      gAsciiTxt[87] := 220;
      gAsciiTxt[88] := 221;
      gAsciiTxt[89] := 222;
      gAsciiTxt[90] := 223;
      gAsciiTxt[91] := 224;
      gAsciiTxt[92] := 225;
      gAsciiTxt[93] := 226;
      gAsciiTxt[94] := 227;
      gAsciiTxt[95] := 228;
      gAsciiTxt[96] := 229;
      gAsciiTxt[97] := 230;
      gAsciiTxt[98] := 231;
      gAsciiTxt[99] := 232;
      gAsciiTxt[100] := 233;
      gAsciiTxt[101] := 234;
      gAsciiTxt[102] := 235;
      gAsciiTxt[103] := 236;
      gAsciiTxt[104] := 237;
      gAsciiTxt[105] := 238;
      gAsciiTxt[106] := 239;
      gAsciiTxt[107] := 240;
      gAsciiTxt[108] := 242;
      gAsciiTxt[109] := 243;
      gAsciiTxt[110] := 244;
      gAsciiTxt[111] := 245;
      gAsciiTxt[112] := 246;
      gAsciiTxt[113] := 247;
      gAsciiTxt[114] := 248;
      gAsciiTxt[115] := 249;
      gAsciiTxt[116] := 250;
      gAsciiTxt[117] := 251;
      gAsciiTxt[118] := 252;
      gAsciiTxt[119] := 253;
      gAsciiTxt[120] := 254;
      gAsciiTxt[121] := 255;

      gAnsiTxt[1] := 199;
      gAnsiTxt[2] := 233;
      gAnsiTxt[3] := 226;
      gAnsiTxt[4] := 228;
      gAnsiTxt[5] := 224;
      gAnsiTxt[6] := 229;
      gAnsiTxt[7] := 231;
      gAnsiTxt[8] := 234;
      gAnsiTxt[9] := 235;
      gAnsiTxt[10] := 232;
      gAnsiTxt[11] := 239;
      gAnsiTxt[12] := 238;
      gAnsiTxt[13] := 196;
      gAnsiTxt[14] := 230;
      gAnsiTxt[15] := 198;
      gAnsiTxt[16] := 244;
      gAnsiTxt[17] := 246;
      gAnsiTxt[18] := 242;
      gAnsiTxt[19] := 251;
      gAnsiTxt[20] := 249;
      gAnsiTxt[21] := 255;
      gAnsiTxt[22] := 214;
      gAnsiTxt[23] := 220;
      gAnsiTxt[24] := 248;
      gAnsiTxt[25] := 163;
      gAnsiTxt[26] := 215;
      gAnsiTxt[27] := 402;
      gAnsiTxt[28] := 237;
      gAnsiTxt[29] := 243;
      gAnsiTxt[30] := 250;
      gAnsiTxt[31] := 241;
      gAnsiTxt[32] := 209;
      gAnsiTxt[33] := 170;
      gAnsiTxt[34] := 186;
      gAnsiTxt[35] := 191;
      gAnsiTxt[36] := 174;
      gAnsiTxt[37] := 172;
      gAnsiTxt[38] := 189;
      gAnsiTxt[39] := 188;
      gAnsiTxt[40] := 161;
      gAnsiTxt[41] := 171;
      gAnsiTxt[42] := 187;
      gAnsiTxt[43] := 8364;
      gAnsiTxt[44] := 129;
      gAnsiTxt[45] := 8218;
      gAnsiTxt[46] := 8222;
      gAnsiTxt[47] := 8230;
      gAnsiTxt[48] := 193;
      gAnsiTxt[49] := 194;
      gAnsiTxt[50] := 192;
      gAnsiTxt[51] := 169;
      gAnsiTxt[52] := 8224;
      gAnsiTxt[53] := 8225;
      gAnsiTxt[54] := 710;
      gAnsiTxt[55] := 8240;
      gAnsiTxt[56] := 162;
      gAnsiTxt[57] := 165;
      gAnsiTxt[58] := 352;
      gAnsiTxt[59] := 8249;
      gAnsiTxt[60] := 338;
      gAnsiTxt[61] := 141;
      gAnsiTxt[62] := 381;
      gAnsiTxt[63] := 143;
      gAnsiTxt[64] := 144;
      gAnsiTxt[65] := 227;
      gAnsiTxt[66] := 195;
      gAnsiTxt[67] := 8216;
      gAnsiTxt[68] := 8217;
      gAnsiTxt[69] := 8220;
      gAnsiTxt[70] := 8221;
      gAnsiTxt[71] := 8226;
      gAnsiTxt[72] := 8211;
      gAnsiTxt[73] := 8212;
      gAnsiTxt[74] := 164;
      gAnsiTxt[75] := 240;
      gAnsiTxt[76] := 208;
      gAnsiTxt[77] := 202;
      gAnsiTxt[78] := 203;
      gAnsiTxt[79] := 200;
      gAnsiTxt[80] := 732;
      gAnsiTxt[81] := 205;
      gAnsiTxt[82] := 206;
      gAnsiTxt[83] := 207;
      gAnsiTxt[84] := 8482;
      gAnsiTxt[85] := 353;
      gAnsiTxt[86] := 8250;
      gAnsiTxt[87] := 339;
      gAnsiTxt[88] := 166;
      gAnsiTxt[89] := 204;
      gAnsiTxt[90] := 157;
      gAnsiTxt[91] := 211;
      gAnsiTxt[92] := 223;
      gAnsiTxt[93] := 212;
      gAnsiTxt[94] := 210;
      gAnsiTxt[95] := 245;
      gAnsiTxt[96] := 213;
      gAnsiTxt[97] := 181;
      gAnsiTxt[98] := 254;
      gAnsiTxt[99] := 222;
      gAnsiTxt[100] := 218;
      gAnsiTxt[101] := 219;
      gAnsiTxt[102] := 217;
      gAnsiTxt[103] := 253;
      gAnsiTxt[104] := 221;
      gAnsiTxt[105] := 175;
      gAnsiTxt[106] := 180;
      gAnsiTxt[107] := 173;
      gAnsiTxt[108] := 382;
      gAnsiTxt[109] := 190;
      gAnsiTxt[110] := 182;
      gAnsiTxt[111] := 167;
      gAnsiTxt[112] := 247;
      gAnsiTxt[113] := 184;
      gAnsiTxt[114] := 176;
      gAnsiTxt[115] := 168;
      gAnsiTxt[116] := 183;
      gAnsiTxt[117] := 185;
      gAnsiTxt[118] := 179;
      gAnsiTxt[119] := 178;
      gAnsiTxt[120] := 376;
      gAnsiTxt[121] := 160;
    END;

    BEGIN
    {
      160927 ITERO.DL IME487 moved/updated Ansi2Ascii,Ascii2Ansi from cod11128271
    }
    END.
  }
}

