OBJECT Codeunit 11128010 Inward Reg.-Post
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVSE7.10 (11200);
  }
  PROPERTIES
  {
    TableNo=11128010;
    OnRun=BEGIN
            InwHeader.COPY(Rec);
            WITH InwHeader DO BEGIN
              TESTFIELD("Vendor Invoice No.");
              TESTFIELD("Posting Date");
              SourceCodeSetup.GET;
              PurchSetup.GET;

              VendPostingGr.GET("Vendor Posting Group");
              VendPostingGr.TESTFIELD("Inward Reg. Bridging Debt");

              TotAmountInclVAT := 0;
              NextLineNo := 10000;
              PostingDate := "Posting Date";
              // 040126 FF
              FirstTime := TRUE;
              DimensionsOnTotalTrans := TRUE;

              MakeInwRegEntries;
              MakeGenJnlLineTotal;

              Status := Status::Posted;
              MODIFY;
            END;

            Rec := InwHeader;
          END;

  }
  CODE
  {
    VAR
      InwHeader@1070000 : Record 11128010;
      InwRegLines@1070001 : Record 11128011;
      InwRegEntry@1070002 : Record 11128012;
      NextEntryNo@1070003 : Integer;
      GenJnlLine@1070004 : Record 81;
      TotAmountInclVAT@1070005 : Decimal;
      SourceCodeSetup@1070006 : Record 242;
      PurchSetup@1070007 : Record 312;
      VendPostingGr@1070008 : Record 93;
      NextLineNo@1070009 : Integer;
      GenPostingSetup@1070010 : Record 252;
      PostingDate@1070011 : Date;
      GenJnlPostLine@1070012 : Codeunit 12;
      ConsolidGLEntry@1070013 : Record 17;
      Text001@1070014 : TextConst 'ENU=There is nothing to post.';
      Text002@1070015 : TextConst 'ENU=%1 %2 %3 does not exist.';
      Text003@1070016 : TextConst 'ENU=%1 does not exist.';
      FirstTime@1070022 : Boolean;
      PreviousDim1Code@1070023 : Code[20];
      PreviousDim2Code@1070024 : Code[20];
      DimensionsOnTotalTrans@1070025 : Boolean;

    PROCEDURE MakeInwRegEntries@1070001();
    BEGIN
      // MakeInwRegEntries
      WITH InwHeader DO BEGIN
        IF InwRegEntry.FIND('+') THEN
          NextEntryNo := InwRegEntry."Entry No." + 1
        ELSE
          NextEntryNo := 1;

        InwRegLines.SETRANGE("Document No.","No.");
        IF NOT InwRegLines.FIND('-') THEN
          ERROR(Text001);

        ConsolidGLEntry.LOCKTABLE;
        REPEAT
          IF ConsolidGLEntry.FIND('+') THEN;
          MakeInwRegEntry;
          MakeGenJnlLine;

          ConsolidGLEntry.NEXT;
          InwRegEntry."Ledger VAT Amount" := ConsolidGLEntry."VAT Amount";
          InwRegEntry."Ledger Debit Amount" := ConsolidGLEntry."Debit Amount";
          InwRegEntry."Ledger Credit Amount" := ConsolidGLEntry."Credit Amount";
          InwRegEntry."Ledger VAT Amount (LCY)" := ConsolidGLEntry."VAT Amount";
          InwRegEntry.INSERT(TRUE);

        UNTIL InwRegLines.NEXT = 0;

        InwRegLines.DELETEALL(TRUE);
      END;
    END;

    PROCEDURE MakeInwRegEntry@1070004();
    BEGIN
      // MakeInwRegEntry
      InwRegEntry.INIT;
      InwRegEntry."Entry No." := NextEntryNo;
      InwRegEntry.Open := TRUE;
      InwRegEntry."Document No." := InwHeader."No.";
      InwRegEntry."Source Type" := InwHeader."Document Type";
      InwRegEntry."Source No." := InwHeader."Document No.";
      InwRegEntry."Posting Date" := InwHeader."Posting Date";
      InwRegEntry."Vendor Posting Group" := InwHeader."Vendor Posting Group";
      InwRegEntry."Gen. Bus. Posting Group" := InwHeader."Gen. Bus. Posting Group";
      InwRegEntry."Vendor No." := InwHeader."Vendor No.";
      InwRegEntry."Document No." := InwRegLines."Document No.";
      InwRegEntry."Line No." := InwRegLines."Line No.";
      InwRegEntry."VAT Prod. Posting Group" := InwRegLines."VAT Prod. Posting Group";
      InwRegEntry."VAT Bus. Posting Group" := InwRegLines."VAT Bus. Posting Group";
      InwRegEntry."VAT Calculation Type" := InwRegLines."VAT Calculation Type";
      InwRegEntry."VAT %" := InwRegLines."VAT %";
      InwRegEntry."Gen. Prod. Posting Group" := InwRegLines."Gen. Prod. Posting Group";
      InwRegEntry."Amount (LCY)" := InwRegEntry."Amount (LCY)" + InwRegLines."Amount (LCY)";
      InwRegEntry.Amount := InwRegLines.Amount;
      InwRegEntry."Currency Code" := InwHeader."Currency Code";
      InwRegEntry."VAT Amount" := InwRegEntry."VAT Amount" + InwRegLines."VAT Amount";
      InwRegEntry."Amount Including VAT (LCY)" := InwRegEntry."Amount Including VAT (LCY)" + InwRegLines."Amount Including VAT (LCY)";
      InwRegEntry."Vendor Invoice No." := InwHeader."Vendor Invoice No.";
      InwRegEntry."Dimension Set ID" := InwRegLines."Dimension Set ID";
      InwRegEntry."Shortcut Dimension 1 Code" := InwRegLines."Shortcut Dimension 1 Code";
      InwRegEntry."Shortcut Dimension 2 Code" := InwRegLines."Shortcut Dimension 2 Code";

      NextEntryNo := NextEntryNo + 1;
    END;

    PROCEDURE MakeGenJnlLine@1070002();
    BEGIN
      // MakeGenJnlLine
      GenPostingSetup.SETCURRENTKEY("Gen. Bus. Posting Group","Gen. Prod. Posting Group");
      GenPostingSetup.SETRANGE("Gen. Bus. Posting Group",InwRegEntry."Gen. Bus. Posting Group");
      GenPostingSetup.SETRANGE("Gen. Prod. Posting Group",InwRegEntry."Gen. Prod. Posting Group");

      IF NOT GenPostingSetup.FIND('-') THEN
        ERROR(Text002,GenPostingSetup.TABLECAPTION,InwRegEntry.FIELDCAPTION("Gen. Bus. Posting Group"),InwRegEntry.
          FIELDCAPTION("Gen. Prod. Posting Group"));

      IF GenPostingSetup."Inward Reg. Bridging Account" = '' THEN
        ERROR(Text003,GenPostingSetup.FIELDCAPTION("Inward Reg. Bridging Account"));

      GenJnlLine.INIT;
      GenJnlLine."Line No." := NextLineNo;
      GenJnlLine."Account Type" := GenJnlLine."Account Type"::"G/L Account";
      GenJnlLine."Source Code" := SourceCodeSetup."Inward Registration";
      GenJnlLine.Description := PurchSetup."Inward Posting Description";
      GenJnlLine."Account No." := GenPostingSetup."Inward Reg. Bridging Account";
      GenJnlLine."Posting Date" := InwRegEntry."Posting Date";
      GenJnlLine."Document No." := InwRegEntry."Document No.";
      GenJnlLine."Document Type" := GenJnlLine."Document Type"::Invoice;
      GenJnlLine."External Document No." := InwRegEntry."Document No.";
      GenJnlLine."Source No." := InwRegEntry."Vendor No.";
      GenJnlLine."Gen. Posting Type" := GenJnlLine."Gen. Posting Type"::Purchase;
      GenJnlLine."Gen. Bus. Posting Group" := InwRegEntry."Gen. Bus. Posting Group";
      GenJnlLine."Gen. Prod. Posting Group" := InwRegEntry."Gen. Prod. Posting Group";
      GenJnlLine."Shortcut Dimension 1 Code" := InwRegEntry."Shortcut Dimension 1 Code";
      GenJnlLine."Shortcut Dimension 2 Code" := InwRegEntry."Shortcut Dimension 2 Code";
      IF FirstTime THEN BEGIN
        PreviousDim1Code := InwRegEntry."Shortcut Dimension 1 Code";
        PreviousDim2Code := InwRegEntry."Shortcut Dimension 2 Code";
        FirstTime := FALSE;
      END
      ELSE
        IF (GenJnlLine."Shortcut Dimension 1 Code" <> PreviousDim1Code) OR
           (GenJnlLine."Shortcut Dimension 2 Code" <> PreviousDim2Code)
        THEN
          DimensionsOnTotalTrans := FALSE;

      GenJnlLine.Quantity := 0;
      GenJnlLine."Gen. Posting Type" := GenJnlLine."Gen. Posting Type"::Purchase;
      GenJnlLine."VAT Bus. Posting Group" := InwRegEntry."VAT Bus. Posting Group";
      GenJnlLine."VAT Prod. Posting Group" := InwRegEntry."VAT Prod. Posting Group";
      GenJnlLine."VAT Calculation Type" := InwRegEntry."VAT Calculation Type";
      GenJnlLine."VAT %" := InwRegEntry."VAT %";
      GenJnlLine."System-Created Entry" := TRUE;
      GenJnlLine.VALIDATE(Amount,InwRegEntry."Amount Including VAT (LCY)");
      GenJnlLine."Dimension Set ID" := InwRegEntry."Dimension Set ID";

      TotAmountInclVAT := TotAmountInclVAT + InwRegEntry."Amount Including VAT (LCY)";
      NextLineNo := NextLineNo + 10000;

      GenJnlPostLine.RunWithCheck(GenJnlLine);
    END;

    PROCEDURE MakeGenJnlLineTotal@1070003();
    BEGIN
      // MakeGenJnlLineTotal
      GenJnlLine.INIT;
      GenJnlLine."Line No." := NextLineNo;
      GenJnlLine."Account Type" := GenJnlLine."Account Type"::"G/L Account";
      GenJnlLine."Document Type" := GenJnlLine."Document Type"::Invoice;
      GenJnlLine."Source Code" := SourceCodeSetup."Inward Registration";
      GenJnlLine.Description := PurchSetup."Inward Posting Description";
      GenJnlLine."Account No." := VendPostingGr."Inward Reg. Bridging Debt";
      GenJnlLine."Posting Date" := PostingDate;
      GenJnlLine."Document No." := InwRegEntry."Document No.";
      GenJnlLine."Document Type" := GenJnlLine."Document Type"::Invoice;
      GenJnlLine."External Document No." := InwRegEntry."Document No.";
      GenJnlLine."Source No." := InwRegEntry."Vendor No.";
      GenJnlLine."Gen. Posting Type" := 0;
      GenJnlLine."Gen. Bus. Posting Group" := '';
      GenJnlLine."Gen. Prod. Posting Group" := '';
      GenJnlLine."VAT Bus. Posting Group" := '';
      GenJnlLine."VAT Prod. Posting Group" := '';
      IF DimensionsOnTotalTrans THEN BEGIN
        GenJnlLine."Shortcut Dimension 1 Code" := InwRegEntry."Shortcut Dimension 1 Code";
        GenJnlLine."Shortcut Dimension 2 Code" := InwRegEntry."Shortcut Dimension 2 Code";
      END;

      GenJnlLine."VAT %" := 0;
      GenJnlLine.Quantity := 0;
      GenJnlLine."System-Created Entry" := TRUE;
      GenJnlLine.VALIDATE(Amount,-TotAmountInclVAT);

      GenJnlLine."Dimension Set ID" := InwHeader."Dimension Set ID";

      GenJnlPostLine.RunWithCheck(GenJnlLine);
    END;

    BEGIN
    END.
  }
}

