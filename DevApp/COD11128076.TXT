OBJECT Codeunit 11128076 Dialog Mgt
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=PE5.03 (12048902);
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      gW@12044963 : Dialog;
      gMax@12044962 : ARRAY [100] OF Integer;
      gCounter@12044961 : ARRAY [100] OF Integer;
      gProgressLastUpdated@12044960 : ARRAY [100] OF DateTime;
      gTextUpdated@12044959 : ARRAY [100] OF DateTime;
      gIsOpen@12044958 : Boolean;
      gUpdateInterval@12047959 : Integer;
      gLastPercent@12047958 : ARRAY [100] OF Decimal;

    PROCEDURE Open@12044958(pText@12044958 : Text);
    BEGIN
      IF NOT GUIALLOWED THEN
        EXIT;
      gW.OPEN(pText);
      CLEAR(gProgressLastUpdated);
      CLEAR(gTextUpdated);
      IF gUpdateInterval = 0 THEN
        gUpdateInterval := 250; // Default update interval
      gIsOpen := TRUE;
    END;

    PROCEDURE InitProgressbar@12044959(pNo@12044959 : Integer;pMax@12044958 : Integer);
    BEGIN
      IF NOT GUIALLOWED THEN
        EXIT;
      gMax[pNo] := pMax;
      gCounter[pNo] := 0;
      gProgressLastUpdated[pNo] := 0DT;
      gW.UPDATE(pNo, 0);
    END;

    PROCEDURE UpdateText@12044960(pNo@12044960 : Integer;pText@12044959 : Variant;pForced@12044958 : Boolean);
    BEGIN
      IF NOT GUIALLOWED THEN
        EXIT;

      IF NOT (DoUpdate(TRUE,pNo) OR pForced) THEN
        EXIT;
      gW.UPDATE(pNo, pText);

      gTextUpdated[pNo] := CURRENTDATETIME;
    END;

    PROCEDURE UpdateProgressbar@12044961(pNo@12044958 : Integer);
    BEGIN
      IF NOT GUIALLOWED THEN
        EXIT;
      gCounter[pNo] += 1;
      UpdPrgbar(pNo);
    END;

    PROCEDURE UpdateProgressbarAbs@12044963(pNo@12044959 : Integer;pAbsValue@12044958 : Integer);
    BEGIN
      // Sets progresspercent by value
      // gCounter[pNo] should be less or equal to gMax[pNo]
      IF NOT GUIALLOWED THEN
        EXIT;
      gCounter[pNo] := pAbsValue;
      UpdPrgbar(pNo);
    END;

    PROCEDURE UpdateProgressbarValue@12044964(pNo@12044959 : Integer;pValue@12044958 : Integer);
    BEGIN
      // Adds pValue to progress
      // gCounter[pNo] + pValue should be less or equal to gMax[pNo]
      IF NOT GUIALLOWED THEN
        EXIT;
      gCounter[pNo] += pValue;
      UpdPrgbar(pNo);
    END;

    PROCEDURE Close@12044966();
    BEGIN
      IF NOT GUIALLOWED THEN
        EXIT;
      IF gIsOpen THEN
        gW.CLOSE;
      CLEAR(gW);
      CLEAR(gMax);
      CLEAR(gCounter);
      CLEAR(gProgressLastUpdated);
      CLEAR(gTextUpdated);

      gIsOpen := FALSE;
    END;

    PROCEDURE SetUpdateInterval@12044968(pUpdateInterval@12047958 : Integer);
    BEGIN
      gUpdateInterval := pUpdateInterval;
    END;

    LOCAL PROCEDURE UpdPrgbar@12044965(pNo@12044958 : Integer);
    BEGIN
      IF NOT DoUpdate(FALSE,pNo) THEN
        EXIT;

      IF gCounter[pNo] > gMax[pNo] THEN
        gCounter[pNo] := gMax[pNo];

      gLastPercent[pNo] := CalcNewProgress(pNo);
      gW.UPDATE(pNo, ROUND(gLastPercent[pNo] * 100,1));

      gProgressLastUpdated[pNo] := CURRENTDATETIME;
    END;

    LOCAL PROCEDURE DoUpdate@12044967(pText@12044959 : Boolean;pNo@12044958 : Integer) : Boolean;
    BEGIN
      IF pText THEN BEGIN
        IF gTextUpdated[pNo] = 0DT THEN
          EXIT(TRUE); // First update
        EXIT(CURRENTDATETIME - gTextUpdated[pNo] >= gUpdateInterval); // Update Interval passed
      END ELSE BEGIN
        IF gCounter[pNo] >= gMax[pNo] THEN
          EXIT(TRUE); // Last loop, update 100 %

        IF gProgressLastUpdated[pNo] = 0DT THEN
          EXIT(TRUE); // First update

        IF CURRENTDATETIME - gProgressLastUpdated[pNo] >= gUpdateInterval THEN
          EXIT(TRUE); // Update Interval passed

        IF CalcNewProgress(pNo) - gLastPercent[pNo] >= 1 THEN
          EXIT(TRUE); // More than 1% change since last update

        EXIT(FALSE); // No update
      END;
    END;

    LOCAL PROCEDURE CalcNewProgress@12044969(pNo@12047958 : Integer) : Decimal;
    BEGIN
      EXIT(gCounter[pNo]/gMax[pNo] * 100);
    END;

    BEGIN
    {
      PEB *** Begin ***
      PEB0103 Wrappers and Tools
      PEB
        Examples:
          Simple loop of record, every loop adds 1 to progress:
            DialogMgt.Open('@1@@@@@@@@@@@@@@@@@@@');
            Cust.RESET;
            DialogMgt.InitProgressbar(1, Cust.COUNT);
            IF Cust.FINDSET THEN REPEAT
              DialogMgt.UpdateProgressbar(1);
              sleep(20);
            UNTIL Cust.NEXT = 0;
            DialogMgt.Close();

          Custom progress:
            DialogMgt.Open('@1@@@@@@@@@@@@@@@@@@@');
            f.TEXTMODE := true;
            f.open('c:\Utdelat\test.txt');
            DialogMgt.InitProgressbar(1, f.LEN);
            while f.POS <> f.LEN do begin
              f.READ(t);
              DialogMgt.UpdateProgressbarValue(1, strlen(t) + 2); // + 2 for CrLf
              sleep(20);
            end;
            DialogMgt.Close();

          Absolute update of progress:
            DialogMgt.Open('@1@@@@@@@@@@@@@@@@@@@');
            f.TEXTMODE := true;
            f.open('c:\Utdelat\test.txt');
            DialogMgt.InitProgressbar(1, f.LEN);
            while f.POS <> f.LEN do begin
              f.READ(t);
              DialogMgt.UpdateProgressbarabs(1, f.POS);
              sleep(200);
            end;
            DialogMgt.Close();
      PEB *** End ***
    }
    END.
  }
}

