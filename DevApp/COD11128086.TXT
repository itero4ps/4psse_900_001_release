OBJECT Codeunit 11128086 BaseCodeunits
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=PE6.03.03 (12047965);
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      gGLSetup@1100570000 : Record 98;
      gPurchSetup@1100570001 : Record 312;
      gSalesSetup@1100570002 : Record 311;
      gSetupOK@1100570003 : Boolean;
      PEB001@12047958 : TextConst 'ENU=Max length for Version list is 80 char';

    PROCEDURE CompInit@1100570008();
    VAR
      CompanyInfo@1100570000 : Record 79;
      CompanyInitialize@1100570001 : Codeunit 2;
      GenJournalTemplate@12047958 : Record 80;
      GenJournalBatch@12047959 : Record 232;
      VPMnmt@12047961 : Codeunit 11128061;
      BaseMgt@12047962 : Codeunit 11128082;
    BEGIN
      // C40
      CompanyInfo.LOCKTABLE;
      IF CompanyInfo.GET AND NOT CompanyInfo."Base is Initiated" THEN BEGIN
        CompanyInfo.LOCKTABLE;
        CompanyInfo."Base is Initiated" := TRUE;
        CompanyInfo.MODIFY;

        BaseMgt.ChangeReportSelection;
        //TextLanguageMgt.MakeTranslations;
        //BasePermissionsMgmnt.RunCode;
        //BaseDemoDataMgmnt.RunCode;
        //BaseReports.InitBaseReportsSelection;

        WITH GenJournalTemplate DO BEGIN
          RESET;
          IF FINDSET THEN REPEAT
            CLEAR("Copy VAT Setup to Jnl. Lines");
            MODIFY;
          UNTIL NEXT = 0;
        END;

        WITH GenJournalBatch DO BEGIN
          RESET;
          IF FINDSET THEN REPEAT
            CLEAR("Copy VAT Setup to Jnl. Lines");
            MODIFY;
          UNTIL NEXT = 0;
        END;

        VPMnmt.InsertVPGiroTypeLines;
      END;
      BaseMgt.Initialize;
      COMMIT;
    END;

    PROCEDURE IsClosingDate@1100570019(pDate@1100570000 : Date) : Boolean;
    BEGIN
      // C11
      EXIT(pDate = CLOSINGDATE(pDate));
    END;

    PROCEDURE AllowedPostingDate@1100570013(VAR pvPostingDate@1100570005 : Date;VAR pvAllowPostingFrom@1100570004 : Date;VAR pvAllowPostingTo@1100570003 : Date;VAR pvPerPosting@1100570001 : Boolean;VAR pvUserSetup@1100570002 : Record 91);
    VAR
      OrgAllowPostingTo@1100570000 : Date;
      PEB002@1100570007 : TextConst 'ENU="It is only Possible to Post  Today, depending on the field ""%1"" in Table ""%2"" not marked.\\User = ""%3"""';
      PEB003@1100570006 : TextConst 'ENU=You Try to Post on the Date %1, this Date is Closed according to %2 fields %3 and %4.';
    BEGIN
      // C11
      GetSetup;
      IF pvPerPosting THEN BEGIN
        IF NOT pvUserSetup."Allow Posting <> Today" THEN
          pvAllowPostingTo := TODAY;
        IF FORMAT(gGLSetup."Extend Allow Posting To") = '' THEN
          EXIT;
        IF (pvAllowPostingTo < 99901231D) THEN BEGIN
          IF OrgAllowPostingTo = 0D THEN
            OrgAllowPostingTo := pvAllowPostingTo;
          IF pvAllowPostingTo < CALCDATE(gGLSetup."Extend Allow Posting To",OrgAllowPostingTo) THEN
            pvAllowPostingTo := CALCDATE(gGLSetup."Extend Allow Posting To",OrgAllowPostingTo);
        END;
      END ELSE IF NOT (pvUserSetup."Allow Posting <> Today") THEN BEGIN
        IF (pvPostingDate <> TODAY) AND (USERID <> '') THEN
          ERROR(PEB002,pvUserSetup.FIELDCAPTION("Allow Posting <> Today"),pvUserSetup.TABLECAPTION,USERID);

        gGLSetup.TESTFIELD("Allow Posting From");
        gGLSetup.TESTFIELD("Allow Posting To");
        pvAllowPostingFrom := gGLSetup."Allow Posting From";
        pvAllowPostingTo := gGLSetup."Allow Posting To";
        IF pvAllowPostingTo = 0D THEN
          pvAllowPostingTo := 99991231D;
        IF pvPostingDate < pvAllowPostingFrom THEN
          ERROR(PEB003,pvPostingDate,gGLSetup.TABLECAPTION,gGLSetup.FIELDCAPTION("Allow Posting From"),
              gGLSetup.FIELDCAPTION("Allow Posting To"));
        IF pvPostingDate > pvAllowPostingTo THEN
          ERROR(PEB003,pvPostingDate,gGLSetup.TABLECAPTION,gGLSetup.FIELDCAPTION("Allow Posting From"),
              gGLSetup.FIELDCAPTION("Allow Posting To"));
      END;
    END;

    PROCEDURE ExtDocNoMandatory@1100570015(pVendLedgEntry@1100570001 : Record 25;pCVLedgEntryBuf@1100570004 : Record 382;pGenJournalLine@1100570002 : Record 81) : Boolean;
    VAR
      Vendor@1100570000 : Record 23;
    BEGIN
      // C12
      GetSetup;
      WITH pGenJournalLine DO BEGIN
        Vendor.GET(pVendLedgEntry."Vendor No.");
        EXIT((NOT "Ext. Doc. No. not Mandatory")AND
             ((gPurchSetup."Ext. Doc. No. Mandatory" OR
              (pCVLedgEntryBuf."External Document No." <> ''))
              )) //AND
              //(NOT Vendor."No control of Ext. Doc. No.")))
      END;
    END;

    PROCEDURE ClearAutoGiroJournalNoAndCLEJournalNo@1100570016(VAR pvCustLedgEntry@1100570000 : Record 21);
    VAR
      VPManagement@12047959 : Codeunit 11128061;
    BEGIN
      // C12
      VPManagement.ClearAutoGiroJournalNoAndCLEJournalNo(pvCustLedgEntry);
    END;

    PROCEDURE GetSalespersonCode@1100570020(VAR pvSalesLine@1100570000 : Record 37;VAR pvItemJnlLine@1100570002 : Record 83);
    VAR
      SalesShipmentHeader@1100570001 : Record 110;
    BEGIN
      // C80
      GetSetup;
      WITH pvSalesLine DO BEGIN
        IF //(gSalesSetup."Salesp.Code Comb. Ship. from" = gSalesSetup."Salesp.Code Comb. Ship. from"::"Posted Shipments") AND
           ("Shipment No." <> '')  AND
           ("Document Type" = "Document Type"::Invoice) THEN
          IF SalesShipmentHeader.GET("Shipment No.") THEN
            pvItemJnlLine."Salespers./Purch. Code" := SalesShipmentHeader."Salesperson Code";
      END;
    END;

    PROCEDURE GetSelectionSO@1100570027(pSalesHeader@1100570001 : Record 36;pText000@1100570002 : Text[1024];VAR pvSelection@1100570000 : Integer);
    BEGIN
      // C81
      IF pSalesHeader."Combine Shipments" THEN
        pvSelection := STRMENU(pText000,1)
      ELSE
        pvSelection := STRMENU(pText000,3);
    END;

    PROCEDURE GetSelectionWH@12047959(pWhseActivLine@12047958 : Record 5767;pText000@1100570002 : Text[1024];VAR pvSelection@1100570000 : Integer);
    VAR
      SalesHeader@12047959 : Record 36;
    BEGIN
      // C7323
      IF pWhseActivLine."Activity Type" = pWhseActivLine."Activity Type"::"Invt. Put-away" THEN BEGIN
        pvSelection := STRMENU(pText000,2);
      END ELSE BEGIN
        IF (pWhseActivLine."Source Document" = pWhseActivLine."Source Document"::"Sales Order") AND  SalesHeader.GET(SalesHeader."Document Type"::Order,pWhseActivLine."Source No.") AND (SalesHeader."Combine Shipments") THEN
          pvSelection := STRMENU(pText000,1)
        ELSE
          pvSelection := STRMENU(pText000,2);
      END;
    END;

    PROCEDURE GetDocNoMsg@1100570029(VAR pvPurchaseHeader@1100570000 : Record 38);
    VAR
      PEB004@1100570001 : TextConst 'ENU=Document No. %1';
    BEGIN
      // C91
      WITH pvPurchaseHeader DO BEGIN
        IF (Invoice OR ("Document Type" IN ["Document Type"::Invoice,"Document Type"::"Credit Memo"])) AND
           (("Last Posting No." <> "No.") AND
           ("Last Posting No." <> '')) THEN
          MESSAGE(PEB004,"Last Posting No.");
      END;
    END;

    PROCEDURE UpdateLineNoTextLine@1100570000(VAR pvFromSalesLine@1100570000 : Record 37;VAR pvToSalesLine@1100570001 : Record 37);
    VAR
      BaseTables@1100570002 : Codeunit 11128080;
    BEGIN
      //// C6620
      //IF pvFromSalesLine."Text connected to Line No." = 0 THEN
      //  EXIT;
      //BaseTables.UpdateLineNoTextLine(pvToSalesLine);
    END;

    PROCEDURE GetCustomerNo@1000000001(pSalesHeader@1000000001 : Record 36) : Code[20];
    BEGIN
      //// C7000
      //GetSetup;
      //IF gSalesSetup."Price Calculating from" = gSalesSetup."Price Calculating from"::"Bill-to Customer No." THEN
      //  EXIT(pSalesHeader."Bill-to Customer No.")
      //ELSE
        EXIT(pSalesHeader."Sell-to Customer No.");
    END;

    PROCEDURE Set0DToWorkdate@1100570001(VAR pDate@1100570000 : Date);
    BEGIN
      // C7000
      IF pDate = 0D THEN
        pDate := WORKDATE;
    END;

    LOCAL PROCEDURE GetSetup@1100570021();
    BEGIN
      IF gSetupOK THEN
        EXIT;
      gGLSetup.GET;
      gSalesSetup.GET;
      gPurchSetup.GET;

      gSetupOK := TRUE;
    END;

    BEGIN
    {
      PEB *** Begin ***
      PEB0000 Miscellaneous
      PEB0093 Create permissions and demodata
      PEB
      PEB *** End ***
    }
    END.
  }
}

