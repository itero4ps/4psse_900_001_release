OBJECT Codeunit 11128091 Project Details
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE MgtProjDetail@1100285008(UserId@1100285001 : Code[50];ProjNo@1100285000 : Code[20]);
    BEGIN
      DeleteProjDetail(UserId,ProjNo);
      CreateProjDetail(UserId,ProjNo);
      GetBudgetLines(UserId,ProjNo);
      GetGLEntrys(UserId,ProjNo);
      GetPrognosisLine(UserId,ProjNo);
      BudgetContract(UserId,ProjNo);
      SumProjDetail(UserId,ProjNo);
      OverheadCost(UserId,ProjNo);
      CodeLines(UserId,ProjNo);
      ShowProjDetailPage(UserId,ProjNo);
    END;

    PROCEDURE DeleteProjDetail@1100285001(UserId@1100285000 : Code[50];ProjNo@1100285001 : Code[20]);
    VAR
      ProjDetail@1100285002 : Record 11128083;
    BEGIN
      ProjDetail.SETRANGE(UserID,UserId);
      ProjDetail.SETRANGE("Project No.",ProjNo);
      IF ProjDetail.FINDSET() THEN
        ProjDetail.DELETEALL();
    END;

    PROCEDURE CreateProjDetail@1100285002(UserId@1100285001 : Code[50];ProjNo@1100285000 : Code[20]);
    VAR
      ProjDetailTemplate@1100285002 : Record 11128082;
      ProjDetail@1100285003 : Record 11128083;
      Job@1100285004 : Record 11072003;
    BEGIN
      Job.GET(ProjNo);
      ProjDetailTemplate.SETFILTER("Line No.",'<>%1',0);
      IF ProjDetailTemplate.FIND('-') THEN BEGIN
        REPEAT
          ProjDetail.INIT;
          ProjDetail.UserID := UserId;
          ProjDetail."Project No." := ProjNo;
          ProjDetail."Line No." := ProjDetailTemplate."Line No.";
          ProjDetail.Caption := ProjDetailTemplate.Caption;
          ProjDetail."Budget Line Cost Object" := ProjDetailTemplate."Budget Line Cost Object";
          ProjDetail."Budget Line Filter 2" := ProjDetailTemplate."Budget Line Filter 2";
          ProjDetail."GL Entry Cost Object" := ProjDetailTemplate."GL Entry Cost Object";
          ProjDetail."Exclude Account" := ProjDetailTemplate."Exclude Account";
          ProjDetail."Prognosis Cost Object" := ProjDetailTemplate."Prognosis Cost Object";
          ProjDetail."Prognosis Line Filter 2" := ProjDetailTemplate."Prognosis Line Filter 2";
          ProjDetail."Total Line No. From" := ProjDetailTemplate."Total Line No. From";
          ProjDetail."Total Line No. To" := ProjDetailTemplate."Total Line No. To";
          ProjDetail."Code line" := ProjDetailTemplate."Code line";
          ProjDetail."Sum Line" := ProjDetailTemplate."Sum Line";
          ProjDetail."Sum Amount" := ProjDetailTemplate."Sum Amount";
          ProjDetail."Sum Quantity" := ProjDetailTemplate."Sum Quantity";
          ProjDetail.Hide := ProjDetailTemplate.Hide;
          ProjDetail.Description := ProjDetailTemplate.Description;
          ProjDetail."Cost Type" := ProjDetailTemplate."Cost Type";
          ProjDetail."Ovearhead Level" := ProjDetailTemplate."Ovearhead Level";
          ProjDetail.Calcualation := ProjDetailTemplate.Calcualation;
          ProjDetail."Global Dimension 1 Code" := Job."Global Dimension 1 Code";
          ProjDetail."Budget Contractamount" := ProjDetailTemplate."Budget Contractamount";
          ProjDetail."Switch Sign" := ProjDetailTemplate."Switch Sign G/L";
          ProjDetail.Procent := ProjDetailTemplate.Procent;
          ProjDetail.InOverview :=  ProjDetailTemplate.InOverview;
          ProjDetail.INSERT;
        UNTIL ProjDetailTemplate.NEXT = 0;
      END;
    END;

    PROCEDURE GetBudgetLines@1100285004(UserId@1100285001 : Code[50];ProjNo@1100285000 : Code[20]);
    VAR
      ProjDetail@1100285002 : Record 11128083;
      BL@1100285003 : Record 11012001;
      BSum@1100285004 : Decimal;
      BSumOrg@1000000000 : Decimal;
      BSumadj@1000000001 : Decimal;
    BEGIN
      ProjDetail.SETRANGE(UserID,UserId);
      ProjDetail.SETRANGE("Project No.",ProjNo);
      ProjDetail.SETRANGE("Code line",FALSE);
      ProjDetail.SETRANGE("Sum Line",FALSE);
      ProjDetail.SETFILTER("Budget Line Cost Object",'<>%1','');
      IF ProjDetail.FIND('-') THEN BEGIN
        REPEAT
          BSum := 0;
          BSumadj := 0;
          BSumOrg := 0;
          CLEAR(BL);
          BL.SETCURRENTKEY("Project No.",Element,"Cost Object");
          BL.SETRANGE("Project No.",ProjNo);
          BL.SETRANGE("Cost Object",ProjDetail."Budget Line Cost Object");
          IF BL.FIND('-') THEN BEGIN
            REPEAT
              IF ProjDetail."Sum Amount" THEN BEGIN
                BSum := BSum + BL.Amount;
                IF BL.Adjustment <> '' THEN BEGIN
                  BSumadj := BSumadj + BL.Amount;
                END ELSE BEGIN
                  BSumOrg := BSumOrg + BL.Amount;
                END;
              END ELSE BEGIN
                BSum := BSum + BL.Quantity;
              END;
            UNTIL BL.NEXT = 0;
          END;
          ProjDetail."Budget Amount" := BSum;
          ProjDetail."Original Budget" := BSumOrg;
          ProjDetail."Budget adjustment" := BSumadj;
          ProjDetail.MODIFY;
        UNTIL ProjDetail.NEXT = 0;
      END;
    END;

    PROCEDURE GetGLEntrys@1100285005(UserId@1100285001 : Code[50];ProjNo@1100285000 : Code[20]);
    VAR
      ProjDetail@1100285002 : Record 11128083;
      GL@1100285003 : Record 17;
      GSum@1100285004 : Decimal;
      AFilt1@1100285005 : Code[10];
      AFilt2@1100285006 : Code[10];
      AFilt3@1100285007 : Code[10];
      AFilt4@1100285008 : Code[10];
      AFilt5@1100285009 : Code[10];
      Strangen@1100285010 : Text[50];
    BEGIN
      ProjDetail.SETRANGE(UserID,UserId);
      ProjDetail.SETRANGE("Project No.",ProjNo);
      ProjDetail.SETRANGE("Code line",FALSE);
      ProjDetail.SETRANGE("Sum Line",FALSE);
      ProjDetail.SETFILTER("GL Entry Cost Object",'<>%1','');
      IF ProjDetail.FIND('-') THEN BEGIN
        REPEAT
          GSum := 0;
          CLEAR(GL);
          GL.SETCURRENTKEY("Job No.","G/L Account No.","Posting Date");
          GL.SETRANGE("Job No.",ProjNo);
          IF ProjDetail."Exclude Account" <> '' THEN BEGIN
            Strangen := ProjDetail."Exclude Account";
            IF STRPOS(Strangen,';') > 0 THEN BEGIN
              EVALUATE(AFilt1,COPYSTR(Strangen,1,STRPOS(Strangen,';')-1));
              Strangen := COPYSTR(Strangen,STRPOS(Strangen,';')+1);
            END ELSE BEGIN
              AFilt1 := Strangen;
            END;
            IF STRPOS(Strangen,';') > 0 THEN BEGIN
              EVALUATE(AFilt2,COPYSTR(Strangen,1,STRPOS(Strangen,';')-1));
              Strangen := COPYSTR(Strangen,STRPOS(Strangen,';')+1);
            END ELSE BEGIN
              AFilt2 := Strangen;
            END;
            IF STRPOS(Strangen,';') > 0 THEN BEGIN
              EVALUATE(AFilt3,COPYSTR(Strangen,1,STRPOS(Strangen,';')-1));
              Strangen := COPYSTR(Strangen,STRPOS(Strangen,';')+1);
            END ELSE BEGIN
              AFilt3 := Strangen;
            END;
            IF STRPOS(Strangen,';') > 0 THEN BEGIN
              EVALUATE(AFilt4,COPYSTR(Strangen,1,STRPOS(Strangen,';')-1));
              Strangen := COPYSTR(Strangen,STRPOS(Strangen,';')+1);
            END ELSE BEGIN
              AFilt4 := Strangen;
            END;
            IF STRPOS(Strangen,';') > 0 THEN BEGIN
              EVALUATE(AFilt5,COPYSTR(Strangen,1,STRPOS(Strangen,';')-1));
              Strangen := COPYSTR(Strangen,STRPOS(Strangen,';')+1);
            END ELSE BEGIN
              AFilt5 := Strangen;
            END;
            GL.SETFILTER("G/L Account No.",'<>%1&<>%2&<>%3&<>%4&<>%5',AFilt1,AFilt2,AFilt3,AFilt4,AFilt5);
          END;
          GL.SETRANGE("Global Dimension 2 Code",ProjDetail."GL Entry Cost Object");
          IF GL.FIND('-') THEN BEGIN
            REPEAT
              IF ProjDetail."Sum Amount" THEN BEGIN
                IF ProjDetail."Switch Sign" THEN BEGIN
                  GSum := GSum + (GL.Amount * -1);
                END ELSE BEGIN
                  GSum := GSum + GL.Amount;
                END;
              END ELSE BEGIN
                GSum := GSum + GL.Quantity;
              END;
            UNTIL GL.NEXT = 0;
          END;
          ProjDetail."GL Amount" := GSum;
          ProjDetail.MODIFY;
        UNTIL ProjDetail.NEXT = 0;
      END;
    END;

    PROCEDURE GetPrognosisLine@1100285006(UserId@1100285001 : Code[50];ProjNo@1100285000 : Code[20]);
    VAR
      ProjDetail@1100285002 : Record 11128083;
      PL@1100285003 : Record 11012035;
      PSum@1100285004 : Decimal;
      Prognosis@1100285005 : Record 11012034;
    BEGIN
      ProjDetail.SETRANGE(UserID,UserId);
      ProjDetail.SETRANGE("Project No.",ProjNo);
      ProjDetail.SETRANGE("Code line",FALSE);
      ProjDetail.SETRANGE("Sum Line",FALSE);
      ProjDetail.SETFILTER("Prognosis Cost Object",'<>%1','');

      Prognosis.SETRANGE("Project No.",ProjNo);
      IF Prognosis.FINDLAST THEN BEGIN

        IF ProjDetail.FIND('-') THEN BEGIN
          REPEAT
            PSum := 0;
            CLEAR(PL);
            PL.SETCURRENTKEY("Project No.","Prognosis Date","Cost Type",Element,"Cost Object");
            PL.SETRANGE("Project No.",ProjNo);
            PL.SETRANGE("Cost Object",ProjDetail."Prognosis Cost Object");
            PL.SETRANGE("Prognosis Date",Prognosis."Prognosis Date");
            IF PL.FIND('-') THEN BEGIN
              REPEAT
                IF ProjDetail."Sum Amount" THEN BEGIN
                  IF PL."Cost Type"=PL."Cost Type"::Revenue THEN
                    PSum := PSum + (PL."Amount Revenue"+PL.Invoiced)
                  ELSE
                    PSum := PSum + PL."Prognosis Total Cost";//PL.Amount;
                END ELSE BEGIN
                  PSum := PSum + PL.Quantity;
                END;
              UNTIL PL.NEXT = 0;
            END;
            ProjDetail."Prognosis Amount" := PSum;
            ProjDetail."New Prognosis Amount":=PSum;
            ProjDetail."Prognosis comment" := PL.Comment;
            ProjDetail.MODIFY;
          UNTIL ProjDetail.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE SumProjDetail@1100285000(UserId@1100285001 : Code[50];ProjNo@1100285000 : Code[20]);
    VAR
      ProjDetail@1100285005 : Record 11128083;
      ProjDetail2@1100285006 : Record 11128083;
      PSum@1100285004 : Decimal;
      BSum@1100285003 : Decimal;
      GSum@1100285002 : Decimal;
      OSum@1100285301 : Decimal;
      JSum@1100285300 : Decimal;
    BEGIN
      ProjDetail.SETRANGE(UserID,UserId);
      ProjDetail.SETRANGE("Project No.",ProjNo);
      ProjDetail.SETRANGE("Sum Line",TRUE);
      IF ProjDetail.FIND('-') THEN BEGIN
        REPEAT
          CLEAR(ProjDetail2);
          BSum := 0;
          GSum := 0;
          PSum := 0;
          OSum := 0;
          JSum := 0;
          ProjDetail2.SETRANGE(UserID,UserId);
          ProjDetail2.SETRANGE("Project No.",ProjNo);
          ProjDetail2.SETRANGE("Code line",FALSE);
          ProjDetail2.SETRANGE("Sum Line",FALSE);
          ProjDetail2.SETRANGE("Sum Quantity",FALSE);
          ProjDetail2.SETFILTER("Line No.",'%1..%2',ProjDetail."Total Line No. From",ProjDetail."Total Line No. To");
          IF ProjDetail2.FIND('-') THEN BEGIN
            REPEAT
              BSum := BSum + ProjDetail2."Budget Amount";
              GSum := GSum + ProjDetail2."GL Amount";
              PSum := PSum + ProjDetail2."Prognosis Amount";
              OSum := OSum + ProjDetail2."Original Budget";
              JSum := JSum + ProjDetail2."Budget adjustment";
            UNTIL ProjDetail2.NEXT = 0;
            ProjDetail."Budget Amount" := BSum;
            ProjDetail."GL Amount" := GSum;
            ProjDetail."Prognosis Amount" := PSum;
            ProjDetail."New Prognosis Amount":=PSum;
            ProjDetail."Original Budget" := OSum;
            ProjDetail."Budget adjustment" := JSum;
            ProjDetail.MODIFY;
          END;
        UNTIL ProjDetail.NEXT = 0;
      END;
    END;

    PROCEDURE BudgetContract@1100285009(UserId@1100285001 : Code[50];ProjNo@1100285000 : Code[20]);
    VAR
      ProjDetail@1100285002 : Record 11128083;
      ProcPrin@1100285003 : Record 11012005;
      Job@1100285004 : Record 11072003;
    BEGIN
      IF Job.GET(ProjNo) THEN BEGIN
        ProjDetail.SETRANGE(UserID,UserId);
        ProjDetail.SETRANGE("Project No.",ProjNo);
        ProjDetail.SETRANGE("Budget Contractamount",TRUE);
        IF ProjDetail.FIND('-') THEN BEGIN
          REPEAT
            IF ProcPrin.GET(ProjNo,Job."Bill-to Customer No.") THEN BEGIN
              ProjDetail."Budget Amount" := ProcPrin."Contract Amount (LCY)";
            END;
            ProjDetail.MODIFY;
          UNTIL ProjDetail.NEXT = 0;
         END;
      END;
    END;

    PROCEDURE OverheadCost@1100285010(UserId@1100285001 : Code[50];ProjNo@1100285000 : Code[20]);
    VAR
      ProjDetail@1100285002 : Record 11128083;
      OverheadS@1100285003 : Record 11020208;
    BEGIN
      ProjDetail.SETRANGE(UserID,UserId);
      ProjDetail.SETRANGE("Project No.",ProjNo);
      ProjDetail.SETFILTER("Ovearhead Level",'<>%1',0);
      IF ProjDetail.FIND('-') THEN BEGIN
        REPEAT
          OverheadS.SETRANGE(Level,ProjDetail."Ovearhead Level");
          OverheadS.SETRANGE(Department,ProjDetail."Global Dimension 1 Code");
          IF ProjDetail."Budget Line Cost Object" <> '' THEN BEGIN
            OverheadS.SETRANGE("Cost Object Surcharge",ProjDetail."Budget Line Cost Object");
          END ELSE BEGIN
            IF ProjDetail."GL Entry Cost Object" <> '' THEN BEGIN
              OverheadS.SETRANGE("Cost Object Surcharge",ProjDetail."GL Entry Cost Object");
            END ELSE BEGIN
              OverheadS.SETRANGE("Cost Object Surcharge",ProjDetail."Prognosis Cost Object");
            END;
          END;
          IF OverheadS.FIND('-') THEN BEGIN
            ProjDetail."Budget Amount" := OverheadS.Amount;
            ProjDetail."GL Amount" := OverheadS.Amount;
            ProjDetail."Prognosis Amount" := OverheadS.Amount;
            ProjDetail.MODIFY;
          END;
        UNTIL ProjDetail.NEXT = 0;
      END;
    END;

    PROCEDURE CodeLines@1100285003(UserId@1100285002 : Code[50];ProjNo@1100285001 : Code[20]);
    VAR
      ProjDetail@1100285000 : Record 11128083;
      ProjDetail2@1100285020 : Record 11128083;
      ProjDetail3@1100285021 : Record 11128083;
      BSum@1100285003 : Decimal;
      GSum@1100285004 : Decimal;
      PSum@1100285005 : Decimal;
      Strangen@1100285006 : Text[50];
      Line1@1100285007 : Integer;
      Operator1@1100285008 : Code[10];
      Line2@1100285010 : Integer;
      Operator2@1100285009 : Code[10];
      Line3@1100285012 : Integer;
      Operator3@1100285011 : Code[10];
      Line4@1100285014 : Integer;
      Operator4@1100285013 : Code[10];
      Line5@1100285015 : Integer;
      LO1@1100285016 : Decimal;
      LO2@1100285017 : Decimal;
      LO3@1100285018 : Decimal;
      LO4@1100285019 : Decimal;
      OSum@1100285301 : Decimal;
      JSum@1100285300 : Decimal;
    BEGIN
      ProjDetail.SETRANGE(UserID,UserId);
      ProjDetail.SETRANGE("Project No.",ProjNo);
      ProjDetail.SETRANGE("Code line",TRUE);
      IF ProjDetail.FIND('-') THEN BEGIN
        REPEAT
          CLEAR(Line1);
          CLEAR(Line2);
          CLEAR(Line3);
          CLEAR(Line4);
          CLEAR(Line5);
          CLEAR(Operator1);
          CLEAR(Operator2);
          CLEAR(Operator3);
          CLEAR(Operator4);
          BSum := 0;
          GSum := 0;
          PSum := 0;
          OSum := 0;
          JSum := 0;
          Strangen := ProjDetail.Calcualation;
          IF STRPOS(Strangen,';') > 0 THEN BEGIN
            EVALUATE(Line1,COPYSTR(Strangen,1,STRPOS(Strangen,';')-1));
            Strangen := COPYSTR(Strangen,STRPOS(Strangen,';')+1);
            IF STRPOS(Strangen,';') > 0 THEN BEGIN
              EVALUATE(Operator1,COPYSTR(Strangen,1,STRPOS(Strangen,';')-1));
              Strangen := COPYSTR(Strangen,STRPOS(Strangen,';')+1);
              IF STRPOS(Strangen,';') > 0 THEN BEGIN
                EVALUATE(Line2,COPYSTR(Strangen,1,STRPOS(Strangen,';')-1));
                Strangen := COPYSTR(Strangen,STRPOS(Strangen,';')+1);
              END ELSE BEGIN
                EVALUATE(Line2,Strangen);
              END;
              IF STRPOS(Strangen,';') > 0 THEN BEGIN
                EVALUATE(Operator2,COPYSTR(Strangen,1,STRPOS(Strangen,';')-1));
                Strangen := COPYSTR(Strangen,STRPOS(Strangen,';')+1);
                IF STRPOS(Strangen,';') > 0 THEN BEGIN
                  EVALUATE(Line3,COPYSTR(Strangen,1,STRPOS(Strangen,';')-1));
                  Strangen := COPYSTR(Strangen,STRPOS(Strangen,';')+1);
                END ELSE BEGIN
                  EVALUATE(Line3,Strangen);
                END;
                IF STRPOS(Strangen,';') > 0 THEN BEGIN
                  EVALUATE(Operator3,COPYSTR(Strangen,1,STRPOS(Strangen,';')-1));
                  Strangen := COPYSTR(Strangen,STRPOS(Strangen,';')+1);
                  IF STRPOS(Strangen,';') > 0 THEN BEGIN
                    EVALUATE(Line4,COPYSTR(Strangen,1,STRPOS(Strangen,';')-1));
                    Strangen := COPYSTR(Strangen,STRPOS(Strangen,';')+1);
                  END ELSE BEGIN
                    EVALUATE(Line4,Strangen);
                  END;
                  IF STRPOS(Strangen,';') > 0 THEN BEGIN
                    EVALUATE(Operator4,COPYSTR(Strangen,1,STRPOS(Strangen,';')-1));
                    Strangen := COPYSTR(Strangen,STRPOS(Strangen,';')+1);
                    IF STRPOS(Strangen,';') > 0 THEN BEGIN
                      EVALUATE(Line5,COPYSTR(Strangen,1,STRPOS(Strangen,';')-1));
                      Strangen := COPYSTR(Strangen,STRPOS(Strangen,';')+1);
                    END ELSE BEGIN
                      EVALUATE(Line5,Strangen);
                    END;
                  END;
                END;
              END;
            END;
          END;
          IF (Line1 <> 0) AND (Operator1 <> '') AND (Line2 <> 0) THEN BEGIN
            CLEAR(ProjDetail2);
            ProjDetail2.SETRANGE(UserID,UserId);
            ProjDetail2.SETRANGE("Project No.",ProjNo);
            ProjDetail2.SETRANGE("Line No.",Line1);
            IF ProjDetail2.FIND('-') THEN BEGIN
              CLEAR(ProjDetail3);
              ProjDetail3.SETRANGE(UserID,UserId);
              ProjDetail3.SETRANGE("Project No.",ProjNo);
              ProjDetail3.SETRANGE("Line No.",Line2);
              IF ProjDetail3.FIND('-') THEN BEGIN
                IF Operator1 = '+' THEN BEGIN
                  BSum := ProjDetail2."Budget Amount" + ProjDetail3."Budget Amount";
                  GSum := ProjDetail2."GL Amount" + ProjDetail3."GL Amount";
                  PSum := ProjDetail2."Prognosis Amount" + ProjDetail3."Prognosis Amount";
                  OSum := ProjDetail2."Original Budget" + ProjDetail3."Original Budget";
                  JSum := ProjDetail2."Budget adjustment" + ProjDetail3."Budget adjustment";
                END;
                IF Operator1 = '-' THEN BEGIN
                  BSum := ProjDetail2."Budget Amount" - ProjDetail3."Budget Amount";
                  GSum := ProjDetail2."GL Amount" - ProjDetail3."GL Amount";
                  PSum := ProjDetail2."Prognosis Amount" - ProjDetail3."Prognosis Amount";
                  OSum := ProjDetail2."Original Budget" - ProjDetail3."Original Budget";
                  JSum := ProjDetail2."Budget adjustment" - ProjDetail3."Budget adjustment";
                END;
                IF Operator1 = '*' THEN BEGIN
                  BSum := ProjDetail2."Budget Amount" * ProjDetail3."Budget Amount";
                  GSum := ProjDetail2."GL Amount" * ProjDetail3."GL Amount";
                  PSum := ProjDetail2."Prognosis Amount" * ProjDetail3."Prognosis Amount";
                  OSum := ProjDetail2."Original Budget" * ProjDetail3."Original Budget";
                  JSum := ProjDetail2."Budget adjustment" * ProjDetail3."Budget adjustment";
                END;
                IF Operator1 = '/' THEN BEGIN
                  IF (ProjDetail2."Budget Amount" <> 0) AND (ProjDetail3."Budget Amount" <> 0) THEN
                    BSum := ProjDetail2."Budget Amount" / ProjDetail3."Budget Amount";
                  IF (ProjDetail2."GL Amount" <> 0) AND (ProjDetail3."GL Amount" <> 0) THEN
                    GSum := ProjDetail2."GL Amount" / ProjDetail3."GL Amount";
                  IF (ProjDetail2."Prognosis Amount" <> 0) AND (ProjDetail3."Prognosis Amount" <> 0) THEN
                    PSum := ProjDetail2."Prognosis Amount" / ProjDetail3."Prognosis Amount";
                  IF (ProjDetail2."Original Budget" <> 0) AND (ProjDetail3."Original Budget" <> 0) THEN
                    OSum := ProjDetail2."Original Budget" / ProjDetail3."Original Budget";
                  IF (ProjDetail2."Budget adjustment" <> 0) AND (ProjDetail3."Budget adjustment" <> 0) THEN
                    JSum := ProjDetail2."Budget adjustment" / ProjDetail3."Budget adjustment";
                END;
                IF Operator1 = '%' THEN BEGIN
                  IF (ProjDetail2."Budget Amount" <> 0) AND (ProjDetail3."Budget Amount" <> 0) THEN
                    BSum := (ProjDetail2."Budget Amount" / ProjDetail3."Budget Amount") * 100;
                  IF (ProjDetail2."GL Amount" <> 0) AND (ProjDetail3."GL Amount" <> 0) THEN
                    GSum := (ProjDetail2."GL Amount" / ProjDetail3."GL Amount") * 100;
                  IF (ProjDetail2."Prognosis Amount" <> 0) AND (ProjDetail3."Prognosis Amount" <> 0) THEN
                    PSum := (ProjDetail2."Prognosis Amount" / ProjDetail3."Prognosis Amount") * 100;
                  IF (ProjDetail2."Original Budget" <> 0) AND (ProjDetail3."Original Budget" <> 0) THEN
                    OSum := (ProjDetail2."Original Budget" / ProjDetail3."Original Budget") * 100;
                  IF (ProjDetail2."Budget adjustment" <> 0) AND (ProjDetail3."Budget adjustment" <> 0) THEN
                    JSum := (ProjDetail2."Budget adjustment" / ProjDetail3."Budget adjustment") * 100;
                END;
              END;
            END;
            IF (Operator2 <> '') AND (Line3 <> 0) THEN BEGIN
              CLEAR(ProjDetail2);
              ProjDetail2.SETRANGE(UserID,UserId);
              ProjDetail2.SETRANGE("Project No.",ProjNo);
              ProjDetail2.SETRANGE("Line No.",Line3);
              IF ProjDetail2.FIND('-') THEN BEGIN
                IF Operator2 = '+' THEN BEGIN
                  BSum := BSum + ProjDetail2."Budget Amount";
                  GSum := GSum + ProjDetail2."GL Amount";
                  PSum := PSum + ProjDetail2."Prognosis Amount";
                  OSum := OSum + ProjDetail2."Original Budget";
                  JSum := JSum + ProjDetail2."Budget adjustment";
                END;
                IF Operator2 = '-' THEN BEGIN
                  BSum := BSum - ProjDetail2."Budget Amount";
                  GSum := GSum - ProjDetail2."GL Amount";
                  PSum := PSum - ProjDetail2."Prognosis Amount";
                  OSum := OSum - ProjDetail2."Original Budget";
                  JSum := JSum - ProjDetail2."Budget adjustment";
                END;
                IF Operator2 = '*' THEN BEGIN
                  BSum := BSum * ProjDetail2."Budget Amount";
                  GSum := GSum * ProjDetail2."GL Amount";
                  PSum := PSum * ProjDetail2."Prognosis Amount";
                  OSum := OSum * ProjDetail2."Original Budget";
                  JSum := JSum * ProjDetail2."Budget adjustment";
                END;
                IF Operator2 = '/' THEN BEGIN
                  IF (ProjDetail2."Budget Amount" <> 0) AND (BSum <> 0) THEN
                    BSum := BSum / ProjDetail2."Budget Amount";
                  IF (ProjDetail2."GL Amount" <> 0) AND (GSum <> 0) THEN
                    GSum := GSum / ProjDetail2."GL Amount";
                  IF (ProjDetail2."Prognosis Amount" <> 0) AND (PSum <> 0) THEN
                    PSum := PSum / ProjDetail2."Prognosis Amount";
                  IF (ProjDetail2."Original Budget" <> 0) AND (OSum <> 0) THEN
                    OSum := OSum / ProjDetail2."Original Budget";
                  IF (ProjDetail2."Budget adjustment" <> 0) AND (JSum <> 0) THEN
                    JSum := JSum / ProjDetail2."Budget adjustment";
                END;
                IF Operator2 = '%' THEN BEGIN
                  IF (ProjDetail2."Budget Amount" <> 0) AND (BSum <> 0) THEN
                    BSum := (BSum / ProjDetail2."Budget Amount") * 100;
                  IF (ProjDetail2."GL Amount" <> 0) AND (GSum <> 0) THEN
                    GSum := (GSum / ProjDetail2."GL Amount") * 100;
                  IF (ProjDetail2."Prognosis Amount" <> 0) AND (PSum <> 0) THEN
                    PSum := (PSum / ProjDetail2."Prognosis Amount") * 100;
                  IF (ProjDetail2."Original Budget" <> 0) AND (OSum <> 0) THEN
                    OSum := (OSum / ProjDetail2."Original Budget") * 100;
                  IF (ProjDetail2."Budget adjustment" <> 0) AND (JSum <> 0) THEN
                    JSum := (JSum / ProjDetail2."Budget adjustment") * 100;
                END;
              END;
            END;
            IF (Operator3 <> '') AND (Line4 <> 0) THEN BEGIN
              CLEAR(ProjDetail2);
              ProjDetail2.SETRANGE(UserID,UserId);
              ProjDetail2.SETRANGE("Project No.",ProjNo);
              ProjDetail2.SETRANGE("Line No.",Line4);
              IF ProjDetail2.FIND('-') THEN BEGIN
                IF Operator3 = '+' THEN BEGIN
                  BSum := BSum + ProjDetail2."Budget Amount";
                  GSum := GSum + ProjDetail2."GL Amount";
                  PSum := PSum + ProjDetail2."Prognosis Amount";
                  OSum := OSum + ProjDetail2."Original Budget";
                  JSum := JSum + ProjDetail2."Budget adjustment";
                END;
                IF Operator3 = '-' THEN BEGIN
                  BSum := BSum - ProjDetail2."Budget Amount";
                  GSum := GSum - ProjDetail2."GL Amount";
                  PSum := PSum - ProjDetail2."Prognosis Amount";
                  OSum := OSum - ProjDetail2."Original Budget";
                  JSum := JSum - ProjDetail2."Budget adjustment";
                END;
                IF Operator3 = '*' THEN BEGIN
                  BSum := BSum * ProjDetail2."Budget Amount";
                  GSum := GSum * ProjDetail2."GL Amount";
                  PSum := PSum * ProjDetail2."Prognosis Amount";
                  OSum := OSum * ProjDetail2."Original Budget";
                  JSum := JSum * ProjDetail2."Budget adjustment";
                END;
                IF Operator3 = '/' THEN BEGIN
                  IF (ProjDetail2."Budget Amount" <> 0) AND (BSum <> 0) THEN
                    BSum := BSum / ProjDetail2."Budget Amount";
                  IF (ProjDetail2."GL Amount" <> 0) AND (GSum <> 0) THEN
                    GSum := GSum / ProjDetail2."GL Amount";
                  IF (ProjDetail2."Prognosis Amount" <> 0) AND (PSum <> 0) THEN
                    PSum := PSum / ProjDetail2."Prognosis Amount";
                  IF (ProjDetail2."Original Budget" <> 0) AND (OSum <> 0) THEN
                    OSum := OSum / ProjDetail2."Original Budget";
                  IF (ProjDetail2."Budget adjustment" <> 0) AND (JSum <> 0) THEN
                    JSum := JSum / ProjDetail2."Budget adjustment";
                END;
                IF Operator3 = '%' THEN BEGIN
                  IF (ProjDetail2."Budget Amount" <> 0) AND (BSum <> 0) THEN
                    BSum := (BSum / ProjDetail2."Budget Amount") * 100;
                  IF (ProjDetail2."GL Amount" <> 0) AND (GSum <> 0) THEN
                    GSum := (GSum / ProjDetail2."GL Amount") * 100;
                  IF (ProjDetail2."Prognosis Amount" <> 0) AND (PSum <> 0) THEN
                    PSum := (PSum / ProjDetail2."Prognosis Amount") * 100;
                  IF (ProjDetail2."Original Budget" <> 0) AND (OSum <> 0) THEN
                    OSum := (OSum / ProjDetail2."Original Budget") * 100;
                  IF (ProjDetail2."Budget adjustment" <> 0) AND (JSum <> 0) THEN
                    JSum := (JSum / ProjDetail2."Budget adjustment") * 100;
                END;
              END;
            END;
            IF (Operator4 <> '') AND (Line5 <> 0) THEN BEGIN
              CLEAR(ProjDetail2);
              ProjDetail2.SETRANGE(UserID,UserId);
              ProjDetail2.SETRANGE("Project No.",ProjNo);
              ProjDetail2.SETRANGE("Line No.",Line5);
              IF ProjDetail2.FIND('-') THEN BEGIN
                IF Operator4 = '+' THEN BEGIN
                  BSum := BSum + ProjDetail2."Budget Amount";
                  GSum := GSum + ProjDetail2."GL Amount";
                  PSum := PSum + ProjDetail2."Prognosis Amount";
                  OSum := OSum + ProjDetail2."Original Budget";
                  JSum := JSum + ProjDetail2."Budget adjustment";
                END;
                IF Operator4 = '-' THEN BEGIN
                  BSum := BSum - ProjDetail2."Budget Amount";
                  GSum := GSum - ProjDetail2."GL Amount";
                  PSum := PSum - ProjDetail2."Prognosis Amount";
                  OSum := OSum - ProjDetail2."Original Budget";
                  JSum := JSum - ProjDetail2."Budget adjustment";
                END;
                IF Operator4 = '*' THEN BEGIN
                  BSum := BSum * ProjDetail2."Budget Amount";
                  GSum := GSum * ProjDetail2."GL Amount";
                  PSum := PSum * ProjDetail2."Prognosis Amount";
                  OSum := OSum * ProjDetail2."Original Budget";
                  JSum := JSum * ProjDetail2."Budget adjustment";
                END;
                IF Operator4 = '/' THEN BEGIN
                  IF (ProjDetail2."Budget Amount" <> 0) AND (BSum <> 0) THEN
                    BSum := BSum / ProjDetail2."Budget Amount";
                  IF (ProjDetail2."GL Amount" <> 0) AND (GSum <> 0) THEN
                    GSum := GSum / ProjDetail2."GL Amount";
                  IF (ProjDetail2."Prognosis Amount" <> 0) AND (PSum <> 0) THEN
                    PSum := PSum / ProjDetail2."Prognosis Amount";
                  IF (ProjDetail2."Original Budget" <> 0) AND (OSum <> 0) THEN
                    OSum := OSum / ProjDetail2."Original Budget";
                  IF (ProjDetail2."Budget adjustment" <> 0) AND (JSum <> 0) THEN
                    JSum := JSum / ProjDetail2."Budget adjustment";
                END;
                IF Operator3 = '%' THEN BEGIN
                  IF (ProjDetail2."Budget Amount" <> 0) AND (BSum <> 0) THEN
                    BSum := (BSum / ProjDetail2."Budget Amount") * 100;
                  IF (ProjDetail2."GL Amount" <> 0) AND (GSum <> 0) THEN
                    GSum := (GSum / ProjDetail2."GL Amount") * 100;
                  IF (ProjDetail2."Prognosis Amount" <> 0) AND (PSum <> 0) THEN
                    PSum := (PSum / ProjDetail2."Prognosis Amount") * 100;
                  IF (ProjDetail2."Original Budget" <> 0) AND (OSum <> 0) THEN
                    OSum := (OSum / ProjDetail2."Original Budget") * 100;
                  IF (ProjDetail2."Budget adjustment" <> 0) AND (JSum <> 0) THEN
                    JSum := (JSum / ProjDetail2."Budget adjustment") * 100;
                END;
              END;
            END;
          END;
          IF ProjDetail.Procent = TRUE THEN BEGIN
            ProjDetail."Budget Amount" := BSum*100;
            ProjDetail."GL Amount" := GSum*100;
            ProjDetail."Prognosis Amount" := PSum*100;
            ProjDetail."Original Budget" := OSum * 100;
            ProjDetail."Budget adjustment" := JSum * 100;
            ProjDetail.MODIFY;
          END ELSE BEGIN
            ProjDetail."Budget Amount" := BSum;
            ProjDetail."GL Amount" := GSum;
            ProjDetail."Prognosis Amount" := PSum;
            ProjDetail."Original Budget" := OSum;
            ProjDetail."Budget adjustment" := JSum;
            ProjDetail.MODIFY;
          END;
        UNTIL ProjDetail.NEXT = 0;
      END;
    END;

    PROCEDURE ShowProjDetailPage@1100285007(UserId@1100285001 : Code[50];ProjNo@1100285000 : Code[20]);
    VAR
      ProjDetail@1100285002 : Record 11128083;
    BEGIN
      COMMIT;
      ProjDetail.SETRANGE(UserID,UserId);
      ProjDetail.SETRANGE("Project No.",ProjNo);
      IF ProjDetail.FIND('-') THEN
        PAGE.RUNMODAL(PAGE::"Project Details", ProjDetail);
    END;

    PROCEDURE MgtProjDetailUpdate@1100285011(UserId@1100285001 : Code[50];ProjNo@1100285000 : Code[20]);
    BEGIN
      //DeleteProjDetail(UserId,ProjNo);
      //CreateProjDetail(UserId,ProjNo);
      GetBudgetLines(UserId,ProjNo);
      GetGLEntrys(UserId,ProjNo);
      GetPrognosisLine(UserId,ProjNo);
      BudgetContract(UserId,ProjNo);
      SumProjDetail(UserId,ProjNo);
      OverheadCost(UserId,ProjNo);
      CodeLines(UserId,ProjNo);
      //ShowProjDetailPage(UserId,ProjNo);
    END;

    BEGIN
    {
      151110 ITERO.WG Changed length of USERID from 20 to 50
    }
    END.
  }
}

