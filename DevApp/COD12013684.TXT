OBJECT Codeunit 12013684 WC Download RTC2009R2
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF350000;
  }
  PROPERTIES
  {
    TableNo=12013681;
    OnRun=VAR
            wc@1100285004 : DotNet "'System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.WebClient" RUNONCLIENT;
            TempFileName@1100285003 : Text[1024];
            ExFileMgt@1100285000 : Codeunit 12013602;
          BEGIN
            IF "Download Type" = "Download Type"::Automatic THEN BEGIN
              IF ExFileMgt.GetNAVVersion < 3 THEN
                ERROR(EXF001);

              TempFileName := ExFileMgt.ClientTempFileName(FraudVendIDmgt.GetDlFileName(),'');
              IF ExFileMgt.FileExist(ExFileMgt.Path(TempFileName),ExFileMgt.GetFileName(TempFileName)) THEN
                ExFileMgt.Delete(ExFileMgt.Path(TempFileName),ExFileMgt.GetFileName(TempFileName));

              wc := wc.WebClient;
              wc.DownloadFile(FraudVendIDmgt.GetLicenseURL(),TempFileName);

              IF ExFileMgt.Move(FraudVendIDmgt.GetDlFileName(),FraudVendIDmgt.GetDlFileName(),
                ExFileMgt.Path(TempFileName),"Download Path","Download Path") <> '' THEN
                  ERROR(EXF002);
            END;

            ReadXMLFile("Download Path");
          END;

  }
  CODE
  {
    VAR
      EXF001@1100285000 : TextConst 'ENU=Automatic Downloads require a RTC Client (2009 R2 or higher)';
      EXF002@1100285001 : TextConst 'ENU=Error Copying file to Download Path';
      FraudVendIDmgt@1100285002 : Codeunit 12013685;
      EXF005@1100285004 : TextConst 'ENU="%1 does not exist in import folder. "';
      DLFILENAMEARCH@1100285003 : TextConst 'ENU=GetBlackList_%1.xml';

    PROCEDURE ReadXMLFile@1100285009(FilePath@1240150001 : Text[250]) : Boolean;
    VAR
      ExFFileMgt@1100285005 : Codeunit 12013602;
      FraudIDXML@1100285003 : XMLport 12013612;
      NVInStream@1100285004 : InStream;
      XMLFile@1100285000 : File;
      ToFileName@1100285001 : Text[1024];
      ToFolderName@1100285008 : Text[1024];
      TempFileName@1100285002 : Text[1024];
      FromFolderName@1100285006 : Text[1024];
      FromFileName@1100285007 : Text[1024];
      FraudIDBlackList@1100285009 : Record 12013685;
      RetTxt@1100285010 : Text[1024];
      OrigPath@1100285011 : Text[1024];
    BEGIN
      OrigPath := FilePath;
      IF ISSERVICETIER THEN BEGIN
        FromFileName := FraudVendIDmgt.GetDlFileName();
        FromFolderName := FilePath;

        TempFileName := ExFFileMgt.ClientTempFileName(FromFileName,'');
        ToFolderName := ExFFileMgt.Path(TempFileName);
        ToFileName := ExFFileMgt.GetFileName(TempFileName);
        ExFFileMgt.Copy(FromFileName,ToFileName,FromFolderName,ToFolderName,FromFolderName);

        ToFileName := ExFFileMgt.ServerTempFileName(FromFileName,'');
        UPLOAD('', '<TEMP>', '', FilePath + FraudVendIDmgt.GetDlFileName(), ToFileName);
        FilePath := ExFFileMgt.Path(ToFileName);
      END;

      IF NOT ExFFileMgt.FileExist(FilePath,FraudVendIDmgt.GetDlFileName()) THEN
        ERROR(EXF005,FraudVendIDmgt.GetDlFileName());

      FraudIDBlackList.DELETEALL;
      XMLFile.OPEN(FilePath + FraudVendIDmgt.GetDlFileName());
      XMLFile.CREATEINSTREAM(NVInStream);
      FraudIDXML.SETSOURCE(NVInStream);
      FraudIDXML.IMPORT;
      XMLFile.CLOSE;

      IF ExFFileMgt.FileExist(OrigPath,FraudVendIDmgt.GetDlFileName()) THEN BEGIN
        IF NOT ExFFileMgt.FolderExist(OrigPath + 'Archive') THEN
          ExFFileMgt.NewFolder('Archive',OrigPath);
        RetTxt :=  ExFFileMgt.Move(FraudVendIDmgt.GetDlFileName(),STRSUBSTNO(DLFILENAMEARCH,FORMAT(TODAY)),
                                   OrigPath,OrigPath + 'Archive',OrigPath);
        IF RetTxt <> '' THEN
          ERROR(RetTxt);
      END;
    END;

    BEGIN
    END.
  }
}

