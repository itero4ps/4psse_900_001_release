OBJECT Codeunit 12013685 Fraudulent Vendor ID Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF350000;
  }
  PROPERTIES
  {
    TableNo=12013587;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      LICENSEURL@1100285000 : TextConst 'ENU="http://ftp.signup.se:90/GetBlackList.aspx?license="';
      EXF003@1100285003 : TextConst 'ENU=Save XML file as %1 and copy it to %2';
      DLFILENAME@1100285004 : TextConst 'ENU=GetBlackList.xml';
      EXF004@1100285006 : TextConst 'ENU=Company %1 is not setup for Fraud List Watch';

    PROCEDURE ImportList@1100285006(RunFromImport@1100285001 : Boolean);
    VAR
      FraudIDSetup@1100285000 : Record 12013681;
      FraudIDSetup2@1100285002 : Record 12013681;
      WcDownload@1100285003 : Codeunit 12013684;
    BEGIN
      IF NOT FraudIDSetup.GET(COMPANYNAME) THEN BEGIN
        IF RunFromImport THEN
          EXIT
        ELSE
          ERROR(EXF004,COMPANYNAME);
      END;

      IF FraudIDSetup."Download Type" = FraudIDSetup."Download Type"::Inactive THEN BEGIN
        IF RunFromImport THEN
          EXIT
        ELSE
          ERROR(EXF004,COMPANYNAME);
      END;

      IF RunFromImport THEN BEGIN
        IF FraudIDSetup."Download Type" <> FraudIDSetup."Download Type"::Automatic THEN
          EXIT;

        IF FraudIDSetup."Latest Update (Date)" >= TODAY THEN
          EXIT;
      END;

      IF RunFromImport THEN BEGIN
        FraudIDSetup2.RESET;
        FraudIDSetup2.SETCURRENTKEY("Latest Update (Date)");
        FraudIDSetup2.SETFILTER("Latest Update (Date)", '>=%1',TODAY);
        IF NOT FraudIDSetup2.FINDLAST THEN BEGIN
          CLEARLASTERROR();
          IF WcDownload.RUN(FraudIDSetup) THEN BEGIN
              FraudIDSetup."Error Message" := '';
              FraudIDSetup."Error Count" := 0;
              FraudIDSetup."Latest Update (Date)" := TODAY;
              FraudIDSetup."Latest Update (Time)" := TIME;
          END ELSE BEGIN
            FraudIDSetup."Error Message" := COPYSTR(GETLASTERRORTEXT,1,MAXSTRLEN(FraudIDSetup."Error Message"));
            FraudIDSetup."Error Count" := FraudIDSetup."Error Count" +1;
          END;
          FraudIDSetup.MODIFY;
          COMMIT;
          CheckAll(COMPANYNAME);
        END ELSE IF FraudIDSetup2."Latest Update (Date)" > FraudIDSetup."Latest Update (Date)" THEN BEGIN
          FraudIDSetup."Error Message" := '';
          FraudIDSetup."Error Count" := 0;
          FraudIDSetup."Latest Update (Date)" := FraudIDSetup2."Latest Update (Date)";
          FraudIDSetup."Latest Update (Time)" := FraudIDSetup2."Latest Update (Time)";
          FraudIDSetup.MODIFY;
          CheckAll(COMPANYNAME);
        END;
      END ELSE BEGIN
        CLEARLASTERROR();
        IF NOT WcDownload.RUN(FraudIDSetup) THEN BEGIN
          FraudIDSetup."Error Message" := COPYSTR(GETLASTERRORTEXT,1,MAXSTRLEN(FraudIDSetup."Error Message"));
          FraudIDSetup."Error Count" := FraudIDSetup."Error Count" +1;
          FraudIDSetup.MODIFY;
          COMMIT;
          WcDownload.RUN(FraudIDSetup);
        END;
        COMMIT;

        FraudIDSetup2.RESET;
        FraudIDSetup2.SETFILTER("Download Type",'<>%1',FraudIDSetup."Download Type"::Inactive);
        IF FraudIDSetup2.FINDSET THEN
          REPEAT
            CheckAll(FraudIDSetup2."Ex Company");
            FraudIDSetup2."Error Message" := '';
            FraudIDSetup2."Error Count" := 0;
            FraudIDSetup2."Latest Update (Date)" := TODAY;
            FraudIDSetup2."Latest Update (Time)" := TIME;
            FraudIDSetup2.MODIFY;
          UNTIL FraudIDSetup2.NEXT = 0;
      END;
    END;

    PROCEDURE CheckPurchHead@1100285003(VAR ExPurchHead@1100285000 : Record 12013587;CompName@1100285002 : Text[100]);
    VAR
      ExVendID@1100285001 : Record 12013667;
      BlackListed@1100285003 : Boolean;
      ExImpPurchHeadArchive@1100285004 : Record 12013650;
    BEGIN
      IF ExPurchHead."Pay-to Vendor No." <> '' THEN BEGIN
        ExVendID.RESET;
        ExVendID.CHANGECOMPANY(CompName);
        ExVendID.SETCURRENTKEY("Vendor No.");
        ExVendID.SETRANGE("Vendor No.",ExPurchHead."Pay-to Vendor No.");
        ExVendID.SETRANGE("Fraud ID",TRUE);
        IF NOT ExVendID.ISEMPTY THEN
          BlackListed := TRUE;
      END;

      CheckID(ExPurchHead."Vendor ID", ExPurchHead."Pay-to Vendor No.",BlackListed,CompName);

      ExImpPurchHeadArchive.CHANGECOMPANY(CompName);
      IF ExImpPurchHeadArchive.GET(ExPurchHead."Import Document No.") THEN BEGIN
        CheckID(ExImpPurchHeadArchive."Vendor ID",ExPurchHead."Pay-to Vendor No.",BlackListed,CompName);
        CheckID(ExImpPurchHeadArchive."Vendor ID2",ExPurchHead."Pay-to Vendor No.",BlackListed,CompName);
        CheckID(ExImpPurchHeadArchive."Vendor ID3",ExPurchHead."Pay-to Vendor No.",BlackListed,CompName);
        CheckID(ExImpPurchHeadArchive."Vendor ID4",ExPurchHead."Pay-to Vendor No.",BlackListed,CompName);
        CheckID(ExImpPurchHeadArchive."Vendor ID5",ExPurchHead."Pay-to Vendor No.",BlackListed,CompName);
      END;

      IF BlackListed THEN
        BlockVendor(ExPurchHead."Pay-to Vendor No.",CompName);
    END;

    PROCEDURE CheckAll@1100285004(CompName@1100285002 : Text[100]);
    VAR
      ExVendID@1100285000 : Record 12013667;
      ExBlackList@1100285001 : Record 12013685;
      ExPurchHead@1100285003 : Record 12013587;
    BEGIN
      ExVendID.RESET;
      ExVendID.CHANGECOMPANY(CompName);
      ExVendID.SETRANGE(Type,ExVendID.Type::"Black List");
      ExVendID.DELETEALL;

      ExVendID.RESET;
      ExVendID.SETRANGE(ExVendID."Fraud ID",TRUE);
      ExVendID.MODIFYALL("Fraud ID",FALSE);

      ExBlackList.RESET;
      IF ExBlackList.FINDSET THEN
        REPEAT
          IF ExVendID.GET(ExBlackList."Vendor ID") THEN BEGIN
            ExVendID."Fraud ID" := TRUE;
            ExVendID.MODIFY;
            BlockVendor(ExVendID."Vendor No.",CompName);
          END;
        UNTIL ExBlackList.NEXT = 0;

      ExPurchHead.RESET;
      ExPurchHead.CHANGECOMPANY(CompName);
      ExPurchHead.SETFILTER(ExPurchHead."Pay-to Vendor No.", '<>%1','');
      IF ExPurchHead.FINDSET THEN
        REPEAT
          CheckPurchHead(ExPurchHead,CompName);
        UNTIL ExPurchHead.NEXT = 0;
    END;

    PROCEDURE CheckID@1100285002(VendID@1100285001 : Code[100];PayToVendNo@1100285003 : Code[20];VAR BlackListed@1100285004 : Boolean;CompName@1100285005 : Text[100]);
    VAR
      ExVendID@1100285000 : Record 12013667;
      ExBlackList@1100285002 : Record 12013685;
    BEGIN
      ExVendID.CHANGECOMPANY(CompName);
      IF VendID <> '' THEN
        IF ExVendID.GET(VendID) THEN BEGIN
          IF ExVendID."Fraud ID" THEN BEGIN
            IF ExVendID."Vendor No." <> PayToVendNo THEN BEGIN
              ExVendID."Vendor No." :=  PayToVendNo;
              ExVendID.MODIFY;
            END;
            BlackListed := TRUE;
          END;
        END ELSE BEGIN
          ExBlackList.RESET;
          ExBlackList.SETCURRENTKEY("Vendor ID");
          ExBlackList.SETRANGE("Vendor ID",VendID);
          IF ExBlackList.FINDFIRST THEN BEGIN
            ExVendID.INIT;
            ExVendID.ID := VendID;
            ExVendID."Vendor No." :=  PayToVendNo;
            ExVendID.Type := ExVendID.Type::"Black List";
            ExVendID."Fraud ID" := TRUE;
            ExVendID.INSERT;
            BlackListed := TRUE;
          END;
        END;
    END;

    PROCEDURE ManualDownload@1100285005(FilePath@1100285000 : Text[250]);
    BEGIN
      HYPERLINK(GetLicenseURL);
      MESSAGE(EXF003,DLFILENAME,FilePath);
    END;

    PROCEDURE ViewBlacklistedVendIDs@1100285000(PayToVendNo@1100285001 : Code[20]);
    VAR
      VendIDs@1100285000 : Record 12013667;
    BEGIN
      VendIDs.RESET;
      VendIDs.SETRANGE("Vendor No.",PayToVendNo);
      PAGE.RUN(12013678,VendIDs);
    END;

    PROCEDURE BlockVendor@1100285001(PayToVendNo@1100285000 : Code[20];CompName@1100285001 : Text[100]);
    VAR
      Vend@1100285002 : Record 23;
    BEGIN
      Vend.CHANGECOMPANY(CompName);
      Vend.GET(PayToVendNo);
      IF NOT Vend."Ignore on Fraud List" THEN BEGIN
        Vend.Blocked := Vend.Blocked::All;
        Vend."Latest Fraud Block" := CURRENTDATETIME;
        Vend."Last Date Modified" := TODAY;
        Vend.MODIFY;
      END;
    END;

    PROCEDURE GetLicenseURL@1100285007() : Text[250];
    BEGIN
      EXIT(LICENSEURL + SERIALNUMBER);
    END;

    PROCEDURE GetDlFileName@1100285008() : Text[100];
    BEGIN
      EXIT(DLFILENAME);
    END;

    BEGIN
    END.
  }
}

