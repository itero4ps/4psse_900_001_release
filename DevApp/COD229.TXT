OBJECT Codeunit 229 Document-Print
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,4PS9.00;
  }
  PROPERTIES
  {
    Permissions=TableData 11020512=ri;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=%1 is missing for %2 %3.';
      Text002@1002 : TextConst 'ENU=%1 for %2 is missing in %3.';
      SalesSetup@1003 : Record 311;
      PurchSetup@1004 : Record 312;
      SalesLine@1005 : Record 37;
      PurchLine@1006 : Record 39;
      ServLine@1010 : Record 5902;
      PrinterByPlantListRec@1100485001 : Record 11020512;
      TmpPrinterRec@1100485000 : TEMPORARY Record 2000000039;
      SalesCalcDisc@1007 : Codeunit 60;
      PurchCalcDisc@1008 : Codeunit 70;
      ServCalcDisc@1009 : Codeunit 5950;
      ServerSaveAsPdfFailedErr@1011 : TextConst 'ENU=Cannot open the document because it is empty or cannot be created.';
      PrinterSelectionDone@1100485002 : Boolean;
      Text11012000@1100485004 : TextConst 'ENU=No reports selected.';
      GiveNoError@1100528800 : Boolean;
      Text11012001@1100528401 : TextConst 'ENU=List Service Order not Finished';
      Text11012002@1100528400 : TextConst 'ENU=List Service Orders Invoice not Received';
      Text11012003@1100528402 : TextConst;
      Text11012004@1100528403 : TextConst 'ENU=E-mail has been sent on %1.\\Do you want to continue?';

    PROCEDURE EmailSalesHeader@12(SalesHeader@1000 : Record 36);
    BEGIN
      DoPrintSalesHeader(SalesHeader,TRUE);
    END;

    PROCEDURE PrintSalesHeader@1(SalesHeader@1000 : Record 36);
    BEGIN
      DoPrintSalesHeader(SalesHeader,FALSE);
    END;

    LOCAL PROCEDURE DoPrintSalesHeader@14(SalesHeader@1000 : Record 36;SendAsEmail@1002 : Boolean);
    VAR
      ReportSelections@1001 : TEMPORARY Record 77;
      CustomReportSelection@1005 : Record 9657;
      DocumentMailing@1004 : Codeunit 260;
      TempEmailAttachment@1100528502 : TEMPORARY Record 11229294;
      SalesHeaderExtension@1100528501 : Record 11071868;
      EMailSetup@1100528400 : Record 11229911;
      SalesHeaderExtensionExists@1100528401 : Boolean;
    BEGIN
      SalesHeader.SETRANGE("Document Type", SalesHeader."Document Type"); //**4PS.n
      SalesHeader.SETRANGE("No.",SalesHeader."No.");
      SalesSetup.GET;
      IF SalesSetup."Calc. Inv. Discount" THEN BEGIN
        SalesLine.RESET;
        SalesLine.SETRANGE("Document Type",SalesHeader."Document Type");
        SalesLine.SETRANGE("Document No.",SalesHeader."No.");
        SalesLine.FINDFIRST;
        SalesCalcDisc.RUN(SalesLine);
        SalesHeader.GET(SalesHeader."Document Type",SalesHeader."No.");
        COMMIT;
      END;
      CASE SalesHeader."Document Type" OF
        SalesHeader."Document Type"::Quote:
          ReportSelections.SETRANGE(Usage,ReportSelections.Usage::"S.Quote");
        SalesHeader."Document Type"::"Blanket Order":
          ReportSelections.SETRANGE(Usage,ReportSelections.Usage::"S.Blanket");
        SalesHeader."Document Type"::Order:
          ReportSelections.SETRANGE(Usage,ReportSelections.Usage::"S.Order");
        SalesHeader."Document Type"::"Return Order":
          ReportSelections.SETRANGE(Usage,ReportSelections.Usage::"S.Return");
        SalesHeader."Document Type"::Invoice:
          ReportSelections.SETRANGE(Usage,ReportSelections.Usage::"S.Invoice");
        SalesHeader."Document Type"::"Credit Memo":
          ReportSelections.SETRANGE(Usage,ReportSelections.Usage::"S.Cr.Memo");
        ELSE
          EXIT;
      END;

      IF CustomReportSelection.PrintCustomReports(SalesHeader,SendAsEmail,FALSE) = 0 THEN BEGIN
        //ReportSelections.SETFILTER("Report ID",'<>0');  //**4PS.o
        GetReportSelection(ReportSelections.GETRANGEMIN(Usage),ReportSelections, TRUE);  //**4PS.n
        ReportSelections.FIND('-');
        REPEAT
          IF SendAsEmail THEN BEGIN
            //**4PS.so
            //AttachmentFilePath := SaveSalesHeaderReportAsPdf(SalesHeader,ReportSelections."Report ID");
            //DocumentMailing.EmailFileFromSalesHeader(SalesHeader,AttachmentFilePath);
            //**4PS.eo
            //**4PS.sn
            SaveAnyRecordReportAsPdf(
              SalesHeader,EMailSetup.GetUsageNoFromSalesHeader(SalesHeader),
              SalesHeader."Shortcut Dimension 1 Code",ReportSelections."Report ID",
              TRUE,TempEmailAttachment);
            //**4PS.en
          END ELSE
            REPORT.RUNMODAL(ReportSelections."Report ID",TRUE,FALSE,SalesHeader)
        UNTIL ReportSelections.NEXT = 0;

        //**4PS.sn
        AddRelatedDocumentsForSalesHeader(TempEmailAttachment, SalesHeader);

        IF SendAsEmail THEN BEGIN
          COMMIT;
          DocumentMailing.SetTempEmailAttachments(
            TempEmailAttachment);
          IF TempEmailAttachment.FINDFIRST THEN;
          DocumentMailing.EmailFileFromSalesHeader(SalesHeader, TempEmailAttachment."Attachment Server File Path",CustomReportSelection);

          IF DocumentMailing.IsSent THEN BEGIN
            SalesHeaderExtensionExists := SalesHeaderExtension.GET(SalesHeader."Document Type", SalesHeader."No.");
            IF NOT SalesHeaderExtensionExists THEN
              SalesHeaderExtension.GetSalesHeadExtension(SalesHeader."Document Type", SalesHeader."No.");
            SalesHeaderExtension."E-Mail Order Confirm. Sent by" := USERID;
            SalesHeaderExtension."E-Mail Order Confirm. Sent on" := TODAY;
            IF NOT SalesHeaderExtensionExists THEN
              SalesHeaderExtension.INSERT
            ELSE
              SalesHeaderExtension.MODIFY;
            COMMIT;
          END;
        END;
        //**4PS.en
      END;
    END;

    LOCAL PROCEDURE SaveSalesHeaderReportAsPdf@15(VAR SalesHeader@1000 : Record 36;ReportId@1005 : Integer) : Text[250];
    VAR
      FileManagement@1003 : Codeunit 419;
      ServerAttachmentFilePath@1004 : Text;
    BEGIN
      ServerAttachmentFilePath := FileManagement.ServerTempFileName('pdf');

      REPORT.SAVEASPDF(ReportId,ServerAttachmentFilePath,SalesHeader);
      IF NOT EXISTS(ServerAttachmentFilePath) THEN
        ERROR(ServerSaveAsPdfFailedErr);

      EXIT(ServerAttachmentFilePath);
    END;

    PROCEDURE EmailPurchHeader@1100525005(PurchHeader@1100525000 : Record 38;ArchiveOrder@1100528403 : Boolean;ChangeStatus@1100528402 : 'None,Released,Closed';DirectPostOrder@1100528401 : 'According to Vendor,Not';SendQuoteThanksLetter@1100528405 : Boolean;FromBatch@1100528400 : Boolean);
    VAR
      Vendor@1100528404 : Record 23;
    BEGIN
      //**4PS
      CheckEMailAddressesForPurchHeader(PurchHeader);
      IF NOT FromBatch THEN BEGIN
        IF (NOT SendQuoteThanksLetter) AND
           (PurchHeader."E-Mail Sent on" <> 0D) AND
           GUIALLOWED
        THEN
          IF NOT CONFIRM(Text11012004, TRUE, PurchHeader."E-Mail Sent on") THEN
            ERROR('');
      END;
      DoPrintPurchHeader(
        PurchHeader,TRUE,ArchiveOrder,ChangeStatus,DirectPostOrder,SendQuoteThanksLetter,NOT FromBatch);
    END;

    PROCEDURE PrintPurchHeader@5(PurchHeader@1000 : Record 38);
    VAR
      ChangeStatus@1100528401 : 'None,Released,Closed';
      DirectPostOrder@1100528400 : 'According to Vendor,Not';
    BEGIN
      //**4PS.so
      //PurchHeader.SETRANGE("No.",PurchHeader."No.");
      //PurchSetup.GET;
      //IF PurchSetup."Calc. Inv. Discount" THEN BEGIN
      //  PurchLine.RESET;
      //  PurchLine.SETRANGE("Document Type",PurchHeader."Document Type");
      //  PurchLine.SETRANGE("Document No.",PurchHeader."No.");
      //  PurchLine.FINDFIRST;
      //  PurchCalcDisc.RUN(PurchLine);
      //  PurchHeader.GET(PurchHeader."Document Type",PurchHeader."No.");
      //  COMMIT;
      //END;
      //CASE PurchHeader."Document Type" OF
      //  PurchHeader."Document Type"::Quote:
      //    ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"P.Quote");
      //  PurchHeader."Document Type"::"Blanket Order":
      //    ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"P.Blanket");
      //  PurchHeader."Document Type"::Order:
      //    ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"P.Order");
      //  PurchHeader."Document Type"::"Return Order":
      //    ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"P.Return");
      //  ELSE
      //    EXIT;
      //END;
      //ReportSelection.SETFILTER("Report ID",'<>0');
      //ReportSelection.FIND('-');
      //REPEAT
      //  REPORT.RUNMODAL(ReportSelection."Report ID",TRUE,FALSE,PurchHeader)
      //UNTIL ReportSelection.NEXT = 0;
      //**4PS.eo

      DoPrintPurchHeader(PurchHeader,FALSE,FALSE,ChangeStatus::None,DirectPostOrder::"Not",FALSE,TRUE); //**4PS.n
    END;

    LOCAL PROCEDURE DoPrintPurchHeader@1100525014(PurchHeader@1100525000 : Record 38;SendAsEmail@1100525001 : Boolean;ArchiveOrderAfterMailing@1100528408 : Boolean;ChangeStatusAfterMailing@1100528407 : 'None,Released,Closed';DirectPostOrderBeforeMailing@1100528403 : 'According to Vendor,Not';SendQuoteThanksLetter@1100528402 : Boolean;UserInteractionAllowed@1100528401 : Boolean);
    VAR
      ReportSelections@1100525005 : TEMPORARY Record 77;
      TempEmailAttachment@1100528406 : TEMPORARY Record 11229294;
      EMailSetup@1100528409 : Record 11229911;
      DocumentMailing@1100525004 : Codeunit 260;
      PurchasePlanManagement@1100528404 : Codeunit 11012242;
      PurchasePlanAction@1100528405 : 'Consent,Print,ICMStatus,Word,Confirm,OrderStatus,QuoteStatus,Manual,E-mail,GS1';
      AttachmentFilePath@1100525003 : Text[250];
    BEGIN
      //**4PS
      PurchHeader.SETRANGE("Document Type",PurchHeader."Document Type");
      PurchHeader.SETRANGE("No.",PurchHeader."No.");
      PurchSetup.GET;
      IF PurchSetup."Calc. Inv. Discount" AND NOT SendQuoteThanksLetter THEN BEGIN
        PurchLine.RESET;
        PurchLine.SETRANGE("Document Type",PurchHeader."Document Type");
        PurchLine.SETRANGE("Document No.",PurchHeader."No.");
        PurchLine.FINDFIRST;
        PurchCalcDisc.RUN(PurchLine);
        PurchHeader.GET(PurchHeader."Document Type",PurchHeader."No.");
        COMMIT;
      END;
      CASE PurchHeader."Document Type" OF
        PurchHeader."Document Type"::Quote:
          IF SendQuoteThanksLetter THEN
            ReportSelections.SETRANGE(Usage,ReportSelections.Usage::"6004")
          ELSE
            ReportSelections.SETRANGE(Usage,ReportSelections.Usage::"P.Quote");
        PurchHeader."Document Type"::"Blanket Order":
          ReportSelections.SETRANGE(Usage,ReportSelections.Usage::"P.Blanket");
        PurchHeader."Document Type"::Order:
          ReportSelections.SETRANGE(Usage,ReportSelections.Usage::"P.Order");
        PurchHeader."Document Type"::"Return Order":
          ReportSelections.SETRANGE(Usage,ReportSelections.Usage::"P.Return");
        ELSE
          EXIT;
      END;
      IF UserInteractionAllowed THEN BEGIN
        GetReportSelection(ReportSelections.GETRANGEMIN(Usage),ReportSelections, TRUE);
        IF PurchHeader."Purchase Order Type" = PurchHeader."Purchase Order Type"::"Blanket Order" THEN
          AddReportSelectionsForBlanketOrder(ReportSelections);
      END ELSE
        GetDefaultReportSelection(ReportSelections.GETRANGEMIN(Usage),ReportSelections);;
      ReportSelections.FIND('-');
      IF SendAsEmail AND (PurchHeader."Document Type" = PurchHeader."Document Type"::Order) THEN BEGIN
        IF DirectPostOrderBeforeMailing = DirectPostOrderBeforeMailing::"According to Vendor" THEN
          PurchHeader.DirectPosting;
        PurchasePlanManagement.FinishPhase(PurchHeader,PurchasePlanAction::"E-mail",1);
        PurchHeader.GET(PurchHeader."Document Type",PurchHeader."No.");
      END;
      REPEAT
        IF SendAsEmail THEN
          SaveAnyRecordReportAsPdf(
            PurchHeader,EMailSetup.GetUsageNoFromPurchHeader(PurchHeader,SendQuoteThanksLetter),
            PurchHeader."Shortcut Dimension 1 Code",ReportSelections."Report ID",TRUE,
            TempEmailAttachment)
        ELSE
          REPORT.RUNMODAL(ReportSelections."Report ID",TRUE,FALSE,PurchHeader)
      UNTIL ReportSelections.NEXT = 0;
      IF NOT SendQuoteThanksLetter THEN
        AddRelatedDocumentsForPurchHeader(TempEmailAttachment,PurchHeader);

      IF SendAsEmail THEN BEGIN
        COMMIT;
        DocumentMailing.SetTempEmailAttachments(
          TempEmailAttachment);
        IF TempEmailAttachment.FINDFIRST THEN;
        DocumentMailing.EmailFileFromPurchHeader(
          PurchHeader,TempEmailAttachment."Attachment Server File Path",SendQuoteThanksLetter,NOT UserInteractionAllowed);
        IF DocumentMailing.IsSent AND NOT SendQuoteThanksLetter THEN BEGIN
          PurchHeader.GET(PurchHeader."Document Type", PurchHeader."No.");
          PurchHeader."E-Mail Sent on" := TODAY;
          PurchHeader."E-Mail Sent by" := USERID;
          PurchHeader.MODIFY;
          IF ArchiveOrderAfterMailing AND (PurchHeader."Document Type" = PurchHeader."Document Type"::Order) THEN
            ArchivePurchaseOrder(PurchHeader);
          IF ChangeStatusAfterMailing <> ChangeStatusAfterMailing::None THEN
            HandlePurchaseHeaderStatus(ChangeStatusAfterMailing, PurchHeader);
          COMMIT;
        END;
      END;
    END;

    LOCAL PROCEDURE AddReportSelectionsForBlanketOrder@1100528447(VAR TempReportSelections@1100528401 : TEMPORARY Record 77);
    VAR
      TempReportSelections2@1100528400 : TEMPORARY Record 77;
      DocumentPrint@1100528402 : Codeunit 229;
    BEGIN
      //**4PS
      DocumentPrint.GetReportSelectionNoError(
        TempReportSelections2.Usage::"6001", TempReportSelections2, TRUE);
      IF TempReportSelections2.FINDSET THEN BEGIN
        REPEAT
          TempReportSelections.COPY(TempReportSelections2);
          TempReportSelections.INSERT;
        UNTIL TempReportSelections2.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE ArchivePurchaseOrder@1100528437(VAR PurchaseHeader@1100528400 : Record 38);
    VAR
      ArchiveManagement@1100528401 : Codeunit 5063;
      SegManagement@1100528403 : Codeunit 5051;
      LogInteraction@1100528402 : Boolean;
    BEGIN
      //**4PS
      LogInteraction := SegManagement.FindInteractTmplCode(13) <> '';
      ArchiveManagement.StorePurchDocument(PurchaseHeader,LogInteraction);
      IF LogInteraction THEN BEGIN
        PurchaseHeader.CALCFIELDS("No. of Archived Versions");
        SegManagement.LogDocument(
          13, PurchaseHeader."No.", PurchaseHeader."Doc. No. Occurrence", PurchaseHeader."No. of Archived Versions",
          DATABASE::Vendor, PurchaseHeader."Buy-from Vendor No.", PurchaseHeader."Purchaser Code", '',
          PurchaseHeader."Posting Description", '');
      END;
    END;

    LOCAL PROCEDURE HandlePurchaseHeaderStatus@1100528438(ChangeStatus@1100528400 : 'None,Released,Closed';VAR PurchaseHeader@1100528401 : Record 38);
    VAR
      ReleasePurchaseDocument@1100528402 : Codeunit 415;
    BEGIN
      //**4PS
      CASE ChangeStatus OF
        ChangeStatus::Released:
          ReleasePurchaseDocument.RUN(PurchaseHeader);
        ChangeStatus::Closed:
          ReleasePurchaseDocument.Close(PurchaseHeader);
      END;
    END;

    LOCAL PROCEDURE CheckEMailAddressesForPurchHeader@1100528416(PurchaseHeader@1100528401 : Record 38);
    VAR
      EMailOnBehalf@1100528400 : Record 11012768;
    BEGIN
      //**4PS
      // For a purchase header these checks are done before it is printed to pdf.
      // This is done because direct posting and a purchase plan action may be done
      // before a commit is done and the the e-mail is sent.
      EMailOnBehalf.CheckEMailOnBehalf(
        EMailOnBehalf.GetUsageNoFromPurchHeader(PurchaseHeader));
      CheckEMailToForPurchHeader(PurchaseHeader);
    END;

    LOCAL PROCEDURE CheckEMailToForPurchHeader@1100528421(PurchaseHeader@1100528400 : Record 38);
    VAR
      Vendor@1100528401 : Record 23;
      Contact@1100528402 : Record 5050;
    BEGIN
      //**4PS
      IF PurchaseHeader."Document Type" = PurchaseHeader."Document Type"::Order THEN
        PurchaseHeader.TESTFIELD("Buy-from Vendor No.");

      IF PurchaseHeader."Buy-from Vendor No." <> '' THEN BEGIN
        Vendor.GET(PurchaseHeader."Buy-from Vendor No.");
        IF PurchaseHeader.GetEMailOrder = '' THEN
          Vendor.TESTFIELD("E-Mail for Purch. Order");
        EXIT;
      END;

      IF PurchaseHeader."Buy-from Contact No." <> '' THEN BEGIN
        Contact.GET(PurchaseHeader."Buy-from Contact No.");
        IF PurchaseHeader.GetEMailOrder = '' THEN
          Contact.TESTFIELD("E-Mail for Purch. Order");
        EXIT;
      END;

      IF (PurchaseHeader."Buy-from Vendor No." = '') AND
         (PurchaseHeader."Buy-from Contact No." = '')
      THEN
        ERROR(
          Text11012003, PurchaseHeader.FIELDCAPTION("Buy-from Vendor No."),
          PurchaseHeader.FIELDCAPTION("Buy-from Contact No."),
          PurchaseHeader.TABLECAPTION, PurchaseHeader."No.");
    END;

    PROCEDURE PrintPurchHeaderReceipt@1210190033(PurchHeader@1000 : Record 38);
    VAR
      ReportSelection@1001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      PurchHeader.SETRANGE("Document Type",PurchHeader."Document Type");
      PurchHeader.SETRANGE("No.",PurchHeader."No.");
      PurchSetup.GET;
      IF PurchSetup."Calc. Inv. Discount" THEN BEGIN
        PurchLine.RESET;
        PurchLine.SETRANGE("Document Type",PurchHeader."Document Type");
        PurchLine.SETRANGE("Document No.",PurchHeader."No.");
        PurchLine.FIND('-');
        PurchCalcDisc.RUN(PurchLine);
        PurchHeader.GET(PurchHeader."Document Type",PurchHeader."No.");
        COMMIT;
      END;

      GetReportSelection(6003,ReportSelection, TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID",TRUE,FALSE,PurchHeader)
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintBankAccStmt@10(BankAccStmt@1000 : Record 275);
    VAR
      ReportSelection@1001 : TEMPORARY Record 77;
    BEGIN
      BankAccStmt.SETRECFILTER;
      { //**4PS.so
      ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"B.Stmt");
      ReportSelection.SETFILTER("Report ID",'<>0');
      ReportSelection.ASCENDING := FALSE;
      } //**4PS.eo
      GetReportSelection(ReportSelection.Usage::"B.Stmt",ReportSelection, TRUE);  //**4PS.n
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUN(ReportSelection."Report ID",TRUE,FALSE,BankAccStmt);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintCheck@11(VAR NewGenJnlLine@1000 : Record 81);
    VAR
      GenJnlLine@1001 : Record 81;
      ReportSelection@1002 : TEMPORARY Record 77;
    BEGIN
      GenJnlLine.COPY(NewGenJnlLine);
      GenJnlLine.OnCheckGenJournalLinePrintCheckRestrictions;
      //**4PS.so
      //ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"B.Check");
      //ReportSelection.SETFILTER("Report ID",'<>0');
      //**4PS.eo
      GetReportSelection(ReportSelection.Usage::"B.Check",ReportSelection,TRUE);  //**4PS.n
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID",TRUE,FALSE,GenJnlLine);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintTransferHeader@2(TransHeader@1000 : Record 5740);
    VAR
      ReportSelection@1001 : TEMPORARY Record 77;
    BEGIN
      TransHeader.SETRANGE("No.",TransHeader."No.");
      { //**4PS.so
      ReportSelection.SETRANGE(Usage,ReportSelection.Usage::Inv1);
      ReportSelection.SETFILTER("Report ID",'<>0');
      } //**4PS.eo
      GetReportSelection(ReportSelection.Usage::Inv1,ReportSelection,TRUE);  //**4PS.n
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID",TRUE,FALSE,TransHeader)
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintServiceContract@3(ServiceContract@1000 : Record 5965);
    VAR
      ReportSelection@1001 : TEMPORARY Record 77;
    BEGIN
      ServiceContract.SETRANGE("Contract No.",ServiceContract."Contract No.");
      CASE ServiceContract."Contract Type" OF
        ServiceContract."Contract Type"::Quote:
          ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"SM.Contract Quote");
        ServiceContract."Contract Type"::Contract:
          ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"SM.Contract");
        ELSE
          EXIT;
      END;
      //ReportSelection.SETFILTER("Report ID",'<>0');  //**4PS.o
      GetReportSelection(ReportSelection.GETRANGEMIN(Usage),ReportSelection,TRUE);  //**4PS.n
      IF ReportSelection.FIND('-') THEN BEGIN
        REPEAT
          REPORT.RUNMODAL(ReportSelection."Report ID",TRUE,FALSE,ServiceContract)
        UNTIL ReportSelection.NEXT = 0;
      END ELSE
        ERROR(Text001,ReportSelection.TABLECAPTION,FORMAT(ServiceContract."Contract Type"),ServiceContract."Contract No.");
    END;

    PROCEDURE PrintServiceHeader@4(ServiceHeader@1000 : Record 5900);
    VAR
      ReportSelection@1001 : TEMPORARY Record 77;
    BEGIN
      { //**4PS.so  Standard Service not used by 4PS
      SalesSetup.GET;
      ServiceHeader.SETRANGE("No.",ServiceHeader."No.");
      IF SalesSetup."Calc. Inv. Discount" THEN BEGIN
        ServLine.RESET;
        ServLine.SETRANGE("Document Type",ServiceHeader."Document Type");
        ServLine.SETRANGE("Document No.",ServiceHeader."No.");
        ServLine.FINDFIRST;
        ServCalcDisc.RUN(ServLine);
        ServiceHeader.GET(ServiceHeader."Document Type",ServiceHeader."No.");
        COMMIT;
      END;
      CASE ServiceHeader."Document Type" OF
        ServiceHeader."Document Type"::Quote:
          ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"SM.Quote");
        ServiceHeader."Document Type"::Order:
          ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"SM.SO");
        ServiceHeader."Document Type"::Invoice:
          ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"SM.Invoice");
        ServiceHeader."Document Type"::"Credit Memo":
          ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"SM.Credit Memo");
        ELSE
          EXIT;
      END;
      GetReportSelection(ReportSelection.GETRANGEMIN(Usage),ReportSelection,TRUE);
      IF ReportSelection.FIND('-') THEN BEGIN
        REPEAT
          REPORT.RUNMODAL(ReportSelection."Report ID",TRUE,FALSE,ServiceHeader);
        UNTIL ReportSelection.NEXT = 0;
      END ELSE
        ERROR(Text002,ReportSelection.FIELDCAPTION("Report ID"),ServiceHeader.TABLECAPTION,ReportSelection.TABLECAPTION);
      } //**4PS.eo
    END;

    PROCEDURE PrintAsmHeader@9(AsmHeader@1000 : Record 900);
    VAR
      ReportSelections@1001 : Record 77;
    BEGIN
      AsmHeader.SETRANGE("No.",AsmHeader."No.");
      CASE AsmHeader."Document Type" OF
        AsmHeader."Document Type"::Quote,
        AsmHeader."Document Type"::"Blanket Order",
        AsmHeader."Document Type"::Order:
          ReportSelections.SETRANGE(Usage,ReportSelections.Usage::"Asm. Order");
        ELSE
          EXIT;
      END;
      ReportSelections.SETFILTER("Report ID",'<>0');
      ReportSelections.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelections."Report ID",TRUE,FALSE,AsmHeader)
      UNTIL ReportSelections.NEXT = 0;
    END;

    PROCEDURE PrintSalesOrder@6(SalesHeader@1000 : Record 36;Usage@1001 : 'Order Confirmation,Work Order,Pick Instruction');
    VAR
      ReportSelection@1002 : TEMPORARY Record 77;
      CustomReportSelection@1004 : Record 9657;
    BEGIN
      IF SalesHeader."Document Type" <> SalesHeader."Document Type"::Order THEN
        EXIT;

      SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"); //**4PS.n
      SalesHeader.SETRANGE("No.",SalesHeader."No.");
      SalesSetup.GET;
      IF SalesSetup."Calc. Inv. Discount" THEN BEGIN
        SalesLine.RESET;
        SalesLine.SETRANGE("Document Type",SalesHeader."Document Type");
        SalesLine.SETRANGE("Document No.",SalesHeader."No.");
        SalesLine.FINDFIRST;
        SalesCalcDisc.RUN(SalesLine);
        SalesHeader.GET(SalesHeader."Document Type",SalesHeader."No.");
        COMMIT;
      END;

      CASE Usage OF
        Usage::"Order Confirmation":
          ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"S.Order");
        Usage::"Work Order":
          ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"S.Work Order");
        Usage::"Pick Instruction":
          ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"S.Order Pick Instruction");
        ELSE
          EXIT;
      END;

      IF CustomReportSelection.PrintCustomReports(SalesHeader,FALSE,FALSE) = 0 THEN BEGIN
      //ReportSelection.SETFILTER("Report ID",'<>0');  //**4PS.o
        GetReportSelection(ReportSelection.GETRANGEMIN(Usage),ReportSelection,TRUE);  //**4PS.n
        ReportSelection.FIND('-');
        REPEAT
          REPORT.RUNMODAL(ReportSelection."Report ID",GUIALLOWED,FALSE,SalesHeader)
        UNTIL ReportSelection.NEXT = 0;
      END;
    END;

    PROCEDURE PrintSalesHeaderArch@7(SalesHeaderArch@1000 : Record 11072055);
    VAR
      ReportSelection@1001 : TEMPORARY Record 77;
    BEGIN
      SalesHeaderArch.SETRANGE("No.",SalesHeaderArch."No.");
      SalesHeaderArch.SETRANGE("Doc. No. Occurrence",SalesHeaderArch."Doc. No. Occurrence");
      SalesHeaderArch.SETRANGE("Version No.",SalesHeaderArch."Version No.");
      CASE SalesHeaderArch."Document Type" OF
        SalesHeaderArch."Document Type"::Quote:
          BEGIN
            ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"S.Arch. Quote");
            SalesHeaderArch.SETRANGE("Document Type",SalesHeaderArch."Document Type"::Quote);
          END;
        SalesHeaderArch."Document Type"::Order:
          BEGIN
            ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"S.Arch. Order");
            SalesHeaderArch.SETRANGE("Document Type",SalesHeaderArch."Document Type"::Order);
          END;
        SalesHeaderArch."Document Type"::"Return Order":
          BEGIN
            ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"S. Arch. Return Order");
            SalesHeaderArch.SETRANGE("Document Type",SalesHeaderArch."Document Type"::"Return Order");
          END;
        ELSE
          EXIT;
      END;
      //ReportSelection.SETFILTER("Report ID",'<>0');  //**4PS.o
      GetReportSelection(ReportSelection.GETRANGEMIN(Usage),ReportSelection,TRUE);  //**4PS.n
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID",TRUE,FALSE,SalesHeaderArch)
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintPurchHeaderArch@8(PurchHeaderArch@1000 : Record 11072057);
    VAR
      ReportSelection@1001 : TEMPORARY Record 77;
    BEGIN
      PurchHeaderArch.SETRANGE("No.",PurchHeaderArch."No.");
      PurchHeaderArch.SETRANGE("Doc. No. Occurrence",PurchHeaderArch."Doc. No. Occurrence");
      PurchHeaderArch.SETRANGE("Version No.",PurchHeaderArch."Version No.");

      CASE PurchHeaderArch."Document Type" OF
        PurchHeaderArch."Document Type"::Quote:
          BEGIN
            ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"P.Arch. Quote");
            PurchHeaderArch.SETRANGE("Document Type",PurchHeaderArch."Document Type"::Quote);
          END;
        PurchHeaderArch."Document Type"::Order:
          BEGIN
            ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"P.Arch. Order");
            PurchHeaderArch.SETRANGE("Document Type",PurchHeaderArch."Document Type"::Order);
          END;
        PurchHeaderArch."Document Type"::"Return Order":
          BEGIN
            ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"P. Arch. Return Order");
            PurchHeaderArch.SETRANGE("Document Type",PurchHeaderArch."Document Type"::"Return Order");
          END;
        ELSE
          EXIT;
      END;
      //ReportSelection.SETFILTER("Report ID",'<>0');  //**4PS.o
      GetReportSelection(ReportSelection.GETRANGEMIN(Usage),ReportSelection,TRUE);  //**4PS.n
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID",TRUE,FALSE,PurchHeaderArch)
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintBudget@11012190(BudgetLine@11012000 : Record 11012001);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      BudgetLine.SETRANGE("Project No.", BudgetLine."Project No.");
      BudgetLine.SETRANGE(Adjustment, BudgetLine.Adjustment);
      BudgetLine.SETRANGE("Extension Contract", BudgetLine."Extension Contract");
      BudgetLine.SETRANGE(Option, BudgetLine.Option);

      GetReportSelection(1009,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, BudgetLine);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE EmailExtensionContract@1100528501(ExtensionContract@1100528500 : Record 11012004);
    BEGIN
      //**4PS
      DoPrintExtensionContract(ExtensionContract,TRUE);
    END;

    PROCEDURE PrintExtensionContract@11012180(ExtensionContract@11012000 : Record 11012004);
    BEGIN
      //**4PS
      DoPrintExtensionContract(ExtensionContract,FALSE);
    END;

    LOCAL PROCEDURE DoPrintExtensionContract@1100528502(ExtensionContract@1100528500 : Record 11012004;SendAsEmail@1100528501 : Boolean);
    VAR
      ReportSelections@1100528502 : TEMPORARY Record 77;
      EMailSetup@1100528400 : Record 11229911;
      TempEmailAttachment@1100528401 : TEMPORARY Record 11229294;
      DocumentMailing@1100528504 : Codeunit 260;
    BEGIN
      //**4PS
      ExtensionContract.SETRANGE("Project No.", ExtensionContract."Project No.");
      ExtensionContract.SETRANGE("Contract No.", ExtensionContract."Contract No.");

      GetReportSelection(1011,ReportSelections,TRUE);
      ReportSelections.FIND('-');
      REPEAT
        IF SendAsEmail THEN
          SaveAnyRecordReportAsPdf(
            ExtensionContract,EMailSetup.Usage::"80",ExtensionContract."Department Code",
            ReportSelections."Report ID",TRUE,TempEmailAttachment)
        ELSE
          REPORT.RUNMODAL(ReportSelections."Report ID",TRUE,FALSE,ExtensionContract);
      UNTIL ReportSelections.NEXT = 0;

      IF SendAsEmail THEN BEGIN
        COMMIT;
        DocumentMailing.SetTempEmailAttachments(
          TempEmailAttachment);
        IF TempEmailAttachment.FINDFIRST THEN;
        DocumentMailing.EmailFileFromExtensionContract(
          ExtensionContract,TempEmailAttachment."Attachment Server File Path");
      END;
    END;

    PROCEDURE PrintAdjustment@11012200(BudgetAdjustmentRec@11012000 : Record 11012003);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      BudgetAdjustmentRec.SETRANGE("Project No.", BudgetAdjustmentRec."Project No.");
      BudgetAdjustmentRec.SETRANGE("No.", BudgetAdjustmentRec."No.");

      GetReportSelection(1010,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, BudgetAdjustmentRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintOption@11012060(OptionRec@11012000 : Record 11012502);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      OptionRec.SETRANGE("Project No.", OptionRec."Project No.");
      OptionRec.SETRANGE(Option, OptionRec.Option);
      OptionRec.SETRANGE("Plot No.", OptionRec."Plot No.");       //evdb
      OptionRec.SETRANGE("House Model", OptionRec."House Model"); //evdb
      //dbeekman.sn, 25-03-2010: 17615
      OptionRec.SETRANGE("Main Group",OptionRec."Main Group");
      OptionRec.SETRANGE(Group,OptionRec.Group);
      OptionRec.SETRANGE("Sub Group",OptionRec."Sub Group");
      //dbeekman.en, 25-03-2010: 17615

      GetReportSelection(1012,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, OptionRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintPurchaseAction@11012070(ProjectPurchActRec@11012000 : Record 11012026);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      ProjectPurchActRec.SETRANGE("Project No.", ProjectPurchActRec."Project No.");
      ProjectPurchActRec.SETRANGE(Code, ProjectPurchActRec.Code);

      GetReportSelection(1013,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ProjectPurchActRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintProjMaterialReq@1100525002(VAR ProjMaterialReqLine@11012000 : Record 11012526);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS (31954)
      ProjMaterialReqLine.SETRANGE("Project No.", ProjMaterialReqLine."Project No.");

      GetReportSelection(1051,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ProjMaterialReqLine);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintProjAdvice@11012130(VAR AdviceOrderLine@11012000 : Record 11012055);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      AdviceOrderLine.SETRANGE("Project No.", AdviceOrderLine."Project No.");

      GetReportSelection(1014,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, AdviceOrderLine);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintProjCostPlus@1210190018(VAR SettlRec@1210190001 : Record 11012021);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS

      GetReportSelection(1008,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, SettlRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintProjWorksheet@1210190019(VAR ProjRec@1210190001 : Record 11072003);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      GetReportSelection(1006,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ProjRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintProjDeliveryNote@1210190027(IProjectDeliveryNoteHeader@1210190001 : Record 11012672);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PSmg, 14-07-11: M28026
      IProjectDeliveryNoteHeader.SETRANGE("No.", IProjectDeliveryNoteHeader."No.");

      GetReportSelection(1027,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, IProjectDeliveryNoteHeader);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintProjectElement@1100528801(IProjectElement@1100528800 : Record 11012010);
    VAR
      ReportSelection@1100528801 : TEMPORARY Record 77;
    BEGIN
      //**4PSmve, 03-11-2014: DP00686
      IProjectElement.SETRANGE("Project No.", IProjectElement."Project No.");
      IProjectElement.SETRANGE(Element, IProjectElement.Element);

      GetReportSelection(1050,ReportSelection, TRUE);  //**4PS.n
      ReportSelection.FINDLAST;
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID",TRUE,FALSE,IProjectElement)
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintPostedProjDeliveryNote@1210190028(IPostedProjDelNoteHeader@1210190001 : Record 11012674);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PSmg, 14-07-11: M28026
      IPostedProjDelNoteHeader.SETRANGE("No.", IPostedProjDelNoteHeader."No.");

      GetReportSelection(1028,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, IPostedProjDelNoteHeader);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintAssemblyProjWorksheet@1210190006(VAR ProjRec@1210190001 : Record 11072003);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      GetReportSelection(1500,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ProjRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintCustWorksheet@1210190020(VAR CommRec@1210190001 : Record 11012020);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      GetReportSelection(1007,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, CommRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintProgress@1210190023(ProgressLevelRec@11012000 : Record 11012036);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      ProgressLevelRec.SETRANGE("Project No.", ProgressLevelRec."Project No.");
      ProgressLevelRec.SETRANGE("Progress Date", ProgressLevelRec."Progress Date");

      GetReportSelection(1015,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ProgressLevelRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintPrognosis@1100485101(PrognosisRec@11012000 : Record 11012034);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      PrognosisRec.SETRANGE("Project No.", PrognosisRec."Project No.");
      PrognosisRec.SETRANGE("Prognosis Date", PrognosisRec."Prognosis Date");

      GetReportSelection(1016,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, PrognosisRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE EmailPlot@1100528513(Plot@1000 : Record 11012500);
    BEGIN
      //**4PS
      DoPrintPlot(Plot,TRUE);
    END;

    PROCEDURE PrintPlot@1100485112(Plot@11012000 : Record 11012500);
    BEGIN
      //**4PS
      DoPrintPlot(Plot,FALSE);
    END;

    LOCAL PROCEDURE DoPrintPlot@1100528511(Plot@1000 : Record 11012500;SendAsEmail@1002 : Boolean);
    VAR
      ReportSelections@1001 : TEMPORARY Record 77;
      EMailSetup@1100528400 : Record 11229911;
      Job@1100528402 : Record 11072003;
      TempEmailAttachment@1100528401 : TEMPORARY Record 11229294;
      DocumentMailing@1004 : Codeunit 260;
    BEGIN
      //**4PS
      Plot.SETRANGE("Project No.", Plot."Project No.");
      Plot.SETRANGE("Plot No.", Plot."Plot No.");
      IF Job.GET(Plot."Project No.") THEN;

      GetReportSelection(1017,ReportSelections,TRUE);
      ReportSelections.FIND('-');
      REPEAT
        IF SendAsEmail THEN
          SaveAnyRecordReportAsPdf(
            Plot,EMailSetup.Usage::"82",Job."Global Dimension 1 Code",
            ReportSelections."Report ID",TRUE,TempEmailAttachment)
        ELSE
          REPORT.RUNMODAL(ReportSelections."Report ID",TRUE,FALSE,Plot);
      UNTIL ReportSelections.NEXT = 0;

      IF SendAsEmail THEN BEGIN
        COMMIT;
        DocumentMailing.SetTempEmailAttachments(
          TempEmailAttachment);
        IF TempEmailAttachment.FINDFIRST THEN;
        DocumentMailing.EmailFileFromPlot(
          Plot,TempEmailAttachment."Attachment Server File Path");
      END;
    END;

    PROCEDURE EmailConsentedDocuments@1100528406(UserSetup@1100528400 : Record 91;FromConsentedDateTime@1100528402 : DateTime;ToConsentedDateTime@1100528401 : DateTime;ShowEmailDialog@1100528404 : Boolean);
    BEGIN
      //**4PS
      DoPrintConsentedDocuments(UserSetup,FromConsentedDateTime,ToConsentedDateTime,TRUE,ShowEmailDialog);
    END;

    LOCAL PROCEDURE DoPrintConsentedDocuments@1100528407(UserSetup@1100528400 : Record 91;FromConsentedDateTime@1100528404 : DateTime;ToConsentedDateTime@1100528403 : DateTime;SendAsEmail@1100528407 : Boolean;ShowEmailDialog@1100528401 : Boolean);
    VAR
      TempEmailAttachment@1100528405 : TEMPORARY Record 11229294;
      ConsentedDocuments@1100528402 : Report 11012228;
      DocumentMailing@1100528406 : Codeunit 260;
    BEGIN
      //**4PS
      UserSetup.SETRANGE("User ID",UserSetup."User ID");
      IF SendAsEmail THEN BEGIN
        SaveConsentedDocumentsAsPdf(UserSetup,FromConsentedDateTime,ToConsentedDateTime,TempEmailAttachment);
        COMMIT;
        DocumentMailing.SetTempEmailAttachments(
          TempEmailAttachment);
        IF TempEmailAttachment.FINDFIRST THEN;
        DocumentMailing.EmailConsentedDocumentsFileFromUserSetup(
          UserSetup,TempEmailAttachment."Attachment Server File Path",ShowEmailDialog);
      END;
    END;

    PROCEDURE EmailHoursByEmployee@1100528408(VAR Employee@1100528400 : Record 5200;UseEmailAddress@1100528402 : Integer;ShowEmailDialog@1100528401 : Boolean);
    BEGIN
      //**4PS
      DoPrintHoursByEmployee(Employee,UseEmailAddress,TRUE,ShowEmailDialog);
    END;

    LOCAL PROCEDURE DoPrintHoursByEmployee@1100528409(VAR Employee2@1100528400 : Record 5200;UseEmailAddress@1100528404 : Integer;SendAsEmail@1100528401 : Boolean;ShowEmailDialog@1100528406 : Boolean);
    VAR
      Employee@1100528405 : Record 5200;
      TempEmailAttachment@1100528402 : TEMPORARY Record 11229294;
      EMailSetup@1100528408 : Record 11229911;
      DocumentMailing@1100528403 : Codeunit 260;
      DatetimeMgt@1100528407 : Codeunit 11020218;
    BEGIN
      //**4PS
      Employee.COPY(Employee2);
      Employee.SETRANGE("No.",Employee."No.");
      IF SendAsEmail THEN BEGIN
        SaveAnyRecordReportAsPdf(
          Employee,EMailSetup.Usage::"110",Employee."Global Dimension 1 Code",
          REPORT::"Hours by Employee",TRUE,TempEmailAttachment);
        COMMIT;
        DocumentMailing.SetTempEmailAttachments(
          TempEmailAttachment);
        IF TempEmailAttachment.FINDFIRST THEN;
        DocumentMailing.EmailHoursByEmployeeFileFromEmployee(
          Employee,UseEmailAddress,TempEmailAttachment."Attachment Server File Path",
          STRSUBSTNO('%1-%2.pdf', Employee."No.", DatetimeMgt.GetTimestamp),
          ShowEmailDialog);
      END;
    END;

    PROCEDURE PrintSummarySheet@1100485027(SumlineRec@1100485001 : Record 11012171);
    VAR
      SummarySheetLineRec@1100485000 : Record 11012171;
      ReportSelection@1100485002 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      SummarySheetLineRec.SETFILTER("Estimate No.",SumlineRec."Estimate No.");
      SummarySheetLineRec.SETFILTER(Summary,SumlineRec.Summary);

      GetReportSelection(3500,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, SummarySheetLineRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintEstimateOLD@1100485009(EstPartRec@11012000 : Record 11012153;Level@11012001 : Integer);
    VAR
      ReportSelection@11012002 : TEMPORARY Record 77;
      EstRec@1100485000 : Record 11012151;
      SubEstRec@11012004 : Record 11012152;
      EstLineRec@1100485001 : Record 11012154;
      Usage2@1100485002 : Integer;
    BEGIN
      //**4PS
      CASE Level OF
        0:
          BEGIN
            EstRec.SETFILTER("No.", EstPartRec."Estimate No.");
            Usage2 := 3501;
          END;
        1:
          BEGIN
            SubEstRec.SETFILTER("Estimate No.", EstPartRec."Estimate No.");
            SubEstRec.SETFILTER("Sub-Estimate No.", EstPartRec."Sub-Estimate No.");
            Usage2 := 3502;
          END;
        2:
          BEGIN
            EstPartRec.SETFILTER("Estimate No.", EstPartRec."Estimate No.");
            EstPartRec.SETFILTER("Sub-Estimate No.", EstPartRec."Sub-Estimate No.");
            EstPartRec.SETFILTER("Part Group", EstPartRec."Part Group");
            EstPartRec.SETFILTER(Part, EstPartRec.Part);
            Usage2 := 3503;
          END;
        3:
          BEGIN
            EstLineRec.SETFILTER("Estimate No.", EstPartRec."Estimate No.");
            EstLineRec.SETFILTER("Sub-Estimate No.", EstPartRec."Sub-Estimate No.");
            EstLineRec.SETFILTER("Part Group", EstPartRec."Part Group");
            EstLineRec.SETFILTER(Part, EstPartRec.Part);
            Usage2 := 3504;
          END;
        4:
          BEGIN
            EstRec.SETFILTER("No.", EstPartRec."Estimate No.");
            Usage2 := 3505;
          END;
      END;

      GetReportSelection(Usage2,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        CASE Level OF
          0,4: REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, EstRec);
          1: REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, SubEstRec);
          2: REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, EstPartRec);
          3: REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, EstLineRec);
        END;
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintEstimateNEW@1100528900(EstPartRec@11012000 : Record 11072073;Level@11012001 : Integer);
    VAR
      ReportSelection@11012002 : TEMPORARY Record 77;
      EstRec@1100485000 : Record 11012151;
      SubEstRec@11012004 : Record 11072074;
      EstLineRec@1100485001 : Record 11072072;
      Usage2@1100485002 : Integer;
    BEGIN
      //**4PS
      //DP00381
      CASE Level OF
        0:
          BEGIN
            EstRec.SETFILTER("No.", EstPartRec."Estimate No.");
            Usage2 := 3501;
          END;
        1:
          BEGIN
            SubEstRec.SETFILTER("Estimate No.", EstPartRec."Estimate No.");
            SubEstRec.SETFILTER("Sub-Estimate No.", EstPartRec."Sub-Estimate No.");
            Usage2 := 3502;
          END;
        2:
          BEGIN
            EstPartRec.SETFILTER("Estimate No.", EstPartRec."Estimate No.");
            EstPartRec.SETFILTER("Sub-Estimate No.", EstPartRec."Sub-Estimate No.");
            EstPartRec.SETFILTER("Part Group", EstPartRec."Part Group");
            EstPartRec.SETFILTER(Part, EstPartRec.Part);
            Usage2 := 3503;
          END;
        3:
          BEGIN
            EstLineRec.SETFILTER("Estimate No.", EstPartRec."Estimate No.");
            EstLineRec.SETFILTER("Sub-Estimate No.", EstPartRec."Sub-Estimate No.");
            EstLineRec.SETFILTER("Part Group", EstPartRec."Part Group");
            EstLineRec.SETFILTER(Part, EstPartRec.Part);
            Usage2 := 3504;
          END;
        4:
          BEGIN
            EstRec.SETFILTER("No.", EstPartRec."Estimate No.");
            Usage2 := 3505;
          END;
      END;

      GetReportSelection(Usage2,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        CASE Level OF
          0,4: REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, EstRec);
          1: REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, SubEstRec);
          2: REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, EstPartRec);
          3: REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, EstLineRec);
        END;
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintBidFormRAW@1100525004(Estimate@1100485001 : Record 11012151);
    VAR
      SummarySheetLineRec@1100485000 : Record 11012171;
      ReportSelection@1100485002 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      Estimate.SETRANGE("No.", Estimate."No.");

      GetReportSelection(3506, ReportSelection,TRUE);
      ReportSelection.FINDFIRST;
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, Estimate);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintBidFormCoverPageRAW@1100525010(Estimate@1100485001 : Record 11012151);
    VAR
      SummarySheetLineRec@1100485000 : Record 11012171;
      ReportSelection@1100485002 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      Estimate.SETRANGE("No.", Estimate."No.");

      GetReportSelection(3507, ReportSelection,TRUE);
      ReportSelection.FINDFIRST;
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, Estimate);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintTryOutVersionEstimate@1210190012(VAR TryoutQuoteSubEstimateRec@11012000 : Record 11012765);
    VAR
      ReportSelection@11012002 : TEMPORARY Record 77;
      EstLineRec@11012006 : Record 11012154;
      SubFilter@1210190001 : Text[250];
    BEGIN
      //**4PS
      TryoutQuoteSubEstimateRec.SETRANGE("Estimate No.", TryoutQuoteSubEstimateRec."Estimate No.");

      SubFilter := '';
      IF TryoutQuoteSubEstimateRec.FINDSET THEN BEGIN
        REPEAT
          IF STRLEN(SubFilter) + STRLEN(TryoutQuoteSubEstimateRec."Sub-Estimate No.") < 249 THEN
            SubFilter := SubFilter + TryoutQuoteSubEstimateRec."Sub-Estimate No." + '|';
        UNTIL TryoutQuoteSubEstimateRec.NEXT = 0;
        IF STRLEN(SubFilter) > 1 THEN
          SubFilter := COPYSTR(SubFilter,1, (STRLEN(SubFilter) - 1 ));
      END;

      EstLineRec.SETRANGE("Estimate No.", TryoutQuoteSubEstimateRec."Estimate No.");
      EstLineRec.SETFILTER("Sub-Estimate No.", SubFilter);

      GetReportSelection(2006,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, EstLineRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintRelation@1100485011(ContRec@1100485002 : Record 5050);
    VAR
      ReportSelection@1100485001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      ContRec.SETRANGE("No.", ContRec."No.");

      GetReportSelection(2001,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ContRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintProvWork@1100485014(ProvWorkRec@1100485002 : Record 11012774);
    VAR
      ReportSelection@1100485001 : TEMPORARY Record 77;
      lvProvWorkRec@1100485003 : Record 11012774;
    BEGIN
      //**4PS
      lvProvWorkRec.SETRANGE("No.", ProvWorkRec."No.");

      GetReportSelection(2002,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, lvProvWorkRec);
      UNTIL ReportSelection.NEXT = 0
    END;

    PROCEDURE PrintServOrder@1210190000(ServOrder@11012000 : Record 11012823);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      ServOrder.SETRANGE("No.", ServOrder."No.");

      GetReportSelection(ReportSelection.Usage::"SM.Order",ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ServOrder);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintServOrderTexts@1100525024(ServOrder@11012000 : Record 11012823);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      ServOrder.SETRANGE("No.", ServOrder."No.");

      GetReportSelection(3008,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ServOrder);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintServContract@1210190002(ServContr@11012000 : Record 11012812);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      ServContr.SETRANGE("No.", ServContr."No.");

      GetReportSelection(ReportSelection.Usage::"SM.Contract",ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ServContr);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintServLocation@1210190009(ServLoc@11012000 : Record 11012801);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      ServLoc.SETRANGE("No.", ServLoc."No.");

      GetReportSelection(3002,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ServLoc);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintServAdvice@1210190013(VAR ServAdviceOrderLine@11012000 : Record 11012055);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
      ServAdviceOrderLine2@1100485000 : Record 11012055;
    BEGIN
      //**4PS
      ServAdviceOrderLine2.COPY(ServAdviceOrderLine);
      //ServAdviceOrderLine2.SETRANGE("Service Order No.", ServAdviceOrderLine2."Service Order No.");

      GetReportSelection(3004,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ServAdviceOrderLine2);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintServCostPlus@1210190014(VAR ServOrder@1210190000 : Record 11012823);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
      ServOrder2@1100525000 : Record 11012823;
    BEGIN
      //**4PS
      ServOrder2.COPY(ServOrder);

      GetReportSelection(3003,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ServOrder2);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE EmailServiceOrderWorksheet@1100528500(ServiceOrder@1100528500 : Record 11012823;Manually@1100528501 : Boolean);
    BEGIN
      //**4PS
      DoPrintServiceOrderWorksheet(ServiceOrder,TRUE,Manually,Manually);
    END;

    PROCEDURE PrintServiceOrderWorksheet@1100485010(ServiceOrder@1100485000 : Record 11012823);
    BEGIN
      //**4PS
      DoPrintServiceOrderWorksheet(ServiceOrder,FALSE,TRUE,TRUE);
    END;

    LOCAL PROCEDURE DoPrintServiceOrderWorksheet@1100528503(ServiceOrder@1100528501 : Record 11012823;SendAsEmail@1100528500 : Boolean;UserInteractionAllowed@1100528510 : Boolean;Manually@1100528503 : Boolean);
    VAR
      ReportSelections@1100528502 : TEMPORARY Record 77;
      TempEmailAttachment@1100528506 : TEMPORARY Record 11229294;
      ServiceSetup@1100528507 : Record 11012800;
      EMailSetup@1100528400 : Record 11229911;
      DocumentMailing@1100528504 : Codeunit 260;
    BEGIN
      //**4PS
      IF ServiceSetup.GET THEN;

      ServiceOrder.SETRANGE("No.",ServiceOrder."No.");

      IF UserInteractionAllowed THEN
        GetReportSelection(3000,ReportSelections,TRUE)
      ELSE
        GetDefaultReportSelection(3000,ReportSelections);

      ReportSelections.FIND('-');
      REPEAT
        IF SendAsEmail THEN BEGIN
          SaveAnyRecordReportAsPdf(
            ServiceOrder,EMailSetup.Usage::"Service Order Worksheet",ServiceOrder."Global Dimension 1 Code",
            ReportSelections."Report ID",TRUE,TempEmailAttachment);
          IF WorksheetMustBeDownloaded(ServiceSetup,Manually) THEN BEGIN
            DownloadServiceDocument(
              TempEmailAttachment,ServiceSetup,ServiceOrder."No.",0,ReportSelections.Sequence);
            IF ServiceSetup."Store Mailed Worksheet" THEN
              MarkAttachmentToBeSavedAsExternalDocuments(TempEmailAttachment);
          END;
        END ELSE
          REPORT.RUNMODAL(ReportSelections."Report ID",TRUE,FALSE,ServiceOrder);
      UNTIL ReportSelections.NEXT = 0;
      IF ServiceSetup."Send Automatic E-Mail Using" = ServiceSetup."Send Automatic E-Mail Using"::SMTP THEN
        AddRelatedDocumentsForWorkSheet(TempEmailAttachment,ServiceOrder);

      IF SendAsEmail THEN BEGIN
        // No COMMIT when this function is used in transaction when Document Reference Point is inserted.
      //  IF Manually THEN //C028800.o
        COMMIT;
        DocumentMailing.SetTempEmailAttachments(
          TempEmailAttachment);
        IF TempEmailAttachment.FINDFIRST THEN;
        DocumentMailing.EmailWorksheetFileFromServiceOrder(
          ServiceOrder,TempEmailAttachment."Attachment Server File Path",
          TempEmailAttachment."Attachment Name",UserInteractionAllowed,Manually);

        IF DocumentMailing.IsSent THEN BEGIN
          ServiceOrder.FIND;
          ServiceOrder."Date/Time Export Work Sheet" := CURRENTDATETIME;
          ServiceOrder.MODIFY;
          SaveWorksheetsAsExternalDocuments(
            TempEmailAttachment,ServiceSetup,ServiceOrder,
            DocumentMailing.GetServiceOrderEMailQueueEntryNo);
          // No COMMIT when this function is used in transaction when Document Reference Point is inserted.
      //    IF Manually THEN //C028800.o
          COMMIT;
        END;
      END;
    END;

    PROCEDURE SaveSOAppointmentLettersAsExternalDocuments@1100528404(VAR ServiceOrder@1100528400 : Record 11012823;OnlyMarkedAsResend@1100528405 : Boolean);
    VAR
      ServiceOrder2@1100528408 : Record 11012823;
      ServiceSetup@1100528401 : Record 11012800;
      ServiceOrderExtension@1100528406 : Record 11071727;
      TempReportSelections@1100528403 : TEMPORARY Record 77;
      TempEmailAttachment@1100528404 : TEMPORARY Record 11229294;
      EMailSetup@1100528407 : Record 11229911;
    BEGIN
      //**4PS
      IF ServiceSetup.GET THEN;

      GetDefaultReportSelection(TempReportSelections.Usage::"3021",TempReportSelections);

      IF TempReportSelections.FINDSET THEN
        REPEAT
          IF ServiceOrder.FINDSET THEN
            REPEAT
              ServiceOrder2.COPY(ServiceOrder);
              ServiceOrder2.SETRECFILTER;
              SaveAnyRecordReportAsPdf(
                ServiceOrder2,EMailSetup.Usage::"Maintenance Appointment Proposal",
                ServiceOrder."Global Dimension 1 Code",TempReportSelections."Report ID",
                TRUE,TempEmailAttachment);
              DownloadServiceDocument(
                TempEmailAttachment,ServiceSetup,ServiceOrder."No.",0,TempReportSelections.Sequence);
              MarkAttachmentToBeSavedAsExternalDocuments(TempEmailAttachment);
              SaveSOAppointmentLetterAsExternalDocuments(TempEmailAttachment,ServiceOrder);
              ServiceOrderExtension.GetServOrderExtension(ServiceOrder."No.");
              ServiceOrderExtension."Date Appointment Letter Sent" := 0D; // Needed for next print command
              IF OnlyMarkedAsResend THEN
                ServiceOrderExtension."Resend Appointment Letter" := FALSE;
              ServiceOrderExtension.UpdateServOrderExtension(ServiceOrder."No.");
            UNTIL ServiceOrder.NEXT = 0;
        UNTIL TempReportSelections.NEXT = 0;

      TempEmailAttachment.DeleteTempEmailAttachmentFiles(TempEmailAttachment); // Because these files are not sent via e-mail.
    END;

    PROCEDURE PrintUnitPriceServiceOrder@1210190030(UnitPriceServiceOrder@1100485000 : Record 11071772);
    VAR
      ReportSelection@1100485002 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      UnitPriceServiceOrder.SETRANGE("Service Order No.", UnitPriceServiceOrder."Service Order No.");

      GetReportSelection(3018,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, UnitPriceServiceOrder);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintUnitPriceProdRecording@1210190031(UnitPriceProdRecording@1100485000 : Record 11071773);
    VAR
      ReportSelection@1100485002 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      UnitPriceProdRecording.SETRANGE("Service Order No.", UnitPriceProdRecording."Service Order No.");
      UnitPriceProdRecording.SETRANGE("Production Date", UnitPriceProdRecording."Production Date");

      GetReportSelection(3019,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, UnitPriceProdRecording);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintServCall@1100485016(ServCall@1100485000 : Record 11012822);
    VAR
      ReportSelection@1100485002 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      ServCall.SETRANGE("No.", ServCall."No.");

      GetReportSelection(3001,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ServCall);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintGlazingServiceCall@1100525018(GlazingServiceCall@1100525000 : Record 11125777);
    VAR
      ReportSelection@1100525001 : TEMPORARY Record 77;
    BEGIN
      // jhoek.231110
      GlazingServiceCall.SETRANGE("No.", GlazingServiceCall."No.");

      GetReportSelection(3016, ReportSelection, TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, GlazingServiceCall);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE EmailWorkOrderWorksheet@1100528517(WorkOrder@1100528500 : Record 11229279;UserInteractionAllowed@1100528503 : Boolean;Manually@1100528501 : Boolean);
    BEGIN
      //**4PS
      DoPrintWorkOrderWorksheet(WorkOrder,TRUE,UserInteractionAllowed,Manually);
    END;

    PROCEDURE PrintWorkOrderWorksheet@1100528516(WorkOrder@1100485000 : Record 11229279);
    BEGIN
      //**4PS
      DoPrintWorkOrderWorksheet(WorkOrder,FALSE,TRUE,TRUE);
    END;

    LOCAL PROCEDURE DoPrintWorkOrderWorksheet@1100528506(WorkOrder@1100528501 : Record 11229279;SendAsEmail@1100528500 : Boolean;UserInteractionAllowed@1100528510 : Boolean;Manually@1100528503 : Boolean);
    VAR
      ReportSelections@1100528502 : TEMPORARY Record 77;
      TempEmailAttachment@1100528506 : TEMPORARY Record 11229294;
      ServiceSetup@1100528507 : Record 11012800;
      ServiceOrder@1100528511 : Record 11012823;
      EMailSetup@1100528400 : Record 11229911;
      DocumentMailing@1100528504 : Codeunit 260;
    BEGIN
      //**4PS
      IF WorkOrder."Source Type" <> WorkOrder."Source Type"::ServiceOrder THEN
        EXIT;

      IF WorkOrder."Resource Type" <> WorkOrder."Resource Type"::Employee THEN
        EXIT;

      IF ServiceSetup.GET THEN;

      WorkOrder.SETRANGE("No.",WorkOrder."No.");
      ServiceOrder.GET(WorkOrder."Source No.");

      IF UserInteractionAllowed THEN
        GetReportSelection(3040,ReportSelections,TRUE)
      ELSE
        GetDefaultReportSelection(3040,ReportSelections);

      ReportSelections.FIND('-');
      REPEAT
        IF SendAsEmail THEN BEGIN
          SaveAnyRecordReportAsPdf(
            WorkOrder,EMailSetup.Usage::"Work Order Worksheet",
            ServiceOrder."Global Dimension 1 Code",ReportSelections."Report ID",
            TRUE,TempEmailAttachment);
          IF WorksheetMustBeDownloaded(ServiceSetup,Manually) THEN BEGIN
            DownloadServiceDocument(
              TempEmailAttachment,ServiceSetup,WorkOrder."No.",0,ReportSelections.Sequence);
            IF ServiceSetup."Store Mailed Worksheet" THEN
              MarkAttachmentToBeSavedAsExternalDocuments(TempEmailAttachment);
          END;
        END ELSE
          REPORT.RUNMODAL(ReportSelections."Report ID",TRUE,FALSE,WorkOrder);
      UNTIL ReportSelections.NEXT = 0;
      IF ServiceSetup."Send Automatic E-Mail Using" = ServiceSetup."Send Automatic E-Mail Using"::SMTP THEN
        AddRelatedDocumentsForWorkSheet(TempEmailAttachment,ServiceOrder);

      IF SendAsEmail THEN BEGIN
        COMMIT;
        DocumentMailing.SetTempEmailAttachments(
          TempEmailAttachment);
        IF TempEmailAttachment.FINDFIRST THEN;
        DocumentMailing.EmailWorksheetFileFromWorkOrder(
          WorkOrder,TempEmailAttachment."Attachment Server File Path",
          TempEmailAttachment."Attachment Name",UserInteractionAllowed,Manually);

        IF DocumentMailing.IsSent THEN BEGIN
          WorkOrder.FIND;
          WorkOrder."Date/Time Export Work Sheet" := CURRENTDATETIME;
          WorkOrder.MODIFY;
          SaveWorksheetsAsExternalDocuments(
            TempEmailAttachment,ServiceSetup,ServiceOrder,
            DocumentMailing.GetServiceOrderEMailQueueEntryNo);
          COMMIT;
        END;
      END;
    END;

    PROCEDURE EmailSubcontractorServiceOrderList@1100528411(Vendor@1100528500 : Record 23;TypeOfMail@1100528403 : 'Not Finished,Not Invoiced';NoOfDays@1100528402 : Integer;ReportSelectionID@1100528401 : Integer;ShowEmailDialog@1100528400 : Boolean);
    BEGIN
      //**4PS
      DoPrintSubcontractorServiceOrderList(Vendor,TRUE,TypeOfMail,NoOfDays,ReportSelectionID,ShowEmailDialog);
    END;

    LOCAL PROCEDURE DoPrintSubcontractorServiceOrderList@1100528410(Vendor@1100528501 : Record 23;SendAsEmail@1100528500 : Boolean;TypeOfMail@1100528402 : 'Not Finished,Not Invoiced';NoOfDays@1100528401 : Integer;ReportSelectionID@1100528400 : Integer;ShowEmailDialog@1100528509 : Boolean);
    VAR
      ReportSelections@1100528502 : TEMPORARY Record 77;
      TempEmailAttachment@1100528506 : TEMPORARY Record 11229294;
      ServiceSetup@1100528507 : Record 11012800;
      Language@1100528406 : Record 8;
      EMailSetup@1100528407 : Record 11229911;
      DocumentMailing@1100528504 : Codeunit 260;
      ReportParameterManagement@1100528403 : Codeunit 11012356;
      Subject@1100528404 : Text[250];
      CurrentLanguageID@1100528405 : Integer;
      EMailSetupUsage@1100528408 : Integer;
    BEGIN
      //**4PS
      Vendor.TESTFIELD("E-Mail for Purch. Order");
      IF ServiceSetup.GET THEN;
      Vendor.SETRANGE("No.",Vendor."No.");
      GetDefaultReportSelection(ReportSelectionID,ReportSelections);
      CurrentLanguageID := GLOBALLANGUAGE;
      IF Vendor."Language Code" <> '' THEN
        GLOBALLANGUAGE(Language.GetLanguageID(Vendor."Language Code"));
      CASE TypeOfMail OF
        TypeOfMail::"Not Finished":
          Subject := Text11012001;
        TypeOfMail::"Not Invoiced":
          Subject := Text11012002;
      END;
      GLOBALLANGUAGE(CurrentLanguageID);

      ReportSelections.FIND('-');
      REPEAT
        IF SendAsEmail THEN BEGIN
          CASE TypeOfMail OF
            TypeOfMail::"Not Finished":
              EMailSetupUsage := EMailSetup.Usage::"Subcontractor not Finished";
            TypeOfMail::"Not Invoiced":
              EMailSetupUsage := EMailSetup.Usage::"Subcontractor Invoice not Received";
          END;
          ReportParameterManagement.StoreReportParameter(
            ReportSelections."Report ID",'NoOfDays',NoOfDays,0);
          SaveAnyRecordReportAsPdf(
            Vendor,EMailSetupUsage,Vendor."Global Dimension 1 Code",
            ReportSelections."Report ID",TRUE,TempEmailAttachment);
          ReportParameterManagement.FlushReportParameters(ReportSelections."Report ID");
          DownloadServiceDocument(
            TempEmailAttachment,ServiceSetup,Vendor."No.",0,ReportSelections.Sequence);
          MarkAttachmentToBeSavedAsExternalDocuments(TempEmailAttachment);
        END;
      UNTIL ReportSelections.NEXT = 0;

      IF SendAsEmail THEN BEGIN
        COMMIT;
        DocumentMailing.SetTempEmailAttachments(
          TempEmailAttachment);
        IF TempEmailAttachment.FINDFIRST THEN;
        DocumentMailing.EmailSubcontractorServiceOrderListFileFromVendor(
          Vendor,TempEmailAttachment."Attachment Server File Path",
          TempEmailAttachment."Attachment Name",TypeOfMail,Subject,ShowEmailDialog);
        IF DocumentMailing.IsSent THEN BEGIN
          SaveSubcontractorServiceOrderListsAsExternalDocuments(
            TempEmailAttachment,ServiceSetup,Vendor,Subject,
            DocumentMailing.GetServiceOrderEMailQueueEntryNo);
          COMMIT;
        END;
      END;
    END;

    PROCEDURE PrintItemJnl@1210190001(VAR VarItemJnlLine@11012000 : Record 83);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
      ItemJnlLine@1100409000 : Record 83;
    BEGIN
      //**4PS
      //db.sn, 05-12-14: C019287
      ItemJnlLine.COPY(VarItemJnlLine);
      ItemJnlLine.SETRANGE("Journal Template Name", VarItemJnlLine."Journal Template Name");
      ItemJnlLine.SETRANGE("Journal Batch Name", VarItemJnlLine."Journal Batch Name");
      //db.en, 05-12-14: C019287

      GetReportSelection(4001,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ItemJnlLine);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintItemInvJnl@1100485012(VAR VarItemJnlLine@11012000 : Record 83);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
      ItemJnlLine@1100409000 : Record 83;
    BEGIN
      //**4PS
      //db.sn, 05-12-14: C019287
      ItemJnlLine.COPY(VarItemJnlLine);
      ItemJnlLine.SETRANGE("Journal Template Name", VarItemJnlLine."Journal Template Name");
      ItemJnlLine.SETRANGE("Journal Batch Name", VarItemJnlLine."Journal Batch Name");
      //db.en, 05-12-14: C019287

      GetReportSelection(4000,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ItemJnlLine);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintInventoryMovement@1100528401(VAR ItemJournalLine@1100528400 : Record 83);
    VAR
      ItemJournalLine2@1100528401 : Record 83;
      ReportSelection@1100528402 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      ItemJournalLine2.COPY(ItemJournalLine);
      ItemJournalLine2.SETRANGE("Journal Template Name", ItemJournalLine."Journal Template Name");
      ItemJournalLine2.SETRANGE("Journal Batch Name", ItemJournalLine."Journal Batch Name");

      GetReportSelection(4005,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ItemJournalLine2);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintWhseShipment@1100528403(VAR WarehouseShipmentHeader@1100528400 : Record 7320);
    VAR
      WarehouseShipmentHeader2@1100528401 : Record 7320;
      ReportSelection@1100528402 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      WarehouseShipmentHeader2.COPY(WarehouseShipmentHeader);

      GetReportSelection(4010,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, WarehouseShipmentHeader2);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintPlantRequest@1100485007(PlantRequestRec@11012000 : Record 11020520);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      PlantRequestRec.SETRANGE("No.",PlantRequestRec."No.");

      GetReportSelection(1550,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", NOT ReportSelection."No Request Form", FALSE, PlantRequestRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintDispatchNote@11012000(PlantOrderRec@11012000 : Record 11012556);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      PlantOrderRec.SETRANGE("No.",PlantOrderRec."No.");
      GetReportSelection(1555,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID",NOT ReportSelection."No Request Form",FALSE,PlantOrderRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintPlantPickingList@1210190010(VAR PlantOrderRec2@11012000 : Record 11012556;UseFilter@1100525002 : Boolean);
    VAR
      PlantOrderRec@1100525001 : Record 11012556;
      ReportSelection@11012001 : TEMPORARY Record 77;
      FirstReportBln@1100525000 : Boolean;
    BEGIN
      //**4PS
      IF UseFilter AND (PlantOrderRec2.GETFILTER("No.") <> '') THEN
        PlantOrderRec.COPY(PlantOrderRec2)
      ELSE
        PlantOrderRec.SETRANGE("No.",PlantOrderRec2."No.");
      GetReportSelection(1557,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      PrinterSelectionDone := FALSE;
      FirstReportBln := TRUE;
      REPEAT
        IF ReportSelection."No Request Form" AND ReportSelection."Printer Selection" THEN BEGIN
          IF NOT DoPrinterSelection() THEN
            EXIT;
          IF TmpPrinterRec.FIND('-') THEN BEGIN
            REPEAT
              FillPrinterSelection(ReportSelection."Report ID", TmpPrinterRec.ID);
              REPORT.RUNMODAL(ReportSelection."Report ID",FALSE,FALSE,PlantOrderRec);
              IF FirstReportBln THEN BEGIN
                IF PlantOrderRec.FINDSET THEN BEGIN
                  REPEAT
                    UpdatePlantListPrintedOn(PrinterByPlantListRec."List Type"::"Pick List", PlantOrderRec."No.");
                  UNTIL PlantOrderRec.NEXT = 0;
                END;
              END;
            UNTIL TmpPrinterRec.NEXT = 0;
            FirstReportBln := FALSE;
          END;
        END ELSE
          REPORT.RUNMODAL(ReportSelection."Report ID",NOT ReportSelection."No Request Form",FALSE,PlantOrderRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintPlantReturnOrder@1210190011(PlantOrderRec@11012000 : Record 11012556);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      PlantOrderRec.SETRANGE("No.",PlantOrderRec."No.");
      GetReportSelection(1556,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID",NOT ReportSelection."No Request Form",FALSE,PlantOrderRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintPlantTransportOrder@1100485021(VAR TransOrderRec2@11012000 : Record 11020505;UseFilter@1100525001 : Boolean);
    VAR
      TransOrderRec@1100525002 : Record 11020505;
      ReportSelection@11012001 : TEMPORARY Record 77;
      FirstReportBln@1100525000 : Boolean;
    BEGIN
      //**4PS
      IF UseFilter AND (TransOrderRec2.GETFILTER("No.") <> '') THEN
        TransOrderRec.COPY(TransOrderRec2)
      ELSE
        TransOrderRec.SETRANGE("No.",TransOrderRec2."No.");
      GetReportSelection(1551,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      PrinterSelectionDone := FALSE;
      FirstReportBln := TRUE;
      REPEAT
        IF ReportSelection."No Request Form" AND ReportSelection."Printer Selection" THEN BEGIN
          IF NOT DoPrinterSelection() THEN
            EXIT;
          IF TmpPrinterRec.FIND('-') THEN BEGIN
            REPEAT
              FillPrinterSelection(ReportSelection."Report ID", TmpPrinterRec.ID);
              REPORT.RUNMODAL(ReportSelection."Report ID",FALSE,FALSE,TransOrderRec);
              IF FirstReportBln THEN BEGIN
                IF TransOrderRec.FINDSET THEN BEGIN
                  REPEAT
                    UpdatePlantListPrintedOn(PrinterByPlantListRec."List Type"::"Transport Order", TransOrderRec."No.");
                  UNTIL TransOrderRec.NEXT = 0;
                END;
              END;
            UNTIL TmpPrinterRec.NEXT = 0;
            FirstReportBln := FALSE;
          END;
        END ELSE
          REPORT.RUNMODAL(ReportSelection."Report ID",NOT ReportSelection."No Request Form",FALSE,TransOrderRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintPostedPlantTransportOrder@1100485022(VAR PostedTransOrderRec2@11012000 : Record 11020507;UseFilter@1100525001 : Boolean);
    VAR
      PostedTransOrderRec@1100525002 : Record 11020507;
      ReportSelection@11012001 : TEMPORARY Record 77;
      FirstReportBln@1100525000 : Boolean;
    BEGIN
      //**4PS
      IF UseFilter AND (PostedTransOrderRec2.GETFILTER("No.") <> '') THEN
        PostedTransOrderRec.COPY(PostedTransOrderRec2)
      ELSE
        PostedTransOrderRec.SETRANGE("No.",PostedTransOrderRec2."No.");
      GetReportSelection(1552,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      PrinterSelectionDone := FALSE;
      FirstReportBln := TRUE;
      REPEAT
        IF ReportSelection."No Request Form" AND ReportSelection."Printer Selection" THEN BEGIN
          IF NOT DoPrinterSelection() THEN
            EXIT;
          IF TmpPrinterRec.FIND('-') THEN BEGIN
            REPEAT
              FillPrinterSelection(ReportSelection."Report ID", TmpPrinterRec.ID);
              REPORT.RUNMODAL(ReportSelection."Report ID",FALSE,FALSE,PostedTransOrderRec);
              IF FirstReportBln THEN BEGIN
                IF PostedTransOrderRec.FINDSET THEN BEGIN
                  REPEAT
                    UpdatePlantListPrintedOn(PrinterByPlantListRec."List Type"::"Transport Order", PostedTransOrderRec."No.");
                  UNTIL PostedTransOrderRec.NEXT = 0;
                END;
              END;
            UNTIL TmpPrinterRec.NEXT = 0;
            FirstReportBln := FALSE;
          END;
        END ELSE
          REPORT.RUNMODAL(ReportSelection."Report ID",NOT ReportSelection."No Request Form",FALSE,PostedTransOrderRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintPlantTransportRideList@1100485013(TransRideRec@11012000 : Record 11020517);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      TransRideRec.SETRANGE("No.",TransRideRec."No.");
      GetReportSelection(1553,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID",NOT ReportSelection."No Request Form",FALSE,TransRideRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintExitOrder@11012001(ExitOrderRec@11012000 : Record 11012559);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      ExitOrderRec.SETRANGE("No.",ExitOrderRec."No.");
      GetReportSelection(1558,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID",NOT ReportSelection."No Request Form",FALSE,ExitOrderRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintInvoiceProposal@16(SalesHeaderRec@11012000 : Record 36);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      SalesHeaderRec.SETRANGE("Document Type",SalesHeaderRec."Document Type"::"Invoice Proposal");
      SalesHeaderRec.SETRANGE("No.",SalesHeaderRec."No.");
      IF SalesHeaderRec."Plant Invoice" THEN
        GetReportSelection(1559,ReportSelection,TRUE);
      IF SalesHeaderRec."Service Invoice" THEN
        GetReportSelection(3017,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID",NOT ReportSelection."No Request Form",FALSE,SalesHeaderRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintPlantRentalCorrection@1100409000(PlantRentalCorr@11012000 : Record 11012565);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS DP00241 (20020)
      PlantRentalCorr.SETRANGE("No.",PlantRentalCorr."No.");

      GetReportSelection(1560,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", NOT ReportSelection."No Request Form", FALSE, PlantRentalCorr);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintPlantInspection@1100529000(VAR PlantInspection@11012000 : Record 11012564);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS DP00241 (27495)
      // Thre is not a Inspection No., so no SETRANGE on No. But the Date Filter must be passed, therfore PlantInspection by VAR.

      GetReportSelection(1561,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", NOT ReportSelection."No Request Form", FALSE, PlantInspection);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintRentalFreeOrder@1100525026(RentalFreeOrder@11012000 : Record 11020552);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS C001017
      RentalFreeOrder.SETRANGE("No.",RentalFreeOrder."No.");
      GetReportSelection(1562,ReportSelection,TRUE);
      ReportSelection.FINDFIRST;
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID",NOT ReportSelection."No Request Form",FALSE,RentalFreeOrder);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintDocW@1210190003(VAR DocPropertiesRec@1100525000 : Record 11012746);
    VAR
      DocPropertiesRec2@1100485000 : Record 11012746;
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      DocPropertiesRec2.COPY(DocPropertiesRec);
      IF DocPropertiesRec2.GETFILTERS = '' THEN
        DocPropertiesRec2.SETRANGE("No.", DocPropertiesRec2."No.");

      GetReportSelection(2003, ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", NOT ReportSelection."No Request Form", FALSE, DocPropertiesRec2);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintDocI@1210190004(VAR DocPropertiesRec@11012000 : Record 11012746);
    VAR
      DocPropertiesRec2@1100485000 : Record 11012746;
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      DocPropertiesRec2.COPY(DocPropertiesRec);
      IF DocPropertiesRec2.GETFILTERS = '' THEN
        DocPropertiesRec2.SETRANGE("No.", DocPropertiesRec2."No.");

      GetReportSelection(2004, ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", NOT ReportSelection."No Request Form", FALSE, DocPropertiesRec2);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintSegmentLabel@1210190005(SegmentHeader@11012000 : Record 11072039);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      SegmentHeader.SETRECFILTER;

      GetReportSelection(2005,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, SegmentHeader);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintHours@1100485001(VAR HourHeader@1210190000 : Record 11012038;ListOrControl@1100485000 : 'List,Control';HourAccountingOnTime@1100485001 : Boolean);
    VAR
      ReportSelection@1210190002 : TEMPORARY Record 77;
    BEGIN
      //**4PS

      CASE ListOrControl OF
        ListOrControl::List: GetReportSelection(1019,ReportSelection,TRUE);
        ListOrControl::Control: GetReportSelection(1018,ReportSelection,TRUE);
      END;

      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", NOT ReportSelection."No Request Form", FALSE, HourHeader)
      UNTIL ReportSelection.NEXT = 0
    END;

    PROCEDURE PrintHoursProject@1100485015(VAR HourHeader@1210190000 : Record 11020224);
    VAR
      ReportSelection@1210190002 : TEMPORARY Record 77;
    BEGIN
      //**4PS

      GetReportSelection(1004,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", NOT ReportSelection."No Request Form", FALSE, HourHeader)
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintPostedHoursList@1210190008(VAR PostedHourHeader@1210190000 : Record 11012084);
    VAR
      ReportSelection@1210190002 : TEMPORARY Record 77;
    BEGIN
      //**4PS

      GetReportSelection(1020,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", NOT ReportSelection."No Request Form", FALSE, PostedHourHeader)
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintFrostOutRegistration@1210190029(VAR FrostOutRegistration@1210190000 : Record 11020670);
    VAR
      ReportSelection@1210190002 : TEMPORARY Record 77;
    BEGIN
      //**4PS

      GetReportSelection(8200,ReportSelection,TRUE);

      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", NOT ReportSelection."No Request Form", FALSE, FrostOutRegistration)
      UNTIL ReportSelection.NEXT = 0
    END;

    PROCEDURE PrintFrostOutRequest@1100528300(VAR FrostOutRequest@1210190000 : Record 11020671);
    VAR
      ReportSelection@1210190002 : TEMPORARY Record 77;
    BEGIN
      //**4PS

      GetReportSelection(8210,ReportSelection,TRUE);

      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", NOT ReportSelection."No Request Form", FALSE, FrostOutRequest)
      UNTIL ReportSelection.NEXT = 0
    END;

    PROCEDURE PrintBlanketScheme@1210190016(VAR PurchHeader@1210190000 : Record 38);
    VAR
      ReportSelection@1210190002 : TEMPORARY Record 77;
    BEGIN
      //**4PS

      GetReportSelection(6001,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", NOT ReportSelection."No Request Form", FALSE, PurchHeader)
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintReqWksh@1100485018(RequisitionLineRec@1100485000 : Record 246);
    VAR
      lRequisitionLineRec@1100485001 : Record 246;
      ReportSelection@1100485002 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      lRequisitionLineRec.COPY(RequisitionLineRec);

      GetReportSelection(6000,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", NOT ReportSelection."No Request Form", FALSE, lRequisitionLineRec)
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintPurchReminder@1210190015(VAR PurchReminder@1210190000 : Record 11020212);
    VAR
      ReportSelection@1210190002 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      GetReportSelection(6002,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", NOT ReportSelection."No Request Form", FALSE, PurchReminder)
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE EmailOptionQuote@1100528509(OptionQuoteHeader@1000 : Record 11012513);
    BEGIN
      //**4PS
      DoPrintOptionQuote(OptionQuoteHeader,TRUE);
    END;

    PROCEDURE PrintOptionQuote@1210190021(OptionQuoteHeader@11012000 : Record 11012513);
    BEGIN
      //**4PS
      DoPrintOptionQuote(OptionQuoteHeader,FALSE);
    END;

    LOCAL PROCEDURE DoPrintOptionQuote@1100528507(OptionQuoteHeader@1000 : Record 11012513;SendAsEmail@1002 : Boolean);
    VAR
      ReportSelections@1001 : TEMPORARY Record 77;
      EMailSetup@1100528402 : Record 11229911;
      Job@1100528401 : Record 11072003;
      TempEmailAttachment@1100528400 : TEMPORARY Record 11229294;
      DocumentMailing@1004 : Codeunit 260;
    BEGIN
      //**4PS
      OptionQuoteHeader.SETRANGE("No.",OptionQuoteHeader."No.");
      IF Job.GET(OptionQuoteHeader."Project No.") THEN;

      GetReportSelection(1021,ReportSelections,TRUE);
      ReportSelections.FIND('-');
      REPEAT
        IF SendAsEmail THEN
          SaveAnyRecordReportAsPdf(
            OptionQuoteHeader,EMailSetup.Usage::"81",Job."Global Dimension 1 Code",
            ReportSelections."Report ID",TRUE,TempEmailAttachment)
        ELSE
          REPORT.RUNMODAL(ReportSelections."Report ID",TRUE,FALSE,OptionQuoteHeader)
      UNTIL ReportSelections.NEXT = 0;

      IF SendAsEmail THEN BEGIN
        COMMIT;
        DocumentMailing.SetTempEmailAttachments(
          TempEmailAttachment);
        IF TempEmailAttachment.FINDFIRST THEN;
        DocumentMailing.EmailFileFromOptionQuoteHeader(
          OptionQuoteHeader,TempEmailAttachment."Attachment Server File Path");
      END;
    END;

    PROCEDURE PrintProjectInstallments@1100485000(VAR ProjInstallmentRec@1210190000 : Record 11012018);
    VAR
      ReportSelection@1210190002 : TEMPORARY Record 77;
    BEGIN
      //**4PS

      GetReportSelection(1022,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", NOT ReportSelection."No Request Form", FALSE, ProjInstallmentRec)
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintProjectControl@1210190022(VAR ProjRec@1210190000 : Record 11072003);
    VAR
      ReportSelection@1210190002 : TEMPORARY Record 77;
      ProjRec2@1100485000 : Record 11072003;
    BEGIN
      //**4PS
      ProjRec2.COPY(ProjRec);
      ProjRec2.SETRANGE("No.", ProjRec2."No.");

      GetReportSelection(1023,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ProjRec2)
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintProjectInventoryDelivery@1100525003(ProjInvDelRec@1100525001 : Record 11012671);
    VAR
      ReportSelection@1100525000 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      ProjInvDelRec.SETRANGE("Project No.", ProjInvDelRec."Project No.");

      GetReportSelection(1024,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ProjInvDelRec)
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintProjectInventory@1100525000(ProjectInventoryEntry@1100525000 : Record 11012670);
    VAR
      ReportSelection@1100525002 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      ProjectInventoryEntry.SETRANGE("Project No.", ProjectInventoryEntry."Project No.");

      GetReportSelection(1005,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ProjectInventoryEntry)
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintTenderParagraphbyPrinc@1210190007(ProjPrincipalRec@1210190002 : Record 11012005);
    VAR
      ReportSelection@1210190001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      ProjPrincipalRec.SETRANGE("Project No.", ProjPrincipalRec."Project No.");
      ProjPrincipalRec.SETRANGE(Principal, ProjPrincipalRec.Principal);

      GetReportSelection(1025,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ProjPrincipalRec)
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintComplaint@1100485002(VAR ComplaintRec@11012000 : Record 11012450);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      GetReportSelection(1000,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ComplaintRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintInstallMotivation@1100485003(VAR InstallMotRec@1100485000 : Record 11012471);
    VAR
      ReportSelection@1100485002 : TEMPORARY Record 77;
    BEGIN
      //**4PS

      GetReportSelection(1001,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, InstallMotRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintInstallOverview@1100485008(VAR InstallOvRec@1100485001 : Record 11012265);
    VAR
      ReportSelection@1100485004 : TEMPORARY Record 77;
    BEGIN
      //**4PS

      GetReportSelection(1003,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, InstallOvRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintProjectAssignment@1100485005(VAR ProjectAssignment@11012000 : Record 11012456);
    VAR
      ReportSelection@11012001 : TEMPORARY Record 77;
    BEGIN
      //**4PS

      GetReportSelection(1002,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ProjectAssignment);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintTryout@1100485006(VAR TryoutRec@1100485000 : Record 11012750);
    VAR
      ReportSelection@1100485005 : TEMPORARY Record 77;
    BEGIN
      //**4PS

      GetReportSelection(2000,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, TryoutRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintTryoutQuote@1199197400(VAR TryoutQuoteRec@1100485000 : Record 11012758);
    VAR
      ReportSelection@1100485005 : TEMPORARY Record 77;
    BEGIN
      //**4PS

      GetReportSelection(2007,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, TryoutQuoteRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintUnitPriceProdMot@1100485019(VAR ProdMotRec@1100485000 : Record 11020425);
    VAR
      ReportSelection@1100485005 : TEMPORARY Record 77;
    BEGIN
      //**4PS

      GetReportSelection(1400,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ProdMotRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintUnitPricePriceList@1100485020(VAR PriceListRec@1100485000 : Record 11020422);
    VAR
      ReportSelection@1100485005 : TEMPORARY Record 77;
    BEGIN
      //**4PS

      GetReportSelection(1401,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, PriceListRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintUnitPrice@1100485026(VAR UnitPriceRec@1100485000 : Record 11020420);
    VAR
      ReportSelection@1100485005 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      GetReportSelection(1402,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, UnitPriceRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintProposalOverview@1100525007(BankRec@1100525001 : Record 270);
    VAR
      ReportSelection@1100525000 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      BankRec.SETRANGE("No.", BankRec."No.");

      GetReportSelection(1201,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, BankRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintSiteManagerReport@1100525011(ProjRec@1100525001 : Record 11072003);
    VAR
      ReportSelection@1100525000 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      ProjRec.SETRANGE("No.", ProjRec."No.");

      GetReportSelection(8000,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ProjRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintGetOrderSiteManager@1100525009(GetOrderRec@1100525001 : Record 11125531);
    VAR
      ReportSelection@1100525000 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      GetOrderRec.SETRANGE("No.", GetOrderRec."No.");

      GetReportSelection(8001,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, GetOrderRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintSiteManHrAccProject@1100530000(SiteMgtHrAccProjRec@1100525001 : Record 11012362);
    VAR
      ReportSelection@1100525000 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      SiteMgtHrAccProjRec.SETRANGE(Year, SiteMgtHrAccProjRec.Year);
      SiteMgtHrAccProjRec.SETRANGE(Week, SiteMgtHrAccProjRec.Week);
      SiteMgtHrAccProjRec.SETRANGE("Receiving Company", SiteMgtHrAccProjRec."Receiving Company");
      SiteMgtHrAccProjRec.SETRANGE("Project No.", SiteMgtHrAccProjRec."Project No.");

      GetReportSelection(8020,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, SiteMgtHrAccProjRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintSiteManHrAccEmployee@1100530001(SiteMgtHrAccEmplRec@1100525001 : Record 11012360);
    VAR
      ReportSelection@1100525000 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      SiteMgtHrAccEmplRec.SETRANGE(Year, SiteMgtHrAccEmplRec.Year);
      SiteMgtHrAccEmplRec.SETRANGE(Week, SiteMgtHrAccEmplRec.Week);
      SiteMgtHrAccEmplRec.SETRANGE("Supplying Company", SiteMgtHrAccEmplRec."Supplying Company");
      SiteMgtHrAccEmplRec.SETRANGE("Employee No.", SiteMgtHrAccEmplRec."Employee No.");

      GetReportSelection(8021,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, SiteMgtHrAccEmplRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintSiteManHrAccExtByComp@1100530003(SiteMgtHrAccEmplRec@1100525001 : Record 11012360);
    VAR
      ReportSelection@1100525000 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      SiteMgtHrAccEmplRec.SETRANGE(Year, SiteMgtHrAccEmplRec.Year);
      SiteMgtHrAccEmplRec.SETRANGE(Week, SiteMgtHrAccEmplRec.Week);
      SiteMgtHrAccEmplRec.SETRANGE("Supplying Company", SiteMgtHrAccEmplRec."Supplying Company");
      SiteMgtHrAccEmplRec.SETRANGE("Employee No.", SiteMgtHrAccEmplRec."Employee No.");

      GetReportSelection(8022,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, SiteMgtHrAccEmplRec);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintDeviationReport@1100525020(QADeviation@1100525001 : Record 11125986);
    VAR
      ReportSelection@1100525000 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      QADeviation.SETRANGE("No.", QADeviation."No.");

      GetReportSelection(8100,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, QADeviation);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintAccidentReport@1100525019(Accident@1100525001 : Record 11126005);
    VAR
      ReportSelection@1100525000 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      Accident.SETRANGE("No.", Accident."No.");

      GetReportSelection(8120,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, Accident);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintShippingOrder@1100525022(ShippingOrderHeader@1100525001 : Record 11020623);
    VAR
      ReportSelection@1100525000 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      ShippingOrderHeader.SETRANGE("No.", ShippingOrderHeader."No.");

      GetReportSelection(9000, ReportSelection, TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ShippingOrderHeader);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintPostedShippingOrder@1100525021(PostedShippingOrderHeader@1100525001 : Record 11020625);
    VAR
      ReportSelection@1100525000 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      PostedShippingOrderHeader.SETRANGE("No.", PostedShippingOrderHeader."No.");

      GetReportSelection(9001, ReportSelection, TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, PostedShippingOrderHeader);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintProjectResultForecast@1210190026(IProjectResultForecast@1210190001 : Record 11126036);
    VAR
      Job@1210190002 : Record 11072003;
      ReportSelection@1210190000 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      Job.SETRANGE("No.", IProjectResultForecast."Project No.");
      //IProjectResultForecast.SETRECFILTER;

      GetReportSelection(1026, ReportSelection, TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, Job);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintServiceCollectiveList@1210190032(ServiceCollectiveList@1210190000 : Record 11071730);
    VAR
      ReportSelection@1210190001 : TEMPORARY Record 77;
    BEGIN
      ServiceCollectiveList.SETRANGE("No.", ServiceCollectiveList."No.");

      GetReportSelection(3020, ReportSelection, TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ServiceCollectiveList);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintSOAppointmentLetter@1100528601(VAR ServiceOrder@1100528600 : Record 11012823);
    VAR
      ReportSelection@1100528601 : TEMPORARY Record 77;
    BEGIN
      IF NOT ServiceOrder.MARKEDONLY THEN
        ServiceOrder.SETRANGE("No.", ServiceOrder."No.");

      GetReportSelection(3021, ReportSelection, TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ServiceOrder);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintSurvey@1100528602(IServiceSurvey@1100528600 : Record 11071803);
    VAR
      ReportSelection@1100528601 : TEMPORARY Record 77;
    BEGIN
      IServiceSurvey.SETRECFILTER;

      GetReportSelection(3025, ReportSelection, TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, IServiceSurvey);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintSurveyLocation@1100528603(IServiceSurveyLocation@1100528600 : Record 11071804);
    VAR
      ReportSelection@1100528601 : TEMPORARY Record 77;
    BEGIN
      IServiceSurveyLocation.SETRECFILTER;

      GetReportSelection(3026, ReportSelection, TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, IServiceSurveyLocation);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintSurveyObject@1100528604(IServSurvLocationObject@1100528600 : Record 11071813);
    VAR
      ReportSelection@1100528601 : TEMPORARY Record 77;
    BEGIN
      IServSurvLocationObject.SETRECFILTER;

      GetReportSelection(3027, ReportSelection, TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, IServSurvLocationObject);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintServiceContract_Object@1100528605(IServiceContract@1100528600 : Record 11012812);
    VAR
      ReportSelection@1100528601 : TEMPORARY Record 77;
    BEGIN
      IServiceContract.SETRECFILTER;

      GetReportSelection(3028, ReportSelection, TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, IServiceContract);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintServiceContractControl@1100528606(IServiceContractControl@1100528600 : Record 11071762);
    VAR
      ReportSelection@1100528601 : TEMPORARY Record 77;
    BEGIN
      IServiceContractControl.SETRECFILTER;

      GetReportSelection(3029, ReportSelection, TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, IServiceContractControl);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintProjectCollectiveList@1100528200(ProjectCollectiveList@1210190000 : Record 11071875);
    VAR
      ReportSelection@1210190001 : TEMPORARY Record 77;
    BEGIN
      ProjectCollectiveList.SETRANGE("No.", ProjectCollectiveList."No.");

      GetReportSelection(1029, ReportSelection, TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, ProjectCollectiveList);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintServiceObjectList@1100525023(IServiceObject@1100525000 : Record 11071691);
    VAR
      ReportSelection@1100525001 : TEMPORARY Record 77;
    BEGIN
      IServiceObject.SETRECFILTER;

      GetReportSelection(3035, ReportSelection, TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, IServiceObject);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintFinalInstallmentDetails@1100525025(VAR IProjectPrincipal@1100525000 : Record 11012005);
    VAR
      ReportSelection@1100525001 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      GetReportSelection(1030,ReportSelection,TRUE);
      ReportSelection.FIND('-');
      REPEAT
        REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, IProjectPrincipal);
      UNTIL ReportSelection.NEXT = 0;
    END;

    PROCEDURE PrintWorkOrder@1100528400(WorkOrder@1000 : Record 11229279);
    BEGIN
      //**4PS
      WorkOrder.SETRECFILTER;
      PrintWorkOrders(WorkOrder);
    END;

    PROCEDURE PrintWorkOrders@1100528600(VAR IWorkOrder@1000 : Record 11229279);
    VAR
      WorkOrder@1100528600 : Record 11229279;
      ReportSelection@1001 : TEMPORARY Record 77;
      ReportID@1100528400 : Integer;
      SourceType@1100528601 : Option;
    BEGIN
      //**4PS
      WorkOrder.COPY(IWorkOrder);

      FOR SourceType := WorkOrder."Source Type"::ServiceOrder TO WorkOrder."Source Type"::Project DO BEGIN
        CASE SourceType OF
          WorkOrder."Source Type"::ServiceOrder:
            ReportID := 3040;
          WorkOrder."Source Type"::Project:
            ReportID := 1040;
        END;
        WorkOrder.FILTERGROUP(2);
        WorkOrder.SETRANGE("Source Type", SourceType);
        WorkOrder.FILTERGROUP(0);
        IF NOT WorkOrder.ISEMPTY THEN BEGIN
          GetReportSelection(ReportID, ReportSelection, TRUE);
          ReportSelection.FIND('-');
          REPEAT
            REPORT.RUNMODAL(ReportSelection."Report ID", TRUE, FALSE, WorkOrder);
          UNTIL ReportSelection.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE DoPrinterSelection@1100485023() : Boolean;
    VAR
      lvPrinterRec@1100485001 : Record 2000000039;
      lvPrintersFrm@1100485000 : Page 356;
      lvText000@1100485003 : TextConst 'ENU=No printer present.';
      lvText001@1100485004 : TextConst 'ENU=No printer selected.';
    BEGIN
      //**4PS
      IF PrinterSelectionDone THEN
        EXIT(TRUE);

      PrinterSelectionDone := TRUE;
      TmpPrinterRec.RESET;
      TmpPrinterRec.DELETEALL;

      lvPrinterRec.RESET;
      IF NOT lvPrinterRec.FIND('-') THEN BEGIN
        MESSAGE(lvText000);
        EXIT(FALSE);
      END ELSE BEGIN
        IF lvPrinterRec.NEXT = 0 THEN BEGIN  //* Only 1 printer present
          TmpPrinterRec := lvPrinterRec;
          TmpPrinterRec.INSERT;
          EXIT(TRUE);
        END;
      END;

      lvPrintersFrm.SetMultiPrinterSelection();
      lvPrintersFrm.LOOKUPMODE(TRUE);
      IF (lvPrintersFrm.RUNMODAL = ACTION::LookupOK) THEN
        lvPrintersFrm.GetSelectedPrinters(TmpPrinterRec);

      TmpPrinterRec.RESET;
      IF TmpPrinterRec.FIND('-') THEN
        EXIT(TRUE);

      MESSAGE(lvText001);
      EXIT(FALSE)
    END;

    PROCEDURE FillPrinterSelection@1100485024(IReportID@1100485001 : Integer;IPrinterName@1100525001 : Text[250]);
    VAR
      lvPrinterSelRec@1100485000 : Record 78;
      lvPrinterSelCU@1100525000 : Codeunit 11020214;
    BEGIN
      //**4PS
      { OLD
      WITH lvPrinterSelRec DO BEGIN
        IF GET(USERID, IReportID) THEN BEGIN
          "Printer Name" := IPrinterName;
          MODIFY;
        END ELSE BEGIN
          INIT;
          "User ID" := USERID;
          "Report ID" := IReportID;
          "Printer Name" := IPrinterName;
          INSERT;
        END;
      END;
      }

      lvPrinterSelCU.SetPrinter(IReportID, IPrinterName);
    END;

    PROCEDURE UpdatePlantListPrintedOn@1100485025(IListType@1100485000 : Option;IOrderNo@1100485001 : Code[20]);
    VAR
      lvNextEntryNo@1100485002 : Integer;
    BEGIN
      //**4PS
      WITH PrinterByPlantListRec DO BEGIN
        IF (IOrderNo = '') OR (NOT READPERMISSION) THEN
          EXIT;

        SETRANGE("List Type", IListType);
        SETRANGE("Order No.", IOrderNo);
        IF NOT FIND('+') THEN
          "Entry No." := 0;
        lvNextEntryNo := "Entry No." + 1;

        INIT;
        "List Type" := IListType;
        "Order No." := IOrderNo;
        "Entry No." := lvNextEntryNo;
        "Printer Name" := TmpPrinterRec.ID;
        "Print Date" := TODAY;
        "Print Time" := TIME;
        INSERT;
      END;
    END;

    PROCEDURE RunCopy@1100525001(VAR iPurchHeaderRec@1100525000 : Record 38);
    BEGIN
      REPORT.RUNMODAL(74460, TRUE, FALSE, iPurchHeaderRec);
    END;

    PROCEDURE GetReportSelection@1100485029(UsageFilter@1100485000 : Integer;VAR TempReportSelection@1100485001 : TEMPORARY Record 77;AllowUI@1100485002 : Boolean);
    VAR
      ReportSelection@1100485003 : Record 77;
      LocalGiveNoError@1100528800 : Boolean;
    BEGIN
      //**4PS - Fill Buffer
      // 28365.sn
      IF GiveNoError THEN BEGIN
        GiveNoError := FALSE;
        LocalGiveNoError := TRUE;
      END;
      // 28365.en

      TempReportSelection.RESET;
      TempReportSelection.DELETEALL;
      ReportSelection.SETRANGE(Usage,UsageFilter);
      ReportSelection.SETFILTER("Report ID",'<>0');
      IF ReportSelection.FINDSET THEN BEGIN
        REPEAT
          TempReportSelection := ReportSelection;
          TempReportSelection.INSERT;
        UNTIL ReportSelection.NEXT = 0;

        //**4PS - Decide if User Interaction is Needed
        IF AllowUI THEN BEGIN
          IF TempReportSelection.COUNT = 0 THEN
            AllowUI := FALSE
          ELSE
            IF TempReportSelection.COUNT = 1 THEN BEGIN
              TempReportSelection.FINDFIRST;
              AllowUI := NOT TempReportSelection."Default Selection"
            END;
        END;

        //**4PS - Get Selection
        IF AllowUI THEN BEGIN
          IF PAGE.RUNMODAL(PAGE::"Selected Reports",TempReportSelection) = ACTION::LookupOK THEN BEGIN
            TempReportSelection.SETRANGE("Report ID",0); //in case user could have added an empty line
            TempReportSelection.DELETEALL;
            TempReportSelection.SETRANGE("Report ID");
          END ELSE
            TempReportSelection.MODIFYALL(TempReportSelection."Default Selection", FALSE)
        END;

        //**4PS - Return Selection or Break on Error
        TempReportSelection.SETRANGE("Default Selection",FALSE);
        TempReportSelection.DELETEALL;
        TempReportSelection.RESET;
      END;

      // 28365.sn
      IF LocalGiveNoError THEN
        EXIT;
      // 28365.en

      IF NOT TempReportSelection.FINDFIRST THEN
        ERROR(Text11012000);
    END;

    PROCEDURE GetReportSelectionNoError@1100528800(UsageFilter@1100485000 : Integer;VAR TempReportSelection@1100485001 : TEMPORARY Record 77;AllowUI@1100485002 : Boolean);
    BEGIN
      // 28365.n
      GiveNoError := TRUE;
      GetReportSelection(UsageFilter, TempReportSelection, AllowUI);
    END;

    PROCEDURE GetDefaultReportSelection@1100528508(UsageFilter@1100525000 : Integer;VAR TempReportSelections@1100525001 : TEMPORARY Record 77);
    VAR
      ReportSelection@1100525002 : Record 77;
    BEGIN
      //**4PS
      TempReportSelections.RESET;
      TempReportSelections.DELETEALL;

      ReportSelection.SETRANGE(Usage,UsageFilter);
      ReportSelection.SETFILTER("Report ID",'<>0');
      ReportSelection.SETRANGE("Default Selection", TRUE);
      IF ReportSelection.FINDSET THEN
        REPEAT
          TempReportSelections := ReportSelection;
          TempReportSelections.INSERT;
        UNTIL ReportSelection.NEXT = 0;
    END;

    LOCAL PROCEDURE WorksheetMustBeDownloaded@1100528520(ServiceSetup@1100528500 : Record 11012800;EMailIsSentManually@1100528502 : Boolean) : Boolean;
    BEGIN
      //**4PS
      IF ServiceSetup."Store Mailed Worksheet" THEN
        EXIT(TRUE);

      IF (ServiceSetup."Send Automatic E-Mail Using" = ServiceSetup."Send Automatic E-Mail Using"::"Service Order E-Mail Queue") AND
         NOT EMailIsSentManually
      THEN
        EXIT(TRUE);
    END;

    PROCEDURE DownloadServiceDocument@1100528515(VAR TempEmailAttachment@1100528500 : TEMPORARY Record 11229294;ServiceSetup@1100528502 : Record 11012800;ServiceDocumentNo@1100528104 : Code[20];Usage@1100528503 : Integer;Sequence@1100528501 : Code[10]);
    VAR
      DatetimeMgt@1100528505 : Codeunit 11020218;
      FileManagement@1100528504 : Codeunit 419;
      ClientFullFileName@1100528400 : Text[250];
    BEGIN
      //**4PS
      IF Usage = 0 THEN
        TempEmailAttachment."Attachment Name" := STRSUBSTNO(
          '%1_%2 (%3).pdf', ServiceDocumentNo, Sequence, DatetimeMgt.GetTimestamp)
      ELSE
        TempEmailAttachment."Attachment Name" := STRSUBSTNO(
          '%1_%2_%3 (%4).pdf', ServiceDocumentNo, Usage, Sequence, DatetimeMgt.GetTimestamp);
      ServiceSetup.TESTFIELD("Path Name (Archive)");
      ClientFullFileName := STRSUBSTNO(
        '%1%2',ServiceSetup."Path Name (Archive)",TempEmailAttachment."Attachment Name");
      FileManagement.DownloadToFile(TempEmailAttachment."Attachment Server File Path", ClientFullFileName);
      TempEmailAttachment."Attachment Client File Path" := ClientFullFileName;
      TempEmailAttachment."Delete Client File" := FALSE; // File must not be removed from ServiceSetup."Path Name (Archive)"!
      TempEmailAttachment.MODIFY;
    END;

    LOCAL PROCEDURE SaveWorksheetsAsExternalDocuments@1100528424(VAR TempEmailAttachment@1100528500 : TEMPORARY Record 11229294;ServiceSetup@1100528501 : Record 11012800;ServiceOrder@1100528104 : Record 11012823;ServiceOrderEMailQueueEntryNo@1100528400 : Integer);
    BEGIN
      //**4PS
      TempEmailAttachment.SETRANGE("Save As External Documents", TRUE);
      IF TempEmailAttachment.FINDSET THEN
        REPEAT
          SaveWorksheetAsExternalDocuments(
            TempEmailAttachment, ServiceSetup, ServiceOrder, ServiceOrderEMailQueueEntryNo);
        UNTIL TempEmailAttachment.NEXT = 0;
      TempEmailAttachment.SETRANGE("Save As External Documents");
    END;

    LOCAL PROCEDURE SaveWorksheetAsExternalDocuments@1100528102(VAR TempEmailAttachment@1100528500 : TEMPORARY Record 11229294;ServiceSetup@1100528501 : Record 11012800;ServiceOrder@1100528104 : Record 11012823;ServiceOrderEMailQueueEntryNo@1100528400 : Integer);
    BEGIN
      //**4PS
      SaveServiceDocumentAsExternalDocuments(
        TempEmailAttachment, ServiceSetup."Store Worksheet as Doc.Type.",
        ServiceSetup."Publish Stored Worksheet SPT", CREATEDATETIME(TODAY, TIME), ServiceOrder,
        ServiceOrder."Customer No.", '', '', ServiceOrderEMailQueueEntryNo);
    END;

    LOCAL PROCEDURE SaveSOAppointmentLetterAsExternalDocuments@1100528405(VAR TempEmailAttachment@1100528500 : TEMPORARY Record 11229294;ServiceOrder@1100528104 : Record 11012823);
    BEGIN
      //**4PS
      SaveServiceDocumentAsExternalDocuments(
        TempEmailAttachment, '', FALSE, 0DT, ServiceOrder, ServiceOrder."Customer No.", '', '', 0);
    END;

    LOCAL PROCEDURE SaveSubcontractorServiceOrderListsAsExternalDocuments@1100528432(VAR TempEmailAttachment@1100528500 : TEMPORARY Record 11229294;ServiceSetup@1100528501 : Record 11012800;Vendor@1100528104 : Record 23;Subject@1100528400 : Text[250];ServiceOrderEMailQueueEntryNo@1100528401 : Integer);
    BEGIN
      //**4PS
      TempEmailAttachment.SETRANGE("Save As External Documents", TRUE);
      IF TempEmailAttachment.FINDSET THEN
        REPEAT
          SaveSubcontractorServiceOrderListAsExternalDocuments(
            TempEmailAttachment, ServiceSetup, Vendor, Subject, ServiceOrderEMailQueueEntryNo);
        UNTIL TempEmailAttachment.NEXT = 0;
      TempEmailAttachment.SETRANGE("Save As External Documents");
    END;

    LOCAL PROCEDURE SaveSubcontractorServiceOrderListAsExternalDocuments@1100528414(VAR TempEmailAttachment@1100528500 : TEMPORARY Record 11229294;ServiceSetup@1100528501 : Record 11012800;Vendor@1100528104 : Record 23;Subject@1100528400 : Text[250];ServiceOrderEMailQueueEntryNo@1100528401 : Integer);
    BEGIN
      //**4PS
      SaveServiceDocumentAsExternalDocuments(
        TempEmailAttachment, ServiceSetup."Store Worksheet as Doc.Type.",
        ServiceSetup."Publish Stored Worksheet SPT", CREATEDATETIME(TODAY, TIME), Vendor,
        '', Vendor."No.", Subject, ServiceOrderEMailQueueEntryNo);
    END;

    LOCAL PROCEDURE SaveServiceDocumentAsExternalDocuments@1100528402(VAR TempEmailAttachment@1100528500 : TEMPORARY Record 11229294;DocumentType@1100528400 : Code[10];PublishOnServicePortal@1100528401 : Boolean;EMailSentOn@1100528402 : DateTime;SourceVariant@1100528104 : Variant;CustomerNo@1100528403 : Code[20];VendorNo@1100528404 : Code[20];Subject@1100528405 : Text[250];ServiceOrderEMailQueueEntryNo@1100528406 : Integer);
    VAR
      Contact@1100528100 : Record 5050;
      ExternalDocumentManagement@1100528103 : Codeunit 11012403;
      FileName@1100528506 : Text;
      FullFileName@1100528407 : Text;
    BEGIN
      //**4PS
      FileName := TempEmailAttachment."Attachment Client File Path";
      GetContractDSFromConBusRel(CustomerNo, VendorNo, Contact);
      IF Contact.FINDSET THEN BEGIN
        ExternalDocumentManagement.RegisterFileCopyOnly(FileName, DocumentType);
        REPEAT
          SaveServiceDocumentAsExternalDocument(
            FileName, DocumentType, PublishOnServicePortal, EMailSentOn, SourceVariant, Contact, Subject);
        UNTIL Contact.NEXT = 0;
        FullFileName := ExternalDocumentManagement.FolderName(DocumentType, '') + FileName;
        IF ServiceOrderEMailQueueEntryNo <> 0 THEN
          UpdateServiceOrderEMailAttachmFileName(
            ServiceOrderEMailQueueEntryNo, TempEmailAttachment."Attachment Client File Path",
            FullFileName);
      END;
    END;

    LOCAL PROCEDURE SaveServiceDocumentAsExternalDocument@1100528100(FileName@1100528100 : Text[260];DocumentType@1100528400 : Code[10];PublishOnServicePortal@1100528401 : Boolean;EMailSentOn@1100528402 : DateTime;SourceVariant@1100528101 : Variant;Contact@1100528108 : Record 5050;Subject@1100528403 : Text[250]);
    VAR
      RecRef@1100528102 : RecordRef;
      DocumentProperties@1100528104 : Record 11012746;
      DocumentLinkManagement@1100528103 : Codeunit 11012401;
    BEGIN
      //**4PS
      DocumentProperties.INIT;
      DocumentProperties."External Document" := TRUE;
      DocumentProperties.Description := DocumentProperties.Description;
      DocumentProperties."E-Mail Sent On" := EMailSentOn;
      DocumentProperties.INSERT(TRUE);
      IF Contact.IsContactPerson THEN BEGIN
        DocumentProperties.VALIDATE("Contact No.", Contact."Company No.");
        DocumentProperties.VALIDATE("Contact Person No.", Contact."No.");
      END ELSE BEGIN
        DocumentProperties.VALIDATE("Contact No.", Contact."No.");
      END;
      DocumentProperties.VALIDATE(File, FileName);
      DocumentProperties."Publish on Service Portal" := PublishOnServicePortal;
      DocumentProperties."Document Type" := DocumentType;
      DocumentProperties.Subject := Subject;
      DocumentProperties.MODIFY(TRUE);

      RecRef.GETTABLE(SourceVariant);
      DocumentLinkManagement.CreateOneDocumentLink(DocumentProperties, RecRef.RECORDID);
    END;

    LOCAL PROCEDURE GetContractDSFromConBusRel@1100528518(CustomerNo@1100525002 : Code[20];VendorNo@1100528400 : Code[20];VAR Contact@1100525001 : Record 5050);
    VAR
      ContactBusinessRelation@1100525000 : Record 5054;
      TmpContact@1100525003 : TEMPORARY Record 5050;
    BEGIN
      //**4PS
      Contact.RESET;
      ContactBusinessRelation.SETCURRENTKEY("Link to Table", "No.");
      IF CustomerNo <> '' THEN BEGIN
        ContactBusinessRelation.SETRANGE("Link to Table", ContactBusinessRelation."Link to Table"::Customer);
        ContactBusinessRelation.SETRANGE("No.", CustomerNo);
      END ELSE BEGIN
        ContactBusinessRelation.SETRANGE("Link to Table", ContactBusinessRelation."Link to Table"::Vendor);
        ContactBusinessRelation.SETRANGE("No.", VendorNo);
      END;
      IF ContactBusinessRelation.FINDSET THEN
        REPEAT
          IF Contact.GET(ContactBusinessRelation."Contact No.") THEN
            Contact.MARK(TRUE);
        UNTIL ContactBusinessRelation.NEXT = 0;
      Contact.MARKEDONLY(TRUE);
    END;

    LOCAL PROCEDURE AddRelatedDocumentsForSalesHeader@1100528519(VAR TempEmailAttachment@1100528504 : TEMPORARY Record 11229294;SalesHeader@1100528500 : Record 36);
    VAR
      DocumentRelation@1100528502 : Record 11012407;
      DocumentProperties@1100528501 : Record 11012746;
      FileManagement@1100528503 : Codeunit 419;
    BEGIN
      //**4PS
      IF SalesHeader."Document Type" = SalesHeader."Document Type"::Quote THEN
        DocumentRelation.SETRANGE("Document Type", DocumentRelation."Document Type"::"Sales Quote")
      ELSE
        DocumentRelation.SETRANGE("Document Type", DocumentRelation."Document Type"::"Sales Order");
      DocumentRelation.SETRANGE("No.", SalesHeader."No.");
      DocumentRelation.SETRANGE("Send by E-Mail", TRUE);
      IF DocumentRelation.FINDSET THEN
        REPEAT
          IF DocumentProperties.GET(DocumentRelation."Related Document No.") THEN
            IF DocumentProperties.FullFileName() <> '' THEN
              IF FileManagement.ClientFileExists(
                DocumentProperties.FullFileName)
              THEN
                DocumentProperties.MARK(TRUE);
        UNTIL DocumentRelation.NEXT = 0;

      DocumentProperties.MARKEDONLY(TRUE);
      AddRelatedDocuments(TempEmailAttachment, DocumentProperties, FALSE, FALSE);
    END;

    LOCAL PROCEDURE AddRelatedDocumentsForPurchHeader@1100528420(VAR TempEmailAttachment@1100528504 : TEMPORARY Record 11229294;PurchaseHeader@1100528500 : Record 38);
    VAR
      DocumentRelation@1100528502 : Record 11012407;
      DocumentProperties@1100528501 : Record 11012746;
      RecRef@1100528400 : RecordRef;
      DocumentLinkManagement@1100528508 : Codeunit 11012401;
      FileManagement@1100528503 : Codeunit 419;
    BEGIN
      //**4PS
      IF PurchaseHeader."Document Type" = PurchaseHeader."Document Type"::Quote THEN
        DocumentRelation.SETRANGE("Document Type", DocumentRelation."Document Type"::"Purchase Quote")
      ELSE
        DocumentRelation.SETRANGE("Document Type", DocumentRelation."Document Type"::"Purchase Order");
      DocumentRelation.SETRANGE("No.", PurchaseHeader."No.");
      DocumentRelation.SETRANGE("Send by E-Mail", TRUE);
      IF DocumentRelation.FINDSET THEN
        REPEAT
          IF DocumentProperties.GET(DocumentRelation."Related Document No.") THEN
            IF DocumentProperties.FullFileName() <> '' THEN
              IF FileManagement.ClientFileExists(
                DocumentProperties.FullFileName)
              THEN
                DocumentProperties.MARK(TRUE);
        UNTIL DocumentRelation.NEXT = 0;

      IF PurchaseHeader."Document Type" = PurchaseHeader."Document Type"::Order THEN BEGIN
        RecRef.GETTABLE(PurchaseHeader);
        DocumentLinkManagement.GetDocuments(DocumentProperties, RecRef);
      END;

      DocumentProperties.MARKEDONLY(TRUE);
      AddRelatedDocuments(TempEmailAttachment, DocumentProperties, FALSE, FALSE);
    END;

    LOCAL PROCEDURE AddRelatedDocumentsForWorkSheet@1100528514(VAR TempEmailAttachment@1100528504 : TEMPORARY Record 11229294;ServiceOrder@1100528500 : Record 11012823);
    VAR
      ServiceContract@1100528506 : Record 11012812;
      DocumentProperties@1100528501 : Record 11012746;
      RecRef@1100528507 : RecordRef;
      DocumentLinkManagement@1100528508 : Codeunit 11012401;
    BEGIN
      //**4PS
      IF ServiceContract.GET(ServiceOrder."Service Contract No.") THEN BEGIN
        RecRef.GETTABLE(ServiceContract);
        DocumentLinkManagement.GetDocuments(DocumentProperties, RecRef);
      END;

      RecRef.GETTABLE(ServiceOrder);
      DocumentLinkManagement.GetDocuments(DocumentProperties, RecRef);
      DocumentProperties.MARKEDONLY(TRUE);

      AddRelatedDocuments(TempEmailAttachment, DocumentProperties, TRUE, FALSE);
    END;

    PROCEDURE AddRelatedDocuments@1100528703(VAR TempEmailAttachment@1100528500 : TEMPORARY Record 11229294;VAR DocumentProperties@1100528700 : Record 11012746;OnlyWordDocuments@1100528501 : Boolean;ConvertToPDF@1100528507 : Boolean);
    VAR
      DocumentRelation@1100528704 : Record 11012407;
      RecRef@1100528702 : RecordRef;
      FileManagement@1100528503 : Codeunit 419;
      DocumentLinkMgt@1100528504 : Codeunit 11012401;
      WordAutomation@1100528505 : Codeunit 11012400;
      FullFileName@1100528502 : Text[250];
      WordExtension@1100528506 : Text[5];
    BEGIN
      //**4PS
      IF DocumentProperties.FINDSET THEN BEGIN
        REPEAT
          IF DocumentProperties.File <> '' THEN BEGIN
            FullFileName := '';
            IF OnlyWordDocuments THEN BEGIN
              IF WordAutomation.ExistingFileName(DocumentProperties.File, TRUE, FALSE, WordExtension) THEN
                FullFileName := DocumentProperties.File + WordExtension
            END ELSE
              FullFileName := DocumentProperties.FullFileName;
            IF FullFileName <> '' THEN
              IF FileManagement.ClientFileExists(FullFileName) THEN BEGIN
                TempEmailAttachment."Attachment Server File Path" := UploadFileSilent(FullFileName, ConvertToPDF);
                TempEmailAttachment."Delete Server File" := TRUE;
                TempEmailAttachment."Attachment Name" := FileManagement.GetFileName(FullFileName);
                TempEmailAttachment."Attachment Client File Path" := FullFileName;
                TempEmailAttachment."Delete Client File" := FALSE; // Documents must not be deleted!
                TempEmailAttachment.INSERT(TRUE);
              END;
          END;
        UNTIL DocumentProperties.NEXT = 0;
      END;
    END;

    PROCEDURE SaveAnyRecordReportAsPdfOnClient@1100528412(SourceVariant@1100528501 : Variant;EMailSetupUsage@1100528404 : Integer;ShortcutDimension1Code@1100528403 : Code[20];ReportId@1005 : Integer;FullClientPDFFileName@1100528400 : Text);
    VAR
      TempEmailAttachment@1100528401 : TEMPORARY Record 11229294;
      FileManagement@1100528402 : Codeunit 419;
    BEGIN
      //**4PS
      SaveAnyRecordReportAsPdf(
        SourceVariant, EMailSetupUsage, ShortcutDimension1Code, ReportId, TRUE, TempEmailAttachment);
      FileManagement.DownloadToFile(TempEmailAttachment."Attachment Server File Path", FullClientPDFFileName);
      IF TempEmailAttachment."Delete Server File" THEN
        ERASE(TempEmailAttachment."Attachment Server File Path");
    END;

    PROCEDURE SaveAnyRecordReportAsPdf@1100528512(SourceVariant@1100528501 : Variant;EMailSetupUsage@1100528401 : Integer;ShortcutDimension1Code@1100528400 : Code[20];ReportId@1005 : Integer;ThrowErrorWhenFileNotExists@1100528402 : Boolean;VAR TempEmailAttachment@1100528500 : TEMPORARY Record 11229294) FileExists : Boolean;
    VAR
      FileManagement@1003 : Codeunit 419;
      PDFFileManagement@1100528502 : Codeunit 11020228;
    BEGIN
      //**4PS
      TempEmailAttachment."Attachment Server File Path" := COPYSTR(FileManagement.ServerTempFileName('pdf'), 1, 250);
      TempEmailAttachment."Delete Server File" := TRUE;
      REPORT.SAVEASPDF(ReportId, TempEmailAttachment."Attachment Server File Path", SourceVariant);
      PDFFileManagement.AddBackground(
        TempEmailAttachment."Attachment Server File Path", EMailSetupUsage, ShortcutDimension1Code);
      FileExists := TRUE;
      IF NOT EXISTS(TempEmailAttachment."Attachment Server File Path") THEN
        IF ThrowErrorWhenFileNotExists THEN
          ERROR(ServerSaveAsPdfFailedErr)
        ELSE
          FileExists := FALSE;
      TempEmailAttachment.INSERT(TRUE);
    END;

    PROCEDURE SaveConsentedDocumentsAsPdf@1100528413(VAR UserSetup@1100528402 : Record 91;FromConsentedDateTime@1100528401 : DateTime;ToConsentedDateTime@1100528400 : DateTime;VAR TempEmailAttachment@1100528500 : TEMPORARY Record 11229294) : Text[250];
    VAR
      ConsentedDocuments@1100528403 : Report 11012228;
      EMailSetup@1100528404 : Record 11229911;
      FileManagement@1003 : Codeunit 419;
      PDFFileManagement@1100528502 : Codeunit 11020228;
    BEGIN
      //**4PS
      TempEmailAttachment."Attachment Server File Path" := COPYSTR(FileManagement.ServerTempFileName('pdf'), 1, 250);
      TempEmailAttachment."Delete Server File" := TRUE;
      ConsentedDocuments.SETTABLEVIEW(UserSetup);
      ConsentedDocuments.SetFromToConsentedDateTime(FromConsentedDateTime, ToConsentedDateTime);
      ConsentedDocuments.SAVEASPDF(TempEmailAttachment."Attachment Server File Path");
      PDFFileManagement.AddBackground(
        TempEmailAttachment."Attachment Server File Path", EMailSetup.Usage::"101", UserSetup."Department Code");
      IF NOT EXISTS(TempEmailAttachment."Attachment Server File Path") THEN
        ERROR(ServerSaveAsPdfFailedErr);
      TempEmailAttachment.INSERT(TRUE);
    END;

    LOCAL PROCEDURE UploadFileSilent@1100528521(ClientFileName@1100528500 : Text[250];ConvertToPDF@1100528501 : Boolean) ServerFileName : Text[250];
    VAR
      PDFFileManagement@1100528502 : Codeunit 11020228;
      FileManagement@1100528504 : Codeunit 419;
      ClientPDFFileName@1100528503 : Text[250];
    BEGIN
      //**4PS
      IF ConvertToPDF THEN BEGIN
        IF PDFFileManagement.ConvertClientFileToPDF(ClientFileName, ClientPDFFileName) THEN BEGIN
          ServerFileName := FileManagement.UploadFileSilent(ClientPDFFileName);
          FileManagement.DeleteClientFile(ClientPDFFileName);
        END ELSE BEGIN
          ServerFileName := FileManagement.UploadFileSilent(ClientFileName);
        END;
      END ELSE
        ServerFileName := FileManagement.UploadFileSilent(ClientFileName);
    END;

    LOCAL PROCEDURE MarkAttachmentToBeSavedAsExternalDocuments@1100528417(VAR TempEmailAttachment@1100528400 : TEMPORARY Record 11229294);
    BEGIN
      //**4PS
      TempEmailAttachment."Save As External Documents" := TRUE;
      TempEmailAttachment.MODIFY;
    END;

    LOCAL PROCEDURE UpdateServiceOrderEMailAttachmFileName@1100528422(ServiceOrderEMailQueueEntryNo@1100528401 : Integer;OrigFileName@1100528402 : Text[250];NewFileName@1100528403 : Text[250]);
    VAR
      ServiceOrderEMailAttachm@1100528400 : Record 11071933;
    BEGIN
      //**4PS
      ServiceOrderEMailAttachm.SETRANGE("Queue Entry No.", ServiceOrderEMailQueueEntryNo);
      ServiceOrderEMailAttachm.SETRANGE(Filename, OrigFileName);
      ServiceOrderEMailAttachm.MODIFYALL(Filename, NewFileName);
    END;

    BEGIN
    {
      4PS, dbeekman, 22-10-2008:
        - ReportSelection changed. cod229.GetReportSelection called to select reports to be printed
        - local var ReportSelection is changed to Temporary, name is not changed to Temp[Var] because of the
          high number of occurences that needed to be changed then (however used in NAVW1, it is not common)
        - old filtering outcommented, and new function call added without **4PS tags

      4PS, mvos, 20-05-2010:
        - Changed PrintDocW and PrintDocI (variable document to document properties)
    }
    END.
  }
}

