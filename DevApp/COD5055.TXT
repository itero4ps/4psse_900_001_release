OBJECT Codeunit 5055 CustVendBank-Update
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,4PS9.00;
  }
  PROPERTIES
  {
    TableNo=5050;
    Permissions=TableData 18=rimd,
                TableData 23=rimd,
                TableData 287=rimd,
                TableData 288=rimd;
    OnRun=BEGIN
            // 'ContBusRel' is declared as global (instead of) local var //**4PS.n

            ContBusRel.SETRANGE("Contact No.","No.");
            ContBusRel.SETFILTER("Link to Table",'<>''''');

            IF ContBusRel.FIND('-') THEN
              REPEAT
                CASE ContBusRel."Link to Table" OF
                  ContBusRel."Link to Table"::Customer:
                    UpdateCustomer(Rec,ContBusRel);
                  ContBusRel."Link to Table"::Vendor:
                    UpdateVendor(Rec,ContBusRel);
                  ContBusRel."Link to Table"::"Bank Account":
                    UpdateBankAccount(Rec,ContBusRel);
                  //**4PS.sn
                  ContBusRel."Link to Table"::Employee:
                    UpdateEmployee(Rec,ContBusRel);
                  ContBusRel."Link to Table"::Employer:
                    UpdateEmployer(Rec,ContBusRel);
                  //**4PS.en
                END;
              UNTIL ContBusRel.NEXT = 0;
          END;

  }
  CODE
  {
    VAR
      Cust@1001 : Record 18;
      Vend@1002 : Record 23;
      BankAcc@1003 : Record 270;
      ContBusRel@1210190000 : Record 5054;
      ContBusRel2@1100485002 : Record 5054;
      EmployerRec@1100485001 : Record 11012013;
      EmplRec@1100485000 : Record 5200;
      NoSerie@1004 : Code[10];
      OurContactCode@1006 : Code[10];
      SecondaryCompany@1100485006 : Boolean;

    PROCEDURE UpdateCustomer@1(VAR Cont@1000 : Record 5050;VAR ContBusRel@1001 : Record 5054);
    VAR
      VATRegistrationLogMgt@1002 : Codeunit 249;
      VATRegNo@1003 : Text[20];
      ChangeCustomerBankAccountCode@1100525001 : Boolean;
      UseFieldCaption@1100525000 : Text[100];
      CurrencyCode@1100528700 : Code[10];
    BEGIN
      WITH Cust DO BEGIN
        GET(ContBusRel."No.");
        NoSerie := "No. Series";
        VATRegNo := "VAT Registration No.";

        //**4PS.sn
        CurrencyCode := "Currency Code";
        IF (NOT SecondaryCompany) AND
             ((Name <> Cont.Name) OR
              (Address <> Cont.Address) OR
              (City <> Cont.City) OR
              ("Country/Region Code" <> Cont."Country/Region Code") OR
              ("Post Code" <> Cont."Post Code")) THEN
         BEGIN
           ChangeCustomerBankAccountCode := TRUE;
           UseFieldCaption := FIELDCAPTION(Address);
         END ELSE
           ChangeCustomerBankAccountCode := FALSE;
        //**4PS.en

        TRANSFERFIELDS(Cont);
        "No." := ContBusRel."No.";
        "No. Series" := NoSerie;

        //**4PS.sn
        "Currency Code" := CurrencyCode;
        "Mobile Phone No." := Cont."Mobile Phone No.";
        "Phone No. 2" := Cont."Phone No. 2";
        IF Cont.Blocked THEN
          VALIDATE(Blocked, Blocked::All);
        "COC Registration No." := Cont."COC Registration No.";
        "COC Location No." := Cont."COC Location No.";
        "City COC" := Cont."City COC";
        "Due Date COC Statement" := Cont."Due Date COC Statement";
        //**4PS.en

        MODIFY;
        IF ("VAT Registration No." <> '') AND ("VAT Registration No." <> VATRegNo) THEN
          VATRegistrationLogMgt.LogCustomer(Cust);

        //**4PS.sn

        CheckRelatedAddress;  //db, 18-12-07 (M12524)
        //**4PS.en
      END;
    END;

    PROCEDURE UpdateVendor@2(VAR Cont@1000 : Record 5050;VAR ContBusRel@1001 : Record 5054);
    VAR
      VATRegistrationLogMgt@1002 : Codeunit 249;
      VATRegNo@1003 : Text[20];
      ChangeVendorBankAccountCode@1100525000 : Boolean;
      UseFieldCaption@1100525001 : Text[100];
      CurrencyCode@1100528700 : Code[10];
    BEGIN
      WITH Vend DO BEGIN
        GET(ContBusRel."No.");
        NoSerie := "No. Series";
      //PurchaserCode := "Purchaser Code"; //**4PS.o
        VATRegNo := "VAT Registration No.";

        //**4PS.sn
        CurrencyCode := "Currency Code";
        IF (NOT SecondaryCompany) AND
             ((Vend.Name <> Cont.Name) OR
              (Vend.Address <> Cont.Address) OR
              (Vend.City <> Cont.City) OR
              (Vend."Country/Region Code" <> Cont."Country/Region Code") OR
              (Vend."Post Code" <> Cont."Post Code")) THEN
        BEGIN
          ChangeVendorBankAccountCode := TRUE;
          UseFieldCaption := FIELDCAPTION(Address);
        END ELSE
          ChangeVendorBankAccountCode := FALSE;
        //**4PS.en

        TRANSFERFIELDS(Cont);
        "No." := ContBusRel."No.";
        "No. Series" := NoSerie;
      //"Purchaser Code" := PurchaserCode; //**4PS.o
        //**4PS.sn
        "Purchaser Code" := Cont."Purchaser Code";
        "Currency Code" := CurrencyCode;
        "Mobile Phone No." := Cont."Mobile Phone No.";
        IF Cont.Blocked THEN
          VALIDATE(Blocked, Blocked::All);
        "COC Registration No." := Cont."COC Registration No.";
        "COC Location No." := Cont."COC Location No.";
        "City COC" := Cont."City COC";
        "Due Date COC Statement" := Cont."Due Date COC Statement";
        //**4PS.en

        MODIFY;
        IF ("VAT Registration No." <> '') AND ("VAT Registration No." <> VATRegNo) THEN
          VATRegistrationLogMgt.LogVendor(Vend);

      END;
    END;

    PROCEDURE UpdateBankAccount@3(VAR Cont@1000 : Record 5050;VAR ContBusRel@1001 : Record 5054);
    VAR
      CurrencyCode@1100528700 : Code[10];
    BEGIN
      WITH BankAcc DO BEGIN
        GET(ContBusRel."No.");
        NoSerie := "No. Series";
        OurContactCode := "Our Contact Code";
        //VALIDATE("Currency Code",Cont."Currency Code"); //**4PS.o
        CurrencyCode := "Currency Code"; //**4PS.n
        TRANSFERFIELDS(Cont);
        "No." := ContBusRel."No.";
        "No. Series" := NoSerie;
        "Our Contact Code" := OurContactCode;
        "Currency Code" := CurrencyCode; //**4PS.n

        //**4PS.sn
        IF Cont.Blocked THEN
          VALIDATE(Blocked, Cont.Blocked);
        //**4PS.en

        MODIFY;
      END;
    END;

    PROCEDURE SetCompany@1210190001(CompName@1210190001 : Text[50]);
    BEGIN
      //**4PS
      ContBusRel.CHANGECOMPANY(CompName);
      ContBusRel2.CHANGECOMPANY(CompName);
      Cust.CHANGECOMPANY(CompName);
      Vend.CHANGECOMPANY(CompName);
      BankAcc.CHANGECOMPANY(CompName);
      EmplRec.CHANGECOMPANY(CompName);
      EmployerRec.CHANGECOMPANY(CompName);
    END;

    PROCEDURE UpdateEmployer@1100485000(VAR Cont@1100485001 : Record 5050;VAR ContBusRel@1100485000 : Record 5054);
    BEGIN
      //**4PS
      WITH EmployerRec DO BEGIN
        GET(ContBusRel."No.");
        EmployerTransferFields(Cont,EmployerRec);
        Code := ContBusRel."No.";
        MODIFY;
      END;
    END;

    PROCEDURE EmployerTransferFields@1100485003(VAR Cont@1100485001 : Record 5050;VAR Employer@1100485000 : Record 11012013);
    BEGIN
      //**4PS
      WITH EmployerRec DO BEGIN
        Description := COPYSTR(Cont.Name,1,MAXSTRLEN(Description));
      END;
    END;

    PROCEDURE UpdateEmployee@1100485001(VAR Cont@1000 : Record 5050;VAR ContBusRel@1001 : Record 5054);
    BEGIN
      //**4PS
      WITH EmplRec DO BEGIN
        GET(ContBusRel."No.");
        NoSerie := "No. Series";
        EmployeeTransferFields(Cont,EmplRec);
        "No." := ContBusRel."No.";
        "No. Series" := NoSerie;
        MODIFY;
      END;
    END;

    PROCEDURE EmployeeTransferFields@1210190007(VAR Cont@1210190000 : Record 5050;VAR Empl@1210190001 : Record 5200);
    BEGIN
      //**4PS
      WITH Empl DO BEGIN
      // The sequence of the fields below corresponds with the field
      // sequence of the employee table definition.
      // If change, change also function in table 5200.
        "First Name" := Cont."First Name";
        "Middle Name" := Cont."Middle Name";
        "Last Name" := Cont.Surname;
        Initials := Cont.Initials;
        "Search Name" := Cont."Search Name";
        Address := Cont.Address;
        "Address 2" := Cont."Address 2";
        City := Cont.City;
        "Post Code" := Cont."Post Code";
        County := Cont.County;
        "Phone No." := Cont."Phone No.";
        "Mobile Phone No." := Cont."Mobile Phone No.";
        "E-Mail" := Cont."E-Mail";
        "Birth Date" := Cont."Birth Date 1";
        Gender := Cont.Sex;
        "Country/Region Code" := Cont."Country/Region Code";
        "Fax No." := Cont."Fax No.";
        Title := Cont.Title;
        "Salespers./Purch. Code" := Cont."Salesperson Code";
        "Name Abbreviation" := Cont."Name Abbreviation";
        "Title behind the Name":= Cont."Title Behind the Name";
        FillFullName;
      END;
    END;

    PROCEDURE SetIsSecondaryCompany@1100485002(iSecondaryCompany@1100485000 : Boolean);
    BEGIN
      SecondaryCompany := iSecondaryCompany;
    END;

    BEGIN
    END.
  }
}

