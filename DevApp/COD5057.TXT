OBJECT Codeunit 5057 VendCont-Update
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW17.00,4PS9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      RMSetup@1000 : Record 5079;
      ContBusRel@1001 : Record 5054;
      Cont@1002 : Record 5050;
      OldCont@1003 : Record 5050;
      NoSeriesMgt@1004 : Codeunit 396;
      ContNo@1005 : Code[20];
      NoSeries@1006 : Code[10];
      SalespersonCode@1007 : Code[10];
      CentralDataMngmnt@1100485001 : Codeunit 11012010;

    PROCEDURE OnInsert@3(VAR Vend@1000 : Record 23);
    BEGIN
      RMSetup.GET;
      IF RMSetup."Bus. Rel. Code for Vendors" = '' THEN
        EXIT;

      InsertNewContact(Vend,TRUE);
    END;

    PROCEDURE OnInsert2@1100528702(VAR Vend@1000 : Record 23;ContactType@1100528700 : 'Company,Person');
    BEGIN
      //**4PS
      RMSetup.GET;
      IF RMSetup."Bus. Rel. Code for Vendors" = '' THEN
        EXIT;

      InsertNewContact2(Vend, ContactType, TRUE);
    END;

    PROCEDURE OnModify@1(VAR Vend@1000 : Record 23);
    VAR
      CurrencyCode@1100528700 : Code[10];
    BEGIN
      WITH ContBusRel DO BEGIN
        SETCURRENTKEY("Link to Table","No.");
        SETRANGE("Link to Table","Link to Table"::Vendor);
        SETRANGE("No.",Vend."No.");
        IF NOT FINDFIRST THEN
          EXIT;
        Cont.GET("Contact No.");
        OldCont := Cont;
      END;

      ContNo := Cont."No.";
      NoSeries := Cont."No. Series";
      SalespersonCode := Cont."Salesperson Code";
      CurrencyCode := Cont."Currency Code"; //**4PS.n
      Cont.VALIDATE("E-Mail",Vend."E-Mail");
      Cont.TRANSFERFIELDS(Vend);
      Cont."No." := ContNo ;
      Cont."No. Series" := NoSeries;
      Cont."Salesperson Code" := SalespersonCode;
      Cont."Currency Code" := CurrencyCode; //**4PS.n
      //**4PS.sn
      Cont."Purchaser Code" := Vend."Purchaser Code";
      Cont."Mobile Phone No." := Vend."Mobile Phone No.";
      Cont."COC Registration No." := Vend."COC Registration No.";
      Cont."COC Location No." := Vend."COC Location No.";
      Cont."City COC" := Vend."City COC";
      Cont."Due Date COC Statement" := Vend."Due Date COC Statement";
      IF Cont.Type = Cont.Type::Person THEN
        Cont."VAT Registration No." := '';
      //**4PS.en
      Cont.VALIDATE(Name);
      Cont.OnModify(OldCont,TRUE);
      Cont.MODIFY(TRUE);
    END;

    PROCEDURE OnDelete@2(VAR Vend@1000 : Record 23);
    BEGIN
      WITH ContBusRel DO BEGIN
        SETCURRENTKEY("Link to Table","No.");
        SETRANGE("Link to Table","Link to Table"::Vendor);
        SETRANGE("No.",Vend."No.");
        DELETEALL(TRUE);
      END;
    END;

    PROCEDURE InsertNewContact@4(VAR Vend@1000 : Record 23;LocalCall@1001 : Boolean);
    BEGIN
      //**4PS.so
      //IF NOT LocalCall THEN BEGIN
      //  RMSetup.GET;
      //  RMSetup.TESTFIELD("Bus. Rel. Code for Vendors");
      //END;
      //
      //WITH Cont DO BEGIN
      //  INIT;
      //  TRANSFERFIELDS(Vend);
      //  Cont.VALIDATE(Name);
      //  Cont.VALIDATE("E-Mail");
      //  "No." := '';
      //  "No. Series" := '';
      //  RMSetup.TESTFIELD("Contact Nos.");
      //  NoSeriesMgt.InitSeries(RMSetup."Contact Nos.",'',0D,"No.","No. Series");
      //  Type := Type::Company;
      //  TypeChange;
      //  SetSkipDefault(FALSE);
      //  INSERT(TRUE);
      //END;
      //
      //WITH ContBusRel DO BEGIN
      //  INIT;
      //  "Contact No." := Cont."No.";
      //  "Business Relation Code" := RMSetup."Bus. Rel. Code for Vendors";
      //  "Link to Table" := "Link to Table"::Vendor;
      //  "No." := Vend."No.";
      //  INSERT(TRUE);
      //END;
      //**4PS.eo
      InsertNewContact2(Vend, 0, LocalCall); //**4PS.n
    END;

    LOCAL PROCEDURE InsertNewContact2@1100528700(VAR Vend@1100528701 : Record 23;ContactType@1100528702 : 'Company,Person';LocalCall@1100528700 : Boolean);
    BEGIN
      //**4PS
      IF ContactType = ContactType::Company THEN
        IF NOT CentralDataMngmnt.InsertingCompanyIsAllowed THEN
          EXIT;

      IF ContactType = ContactType::Person THEN
        IF NOT CentralDataMngmnt.InsertingPersonIsAllowed THEN
          EXIT;

      IF NOT LocalCall THEN BEGIN
        RMSetup.GET;
        RMSetup.TESTFIELD("Bus. Rel. Code for Vendors");
      END;

      WITH Cont DO BEGIN
        INIT;
        TRANSFERFIELDS(Vend);

        Cont."Purchaser Code" := Vend."Purchaser Code";
        Cont."Mobile Phone No." := Vend."Mobile Phone No.";
        "COC Registration No." := Vend."COC Registration No.";
        "COC Location No." := Vend."COC Location No.";
        "City COC" := Vend."City COC";
        "Due Date COC Statement" := Vend."Due Date COC Statement";

        VALIDATE(Name);
        VALIDATE("E-Mail");
        "No." := '';
        "No. Series" := '';
        "Currency Code" := '';
        IF ContactType = ContactType::Person THEN
          "VAT Registration No." := '';
        IF ContactType = ContactType::Company THEN BEGIN
          RMSetup.TESTFIELD("Company Nos.");
          NoSeriesMgt.InitSeries(RMSetup."Company Nos.",'',0D,"No.","No. Series");
          Type := Type::Company;
        END ELSE BEGIN
          RMSetup.TESTFIELD("Person Nos.");
          NoSeriesMgt.InitSeries(RMSetup."Person Nos.",'',0D,"No.","No. Series");
          Type := Type::Person;
        END;
        TypeChange;
        SetSkipDefault(FALSE);
        INSERT(TRUE);
      END;

      WITH ContBusRel DO BEGIN
        INIT;
        "Contact No." := Cont."No.";
        "Business Relation Code" := RMSetup."Bus. Rel. Code for Vendors";
        "Link to Table" := "Link to Table"::Vendor;
        "No." := Vend."No.";
        INSERT(TRUE);
      END;
    END;

    PROCEDURE InsertNewContactPerson@5(VAR Vend@1001 : Record 23;LocalCall@1003 : Boolean);
    VAR
      ContComp@1000 : Record 5050;
      ContBusRel@1002 : Record 5054;
    BEGIN
      IF NOT CentralDataMngmnt.InsertingPersonIsAllowed THEN //**4PS.n
        EXIT;                                                //**4PS.n

      IF NOT LocalCall THEN BEGIN
        RMSetup.GET;
        RMSetup.TESTFIELD("Bus. Rel. Code for Vendors");
      END;

      ContBusRel.SETCURRENTKEY("Link to Table","No.");
      ContBusRel.SETRANGE("Link to Table",ContBusRel."Link to Table"::Vendor);
      ContBusRel.SETRANGE("No.",Vend."No.");
      IF ContBusRel.FINDFIRST THEN
        IF ContComp.GET(ContBusRel."Contact No.") THEN
          WITH Cont DO BEGIN
            INIT;
            "No." := '';
            RMSetup.TESTFIELD("Person Nos.");                                       //**4PS.n
            NoSeriesMgt.InitSeries(RMSetup."Person Nos.",'',0D,"No.","No. Series"); //**4PS.n
            VALIDATE(Type, Type::Person); //**4PS.n
            VALIDATE(Name, Vend.Contact); //**4PS.n
            INSERT(TRUE);
            GET(CreateContactPerson(ContComp."No.", "No.", '')); //**4PS.n
            "Company No." := ContComp."No.";
            //Type := Type::Person;        //**4PS.o
            //VALIDATE(Name,Vend.Contact); //**4PS.o
            //InheritCompanyToPersonData(ContComp,FALSE);  //**4PS.o (25310)
            InheritCompanyToPersonData(ContComp,FALSE,TRUE);  //**4PS.n (25310)
            MODIFY(TRUE);
            Vend."Primary Contact No." := "No.";
          END
    END;

    BEGIN
    END.
  }
}

