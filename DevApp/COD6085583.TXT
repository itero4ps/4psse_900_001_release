OBJECT Codeunit 6085583 Navigate Document Capture
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW13.70.00.4.00.03,4PS9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@161024012 : TextConst 'ENU=Document Capture Document';
      Text002@161024013 : TextConst 'ENU=Document Capture File';
      Text003@161024014 : TextConst 'ENU=Purchase Allocation';
      Text004@161024015 : TextConst 'ENU=Purchase Allocation Entry';

    PROCEDURE FindRecords@161024012(VAR DocEntry@161024014 : Record 265;DocNoFilter@161024013 : Code[250];PostingDateFilter@161024012 : Text[250]);
    VAR
      TempDoc@161024017 : TEMPORARY Record 6085590;
      PurchAllocHeader@161024015 : Record 6085730;
      PurchAllocEntry@161024016 : Record 6085732;
      DCNavigateEntry@1160040000 : Record 6086014;
      CEMProxy@1160040001 : Codeunit 6085782;
    BEGIN
      IF TempDoc.READPERMISSION THEN BEGIN
        FilterDocuments(TempDoc,DocNoFilter,PostingDateFilter);

        InsertIntoDocEntry(DocEntry,DATABASE::"DC Document",0,Text001,TempDoc.COUNT);
        InsertIntoDocEntry(DocEntry,DATABASE::"DC Document",1,Text002,TempDoc.COUNT);
      END;

      IF PurchAllocHeader.READPERMISSION THEN BEGIN
        PurchAllocHeader.SETFILTER("No.",DocNoFilter);
        PurchAllocHeader.SETFILTER("Posting Date",PostingDateFilter);
        InsertIntoDocEntry(DocEntry,DATABASE::"Purch. Allocation Header",0,Text003,PurchAllocHeader.COUNT);
      END;

      IF PurchAllocEntry.READPERMISSION THEN BEGIN
        PurchAllocEntry.SETCURRENTKEY("Document No.","Posting Date");
        PurchAllocEntry.SETFILTER("Document No.",DocNoFilter);
        PurchAllocEntry.SETFILTER("Posting Date",PostingDateFilter);
        InsertIntoDocEntry(DocEntry,DATABASE::"Purch. Alloc. Entry",0,Text004,PurchAllocEntry.COUNT);
      END;

      IF CEMProxy.IsCEMEnabled(FALSE) THEN BEGIN
        DCNavigateEntry."Doc. No. Filter" := DocNoFilter;
        DCNavigateEntry."Posting Date Filter" := PostingDateFilter;
        CODEUNIT.RUN(6086322,DCNavigateEntry);
        IF DCNavigateEntry."No. of Records" > 0 THEN
          InsertIntoDocEntry(DocEntry,DCNavigateEntry."Table ID",DCNavigateEntry."Document Type",DCNavigateEntry."Table Name",
            DCNavigateEntry."No. of Records");
      END;
    END;

    LOCAL PROCEDURE InsertIntoDocEntry@3(VAR DocEntry@161024012 : Record 265;DocTableID@1000 : Integer;DocType@1003 : Option;DocTableName@1001 : Text[1024];DocNoOfRecords@1002 : Integer);
    BEGIN
      WITH DocEntry DO BEGIN
        IF DocNoOfRecords = 0 THEN
          EXIT;
        INIT;
        "Entry No." := "Entry No." + 1;
        "Table ID" := DocTableID;
        "Document Type" := DocType;
        "Table Name" := COPYSTR(DocTableName,1,MAXSTRLEN("Table Name"));
        "No. of Records" := DocNoOfRecords;
        INSERT;
      END;
    END;

    PROCEDURE ShowRecords@161024013(VAR DocEntry@161024012 : Record 265;DocNoFilter@161024014 : Code[250];PostingDateFilter@161024013 : Text[250]);
    VAR
      TempDoc@161024015 : TEMPORARY Record 6085590;
      Doc@161024018 : Record 6085590;
      PurchAllocHeader@161024016 : Record 6085730;
      PurchAllocEntry@161024017 : Record 6085732;
      DCNavigateEntry@1160040000 : Record 6086014;
      CEMProxy@1160040001 : Codeunit 6085782;
    BEGIN
      CASE DocEntry."Table ID" OF
        DATABASE::"DC Document":
          BEGIN
            FilterDocuments(TempDoc,DocNoFilter,PostingDateFilter);

            IF TempDoc.COUNT = 1 THEN BEGIN
              TempDoc.FINDFIRST;
              Doc.GET(TempDoc."No.");
              IF DocEntry."Document Type" = 0 THEN
                PAGE.RUN(PAGE::"Document Card",Doc)
              ELSE
                Doc.OpenPDFFile;
            END ELSE
            //PAGE.RUN(PAGE::"Document List",TempDoc); //**4PS.o
              PAGE.RUN(PAGE::"Document List (DC)",TempDoc); //**4PS.n
          END;

        DATABASE::"Purch. Allocation Header":
          BEGIN
            PurchAllocHeader.SETFILTER("No.",DocNoFilter);
            PurchAllocHeader.SETFILTER("Posting Date",PostingDateFilter);
            IF PurchAllocHeader.COUNT = 1 THEN
              PAGE.RUN(PAGE::"Purch. Allocation",PurchAllocHeader)
            ELSE
              PAGE.RUN(0,PurchAllocHeader);
          END;

        DATABASE::"Purch. Alloc. Entry":
          BEGIN
            PurchAllocEntry.SETCURRENTKEY("Document No.","Posting Date");
            PurchAllocEntry.SETFILTER("Document No.",DocNoFilter);
            PurchAllocEntry.SETFILTER("Posting Date",PostingDateFilter);
            PAGE.RUN(0,PurchAllocEntry);
          END;

        ELSE
          BEGIN
            IF CEMProxy.IsCEMEnabled(FALSE) THEN BEGIN
              DCNavigateEntry.TRANSFERFIELDS(DocEntry);
              DCNavigateEntry."Doc. No. Filter" := DocNoFilter;
              DCNavigateEntry."Posting Date Filter" := PostingDateFilter;
              CODEUNIT.RUN(6086325,DCNavigateEntry);
            END;
          END;
      END;
    END;

    PROCEDURE FilterDocuments@161024014(VAR Doc2@161024014 : TEMPORARY Record 6085590;DocNoFilter@161024013 : Code[250];PostingDateFilter@161024012 : Text[250]);
    VAR
      PurchHeader@1160040001 : Record 38;
      PurchInvHeader@1160040000 : Record 122;
      PurchCrMemoHdr@1160040002 : Record 124;
      PurchRcpHeader@1160040005 : Record 120;
      RetShptHeader@1160040006 : Record 6650;
      SalesHeader@1160040009 : Record 36;
      SalesInvHeader@1160040004 : Record 112;
      SalesCrMemoHdr@1160040007 : Record 114;
      SalesShipHeader@1160040003 : Record 110;
      RetRcpHeader@1160040008 : Record 6660;
    BEGIN
      // *********************************************************************************************************************************
      // Filter records that have been created from first creating a document
      // and then been posted to another document
      // *********************************************************************************************************************************
      FilterDocAndTable(Doc2,
        DATABASE::"Purch. Inv. Header",                // Record table potentially associated to a Document.
        PurchInvHeader.FIELDNO("No."),                 // Field 1 in Record table.
        PurchInvHeader.FIELDNO("Posting Date"),        // Field 2 in Record table.
        DocNoFilter,                                   // Filter 1
        PostingDateFilter,                             // Filter 2
        DATABASE::"Purchase Header",                   // "Created Doc. Type" of Document table.
        PurchHeader."Document Type"::Invoice,          // "Created Doc. Sub Type" of Document table.
        PurchInvHeader.FIELDNO("Pre-Assigned No."));   // Field link between Record table and Document table.

      FilterDocAndTable(Doc2,
        DATABASE::"Purch. Inv. Header",
        PurchInvHeader.FIELDNO("No."),
        PurchInvHeader.FIELDNO("Posting Date"),
        DocNoFilter,
        PostingDateFilter,
        DATABASE::"Purchase Header",
        PurchHeader."Document Type"::Order,
        PurchInvHeader.FIELDNO("Order No."));

      FilterDocAndTable(Doc2,
        DATABASE::"Purch. Rcpt. Header",
        PurchRcpHeader.FIELDNO("No."),
        PurchRcpHeader.FIELDNO("Posting Date"),
        DocNoFilter,
        PostingDateFilter,
        DATABASE::"Purchase Header",
        PurchHeader."Document Type"::Order,
        PurchRcpHeader.FIELDNO("Order No."));

      FilterDocAndTable(Doc2,
        DATABASE::"Purch. Cr. Memo Hdr.",
        PurchCrMemoHdr.FIELDNO("No."),
        PurchCrMemoHdr.FIELDNO("Posting Date"),
        DocNoFilter,
        PostingDateFilter,
        DATABASE::"Purchase Header",
        PurchHeader."Document Type"::"Credit Memo",
        PurchCrMemoHdr.FIELDNO("Pre-Assigned No."));

      FilterDocAndTable(Doc2,
        DATABASE::"Purch. Cr. Memo Hdr.",
        PurchCrMemoHdr.FIELDNO("No."),
        PurchCrMemoHdr.FIELDNO("Posting Date"),
        DocNoFilter,
        PostingDateFilter,
        DATABASE::"Purchase Header",
        PurchHeader."Document Type"::"Return Order",
        PurchCrMemoHdr.FIELDNO("Return Order No."));

      FilterDocAndTable(Doc2,
        DATABASE::"Return Shipment Header",
        RetShptHeader.FIELDNO("No."),
        RetShptHeader.FIELDNO("Posting Date"),
        DocNoFilter,
        PostingDateFilter,
        DATABASE::"Purchase Header",
        PurchHeader."Document Type"::"Return Order",
        RetShptHeader.FIELDNO("Return Order No."));

      FilterDocAndTable(Doc2,
        DATABASE::"Sales Invoice Header",
        SalesInvHeader.FIELDNO("No."),
        SalesInvHeader.FIELDNO("Posting Date"),
        DocNoFilter,
        PostingDateFilter,
        DATABASE::"Sales Header",
        SalesHeader."Document Type"::Invoice,
        SalesInvHeader.FIELDNO("Pre-Assigned No."));

      FilterDocAndTable(Doc2,
        DATABASE::"Sales Invoice Header",
        SalesInvHeader.FIELDNO("No."),
        SalesInvHeader.FIELDNO("Posting Date"),
        DocNoFilter,
        PostingDateFilter,
        DATABASE::"Sales Header",
        SalesHeader."Document Type"::Order,
        SalesInvHeader.FIELDNO("Order No."));

      FilterDocAndTable(Doc2,
        DATABASE::"Sales Shipment Header",
        SalesShipHeader.FIELDNO("No."),
        SalesShipHeader.FIELDNO("Posting Date"),
        DocNoFilter,
        PostingDateFilter,
        DATABASE::"Sales Header",
        SalesHeader."Document Type"::Order,
        SalesShipHeader.FIELDNO("Order No."));

      FilterDocAndTable(Doc2,
        DATABASE::"Sales Cr.Memo Header",
        SalesCrMemoHdr.FIELDNO("No."),
        SalesCrMemoHdr.FIELDNO("Posting Date"),
        DocNoFilter,
        PostingDateFilter,
        DATABASE::"Sales Header",
        SalesHeader."Document Type"::"Credit Memo",
        SalesCrMemoHdr.FIELDNO("Pre-Assigned No."));

      FilterDocAndTable(Doc2,
        DATABASE::"Sales Cr.Memo Header",
        SalesCrMemoHdr.FIELDNO("No."),
        SalesCrMemoHdr.FIELDNO("Posting Date"),
        DocNoFilter,
        PostingDateFilter,
        DATABASE::"Sales Header",
        SalesHeader."Document Type"::"Return Order",
        SalesCrMemoHdr.FIELDNO("Return Order No."));

      FilterDocAndTable(Doc2,
        DATABASE::"Return Receipt Header",
        RetRcpHeader.FIELDNO("No."),
        RetRcpHeader.FIELDNO("Posting Date"),
        DocNoFilter,
        PostingDateFilter,
        DATABASE::"Sales Header",
        SalesHeader."Document Type"::"Return Order",
        RetRcpHeader.FIELDNO("Return Order No."));


      // *********************************************************************************************************************************
      // Filter records registrered directly to a document and therefor filter the following tables based on the document no.
      // *********************************************************************************************************************************
      FilterDoc(Doc2,DATABASE::"Purch. Inv. Header",DocNoFilter);
      FilterDoc(Doc2,DATABASE::"Purch. Rcpt. Header",DocNoFilter);
      FilterDoc(Doc2,DATABASE::"Purch. Cr. Memo Hdr.",DocNoFilter);
      FilterDoc(Doc2,DATABASE::"Return Shipment Header",DocNoFilter);

      FilterDoc(Doc2,DATABASE::"Sales Invoice Header",DocNoFilter);
      FilterDoc(Doc2,DATABASE::"Sales Shipment Header",DocNoFilter);
      FilterDoc(Doc2,DATABASE::"Sales Cr.Memo Header",DocNoFilter);
      FilterDoc(Doc2,DATABASE::"Return Receipt Header",DocNoFilter);
      FilterDoc(Doc2,DATABASE::"Issued Reminder Header",DocNoFilter);
      FilterDoc(Doc2,DATABASE::"Issued Fin. Charge Memo Header",DocNoFilter);

      FilterDoc(Doc2,DATABASE::"Production Order",DocNoFilter);

      FilterDoc(Doc2,DATABASE::"Transfer Shipment Header",DocNoFilter);
      FilterDoc(Doc2,DATABASE::"Transfer Receipt Header",DocNoFilter);

      FilterDoc(Doc2,DATABASE::"Service Header",DocNoFilter);
      FilterDoc(Doc2,DATABASE::"G/L Entry",DocNoFilter);
      FilterDoc(Doc2,DATABASE::"Cust. Ledger Entry",DocNoFilter);
      FilterDoc(Doc2,DATABASE::"Vendor Ledger Entry",DocNoFilter);
      FilterDoc(Doc2,DATABASE::"Item Ledger Entry",DocNoFilter);
      FilterDoc(Doc2,DATABASE::"Res. Ledger Entry",DocNoFilter);
      //FilterDoc(Doc2,DATABASE::Table11072005,DocNoFilter); //**4PS old
      FilterDoc(Doc2,DATABASE::"Job Ledger Entry",DocNoFilter); //**4PS DP00589.n
      FilterDoc(Doc2,DATABASE::"Value Entry",DocNoFilter);
      FilterDoc(Doc2,DATABASE::"Bank Account Ledger Entry",DocNoFilter);
      FilterDoc(Doc2,DATABASE::"Check Ledger Entry",DocNoFilter);
      FilterDoc(Doc2,DATABASE::"FA Ledger Entry",DocNoFilter);
      //FilterDoc(Doc2,DATABASE::Table11072085,DocNoFilter); //**4PS old
      FilterDoc(Doc2,DATABASE::"Maintenance Ledger Entry",DocNoFilter); //**4PS DP00589.n
      FilterDoc(Doc2,DATABASE::"Service Ledger Entry",DocNoFilter);
      FilterDoc(Doc2,DATABASE::"Warranty Ledger Entry",DocNoFilter);
      FilterDoc(Doc2,DATABASE::"Warehouse Entry",DocNoFilter);
    END;

    PROCEDURE FilterDoc@1160040000(VAR Doc2@1160040005 : Record 6085590;TableNo@1160040000 : Integer;DocIDFilter@1160040004 : Code[250]);
    VAR
      RecRef@1160040006 : RecordRef;
    BEGIN
      IF FilterRecRef(RecRef,TableNo,0,0,'','') THEN
        AddDoc(Doc2,0,TableNo,0,DocIDFilter);
    END;

    PROCEDURE FilterTable@1160040001(VAR Doc2@1160040005 : Record 6085590;TableNo@1160040000 : Integer;Fld1@1160040001 : Integer;Fld2@1160040003 : Integer;Val1@1160040007 : Text[250];Val2@1160040004 : Text[250]);
    VAR
      RecIDMgt@1160040009 : Codeunit 6085604;
      RecIDTreeID@1160040002 : Integer;
      RecRef@1160040006 : RecordRef;
    BEGIN
      IF FilterRecRef(RecRef,TableNo,Fld1,Fld2,Val1,Val2) THEN
        REPEAT
          RecIDTreeID := RecIDMgt.GetRecIDTreeID(RecRef,FALSE);
          IF RecIDTreeID > 0 THEN
            AddDoc(Doc2,RecIDTreeID,0,0,'');
        UNTIL RecRef.NEXT = 0;
    END;

    PROCEDURE FilterDocAndTable@1160040005(VAR Doc2@1160040005 : Record 6085590;TableNo@1160040000 : Integer;Fld1@1160040008 : Integer;Fld2@1160040007 : Integer;Val1@1160040004 : Text[250];Val2@1160040001 : Text[250];DocType@1160040002 : Integer;SubType@1160040003 : Integer;DocIDFieldNo@1160040010 : Integer);
    VAR
      RecRef@1160040006 : RecordRef;
      FieldRef@1160040011 : FieldRef;
    BEGIN
      IF FilterRecRef(RecRef,TableNo,Fld1,Fld2,Val1,Val2) THEN
        REPEAT
          FieldRef := RecRef.FIELD(DocIDFieldNo);
          AddDoc(Doc2,0,DocType,SubType,FORMAT(FieldRef.VALUE));
        UNTIL RecRef.NEXT = 0;
    END;

    PROCEDURE FilterRecRef@1160040007(VAR RecRef@1160040000 : RecordRef;TableNo@1160040006 : Integer;FieldNo1@1160040003 : Integer;FieldNo2@1160040004 : Integer;Val1@1160040001 : Text[250];Val2@1160040002 : Text[250]) : Boolean;
    BEGIN
      RecRef.OPEN(TableNo);

      IF NOT RecRef.READPERMISSION THEN
        EXIT(FALSE);

      FilterFieldRef(RecRef,FieldNo1,Val1);
      FilterFieldRef(RecRef,FieldNo2,Val2);

      EXIT(RecRef.FINDFIRST);
    END;

    PROCEDURE FilterFieldRef@1160040019(VAR RecRef@1160040000 : RecordRef;FldNo@1160040001 : Integer;Value@1160040002 : Text[250]);
    VAR
      FieldRef@1160040003 : FieldRef;
    BEGIN
      IF FldNo = 0 THEN
        EXIT;

      FieldRef := RecRef.FIELD(FldNo);
      FieldRef.SETFILTER(Value);
    END;

    PROCEDURE AddDoc@1160040009(VAR Doc2@1160040000 : Record 6085590;RecIDTreeID@1160040004 : Integer;DocType@1160040001 : Integer;DocSubType@1160040002 : Integer;DocIDFilter@1160040003 : Text[250]);
    VAR
      Doc@1160040005 : Record 6085590;
    BEGIN
      IF RecIDTreeID > 0 THEN BEGIN
        Doc.SETCURRENTKEY("Source Record ID Tree ID");
        Doc.SETRANGE("Source Record ID Tree ID",RecIDTreeID);
      END ELSE BEGIN
        Doc.SETCURRENTKEY("Created Doc. Type","Created Doc. Subtype","Created Doc. ID","Created Doc. Ref. No.");
        IF DocType > 0 THEN
          Doc.SETRANGE("Created Doc. Type",DocType);
        Doc.SETRANGE("Created Doc. Subtype",DocSubType);
        Doc.SETRANGE("Created Doc. ID",DocIDFilter);
      END;
      IF Doc.FINDSET THEN
        REPEAT
          IF NOT Doc2.GET(Doc."No.") THEN BEGIN
            Doc2 := Doc;
            Doc2.INSERT;
          END;
        UNTIL Doc.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

