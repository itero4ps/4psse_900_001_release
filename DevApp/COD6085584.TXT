OBJECT Codeunit 6085584 File System Management
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW17.00.00.4.04,4PS9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      FileSystem@161024012 : DotNet "'Akeyto.DocumentCapture.Dynamics.Nav.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=005df25b46c40152'.Akeyto.DocumentCapture.Dynamics.Nav.Shared.FileSystem";
      SupplyingCompany@1100528400 : Text[30];

    PROCEDURE GetClientFilename@1160040002(ServerFilename@1160040000 : Text[1024]) : Text[1024];
    VAR
      DCSetup@6085575 : Record 6085573;
      FileMgt@6085574 : Codeunit 419;
      ClientFilename@6085573 : Text[1024];
    BEGIN
      //**4PS.sn
      IF SupplyingCompany <> '' THEN
        DCSetup.CHANGECOMPANY(SupplyingCompany);
      //**4PS.en
      DCSetup.GET;
      IF DCSetup."Document Storage" = DCSetup."Document Storage"::"Local Servers" THEN
        EXIT(ServerFilename);

      ClientFilename := FileMgt.ClientTempFileName('tiff');
      ClientFilename := FileMgt.GetDirectoryName(ClientFilename) + '\' + FileMgt.GetFileName(ServerFilename);
      FileMgt.DownloadToFile(ServerFilename,ClientFilename);
      EXIT(ClientFilename);
    END;

    PROCEDURE DirectoryExists@161024013(Path@161024012 : Text[1024]) : Boolean;
    BEGIN
      IF NOT CreateVars THEN
        EXIT(FALSE);

      EXIT(FileSystem.DirectoryExists(Path));
    END;

    PROCEDURE CreateDirectory@161024015(Path@161024012 : Text[1024]) : Boolean;
    BEGIN
      IF NOT CreateVars THEN
        EXIT(FALSE);

      EXIT(FileSystem.CreateDirectory(Path));
    END;

    PROCEDURE IsFileLocked@161024017(Filename@161024012 : Text[1024]) : Boolean;
    BEGIN
      IF NOT CreateVars THEN
        EXIT(FALSE);

      EXIT(FileSystem.IsFileLocked(Filename));
    END;

    PROCEDURE CopyFile@1160040000(FromFile@1160040001 : Text[1024];ToFile@1160040000 : Text[1024]);
    BEGIN
      FILE.COPY(FromFile,ToFile);
    END;

    PROCEDURE MoveFile@161024020(FromFile@161024012 : Text[1024];ToFile@161024013 : Text[1024]) : Boolean;
    BEGIN
      IF NOT CreateVars THEN
        EXIT(FALSE);

      EXIT(FileSystem.Move(FromFile,ToFile));
    END;

    PROCEDURE DeleteFile@1160040001(Filename@1160040000 : Text[1024];SupressError@1160040001 : Boolean) : Boolean;
    BEGIN
      IF SupressError THEN
        EXIT(FILE.ERASE(Filename))
      ELSE
        FILE.ERASE(Filename)
    END;

    LOCAL PROCEDURE CreateVars@161024012() : Boolean;
    BEGIN
      IF NOT ISNULL(FileSystem) THEN
        EXIT(TRUE);

      IF NOT CANLOADTYPE(FileSystem) THEN
        EXIT(FALSE);

      FileSystem := FileSystem.FileSystem;
      EXIT(TRUE);
    END;

    PROCEDURE GetFilePath@161024016(FullFilename@161024012 : Text[250]) : Text[250];
    BEGIN
      EXIT(COPYSTR(FullFilename,1,LastIndexOf(FullFilename,'\',TRUE)));
    END;

    PROCEDURE GetFilename@161024018(FullFilename@161024012 : Text[250]) : Text[250];
    BEGIN
      EXIT(COPYSTR(FullFilename,LastIndexOf(FullFilename,'\',TRUE)+1));
    END;

    PROCEDURE GetFilenameWithoutExt@161024019(FullFilename@161024012 : Text[250]) : Text[250];
    BEGIN
      FullFilename := COPYSTR(FullFilename,LastIndexOf(FullFilename,'\',TRUE)+1);
      IF STRPOS(FullFilename,'.') <> 0 THEN
        FullFilename := COPYSTR(FullFilename,1,LastIndexOf(FullFilename,'.',TRUE)-1);
      EXIT(FullFilename);
    END;

    PROCEDURE GetFileExtension@161024021(FullFilename@161024012 : Text[250]) : Text[250];
    BEGIN
      EXIT(COPYSTR(FullFilename,LastIndexOf(FullFilename,'.',TRUE)+1));
    END;

    PROCEDURE GetTempFilename@1160040004(Filename@1160040002 : Text[1024];Extension@1160040000 : Text[30]) : Text[1024];
    VAR
      TierAutoMgt@1160040001 : Codeunit 419;
    BEGIN
      EXIT(TierAutoMgt.ServerTempFileName(Extension));
    END;

    PROCEDURE LocalShell@1160040003(Filename@1160040000 : Text[1024]);
    VAR
      LocalFileSystem@6085573 : DotNet "'Akeyto.DocumentCapture.Dynamics.Nav.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=005df25b46c40152'.Akeyto.DocumentCapture.Dynamics.Nav.Shared.FileSystem" RUNONCLIENT;
    BEGIN
      LocalFileSystem := LocalFileSystem.FileSystem;
      LocalFileSystem.OpenFile(Filename);
      CLEAR(LocalFileSystem);
    END;

    PROCEDURE LastIndexOf@6085573(Text@161024012 : Text[1024];CharToFind@161024013 : Text[1];IgnoreCase@161024014 : Boolean) : Integer;
    VAR
      StartIndex@161024015 : Integer;
    BEGIN
      IF IgnoreCase THEN BEGIN
        Text := UPPERCASE(Text);
        CharToFind := UPPERCASE(CharToFind);
      END;

      StartIndex := STRLEN(Text);
      WHILE StartIndex > 0 DO BEGIN
        IF COPYSTR(Text,StartIndex,1) = CharToFind THEN
          EXIT(StartIndex)
        ELSE
          StartIndex -= 1;
      END;
    END;

    PROCEDURE GetFilesInDir@1000000005(Path@1000000002 : Text[1024];FileType@161024012 : Text[30]) : Integer;
    VAR
      Files@1000000001 : Record 2000000022;
      FileSystem@1000000004 : Codeunit 6085584;
    BEGIN
      IF FileSystem.DirectoryExists(Path) THEN BEGIN
        Files.SETRANGE(Path,Path);
        Files.SETRANGE("Is a file",TRUE);
        Files.SETFILTER(Name,'@*.' + FileType);
        EXIT(Files.COUNT);
      END;
    END;

    PROCEDURE SetSupplyingCompany@1100528400(SupplyingCompany2@1100528400 : Text[30]);
    BEGIN
      //**4PS
      SupplyingCompany := SupplyingCompany2;
    END;

    BEGIN
    END.
  }
}

