OBJECT Codeunit 6085602 Document Attachment Mgnt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW13.70.00.4.05,4PS9.00;
  }
  PROPERTIES
  {
    Permissions=TableData 6085590=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@6085573 : TextConst 'ENU=[No Name]';
      Text002@1160040000 : TextConst 'ENU=Un-registered document (%1)';
      Text003@1160040001 : TextConst 'ENU=Rejected document (%1)';
      SupplyingCompany@1100528400 : Text[30];
      Text11012000@1100528401 : TextConst;

    PROCEDURE CreateTempDocumentList@6085574(VAR TempDoc@6085584 : Record 6085756;RecID@6085574 : RecordID;CreatedDocType@6085578 : Integer;CreatedDocSubtype@6085581 : Integer;CreatedDocID@6085582 : Code[20];CreatedDocRefNo@6085583 : Integer);
    VAR
      Document@6085576 : Record 6085590;
      Document2@6085575 : TEMPORARY Record 6085590;
      DocPage@1160040000 : Record 6085591;
      Value@6085577 : Record 6085593;
      DocCat@6085580 : Record 6085575;
      RecIDMgt@161024012 : Codeunit 6085604;
      RecRef@161024013 : RecordRef;
      RecIDTreeID@6085573 : Integer;
      EntryNo@6085579 : Integer;
    BEGIN
      //**4PS.sn
      IF SupplyingCompany <> '' THEN BEGIN
        Document.CHANGECOMPANY(SupplyingCompany);
        Document2.CHANGECOMPANY(SupplyingCompany);
        DocPage.CHANGECOMPANY(SupplyingCompany);
        Value.CHANGECOMPANY(SupplyingCompany);
        DocCat.CHANGECOMPANY(SupplyingCompany);
      END;
      //**4PS.en
      TempDoc.RESET;
      TempDoc.DELETEALL;

      IF FORMAT(RecID) <> '' THEN BEGIN
        //**4PS.sn
        IF SupplyingCompany <> '' THEN
          ERROR(Text11012000, Document.FIELDCAPTION(Company), SupplyingCompany);
        //**4PS.en
        RecRef := RecID.GETRECORD;
        RecIDTreeID := RecIDMgt.GetRecIDTreeID(RecRef,FALSE);
        IF RecIDTreeID = 0 THEN BEGIN
          IF NOT TempDoc.GET(0) THEN BEGIN
            TempDoc.INIT;
            TempDoc."Entry No." := 0;
            TempDoc.INSERT;
          END;
          EXIT;
        END;
      END;

      IF RecIDTreeID <> 0 THEN BEGIN
        Document.SETCURRENTKEY("Source Record ID Tree ID");
        Document.SETRANGE("Source Record ID Tree ID",RecIDTreeID);
      END ELSE BEGIN
        Document.SETCURRENTKEY("Created Doc. Type","Created Doc. Subtype","Created Doc. ID","Created Doc. Ref. No.");
        Document.SETRANGE("Created Doc. Type",CreatedDocType);
        Document.SETRANGE("Created Doc. Subtype",CreatedDocSubtype);
        Document.SETRANGE("Created Doc. ID",CreatedDocID);
        Document.SETRANGE("Created Doc. Ref. No.",CreatedDocRefNo);
      END;

      IF Document.FINDSET THEN
        REPEAT
          Document2 := Document;
          Document2.INSERT;
        UNTIL Document.NEXT = 0;

      IF RecIDTreeID <> 0 THEN BEGIN
        Value.SETCURRENTKEY("Value (Record ID Tree ID)");
        Value.SETRANGE("Value (Record ID Tree ID)",RecIDTreeID);
        IF Value.FINDSET THEN
          REPEAT
            IF NOT Document2.GET(Value."Document No.") THEN BEGIN
              Document.GET(Value."Document No.");
              Document2 := Document;
              Document2.INSERT;
            END;
          UNTIL Value.NEXT = 0;
      END;

      TempDoc.DELETEALL;
      Document2.SETCURRENTKEY("Document Category Code");
      IF Document2.FINDSET THEN
        REPEAT
          IF RecIDTreeID <> 0 THEN BEGIN
            DocCat.GET(Document2."Document Category Code");
            EntryNo := EntryNo + 1;
            TempDoc.INIT;
            TempDoc."Entry No." := EntryNo;
            TempDoc."Document Category Code" := Document2."Document Category Code";
            TempDoc.Description := DocCat.Description;
            TempDoc.Bold := TRUE;
            TempDoc."Is Group" := TRUE;
            TempDoc.INSERT;
          END;

          Document2.SETRANGE("Document Category Code",Document2."Document Category Code");
          Document2.ASCENDING(FALSE);
          Document2.FINDFIRST;
          REPEAT
            EntryNo := EntryNo + 1;

            TempDoc.INIT;
            TempDoc."Entry No." := EntryNo;
            TempDoc."No." := Document2."No.";
            TempDoc."Document Category Code" := Document2."Document Category Code";
            IF Document2.Description <> '' THEN
              TempDoc.Description := Document2.Description
            ELSE BEGIN
              CASE Document2.Status OF
                Document2.Status::Open:
                  TempDoc.Description := STRSUBSTNO(Text002,TempDoc."No.");
                Document2.Status::Rejected:
                  TempDoc.Description := STRSUBSTNO(Text003,TempDoc."No.");
                ELSE
                  IF DocPage.GET(TempDoc."No.",1) THEN
                    TempDoc.Description := COPYSTR(DocPage."Original Filename",1,MAXSTRLEN(TempDoc.Description))
                  ELSE
                    TempDoc.Description := STRSUBSTNO(Text001,TempDoc."No.");
                END;
            END;

            TempDoc.Indentation := 1;

            IF Document2."File Type" = Document2."File Type"::OCR THEN
              TempDoc."File Type" := 'pdf'
            ELSE
              TempDoc."File Type" := Document2."File Extension";
            TempDoc."User ID" := Document2."Imported by";
            TempDoc."Date/Time" := Document2."Imported Date-Time";
            TempDoc."Allow Modify" := Document2."File Type" = Document2."File Type"::Miscellaneous;
            //**4PS CALL C017609 sn
            IF Document2."Document Category Code" = 'BONNEN' THEN TempDoc."Allow Modify" := TRUE;
            //**4PS CALL C017609 en
            TempDoc.INSERT;
          UNTIL Document2.NEXT = 0;

          Document2.ASCENDING(TRUE);
          Document2.FINDLAST;
          Document2.SETRANGE("Document Category Code");
        UNTIL Document2.NEXT = 0;

      TempDoc.SETRANGE("Is Group",TRUE);
      IF TempDoc.ISEMPTY THEN BEGIN
        TempDoc.SETRANGE("Is Group");
        TempDoc.MODIFYALL(Indentation,0);
      END ELSE
        TempDoc.SETRANGE("Is Group");

      IF NOT TempDoc.FINDFIRST THEN BEGIN
        TempDoc.INIT;
        TempDoc."Entry No." := 0;
        TempDoc.INSERT;
      END;
    END;

    PROCEDURE DeleteDocument@6085573(TempDoc@6085573 : Record 6085756) : Boolean;
    VAR
      Document@6085574 : Record 6085590;
    BEGIN
      IF TempDoc."No." = '' THEN
        EXIT(FALSE);

      //**4PS.sn
      IF SupplyingCompany <> '' THEN
        ERROR(Text11012000, Document.FIELDCAPTION(Company), SupplyingCompany);

      Document.GET(TempDoc."No.");
      IF Document."Document Category Code" <> '' THEN BEGIN // Loskoppelen bonnenstroom i.p.v. verwijderen.
        Document."Created Doc. Type" := 0;
        Document."Created Doc. Subtype" := 0;
        Document."Created Doc. ID" := '';
        Document."Created Doc. Ref. No." := 0;

        Document.Status := Document.Status::Open;
        Document.MODIFY;
        EXIT(TRUE);
      END;
      //**4PS.en

      IF NOT TempDoc."Allow Modify" THEN
        EXIT(FALSE);

      Document.GET(TempDoc."No.");
      Document.TESTFIELD("File Type",Document."File Type"::Miscellaneous);
      Document.DELETE(TRUE);

      EXIT(TRUE);
    END;

    PROCEDURE ModifyDocument@161024012(TempDoc@6085573 : Record 6085756) : Boolean;
    VAR
      Document@6085574 : Record 6085590;
    BEGIN
      IF TempDoc."No." = '' THEN
        EXIT(FALSE);

      IF NOT TempDoc."Allow Modify" THEN
        EXIT(FALSE);

      //**4PS.sn
      IF SupplyingCompany <> '' THEN
        ERROR(Text11012000, Document.FIELDCAPTION(Company), SupplyingCompany);
      //**4PS.en

      Document.GET(TempDoc."No.");
      //**4PS CALL C017609 sn
      IF Document."Document Category Code" <> 'BONNEN' THEN
      //**4PS CALL C017609 en
      Document.TESTFIELD("File Type",Document."File Type"::Miscellaneous);
      Document.Description := TempDoc.Description;
      Document.MODIFY(TRUE);

      EXIT(TRUE);
    END;

    PROCEDURE ShowDocument@161024013(TempDoc@6085573 : Record 6085756) : Boolean;
    VAR
      Document@6085574 : Record 6085590;
      FileSystem@1160040001 : Codeunit 6085584;
    BEGIN
      IF TempDoc."No." = '' THEN
        EXIT(FALSE);

      //**4PS.sn
      IF SupplyingCompany <> '' THEN
        Document.CHANGECOMPANY(SupplyingCompany);
      //**4PS.en
      Document.GET(TempDoc."No.");
      IF Document."File Type" = Document."File Type"::OCR THEN
        FileSystem.LocalShell(Document.GetPDFileName)
      ELSE
        FileSystem.LocalShell(Document.GetMiscFileName);
    END;

    PROCEDURE ShowDocumentCard@161024014(TempDoc@6085573 : Record 6085756) : Boolean;
    VAR
      Document@6085574 : Record 6085590;
      FileSystem@1160040000 : Codeunit 6085584;
    BEGIN
      IF TempDoc."No." = '' THEN
        EXIT(FALSE);

      //**4PS.sn
      IF SupplyingCompany <> '' THEN
        Document.CHANGECOMPANY(SupplyingCompany);
      //**4PS.en
      Document.GET(TempDoc."No.");
      IF Document."File Type" = Document."File Type"::OCR THEN
        PAGE.RUNMODAL(PAGE::"Document Card",Document)
      ELSE
        FileSystem.LocalShell(Document.GetMiscFileName);
    END;

    PROCEDURE CreateDocument@6085575(VAR Document@6085573 : Record 6085590;RecID@6085582 : RecordID;CreatedDocType@6085578 : Integer;CreatedDocSubtype@6085579 : Integer;CreatedDocID@6085580 : Code[20];CreatedDocRefNo@6085581 : Integer;DocCat@6085574 : Code[20];NewDescription@6085575 : Text[1024];NewExtension@6085576 : Text[20]) : Code[20];
    VAR
      RecIDMgt@161024012 : Codeunit 6085604;
      DocCapMgt@161024014 : Codeunit 6085603;
      RecRef@161024013 : RecordRef;
    BEGIN
      //**4PS.sn
      IF SupplyingCompany <> '' THEN
        ERROR(Text11012000, Document.FIELDCAPTION(Company), SupplyingCompany);
      //**4PS.en
      NewDescription := DELCHR(NewDescription,'<',' ');
      Document.INSERT(TRUE);
      IF DocCat <> '' THEN BEGIN
        RecRef.GET(RecID);
        DocCapMgt.IsLogActive(RecRef.NUMBER,TRUE);

        Document.VALIDATE("Document Category Code",DocCat);
        Document.VALIDATE("Source Record ID Tree ID",RecIDMgt.GetRecIDTreeID(RecRef,TRUE));
      END;
      Document."Created Doc. Type" := CreatedDocType;
      Document."Created Doc. Subtype" := CreatedDocSubtype;
      Document."Created Doc. ID" := CreatedDocID;
      Document."Created Doc. Ref. No." := CreatedDocRefNo;
      Document.Status := Document.Status::Registered;
      Document.Description := COPYSTR(NewDescription,1,MAXSTRLEN(Document.Description));
      Document."File Type" := Document."File Type"::Miscellaneous;
      Document."File Extension" := DELCHR(NewExtension,'<','.');
      Document."Allow Delete" := TRUE;
      Document.MODIFY(TRUE);
    END;

    PROCEDURE LinkDocument@1000000002(DocType@1000000003 : Integer;DocSubtype@1000000002 : Integer;DocID@1000000001 : Code[20];DocRefNo@1000000000 : Integer);
    VAR
      Document@1000000004 : Record 6085590;
      DocToLink@1000000006 : Record 6085590;
      DocumentCategory@1100528200 : Record 6085575;
      PurchHeader@1000000009 : Record 38;
      DocListToLink@1000000005 : Page 11126519;
      FileSystMgt@1000000007 : Codeunit 6085584;
      OldFileName@1000000008 : Text[250];
      SourceID@1000000010 : Code[20];
      CaptureMgnt@1100409002 : Codeunit 6085576;
      Field@1100409001 : Record 6085580;
      Template@1100409000 : Record 6085579;
      OldFileName2@1100525000 : Text[250];
    BEGIN
      //**4PS
      IF SupplyingCompany <> '' THEN
        ERROR(Text11012000, Document.FIELDCAPTION(Company), SupplyingCompany);
      Document.SETRANGE("Created Doc. Type", DocType);
      Document.SETRANGE("Created Doc. Subtype", DocSubtype);
      Document.SETRANGE("Created Doc. ID", DocID);
      Document.SETRANGE("Created Doc. Ref. No.", DocRefNo);
      Document.SETRANGE("File Type", Document."File Type"::OCR);
      IF Document.FINDFIRST THEN;

      CASE DocType OF
        DATABASE::"Purchase Header" :
          BEGIN
            PurchHeader.SETRANGE("Document Type", DocSubtype);
            PurchHeader.SETRANGE("No.", DocID);
            IF PurchHeader.FINDFIRST THEN BEGIN
              SourceID := PurchHeader."Buy-from Vendor No.";
            END;
          END;
      END;

      DocListToLink.LOOKUPMODE(TRUE);
      IF DocumentCategory.GET('BONNEN') THEN
        DocListToLink.SetVariables('BONNEN', SourceID, 0, PurchHeader."Job No.")
      ELSE
        DocListToLink.SetVariables(Document."Document Category Code", SourceID, 0, PurchHeader."Job No.");

      IF DocListToLink.RUNMODAL = ACTION::LookupOK THEN BEGIN

        //DocListToLink.GETRECORD(DocToLink);
        DocListToLink.GetFilteredRec(DocToLink);
        DocToLink.SETCURRENTKEY("No.");
        IF DocToLink.FINDSET(TRUE,FALSE) THEN
          REPEAT
            DocToLink.TESTFIELD(Status,DocToLink.Status::Open);
            DocToLink."Created Doc. Type" := DocType;
            DocToLink."Created Doc. Subtype" := DocSubtype;
            DocToLink."Created Doc. ID" := DocID;
            DocToLink."Created Doc. Ref. No." := DocRefNo;
            OldFileName := DocToLink.GetPDFileName;

            //CALL C017609
            OldFileName2 := DocToLink.Description;
            IF Template.GET(DocToLink."Template No.") THEN;
            DocToLink.Description :=
              COPYSTR(CaptureMgnt.GetText(DocToLink,Field.Type::Header,'DESCRIPTION',0),1,
              MAXSTRLEN(DocToLink.Description));

            IF DocToLink.Description = '' THEN
              DocToLink.Description :=
                COPYSTR(CaptureMgnt.GetText(DocToLink,Field.Type::Header,'OMSCHRIJVING',0),1,
                MAXSTRLEN(DocToLink.Description));

            IF DocToLink.Description = '' THEN
              DocToLink.Description := OldFileName2;
            IF DocToLink.Description = '' THEN
              DocToLink.Description := Template.Description;
            //CALL C017609


            IF DocToLink.Description = '' THEN
              DocToLink.Description := OldFileName;
            DocToLink."File Type" := DocToLink."File Type"::OCR;
            DocToLink."File Extension" := 'pdf';
            DocToLink."Source Record ID Tree ID" := Document."Source Record ID Tree ID";
            DocToLink.Status := DocToLink.Status::Registered;
            DocToLink.MODIFY(TRUE);
          UNTIL DocToLink.NEXT = 0;
      END;
    END;

    PROCEDURE SetSupplyingCompany@1100528400(SupplyingCompany2@1100528400 : Text[30]);
    BEGIN
      //**4PS
      SupplyingCompany := SupplyingCompany2;
    END;

    BEGIN
    END.
  }
}

