OBJECT Codeunit 6085611 Continia Config. Mgt. - DC
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW13.70.00.4.04;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      TempDCSetup@1160040005 : TEMPORARY Record 6085573;
      TempOCRLang@1160040006 : TEMPORARY Record 6085578;
      TempCOSetup@1160040033 : TEMPORARY Record 6086500;
      TempDocCat@1160040004 : TEMPORARY Record 6085575;
      TempDocCatLang@1160040007 : TEMPORARY Record 6085576;
      TempDocCatDocSep@1160040008 : TEMPORARY Record 6085577;
      TempTemplate@1160040003 : TEMPORARY Record 6085579;
      TempField@1160040009 : TEMPORARY Record 6085580;
      TempFieldCap@1160040010 : TEMPORARY Record 6085581;
      TempFieldTransl@1160040011 : TEMPORARY Record 6085582;
      TempFieldRule@1160040012 : TEMPORARY Record 6085583;
      TempIdentField@1160040013 : TEMPORARY Record 6085759;
      TempSourceExcl@1160040014 : TEMPORARY Record 6085598;
      TempTableFilterField@1160040015 : TEMPORARY Record 6085762;
      COConfigMgt@1160040001 : Codeunit 6086502;
      RecIDMgt@1160040000 : Codeunit 6085604;
      DCMgt@1160040021 : Codeunit 6085603;
      Direction@1160040018 : 'Import,Export';
      Filename@1160040017 : Text[250];
      Text001@1160040025 : TextConst 'ENU=DC - Document Nos.';
      Text002@1160040024 : TextConst 'ENU=DC - Template Nos.';
      Text003@1160040023 : TextConst 'ENU=D000001';
      Text004@1160040022 : TextConst 'ENU=T000001';
      Text005@1160040002 : TextConst 'ENU=No Approval Templates exists. Please create them manually.';
      Text006@1160040020 : TextConst 'ENU=DC - Purch. Allocation';
      Text007@1160040019 : TextConst 'ENU=PA000001';
      Text008@1160040016 : TextConst 'ENU=Purchase Allocation';
      Text010@1160040026 : TextConst 'ENU=Importing Setup...\@1@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@';
      Text011@1160040027 : TextConst 'ENU=Committing setup...\@1@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@';
      Text012@1160040028 : TextConst 'ENU=Processing Setup...\@1@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@';
      Text013@1160040029 : TextConst 'ENU=Exporting Setup...\@1@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@';
      Window@1160040030 : Dialog;
      TotalCount@1160040031 : Integer;
      DialogCount@1160040034 : Integer;
      Step@1160040032 : 'From File,From Temp,To Temp,To File';

    PROCEDURE ShowTree@1160040002(VAR TempConfigLine@1160040002 : TEMPORARY Record 6085612);
    BEGIN
      SetDCFields;

      IF Direction = Direction::Import THEN
        ImportFile(TempConfigLine)
      ELSE
        ExportTemp(TempConfigLine);
    END;

    PROCEDURE PerfomAction@1160040004(VAR TempConfigLine@1160040000 : TEMPORARY Record 6085612);
    BEGIN
      IF Direction = Direction::Import THEN
        ImportIncluded(TempConfigLine)
      ELSE
        ExportIncluded(TempConfigLine);
    END;

    PROCEDURE ImportFile@1160040000(VAR TempConfigLine@1160040000 : TEMPORARY Record 6085612);
    VAR
      RecRef@1160040001 : RecordRef;
      EntryNo@1160040003 : Integer;
    BEGIN
      OpenDialog(Step::"From File",13);

      ClearTemp;

      COConfigMgt.LoadXML(Filename);

      RecRef.GETTABLE(TempDCSetup);
      ImportTemp(DATABASE::"Document Capture Setup",RecRef);
      RecRef.GETTABLE(TempOCRLang);
      ImportTemp(DATABASE::"OCR Language",RecRef);

      RecRef.GETTABLE(TempCOSetup);
      ImportTemp(DATABASE::"Continia Online Setup",RecRef);

      RecRef.GETTABLE(TempDocCat);
      ImportTemp(DATABASE::"DC Document Category",RecRef);
      RecRef.GETTABLE(TempDocCatLang);
      ImportTemp(DATABASE::"Document Category Language",RecRef);
      RecRef.GETTABLE(TempDocCatDocSep);
      ImportTemp(DATABASE::"Document Category Doc. Sep.",RecRef);

      RecRef.GETTABLE(TempTemplate);
      ImportTemp(DATABASE::Template,RecRef);
      RecRef.GETTABLE(TempField);
      ImportTemp(DATABASE::"Template Field",RecRef);
      RecRef.GETTABLE(TempFieldCap);
      ImportTemp(DATABASE::"Template Field Caption",RecRef);
      RecRef.GETTABLE(TempFieldTransl);
      ImportTemp(DATABASE::"Template Field Transl.",RecRef);
      RecRef.GETTABLE(TempFieldRule);
      ImportTemp(DATABASE::"Template Field Rule",RecRef);

      RecRef.GETTABLE(TempIdentField);
      ImportTemp(DATABASE::"Document Category Ident. Field",RecRef);
      RecRef.GETTABLE(TempSourceExcl);
      ImportTemp(DATABASE::"Document Category Source Excl.",RecRef);
      RecRef.GETTABLE(TempTableFilterField);
      ImportTemp(DATABASE::"Table Filter Field",RecRef);

      EntryNo := CreateTree(TempConfigLine,TempDCSetup,TempCOSetup,TempDocCat,TempTemplate);
      CreateRemaining(TempConfigLine,TempTemplate,EntryNo);

      COConfigMgt.ClearXML;

      CloseDialog();
    END;

    PROCEDURE ExportTemp@1160040018(VAR TempConfigLine@1160040000 : TEMPORARY Record 6085612);
    VAR
      DCSetup@1160040001 : Record 6085573;
      DocCat@1160040002 : Record 6085575;
      Template@1160040003 : Record 6085579;
      COSetup@1160040004 : Record 6086500;
    BEGIN
      OpenDialog(Step::"To Temp",1);
      CreateTree(TempConfigLine,DCSetup,COSetup,DocCat,Template);
      CloseDialog;
    END;

    PROCEDURE ImportTemp@1160040020(TableNo@1160040004 : Integer;RecRef@1160040003 : RecordRef);
    VAR
      XmlLib@1160040005 : Codeunit 6085573;
      Value@1160040000 : Text[250];
      Count@1160040002 : Integer;
      i@1160040001 : Integer;
    BEGIN
      UpdateDialog;

      RecRef.DELETEALL;

      Count := COConfigMgt.GetCount(TableNo);
      FOR i := 0 TO Count - 1 DO BEGIN
        CASE RecRef.NUMBER OF
          DATABASE::Template:
            BEGIN
              COConfigMgt.ImportRecord(TableNo,i,RecRef);
              TempTemplate.GET(COConfigMgt.GetAttribValue(RecRef.NUMBER,i,TempTemplate.FIELDNO("No.")));

              Value := COConfigMgt.GetAttribValue(RecRef.NUMBER,i,TempTemplate.FIELDNO("Source Record ID Tree ID"));
              TempTemplate."Source Record ID Tree ID" := GetRecIDTreeID(TempTemplate."Category Code",Value);
              TempTemplate.MODIFY;
            END;
          DATABASE::"Template Field":
            BEGIN
              COConfigMgt.ImportRecord(TableNo,i,RecRef);
              TempField.GET(
                COConfigMgt.GetAttribValue(RecRef.NUMBER,i,TempField.FIELDNO("Template No.")),
                XmlLib.Text2Int(COConfigMgt.GetAttribValue(RecRef.NUMBER,i,TempField.FIELDNO(Type))),
                COConfigMgt.GetAttribValue(RecRef.NUMBER,i,TempField.FIELDNO(Code)));

              Value := COConfigMgt.GetAttribValue(RecRef.NUMBER,i,TempField.FIELDNO("Fixed Value (Rec. ID Tree ID)"));
              TempField."Fixed Value (Rec. ID Tree ID)" :=
                RecIDMgt.SetKeyValueWithGUID(TempField."Source Table No.",TempField."Source Field No.",
                0,TempField."Source Table Filter GUID",Value);
              TempField.MODIFY;
            END;
          DATABASE::"Document Category Source Excl.":
            BEGIN
              TempSourceExcl.INIT;
              TempSourceExcl."Document Category Code" :=
                COConfigMgt.GetAttribValue(RecRef.NUMBER,i,TempSourceExcl.FIELDNO("Document Category Code"));
              TempSourceExcl."Source Record ID Tree ID" := GetRecIDTreeID(TempSourceExcl."Document Category Code",
                COConfigMgt.GetAttribValue(RecRef.NUMBER,i,TempSourceExcl.FIELDNO("Source Record ID Tree ID")));
              TempSourceExcl.INSERT;
            END;
          ELSE
            COConfigMgt.ImportRecord(TableNo,i,RecRef);
        END;
      END;
    END;

    PROCEDURE CreateTree@1160040001(VAR TempConfigLine@1160040000 : TEMPORARY Record 6085612;VAR DCSetup@1160040009 : Record 6085573;VAR COSetup@1160040001 : Record 6086500;VAR DocCat@1160040008 : Record 6085575;VAR Template@1160040007 : Record 6085579) LastEntryNo : Integer;
    VAR
      DocCatEntryNo@1160040006 : Integer;
      SourceName@1160040005 : Text[50];
      RecRef@1160040002 : RecordRef;
    BEGIN
      LastEntryNo := 1;
      TempConfigLine.RESET;
      TempConfigLine.DELETEALL;

      IF DCSetup.GET THEN BEGIN
        TempConfigLine.INIT;
        TempConfigLine."Entry No." := LastEntryNo;
        TempConfigLine."Table Name" := DCSetup.TABLECAPTION;
        TempConfigLine."Record Name" := DCSetup."Company Code";
        TempConfigLine.Status := TempConfigLine.Status::"No Children";
        TempConfigLine.Include := TRUE;
        TempConfigLine."Table No" := DATABASE::"Document Capture Setup";
        RecRef.GETTABLE(DCSetup);
        TempConfigLine."Record ID" := RecRef.RECORDID;
        TempConfigLine.INSERT;
      END;

      IF COSetup.GET THEN BEGIN
        LastEntryNo += 1;
        TempConfigLine.INIT;
        TempConfigLine."Entry No." := LastEntryNo;
        TempConfigLine."Table Name" := COSetup.TABLECAPTION;
        TempConfigLine."Record Name" := COSetup."Primary Key";
        TempConfigLine.Status := TempConfigLine.Status::"No Children";
        TempConfigLine.Include := TRUE;
        TempConfigLine."Table No" := DATABASE::"Continia Online Setup";
        RecRef.GETTABLE(COSetup);
        TempConfigLine."Record ID" := RecRef.RECORDID;
        TempConfigLine.INSERT;
      END;

      IF DocCat.FINDSET THEN
        REPEAT
          LastEntryNo += 1;
          TempConfigLine.INIT;
          TempConfigLine."Entry No." := LastEntryNo;
          TempConfigLine."Table Name" := DocCat.TABLECAPTION;
          TempConfigLine."Record Name" := DocCat.Code;
          TempConfigLine.Include := TRUE;
          TempConfigLine."Table No" := DATABASE::"DC Document Category";
          TempConfigLine.Code := DocCat.Code;
          RecRef.GETTABLE(DocCat);
          TempConfigLine."Record ID" := RecRef.RECORDID;

          Template.SETRANGE("Category Code",DocCat.Code);
          IF Template.FINDSET THEN
            TempConfigLine.Status := TempConfigLine.Status::"Has Children"
          ELSE
            TempConfigLine.Status := TempConfigLine.Status::"No Children";

          TempConfigLine.INSERT;

          IF TempConfigLine.Status = TempConfigLine.Status::"Has Children" THEN BEGIN
            DocCatEntryNo := LastEntryNo;

            REPEAT
              LastEntryNo += 1;
              TempConfigLine.INIT;
              TempConfigLine."Entry No." := LastEntryNo;
              TempConfigLine."Table Name" := Template.TABLECAPTION;
              TempConfigLine.Indentation := 1;
              TempConfigLine.Include := TRUE;
              TempConfigLine."Source Entry No." := DocCatEntryNo;
              TempConfigLine.Level := 1;
              SourceName :=  RecIDMgt.GetFieldValue(Template."Source Record ID Tree ID",DocCat."Source Field No. (Name)");
              IF SourceName = '' THEN
                IF Direction = Direction::Import THEN
                  SourceName := Template."No."
                ELSE
                  SourceName := Template.Description;
              TempConfigLine."Record Name" := SourceName;
              TempConfigLine."Table No" := DATABASE::Template;
              TempConfigLine.Code := Template."No.";
              RecRef.GETTABLE(Template);
              TempConfigLine."Record ID" := RecRef.RECORDID;
              TempConfigLine.INSERT;
            UNTIL Template.NEXT = 0;
          END;
        UNTIL DocCat.NEXT = 0;

      IF Direction = Direction::Import THEN
        ExcludeExistingRecords(TempConfigLine);
    END;

    PROCEDURE CreateRemaining@1160040003(VAR TempConfigLine@1160040003 : TEMPORARY Record 6085612;VAR Template@1160040000 : Record 6085579;EntryNo@1160040001 : Integer);
    VAR
      SourceName@1160040002 : Text[50];
      RecRef@1160040004 : RecordRef;
    BEGIN
      Template.RESET;
      IF Template.FINDSET THEN
        REPEAT
          TempConfigLine.RESET;
          TempConfigLine.SETRANGE("Table No",DATABASE::Template);
          TempConfigLine.SETRANGE(Code,Template."No.");
          IF TempConfigLine.ISEMPTY THEN BEGIN
            EntryNo += 1;
            TempConfigLine.INIT;
            TempConfigLine."Entry No." := EntryNo;
            TempConfigLine."Table Name" := Template.TABLECAPTION;
            TempConfigLine.Include := TRUE;
            SourceName := Template.GetSourceName;
            IF SourceName = '' THEN
              SourceName := Template.Description;
            SourceName := COPYSTR(STRSUBSTNO('%1 > %2',Template."Category Code",SourceName),1,MAXSTRLEN(SourceName));
            TempConfigLine."Record Name" := SourceName;
            TempConfigLine."Table No" := DATABASE::Template;
            TempConfigLine.Code := Template."No.";
            RecRef.GETTABLE(Template);
            TempConfigLine."Record ID" := RecRef.RECORDID;
            TempConfigLine.INSERT;
          END;
        UNTIL Template.NEXT = 0;

      IF Direction = Direction::Import THEN
        ExcludeExistingRecords(TempConfigLine);
    END;

    PROCEDURE ImportIncluded@1160040005(VAR TempConfigLine@1160040000 : TEMPORARY Record 6085612);
    BEGIN
      TempConfigLine.RESET;
      TempConfigLine.SETRANGE(Include,TRUE);
      IF TempConfigLine.FINDSET THEN BEGIN
        OpenDialog(Step::"From Temp",TempConfigLine.COUNT);

        REPEAT
          UpdateDialog;

          CASE TempConfigLine."Table No" OF
            DATABASE::"Document Capture Setup":
              BEGIN
                ImportTable(DATABASE::"Document Capture Setup",0,'',0,'',0,'');
                ImportTable(DATABASE::"OCR Language",0,'',0,'',0,'');
                CreateDefaultDCSetup;
              END;
            DATABASE::"Continia Online Setup":
              ImportTable(DATABASE::"Continia Online Setup",0,'',0,'',0,'');
            DATABASE::"DC Document Category":
              BEGIN
                TempDocCat.GET(TempConfigLine.Code);
                ImportTable(DATABASE::"DC Document Category",TempDocCat.FIELDNO(Code),TempDocCat.Code,0,'',0,'');
                ImportTable(DATABASE::"Document Category Language",
                  TempDocCatLang.FIELDNO("Document Category Code"),TempDocCat.Code,0,'',0,'');
                ImportTable(DATABASE::"Document Category Doc. Sep.",TempDocCatDocSep.FIELDNO("Document Category Code"),
                  TempDocCat.Code,0,'',0,'');
                ImportTable(DATABASE::"Document Category Ident. Field",TempIdentField.FIELDNO("Document Category Code"),
                  TempDocCat.Code,0,'',0,'');
                ImportTable(DATABASE::"Document Category Source Excl.",TempSourceExcl.FIELDNO("Document Category Code"),
                  TempDocCat.Code,0,'',0,'');
                ImportTable(DATABASE::"Table Filter Field",TempTableFilterField.FIELDNO("Table Filter GUID"),
                  FORMAT(TempDocCat."Document Category GUID"),0,'',0,'');

                DCMgt.IsLogActive2(TempDocCat."Source Table No.",TRUE);
                CreateDefaultDocCat(TempDocCat.Code);
              END;
            DATABASE::Template:
              BEGIN
                TempTemplate.GET(TempConfigLine.Code);
                ImportTable(DATABASE::Template,TempTemplate.FIELDNO("No."),TempTemplate."No.",0,'',0,'');

                TempField.SETRANGE("Template No.",TempTemplate."No.");
                ImportTable(DATABASE::"Template Field",TempField.FIELDNO("Template No."),TempTemplate."No.",0,'',0,'');
                IF TempField.FINDSET THEN
                  REPEAT
                    ImportTable(DATABASE::"Template Field Caption",TempFieldCap.FIELDNO("Template No."),TempTemplate."No.",
                      TempFieldCap.FIELDNO(Code),TempField.Code,TempFieldCap.FIELDNO(Type),FORMAT(TempField.Type));
                    ImportTable(DATABASE::"Template Field Transl.",TempFieldTransl.FIELDNO("Template No."),TempTemplate."No.",
                      TempFieldTransl.FIELDNO(Code),TempField.Code,TempFieldTransl.FIELDNO(Type),FORMAT(TempField.Type));
                    ImportTable(DATABASE::"Template Field Rule",TempFieldRule.FIELDNO("Template No."),TempTemplate."No.",
                      TempFieldRule.FIELDNO(Code),TempField.Code,TempFieldRule.FIELDNO(Type),FORMAT(TempField.Type));
                    ImportTable(DATABASE::"Table Filter Field",TempTableFilterField.FIELDNO("Table Filter GUID"),
                      FORMAT(TempField."Source Table Filter GUID"),0,'',0,'');

                    DCMgt.IsLogActive2(TempField."Source Table No.",TRUE);
                  UNTIL TempField.NEXT = 0;
              END;
          END;
        UNTIL TempConfigLine.NEXT = 0;

        CloseDialog;
      END;

      TempConfigLine.SETRANGE(Include,FALSE);
      TempConfigLine.DELETEALL;
      TempConfigLine.RESET;
    END;

    PROCEDURE ImportTable@1160040013(TableNo@1160040000 : Integer;Field1@1160040005 : Integer;Filter1@1160040004 : Text[100];Field2@1160040003 : Integer;Filter2@1160040002 : Text[100];Field3@1160040009 : Integer;Filter3@1160040008 : Text[100]);
    VAR
      DCSetup@1160040007 : Record 6085573;
      FromRecRef@1160040001 : RecordRef;
      ToRecRef@1160040006 : RecordRef;
    BEGIN
      CASE TableNo OF
        DATABASE::"Document Capture Setup":
          BEGIN
            FromRecRef.GETTABLE(TempDCSetup);

            IF DCSetup.GET AND (DCSetup."Document Nos." = '') THEN
              DCSetup.DELETE;
          END;
        DATABASE::"OCR Language":
          FromRecRef.GETTABLE(TempOCRLang);
        DATABASE::"Continia Online Setup":
          FromRecRef.GETTABLE(TempCOSetup);
        DATABASE::"DC Document Category":
          FromRecRef.GETTABLE(TempDocCat);
        DATABASE::"Document Category Language":
          FromRecRef.GETTABLE(TempDocCatLang);
        DATABASE::"Document Category Doc. Sep.":
          FromRecRef.GETTABLE(TempDocCatDocSep);
        DATABASE::Template:
          FromRecRef.GETTABLE(TempTemplate);
        DATABASE::"Template Field":
          FromRecRef.GETTABLE(TempField);
        DATABASE::"Template Field Caption":
          FromRecRef.GETTABLE(TempFieldCap);
        DATABASE::"Template Field Transl.":
          FromRecRef.GETTABLE(TempFieldTransl);
        DATABASE::"Template Field Rule":
          FromRecRef.GETTABLE(TempFieldRule);
        DATABASE::"Document Category Ident. Field":
          FromRecRef.GETTABLE(TempIdentField);
        DATABASE::"Document Category Source Excl.":
          FromRecRef.GETTABLE(TempSourceExcl);
        DATABASE::"Table Filter Field":
          FromRecRef.GETTABLE(TempTableFilterField);
      END;

      IF Field1 > 0 THEN
        FilterRecRef(FromRecRef,Field1,Filter1);

      IF Field2 > 0 THEN
        FilterRecRef(FromRecRef,Field2,Filter2);

      IF Field3 > 0 THEN
        FilterRecRef(FromRecRef,Field3,Filter3);

      IF FromRecRef.FINDSET THEN BEGIN
        ToRecRef.OPEN(TableNo);

        REPEAT
          ToRecRef.INIT;
          CopyRecRef(FromRecRef,ToRecRef);
          IF NOT ToRecRef.INSERT(TRUE) THEN
            ToRecRef.MODIFY(TRUE);
        UNTIL FromRecRef.NEXT = 0;
      END;
    END;

    PROCEDURE ExportIncluded@1160040006(VAR TempConfigLine@1160040002 : TEMPORARY Record 6085612);
    VAR
      DocCat@1160040000 : Record 6085575;
      Template@1160040008 : Record 6085579;
      Field@1160040009 : Record 6085580;
    BEGIN
      TempConfigLine.RESET;
      TempConfigLine.SETRANGE(Include,TRUE);
      IF TempConfigLine.FINDSET THEN BEGIN
        OpenDialog(Step::"To File",TempConfigLine.COUNT);

        COConfigMgt.CreateXML;

        REPEAT
          UpdateDialog;

          CASE TempConfigLine."Table No" OF
            DATABASE::"Document Capture Setup":
              BEGIN
                ExportTable(DATABASE::"Document Capture Setup",0,'',0,'',0,'');
                ExportTable(DATABASE::"OCR Language",0,'',0,'',0,'');
              END;
            DATABASE::"Continia Online Setup":
              ExportTable(DATABASE::"Continia Online Setup",0,'',0,'',0,'');
            DATABASE::"DC Document Category":
              BEGIN
                DocCat.GET(TempConfigLine.Code);
                ExportTable(DATABASE::"DC Document Category",TempDocCat.FIELDNO(Code),DocCat.Code,0,'',0,'');
                ExportTable(DATABASE::"Document Category Language",
                  TempDocCatLang.FIELDNO("Document Category Code"),DocCat.Code,0,'',0,'');
                ExportTable(DATABASE::"Document Category Doc. Sep.",
                  TempDocCatDocSep.FIELDNO("Document Category Code"),DocCat.Code,0,'',0,'');
                ExportTable(DATABASE::"Document Category Ident. Field",
                  TempIdentField.FIELDNO("Document Category Code"),DocCat.Code,0,'',0,'');
                ExportTable(DATABASE::"Document Category Source Excl.",
                  TempSourceExcl.FIELDNO("Document Category Code"),DocCat.Code,0,'',0,'');
                ExportTable(DATABASE::"Table Filter Field",
                  TempTableFilterField.FIELDNO("Table Filter GUID"),FORMAT(DocCat."Document Category GUID"),0,'',0,'');
              END;
            DATABASE::Template:
              BEGIN
                Template.GET(TempConfigLine.Code);
                ExportTable(DATABASE::Template,TempTemplate.FIELDNO("No."),Template."No.",0,'',0,'');

                Field.SETRANGE("Template No.",Template."No.");
                ExportTable(DATABASE::"Template Field",TempField.FIELDNO("Template No."),Template."No.",0,'',0,'');
                IF Field.FINDSET THEN
                  REPEAT
                    ExportTable(DATABASE::"Template Field Caption",TempFieldCap.FIELDNO("Template No."),Template."No.",
                      TempFieldCap.FIELDNO(Code),Field.Code,TempFieldCap.FIELDNO(Type),FORMAT(Field.Type));
                    ExportTable(DATABASE::"Template Field Transl.",TempFieldTransl.FIELDNO("Template No."),Template."No.",
                      TempFieldTransl.FIELDNO(Code),Field.Code,TempFieldTransl.FIELDNO(Type),FORMAT(Field.Type));
                    ExportTable(DATABASE::"Template Field Rule",TempFieldRule.FIELDNO("Template No."),Template."No.",
                      TempFieldRule.FIELDNO(Code),Field.Code,TempFieldRule.FIELDNO(Type),FORMAT(Field.Type));
                    ExportTable(DATABASE::"Table Filter Field",TempTableFilterField.FIELDNO("Table Filter GUID"),
                      FORMAT(Field."Source Table Filter GUID"),0,'',0,'');
                  UNTIL Field.NEXT = 0;
              END;
          END;
        UNTIL TempConfigLine.NEXT = 0;

        COConfigMgt.SaveXML(Filename);

        CloseDialog;
      END;

      TempConfigLine.SETRANGE(Include,FALSE);
      TempConfigLine.DELETEALL;
      TempConfigLine.RESET;
    END;

    PROCEDURE ExportTable@1160040010(TableNo@1160040000 : Integer;Field1@1160040002 : Integer;Filter1@1160040003 : Text[100];Field2@1160040006 : Integer;Filter2@1160040005 : Text[100];Field3@1160040012 : Integer;Filter3@1160040011 : Text[100]);
    VAR
      DocCat@1160040010 : Record 6085575;
      Template@1160040007 : Record 6085579;
      Field@1160040008 : Record 6085580;
      SourceExcl@1160040009 : Record 6085598;
      RecRef@1160040001 : RecordRef;
      FieldRef@1160040004 : FieldRef;
    BEGIN
      RecRef.OPEN(TableNo);

      IF Field1 > 0 THEN
        FilterRecRef(RecRef,Field1,Filter1);

      IF Field2 > 0 THEN
        FilterRecRef(RecRef,Field2,Filter2);

      IF Field3 > 0 THEN
        FilterRecRef(RecRef,Field3,Filter3);

      IF RecRef.FINDSET THEN
        REPEAT
          CASE TableNo OF
            DATABASE::Template:
              BEGIN
                Template.SETVIEW(RecRef.GETVIEW);
                IF Template.FINDFIRST THEN
                  IF DocCat.GET(Template."Category Code") THEN
                    COConfigMgt.AddReplaceField(TableNo,Template.FIELDNO("Source Record ID Tree ID"),
                      RecIDMgt.GetKeyValue(Template."Source Record ID Tree ID",DocCat."Source Field No."));
              END;
            DATABASE::"Template Field":
              BEGIN
                Field.SETPOSITION(RecRef.GETPOSITION);
                IF Field.FINDFIRST THEN
                  COConfigMgt.AddReplaceField(TableNo,Field.FIELDNO("Fixed Value (Rec. ID Tree ID)"),
                    RecIDMgt.GetKeyValue(Field."Fixed Value (Rec. ID Tree ID)",Field."Source Field No."));
              END;
            DATABASE::"Document Category Source Excl.":
              BEGIN
                SourceExcl.SETPOSITION(RecRef.GETPOSITION);
                IF SourceExcl.FINDFIRST THEN
                  IF DocCat.GET(SourceExcl."Document Category Code") THEN
                    COConfigMgt.AddReplaceField(TableNo,SourceExcl.FIELDNO("Source Record ID Tree ID"),
                      RecIDMgt.GetKeyValue(SourceExcl."Source Record ID Tree ID",DocCat."Source Field No."));
              END;
          END;

          COConfigMgt.ExportRecord(RecRef.NUMBER,RecRef);
        UNTIL RecRef.NEXT = 0;
    END;

    PROCEDURE CopyRecRef@1160040008(VAR FromRecRef@1160040000 : RecordRef;VAR ToRecRef@1160040001 : RecordRef);
    VAR
      Field@1160040002 : Record 2000000041;
      FromFieldRef@1160040003 : FieldRef;
      ToFieldRef@1160040004 : FieldRef;
    BEGIN
      Field.RESET;
      Field.SETRANGE(TableNo,FromRecRef.NUMBER);
      Field.SETRANGE(Enabled,TRUE);
      Field.SETRANGE(Class,Field.Class::Normal);
      Field.SETFILTER(Type,'<>%1',Field.Type::BLOB);
      IF Field.FINDSET THEN
        REPEAT
          FromFieldRef := FromRecRef.FIELD(Field."No.");
          ToFieldRef := ToRecRef.FIELD(Field."No.");
          ToFieldRef.VALUE := FromFieldRef.VALUE;
        UNTIL Field.NEXT = 0;
    END;

    PROCEDURE FilterRecRef@1160040009(VAR RecRef@1160040000 : RecordRef;FieldNo@1160040001 : Integer;FieldFilter@1160040002 : Text[100]);
    VAR
      FieldRef@1160040003 : FieldRef;
    BEGIN
      FieldRef := RecRef.FIELD(FieldNo);
      FieldRef.SETFILTER(FieldFilter);
    END;

    PROCEDURE SetDCFields@1160040007();
    BEGIN
      COConfigMgt.AddExcludeField(DATABASE::"DC Document Category",TempDocCat.FIELDNO("E-mail Connection Endpoint"));
      COConfigMgt.AddExcludeField(DATABASE::"DC Document Category",TempDocCat.FIELDNO("E-mail Sender Filter"));
      COConfigMgt.AddExcludeField(DATABASE::"DC Document Category",TempDocCat.FIELDNO("E-mail Recipient Filter"));
      COConfigMgt.AddExcludeField(DATABASE::"DC Document Category",TempDocCat.FIELDNO("E-mail Subject Filter"));
      COConfigMgt.AddExcludeField(DATABASE::"DC Document Category",TempDocCat.FIELDNO("No. of files for OCR"));
      COConfigMgt.AddExcludeField(DATABASE::"DC Document Category",TempDocCat.FIELDNO("No. of files for Import"));
      COConfigMgt.AddExcludeField(DATABASE::"DC Document Category",TempDocCat.FIELDNO("No. of files with Error"));
      COConfigMgt.AddExcludeField(DATABASE::"Template Field",TempField.FIELDNO("Lookup Table"));
      COConfigMgt.AddExcludeField(DATABASE::"Template Field",TempField.FIELDNO("Lookup Rel. Code"));
      COConfigMgt.AddExcludeField(DATABASE::"Continia Online Setup",TempCOSetup.FIELDNO("Client ID"));
      COConfigMgt.AddExcludeField(DATABASE::"Continia Online Setup",TempCOSetup.FIELDNO("Client Password"));
      COConfigMgt.AddExcludeField(DATABASE::"Continia Online Setup",TempCOSetup.FIELDNO("Company GUID"));

      IF Direction = Direction::Export THEN
        EXIT;

      COConfigMgt.AddExcludeField(DATABASE::Template,TempTemplate.FIELDNO("Source Record ID Tree ID"));
      COConfigMgt.AddExcludeField(DATABASE::"Template Field",TempField.FIELDNO("Fixed Value (Rec. ID Tree ID)"));
      COConfigMgt.AddExcludeField(DATABASE::"Document Category Source Excl.",TempSourceExcl.FIELDNO("Source Record ID Tree ID"));
    END;

    PROCEDURE SetParam@1160040011(NewDirection@1160040002 : 'Import,Export';NewFilename@1160040001 : Text[250]);
    BEGIN
      Direction := NewDirection;
      Filename := NewFilename;
    END;

    PROCEDURE GetRecIDTreeID@1160040021(DocCatCode@1160040000 : Code[20];Value@1160040002 : Text[250]) : Integer;
    VAR
      DocCat@1160040001 : Record 6085575;
    BEGIN
      IF TempDocCat.GET(DocCatCode) THEN BEGIN
        EXIT(RecIDMgt.SetKeyValueWithGUID(TempDocCat."Source Table No.",TempDocCat."Source Field No.",
          TempDocCat."Source Search Field No.",TempDocCat."Document Category GUID",Value))
      END ELSE IF DocCat.GET(DocCatCode) THEN BEGIN
        EXIT(RecIDMgt.SetKeyValueWithGUID(DocCat."Source Table No.",DocCat."Source Field No.",
          DocCat."Source Search Field No.",DocCat."Document Category GUID",Value));
      END;
    END;

    PROCEDURE ClearTemp@1160040012();
    BEGIN
      TempDCSetup.DELETEALL;
      TempOCRLang.DELETEALL;
      TempDocCat.DELETEALL;
      TempDocCatLang.DELETEALL;
      TempDocCatDocSep.DELETEALL;
      TempTemplate.DELETEALL;
      TempField.DELETEALL;
      TempFieldCap.DELETEALL;
      TempFieldTransl.DELETEALL;
      TempFieldRule.DELETEALL;
      TempIdentField.DELETEALL;
      TempSourceExcl.DELETEALL;
      TempTableFilterField.DELETEALL;
    END;

    PROCEDURE CreateDefaultDCSetup@1160040014();
    VAR
      DCSetup@1160040004 : Record 6085573;
      NoSeries@1160040003 : Record 308;
      NoSeriesLine@1160040002 : Record 309;
      WebUser@1160040001 : Record 6086001;
      SourceCode@1160040000 : Record 230;
      Object@1160040005 : Record 2000000001;
    BEGIN
      DCSetup.GET;
      IF NOT NoSeries.GET(DCSetup."Document Nos.") THEN BEGIN
        NoSeries.Code := DCSetup."Document Nos.";
        NoSeries.Description := Text001;
        NoSeries."Default Nos." := TRUE;
        NoSeries.INSERT;

        NoSeriesLine."Series Code" := NoSeries.Code;
        NoSeriesLine."Line No." := 10000;
        NoSeriesLine."Starting No." := Text003;
        NoSeriesLine."Increment-by No." := 1;
        NoSeriesLine.INSERT(TRUE);
      END;

      IF NOT NoSeries.GET(DCSetup."Template Nos.") THEN BEGIN
        NoSeries.INIT;
        NoSeries.Code := DCSetup."Template Nos.";
        NoSeries.Description := Text002;
        NoSeries."Default Nos." := TRUE;
        NoSeries.INSERT;

        NoSeriesLine."Series Code" := NoSeries.Code;
        NoSeriesLine."Line No." := 10000;
        NoSeriesLine."Starting No." := Text004;
        NoSeriesLine."Increment-by No." := 1;
        NoSeriesLine.INSERT(TRUE);
      END;

      IF NOT NoSeries.GET(DCSetup."Purch. Allocation Nos.") THEN BEGIN
        NoSeries.INIT;
        NoSeries.Code := DCSetup."Purch. Allocation Nos.";
        NoSeries.Description := Text006;
        NoSeries."Default Nos." := TRUE;
        NoSeries.INSERT;

        NoSeriesLine."Series Code" := NoSeries.Code;
        NoSeriesLine."Line No." := 10000;
        NoSeriesLine."Starting No." := Text007;
        NoSeriesLine."Increment-by No." := 1;
        NoSeriesLine.INSERT(TRUE);
      END;

      IF NOT SourceCode.GET(DCSetup."Purch. Alloc. Source Code") THEN BEGIN
        SourceCode.Code := DCSetup."Purch. Alloc. Source Code";
        SourceCode.Description := Text008;
        SourceCode.INSERT;
      END;

      IF Object.GET(Object.Type::Table,'',2000000069) THEN
        CODEUNIT.RUN(CODEUNIT::"Capture RTC Library");

      CODEUNIT.RUN(CODEUNIT::"Local Initialization");
      CODEUNIT.RUN(CODEUNIT::"Create Document Capture Roles");
    END;

    PROCEDURE CreateDefaultDocCat@1160040015(DocCatCode@1160040000 : Code[20]);
    VAR
      DocCat@1160040003 : Record 6085575;
      EmptyGuid@1160040001 : GUID;
    BEGIN
      DocCat.GET(DocCatCode);
      IF DocCat."Document Category GUID" = EmptyGuid THEN
        DocCat."Document Category GUID" := CREATEGUID;
    END;

    PROCEDURE OpenDialog@1160040016(NewStep@1160040000 : 'From File,From Temp,To Temp,To File';NewTotalCount@1160040001 : Integer);
    BEGIN
      IF NOT GUIALLOWED THEN
        EXIT;

      TotalCount := NewTotalCount;
      DialogCount := 0;

      CASE NewStep OF
        Step::"From File":
          Window.OPEN(Text010);
        Step::"From Temp":
          Window.OPEN(Text011);
        Step::"To Temp":
          Window.OPEN(Text012);
        Step::"To File":
          Window.OPEN(Text013);
      END;
    END;

    PROCEDURE CloseDialog@1160040017();
    BEGIN
      IF GUIALLOWED THEN
        Window.CLOSE;
    END;

    PROCEDURE UpdateDialog@1160040019();
    BEGIN
      IF NOT GUIALLOWED THEN
        EXIT;

      DialogCount += 1;
      Window.UPDATE(1,ROUND(DialogCount / TotalCount * 10000,1,'>'));
    END;

    LOCAL PROCEDURE ExcludeExistingRecords@38(VAR TempConfigLine@1000 : TEMPORARY Record 6085612);
    VAR
      TempConfigLine2@1002 : TEMPORARY Record 6085612;
      RecRef@1001 : RecordRef;
      SubLevelCnt@1160040000 : Integer;
    BEGIN
      TempConfigLine.RESET;
      TempConfigLine.SETFILTER("Table No",'<>%1',0);
      IF TempConfigLine.FINDSET(TRUE,FALSE) THEN
        REPEAT
          RecRef.OPEN(TempConfigLine."Table No");
          IF RecRef.GET(TempConfigLine."Record ID") THEN BEGIN
            TempConfigLine.Include := FALSE;
            TempConfigLine.MODIFY;
          END;
          RecRef.CLOSE;
        UNTIL TempConfigLine.NEXT = 0;

      TempConfigLine.RESET;
      IF TempConfigLine.FINDSET THEN
        REPEAT
          TempConfigLine2 := TempConfigLine;
          TempConfigLine2.INSERT;
        UNTIL TempConfigLine.NEXT = 0;

      TempConfigLine.RESET;
      TempConfigLine.SETRANGE(Level,0);
      IF TempConfigLine.FINDSET(TRUE,FALSE) THEN
        REPEAT
          TempConfigLine2.RESET;
          TempConfigLine2.SETRANGE("Source Entry No.",TempConfigLine."Entry No.");
          SubLevelCnt := TempConfigLine2.COUNT;
          TempConfigLine2.SETRANGE(Include,TRUE);
          IF SubLevelCnt > 0 THEN
            IF TempConfigLine2.ISEMPTY THEN
              TempConfigLine.Include := FALSE
            ELSE
              TempConfigLine.Include := TRUE;
          TempConfigLine.MODIFY;
        UNTIL TempConfigLine.NEXT = 0;

      TempConfigLine2.RESET;
      TempConfigLine2.DELETEALL;
    END;

    BEGIN
    END.
  }
}

