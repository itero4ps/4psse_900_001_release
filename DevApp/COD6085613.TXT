OBJECT Codeunit 6085613 Document Modification Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW13.70.00.4.05;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1160040001 : TextConst 'ENU=Please select pages of multiple documents ordered in sequence.';
      Text002@1160040000 : TextConst 'ENU=You cannot select pages from single-page documents nor pages that are the first page in a document.';
      Text003@1160040013 : TextConst 'ENU=Deleting pages\#1####################\@2@@@@@@@@@@@@@@@@@@@@';
      Text004@1160040002 : TextConst 'ENU=Splitting pages\#1####################\@2@@@@@@@@@@@@@@@@@@@@';
      Window@1160040003 : Dialog;
      CaptureEngine@1160040012 : Codeunit 6085575;
      FileSysMgt@1160040006 : Codeunit 6085584;
      PDFMgt@1160040005 : Codeunit 6085608;
      TIFFMgt@1160040004 : Codeunit 6085609;
      HideWindow@1160040009 : Boolean;
      Text005@1160040010 : TextConst 'ENU=Merging pages\#1####################\@2@@@@@@@@@@@@@@@@@@@@';
      Text006@1160040011 : TextConst 'ENU=Rotating pages\#1####################\@2@@@@@@@@@@@@@@@@@@@@';
      Text007@1160040007 : TextConst 'ENU=%1 of %2';
      Text008@1160040008 : TextConst 'ENU=WARNING: This document may contain pages that belong to another Source ID.';
      Text009@1160040014 : TextConst 'ENU=Do you want to delete the selected pages?';
      Text011@1160040016 : TextConst 'ENU=Moving pages\#1####################\@2@@@@@@@@@@@@@@@@@@@@';

    PROCEDURE SetHideWindow@1160040004(Hide@1160040000 : Boolean);
    BEGIN
      HideWindow := Hide;
    END;

    PROCEDURE MergePages@1160040002(VAR SelectedPages@1160040001 : Record 6085599;VAR FirstPages@1160040000 : Record 6085599) LastPageNo : Integer;
    VAR
      Document@1160040005 : Record 6085590;
      FirstDocNo@1160040009 : Code[20];
      CurrDocNo@1160040002 : Code[20];
      PrevDocNo@1160040010 : Code[20];
      CurrEntryNo@1160040004 : Integer;
      PrevEntryNo@1160040006 : Integer;
      TotalPages@1160040007 : Integer;
      Count@1160040008 : Integer;
      IsSequential@1160040003 : Boolean;
    BEGIN
      SelectedPages.FINDSET;
      REPEAT
        SelectedPages.MARK(TRUE);
      UNTIL SelectedPages.NEXT = 0;

      IsSequential := TRUE;
      SelectedPages.FINDSET;
      REPEAT
        IF SelectedPages."Document No." <> CurrDocNo THEN BEGIN
          Document.GET(SelectedPages."Document No.");
          Document.CALCFIELDS("No. of Pages");

          IF LastPageNo = 0 THEN BEGIN
            LastPageNo := Document."No. of Pages";
            Document.VALIDATE("Template No.",'');
            Document."Source Record ID Tree ID" := 0;
            Document.MODIFY;
            FirstDocNo := Document."No.";
          END;

          CurrDocNo := SelectedPages."Document No.";
          CurrEntryNo := SelectedPages."Entry No.";

          IF PrevDocNo <> '' THEN BEGIN
            SelectedPages.SETRANGE("Entry No.",PrevEntryNo,CurrEntryNo);
            SelectedPages.SETFILTER("Document No.",'<>%1&<>%2',PrevDocNo,CurrDocNo);
            SelectedPages.MARKEDONLY(FALSE);
            IsSequential := SelectedPages.ISEMPTY;

            SelectedPages.SETRANGE("Entry No.");
            SelectedPages.SETRANGE("Document No.");
            SelectedPages.MARKEDONLY(TRUE);
          END;

          FirstPages := SelectedPages;
          FirstPages.INSERT;

          PrevDocNo := SelectedPages."Document No.";
          PrevEntryNo := SelectedPages."Entry No.";
        END;
      UNTIL (SelectedPages.NEXT = 0) OR NOT IsSequential;

      IF (FirstPages.COUNT < 2) OR NOT IsSequential THEN
        ERROR(Text001);

      IF GUIALLOWED AND NOT HideWindow THEN BEGIN
        TotalPages := FirstPages.COUNT;
        Window.OPEN(Text005);
      END;

      FirstPages.FINDSET;
      REPEAT
        IF GUIALLOWED AND NOT HideWindow THEN BEGIN
          Count += 1;
          Window.UPDATE(1,STRSUBSTNO(Text007,Count,TotalPages));
          Window.UPDATE(2, (Count / TotalPages * 10000) DIV 1);
        END;

       IF FirstDocNo <> FirstPages."Document No." THEN
         MergePage(FirstPages."Document No.",FirstDocNo);
      UNTIL FirstPages.NEXT = 0;

      IF GUIALLOWED AND NOT HideWindow THEN
        Window.CLOSE;
    END;

    PROCEDURE MergePage@1160040000(VAR MergeDocNo@1160040003 : Code[20];FirstDocNo@1160040000 : Code[20]);
    VAR
      FirstDoc@1160040006 : Record 6085590;
      Document@1160040015 : Record 6085590;
      DocPage@1160040001 : Record 6085591;
      PageNo@1160040002 : Integer;
    BEGIN
      FirstDoc.GET(FirstDocNo);
      FirstDoc.CALCFIELDS("No. of Pages");
      PageNo := FirstDoc."No. of Pages";

      Document.GET(MergeDocNo);
      DocPage.SETRANGE("Document No.",Document."No.");
      IF DocPage.FINDSET THEN
        REPEAT
          PageNo += 1;
          MovePage(DocPage."Document No.",DocPage."Page No.",FirstDoc."No.",PageNo);
        UNTIL DocPage.NEXT = 0;

      TIFFMgt.Combine(FirstDoc.GetTIFServerFileName,Document.GetTIFServerFileName,FirstDoc.GetTIFServerFileName + '1');
      PDFMgt.Combine(FirstDoc.GetPDFServerFileName,Document.GetPDFServerFileName,FirstDoc.GetPDFServerFileName + '1');

      Document.DELETE(TRUE);

      FileSysMgt.DeleteFile(FirstDoc.GetTIFServerFileName,FALSE);
      FileSysMgt.DeleteFile(FirstDoc.GetPDFServerFileName,FALSE);
      FileSysMgt.MoveFile(FirstDoc.GetTIFServerFileName + '1',FirstDoc.GetTIFServerFileName);
      FileSysMgt.MoveFile(FirstDoc.GetPDFServerFileName + '1',FirstDoc.GetPDFServerFileName);

      COMMIT;
    END;

    PROCEDURE SplitPages@1160040006(VAR SelectedPages@1160040001 : Record 6085599;VAR PagesToSplit@1160040013 : Record 6085599;VAR NewDocNo@1160040012 : ARRAY [100] OF Code[20]) NewDocCount : Integer;
    VAR
      Document@1160040005 : Record 6085590;
      DocNo@1160040006 : Code[20];
      TotalPages@1160040000 : Integer;
      PageNo@1160040002 : ARRAY [100] OF Integer;
      Count@1000 : Integer;
    BEGIN
      SelectedPages.FINDSET;
      REPEAT
        IF DocNo <> SelectedPages."Document No." THEN BEGIN
          DocNo := SelectedPages."Document No.";

          Document.GET(DocNo);
          Document.CALCFIELDS("No. of Pages");
          IF (Document."No. of Pages" < 2) OR (SelectedPages.Page < 2) THEN
            ERROR(Text002);
        END;

        TotalPages += 1;
        PageNo[TotalPages] := SelectedPages.Page;
      UNTIL SelectedPages.NEXT = 0;

      IF GUIALLOWED AND NOT HideWindow THEN BEGIN
        Window.OPEN(Text004);
        NewDocCount := TotalPages;
      END;

      CreateNewDoc(SelectedPages."Document No.",TotalPages,NewDocNo);

      DocNo := '';
      SelectedPages.ASCENDING(FALSE);
      IF SelectedPages.FINDFIRST THEN
        REPEAT
          Count += 1;
          IF GUIALLOWED AND NOT HideWindow THEN BEGIN
            Window.UPDATE(1,STRSUBSTNO(Text007,Count,NewDocCount));
            Window.UPDATE(2, (Count / NewDocCount * 10000) DIV 1);
          END;

          SplitPage(SelectedPages."Document No.",PageNo[TotalPages],NewDocNo[TotalPages]);
          TotalPages -=1;

          IF DocNo <> SelectedPages."Document No." THEN BEGIN
             Document.GET(SelectedPages."Document No.");
             Document.DeleteComments(-2);
             DocNo := SelectedPages."Document No.";
          END;

          PagesToSplit := SelectedPages;
          PagesToSplit."Entry No." := Count;
          PagesToSplit.INSERT;
        UNTIL SelectedPages.NEXT = 0;

      IF GUIALLOWED AND NOT HideWindow THEN
        Window.CLOSE;

      SelectedPages.ASCENDING(TRUE);
      EXIT(NewDocCount);
    END;

    PROCEDURE AutoSplitDocument@1160040001(VAR Document@1160040005 : Record 6085590;VAR AutoSplitPage@1160040001 : TEMPORARY Record 6085766);
    VAR
      NewDoc@1160040008 : Record 6085590;
      DocLastPageNo@1160040004 : Integer;
      NewPageNo@1160040000 : Integer;
      i@1160040002 : Integer;
      TempPDF@1160040003 : Text[1024];
      TempTIFF@1160040006 : Text[1024];
    BEGIN
      FindSplitPages(Document,AutoSplitPage);

      IF AutoSplitPage.FINDFIRST THEN
        DocLastPageNo := AutoSplitPage."Page No." - 1
      ELSE
        EXIT;

      Document.CALCFIELDS("No. of Pages");
      IF AutoSplitPage.COUNT > Document."No. of Pages" THEN BEGIN
        AddSplitComment(Document."No.");
        AutoSplitPage.DELETEALL(TRUE);
        EXIT;
      END;

      AutoSplitPage.SETRANGE("Page Type",AutoSplitPage."Page Type"::Split);
      IF AutoSplitPage.FINDSET THEN BEGIN
        REPEAT
          NewDoc.TRANSFERFIELDS(Document);
          NewDoc."No." := '';
          NewDoc.INSERT(TRUE);

          AutoSplitPage."Document No." := NewDoc."No.";
          AutoSplitPage.MODIFY(TRUE);

          NewPageNo := 1;
          FOR i := AutoSplitPage."Page No." TO AutoSplitPage."Last Page No." DO BEGIN
            MovePage(Document."No.",i,NewDoc."No.",NewPageNo);
            NewPageNo += 1;
          END;
        UNTIL AutoSplitPage.NEXT = 0;
      END;

      AutoSplitPage.SETRANGE("Page Type");
      AutoSplitPage.ASCENDING(FALSE);
      IF AutoSplitPage.FINDFIRST THEN BEGIN
        REPEAT
          IF AutoSplitPage."Page Type" = AutoSplitPage."Page Type"::Split THEN
            CopyPages(Document."No.",AutoSplitPage."Document No.",AutoSplitPage."Page No.",AutoSplitPage."Last Page No.")
          ELSE
            DeletePage(AutoSplitPage."Document No.",AutoSplitPage."Page No.");
        UNTIL AutoSplitPage.NEXT = 0;

        CopyAndReplaceDoc(Document."No.",1,DocLastPageNo);
      END;

      AutoSplitPage.SETRANGE("Page Type",AutoSplitPage."Page Type"::Blank);
      AutoSplitPage.ASCENDING(TRUE);
      IF AutoSplitPage.FINDFIRST THEN
        AutoSplitPage.DELETEALL(TRUE);

      AutoSplitPage.RESET;

      COMMIT;
    END;

    PROCEDURE FindSplitPages@1160040012(VAR Document@1160040004 : Record 6085590;VAR AutoSplitPage@1160040003 : TEMPORARY Record 6085766);
    VAR
      DocCat@1160040002 : Record 6085575;
      Page@1160040001 : Record 6085591;
      SepFieldValues@1000 : TEMPORARY Record 6085593;
      SepFieldValues2@1001 : TEMPORARY Record 6085593;
      TemplateNo@1160040000 : Code[20];
      RecIDTreeID@1160040006 : Integer;
      FirstPageNo@1160040005 : Integer;
      PageType@1160040008 : 'Normal,Split,Blank';
      PrevPageType@1160040007 : 'Normal,Split,Blank';
    BEGIN
      DocCat.GET(Document."Document Category Code");
      IF NOT IsSplitActive(DocCat) THEN
        EXIT;

      Page.SETRANGE("Document No.",Document."No.");
      Page.SETFILTER("Page No.",'>1');
      IF Page.FINDSET THEN BEGIN
        IF DocCat."Split on Source ID" THEN
          IsNewSource(Document,1,RecIDTreeID,TemplateNo);

        IF DocCat."Split on Sep. Fields" THEN BEGIN
          IF TemplateNo = '' THEN
            TemplateNo := GetTemplateNo(DocCat,Document."Source Record ID Tree ID");

          GetSepFieldValues(Document,1,TemplateNo,SepFieldValues);
        END;

        REPEAT
          IF DocCat."Split on Barcode" THEN
            IF IsNewBarcode(Document,Page."Page No.",RecIDTreeID) THEN
              PageType := PageType::Split;

          IF DocCat."Split on Blank Page" AND (PageType = PageType::Normal) THEN
            IF IsBlank(Page."Document No.",Page."Page No.") THEN
              PageType := PageType::Blank;

          IF DocCat."Split on Source ID" AND (PageType = PageType::Normal) THEN
            IF IsNewSource(Document,Page."Page No.",RecIDTreeID,TemplateNo) THEN BEGIN
              PageType := PageType::Split;

              IF DocCat."Split on Sep. Fields" THEN
                GetSepFieldValues(Document,Page."Page No.",TemplateNo,SepFieldValues);
            END;

          IF DocCat."Split on Sep. Fields" AND (PageType = PageType::Normal) THEN BEGIN
            GetSepFieldValues(Document,Page."Page No.",TemplateNo,SepFieldValues2);

            IF IsNewSepFieldValues(TemplateNo,SepFieldValues,SepFieldValues2) THEN BEGIN
              GetSepFieldValues(Document,Page."Page No.",TemplateNo,SepFieldValues);
              PageType := PageType::Split;
            END;
          END;

          IF (PrevPageType = PrevPageType::Blank) AND (PageType = PageType::Normal) THEN
            PageType := PageType::Split;

          IF PageType <> PageType::Normal THEN BEGIN
            ModifyAutoSplitPage(AutoSplitPage,FirstPageNo,Page."Page No."-1);
            CreateAutoSplitPage(AutoSplitPage,Document."No.",PageType,Page."Page No.");
            FirstPageNo := Page."Page No.";
          END;

          PrevPageType := PageType;
          PageType := PageType::Normal;
        UNTIL Page.NEXT = 0;

        IF AutoSplitPage.FINDLAST THEN
          ModifyAutoSplitPage(AutoSplitPage,FirstPageNo,Page."Page No.");
      END;
    END;

    PROCEDURE SplitPage@1160040016(DocNo@1160040001 : Code[20];PageNo@1160040000 : Integer;NewDocNo@1160040002 : Code[20]);
    VAR
      DocToSplit@1160040006 : Record 6085590;
      NewDoc@1160040004 : Record 6085590;
      DocPage@1160040010 : Record 6085591;
      NewPageNo@1160040011 : Integer;
    BEGIN
      DocToSplit.GET(DocNo);

      NewDoc.GET(NewDocNo);
      NewPageNo := 0;
      DocPage.SETRANGE("Document No.",DocToSplit."No.");
      DocPage.SETFILTER("Page No.",'>=%1',PageNo);
      DocPage.FINDSET;

      REPEAT
        NewPageNo += 1;
        MovePage(DocPage."Document No.",DocPage."Page No.",NewDoc."No.",NewPageNo);
      UNTIL DocPage.NEXT = 0;

      TIFFMgt.Split(DocToSplit.GetTIFServerFileName,
        DocToSplit.GetTIFServerFileName + '1',
        NewDoc.GetTIFServerFileName,
        PageNo-1);

      PDFMgt.Split(DocToSplit.GetPDFServerFileName,
        DocToSplit.GetPDFServerFileName + '1',
        NewDoc.GetPDFServerFileName,
        PageNo-1);

      FileSysMgt.DeleteFile(DocToSplit.GetTIFServerFileName,FALSE);
      FileSysMgt.DeleteFile(DocToSplit.GetPDFServerFileName,FALSE);
      FileSysMgt.MoveFile(DocToSplit.GetTIFServerFileName + '1',DocToSplit.GetTIFServerFileName);
      FileSysMgt.MoveFile(DocToSplit.GetPDFServerFileName + '1',DocToSplit.GetPDFServerFileName);

      COMMIT;
    END;

    PROCEDURE CopyPages@1160040025(FromDocNo@1160040001 : Code[20];ToDocNo@1160040003 : Code[20];FirstPageNo@1160040002 : Integer;LastPageNo@1160040005 : Integer);
    VAR
      FromDoc@1160040006 : Record 6085590;
      ToDoc@1160040004 : Record 6085590;
    BEGIN
      FromDoc.GET(FromDocNo);
      ToDoc.GET(ToDocNo);

      TIFFMgt.CopyPagesToNewFile(FromDoc.GetTIFServerFileName,
        ToDoc.GetTIFServerFileName,
        FirstPageNo,
        LastPageNo);

      PDFMgt.CopyPagesToNewFile(FromDoc.GetPDFServerFileName,
        ToDoc.GetPDFServerFileName,
        FirstPageNo,
        LastPageNo);
    END;

    PROCEDURE CopyAndReplaceDoc@1160040030(DocNo@1160040003 : Code[20];FirstPageNo@1160040001 : Integer;LastPageNo@1160040000 : Integer);
    VAR
      Doc@1160040002 : Record 6085590;
    BEGIN
      Doc.GET(DocNo);

      TIFFMgt.CopyPagesToNewFile(Doc.GetTIFServerFileName,
        Doc.GetTIFServerFileName + '1',
        FirstPageNo,
        LastPageNo);

      PDFMgt.CopyPagesToNewFile(Doc.GetPDFServerFileName,
        Doc.GetPDFServerFileName + '1',
        FirstPageNo,
        LastPageNo);

      FileSysMgt.DeleteFile(Doc.GetTIFServerFileName,FALSE);
      FileSysMgt.DeleteFile(Doc.GetPDFServerFileName,FALSE);
      FileSysMgt.MoveFile(Doc.GetTIFServerFileName + '1',Doc.GetTIFServerFileName);
      FileSysMgt.MoveFile(Doc.GetPDFServerFileName + '1',Doc.GetPDFServerFileName);
    END;

    PROCEDURE DeletePages@1160040005(VAR SelectedPages@1160040005 : Record 6085599;VAR PagesToDelete@1160040004 : Record 6085599) : Boolean;
    VAR
      Document@1160040001 : Record 6085590;
      DocPage@1160040003 : Record 6085591;
      TotalPages@1160040000 : Integer;
      PageNo@1160040002 : Integer;
      DeletePageNo@1160040006 : Integer;
    BEGIN
      IF GUIALLOWED AND NOT HideWindow THEN BEGIN
        IF NOT SelectedPages.FINDSET THEN
          EXIT;

        IF NOT CONFIRM(Text009) THEN
          EXIT;

        Window.OPEN(Text003);
        TotalPages := SelectedPages.COUNT;
      END;

      SelectedPages.ASCENDING(FALSE);
      IF SelectedPages.FINDFIRST THEN
        REPEAT
          IF GUIALLOWED AND NOT HideWindow THEN BEGIN
            PageNo += 1;
            Window.UPDATE(1,STRSUBSTNO(Text007,PageNo,TotalPages));
            Window.UPDATE(2, (PageNo / TotalPages * 10000) DIV 1);
          END;

          PagesToDelete.SETRANGE("Document No.",SelectedPages."Document No.");
          DeletePage(SelectedPages."Document No.",SelectedPages.Page);

          PagesToDelete := SelectedPages;
          PagesToDelete.INSERT;
        UNTIL SelectedPages.NEXT = 0;

      PagesToDelete.SETRANGE("Document No.");

      IF GUIALLOWED AND NOT HideWindow THEN
        Window.CLOSE;

      SelectedPages.ASCENDING(TRUE);
      EXIT(TRUE);
    END;

    PROCEDURE DeletePage@1160040009(DocNo@1160040005 : Code[20];PageNo@1160040004 : Integer);
    VAR
      Document@1160040001 : Record 6085590;
      DocPage@1160040003 : Record 6085591;
    BEGIN
      Document.GET(DocNo);
      Document.CALCFIELDS("No. of Pages");
      IF Document."No. of Pages" < 2 THEN
        Document.DELETE(TRUE)
      ELSE BEGIN
        DocPage.GET(DocNo,PageNo);
        DocPage.DELETE(TRUE);

        DocPage.SETRANGE("Document No.",DocNo);
        DocPage.SETFILTER("Page No.",'>%1',PageNo);
        IF DocPage.FINDSET THEN
          REPEAT
            MovePage(DocPage."Document No.",DocPage."Page No.",DocPage."Document No.",DocPage."Page No."-1);
          UNTIL DocPage.NEXT = 0;

        TIFFMgt.DeletePage(Document.GetTIFServerFileName,PageNo);
        PDFMgt.DeletePage(Document.GetPDFServerFileName,PageNo);
      END;

      COMMIT;
    END;

    PROCEDURE RotatePages@1160040011(VAR PagesToRotate@1160040000 : Record 6085599);
    VAR
      TotalPages@1160040003 : Integer;
      PageNo@1160040002 : Integer;
    BEGIN
      IF GUIALLOWED AND NOT HideWindow THEN BEGIN
        Window.OPEN(Text006);
        TotalPages := PagesToRotate.COUNT;
      END;

      PagesToRotate.FINDSET;
      REPEAT
        IF GUIALLOWED AND NOT HideWindow THEN BEGIN
          PageNo += 1;
          Window.UPDATE(1,STRSUBSTNO(Text007,PageNo,TotalPages));
          Window.UPDATE(2, (PageNo / TotalPages * 10000) DIV 1);
        END;

        RotatePage(PagesToRotate."Document No.",PagesToRotate.Page);
      UNTIL PagesToRotate.NEXT = 0;

      IF GUIALLOWED AND NOT HideWindow THEN
        Window.CLOSE;
    END;

    PROCEDURE RotatePage@1160040007(DocNo@1160040004 : Code[20];PageNo@1160040000 : Integer);
    VAR
      Document@1160040001 : Record 6085590;
    BEGIN
      Document.GET(DocNo);
      TIFFMgt.RotatePage(Document.GetTIFServerFileName,PageNo,90);
      PDFMgt.RotatePage(Document.GetPDFServerFileName,PageNo,90);

      COMMIT;
    END;

    PROCEDURE MovePages@1160040018(VAR SelectedPages@1160040001 : Record 6085599;MoveUp@1160040002 : Boolean) PagesMoved : Boolean;
    VAR
      Document@1160040004 : Record 6085590;
      MoveThisPage@1160040003 : Boolean;
      MoveToPage@1160040008 : Integer;
      TotalPages@1160040005 : Integer;
      Count@1160040006 : Integer;
    BEGIN
      IF GUIALLOWED AND NOT HideWindow THEN BEGIN
        Window.OPEN(Text011);
        TotalPages := SelectedPages.COUNT;
      END;

      SelectedPages.FINDSET;
      REPEAT
        IF GUIALLOWED AND NOT HideWindow THEN BEGIN
          Count += 1;
          Window.UPDATE(1,STRSUBSTNO(Text007,Count,TotalPages));
          Window.UPDATE(2, (Count / TotalPages * 10000) DIV 1);
        END;

        IF Document."No." <> SelectedPages."Document No." THEN
          Document.GET(SelectedPages."Document No.");

        IF NOT MoveUp THEN BEGIN
          Document.CALCFIELDS(Document."No. of Pages");
          MoveThisPage := SelectedPages.Page < Document."No. of Pages";
        END ELSE
          MoveThisPage := SelectedPages.Page > 1;

        IF MoveThisPage THEN BEGIN
          IF MoveUp THEN
            MoveToPage := SelectedPages.Page-1
          ELSE
            MoveToPage := SelectedPages.Page+1;

          MovePage(SelectedPages."Document No.",SelectedPages.Page,SelectedPages."Document No.",0);
          MovePage(SelectedPages."Document No.",MoveToPage,SelectedPages."Document No.",SelectedPages.Page);
          MovePage(SelectedPages."Document No.",0,SelectedPages."Document No.",MoveToPage);

          TIFFMgt.MovePage(Document.GetTIFServerFileName,SelectedPages.Page,MoveToPage);
          PDFMgt.MovePage(Document.GetPDFServerFileName,SelectedPages.Page,MoveToPage);

          COMMIT;

          PagesMoved := TRUE;
          MoveThisPage := FALSE;
        END;
      UNTIL SelectedPages.NEXT = 0;

      IF GUIALLOWED AND NOT HideWindow THEN
        Window.CLOSE;
    END;

    PROCEDURE MovePage@1160040003(FromDocNo@1160040005 : Code[20];FromPageNo@1160040004 : Integer;ToDocNo@1160040007 : Code[20];ToPageNo@1160040006 : Integer);
    VAR
      DocPage@1160040000 : Record 6085591;
      NewDocPage@1160040001 : Record 6085591;
      DocWord@1160040002 : Record 6085592;
      NewDocWord@1160040003 : Record 6085592;
    BEGIN
      DocPage.GET(FromDocNo,FromPageNo);

      NewDocPage := DocPage;
      NewDocPage."Document No." := ToDocNo;
      NewDocPage."Page No." := ToPageNo;
      NewDocPage.INSERT;

      DocWord.SETRANGE("Document No.",FromDocNo);
      DocWord.SETRANGE("Page No.",DocPage."Page No.");
      IF DocWord.FINDSET THEN
        REPEAT
          NewDocWord := DocWord;
          NewDocWord."Document No." := ToDocNo;
          NewDocWord."Page No." := ToPageNo;
          NewDocWord.INSERT;
        UNTIL DocWord.NEXT = 0;

      DocPage.DELETE(TRUE);
    END;

    PROCEDURE IsSplitActive@1160040013(DocCat@1160040000 : Record 6085575) : Boolean;
    BEGIN
      IF DocCat."Split on Barcode" OR
        DocCat."Split on Source ID" OR
        DocCat."Split on Sep. Fields" OR
        DocCat."Split on Blank Page" THEN
         EXIT(TRUE);
    END;

    PROCEDURE IsNewBarcode@1160040021(Document@1160040004 : Record 6085590;PageNo@1160040003 : Integer;VAR RecIDTreeID@1160040001 : Integer) Result : Boolean;
    VAR
      DocCat@1160040006 : Record 6085575;
      DocWord@1160040000 : Record 6085592;
      RecBarcode@1160040002 : Record 6085757;
    BEGIN
      DocCat.GET(Document."Document Category Code");
      IF DocCat."Split Barcode Text" <> '' THEN BEGIN
        DocWord.SETRANGE("Document No.",Document."No.");
        DocWord.SETRANGE(DocWord."Page No.",PageNo);
        DocWord.SETRANGE(Type,DocWord.Type::Barcode);
        DocWord.SETRANGE(Word,DocCat."Split Barcode Text");
        IF DocWord.FINDFIRST THEN
          EXIT(TRUE);
      END;

      DocWord.SETRANGE(Word);
      IF DocWord.FINDSET THEN
        REPEAT
          RecBarcode.SETRANGE(Barcode,DocWord.Word);
          IF RecBarcode.FINDFIRST THEN BEGIN
            RecIDTreeID := RecBarcode."Source Record ID Tree ID";
            EXIT(TRUE);
          END;
        UNTIL DocWord.NEXT = 0;
    END;

    PROCEDURE IsBlank@1160040008(DocNo@1160040000 : Code[20];PageNo@1160040003 : Integer) : Boolean;
    VAR
      Word@1160040001 : Record 6085592;
      TotalChar@1160040002 : Integer;
    BEGIN
      Word.SETRANGE("Document No.",DocNo);
      Word.SETRANGE("Page No.",PageNo);

      IF Word.COUNT > 40 THEN
        EXIT;

      IF Word.FINDSET THEN
        REPEAT
          TotalChar += STRLEN(Word.Word);
        UNTIL (Word.NEXT = 0) OR (TotalChar > 40);

      IF TotalChar > 40 THEN
        EXIT;

      EXIT(TRUE);
    END;

    PROCEDURE IsNewSource@1160040010(VAR Document@1160040000 : Record 6085590;PageNo@1160040007 : Integer;VAR PrevRecIDTreeID@1160040009 : Integer;VAR TemplateNo@1160040010 : Code[20]) : Boolean;
    VAR
      DocCat@1160040011 : Record 6085575;
      Template@1160040003 : Record 6085579;
      CaptureMgt@1160040001 : Codeunit 6085576;
      RecIDMgt@1160040005 : Codeunit 6085604;
      RecRef@1160040004 : RecordRef;
      RecID@1160040002 : RecordID;
      CurrRecIDTreeID@1160040006 : Integer;
      MatchPoints@1160040008 : Integer;
    BEGIN
      DocCat.GET(Document."Document Category Code");

      IF CaptureMgt.FindTemplateFromSearchWords(Document,Template,PageNo,FALSE) THEN
        CurrRecIDTreeID := Template."Source Record ID Tree ID";

      IF CurrRecIDTreeID = 0 THEN BEGIN
        CaptureEngine.GetRecFromIdentField(Document,PageNo,RecID,MatchPoints);

        IF MatchPoints >= 15 THEN
          IF DocCat."Source Table No." <> 0 THEN BEGIN
            RecRef.GET(RecID);
            CurrRecIDTreeID := RecIDMgt.GetRecIDTreeID(RecRef,TRUE);
          END;
      END;

      IF (PrevRecIDTreeID <> CurrRecIDTreeID) AND (CurrRecIDTreeID <> 0) THEN BEGIN
        TemplateNo := GetTemplateNo(DocCat,CurrRecIDTreeID);
        PrevRecIDTreeID := CurrRecIDTreeID;
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE GetSepFieldValues@2(Document@1002 : Record 6085590;PageNo@1001 : Integer;TemplateNo@1000 : Code[20];VAR SepFieldValues@1003 : Record 6085593);
    VAR
      TemplField@1004 : Record 6085580;
      CaptureMgt@1006 : Codeunit 6085576;
      Value@1005 : Text[250];
    BEGIN
      IF TemplateNo = '' THEN
        EXIT;

      SepFieldValues.DELETEALL;

      TemplField.SETRANGE("Template No.",TemplateNo);
      TemplField.SETRANGE("Use as Doc. Separator",TRUE);
      IF TemplField.FINDSET THEN
        REPEAT
          Value := CaptureEngine.CaptureField(Document,PageNo,TemplField,FALSE);

          SepFieldValues."Is Value" := TRUE;
          SepFieldValues.Code := TemplField.Code;
          SepFieldValues."Value (Text)" := Value;
          SepFieldValues."Is Valid" := (Value <> '') AND CaptureMgt.ParseField(TemplField,Value,TRUE);
          SepFieldValues.INSERT;
        UNTIL TemplField.NEXT = 0;
    END;

    LOCAL PROCEDURE IsNewSepFieldValues@1(TemplateNo@1001 : Code[20];VAR ValuesToCompare1@1000 : Record 6085593;VAR ValuesToCompare2@1004 : Record 6085593) : Boolean;
    VAR
      TemplField@1007 : Record 6085580;
      CaptureMgt@1006 : Codeunit 6085576;
      Value@1005 : Text[250];
    BEGIN
      IF TemplateNo = '' THEN
        EXIT;

      TemplField.SETRANGE("Template No.",TemplateNo);
      TemplField.SETRANGE("Use as Doc. Separator",TRUE);
      IF TemplField.FINDSET THEN
        REPEAT
          ValuesToCompare1.GET('',TRUE,TemplField.Code);
          ValuesToCompare2.GET('',TRUE,TemplField.Code);
          IF ValuesToCompare1."Is Valid" AND ValuesToCompare2."Is Valid" THEN
            IF ValuesToCompare1."Value (Text)" <> ValuesToCompare2."Value (Text)" THEN
              EXIT(TRUE);
        UNTIL TemplField.NEXT = 0;
    END;

    PROCEDURE AddSplitComment@1160040015(DocNo@1160040000 : Code[20]);
    VAR
      Document@1160040003 : Record 6085590;
      Comment@1160040001 : Record 6085594;
      Field@1160040002 : Record 6085580;
    BEGIN
      Comment.SETCURRENTKEY("Document No.","Comment Type");
      Comment.SETRANGE("Document No.",DocNo);
      Comment.SETRANGE(Area,Comment.Area::Import);
      IF Comment.FINDFIRST THEN
        EXIT;

      Document.GET(DocNo);
      Comment.Add(Document,Field,0,Comment.Area::Import,Comment."Comment Type"::Warning,Text008);
    END;

    PROCEDURE GetTemplateNo@1160040014(DocCat@1160040000 : Record 6085575;RecIDTreeID@1160040001 : Integer) : Code[20];
    VAR
      Template@1160040002 : Record 6085579;
    BEGIN
      IF DocCat."Register without Template" THEN
        EXIT;

      Template.SETRANGE("Category Code",DocCat.Code);
      Template.SETRANGE("Source Record ID Tree ID",RecIDTreeID);
      Template.SETRANGE("Source Sub Type",Template."Source Sub Type"::" ");
      Template.SETRANGE(Default,TRUE);
      IF Template.FINDFIRST THEN
        EXIT(Template."No.");

      Template.SETRANGE(Default);
      IF Template.FINDFIRST THEN
        EXIT(Template."No.");
    END;

    PROCEDURE CreateNewDoc@1160040017(DocNo@1160040001 : Code[20];SplitCount@1160040000 : Integer;VAR NewDocNo@1160040005 : ARRAY [100] OF Code[20]);
    VAR
      DocToSplit@1160040006 : Record 6085590;
      NewDoc@1160040004 : Record 6085590;
      i@1160040002 : Integer;
    BEGIN
      DocToSplit.GET(DocNo);
      FOR i := 1 TO SplitCount DO BEGIN
        NewDoc.TRANSFERFIELDS(DocToSplit);
        NewDoc."No." := '';
        NewDoc.VALIDATE("Source Record ID Tree ID",0);
        NewDoc.INSERT(TRUE);
        NewDocNo[i] := NewDoc."No.";
      END;
    END;

    PROCEDURE IsMergeEmail@1160040020(VAR Document@1160040000 : Record 6085590) : Boolean;
    VAR
      Template@1160040004 : Record 6085579;
      TemplateNo@1160040003 : Code[20];
      RecIDTreeID@1160040001 : Integer;
    BEGIN
      IF Document."Source Record ID Tree ID" = 0 THEN
        IF NOT IsNewSource(Document,1,RecIDTreeID,TemplateNo) THEN
          EXIT;

      Document.VALIDATE("Source Record ID Tree ID",RecIDTreeID);
      Document.MODIFY(TRUE);

      Template.GET(TemplateNo);
      EXIT(Template."Merge from same E-mail");
    END;

    PROCEDURE MergeEmail@1160040019(FirstDoc@1160040001 : Record 6085590);
    VAR
      Document@1160040000 : Record 6085590;
    BEGIN
      Document.SETRANGE("E-Mail GUID",FirstDoc."E-Mail GUID");
      Document.SETFILTER("No.",'<>%1',FirstDoc."No.");
      IF Document.FINDSET THEN
        REPEAT
          MergePage(Document."No.",FirstDoc."No.");
        UNTIL Document.NEXT = 0;
    END;

    PROCEDURE CreateAutoSplitPage@1160040024(VAR AutoSplitPage@1160040001 : TEMPORARY Record 6085766;DocNo@1160040000 : Code[20];PageType@1160040003 : 'Normal,Split,Blank';PageNo@1160040002 : Integer) : Integer;
    BEGIN
      AutoSplitPage.INIT;
      AutoSplitPage."Page No." := PageNo;
      AutoSplitPage."Document No." := DocNo;
      AutoSplitPage."Page Type" := PageType;
      AutoSplitPage.INSERT(TRUE);
    END;

    PROCEDURE ModifyAutoSplitPage@1160040029(VAR AutoSplitPage@1160040001 : TEMPORARY Record 6085766;PageNo@1160040000 : Integer;LastPageNo@1160040002 : Integer);
    BEGIN
      IF NOT AutoSplitPage.GET(PageNo) THEN
        EXIT;

      AutoSplitPage."Last Page No." := LastPageNo;
      AutoSplitPage.MODIFY(TRUE);
    END;

    BEGIN
    END.
  }
}

