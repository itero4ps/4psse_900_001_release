OBJECT Codeunit 6085660 Capture RTC Library
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW19.00.00.4.04;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            CreateClientAddInEntries;
          END;

  }
  CODE
  {
    VAR
      XmlLib@1000000000 : Codeunit 6085573;
      Text001@6085579 : TextConst 'ENU=Open';
      Text002@6085578 : TextConst 'ENU=Rename';
      Text003@6085577 : TextConst 'ENU=Delete';
      Text004@6085576 : TextConst 'ENU=Name';
      Text005@6085575 : TextConst 'ENU=User';
      Text006@6085574 : TextConst 'ENU=Date / Time';
      Text007@6085573 : TextConst 'ENU=Copy';

    PROCEDURE BuildZoomCommand@1000000001(NewZoomPct@1000000003 : Integer;VAR XmlDoc@161024012 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      CommandNode@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetZoomPct',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'ZoomPct',XmlLib.Dec2Text(NewZoomPct),NewNode);
    END;

    PROCEDURE BuildZoomTextCommand@1000000004(NewZoomText@1000000001 : Text[1024];VAR XmlDoc@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      CommandNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetZoomText',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'ZoomText',NewZoomText,NewNode);
    END;

    PROCEDURE BuildInvalidFileTextCommand@1160040000(NewInvalidFileText@1000000001 : Text[1024];VAR XmlDoc@1000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      CommandNode@1003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetInvalidFileText',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'InvalidFileText',NewInvalidFileText,NewNode);
    END;

    PROCEDURE BuildTotalNoOfPagesTextCommand@1000000005(NewTotalNoOfPagesText@1000000001 : Text[1024];VAR XmlDoc@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      CommandNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetTotalNoOfPages',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'TotalNoOfPagesText',NewTotalNoOfPagesText,NewNode);
    END;

    PROCEDURE BuildDrawFieldCommand@1000000007(FieldCode@1000000001 : Code[20];IsValue@1000000005 : Boolean;Top@1000000006 : Integer;Left@1000000007 : Integer;Bottom@1000000008 : Integer;Right@1000000009 : Integer;VAR XmlDoc@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      CommandNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','DrawField',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'FieldName',FieldCode,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'IsValue',XmlLib.Bool2Text(IsValue),NewNode);
      XmlLib.CreateXmlNode(ParamNode,'Top',XmlLib.Dec2Text(Top),NewNode);
      XmlLib.CreateXmlNode(ParamNode,'Left',XmlLib.Dec2Text(Left),NewNode);
      XmlLib.CreateXmlNode(ParamNode,'Bottom',XmlLib.Dec2Text(Bottom),NewNode);
      XmlLib.CreateXmlNode(ParamNode,'Right',XmlLib.Dec2Text(Right),NewNode);
    END;

    PROCEDURE BuildSetImageCommand@1000000010(Filename@1000000003 : Text[1024];ShowPageControls@6085573 : Boolean;VAR XmlDoc@1000000001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      CommandNode@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetImage',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'Filename',Filename,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'ShowPageControls',XmlLib.Bool2Text(ShowPageControls),NewNode);
    END;

    PROCEDURE BuildClearImageCommand@1000000008(VAR XmlDoc@1000000001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      CommandNode@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','ClearImage',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
    END;

    PROCEDURE BuildScrollTopCommand@1000000014(VAR XmlDoc@1000000001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      CommandNode@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','ScrollToTop',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
    END;

    PROCEDURE BuildScrollToLeftEndCommand@1000000013(VAR XmlDoc@1000000001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      CommandNode@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','ScrollToLeftEnd',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
    END;

    PROCEDURE BuildScrollToRightEndCommand@1000000012(VAR XmlDoc@1000000001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      CommandNode@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','ScrollToRightEnd',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
    END;

    PROCEDURE BuildScrollToEndCommand@1000000015(VAR XmlDoc@1000000001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      CommandNode@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','ScrollToEnd',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
    END;

    PROCEDURE BuildSetActivePageCommand@1000000011(NewActivePage@1000000003 : Integer;Text@1000000002 : Text[1024];VAR XmlDoc@1000000001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      CommandNode@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Time',FORMAT(TIME),NewNode);
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetActivePage',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'PageNo',XmlLib.Dec2Text(NewActivePage),NewNode);
      XmlLib.CreateXmlNode(ParamNode,'Text',Text,NewNode);
    END;

    PROCEDURE BuildNotifierConfig@1000000016(HeaderFieldsFormName@1000000002 : Text[50];LineFieldsFormName@1000000003 : Text[50];VAR XmlDoc@1000000001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      CommandNode@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetConfig',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'HeaderFieldsFormName',HeaderFieldsFormName,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'LineFieldsFormName',LineFieldsFormName,NewNode);
    END;

    PROCEDURE BuildRedrawAllValuesCommand@1000000017(DocumentNo@1000000000 : Code[20];PageNo@1000000001 : Integer;VAR XmlDoc@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      Value@1000000002 : Record 6085593;
    BEGIN
      Value.SETRANGE("Document No.",DocumentNo);
      Value.SETRANGE("Page No.",PageNo);
      IF Value.FINDSET THEN
        REPEAT
          IF (Value.Right - Value.Left > 0) AND (Value.Bottom - Value.Top > 0) THEN BEGIN
            IF Value."Is Value" THEN
              BuildDrawFieldCommand(
                Value.Code + FORMAT(Value."Line No."),TRUE,Value.Top,Value.Left,Value.Bottom,Value.Right,XmlDoc)
            ELSE BEGIN
              BuildDrawFieldCommand(Value.Code,FALSE,Value.Top,Value.Left,Value.Bottom,Value.Right,XmlDoc);
            END;
          END;
        UNTIL Value.NEXT = 0;
    END;

    PROCEDURE BuildStartCaptureCommand@1000000019(Area@1000000001 : Text[1024];CaptionName@1000000005 : Code[250];ValueName@1000000006 : Code[250];VAR XmlDoc@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      CommandNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','StartCapture',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'Area',Area,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'CaptionName',CaptionName,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'ValueName',ValueName,NewNode);
    END;

    PROCEDURE BuildRemoveAllFieldsCommand@1000000018(VAR XmlDoc@1000000001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      CommandNode@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','RemoveAllFields',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
    END;

    PROCEDURE BuildLineFieldOrderCommand@1000000020(TemplateNo@1000000001 : Code[20];VAR XmlDoc@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      Field@1000000010 : Record 6085580;
      CommandNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      i@1000000005 : Integer;
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetLineFields',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);

      Field.SETCURRENTKEY("Template No.",Type,"Sort Order");
      Field.SETRANGE("Template No.",TemplateNo);
      Field.SETRANGE(Type,Field.Type::Line);
      IF Field.FINDSET THEN
        REPEAT
          XmlLib.CreateXmlNode(ParamNode,'Field',Field.Code,NewNode);
        UNTIL (Field.NEXT = 0) OR (i = 20);
    END;

    PROCEDURE BuildAddDocumentField@1000000023(FieldId@1000000002 : Code[50];VAR XmlDoc@1000000001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      CommandNode@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','AddDocumentField',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'FieldId',FieldId,NewNode);
    END;

    PROCEDURE BuildNotifyMessage@1000000021(Channel@1000000002 : Code[50];MessageToSend@1000000003 : Code[200];VAR XmlDoc@1000000001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      CommandNode@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','NotifyListner',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'Channel',Channel,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'Type','0',NewNode);
      XmlLib.CreateXmlNode(ParamNode,'Text',MessageToSend,NewNode);
    END;

    PROCEDURE BuildCaptureEnabledCommand@1000000022(Enabled@1000000001 : Boolean;VAR XmlDoc@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      CommandNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','CaptureEnabled',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'Value',XmlLib.Bool2Text(Enabled),NewNode);
    END;

    PROCEDURE BuildShowScannerSettingCommand@1000000024(VAR XmlDoc@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      CommandNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','ShowScannerSettings',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'Time',FORMAT(TIME),NewNode);
    END;

    PROCEDURE BuildRefreshScannerListCommand@1000000026(VAR XmlDoc@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      CommandNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Time',FORMAT(TIME),NewNode);
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','RefreshScannerList',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
    END;

    PROCEDURE BuildStartScanningCommand@1000000025(ScanToPath@1000000005 : Text[1024];PaperJamErrorMessage@1000000006 : Text[1024];MultiPage@1000000007 : Boolean;Duplex@1000000008 : Boolean;VAR XmlDoc@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      CommandNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Time',FORMAT(TIME),NewNode);
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','StartScanning',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'ScanToPath',ScanToPath,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'PaperJamErrorMessage',PaperJamErrorMessage,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'Duplex',XmlLib.Bool2Text(Duplex),NewNode);
      XmlLib.CreateXmlNode(ParamNode,'MultiPage',XmlLib.Bool2Text(MultiPage),NewNode);
    END;

    PROCEDURE BuildMatchInfoBarCommand@161024013(VAR XmlDoc@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";OrderNoCaption@161024017 : Text[1024];OrderNoValue@161024012 : Text[1024];AmountToMatchCaption@161024013 : Text[1024];AmountToMatchValue@161024014 : Text[1024];MatchedAmountCaption@161024016 : Text[1024];MatchedAmountValue@161024015 : Text[1024];MatchDiffAmountCaption@6085574 : Text[1024];MatchDiffAmountValue@6085573 : Text[1024]);
    VAR
      CommandNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetInfo',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'orderNoCaption',OrderNoCaption,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'orderNoValue',OrderNoValue,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'amountToMatchCaption',AmountToMatchCaption,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'amountToMatchValue',AmountToMatchValue,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'matchedAmountCaption',MatchedAmountCaption,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'matchedAmountValue',MatchedAmountValue,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'matchDiffAmountCaption',MatchDiffAmountCaption,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'matchDiffAmountValue',MatchDiffAmountValue,NewNode);
    END;

    PROCEDURE BuildFileMenuCommand@6085573(VAR XmlDoc@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";DropFilesCaption@161024017 : Text[1024];BrowseCaption@6085573 : Text[1024];NewFileCaption@6085574 : Text[1024]);
    VAR
      CommandNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetInfo',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'dropFilesCaption',DropFilesCaption,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'browseCaption',BrowseCaption,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'newFileCaption',NewFileCaption,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'time',FORMAT(TIME),NewNode);
    END;

    PROCEDURE BuildCreateNewFileCommand@6085574(VAR XmlDoc@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";Type@161024017 : Text[1024];Filename@6085573 : Text[1024];DocumentNo@6085574 : Code[20];WaitForExit@6085575 : Boolean);
    VAR
      CommandNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','CreateNew',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'type',Type,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'filename',Filename,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'documentNo',DocumentNo,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'waitForExit',XmlLib.Bool2Text(WaitForExit),NewNode);
      XmlLib.CreateXmlNode(ParamNode,'time',FORMAT(TIME),NewNode);
    END;

    PROCEDURE BuildCopyFileCommand@6085575(VAR XmlDoc@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";Type@161024017 : Text[1024];Filename@6085573 : Text[1024];CategoryCode@6085574 : Code[20]);
    VAR
      CommandNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','CopyFile',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'fromFilename',Type,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'toFilename',Filename,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'categoryCode',CategoryCode,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'time',FORMAT(TIME),NewNode);
    END;

    PROCEDURE BuildMoveFileCommand@6085579(VAR XmlDoc@6085575 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";Type@6085574 : Text;Filename@6085576 : Text;CategoryCode@6085577 : Code[20]);
    VAR
      CommandNode@6085573 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@6085578 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@6085579 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','MoveFile',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'fromFilename',Type,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'toFilename',Filename,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'categoryCode',CategoryCode,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'time',FORMAT(TIME),NewNode);
    END;

    PROCEDURE BuildOpenFileCommand@6085576(VAR XmlDoc@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";Filename@6085573 : Text[1024];DocumentNo@6085574 : Code[20];WaitForExit@6085575 : Boolean);
    VAR
      CommandNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1000000002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','OpenFile',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);
      XmlLib.CreateXmlNode(ParamNode,'filename','"' + Filename + '"',NewNode);
      XmlLib.CreateXmlNode(ParamNode,'documentNo',DocumentNo,NewNode);
      XmlLib.CreateXmlNode(ParamNode,'waitForExit',XmlLib.Bool2Text(WaitForExit),NewNode);
      XmlLib.CreateXmlNode(ParamNode,'time',FORMAT(TIME),NewNode);
    END;

    PROCEDURE BuildDocListSetupCommand@6085577(VAR XmlDoc@6085573 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";IsInfoPane@6085574 : Boolean);
    VAR
      CommandNode@6085575 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@6085576 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ActionsNode@6085577 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ActionNode@6085578 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ColumnsNode@6085579 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ColumnNode@6085580 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@6085581 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetDocListSetup',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);

      // Build the actions
      XmlLib.CreateXmlNode(ParamNode,'actions','',ActionsNode);

      XmlLib.CreateXmlNode(ActionsNode,'action','',ActionNode);
      XmlLib.CreateXmlNode(ActionNode,'code','OPEN',NewNode);
      XmlLib.CreateXmlNode(ActionNode,'text',Text001,NewNode);
      XmlLib.CreateXmlNode(ActionNode,'image','View',NewNode);

      XmlLib.CreateXmlNode(ActionsNode,'action','',ActionNode);
      XmlLib.CreateXmlNode(ActionNode,'code','RENAME',NewNode);
      XmlLib.CreateXmlNode(ActionNode,'text',Text002,NewNode);

      XmlLib.CreateXmlNode(ActionsNode,'action','',ActionNode);
      XmlLib.CreateXmlNode(ActionNode,'code','DELETE',NewNode);
      XmlLib.CreateXmlNode(ActionNode,'text',Text003,NewNode);
      XmlLib.CreateXmlNode(ActionNode,'image','Delete',NewNode);

      //XmlLib.CreateXmlNode(ActionsNode,'action','',ActionNode);
      //XmlLib.CreateXmlNode(ActionNode,'code','[SEPARATOR]',NewNode);


      // Build the columns
      XmlLib.CreateXmlNode(ParamNode,'columns','',ColumnsNode);

      XmlLib.CreateXmlNode(ColumnsNode,'column','',ColumnNode);
      XmlLib.CreateXmlNode(ColumnNode,'code','name',NewNode);
      XmlLib.CreateXmlNode(ColumnNode,'text',Text004,NewNode);
      IF NOT IsInfoPane THEN BEGIN
        XmlLib.CreateXmlNode(ColumnsNode,'column','',ColumnNode);
        XmlLib.CreateXmlNode(ColumnNode,'code','user',NewNode);
        XmlLib.CreateXmlNode(ColumnNode,'text',Text005,NewNode);
        XmlLib.CreateXmlNode(ColumnNode,'width','150',NewNode);

        XmlLib.CreateXmlNode(ColumnsNode,'column','',ColumnNode);
        XmlLib.CreateXmlNode(ColumnNode,'code','datetime',NewNode);
        XmlLib.CreateXmlNode(ColumnNode,'text',Text006,NewNode);
        XmlLib.CreateXmlNode(ColumnNode,'width','100',NewNode);
      END;
    END;

    PROCEDURE BuildDocListContentCommand@6085578(VAR XmlDoc@6085573 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";VAR TempDoc@6085574 : Record 6085756;IsInfoPane@6085575 : Boolean);
    VAR
      CommandNode@6085576 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ParamNode@6085577 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DocumentsNode@6085578 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DocumentNode@6085579 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@6085580 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XmlDoc) THEN
        XmlLib.CreateXmlDOM(XmlDoc,'root');
      XmlLib.CreateXmlNode(XmlDoc.DocumentElement,'Command','',CommandNode);
      XmlLib.CreateXmlNode(CommandNode,'Name','SetDocListContent',NewNode);
      XmlLib.CreateXmlNode(CommandNode,'Parameters','',ParamNode);

      XmlLib.CreateXmlNode(ParamNode,'documents','',DocumentsNode);

      IF TempDoc.FINDSET THEN
        REPEAT
          XmlLib.CreateXmlNode(DocumentsNode,'document','',DocumentNode);
          XmlLib.CreateXmlNode(DocumentNode,'_no',TempDoc."No.",NewNode);
          XmlLib.CreateXmlNode(DocumentNode,'_filetype',TempDoc."File Type",NewNode);
          XmlLib.CreateXmlNode(DocumentNode,'_bold',XmlLib.Bool2Text(TempDoc.Bold),NewNode);
          XmlLib.CreateXmlNode(DocumentNode,'_indentation',XmlLib.Dec2Text(TempDoc.Indentation),NewNode);
          XmlLib.CreateXmlNode(DocumentNode,'_group',TempDoc."Document Category Code",NewNode);
          XmlLib.CreateXmlNode(DocumentNode,'_isgroup',XmlLib.Bool2Text(TempDoc."Is Group"),NewNode);
          XmlLib.CreateXmlNode(DocumentNode,'name',TempDoc.Description,NewNode);

          IF NOT IsInfoPane THEN BEGIN
            XmlLib.CreateXmlNode(DocumentNode,'user',TempDoc.GetUserName,NewNode);
            XmlLib.CreateXmlNode(DocumentNode,'datetime',FORMAT(TempDoc."Date/Time"),NewNode);
          END;
        UNTIL TempDoc.NEXT = 0;
    END;

    PROCEDURE XmlToBigText@1000000002(VAR XmlDoc@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";VAR BigText@1000000001 : BigText);
    VAR
      CompInfo@1000000002 : TEMPORARY Record 79;
      InStr@1000000004 : InStream;
      OutStr@1000000003 : OutStream;
    BEGIN
      IF ISNULL(XmlDoc) THEN
        EXIT;

      CompInfo.Picture.CREATEOUTSTREAM(OutStr);
      XmlDoc.Save(OutStr);
      CompInfo.Picture.CREATEINSTREAM(InStr);
      BigText.READ(InStr);
    END;

    PROCEDURE BigTextToXml@1000000003(VAR XmlDoc@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";BigText@1000000001 : BigText);
    VAR
      CompInfo@1000000002 : TEMPORARY Record 79;
      InStr@1000000004 : InStream;
      OutStr@1000000003 : OutStream;
      t@1000000005 : Text[30];
    BEGIN
      CompInfo.Picture.CREATEOUTSTREAM(OutStr);
      BigText.WRITE(OutStr);
      CompInfo.Picture.CREATEINSTREAM(InStr);

      XmlDoc := XmlDoc.XmlDocument;
      XmlDoc.Load(InStr);
    END;

    PROCEDURE XmlToText@161024016(VAR XmlDoc@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";VAR Text@1000000001 : Text);
    VAR
      CompInfo@1000000002 : TEMPORARY Record 79;
      InStr@1000000004 : InStream;
      OutStr@1000000003 : OutStream;
    BEGIN
      IF ISNULL(XmlDoc) THEN
        EXIT;

      Text := XmlDoc.InnerXml;
    END;

    PROCEDURE TextToXml@161024015(VAR XmlDoc@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";Text@1000000001 : Text);
    BEGIN
      XmlDoc := XmlDoc.XmlDocument;
      XmlDoc.LoadXml(Text);
    END;

    PROCEDURE BigTextToText@1000000000(BigText@1000000001 : BigText) Text : Text[1024];
    BEGIN
      BigText.GETSUBTEXT(Text,1,BigText.LENGTH);
    END;

    PROCEDURE CreateClientAddInEntries@161024012();
    VAR
      ClientAddIn@161024012 : Record 2000000069;
    BEGIN
      IF NOT ClientAddIn.GET('Akeyto.DocumentCapture.Dynamics.Nav.EventNotifier','61f876910b9e346c','1.0.0.0') THEN BEGIN
        ClientAddIn."Add-in Name" := 'Akeyto.DocumentCapture.Dynamics.Nav.EventNotifier';
        ClientAddIn."Public Key Token" := '61f876910b9e346c';
        ClientAddIn.Version := '1.0.0.0';
        ClientAddIn.INSERT;
      END;

      IF NOT ClientAddIn.GET('Akeyto.DocumentCapture.Dynamics.Nav.Scanner','f91149618a388e69','1.0.0.0') THEN BEGIN
        ClientAddIn."Add-in Name" := 'Akeyto.DocumentCapture.Dynamics.Nav.Scanner';
        ClientAddIn."Public Key Token" := 'f91149618a388e69';
        ClientAddIn.Version := '1.0.0.0';
        ClientAddIn.INSERT;
      END;

      IF NOT ClientAddIn.GET('Akeyto.DocumentCapture.Dynamics.Nav.UI','44fe4ac2c6480df6','1.0.0.0') THEN BEGIN
        ClientAddIn."Add-in Name" := 'Akeyto.DocumentCapture.Dynamics.Nav.UI';
        ClientAddIn."Public Key Token" := '44fe4ac2c6480df6';
        ClientAddIn.Version := '1.0.0.0';
        ClientAddIn.INSERT;
      END;

      IF NOT ClientAddIn.GET('Akeyto.DocumentCapture.Dynamics.Nav.MatchInfoBar','3f74cf6929f40a38','1.0.0.0') THEN BEGIN
        ClientAddIn."Add-in Name" := 'Akeyto.DocumentCapture.Dynamics.Nav.MatchInfoBar';
        ClientAddIn."Public Key Token" := '3f74cf6929f40a38';
        ClientAddIn.Version := '1.0.0.0';
        ClientAddIn.INSERT;
      END;

      IF NOT ClientAddIn.GET('Continia.DocumentCapture.Dynamics.Nav.DocDragAndDrop110','afaa4797ccef7206','1.0.0.0') THEN BEGIN
        ClientAddIn."Add-in Name" := 'Continia.DocumentCapture.Dynamics.Nav.DocDragAndDrop110';
        ClientAddIn."Public Key Token" := 'afaa4797ccef7206';
        ClientAddIn.Version := '1.0.0.0';
        ClientAddIn.INSERT;
      END;

      IF NOT ClientAddIn.GET('Continia.DocumentCapture.Dynamics.Nav.DocDragAndDrop220','afaa4797ccef7206','1.0.0.0') THEN BEGIN
        ClientAddIn."Add-in Name" := 'Continia.DocumentCapture.Dynamics.Nav.DocDragAndDrop220';
        ClientAddIn."Public Key Token" := 'afaa4797ccef7206';
        ClientAddIn.Version := '1.0.0.0';
        ClientAddIn.INSERT;
      END;
    END;

    BEGIN
    END.
  }
}

