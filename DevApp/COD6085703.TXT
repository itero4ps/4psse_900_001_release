OBJECT Codeunit 6085703 Purch. Doc. - Full Capture
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW13.70.00.4.05,4PS9.00;
  }
  PROPERTIES
  {
    TableNo=6085590;
    OnRun=VAR
            GLSetup@1000000015 : Record 98;
            Field@161024020 : Record 6085580;
            TemplField@161024019 : Record 6085580;
            TemplField2@1000000006 : Record 6085580;
            Value@1000000002 : Record 6085593;
            Value2@1000000007 : Record 6085593;
            Template@161024012 : Record 6085579;
            FieldRule@1000000000 : Record 6085583;
            PurchDocMatch@161024013 : Record 6085700;
            Comment@1000000005 : Record 6085594;
            Vendor@1000000003 : Record 23;
            PaymentTerms@1000000004 : Record 3;
            TemplFieldCaption@1000000008 : Record 6085581;
            PurchHeader@161024022 : Record 38;
            CaptionStartWord@1000000011 : ARRAY [100] OF Record 6085592;
            CaptionEndWord@1000000012 : ARRAY [100] OF Record 6085592;
            DataTransl@161024018 : Record 6085584;
            CaptureEngine@1000000010 : Codeunit 6085575;
            CaptionFound@1000000013 : Boolean;
            OrderNo@161024021 : Code[20];
            CodePart@161024014 : Code[250];
            TopMostCodePart@161024017 : Code[250];
            CaptionPart@161024015 : Text[250];
            TopMostY@161024016 : Integer;
            DocType@161024023 : Integer;
            GLAccountNo@1100528200 : Text[30];
            lPaymentTermsCode@1100528201 : Code[20];
          BEGIN
            DeleteComments(Comment.Area::Capture);

            PurchDocMatch.SETRANGE("Document No.","No.");
            PurchDocMatch.DELETEALL(TRUE);

            GLSetup.GET;
            Vendor.GET(GetSourceID);

            // *********************************************************************************************************************************
            // IF CURRENCY CODE HAS NOT BEEN RECOGNIZED, THEN GO GET IT FROM THE VENDOR
            // *********************************************************************************************************************************
            IF Field.GET(Rec."Template No.",Field.Type::Header,'CURRCODE') THEN BEGIN
              IF (NOT CaptureMgt.GetFieldValue(Rec,Field,0,Value)) OR (Value."Value (Text)" = '') THEN BEGIN
                IF Vendor."Currency Code" <> '' THEN BEGIN
                  CaptureMgt.UpdateFieldValue(Rec."No.",0,0,Field,Vendor."Currency Code",TRUE);
                  Comment.Add(Rec,Field,0,Comment.Area::Capture,Comment."Comment Type"::Warning,STRSUBSTNO(Text001,Field."Field Name",
                    LOWERCASE(Vendor.TABLECAPTION)));
                END ELSE
                  CaptureMgt.UpdateFieldValue(Rec."No.",0,0,Field,GLSetup."LCY Code",TRUE);
              END;
            END;

            // *********************************************************************************************************************************
            // FIND THE DOCUMENT TYPE
            // *********************************************************************************************************************************
            Field.GET(Rec."Template No.",Field.Type::Header,'DOCTYPE');
            IF CaptureMgt.GetText(Rec,Field.Type::Header,Field.Code,0) = '' THEN BEGIN
              TemplFieldCaption.SETRANGE("Template No.",Rec."Template No.");
              TemplFieldCaption.SETRANGE(Type,Field.Type);
              TemplFieldCaption.SETRANGE(Code,Field.Code);
              IF TemplFieldCaption.FINDSET(FALSE,FALSE) THEN
                REPEAT
                  IF STRPOS(TemplFieldCaption.Caption,':') <> 0 THEN BEGIN
                    CodePart := DELCHR(COPYSTR(TemplFieldCaption.Caption,1,STRPOS(TemplFieldCaption.Caption,':')-1),'<>',' ');
                    CaptionPart := DELCHR(COPYSTR(TemplFieldCaption.Caption,STRPOS(TemplFieldCaption.Caption,':')+1),'<>',' ');
                    IF (CodePart <> '') AND (CaptionPart <> '') THEN BEGIN
                      TemplFieldCaption.Caption := CaptionPart;
                      IF CaptureEngine.FindCaption(Rec."No.",1,Field,TemplFieldCaption,CaptionStartWord,CaptionEndWord) THEN BEGIN
                        IF (CaptionStartWord[1].Top < TopMostY) OR (TopMostY = 0) THEN BEGIN
                          TopMostY := CaptionStartWord[1].Top;
                          TopMostCodePart := CodePart;
                        END;
                      END;
                    END;
                  END;
                UNTIL TemplFieldCaption.NEXT = 0;

              CaptureMgt.UpdateFieldValue(Rec."No.",0,0,Field,TopMostCodePart,TRUE)
            END;

            //**4PS
            // *********************************************************************************************************************************
            // GET PAYMENT TERMS FROM THE RELATED ORDER, THE MAY DIFFER FROM PAYMENT TERMS FROM THE VENDOR
            // *********************************************************************************************************************************
            lPaymentTermsCode := Vendor."Payment Terms Code";
            IF Field.GET(Rec."Template No.",Field.Type::Header,'DUEDATE') THEN BEGIN
              OrderNo := COPYSTR(PurchDocMgt.GetOurDocumentNo(Rec),1,MAXSTRLEN(OrderNo));
              IF (OrderNo <> '') THEN BEGIN
                IF PurchDocMgt.GetIsInvoice(Rec) THEN
                  DocType := PurchHeader."Document Type"::Order
                ELSE
                  DocType := PurchHeader."Document Type"::"Return Order";

                IF PurchHeader.GET(DocType,OrderNo) THEN
                  IF PurchHeader."Payment Terms Code" <> '' THEN
                    IF PaymentTerms.GET(PurchHeader."Payment Terms Code") THEN
                      lPaymentTermsCode := PurchHeader."Payment Terms Code";

              END;
            END;
            //**4PS.en
            // *********************************************************************************************************************************
            // IF DUE DATE HAS NOT BEEN RECOGNIZED, THEN CALCULATE IT BASED ON THE DOCUMENT DATE AND VENDOR PAYMENT TERMS
            // *********************************************************************************************************************************
            IF Field.GET(Rec."Template No.",Field.Type::Header,'DUEDATE') THEN BEGIN
              IF (NOT CaptureMgt.GetFieldValue(Rec,Field,0,Value)) OR (Value."Value (Date)" = 0D) THEN BEGIN
                IF PurchDocMgt.GetIsInvoice(Rec) THEN BEGIN
                  TemplField.GET(Rec."Template No.",Field.Type::Header,'DOCDATE');
                  IF (CaptureMgt.GetFieldValue(Rec,TemplField,0,Value2)) AND (Value2."Value (Date)" <> 0D) THEN BEGIN
                  //IF PaymentTerms.GET(Vendor."Payment Terms Code") AND (FORMAT(PaymentTerms."Due Date Calculation") <> '') THEN BEGIN //**4PS.o
                    //**4PS.sn
                    IF PaymentTerms.GET(lPaymentTermsCode) AND (FORMAT(PaymentTerms."Due Date Calculation") <> '') THEN BEGIN
                      Template.GET("Template No.");
                      IF Template."Use E-mail Date for Doc. Date" AND ("E-mail Date" <> 0DT) THEN
                        CaptureMgt.UpdateFieldValue(Rec."No.",0,0,Field,
                          FORMAT(CALCDATE(PaymentTerms."Due Date Calculation",DT2DATE("E-mail Date"))),TRUE)
                      ELSE
                    //**4PS.en
                         CaptureMgt.UpdateFieldValue(Rec."No.",0,0,Field,
                           FORMAT(CALCDATE(PaymentTerms."Due Date Calculation",Value2."Value (Date)")),TRUE);
                      //**4PS.sn
                      IF Template."Use E-mail Date for Doc. Date" AND ("E-mail Date" <> 0DT) THEN
                        Comment.Add(Rec, Field, 0, Comment.Area::Capture, Comment."Comment Type"::Warning,
                                    STRSUBSTNO(Text002, Field."Field Name", LOWERCASE(FIELDCAPTION("E-mail Date"))))
                      ELSE
                      //**4PS.en
                        Comment.Add(Rec,Field,0,Comment.Area::Capture,Comment."Comment Type"::Warning,STRSUBSTNO(Text002,Field."Field Name",
                          LOWERCASE(TemplField."Field Name")));
                    END;
                  END;
                END ELSE BEGIN
                  //**4PS.sn
                  Template.GET("Template No.");
                  IF Template."Use E-mail Date for Doc. Date" AND ("E-mail Date" <> 0DT) THEN
                    CaptureMgt.UpdateFieldValue(Rec."No.",0,0,Field,
                      FORMAT(CALCDATE(PaymentTerms."Due Date Calculation",DT2DATE("E-mail Date"))),TRUE)
                  ELSE
                  //**4PS.en
                    CaptureMgt.UpdateFieldValue(Rec."No.",0,0,Field,FORMAT(TODAY),TRUE);
                  Comment.Add(Rec,Field,0,Comment.Area::Capture,Comment."Comment Type"::Warning,STRSUBSTNO(Text003,Field."Field Name"));
                END;
              //**4PS.sn
              END ELSE BEGIN
                IF PaymentTerms.GET(lPaymentTermsCode) AND (FORMAT(PaymentTerms."Due Date Calculation") <> '') THEN BEGIN
                  Template.GET("Template No.");
                  IF Template."Use E-mail Date for Doc. Date" AND ("E-mail Date" <> 0DT) THEN BEGIN
                    CaptureMgt.UpdateFieldValue(Rec."No.",0,0,Field,
                      FORMAT(CALCDATE(PaymentTerms."Due Date Calculation",DT2DATE("E-mail Date"))),TRUE);
                    Comment.Add(Rec, Field, 0, Comment.Area::Capture, Comment."Comment Type"::Warning,
                                STRSUBSTNO(Text002, Field."Field Name", LOWERCASE(FIELDCAPTION("E-mail Date"))));
                  END;
                END;
              END;
              //**4PS.en
            END;

            // *********************************************************************************************************************************
            // IF PURCHASER HAS NOT BEEN FOUND THEN GET IT FROM FROM THE ORDER
            // *********************************************************************************************************************************
            IF Field.GET(Rec."Template No.",Field.Type::Header,'OURCONTACT') THEN BEGIN
              OrderNo := COPYSTR(PurchDocMgt.GetOurDocumentNo(Rec),1,MAXSTRLEN(OrderNo));
              IF (OrderNo <> '') AND (PurchDocMgt.GetOurContact(Rec) = '') THEN BEGIN
                IF PurchDocMgt.GetIsInvoice(Rec) THEN
                  DocType := PurchHeader."Document Type"::Order
                ELSE
                  DocType := PurchHeader."Document Type"::"Return Order";

                IF PurchHeader.GET(DocType,OrderNo) THEN
                  CaptureMgt.UpdateFieldValue(Rec."No.",0,0,Field,PurchHeader."Purchaser Code",TRUE);
              END;
            END;

            // *********************************************************************************************************************************
            // UPDATE POSTING ACCOUNTS FROM DATA TRANSLATION TABLE
            // *********************************************************************************************************************************
            Field.SETRANGE("Template No.",Rec."Template No.");
            Field.SETRANGE(Type,Field.Type::Header);
            Field.SETFILTER("G/L Account Field Code",'<>%1','');
            IF Field.FINDSET THEN
              REPEAT
                IF TemplField2.GET(Field."Template No.",Field.Type,Field."G/L Account Field Code") THEN BEGIN
                  IF (NOT CaptureMgt.GetFieldValue(Rec,TemplField2,0,Value)) OR (Value."Value (Text)" = '') THEN BEGIN
                    DataTransl.SETRANGE("Template No.","Template No.");
                    DataTransl.SETRANGE(Type,Field.Type);
                    DataTransl.SETRANGE("Field Code",Field.Code);

                    IF DataTransl.FINDFIRST AND (DataTransl."Translate to Type" = DataTransl."Translate to Type"::"G/L Account") AND
                      (DataTransl."Translate to No." <> '')
                    THEN
                      CaptureMgt.UpdateFieldValue(Rec."No.",0,0,TemplField2,DataTransl."Translate to No.",TRUE);
                  END;
                END;
              UNTIL Field.NEXT = 0;

            //**4PS
            // *********************************************************************************************************************************
            // UPDATE Account No from the vendor table only when no project is involved, and the field is notfound on the document
            // Field 'GLACCOUNTNO' should be included in the header fields, otherwise it will not be handled
            // *********************************************************************************************************************************
            IF Vendor."Preference Account No." <> '' THEN BEGIN
              IF (PurchDocMgt.GetJobNoHeader(Rec) = '') THEN BEGIN
                GLAccountNo := PurchDocMgt.GetGLAccountNo(Rec, '');
                IF GLAccountNo = '' THEN BEGIN
                  IF Field.GET("Template No.", Field.Type::Header,'GLACCOUNTNO') THEN
                    CaptureMgt.UpdateFieldValue("No.", 0, 0, Field, Vendor."Preference Account No.", TRUE);
                END;
              END;
            END;

            IF NOT "Amounts Only" THEN
            //**4PS.en
              AdjustMissingQty(Rec);

            Template.GET("Template No.");
            IF Template."Purch. Auto Match" THEN
              PurchDocMgt.AutoMatch(Rec);
          END;

  }
  CODE
  {
    VAR
      Text001@1000000000 : TextConst 'ENU=%1 was taken from the %2.';
      Text002@1000000001 : TextConst 'ENU=%1 was calculated based on %2.';
      PurchDocMgt@1000000007 : Codeunit 6085709;
      CaptureMgt@1000000008 : Codeunit 6085576;
      Text003@161024015 : TextConst 'ENU=%1 was set to today.';

    PROCEDURE AdjustMissingQty@1000000000(VAR Document@1000000000 : Record 6085590);
    VAR
      DocumentLine@1000000001 : TEMPORARY Record 6085596;
      Template@1000000007 : Record 6085579;
      Field@1000000006 : Record 6085580;
      UnitCost@1000000002 : Decimal;
      DiscPct@1000000003 : Decimal;
      DiscAmount@1000000004 : Decimal;
      LineAmount@1000000005 : Decimal;
    BEGIN
      Document.BuildTempLinesTable(DocumentLine);

      IF DocumentLine.ISEMPTY THEN
        EXIT;

      Template.GET(Document."Template No.");

      DocumentLine.FINDSET;
      REPEAT
        IF PurchDocMgt.GetLineQuantity(Document,DocumentLine."Line No.") = 0 THEN BEGIN
          UnitCost := PurchDocMgt.GetLineUnitCost(Document,DocumentLine."Line No.");
          IF UnitCost <> 0 THEN BEGIN
            DiscPct := PurchDocMgt.GetLineDiscPct(Document,DocumentLine."Line No.");
            DiscAmount := PurchDocMgt.GetLineDiscAmount(Document,DocumentLine."Line No.");
            LineAmount := PurchDocMgt.GetLineAmount(Document,DocumentLine."Line No.");

            IF DiscAmount <> 0 THEN
              UnitCost := UnitCost - DiscAmount
            ELSE IF DiscPct <> 0 THEN
              UnitCost := UnitCost * ((100-DiscPct) / 100);

            IF NOT PurchDocMgt.AmountsWithinTolerance(Template,UnitCost,LineAmount) THEN BEGIN
              Field.GET(Document."Template No.",Field.Type::Line,'QUANTITY');
              CaptureMgt.UpdateFieldValue(Document."No.",DocumentLine."Page No.",DocumentLine."Line No.",Field,FORMAT(1),TRUE);
            END;
          END;
        END;
      UNTIL DocumentLine.NEXT = 0;
    END;

    BEGIN
    {
      This codeunit performs post-capture actions on purchase documents
    }
    END.
  }
}

