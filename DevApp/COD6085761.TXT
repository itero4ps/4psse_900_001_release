OBJECT Codeunit 6085761 Purch. Doc. - Line Rel. Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW17.00.00.4.00.03;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1160040000 : TextConst 'ENU=You can not change %1 as this is matched to %2 %3.';
      Text002@1160040001 : TextConst 'ENU=%1 %2, Line No. %3, is matched to %4 %5, Line No. %6, which must be posted or deleted before the order can be received.';
      Text003@1160040002 : TextConst 'ENU=%1 %2, Line No. %3, is matched to multiple invoices which must be posted or deleted before the order can be received.';
      Text004@1160040004 : TextConst 'ENU=%1 %2, Line No. %3, is matched to %4 %5, Line No. %6, which must be posted or deleted before the return order can be shipped.';
      Text005@1160040003 : TextConst 'ENU=%1 %2, Line No. %3, is matched to multiple credit memos which must be posted or deleted before the return order can be shipped.';
      Text006@1160040005 : TextConst 'ENU=%1 %2, Line No. %3, is matched to %4 %5 that has been deleted.';
      Text007@1160040006 : TextConst 'ENU=%1 %2, Line No. %3, is matched to %4 %5, Line No. %6 that has been deleted.';

    PROCEDURE PostRelOrderLines@1160040001(VAR PurchHeader@1160040000 : Record 38);
    VAR
      RelPurchHeader@1160040006 : Record 38;
      PurchLine@1160040001 : Record 39;
      RelPurchLine@1160040004 : Record 39;
      PurchLineRel@1160040003 : Record 6085702;
      PurchPost@1160040002 : Codeunit 90;
      PrevDocNo@1160040005 : Code[20];
    BEGIN
      IF NOT (PurchHeader."Document Type" IN [PurchHeader."Document Type"::Invoice,PurchHeader."Document Type"::"Credit Memo"]) THEN
        EXIT;

      // CHECK IF ANY RELATED ORDER/RETURN ORDER LINES EXIST
      PurchLineRel.SETCURRENTKEY("Document Type","Document No.","Related Document Type","Related Document No.","Related Line No.");
      PurchLineRel.SETRANGE("Document Type",PurchHeader."Document Type");
      PurchLineRel.SETRANGE("Document No.",PurchHeader."No.");
      IF PurchLineRel.ISEMPTY THEN
        EXIT;

      // POST EACH ORDER/RETURN ORDER
      IF PurchLineRel.FINDSET THEN
      REPEAT
        IF (PrevDocNo = '') OR (PrevDocNo <> PurchLineRel."Related Document No.") THEN BEGIN

          // POST THE ORDER/RETURN ORDER
          IF PrevDocNo <> '' THEN BEGIN
            RelPurchHeader.TESTFIELD("Pay-to Vendor No.",PurchHeader."Pay-to Vendor No.");
            RelPurchHeader.TESTFIELD("Currency Code",PurchHeader."Currency Code");

            RelPurchHeader.Receive := RelPurchHeader."Document Type" = RelPurchHeader."Document Type"::Order;
            RelPurchHeader.Ship := RelPurchHeader."Document Type" = RelPurchHeader."Document Type"::"Return Order";
            RelPurchHeader.Invoice := FALSE;

            PurchPost.SetRelPurchHeader(PurchHeader);
            PurchPost.RUN(RelPurchHeader);
          END;

          // UPDATE ORDER/RETURN ORDER WITH HEADER INFORMATION FROM INVOICE/CREDIT MEMO
          IF NOT RelPurchHeader.GET(PurchLineRel."Related Document Type",PurchLineRel."Related Document No.") THEN
            ERROR(Text006,PurchLineRel."Document Type",PurchLineRel."Document No.",PurchLineRel."Document Line No.",
              PurchLineRel."Related Document Type",PurchLineRel."Related Document No.");
          RelPurchHeader.SetHideValidationDialog(TRUE);
          RelPurchHeader.VALIDATE("Posting Date",PurchHeader."Posting Date");
          RelPurchHeader.VALIDATE("Document Date",PurchHeader."Document Date");

          RelPurchHeader."Dimension Set ID" := PurchHeader."Dimension Set ID";
          RelPurchHeader."Shortcut Dimension 1 Code" := PurchHeader."Shortcut Dimension 1 Code";
          RelPurchHeader."Shortcut Dimension 2 Code" := PurchHeader."Shortcut Dimension 2 Code";

          RelPurchHeader.MODIFY(TRUE);


          // SET QTY. TO RECEIVE OR RETURN QTY. TO SHIP TO 0 ON ALL LINES
          RelPurchLine.SETRANGE("Document Type",RelPurchHeader."Document Type");
          RelPurchLine.SETRANGE("Document No.",RelPurchHeader."No.");
          IF RelPurchLine.FINDSET THEN
            REPEAT
              IF RelPurchLine."Document Type" = RelPurchLine."Document Type"::Order THEN
                RelPurchLine.VALIDATE("Qty. to Receive",0)
              ELSE
                RelPurchLine.VALIDATE("Return Qty. to Ship",0);
              RelPurchLine.MODIFY(TRUE);
            UNTIL RelPurchLine.NEXT = 0;
        END;


        // SET QTY. TO RECEIVE OR RETURN QTY. TO SHIP TO THE INVOICE/CREDIT QUANTITY
        IF NOT PurchLine.GET(PurchLineRel."Document Type",PurchLineRel."Document No.",PurchLineRel."Document Line No.") THEN
          ERROR(Text007,PurchLineRel."Document Type",PurchLineRel."Document No.",PurchLineRel."Document Line No.",
            PurchLineRel."Related Document Type",PurchLineRel."Related Document No.",PurchLineRel."Related Line No.");

        RelPurchLine.GET(PurchLineRel."Related Document Type",PurchLineRel."Related Document No.",PurchLineRel."Related Line No.");
        IF RelPurchLine."Document Type" = RelPurchLine."Document Type"::Order THEN
          RelPurchLine.VALIDATE("Qty. to Receive",PurchLine.Quantity)
        ELSE
          RelPurchLine.VALIDATE("Return Qty. to Ship",PurchLine.Quantity);

        RelPurchLine."Dimension Set ID" := PurchLine."Dimension Set ID";
        RelPurchLine."Shortcut Dimension 1 Code" := PurchLine."Shortcut Dimension 1 Code";
        RelPurchLine."Shortcut Dimension 2 Code" := PurchLine."Shortcut Dimension 2 Code";

        RelPurchLine.MODIFY(TRUE);

        PrevDocNo := RelPurchLine."Document No.";
      UNTIL PurchLineRel.NEXT = 0;


      // POST THE ORDER/RETURN ORDER
      RelPurchHeader.TESTFIELD("Pay-to Vendor No.",PurchHeader."Pay-to Vendor No.");
      RelPurchHeader.TESTFIELD("Currency Code",PurchHeader."Currency Code");

      RelPurchHeader.Receive := RelPurchHeader."Document Type" = RelPurchHeader."Document Type"::Order;
      RelPurchHeader.Ship := RelPurchHeader."Document Type" = RelPurchHeader."Document Type"::"Return Order";
      RelPurchHeader.Invoice := FALSE;

      PurchPost.SetRelPurchHeader(PurchHeader);
      PurchPost.RUN(RelPurchHeader);
    END;

    PROCEDURE UpdateRelInvLines@1160040000(VAR RelPurchHeader@1160040003 : Record 38;VAR PurchHeader@1160040002 : Record 38;VAR PurchLine@1160040000 : Record 39;VAR PurchRcptLine@1160040001 : Record 121);
    VAR
      PurchLineRel@1160040004 : Record 6085702;
      PurchInvLine@1160040005 : Record 39;
    BEGIN
      PurchLineRel.SETCURRENTKEY("Related Document Type","Related Document No.","Related Line No.");
      PurchLineRel.SETRANGE("Related Document Type",PurchLine."Document Type");
      PurchLineRel.SETRANGE("Related Document No.",PurchLine."Document No.");
      PurchLineRel.SETRANGE("Related Line No.",PurchLine."Line No.");
      IF PurchLineRel.ISEMPTY THEN
        EXIT;

      IF RelPurchHeader."No." = '' THEN BEGIN
        IF PurchLineRel.COUNT = 1 THEN BEGIN
          PurchLineRel.FINDFIRST;
          ERROR(Text002,PurchLine."Document Type",PurchLine."Document No.",PurchLine."Line No.",
            PurchLineRel."Document Type",PurchLineRel."Document No.",PurchLineRel."Document Line No.")
        END ELSE
          ERROR(Text003,PurchLine."Document Type",PurchLine."Document No.",PurchLine."Line No.");
      END;

      RelPurchHeader.TESTFIELD("Document Type",RelPurchHeader."Document Type"::Invoice);

      PurchLineRel.SETRANGE("Document Type",RelPurchHeader."Document Type");
      PurchLineRel.SETRANGE("Document No.",RelPurchHeader."No.");
      IF NOT PurchLineRel.FINDFIRST THEN
        EXIT;

      PurchInvLine.GET(PurchLineRel."Document Type",PurchLineRel."Document No.",PurchLineRel."Document Line No.");
      PurchInvLine."Receipt No." := PurchRcptLine."Document No.";
      PurchInvLine."Receipt Line No." := PurchRcptLine."Line No.";
      PurchInvLine.MODIFY;

      PurchLineRel.DELETE;
    END;

    PROCEDURE UpdateRelCrMemoLines@1160040002(VAR RelPurchHeader@1160040003 : Record 38;VAR PurchHeader@1160040002 : Record 38;VAR PurchLine@1160040000 : Record 39;VAR PurchShptLine@1160040001 : Record 6651);
    VAR
      PurchLineRel@1160040004 : Record 6085702;
      PurchInvLine@1160040005 : Record 39;
    BEGIN
      PurchLineRel.SETCURRENTKEY("Related Document Type","Related Document No.","Related Line No.");
      PurchLineRel.SETRANGE("Related Document Type",PurchLine."Document Type");
      PurchLineRel.SETRANGE("Related Document No.",PurchLine."Document No.");
      PurchLineRel.SETRANGE("Related Line No.",PurchLine."Line No.");
      IF PurchLineRel.ISEMPTY THEN
        EXIT;

      IF RelPurchHeader."No." = '' THEN BEGIN
        IF PurchLineRel.COUNT = 1 THEN BEGIN
          PurchLineRel.FINDFIRST;
          ERROR(Text002,PurchLine."Document Type",PurchLine."Document No.",PurchLine."Line No.",
            PurchLineRel."Document Type",PurchLineRel."Document No.",PurchLineRel."Document Line No.")
        END ELSE
          ERROR(Text003,PurchLine."Document Type",PurchLine."Document No.",PurchLine."Line No.");
      END;

      RelPurchHeader.TESTFIELD("Document Type",RelPurchHeader."Document Type"::"Credit Memo");

      PurchLineRel.SETRANGE("Document Type",RelPurchHeader."Document Type");
      PurchLineRel.SETRANGE("Document No.",RelPurchHeader."No.");
      IF NOT PurchLineRel.FINDFIRST THEN
        EXIT;

      PurchInvLine.GET(PurchLineRel."Document Type",PurchLineRel."Document No.",PurchLineRel."Document Line No.");
      PurchInvLine."Return Shipment No." := PurchShptLine."Document No.";
      PurchInvLine."Return Shipment Line No." := PurchShptLine."Line No.";
      PurchInvLine.MODIFY;

      PurchLineRel.DELETE;
    END;

    BEGIN
    END.
  }
}

