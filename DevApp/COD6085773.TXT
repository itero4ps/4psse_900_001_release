OBJECT Codeunit 6085773 Sales Doc. - Full Capture
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW13.70.00.4.00;
  }
  PROPERTIES
  {
    TableNo=6085590;
    OnRun=VAR
            GLSetup@1000000015 : Record 98;
            Field@161024020 : Record 6085580;
            TemplField@161024019 : Record 6085580;
            TemplField2@1000000006 : Record 6085580;
            Value@1000000002 : Record 6085593;
            Template@161024012 : Record 6085579;
            FieldRule@1000000000 : Record 6085583;
            Comment@1000000005 : Record 6085594;
            Cust@1000000003 : Record 18;
            PurchHeader@161024022 : Record 38;
            DataTransl@161024018 : Record 6085584;
          BEGIN
            DeleteComments(Comment.Area::Capture);

            GLSetup.GET;
            Cust.GET(GetSourceID);

            IF SalesDocMgnt.GetOurDocNo(Rec) <> '' THEN BEGIN
              SalesDocMgnt.UpdateDefDocValFromOrder(Rec,SalesDocMgnt.GetOurDocNo(Rec));
              EXIT;
            END;

            // *********************************************************************************************************************************
            // IF SALESPERSON HAS NOT BEEN FOUND THEN GET IT FROM FROM THE CUSTOMER
            // *********************************************************************************************************************************
            IF Field.GET(Rec."Template No.",Field.Type::Header,'OURCONTACT') THEN
              IF SalesDocMgnt.GetOurContact(Rec) = '' THEN
                CaptureMgnt.UpdateFieldValue(Rec."No.",0,0,Field,Cust."Salesperson Code",TRUE);


            // *********************************************************************************************************************************
            // IF CURRENCY CODE HAS NOT BEEN RECOGNIZED, THEN GO GET IT FROM THE CUSTOMER
            // *********************************************************************************************************************************
            IF Field.GET(Rec."Template No.",Field.Type::Header,'CURRCODE') THEN BEGIN
              IF (NOT CaptureMgnt.GetFieldValue(Rec,Field,0,Value)) OR (Value."Value (Text)" = '') THEN BEGIN
                IF Cust."Currency Code" <> '' THEN BEGIN
                  CaptureMgnt.UpdateFieldValue(Rec."No.",0,0,Field,Cust."Currency Code",TRUE);
                  Comment.Add(Rec,Field,0,Comment.Area::Capture,Comment."Comment Type"::Warning,STRSUBSTNO(Text001,Field."Field Name",
                    LOWERCASE(Cust.TABLECAPTION)));
                END ELSE
                  CaptureMgnt.UpdateFieldValue(Rec."No.",0,0,Field,GLSetup."LCY Code",TRUE);
              END;
            END;


            // *********************************************************************************************************************************
            // UPDATE POSTING ACCOUNTS FROM DATA TRANSLATION TABLE
            // *********************************************************************************************************************************
            Field.SETRANGE("Template No.",Rec."Template No.");
            Field.SETRANGE(Type,Field.Type::Header);
            Field.SETFILTER("G/L Account Field Code",'<>%1','');
            IF Field.FINDSET THEN
              REPEAT
                IF TemplField2.GET(Field."Template No.",Field.Type,Field."G/L Account Field Code") THEN BEGIN
                  IF (NOT CaptureMgnt.GetFieldValue(Rec,TemplField2,0,Value)) OR (Value."Value (Text)" = '') THEN BEGIN
                    DataTransl.SETRANGE("Template No.","Template No.");
                    DataTransl.SETRANGE(Type,Field.Type);
                    DataTransl.SETRANGE("Field Code",Field.Code);

                    IF DataTransl.FINDFIRST AND (DataTransl."Translate to Type" = DataTransl."Translate to Type"::"G/L Account") AND
                      (DataTransl."Translate to No." <> '')
                    THEN
                      CaptureMgnt.UpdateFieldValue(Rec."No.",0,0,TemplField2,DataTransl."Translate to No.",TRUE);
                  END;
                END;
              UNTIL Field.NEXT = 0;

            AdjustMissingQty(Rec);

            Template.GET("Template No.");
          END;

  }
  CODE
  {
    VAR
      Text001@1000000000 : TextConst 'ENU=%1 was taken from the %2.';
      SalesDocMgnt@1000000007 : Codeunit 6085770;
      CaptureMgnt@1000000008 : Codeunit 6085576;

    PROCEDURE AdjustMissingQty@1000000000(VAR Document@1000000000 : Record 6085590);
    VAR
      DocumentLine@1000000001 : TEMPORARY Record 6085596;
      Template@1000000007 : Record 6085579;
      Field@1000000006 : Record 6085580;
      UnitCost@1000000002 : Decimal;
      DiscPct@1000000003 : Decimal;
      DiscAmount@1000000004 : Decimal;
      LineAmount@1000000005 : Decimal;
    BEGIN
      Document.BuildTempLinesTable(DocumentLine);

      IF DocumentLine.ISEMPTY THEN
        EXIT;

      Template.GET(Document."Template No.");

      IF DocumentLine.FINDSET THEN
        REPEAT
          IF SalesDocMgnt.GetLineQuantity(Document,DocumentLine."Line No.") = 0 THEN BEGIN
            UnitCost := SalesDocMgnt.GetLineUnitCost(Document,DocumentLine."Line No.");
            IF UnitCost <> 0 THEN BEGIN
              DiscPct := SalesDocMgnt.GetLineDiscPct(Document,DocumentLine."Line No.");
              DiscAmount := SalesDocMgnt.GetLineDiscAmount(Document,DocumentLine."Line No.");
              LineAmount := SalesDocMgnt.GetLineAmount(Document,DocumentLine."Line No.");

              IF DiscAmount <> 0 THEN
                UnitCost := UnitCost - DiscAmount
              ELSE IF DiscPct <> 0 THEN
                UnitCost := UnitCost * ((100-DiscPct) / 100);

              IF UnitCost = LineAmount THEN BEGIN
                Field.GET(Document."Template No.",Field.Type::Line,'QUANTITY');
                CaptureMgnt.UpdateFieldValue(Document."No.",DocumentLine."Page No.",DocumentLine."Line No.",Field,FORMAT(1),TRUE);
              END;
            END;
          END;
        UNTIL DocumentLine.NEXT = 0;
    END;

    BEGIN
    {
      This codeunit performs post-capture actions on sales documents
    }
    END.
  }
}

