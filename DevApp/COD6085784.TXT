OBJECT Codeunit 6085784 DC App. Mgmt. Extension
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW19.00.00.4.04,4PS9.00;
  }
  PROPERTIES
  {
    SingleInstance=Yes;
    OnRun=VAR
            RecRef@1160040000 : RecordRef;
          BEGIN
          END;

  }
  CODE
  {
    VAR
      DocumentCaptureMgt@1000 : Codeunit 6085603;

    [EventSubscriber(Codeunit,1,OnAfterGetDatabaseTableTriggerSetup,"",Skip)]
    PROCEDURE GetTableTriggerSetup@1(TableId@1000 : Integer;VAR OnDatabaseInsert@1001 : Boolean;VAR OnDatabaseModify@1002 : Boolean;VAR OnDatabaseDelete@1003 : Boolean;VAR OnDatabaseRename@1004 : Boolean);
    BEGIN
      IF TableId IN
        [DATABASE::User,
         DATABASE::"User Property",
         DATABASE::"Access Control",
         DATABASE::"Permission Set",
         DATABASE::Permission,
         DATABASE::"Change Log Setup",
         DATABASE::"Change Log Setup (Table)",
         DATABASE::"Change Log Setup (Field)"]
      THEN
        EXIT;

      DocumentCaptureMgt.GetTableTriggerSetup(TableId,OnDatabaseInsert,OnDatabaseModify,OnDatabaseDelete,OnDatabaseRename);
    END;

    [EventSubscriber(Codeunit,1,OnAfterOnDatabaseInsert,"",Skip)]
    PROCEDURE Insert@1160040007(RecRef@1000 : RecordRef);
    BEGIN
      DocumentCaptureMgt.Insert(RecRef);
    END;

    [EventSubscriber(Codeunit,1,OnAfterOnDatabaseInsert,"",Skip)]
    PROCEDURE Modify@1160040006(RecRef@1000 : RecordRef);
    BEGIN
      DocumentCaptureMgt.Modify(RecRef);
    END;

    [EventSubscriber(Codeunit,1,OnAfterOnDatabaseDelete,"",Skip)]
    PROCEDURE Delete@1160040005(RecRef@1000 : RecordRef);
    BEGIN
      DocumentCaptureMgt.Delete(RecRef);
    END;

    [EventSubscriber(Codeunit,1,OnAfterOnDatabaseRename,"",Skip)]
    PROCEDURE Rename@1160040003(RecRef@1000 : RecordRef;xRecRef@1001 : RecordRef);
    BEGIN
      DocumentCaptureMgt.Rename(RecRef,xRecRef);
    END;

    [EventSubscriber(Codeunit,1,OnAfterCompanyOpen,"",Skip)]
    LOCAL PROCEDURE CompanyOpen@2();
    BEGIN
      DocumentCaptureMgt.CompanyOpen;
    END;

    BEGIN
    {
      **4PS.s
      Property 'OnMissingLicense' on all EventSubscriber functions changed from ERROR to SKIP.
      Because DynamicsNAV Client is halted with an error for Users with no DC-License, having this CU in de Object List.

      Definition "OnMissingLicense Property": Specifies what happens to the event subscriber function call when the license
      of the Microsoft Dynamics NAV user account that is running the current session does not include the codeunit
      that contains the subscriber function.
      **4PS.e
    }
    END.
  }
}

