OBJECT Codeunit 6086001 Approval Functions (WS)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW17.00.00.4.04,4PS9.00;
  }
  PROPERTIES
  {
    Permissions=TableData 454=m,
                TableData 455=rim,
                TableData 6085590=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@161024013 : TextConst 'ENU=You are not allowed to reject this document.';
      Text002@161024012 : TextConst 'ENU=You are not allowed to approve this document.';
      NSTLanguageId@161024015 : Integer;
      Text003@161024014 : TextConst 'ENU=You are not allowed to forward this document.';
      Text004@161024016 : TextConst 'ENU=You are not allowed to put this document on hold.';
      Text005@161024017 : TextConst 'ENU=You are not allowed to remove this document from on hold.';
      Text006@161024018 : TextConst 'ENU=Your approval limit does not allow you to forward this %1.';

    PROCEDURE AddDocumentLine@161024019(DocumentType@161024012 : Integer;DocumentNo@161024013 : Code[20];VAR NewLineNo@161024015 : Integer);
    VAR
      PurchLine@161024014 : Record 39;
    BEGIN
      ActivateDefaultLanguage;

      PurchLine.SETRANGE("Document Type",DocumentType);
      PurchLine.SETRANGE("Document No.",DocumentNo);
      IF PurchLine.FINDLAST THEN
        NewLineNo := PurchLine."Line No." + 10000
      ELSE
        NewLineNo := 10000;

      PurchLine.INIT;
      PurchLine.VALIDATE("Document Type",DocumentType);
      PurchLine.VALIDATE("Document No.",DocumentNo);
      PurchLine."Line No." := NewLineNo;
      PurchLine.INSERT(TRUE);

      GLOBALLANGUAGE := NSTLanguageId;
    END;

    PROCEDURE CopyDocumentLine@1160040002(DocumentType@1160040002 : Integer;DocumentNo@1160040001 : Code[20];LineNo@1160040003 : Integer;VAR NewLineNo@1160040000 : Integer);
    VAR
      PurchLine@1160040004 : Record 39;
      PurchLine2@1160040005 : Record 39;
      NextLineNo@1160040006 : Integer;
    BEGIN
      PurchLine.GET(DocumentType,DocumentNo,LineNo);

      PurchLine2 := PurchLine;
      PurchLine2.SETRANGE("Document Type",PurchLine2."Document Type");
      PurchLine2.SETRANGE("Document No.",PurchLine2."Document No.");

      IF PurchLine2.NEXT = 1 THEN BEGIN
        NextLineNo := PurchLine2."Line No." - PurchLine."Line No.";
        IF NextLineNo = 1 THEN BEGIN
          PurchLine2.FINDLAST;
          NextLineNo := PurchLine2."Line No." + 10000;
        END ELSE BEGIN
          NextLineNo := PurchLine."Line No." + ROUND(NextLineNo/2,1);
        END;
      END ELSE
        NextLineNo := PurchLine."Line No." + 10000;

      PurchLine2.RESET;
      PurchLine2."Document Type" := PurchLine."Document Type";
      PurchLine2."Document No." := PurchLine."Document No.";
      PurchLine2."Line No." := NextLineNo;
      PurchLine2.INSERT(TRUE);

      PurchLine2.SuspendStatusCheck(TRUE);
      PurchLine2.VALIDATE(Type,PurchLine.Type);
      PurchLine2.VALIDATE("No.",PurchLine."No.");
      PurchLine2.VALIDATE(Description,PurchLine.Description);
      PurchLine2.VALIDATE("Gen. Prod. Posting Group",PurchLine."Gen. Prod. Posting Group");
      PurchLine2.VALIDATE("VAT Prod. Posting Group",PurchLine."VAT Prod. Posting Group");
      PurchLine2.VALIDATE("Posting Group",PurchLine."Posting Group");
      PurchLine2.VALIDATE("Location Code",PurchLine."Location Code");
      PurchLine2.VALIDATE("Unit of Measure Code",PurchLine."Unit of Measure Code");
      PurchLine2.VALIDATE("FA Posting Type",PurchLine."FA Posting Type");
      PurchLine2.VALIDATE(Quantity,PurchLine.Quantity);
      PurchLine2.VALIDATE("Direct Unit Cost",PurchLine."Direct Unit Cost");
      PurchLine2.VALIDATE("Line Discount %",PurchLine."Line Discount %");
      PurchLine2.VALIDATE("Job No.",PurchLine."Job No.");

      PurchLine2.MODIFY(TRUE);

      NewLineNo := PurchLine2."Line No.";
    END;

    PROCEDURE DeleteDocumentLine@161024020(DocumentType@161024012 : Integer;DocumentNo@161024013 : Code[20];LineNo@161024015 : Integer);
    VAR
      PurchLine@161024014 : Record 39;
    BEGIN
      ActivateDefaultLanguage;

      PurchLine.GET(DocumentType,DocumentNo,LineNo);
      PurchLine.SuspendStatusCheck(TRUE);
      PurchLine.DELETE(TRUE);

      GLOBALLANGUAGE := NSTLanguageId;
    END;

    PROCEDURE GetDocumentFile@1160040003(DocNo@1160040005 : Code[20];ToUrl@1160040001 : Text[1024]);
    VAR
      Document@1160040000 : Record 6085590;
      OnlineMgt@1160040002 : Codeunit 6086500;
    BEGIN
      Document.GET(DocNo);
      IF Document."File Type" = Document."File Type"::OCR THEN
        OnlineMgt.UploadFile(Document.GetPDFServerFileName,ToUrl,FALSE)
      ELSE
        OnlineMgt.UploadFile(Document.GetMiscFileName,ToUrl,FALSE);
    END;

    PROCEDURE GetXmlFile@6085573(TableID@6085580 : Integer;DocumentType@6085574 : Integer;DocumentNo@6085573 : Code[20];XmlToUrl@6085575 : Text[1024];XslToUrl@6085576 : Text[1024]) : Boolean;
    VAR
      TempDocFileInfo@6085578 : Record 6085600;
      Object@6085577 : Record 2000000001;
      OnlineMgt@6085579 : Codeunit 6086500;
    BEGIN
      IF NOT Object.GET(Object.Type::Codeunit,'',6014371) THEN
        EXIT;

      TempDocFileInfo."Document Type" := TableID;
      TempDocFileInfo."Document Subtype" := DocumentType;
      TempDocFileInfo."Document ID" := DocumentNo;
      IF NOT CODEUNIT.RUN(6014371,TempDocFileInfo) THEN
        EXIT;

      IF TempDocFileInfo."XML Filename" <> '' THEN
        OnlineMgt.UploadFile(TempDocFileInfo."XML Filename",XmlToUrl,FALSE);

      IF TempDocFileInfo."XSL Filename" <> '' THEN
        OnlineMgt.UploadFile(TempDocFileInfo."XSL Filename",XslToUrl,FALSE);

      EXIT(TempDocFileInfo."XML Filename" <> '');
    END;

    PROCEDURE AddDocumentFile@1160040001(TableID@1160040008 : Integer;DocumentType@1160040000 : Integer;DocumentNo@1160040001 : Code[20];Description@1160040002 : Text[80];Username@1160040003 : Code[50];FileExt@1160040004 : Text[30];FromUrl@1160040005 : Text[1024];VAR NewDocumentNo@1160040006 : Code[20]);
    VAR
      Document@1160040007 : Record 6085590;
      OnlineMgt@1160040010 : Codeunit 6086500;
    BEGIN
      Document.INSERT(TRUE);
      Document."Created Doc. Type" := TableID;
      Document."Created Doc. Subtype" := DocumentType;
      Document."Created Doc. ID" := DocumentNo;
      Document.Status := Document.Status::Registered;
      Document.Description := Description;
      Document."File Extension" := FileExt;
      Document."File Type" := Document."File Type"::Miscellaneous;
      Document."Imported by" := Username;
      Document."Allow Delete" := TRUE;
      Document.MODIFY(TRUE);

      NewDocumentNo := Document."No.";

      OnlineMgt.DownloadFile(FromUrl,Document.GetMiscFileName,FALSE);
    END;

    PROCEDURE GetApprovalPDF@1160040004(MenuCode@1160040007 : Code[20];SubMenuCode@1160040008 : Code[20];TableID@1160040014 : Integer;DocumentType@1160040002 : Integer;DocumentNo@1160040001 : Code[20];ApproverId@1160040000 : Code[50];ToUrl@6085573 : Text);
    VAR
      DCSetup@1160040011 : Record 6085573;
      ApprovalEntry@1160040003 : Record 454;
      ApprovalPDFReport@1160040012 : Record 6086012;
      SalesHeader@1160040005 : Record 36;
      PurchHeader@1160040013 : Record 38;
      FileSystemMgt@1160040006 : Codeunit 6085584;
      OnlineMgt@1160040009 : Codeunit 6086500;
      Path@1160040010 : Text[1024];
      Filename@1160040004 : Text[1024];
    BEGIN
      DCSetup.GET;

      ApprovalPDFReport.GET(TableID,DocumentType);
      ApprovalPDFReport.TESTFIELD("PDF Report ID");

      IF DCSetup."Company Code in Archive" AND (DCSetup."Company Code" <> '') THEN
        Path := DCSetup."Miscellaneous File Path" + '\' + DCSetup."Company Code"
      ELSE
        Path := DCSetup."Miscellaneous File Path";

      Path := STRSUBSTNO('%1\%2\%3\',Path,MenuCode,SubMenuCode);
      Filename := STRSUBSTNO('%1\%2 - %3.PDF',Path,DocumentType,DocumentNo);

      IF NOT FileSystemMgt.DirectoryExists(Path) THEN
        FileSystemMgt.CreateDirectory(Path);

      IF NOT FILE.EXISTS(Filename) THEN BEGIN
        CASE TableID OF
          DATABASE::"Sales Header":
            BEGIN
              SalesHeader.GET(DocumentType,DocumentNo);
              SalesHeader.SETRECFILTER;
              REPORT.SAVEASPDF(ApprovalPDFReport."PDF Report ID",Filename,SalesHeader);
            END;

          DATABASE::"Purchase Header":
            BEGIN
              PurchHeader.GET(DocumentType,DocumentNo);
              PurchHeader.SETRECFILTER;
              REPORT.SAVEASPDF(ApprovalPDFReport."PDF Report ID",Filename,PurchHeader);
            END;
        END;
      END;

      OnlineMgt.UploadFile(Filename,ToUrl,FALSE);
    END;

    PROCEDURE DeleteDocumentFile@1160040000(DocumentNo@1160040000 : Code[20]);
    VAR
      Document@1160040001 : Record 6085590;
    BEGIN
      ActivateDefaultLanguage;

      Document.GET(DocumentNo);
      Document.DELETE(TRUE);

      GLOBALLANGUAGE := NSTLanguageId;
    END;

    PROCEDURE AddApprCmtLine@161024012(TableID@1160040000 : Integer;DocumentType@161024012 : Integer;DocumentNo@161024013 : Code[20];_UserID@161024014 : Code[50];Comment@161024016 : Text[1024]);
    VAR
      ApprovalCmtLine@161024017 : Record 455;
      NextEntryNo@6085573 : Integer;
    BEGIN
      IF ApprovalCmtLine.FINDLAST THEN
        NextEntryNo := ApprovalCmtLine."Entry No.";

      WHILE Comment <> '' DO BEGIN
        NextEntryNo := NextEntryNo + 1;
        CLEAR(ApprovalCmtLine);
        ApprovalCmtLine."Entry No." := NextEntryNo;
        ApprovalCmtLine."Table ID" := TableID;
        ApprovalCmtLine."Document Type" := DocumentType;
        ApprovalCmtLine."Document No." := DocumentNo;
        ApprovalCmtLine."Date and Time" := CURRENTDATETIME;
        ApprovalCmtLine."User ID" := _UserID;
        ApprovalCmtLine.Comment := COPYSTR(Comment,1,MAXSTRLEN(ApprovalCmtLine.Comment));
        Comment := COPYSTR(Comment,MAXSTRLEN(ApprovalCmtLine.Comment)+1);
        ApprovalCmtLine.INSERT;
      END;
    END;

    PROCEDURE Approve@161024013(MenuCode@1160040003 : Code[20];SubMenuCode@1160040002 : Code[20];TableID@1160040000 : Integer;DocumentType@161024012 : Integer;DocumentNo@161024013 : Code[20];ApproverId@161024014 : Code[50];VAR NextTableID@1160040004 : Integer;VAR NextDocumentType@161024015 : Integer;VAR NextDocumentNo@161024016 : Code[20];VAR NextApproverId@161024019 : Text[250]);
    VAR
      ApprovalEntry@161024017 : Record 454;
      PurchHeader@161024021 : Record 38;
      SalesHeader@1160040001 : Record 36;
      DCApprovalsBridge@6085573 : Codeunit 6085790;
      DCApprovalMgnt@161024020 : Codeunit 6085722;
      WebUserFunc@1160040005 : Codeunit 6086002;
    BEGIN
      ActivateDefaultLanguage;

      FilterApprovalEntry(ApprovalEntry,TableID,DocumentType,DocumentNo,ApproverId,ApprovalEntry.Status::Open);
      IF NOT ApprovalEntry.FINDFIRST THEN
        FilterApprovalEntry(ApprovalEntry,TableID,DocumentType,DocumentNo,DCApprovalMgnt.GetApprovalSharingToUserFilter(ApproverId),ApprovalEntry.Status::Open);

      IF NOT ApprovalEntry.FINDFIRST THEN
        ERROR(Text002);

      DCApprovalsBridge.SetCurrentUser(ApproverId);
      DCApprovalsBridge.ApproveApprovalRequest(ApprovalEntry);

      CASE TableID OF
        DATABASE::"Sales Header":
          BEGIN
            SalesHeader.GET(DocumentType,DocumentNo);
            IF SalesHeader."On Hold" <> '' THEN BEGIN
              SalesHeader."On Hold" := '';
              SalesHeader.MODIFY(TRUE);
            END;

            NextApproverId := DCApprovalMgnt.GetApproverDisplayName(DCApprovalMgnt.GetNextApproverSales(SalesHeader));
          END;


        DATABASE::"Purchase Header":
          BEGIN
            PurchHeader.GET(DocumentType,DocumentNo);
            IF PurchHeader."On Hold" <> '' THEN BEGIN
              PurchHeader."On Hold" := '';
              PurchHeader.MODIFY(TRUE);
            END;

            NextApproverId := DCApprovalMgnt.GetApproverDisplayName(DCApprovalMgnt.GetNextApprover(PurchHeader));
          END;
      END;

      WebUserFunc.UpdateWebUserCompany(ApproverId);

      GetNextDocId(MenuCode,SubMenuCode,NextTableID,NextDocumentType,NextDocumentNo,ApproverId);

      GLOBALLANGUAGE := NSTLanguageId;
    END;

    PROCEDURE Reject@161024014(MenuCode@1160040003 : Code[20];SubMenuCode@1160040002 : Code[20];TableID@1160040000 : Integer;DocumentType@161024012 : Integer;DocumentNo@161024013 : Code[20];ApproverId@161024014 : Code[50];VAR NextTableID@1160040004 : Integer;VAR NextDocumentType@161024015 : Integer;VAR NextDocumentNo@161024016 : Code[20]);
    VAR
      ApprovalEntry@161024018 : Record 454;
      SalesHeader@161024019 : Record 36;
      PurchHeader@1160040001 : Record 38;
      DCApprovalsBridge@6085573 : Codeunit 6085790;
      DCApprovalMgnt@161024020 : Codeunit 6085722;
      WebSearchMgnt@161024021 : Codeunit 6085748;
      WebUserFunc@1160040005 : Codeunit 6086002;
    BEGIN
      ActivateDefaultLanguage;

      FilterApprovalEntry(ApprovalEntry,TableID,DocumentType,DocumentNo,ApproverId,ApprovalEntry.Status::Open);
      IF NOT ApprovalEntry.FINDFIRST THEN
        FilterApprovalEntry(ApprovalEntry,TableID,DocumentType,DocumentNo,DCApprovalMgnt.GetApprovalSharingToUserFilter(ApproverId),ApprovalEntry.Status::Open);

      IF NOT ApprovalEntry.FINDFIRST THEN
        ERROR(Text001);

      DCApprovalsBridge.SetCurrentUser(ApproverId);
      DCApprovalsBridge.RejectApprovalRequest(ApprovalEntry);

      CASE TableID OF
        DATABASE::"Sales Header":
          BEGIN
            SalesHeader.GET(DocumentType,DocumentNo);
            SalesHeader."On Hold" := '';
            SalesHeader.MODIFY(TRUE);
          END;

        DATABASE::"Purchase Header":
          BEGIN
            PurchHeader.GET(DocumentType,DocumentNo);
            PurchHeader."On Hold" := '';
            PurchHeader.MODIFY(TRUE);
          END;
      END;

      WebSearchMgnt.UpdateWebSearchFromAppvlEntry(ApprovalEntry,ApprovalEntry."Approver ID");
      WebSearchMgnt.UpdateWebSearchFromAppvlEntry(ApprovalEntry,ApproverId);

      WebUserFunc.UpdateWebUserCompany(ApproverId);

      GetNextDocId(MenuCode,SubMenuCode,NextTableID,NextDocumentType,NextDocumentNo,ApproverId);

      GLOBALLANGUAGE := NSTLanguageId;
    END;

    PROCEDURE Delegate@161024015(MenuCode@1160040003 : Code[20];SubMenuCode@1160040002 : Code[20];TableID@1160040000 : Integer;DocumentType@161024012 : Integer;DocumentNo@161024013 : Code[20];ApproverId@161024014 : Code[50];DelegateToUserId@161024017 : Code[50];DelegateAction@161024026 : Integer;VAR NextTableID@1160040004 : Integer;VAR NextDocumentType@161024015 : Integer;VAR NextDocumentNo@161024016 : Code[20]);
    VAR
      ApprovalEntry@161024019 : Record 454;
      Language@161024025 : Record 8;
      PurchHeader@161024020 : Record 38;
      SalesHeader@1160040001 : Record 36;
      DCApprovalMgnt@161024021 : Codeunit 6085722;
      WebUserFunc@1160040005 : Codeunit 6086002;
      ApprovalAction@1000 : 'ApproveAndDelegate,DelegateWithoutApproval,DelegateAndSendBack';
    BEGIN
      ActivateDefaultLanguage;

      FilterApprovalEntry(ApprovalEntry,TableID,DocumentType,DocumentNo,ApproverId,ApprovalEntry.Status::Open);
      IF NOT ApprovalEntry.FINDFIRST THEN
        FilterApprovalEntry(ApprovalEntry,TableID,DocumentType,DocumentNo,DCApprovalMgnt.GetApprovalSharingToUserFilter(ApproverId),ApprovalEntry.Status::Open);

      IF NOT ApprovalEntry.FINDFIRST THEN
        ERROR(Text006);

      DCApprovalMgnt.SetCurrUserID(ApproverId);
      DCApprovalMgnt.DelegateApprovalRequest2(ApprovalEntry,DelegateAction,DelegateToUserId);

      CASE TableID OF
        DATABASE::"Sales Header":
          BEGIN
            SalesHeader.GET(DocumentType,DocumentNo);
            IF SalesHeader."On Hold" <> '' THEN BEGIN
              SalesHeader."On Hold" := '';
              SalesHeader.MODIFY(TRUE);
            END;
          END;

        DATABASE::"Purchase Header":
          BEGIN
            PurchHeader.GET(DocumentType,DocumentNo);
            IF PurchHeader."On Hold" <> '' THEN BEGIN
              PurchHeader."On Hold" := '';
              PurchHeader.MODIFY(TRUE);
            END;
          END;
      END;

      GLOBALLANGUAGE := NSTLanguageId;

      WebUserFunc.UpdateWebUserCompany(ApproverId);

      GetNextDocId(MenuCode,SubMenuCode,NextTableID,NextDocumentType,NextDocumentNo,ApproverId);
    END;

    PROCEDURE PutOnHold@161024021(TableID@1160040000 : Integer;DocumentType@161024014 : Integer;DocumentNo@161024013 : Code[20];ApproverId@161024012 : Code[50]);
    VAR
      ApprovalEntry@161024015 : Record 454;
      PurchHeader@161024016 : Record 38;
      SalesHeader@1160040001 : Record 36;
      ApprovalCmtLine@161024017 : Record 455;
      DCApprovalMgnt@161024018 : Codeunit 6085722;
    BEGIN
      ActivateDefaultLanguage;

      FilterApprovalEntry(ApprovalEntry,TableID,DocumentType,DocumentNo,ApproverId,ApprovalEntry.Status::Open);
      IF NOT ApprovalEntry.FINDFIRST THEN
        FilterApprovalEntry(ApprovalEntry,TableID,DocumentType,DocumentNo,DCApprovalMgnt.GetApprovalSharingToUserFilter(ApproverId),ApprovalEntry.Status::Open);

      IF NOT ApprovalEntry.FINDFIRST THEN
        ERROR(Text004);

      CASE TableID OF
        DATABASE::"Sales Header":
          BEGIN
            SalesHeader.GET(DocumentType,DocumentNo);
            SalesHeader."On Hold" := 'WEB';
            SalesHeader.MODIFY(TRUE);
          END;

        DATABASE::"Purchase Header":
          BEGIN
            PurchHeader.GET(DocumentType,DocumentNo);

            //**4PS.sn
            IF ApproverId <> '' THEN
              PurchHeader."On Hold" := COPYSTR(ApproverId, 1, 3)
            ELSE
            //**4PS.en
              PurchHeader."On Hold" := 'WEB';
            PurchHeader.MODIFY(TRUE);
          END;
      END;

      GLOBALLANGUAGE := NSTLanguageId;
    END;

    PROCEDURE RemoveOnHold@161024026(TableID@1160040000 : Integer;DocumentType@161024014 : Integer;DocumentNo@161024013 : Code[20];ApproverId@161024012 : Code[50]);
    VAR
      ApprovalEntry@161024015 : Record 454;
      PurchHeader@161024016 : Record 38;
      SalesHeader@1160040001 : Record 36;
      ApprovalCmtLine@161024017 : Record 455;
      DCApprovalMgnt@161024018 : Codeunit 6085722;
    BEGIN
      ActivateDefaultLanguage;

      FilterApprovalEntry(ApprovalEntry,TableID,DocumentType,DocumentNo,ApproverId,ApprovalEntry.Status::Open);
      IF NOT ApprovalEntry.FINDFIRST THEN
        FilterApprovalEntry(ApprovalEntry,TableID,DocumentType,DocumentNo,DCApprovalMgnt.GetApprovalSharingToUserFilter(ApproverId),ApprovalEntry.Status::Open);

      IF NOT ApprovalEntry.FINDFIRST THEN
        ERROR(Text005);

      CASE TableID OF
        DATABASE::"Sales Header":
          BEGIN
            SalesHeader.GET(DocumentType,DocumentNo);
            IF SalesHeader."On Hold" <> '' THEN BEGIN
              SalesHeader."On Hold" := '';
              SalesHeader.MODIFY(TRUE);
            END;
          END;

        DATABASE::"Purchase Header":
          BEGIN
            PurchHeader.GET(DocumentType,DocumentNo);
            IF PurchHeader."On Hold" <> '' THEN BEGIN
              PurchHeader."On Hold" := '';
              PurchHeader.MODIFY(TRUE);
            END;
          END;
      END;

      GLOBALLANGUAGE := NSTLanguageId;
    END;

    PROCEDURE SetOutOfOffice@161024025(ApproverId@161024012 : Code[50];ForwardToApproverId@161024015 : Code[50];FromDate@161024013 : Date;ToDate@161024014 : Date);
    VAR
      DCApprovalMgnt@161024017 : Codeunit 6085722;
    BEGIN
      DCApprovalMgnt.SetOutOfOffice(ApproverId,ForwardToApproverId,FromDate,ToDate);
    END;

    PROCEDURE GetOutOfOffice@161024024(ApproverId@161024014 : Code[50];VAR ForwardToApproverId@161024015 : Code[50];VAR ForwardToApproverName@161024016 : Text[80];VAR FromDate@161024013 : Date;VAR ToDate@161024012 : Date) : Boolean;
    VAR
      UserSetup@161024019 : Record 91;
      Purchaser@161024018 : Record 13;
      DCApprovalMgnt@161024017 : Codeunit 6085722;
    BEGIN
      IF NOT DCApprovalMgnt.GetOutOfOffice(ApproverId,ForwardToApproverId,FromDate,ToDate) THEN BEGIN
        IF UserSetup.GET(ApproverId) THEN
          ForwardToApproverId := UserSetup."Approver ID";
      END;

      IF UserSetup.GET(ForwardToApproverId) THEN
        IF Purchaser.GET(UserSetup."Salespers./Purch. Code") THEN;

      IF Purchaser.Name <> '' THEN
        ForwardToApproverName := Purchaser.Name
      ELSE
        ForwardToApproverName := Purchaser.Code;
    END;

    PROCEDURE GetNextApprover@161024027(TableID@1160040000 : Integer;DocumentType@161024017 : Integer;DocumentNo@161024016 : Code[20];ApproverId@161024015 : Code[50]) NextApproverId : Code[50];
    VAR
      ApprovalEntry@161024013 : Record 454;
      AdvAppvlMgnt@161024014 : Codeunit 6085746;
      DCApprovalMgnt@161024018 : Codeunit 6085722;
    BEGIN
      ActivateDefaultLanguage;

      FilterApprovalEntry(ApprovalEntry,TableID,DocumentType,DocumentNo,ApproverId,ApprovalEntry.Status::Open);
      IF NOT ApprovalEntry.FINDFIRST THEN
        FilterApprovalEntry(ApprovalEntry,TableID,DocumentType,DocumentNo,DCApprovalMgnt.GetApprovalSharingToUserFilter(ApproverId),ApprovalEntry.Status::Open);

      IF NOT ApprovalEntry.FINDFIRST THEN
        ERROR(Text002);

      NextApproverId := AdvAppvlMgnt.CalcNextApprover(ApprovalEntry,ApproverId);

      GLOBALLANGUAGE := NSTLanguageId;
    END;

    LOCAL PROCEDURE FilterApprovalEntry@161024016(VAR ApprovalEntry@161024013 : Record 454;TableID@1160040000 : Integer;DocumentType@161024015 : Integer;DocumentNo@161024014 : Code[20];ApproverFilter@161024012 : Text[1024];StatusFilter@6085573 : Integer) : Boolean;
    BEGIN
      IF ApproverFilter = '' THEN
        EXIT(FALSE);

      ApprovalEntry.RESET;
      ApprovalEntry.SETCURRENTKEY("Table ID","Document Type","Document No.");
      ApprovalEntry.SETRANGE("Table ID",TableID);
      ApprovalEntry.SETRANGE("Document Type",DocumentType);
      ApprovalEntry.SETRANGE("Document No.",DocumentNo);
      ApprovalEntry.SETFILTER("Approver ID",ApproverFilter);
      IF StatusFilter <> -1 THEN
        ApprovalEntry.SETRANGE(Status,StatusFilter);

      EXIT(ApprovalEntry.FINDFIRST);
    END;

    LOCAL PROCEDURE GetNextDocId@161024018(MenuCode@1160040001 : Code[20];SubMenuCode@1160040000 : Code[20];VAR TableID@1160040002 : Integer;VAR DocumentType@161024013 : Integer;VAR DocumentNo@161024012 : Code[20];ApproverId@161024016 : Code[50]);
    VAR
      PurchHeader@161024015 : Record 38;
      ApprovalEntry@1160040003 : Record 454;
      SubMenu@1160040004 : Record 6086011;
      DCApprovalMgnt@161024014 : Codeunit 6085722;
    BEGIN
      IF MenuCode = '' THEN BEGIN
        TableID := DATABASE::"Purchase Header";

        DCApprovalMgnt.FilterPurchHeaderForApprover(-1,ApproverId,PurchHeader);
        PurchHeader.SETRANGE("Document Type",DocumentType);
        PurchHeader.SETFILTER("No.",'>%1',DocumentNo);
        PurchHeader.SETRANGE("On Hold",'');
        IF PurchHeader.FINDFIRST THEN BEGIN
          DocumentType := PurchHeader."Document Type";
          DocumentNo := PurchHeader."No.";
          EXIT;
        END;

        PurchHeader.SETFILTER("No.",'<%1',DocumentNo);
        IF PurchHeader.FINDFIRST THEN BEGIN
          DocumentType := PurchHeader."Document Type";
          DocumentNo := PurchHeader."No.";
          EXIT;
        END;

        IF DocumentType = PurchHeader."Document Type"::Invoice THEN
          PurchHeader.SETRANGE("Document Type",PurchHeader."Document Type"::"Credit Memo")
        ELSE
          PurchHeader.SETRANGE("Document Type",PurchHeader."Document Type"::Invoice);

        PurchHeader.SETRANGE("No.");
        IF PurchHeader.FINDFIRST THEN BEGIN
          DocumentType := PurchHeader."Document Type";
          DocumentNo := PurchHeader."No.";
          EXIT;
        END;
      END ELSE BEGIN
        SubMenu.GET(MenuCode,SubMenuCode);
        ApprovalEntry.SETCURRENTKEY("Approver ID",Status);
        ApprovalEntry.FILTERGROUP(4);
        IF SubMenu."Approval Code Filter" <> '' THEN
          ApprovalEntry.SETFILTER("Approval Code",SubMenu."Approval Code Filter");
        IF SubMenu."Table ID Filter" <> '' THEN
          ApprovalEntry.SETFILTER("Table ID",SubMenu."Table ID Filter");
        IF SubMenu."Document Type Filter" <> '' THEN
          ApprovalEntry.SETFILTER("Document Type",SubMenu."Document Type Filter");
        ApprovalEntry.FILTERGROUP(0);

        ApprovalEntry.SETRANGE("Approver ID",ApproverId);
        ApprovalEntry.SETRANGE(Status,ApprovalEntry.Status::Open);

        ApprovalEntry.SETFILTER("Document No.",'>%1',DocumentNo);
        IF ApprovalEntry.FINDFIRST THEN BEGIN
          TableID := ApprovalEntry."Table ID";
          DocumentType := ApprovalEntry."Document Type";
          DocumentNo := ApprovalEntry."Document No.";
          EXIT;
        END;

        ApprovalEntry.SETFILTER("Document No.",'<%1',DocumentNo);
        IF ApprovalEntry.FINDFIRST THEN BEGIN
          TableID := ApprovalEntry."Table ID";
          DocumentType := ApprovalEntry."Document Type";
          DocumentNo := ApprovalEntry."Document No.";
          EXIT;
        END;

        ApprovalEntry.SETRANGE("Document No.");
        IF ApprovalEntry.FINDFIRST THEN BEGIN
          TableID := ApprovalEntry."Table ID";
          DocumentType := ApprovalEntry."Document Type";
          DocumentNo := ApprovalEntry."Document No.";
          EXIT;
        END;
      END;

      TableID := 0;
      DocumentType := 0;
      DocumentNo := '';
    END;

    PROCEDURE GetTotalDocumentAmount@161024017(DocumentType@161024012 : Integer;DocumentNo@161024013 : Code[20];VAR AmountExclVAT@161024014 : Decimal;VAR AmountInclVAT@161024015 : Decimal);
    VAR
      PurchHeader@161024018 : Record 38;
      PurchLine@161024017 : Record 39;
      TempVATAmountLine0@161024016 : TEMPORARY Record 290;
    BEGIN
      PurchHeader.GET(DocumentType,DocumentNo);
      PurchLine.SetPurchHeader(PurchHeader);
      PurchLine.CalcVATAmountLines(1,PurchHeader,PurchLine,TempVATAmountLine0);

      AmountExclVAT := 0;
      AmountInclVAT := 0;

      IF TempVATAmountLine0.FINDSET THEN
        REPEAT
          AmountExclVAT := AmountExclVAT + TempVATAmountLine0."Amount Including VAT" - TempVATAmountLine0."VAT Amount";
          AmountInclVAT := AmountInclVAT + TempVATAmountLine0."Amount Including VAT";
        UNTIL TempVATAmountLine0.NEXT = 0;
    END;

    PROCEDURE GetDocumentPermissions@161024023(TableID@1160040000 : Integer;DocumentType@161024015 : Integer;DocumentNo@161024014 : Code[20];ApproverId@161024023 : Code[50];VAR AllowView@161024013 : Boolean;VAR AllowEditLines@161024016 : Boolean;VAR AllowAddComment@161024017 : Boolean;VAR AllowAttachFiles@161024018 : Boolean;VAR AllowApprove@161024019 : Boolean;VAR AllowReject@161024020 : Boolean;VAR AllowForward@161024021 : Boolean;VAR AllowPutOnHold@161024022 : Boolean);
    VAR
      ApprovalEntry@161024025 : Record 454;
      PurchHeader@161024026 : Record 38;
      WebDocSearch@161024012 : Record 6086005;
      ContiniaUserSetup@161024024 : Record 6086002;
      DCApprovalMgnt@161024028 : Codeunit 6085722;
    BEGIN
      IF NOT ContiniaUserSetup.GET(ApproverId) THEN
        EXIT;

      FilterApprovalEntry(ApprovalEntry,TableID,DocumentType,DocumentNo,ApproverId,ApprovalEntry.Status::Open);
      IF NOT ApprovalEntry.FINDFIRST THEN
        FilterApprovalEntry(ApprovalEntry,TableID,DocumentType,DocumentNo,DCApprovalMgnt.GetApprovalSharingToUserFilter(ApproverId),ApprovalEntry.Status::Open);

      IF ApprovalEntry.FINDFIRST THEN BEGIN
        AllowView := TRUE;
        AllowEditLines := ContiniaUserSetup."Can Edit Posting Lines";
        AllowAddComment := TRUE;
        AllowAttachFiles := TRUE;
        AllowApprove := TRUE;
        AllowReject := TRUE;
        AllowForward := TRUE;
        AllowPutOnHold := TRUE;
      END ELSE BEGIN
        FilterApprovalEntry(ApprovalEntry,TableID,DocumentType,DocumentNo,ApproverId,-1);
        IF NOT ApprovalEntry.FINDFIRST THEN
          FilterApprovalEntry(ApprovalEntry,TableID,DocumentType,DocumentNo,DCApprovalMgnt.GetApprovalSharingToUserFilter(ApproverId),-1);
        IF ApprovalEntry.FINDFIRST THEN BEGIN
          AllowView := TRUE;
        END ELSE BEGIN
          IF TableID = DATABASE::"Purchase Header" THEN BEGIN
            IF DocumentType = PurchHeader."Document Type"::Invoice THEN
              WebDocSearch.SETRANGE(Type,WebDocSearch.Type::"Purchase Invoice")
            ELSE
              WebDocSearch.SETRANGE(Type,WebDocSearch.Type::"Purchase Credit Memo");
            WebDocSearch.SETRANGE("No.",DocumentNo);
            WebDocSearch.SETRANGE("User ID",ApproverId);
            IF NOT WebDocSearch.ISEMPTY THEN
              AllowView := TRUE;
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE ActivateDefaultLanguage@161024022();
    VAR
      COSetup@161024012 : Record 6086500;
      Language@161024013 : Record 8;
    BEGIN
      COSetup.GET;
      COSetup.TESTFIELD("Default Language Code");
      Language.GET(COSetup."Default Language Code");
      Language.TESTFIELD("Windows Language ID");
      NSTLanguageId := GLOBALLANGUAGE;
      GLOBALLANGUAGE := Language."Windows Language ID";
    END;

    BEGIN
    END.
  }
}

