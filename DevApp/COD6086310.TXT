OBJECT Codeunit 6086310 Bank Trans. Inbox-Check
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.1.02.00;
  }
  PROPERTIES
  {
    TableNo=6086331;
    OnRun=VAR
            Currency@1160040005 : Record 4;
            CountryRegion@1160040007 : Record 9;
            EMSetup@1160040002 : Record 6086300;
            BankCurrMap@1160040006 : Record 6086310;
            BankCountryMap@1160040008 : Record 6086312;
            Expense@1160040003 : Record 6086320;
            Matching@1160040000 : Codeunit 6086311;
          BEGIN
            Transaction.TRANSFERFIELDS(Rec,FALSE);
            Transaction."Entry No." := "Entry No.";
            Transaction.VALIDATE("Card Id","Card ID");
            Transaction.VALIDATE("Card Name","Card Name");
            Transaction.VALIDATE("Posting Date","Posting Date");
            Transaction.VALIDATE("Document Date","Document Date");
            IF "Currency Code" <> '' THEN
              IF Currency.GET("Currency Code") THEN
                VALIDATE("Currency Code","Currency Code")
              ELSE BEGIN
                BankCurrMap.GET("Bank Code","Bank Country/Region","Currency Code");
                Transaction.VALIDATE("Currency Code",BankCurrMap."Currency Code (NAV)");
              END;
            Transaction."Currency Exch. Rate" := "Currency Exch. Rate";
            Transaction.VALIDATE(Amount,Amount);
            Transaction."Amount (LCY)" := "Amount (LCY)";
            Transaction."Business Category Id" := "Business Category ID";
            Transaction."Business No." := "Business No.";
            Transaction."Business Name" := "Business Name";
            Transaction."Business Address" := "Business Address";
            Transaction."Business Address 2" := "Business Address 2";
            Transaction."Business Address 3" := "Business Address 3";

            IF CountryRegion.GET("Business Country/Region") THEN
              Transaction."Business Country/Region" := "Business Country/Region"
            ELSE BEGIN
              BankCountryMap.GET("Bank Code","Bank Country/Region","Business Country/Region");
              Transaction."Business Country/Region" := BankCountryMap."Country/Region Code (NAV)";
            END;
            Transaction."Business Post Code" := "Business Post Code";
            Transaction."Bank Entry Id" := "Bank Entry ID";

            Transaction."Exclude Entry" := "Exclude Entry";

            EmployeeCards.SETRANGE("Card No.","Card ID");
            EmployeeCards.FINDFIRST;

            Transaction.VALIDATE("Employee No.",EmployeeCards."Continia User ID");

            Transaction.VALIDATE(Suspect,Suspect);

            IF NOT Transaction.INSERT(TRUE) THEN
              Transaction.MODIFY;

            Transaction.ApplyMappingRule;

            IF Transaction."Matched to Expense" THEN
              EXIT
            ELSE
              IF Matching.MatchExpense(Transaction,Expense) THEN
                EXIT;

            IF Transaction."Employee No." = '' THEN
              EXIT;

            EMSetup.GET;
            IF EMSetup."Create Expense w. Transaction" THEN
              Transaction.MatchAndCreateExpense;
          END;

  }
  CODE
  {
    VAR
      EmployeeCards@1160040000 : Record 6086311;
      Transaction@1160040001 : Record 6086330;

    BEGIN
    END.
  }
}

