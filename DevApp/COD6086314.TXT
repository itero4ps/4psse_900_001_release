OBJECT Codeunit 6086314 Reminder E-Mail
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.1.02.00;
  }
  PROPERTIES
  {
    OnRun=VAR
            Expense@1160040000 : Record 6086320;
          BEGIN
            Expense.SETFILTER("Employee No.",'<>%1','');
            Expense.SETRANGE(Status,Expense.Status::"Pending Expense User");
            SendNotificationEmails(Expense,FALSE);
          END;

  }
  CODE
  {
    VAR
      AmountCap@1005 : TextConst 'ENU=Amount';
      AmountLCYCap@1006 : TextConst 'ENU=Amount (LCY)';
      CurrencyCodeCap@1009 : TextConst 'ENU=Currency';
      DescriptionCap@1004 : TextConst 'ENU=Description';
      DocumentDateCap@1002 : TextConst 'ENU=Date';
      ExpenseTypeCap@1003 : TextConst 'ENU=Type';
      LinkCap@1007 : TextConst 'ENU=Link';
      ListTitleCaption@1001 : TextConst 'ENU=Reminders that need attention (%1)';
      ReminderPortalTitle@1160040000 : TextConst 'ENU=See all Reminders on Web Portal';
      ReminderTextCap@1011 : TextConst 'ENU=Open Reminder in web browser';
      ReminderUrlSrc@1010 : TextConst 'ENU="<a href=""%1"">%2</a>"';
      RemimdersSentTxt@1160040004 : TextConst 'ENU=%1 reminder e-mails sent.';
      NoRemSentTxt@1160040003 : TextConst 'ENU=No E-mail was sent.\\There was no reminder pending or the selected Expense is not pending the expense user.';
      ReminderEmailTemplaterErr@1160040001 : TextConst 'ENU=You must import the reminder e-mail template in the %1 page';
      SendingReminderTxt@1160040002 : TextConst 'ENU=Sending Reminder to: #1###############';

    PROCEDURE SendNotificationEmails@1160040000(VAR Expense@1009 : Record 6086320;Force@1160040006 : Boolean);
    VAR
      ContiniaUserSetup@1002 : Record 6086002;
      EMSetup@1003 : Record 6086300;
      ExpenseReminder@1013 : Record 6086319;
      Expense2@1160040002 : Record 6086320;
      BigStringLines@1011 : Codeunit 6085587;
      BigStringTemplate@1010 : Codeunit 6085587;
      SmtpMailManagement@1001 : Codeunit 6085598;
      ExpenseApprovalEMail@1000 : Codeunit 6086313;
      FileHandling@1160040009 : Codeunit 6086319;
      FileSysMgt@1160040012 : Codeunit 6085584;
      TempFile@1007 : File;
      NVInStream@1006 : InStream;
      RemDate@1012 : Date;
      FileData@1004 : Text[1024];
      Filename@1005 : Text[1024];
      RemindersUrl@1017 : Text[1024];
      Remindertext@1020 : Text[1024];
      LastEmployeeNo@1160040001 : Code[50];
      LineNo@1160040003 : Integer;
      NoOfMails@1018 : Integer;
      TotalLines@1160040004 : Integer;
      ReminderFound@1160040000 : Boolean;
      SendEmail@1160040005 : Boolean;
      Window@1160040007 : Dialog;
      FontColorText@1160040010 : Text[30];
      ClassText@1160040011 : Text[30];
    BEGIN
      NoOfMails := 0;

      // GET REMINDER TEMPLATE
      EMSetup.GET;
      EMSetup.CALCFIELDS("Reminder Template");
      IF NOT EMSetup."Reminder Template".HASVALUE THEN
        ERROR(ReminderEmailTemplaterErr,EMSetup.TABLECAPTION);

      TempFile.CREATETEMPFILE;
      Filename := TempFile.NAME;
      TempFile.CLOSE;
      TempFile.CREATE(Filename);
      EMSetup."Reminder Template".CREATEINSTREAM(NVInStream);
      WHILE NVInStream.READ(FileData) <> 0 DO
        TempFile.WRITE(FileData);
      TempFile.CLOSE;

      Expense.SETCURRENTKEY("Employee No.","Document Date");
      Expense.SETRANGE(Status,Expense.Status::"Pending Expense User");
      IF Expense.FINDSET THEN BEGIN
        IF GUIALLOWED THEN
          Window.OPEN(SendingReminderTxt);
        REPEAT
          IF LastEmployeeNo <> Expense."Employee No." THEN BEGIN
            LastEmployeeNo := Expense."Employee No.";
            LineNo := 0;
            SendEmail := Force;
            Expense2.RESET;
            Expense2.SETCURRENTKEY("Employee No.","Document Date");
            Expense2.SETRANGE("Employee No.",Expense."Employee No.");
            Expense2.SETRANGE(Status,Expense2.Status::"Pending Expense User");
            Expense2.SETRANGE(Posted,FALSE);

            // MAIL SETUP
            ContiniaUserSetup.GET(Expense."Employee No.");
            RemindersUrl := GetReminderUrl(Expense."Employee No.");
            Expense.CALCFIELDS("Employee Name");
            ExpenseApprovalEMail.SetupMail(SmtpMailManagement,ContiniaUserSetup,
              STRSUBSTNO(EMSetup."Reminder E-Mail Subject",Expense."Employee Name"));

            BigStringTemplate.Clear;
            BigStringTemplate.LoadFromFile(Filename);

            BigStringTemplate.Replace('#LISTTITLE#',STRSUBSTNO(ListTitleCaption,FORMAT(TODAY)));
            BigStringTemplate.Replace('#LISTLABELS#',CreateReminderHeader('<tr><th>','</th><th>','</th></tr>'));

            BigStringLines.Clear;

            IF Expense2.FINDFIRST THEN
              REPEAT
                LineNo += 1;
                RemDate := Expense2.NextReminderDate;
                ReminderFound := (RemDate <> 0D) AND (RemDate <= TODAY);
                IF ReminderFound THEN BEGIN
                  SendEmail := TRUE;
                  Remindertext := ExpenseReminder.CreateReminder(Expense2);
                END;

                CLEAR(FontColorText);
                IF ReminderFound THEN
                  FontColorText := '<font color="red">'
                ELSE
                  CLEAR(FontColorText);

                IF LineNo MOD 2 = 0 THEN
                  ClassText := '<tr class="even">'
                ELSE
                  ClassText := '<tr class="odd">';

                BigStringLines.Append(
                  CreateReminderLine(Expense2,FontColorText + ClassText + '<td>','</td><td>','</td><td align="right">','</td></tr>'));
              UNTIL Expense2.NEXT = 0;

            IF SendEmail THEN BEGIN
              IF GUIALLOWED THEN
                Window.UPDATE(1,FORMAT(Expense."Employee No."));

              BigStringTemplate.Replace2('#LISTLINES#',BigStringLines);
              BigStringTemplate.Replace('#PORTALURL#',RemindersUrl);
              BigStringTemplate.Replace('#PORTALTITLE#',ReminderPortalTitle);

              // SEND E-MAIL
              SmtpMailManagement.SetBodyFromBigStringMgnt(BigStringTemplate);
              SmtpMailManagement.SetStartTLS(EMSetup."SMTP Require SSL/TLS");
              IF NOT SmtpMailManagement.Send THEN
                SmtpMailManagement.DisplayLastError;

              NoOfMails := NoOfMails + 1;
            END;
          END;

        UNTIL Expense.NEXT = 0;
        IF GUIALLOWED THEN
          Window.CLOSE;
      END;

      IF GUIALLOWED THEN
        IF NoOfMails = 0 THEN
          MESSAGE(NoRemSentTxt)
        ELSE
          MESSAGE(RemimdersSentTxt,NoOfMails);
    END;

    LOCAL PROCEDURE GetReminderUrl@4(_UserID@1001 : Code[50]) : Text[1024];
    VAR
      EMOnlineMgt@1160040000 : Codeunit 6086305;
      Email@1000 : Text[1024];
    BEGIN
      Email := GetUserEmail(_UserID);
      IF Email <> '' THEN
        EXIT(EMOnlineMgt.GetBaseServerUrl + 'account/login');
    END;

    LOCAL PROCEDURE GetUserEmail@1(_UserID@1000 : Code[50]) : Text[250];
    VAR
      ContiniaUser@1001 : Record 6086001;
    BEGIN
      IF ContiniaUser.GET(_UserID) THEN
        EXIT(ContiniaUser."E-Mail");

      EXIT('');
    END;

    LOCAL PROCEDURE CreateReminderLine@1160040017(VAR Expense@1000 : Record 6086320;FirstSeparator@1160040000 : Text[50];SecondSeparator@1160040001 : Text[50];RightAlignSeparator@1160040004 : Text[50];LastSeparator@1160040002 : Text[50]) : Text[1024];
    VAR
      EMOnlineMgt@1160040003 : Codeunit 6086305;
    BEGIN
      EXIT(
        FirstSeparator +
        FORMAT(Expense."Document Date") + SecondSeparator +
        Expense."Expense Type" + SecondSeparator +
        FORMAT(Expense.Description) + SecondSeparator +
        FORMAT(Expense."Currency Code") +
        RightAlignSeparator + FORMAT(Expense.Amount,0,0) +
        RightAlignSeparator + FORMAT(Expense."Amount (LCY)",0,0) + SecondSeparator +
        STRSUBSTNO(ReminderUrlSrc,EMOnlineMgt.GetReminderUrl(Expense),ReminderTextCap) + LastSeparator);
    END;

    LOCAL PROCEDURE CreateReminderHeader@1160040016(FirstSeparator@1160040000 : Text[30];SecondSeparator@1160040001 : Text[30];LastSeparator@1160040002 : Text[30]) : Text[1024];
    BEGIN
      EXIT(
        FirstSeparator +
        DocumentDateCap + SecondSeparator +
        ExpenseTypeCap + SecondSeparator +
        DescriptionCap + SecondSeparator +
        CurrencyCodeCap + SecondSeparator +
        AmountCap + SecondSeparator +
        AmountLCYCap + SecondSeparator +
        LinkCap + LastSeparator);
    END;

    BEGIN
    END.
  }
}

