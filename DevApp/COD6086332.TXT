OBJECT Codeunit 6086332 E-Mail Template Imp/Exp EM
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW17.00.00.1.02.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      AutomationErr@1160040000 : TextConst 'ENU=Can not create automation - Microsoft ADO, v6.0';

    PROCEDURE AddExpEmailTemplates@1160040021(Filename@1160040001 : Text[250]);
    VAR
      ExpSetup@1160040000 : Record 6086300;
      TempBlob@1160040002 : Record 99008535;
      XMLDoc@1003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      XMLRoot@1002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
      XMLNewElement@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
      XMLBlob@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
    BEGIN
      IF NOT ExpSetup.GET THEN
        EXIT;

      IF STRPOS(Filename,'.xml') = 0 THEN
        Filename := Filename + '.xml';

      XMLDoc := XMLDoc.XmlDocument;
      XMLDoc.Load(Filename);

      XMLRoot := XMLDoc.SelectSingleNode('//Data');
      IF NOT ISNULL(XMLRoot) THEN BEGIN
        ExpSetup.CALCFIELDS("Reminder Template");
        IF ExpSetup."Reminder Template".HASVALUE THEN BEGIN
          TempBlob.Blob := ExpSetup."Reminder Template";
          XMLNewElement := XMLDoc.CreateElement('ExpenseReminderTemplate');
          XMLBlob := XMLRoot.AppendChild(XMLNewElement);
          XMLExportBLOB(XMLBlob,TempBlob);
        END;

        CLEAR(TempBlob.Blob);
        ExpSetup.CALCFIELDS("Approval Template");
        IF ExpSetup."Approval Template".HASVALUE THEN BEGIN
          TempBlob.Blob := ExpSetup."Approval Template";
          XMLNewElement := XMLDoc.CreateElement('ExpenseApprovalTemplate');
          XMLBlob := XMLRoot.AppendChild(XMLNewElement);
          XMLExportBLOB(XMLBlob,TempBlob);
        END;

        ERASE(Filename);
        XMLDoc.Save(Filename);
      END;
    END;

    PROCEDURE GetExpEmailTemplates@1160040060(Filename@1160040004 : Text[250]);
    VAR
      ExpSetup@1160040005 : Record 6086300;
      TempBlob@1160040001 : Record 99008535;
      XMLDoc@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      XMLNode@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
    BEGIN
      IF NOT ExpSetup.GET THEN
        EXIT;

      XMLDoc := XMLDoc.XmlDocument;
      XMLDoc.Load(Filename);

      XMLNode := XMLDoc.SelectSingleNode('Data/ExpenseReminderTemplate');
      IF NOT ISNULL(XMLNode) THEN BEGIN
        XMLImportBLOB(TempBlob,XMLNode);
        ExpSetup."Reminder Template" := TempBlob.Blob;
        ExpSetup.MODIFY;
      END;

      CLEAR(TempBlob.Blob);
      XMLNode := XMLDoc.SelectSingleNode('Data/ExpenseApprovalTemplate');
      IF NOT ISNULL(XMLNode) THEN BEGIN
        XMLImportBLOB(TempBlob,XMLNode);
        ExpSetup."Approval Template" := TempBlob.Blob;
        ExpSetup.MODIFY;
      END;
    END;

    PROCEDURE XMLExportBLOB@3(VAR CreatedDOMNode@1005 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";VAR TempBlob@1000000000 : Record 99008535) Status@1000 : Integer;
    VAR
      ReadStream@1160040000 : InStream;
      Convert@1160040002 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Convert";
      MemoryStream@1160040004 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.MemoryStream";
    BEGIN
      IF TempBlob.Blob.HASVALUE THEN BEGIN
        TempBlob.Blob.CREATEINSTREAM(ReadStream);
        MemoryStream := MemoryStream.MemoryStream;
        COPYSTREAM(MemoryStream,ReadStream);
        CreatedDOMNode.InnerText := Convert.ToBase64String(MemoryStream.ToArray);
      END;
    END;

    PROCEDURE XMLImportBLOB@2(VAR TempBlob@1000 : Record 99008535;VAR DOMNode@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode") : Integer;
    VAR
      WriteStream@1160040000 : OutStream;
      Convert@1160040002 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Convert";
      MemoryStream@1160040001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.MemoryStream";
    BEGIN
      IF ISNULL(DOMNode) THEN BEGIN
        CLEAR(TempBlob.Blob);
        EXIT;
      END;
      TempBlob.Blob.CREATEOUTSTREAM(WriteStream);
      MemoryStream := MemoryStream.MemoryStream(Convert.FromBase64String(DOMNode.InnerText));
      MemoryStream.WriteTo(WriteStream);
    END;

    BEGIN
    END.
  }
}

