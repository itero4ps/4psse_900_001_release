OBJECT Codeunit 6086357 Create EM Demo Data
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.1.03.00;
  }
  PROPERTIES
  {
    OnRun=VAR
            AppMgt@1160040000 : Codeunit 1;
          BEGIN
            IF STRPOS(AppMgt.ApplicationVersion,'W1') > 0 THEN
              SetupW1;

            IF STRPOS(AppMgt.ApplicationVersion,'DK') > 0 THEN
              SetupDK;

            IF STRPOS(AppMgt.ApplicationVersion,'NL') > 0 THEN
              SetupNL;

            IF STRPOS(AppMgt.ApplicationVersion,'NO') > 0 THEN
              SetupNO;

            ExpDemoDataTemp.RESET;
            IF NOT ExpDemoDataTemp.ISEMPTY THEN
              PAGE.RUN(PAGE::"Expense Demo Data",ExpDemoDataTemp);
          END;

  }
  CODE
  {
    VAR
      ExpDemoDataTemp@1160040000 : TEMPORARY Record 6086358;

    PROCEDURE SetupW1@1160040000();
    VAR
      GLAccount@1160040000 : Record 15;
      EMSetup@1160040001 : Record 6086300;
      COSetup@1160040002 : Record 6086500;
      EMOnlineMgt@1160040003 : Codeunit 6086305;
    BEGIN
      // G/L ACCOUNT
      CreateGLAccount('8250','Accommodations',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'NATIONAL','MISC');

      CreateGLAccount('8251','Fee',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'NATIONAL','MISC');

      CreateGLAccount('8252','Food & Beverages',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'NATIONAL','MISC');

      CreateGLAccount('8253','Food & Beverages with Guests',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'NATIONAL','MISC');

      CreateGLAccount('8254','Hardware',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'NATIONAL','MISC');

      CreateGLAccount('8255','Personal Expense',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'NATIONAL','MISC');

      CreateGLAccount('8256','Software',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'NATIONAL','MISC');

      CreateGLAccount('8257','Transportation',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'NATIONAL','MISC');

      // VENDOR
      CreateGLAccount('5430','Employees',2,GLAccount."Income/Balance"::"Balance Sheet",
        GLAccount."Gen. Posting Type"::" ",GLAccount."Account Type"::"Begin-Total",'','');

      CreateGLAccount('5431','Internal Employees',3,GLAccount."Income/Balance"::"Balance Sheet",
        GLAccount."Gen. Posting Type"::" ",GLAccount."Account Type"::Posting,'','');

      CreateGLAccount('5432','Ext. People and Contractor',3,GLAccount."Income/Balance"::"Balance Sheet",
        GLAccount."Gen. Posting Type"::" ",GLAccount."Account Type"::Posting,'','');

      CreateGLAccount('5439','Total Employees',2,GLAccount."Income/Balance"::"Balance Sheet",
        GLAccount."Gen. Posting Type"::" ",GLAccount."Account Type"::"End-Total",'','');

      CreateVendorPostingGroup('EMPLOYEES','5431');

      CreateVendor('RL','Richard Lum','EMPLOYEES','NATIONAL');
      CreateVendor('BD','Bart Duncan','EMPLOYEES','NATIONAL');
      CreateVendor('AH','Annette Hill','EMPLOYEES','NATIONAL');

      //BANK ACCOUNT
      CreateGLAccount('2950','Master Card',3,GLAccount."Income/Balance"::"Balance Sheet",
        GLAccount."Gen. Posting Type"::" ",GLAccount."Account Type"::Posting,'','');
      CreateBankAccountPostingGroup('MASTERCARD','2950');
      CreateBankAccount('MASTERCARD','MASTERCARD','MASTERCARD');

      // EXPENSE POSTING SETUP
      CreateExpensePostingSetup('ACCOMMODATIONS','8250');
      CreateExpensePostingSetup('FEE','8251');
      CreateExpensePostingSetup('FOOD','8252');
      CreateExpensePostingSetup('FOOD W. GUESTS','8253');
      CreateExpensePostingSetup('HARDWARE','8254');
      CreateExpensePostingSetup('PERSONAL','8255');
      CreateExpensePostingSetup('SOFTWARE','8256');
      CreateExpensePostingSetup('TRANSPORT','8257');

      CreateGenJnlBatch('STANDARD','EXPENSE','KASSAKLADD','Expense Management');

      EMSetup.GET;
      EMSetup."Card Transaction Bal. Type" := EMSetup."Card Transaction Bal. Type"::"Bank Account";
      EMSetup."Card Transaction Bal. No." := 'MASTERCARD';
      EMSetup.VALIDATE("Default Web/App Language",'ENU');
      EMSetup.MODIFY;

      EMOnlineMgt.SetupCloud;

      COSetup.GET;
      COSetup."Default Language Name" := 'en-GB';
      COSetup."Default Units Formatting" := 'en-GB';
      COSetup."Default Language Code" := 'ENU';
      COSetup."Default Time Zone" := 'GMT Standard Time';
      COSetup.MODIFY;
    END;

    PROCEDURE SetupDK@1160040005();
    VAR
      GLAccount@1160040001 : Record 15;
      EMSetup@1160040000 : Record 6086300;
      TableFilters@1160040002 : Record 6086348;
      FieldType@1160040003 : Record 6086345;
      COSetup@1160040004 : Record 6086500;
      EMOnlineMgt@1160040005 : Codeunit 6086305;
    BEGIN
      // G/L ACCOUNT
      CreateGLAccount('8250','Hotel',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'INDLAND','DIV');

      CreateGLAccount('8251','Gebyr',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'INDLAND','DIV');

      CreateGLAccount('8252','Fortëring',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'INDLAND','DIV');

      CreateGLAccount('8253','Fortëring med gëster',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'INDLAND','DIV');

      CreateGLAccount('8254','Hardware',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'INDLAND','DIV');

      CreateGLAccount('8255','Personlig udgift',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'INDLAND','DIV');

      CreateGLAccount('8256','Software',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'INDLAND','DIV');

      CreateGLAccount('8257','Transport',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'INDLAND','DIV');

      // VENDOR
      CreateGLAccount('5430','Medarbejder',2,GLAccount."Income/Balance"::"Balance Sheet",
        GLAccount."Gen. Posting Type"::" ",GLAccount."Account Type"::"Begin-Total",'','');

      CreateGLAccount('5431','Interne medarbejdere',3,GLAccount."Income/Balance"::"Balance Sheet",
        GLAccount."Gen. Posting Type"::" ",GLAccount."Account Type"::Posting,'','');

      CreateGLAccount('5432','Eks. brugere og konsulenter',3,GLAccount."Income/Balance"::"Balance Sheet",
        GLAccount."Gen. Posting Type"::" ",GLAccount."Account Type"::Posting,'','');

      CreateGLAccount('5439','Medarbejdere i alt',2,GLAccount."Income/Balance"::"Balance Sheet",
        GLAccount."Gen. Posting Type"::" ",GLAccount."Account Type"::"End-Total",'','');

      CreateVendorPostingGroup('MEDARBEJDE','5431');

      CreateVendor('RL','Richard Lum','MEDARBEJDE','INDLAND');
      CreateVendor('BD','Bart Duncan','MEDARBEJDE','INDLAND');
      CreateVendor('AH','Annette Hill','MEDARBEJDE','INDLAND');

      //BANK ACCOUNT
      CreateGLAccount('2950','Master Card',3,GLAccount."Income/Balance"::"Balance Sheet",
        GLAccount."Gen. Posting Type"::" ",GLAccount."Account Type"::Posting,'','');
      CreateBankAccountPostingGroup('MASTERCARD','2950');
      CreateBankAccount('MASTERCARD','MASTERCARD','MASTERCARD');

      // EXPENSE POSTING SETUP
      CreateExpensePostingSetup('ACCOMMODATIONS','8250');
      CreateExpensePostingSetup('FEE','8251');
      CreateExpensePostingSetup('FOOD','8252');
      CreateExpensePostingSetup('FOOD W. GUESTS','8253');
      CreateExpensePostingSetup('HARDWARE','8254');
      CreateExpensePostingSetup('PERSONAL','8255');
      CreateExpensePostingSetup('SOFTWARE','8256');
      CreateExpensePostingSetup('TRANSPORT','8257');

      CreateGenJnlBatch('KASSE','EXPENSE','FIN_KASSE','Expense Management');

      EMSetup.GET;
      EMSetup."Card Transaction Bal. Type" := EMSetup."Card Transaction Bal. Type"::"Bank Account";
      EMSetup."Card Transaction Bal. No." := 'MASTERCARD';
      EMSetup."Expense Template Name" := 'KASSE';
      EMSetup."Job Template Name" := 'SAGER';
      EMSetup."Job Batch Name" := 'STANDARD';
      EMSetup.VALIDATE("Default Web/App Language",'DAN');
      EMSetup.MODIFY;

      EMOnlineMgt.SetupCloud;

      TableFilters.SETFILTER("Value (Text)",'<>%1','');
      IF TableFilters.FINDSET THEN BEGIN
        REPEAT
          CASE TableFilters."Value (Text)" OF
            'AREA':
              TableFilters."Value (Text)" := 'OMRèDE';
            'BUSINESSGROUP':
              TableFilters."Value (Text)" := 'FORRETNINGSGRUPPE';
            'CUSTOMERGROUP':
              TableFilters."Value (Text)" := 'DEBITORGRUPPE';
            'DEPARTMENT':
              TableFilters."Value (Text)" := 'AFDELING';
            'PROJECT':
              TableFilters."Value (Text)" := 'PROJEKT';
            'PURCHASER':
              TableFilters."Value (Text)" := 'INDKùBER';
            'SALESCAMPAIGN':
              TableFilters."Value (Text)" := 'SALGSKAMPAGNE';
            'SALESPERSON':
              TableFilters."Value (Text)" := 'SíLGER';
          END;
          TableFilters.MODIFY;
        UNTIL TableFilters.NEXT = 0;

        FieldType.FillAllLookupValues;
      END;

      COSetup.GET;
      COSetup."Default Language Name" := 'da-DK';
      COSetup."Default Units Formatting" := 'da-DK';
      COSetup."Default Language Code" := 'DAN';
      COSetup."Default Time Zone" := 'Romance Standard Time';
      COSetup.MODIFY;
    END;

    PROCEDURE SetupNL@1160040011();
    VAR
      GLAccount@1160040001 : Record 15;
      EMSetup@1160040000 : Record 6086300;
      TableFilters@1160040002 : Record 6086348;
      FieldType@1160040003 : Record 6086345;
      COSetup@1160040004 : Record 6086500;
      EMOnlineMgt@1160040005 : Codeunit 6086305;
    BEGIN
      // G/L ACCOUNT
      CreateGLAccount('8250','Accomodaties',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'BINNENLAND','DIV');

      CreateGLAccount('8251','Tarief',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'BINNENLAND','DIV');

      CreateGLAccount('8252','Eten en drinken',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'BINNENLAND','DIV');

      CreateGLAccount('8253','Eten en drinken met derden',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'BINNENLAND','DIV');

      CreateGLAccount('8254','Hardware',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'BINNENLAND','DIV');

      CreateGLAccount('8255','Persoonlijke kosten',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'BINNENLAND','DIV');

      CreateGLAccount('8256','Software',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'BINNENLAND','DIV');

      CreateGLAccount('8257','Vervoer',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'BINNENLAND','DIV');

      // VENDOR
      CreateGLAccount('5430','Werknemers',2,GLAccount."Income/Balance"::"Balance Sheet",
        GLAccount."Gen. Posting Type"::" ",GLAccount."Account Type"::"Begin-Total",'','');

      CreateGLAccount('5431','Interne werknemers',3,GLAccount."Income/Balance"::"Balance Sheet",
        GLAccount."Gen. Posting Type"::" ",GLAccount."Account Type"::Posting,'','');

      CreateGLAccount('5432','Externen',3,GLAccount."Income/Balance"::"Balance Sheet",
        GLAccount."Gen. Posting Type"::" ",GLAccount."Account Type"::Posting,'','');

      CreateGLAccount('5439','Totaal werknemers',2,GLAccount."Income/Balance"::"Balance Sheet",
        GLAccount."Gen. Posting Type"::" ",GLAccount."Account Type"::"End-Total",'','');

      CreateVendorPostingGroup('WERKNEMERS','5431');

      CreateVendor('RL','Richard Lum','WERKNEMERS','BINNENLAND');
      CreateVendor('BD','Bart Duncan','WERKNEMERS','BINNENLAND');
      CreateVendor('AH','Annette Hill','WERKNEMERS','BINNENLAND');

      //BANK ACCOUNT
      CreateGLAccount('2950','Master Card',3,GLAccount."Income/Balance"::"Balance Sheet",
        GLAccount."Gen. Posting Type"::" ",GLAccount."Account Type"::Posting,'','');
      CreateBankAccountPostingGroup('MASTERCARD','2950');
      CreateBankAccount('MASTERCARD','MASTERCARD','MASTERCARD');

      // EXPENSE POSTING SETUP
      CreateExpensePostingSetup('ACCOMMODATIONS','8250');
      CreateExpensePostingSetup('FEE','8251');
      CreateExpensePostingSetup('FOOD','8252');
      CreateExpensePostingSetup('FOOD W. GUESTS','8253');
      CreateExpensePostingSetup('HARDWARE','8254');
      CreateExpensePostingSetup('PERSONAL','8255');
      CreateExpensePostingSetup('SOFTWARE','8256');
      CreateExpensePostingSetup('TRANSPORT','8257');

      CreateGenJnlBatch('ALGEMEEN','EXPENSE','FDB-VA','Expense Management');

      EMSetup.GET;
      EMSetup."Card Transaction Bal. Type" := EMSetup."Card Transaction Bal. Type"::"Bank Account";
      EMSetup."Card Transaction Bal. No." := 'MASTERCARD';
      EMSetup."Expense Template Name" := 'ALGEMEEN';
      EMSetup."Job Template Name" := 'PROJECT';
      EMSetup."Job Batch Name" := 'STANDAARD';
      EMSetup.VALIDATE("Default Web/App Language",'NLD');
      EMSetup.MODIFY;

      EMOnlineMgt.SetupCloud;

      TableFilters.SETFILTER("Value (Text)",'<>%1','');
      IF TableFilters.FINDSET THEN BEGIN
        REPEAT
          CASE TableFilters."Value (Text)" OF
            'AREA':
              TableFilters."Value (Text)" := 'DISTRICT';
            'BUSINESSGROUP':
              TableFilters."Value (Text)" := 'BEDRIJFSGROEP';
            'CUSTOMERGROUP':
              TableFilters."Value (Text)" := 'KLANTGROEP';
            'DEPARTMENT':
              TableFilters."Value (Text)" := 'KSTNDRAGER';
            'PROJECT':
              TableFilters."Value (Text)" := 'KSTNPLAATS';
            'PURCHASER':
              TableFilters."Value (Text)" := 'INKOPER';
            'SALESCAMPAIGN':
              TableFilters."Value (Text)" := 'VERKCAMPAGNE';
            'SALESPERSON':
              TableFilters."Value (Text)" := 'VERKOPER';
          END;
          TableFilters.MODIFY;
        UNTIL TableFilters.NEXT = 0;

        FieldType.FillAllLookupValues;
      END;

      COSetup.GET;
      COSetup."Default Language Name" := 'nl-NL';
      COSetup."Default Units Formatting" := 'nl-NL';
      COSetup."Default Language Code" := 'NLD';
      COSetup."Default Time Zone" := 'W. Europe Standard Time';
      COSetup.MODIFY;
    END;

    PROCEDURE SetupNO@1160040013();
    VAR
      GLAccount@1160040001 : Record 15;
      EMSetup@1160040000 : Record 6086300;
      TableFilters@1160040002 : Record 6086348;
      FieldType@1160040003 : Record 6086345;
      COSetup@1160040004 : Record 6086500;
      EMOnlineMgt@1160040005 : Codeunit 6086305;
    BEGIN
      // G/L ACCOUNT
      CreateGLAccount('8250','Overnatting',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'LEVINN','DIV');

      CreateGLAccount('8251','Avgift',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'LEVINN','DIV');

      CreateGLAccount('8252','Mat og drikke',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'LEVINN','DIV');

      CreateGLAccount('8253','Mat og drikke med gjester',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'LEVINN','DIV');

      CreateGLAccount('8254','Hardware',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'LEVINN','DIV');

      CreateGLAccount('8255','Privat kostnad',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'LEVINN','DIV');

      CreateGLAccount('8256','Software',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'LEVINN','DIV');

      CreateGLAccount('8257','Transport',2,GLAccount."Income/Balance"::"Income Statement",
        GLAccount."Account Type"::Posting,GLAccount."Gen. Posting Type"::Purchase,'LEVINN','DIV');

      // VENDOR
      CreateGLAccount('5430','Ansatte',2,GLAccount."Income/Balance"::"Balance Sheet",
        GLAccount."Gen. Posting Type"::" ",GLAccount."Account Type"::"Begin-Total",'','');

      CreateGLAccount('5431','Intern Ansatt',3,GLAccount."Income/Balance"::"Balance Sheet",
        GLAccount."Gen. Posting Type"::" ",GLAccount."Account Type"::Posting,'','');

      CreateGLAccount('5432','Eksterne og partnere',3,GLAccount."Income/Balance"::"Balance Sheet",
        GLAccount."Gen. Posting Type"::" ",GLAccount."Account Type"::Posting,'','');

      CreateGLAccount('5439','Sum ansatte',2,GLAccount."Income/Balance"::"Balance Sheet",
        GLAccount."Gen. Posting Type"::" ",GLAccount."Account Type"::"End-Total",'','');

      CreateVendorPostingGroup('ANSATTE','5431');

      CreateVendor('RL','Richard Lum','ANSATTE','LEVINN');
      CreateVendor('BD','Bart Duncan','ANSATTE','LEVINN');
      CreateVendor('AH','Annette Hill','ANSATTE','LEVINN');

      //BANK ACCOUNT
      CreateGLAccount('2950','Master Card',3,GLAccount."Income/Balance"::"Balance Sheet",
        GLAccount."Gen. Posting Type"::" ",GLAccount."Account Type"::Posting,'','');
      CreateBankAccountPostingGroup('MASTERCARD','2950');
      CreateBankAccount('MASTERCARD','MASTERCARD','MASTERCARD');

      // EXPENSE POSTING SETUP
      CreateExpensePostingSetup('ACCOMMODATIONS','8250');
      CreateExpensePostingSetup('FEE','8251');
      CreateExpensePostingSetup('FOOD','8252');
      CreateExpensePostingSetup('FOOD W. GUESTS','8253');
      CreateExpensePostingSetup('HARDWARE','8254');
      CreateExpensePostingSetup('PERSONAL','8255');
      CreateExpensePostingSetup('SOFTWARE','8256');
      CreateExpensePostingSetup('TRANSPORT','8257');

      CreateGenJnlBatch('STANDARD','EXPENSE','KASSAKLADD','Expense Management');

      EMSetup.GET;
      EMSetup."Card Transaction Bal. Type" := EMSetup."Card Transaction Bal. Type"::"Bank Account";
      EMSetup."Card Transaction Bal. No." := 'MASTERCARD';
      EMSetup."Expense Template Name" := 'STANDARD';
      EMSetup."Job Template Name" := 'ARB';
      EMSetup."Job Batch Name" := 'STANDARD';
      EMSetup.VALIDATE("Default Web/App Language",'NOR');
      EMSetup.MODIFY;

      EMOnlineMgt.SetupCloud;

      TableFilters.SETFILTER("Value (Text)",'<>%1','');
      IF TableFilters.FINDSET THEN BEGIN
        REPEAT
          CASE TableFilters."Value (Text)" OF
            'AREA':
              TableFilters."Value (Text)" := 'DISTRIKT';
            'BUSINESSGROUP':
              TableFilters."Value (Text)" := 'FIRMATYPE';
            'CUSTOMERGROUP':
              TableFilters."Value (Text)" := 'KUNDEGRUPPE';
            'DEPARTMENT':
              TableFilters."Value (Text)" := 'AVDELING';
            'PROJECT':
              TableFilters."Value (Text)" := 'PROSJEKT';
            'PURCHASER':
              TableFilters."Value (Text)" := 'INNKJùPER';
            'SALESCAMPAIGN':
              TableFilters."Value (Text)" := 'SALGSKAMPANJE';
            'SALESPERSON':
              TableFilters."Value (Text)" := 'SELGER';
          END;
          TableFilters.MODIFY;
        UNTIL TableFilters.NEXT = 0;

        FieldType.FillAllLookupValues;
      END;

      COSetup.GET;
      COSetup."Default Language Name" := 'nb-NO';
      COSetup."Default Units Formatting" := 'nb-NO';
      COSetup."Default Language Code" := 'NOR';
      COSetup."Default Time Zone" := 'Romance Standard Time';
      COSetup.MODIFY;
    END;

    PROCEDURE CreateGLAccount@1160040002(GLAccNo@1160040002 : Code[20];GLAccName@1160040001 : Text[30];Indentation@1160040003 : Integer;IncomeBalanace@1160040007 : Integer;AccountType@1160040005 : Integer;GenPostingType@1160040008 : Integer;GenBusPostingGroup@1160040006 : Code[10];GenProdPostingGroup@1160040009 : Code[10]);
    VAR
      GLAccount@1160040000 : Record 15;
      PostingType@1160040004 : Integer;
    BEGIN
      IF NOT GLAccount.GET(GLAccNo) THEN BEGIN
        GLAccount.VALIDATE("No.",GLAccNo);
        GLAccount.INSERT(TRUE);
      END;

      GLAccount.VALIDATE(Name,GLAccName);
      GLAccount.Indentation := Indentation;
      GLAccount.VALIDATE("Income/Balance",IncomeBalanace);
      GLAccount.VALIDATE("Account Type",AccountType);
      GLAccount.VALIDATE("Gen. Posting Type",GenPostingType);
      GLAccount.VALIDATE("Gen. Bus. Posting Group",GenBusPostingGroup);
      GLAccount.VALIDATE("Gen. Prod. Posting Group",GenProdPostingGroup);

      GLAccount.MODIFY(TRUE);

      StoreInTemp(DATABASE::"G/L Account",GLAccount.TABLECAPTION,GLAccNo,GLAccName);
    END;

    PROCEDURE CreateGenBusPostingGroup@1160040009(Code@1160040001 : Code[20];Description@1160040002 : Text[50];DefVATBusPostingGr@1160040003 : Code[10]);
    VAR
      GenBusPostingGroup@1160040000 : Record 250;
    BEGIN
      IF NOT GenBusPostingGroup.GET(Code) THEN BEGIN
        GenBusPostingGroup.VALIDATE(Code,Code);
        GenBusPostingGroup.Description := Description;
        GenBusPostingGroup.INSERT(TRUE);
      END;

      GenBusPostingGroup."Def. VAT Bus. Posting Group" := DefVATBusPostingGr;
      GenBusPostingGroup.MODIFY(TRUE);

      StoreInTemp(DATABASE::"Gen. Business Posting Group",GenBusPostingGroup.TABLECAPTION,Code,Description);
    END;

    PROCEDURE CreateVendorPostingGroup@1160040010(Code@1160040001 : Code[20];PayableAccount@1160040002 : Code[20]);
    VAR
      VendorPostingGroup@1160040000 : Record 93;
    BEGIN
      IF NOT VendorPostingGroup.GET(Code) THEN BEGIN
        VendorPostingGroup.VALIDATE(Code,Code);
        VendorPostingGroup.INSERT(TRUE);
      END;

      VendorPostingGroup."Payables Account" := PayableAccount;
      VendorPostingGroup.MODIFY(TRUE);

      StoreInTemp(DATABASE::"Vendor Posting Group",VendorPostingGroup.TABLECAPTION,Code,PayableAccount);
    END;

    PROCEDURE CreateVendor@1160040001(VendorNo@1160040001 : Code[20];VendorName@1160040002 : Text[50];VendorPostingGr@1160040003 : Code[10];GenBusPostingGr@1160040004 : Code[10]);
    VAR
      Vendor@1160040000 : Record 23;
    BEGIN
      IF NOT Vendor.GET(VendorNo) THEN BEGIN
        Vendor.VALIDATE("No.",VendorNo);
        Vendor.INSERT(TRUE);
      END;

      Vendor.VALIDATE(Name,VendorName);
      Vendor.VALIDATE("Vendor Posting Group",VendorPostingGr);
      Vendor.VALIDATE("Gen. Bus. Posting Group",GenBusPostingGr);
      Vendor.MODIFY(TRUE);

      StoreInTemp(DATABASE::Vendor,Vendor.TABLECAPTION,VendorNo,VendorName);
    END;

    PROCEDURE CreateBankAccountPostingGroup@1160040006(Code@1160040000 : Code[10];AccNo@1160040001 : Code[20]);
    VAR
      BankAccPostingGroup@1160040002 : Record 277;
    BEGIN
      IF NOT BankAccPostingGroup.GET(Code) THEN BEGIN
        BankAccPostingGroup.VALIDATE(Code,Code);
        BankAccPostingGroup.INSERT(TRUE);
      END;

      BankAccPostingGroup.VALIDATE("G/L Bank Account No.",AccNo);
      BankAccPostingGroup.MODIFY(TRUE);

      StoreInTemp(DATABASE::"Bank Account Posting Group",BankAccPostingGroup.TABLECAPTION,Code,AccNo);
    END;

    PROCEDURE CreateBankAccount@1160040003(BankAccNo@1160040002 : Code[20];BankAccName@1160040001 : Text[50];BankAccPostingGroup@1160040003 : Code[10]);
    VAR
      BankAccount@1160040000 : Record 270;
    BEGIN
      IF NOT BankAccount.GET(BankAccNo) THEN BEGIN
        BankAccount.VALIDATE("No.",BankAccNo);
        BankAccount.INSERT(TRUE);
      END;

      BankAccount.VALIDATE(Name,BankAccName);
      BankAccount.VALIDATE("Bank Acc. Posting Group",BankAccPostingGroup);
      BankAccount.MODIFY(TRUE);

      StoreInTemp(DATABASE::"Bank Account",BankAccount.TABLECAPTION,BankAccNo,BankAccName);
    END;

    PROCEDURE CreateExpensePostingSetup@1160040007(ExpTypeCode@1160040001 : Code[20];GLAccNo@1160040002 : Code[20]);
    VAR
      ExpPostingSetup@1160040000 : Record 6086309;
      ExpenseType@1160040003 : Record 6086307;
    BEGIN
      IF NOT ExpenseType.GET(ExpTypeCode) THEN
        EXIT;

      ExpPostingSetup.INIT;
      ExpPostingSetup.VALIDATE("No.",ExpTypeCode);
      ExpPostingSetup."Country/Region Type" := ExpPostingSetup."Country/Region Type"::"All Countries/Regions";
      ExpPostingSetup.Type := ExpPostingSetup.Type::Expense;
      ExpPostingSetup.VALIDATE("G/L Account No.",GLAccNo);
      IF ExpPostingSetup.INSERT(TRUE) THEN
        ExpPostingSetup.MODIFY(TRUE);

      StoreInTemp(DATABASE::"Expense Posting Setup",ExpPostingSetup.TABLECAPTION,ExpTypeCode,GLAccNo);
    END;

    PROCEDURE CreateGenJnlBatch@1160040004(TemplName@1160040000 : Code[10];BatchName@1160040001 : Code[10];NoSeriesCode@1160040004 : Code[10];Description@1160040003 : Text[50]);
    VAR
      GenJnlBatch@1160040002 : Record 232;
    BEGIN
      IF NOT GenJnlBatch.GET(TemplName,BatchName) THEN BEGIN
        GenJnlBatch.VALIDATE("Journal Template Name",TemplName);
        GenJnlBatch.VALIDATE(Name,BatchName);
        GenJnlBatch.INSERT(TRUE);
      END;
      GenJnlBatch.VALIDATE("No. Series",NoSeriesCode);
      GenJnlBatch.VALIDATE(Description,Description);
      GenJnlBatch.MODIFY(TRUE);

      StoreInTemp(DATABASE::"Gen. Journal Batch",GenJnlBatch.TABLECAPTION,TemplName,Description);
    END;

    PROCEDURE StoreInTemp@1160040008(TableNo@1160040000 : Integer;TblCaption@1160040001 : Text[250];Code@1160040002 : Code[20];ValueDescription@1160040003 : Text[250]);
    VAR
      EntryNo@1160040004 : Integer;
    BEGIN
      ExpDemoDataTemp.RESET;
      IF ExpDemoDataTemp.FINDLAST THEN
        EntryNo := ExpDemoDataTemp."Entry No."
      ELSE
        EntryNo := 1;

      ExpDemoDataTemp.INIT;
      ExpDemoDataTemp."Entry No." := EntryNo + 1;
      ExpDemoDataTemp."Table No." := TableNo;
      ExpDemoDataTemp."Table Name" := TblCaption;
      ExpDemoDataTemp.Code := Code;
      ExpDemoDataTemp.Description := ValueDescription;
      ExpDemoDataTemp.INSERT;
    END;

    BEGIN
    END.
  }
}

