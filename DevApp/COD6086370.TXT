OBJECT Codeunit 6086370 EM Workflow Event Handling
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW19.00.00.1.02.00;
  }
  PROPERTIES
  {
    EventSubscriberInstance=Static-Automatic;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      WorkflowManagement@1010 : Codeunit 1501;
      ExpenseApprReqForceRejectEventDescTxt@1004 : TextConst 'ENU=An expense is force rejected.';
      ExpenseApprReqForceApprovedEventDescTxt@1001 : TextConst 'ENU=An expense is force approved.';
      ExpenseApprReqEventDescTxt@1002 : TextConst 'ENU=Approval of an expense is requested.';
      ExpenseApprReqCancelledEventDescTxt@1003 : TextConst 'ENU=An approval request for an expense is canceled.';
      EventAlreadyExistErr@1000 : TextConst 'ENU=An event with description %1 already exists.';

    [EventSubscriber(Codeunit,1520,OnAddWorkflowEventsToLibrary)]
    PROCEDURE CreateEventsLibrary@13();
    BEGIN
      AddEventToLibrary(
        RunWorkflowOnSendExpenseForApprovalCode,DATABASE::Expense,ExpenseApprReqEventDescTxt,0,FALSE);
      AddEventToLibrary(
        RunWorkflowOnExpenseForceApproveApprovalRequestCode,DATABASE::Expense,ExpenseApprReqForceApprovedEventDescTxt,0,FALSE);
      AddEventToLibrary(
        RunWorkflowOnExpenseForceRejectApprovalRequestCode,DATABASE::Expense,ExpenseApprReqForceRejectEventDescTxt,0,FALSE);
      AddEventToLibrary(
        RunWorkflowOnCancelExpenseApprovalRequestCode,DATABASE::Expense,ExpenseApprReqCancelledEventDescTxt,0,FALSE);
    END;

    LOCAL PROCEDURE AddEventPredecessors@67(EventFunctionName@1001 : Code[128]);
    VAR
      WorkflowEventHandling@1000 : Codeunit 1520;
    BEGIN
      CASE EventFunctionName OF
        RunWorkflowOnCancelExpenseApprovalRequestCode:
          AddEventPredecessor(RunWorkflowOnCancelExpenseApprovalRequestCode,RunWorkflowOnSendExpenseForApprovalCode);
        RunWorkflowOnExpenseForceRejectApprovalRequestCode:
          AddEventPredecessor(RunWorkflowOnExpenseForceRejectApprovalRequestCode,RunWorkflowOnSendExpenseForApprovalCode);
      END;
    END;

    PROCEDURE AddEventToLibrary@14(FunctionName@1001 : Code[128];TableID@1002 : Integer;Description@1003 : Text[250];RequestPageID@1004 : Integer;UsedForRecordChange@1005 : Boolean);
    VAR
      WorkflowEvent@1000 : Record 1520;
    BEGIN
      IF WorkflowEvent.GET(FunctionName) THEN
        EXIT;

      WorkflowEvent.SETRANGE(Description,Description);
      //IF WorkflowEvent.FINDFIRST THEN // JKI
      //  ERROR(EventAlreadyExistErr,Description);

      WorkflowEvent.INIT;
      WorkflowEvent."Function Name" := FunctionName;
      WorkflowEvent."Table ID" := TableID;
      WorkflowEvent.Description := Description;
      WorkflowEvent."Request Page ID" := RequestPageID;
      WorkflowEvent."Used for Record Change" := UsedForRecordChange;
      IF WorkflowEvent.INSERT THEN; // JKI

      AddEventPredecessors(WorkflowEvent."Function Name");
    END;

    PROCEDURE AddEventPredecessor@66(FunctionName@1001 : Code[128];PredecessorFunctionName@1002 : Code[128]);
    VAR
      WFEventResponseCombination@1000 : Record 1509;
    BEGIN
      WFEventResponseCombination.INIT;
      WFEventResponseCombination.Type := WFEventResponseCombination.Type::"Event";
      WFEventResponseCombination."Function Name" := FunctionName;
      WFEventResponseCombination."Predecessor Type" := WFEventResponseCombination."Predecessor Type"::"Event";
      WFEventResponseCombination."Predecessor Function Name" := PredecessorFunctionName;
      IF WFEventResponseCombination.INSERT THEN;
    END;

    PROCEDURE RunWorkflowOnSendExpenseForApprovalCode@21() : Code[128];
    BEGIN
      EXIT(UPPERCASE('RunWorkflowOnSendExpenseForApproval'));
    END;

    [EventSubscriber(Codeunit,6086369,OnSendExpenseForApproval)]
    PROCEDURE RunWorkflowOnSendExpenseForApproval@1(VAR Expense@1000 : Record 6086320);
    BEGIN
      WorkflowManagement.HandleEvent(RunWorkflowOnSendExpenseForApprovalCode,Expense);
    END;

    PROCEDURE RunWorkflowOnExpenseForceApproveApprovalRequestCode@3() : Code[128];
    BEGIN
      EXIT(UPPERCASE('RunWorkflowOnExpenseForceApproveApprovalRequest'));
    END;

    [EventSubscriber(Codeunit,6086369,OnExpenseForceApproveApprovalRequest)]
    PROCEDURE RunWorkflowOnExpenseForceApproveApprovalRequest@2(VAR Expense@1000 : Record 6086320);
    BEGIN
      WorkflowManagement.HandleEvent(RunWorkflowOnExpenseForceApproveApprovalRequestCode,Expense);
    END;

    PROCEDURE RunWorkflowOnExpenseForceRejectApprovalRequestCode@6() : Code[128];
    BEGIN
      EXIT(UPPERCASE('RunWorkflowOnExpenseForceRejectApprovalRequest'));
    END;

    [EventSubscriber(Codeunit,6086369,OnExpenseForceRejectApprovalRequest)]
    PROCEDURE RunWorkflowOnExpenseForceRejectApprovalRequest@5(VAR Expense@1000 : Record 6086320);
    BEGIN
      WorkflowManagement.HandleEvent(RunWorkflowOnExpenseForceRejectApprovalRequestCode,Expense);
    END;

    PROCEDURE RunWorkflowOnCancelExpenseApprovalRequestCode@22() : Code[128];
    BEGIN
      EXIT(UPPERCASE('RunWorkflowOnCancelExpenseApprovalRequest'));
    END;

    [EventSubscriber(Codeunit,6086369,OnCancelExpenseApprovalRequest)]
    PROCEDURE RunWorkflowOnCancelExpenseApprovalRequest@8(VAR Expense@1000 : Record 6086320);
    BEGIN
      WorkflowManagement.HandleEvent(RunWorkflowOnCancelExpenseApprovalRequestCode,Expense);
    END;

    BEGIN
    END.
  }
}

