OBJECT Codeunit 81 Sales-Post (Yes/No)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00.00.44974,4PS9.00;
  }
  PROPERTIES
  {
    TableNo=36;
    OnRun=BEGIN
            SalesHeader.COPY(Rec);
            Code;
            Rec := SalesHeader;
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=&Ship,&Invoice,Ship &and Invoice';
      Text001@1001 : TextConst 'ENU=Do you want to post the %1?';
      Text002@1002 : TextConst 'ENU=&Receive,&Invoice,Receive &and Invoice';
      SalesHeader@1003 : Record 36;
      Selection@1005 : Integer;
      PreviewMode@1004 : Boolean;
      SalesSetup@1210190001 : Record 311;
      Text11012001@1100485000 : TextConst 'ENU=Do you want to provisionally Invoice the %1? Invoice';
      Text11012002@1100528800 : TextConst 'ENU=It is only possible to post released Invoices';
      Text11012003@1100528801 : TextConst 'ENU=It is only possible to post released Orders';
      PostingHasBeenDone@1100528400 : Boolean;

    [TryFunction]
    LOCAL PROCEDURE Code@1();
    VAR
      SalesSetup@1002 : Record 311;
      SalesPostViaJobQueue@1000 : Codeunit 88;
      SalesPost@1001 : Codeunit 80;
    BEGIN
      PostingHasBeenDone := FALSE; //**4PS.n
      WITH SalesHeader DO
        IF NOT PreviewMode THEN BEGIN
          CASE "Document Type" OF
            "Document Type"::Order:
              BEGIN
              //Selection := STRMENU(Text000,3); //**4PS.o

                //**4PS.sn
                IF SalesSetup."Release Sales Orders Required" THEN BEGIN
                  IF SalesHeader.Status = SalesHeader.Status::Open THEN BEGIN
                    MESSAGE(Text11012003);
                    EXIT;
                  END;
                END;

                IF "Sales Document Type" = "Sales Document Type"::"Sales Logistics Separated" THEN BEGIN
                  IF NOT CONFIRM(Text11012001, FALSE, "Document Type") THEN
                    EXIT
                  ELSE
                    Selection := 2;
                END ELSE BEGIN
                  IF SalesSetup."Invoice Sales Orders" <> SalesSetup."Invoice Sales Orders"::No THEN
                    Selection := STRMENU(Text000,1)
                  ELSE BEGIN
                    IF NOT CONFIRM(Text001, FALSE, "Document Type") THEN
                      EXIT
                    ELSE
                      Selection := 1;
                  END;
                END;
                //**4PS.en

                IF Selection = 0 THEN
                  EXIT;

                Ship := Selection IN [1,3];
                Invoice := Selection IN [2,3];
                UpdatePostingAndDocDate(WORKDATE); //**4PS.n
              END;
            "Document Type"::"Return Order":
              BEGIN
              //Selection := STRMENU(Text002,3);  //**4PS.o 27074
                //**4PS.sn 27074
                IF SalesSetup."Invoice Return Orders" <> SalesSetup."Invoice Return Orders"::No THEN
                  Selection := STRMENU(Text002,1)
                ELSE BEGIN
                  IF NOT CONFIRM(Text001, FALSE, "Document Type") THEN
                    EXIT
                  ELSE
                    Selection := 1;
                END;
                //**4PS.en

                IF Selection = 0 THEN
                  EXIT;
                Receive := Selection IN [1,3];
                Invoice := Selection IN [2,3];
              END
            ELSE
            BEGIN //**4PS.n
              IF NOT
                 CONFIRM(
                   Text001,FALSE,
                   "Document Type")
              THEN
                EXIT;
              //**4PS.sn
              IF "Document Type" IN ["Document Type"::Invoice, "Document Type"::"Credit Memo"] THEN BEGIN
                IF SalesSetup."Post only released Invoices" THEN BEGIN
                  IF SalesHeader.Status = SalesHeader.Status::Open THEN BEGIN
                    MESSAGE(Text11012002);
                    EXIT;
                  END;
                END;
                UpdatePostingAndDocDate(WORKDATE);
              END;
            END;
            //**4PS.en
          END;

          "Print Posted Documents" := FALSE;

          SalesSetup.GET;
          IF SalesSetup."Post with Job Queue" THEN
            SalesPostViaJobQueue.EnqueueSalesDoc(SalesHeader)
          ELSE
            //**4PS.sn
            IF PostPlantInvoiceProposalViaIC THEN
              SalesPost.PostInvoiceProposalviaIC(SalesHeader)
            ELSE
            //**4PS.en
              CODEUNIT.RUN(CODEUNIT::"Sales-Post",SalesHeader);
        END ELSE BEGIN
          CASE "Document Type" OF
            "Document Type"::Order:
              Ship := TRUE;
            "Document Type"::"Return Order":
              Receive := TRUE;
          END;
          Invoice := TRUE;
          SalesPost.SetPreviewMode(TRUE);
          SalesPost.RUN(SalesHeader);
        END;

      PostingHasBeenDone := TRUE; //**4PS.n
    END;

    PROCEDURE Preview@2(VAR SalesHdr@1000 : Record 36);
    VAR
      GenJnlPostPreview@1001 : Codeunit 19;
    BEGIN
      GenJnlPostPreview.Start;
      PreviewMode := TRUE;
      SalesHeader.COPY(SalesHdr);
      IF NOT Code THEN BEGIN
        GenJnlPostPreview.Finish;
        IF GETLASTERRORTEXT <> GenJnlPostPreview.GetPreviewModeErrMessage THEN
          ERROR(GETLASTERRORTEXT);
        GenJnlPostPreview.ShowAllEntries;
        ERROR('');
      END;
    END;

    PROCEDURE GetPostingHasBeenDone@1100528400() : Boolean;
    BEGIN
      //**4PS
      EXIT(PostingHasBeenDone);
    END;

    BEGIN
    END.
  }
}

