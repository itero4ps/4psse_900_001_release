OBJECT Codeunit 91 Purch.-Post (Yes/No)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00.00.44974,4PS9.00,4PSSE;
  }
  PROPERTIES
  {
    TableNo=38;
    OnRun=BEGIN
            PurchHeader.COPY(Rec);
            Code;
            Rec := PurchHeader;
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=&Receive,&Invoice,Receive and &Register Invoice,Receive &and Invoice';
      Text001@1001 : TextConst 'ENU=Do you want to post the %1?';
      Text002@1002 : TextConst 'ENU=&Ship,&Invoice,Ship &and Invoice';
      PurchHeader@1003 : Record 38;
      PurchPost@1006 : Codeunit 90;
      Selection@1005 : Integer;
      PreviewMode@1004 : Boolean;
      gWorkingDate@1100525003 : Date;
      gSelectionOnlyReceipt@1100525000 : Boolean;
      gSkipReplaceDates@1100525001 : Boolean;
      gFromSiteMgtForm@1100525002 : Boolean;
      Text11012000@1100525004 : TextConst 'ENU=&Receive,&Invoice,Receive and &Register Invoice';
      Text11012001@1100409000 : TextConst 'ENU=It is only possible to post released Orders';
      PostingHasBeenDone@1100528400 : Boolean;

    [TryFunction]
    LOCAL PROCEDURE Code@1();
    VAR
      PurchSetup@1000 : Record 312;
      PurchPostViaJobQueue@1001 : Codeunit 98;
    BEGIN
      WITH PurchHeader DO BEGIN
        PostingHasBeenDone := FALSE; //**4PS.n
        IF NOT PreviewMode THEN BEGIN
          CASE "Document Type" OF
            "Document Type"::Order:
              BEGIN
                //Selection := STRMENU(Text000,3); //**4PS.o
                //**4PS.sn
              PurchSetup.GET;
                IF ("Purchase Order Type" = "Purchase Order Type"::"Purchase Order") THEN
                  IF PurchSetup."Release Purch Orders Required" THEN BEGIN
                    IF Status = Status::Open THEN BEGIN
                      MESSAGE(Text11012001);
                      EXIT;
                    END;
                  END;

                IF ("Purchase Order Type" = "Purchase Order Type"::"Return Order") OR gSelectionOnlyReceipt THEN
                  Selection := 1
                ELSE BEGIN
                  PurchSetup.GET;
                  IF PurchSetup."Invoice Purchase Orders" THEN BEGIN
                    IF NOT PurchOrderWithPlantAcqOrRent() THEN  //T003489
                      Selection := STRMENU(Text000,1)
                    ELSE
                      Selection := STRMENU(Text11012000,1);  //T003489
                  END ELSE BEGIN
                    IF NOT CONFIRM(Text001,FALSE,"Document Type") THEN
                      EXIT
                    ELSE
                      Selection := 1;
                  END;
                END;
                //**4PS.en

                IF Selection = 0 THEN
                  EXIT;
                Receive := Selection IN [1,3,4];
                Invoice := Selection IN [2,4];
                //**4PS.sn
                "Register Invoice" := (Selection = 3);          //**4PS01.n
                IF NOT gSkipReplaceDates THEN
                  UpdatePostingAndDocDate(FALSE,gWorkingDate);
                //**4PS.en
              END;
            "Document Type"::"Return Order":
              BEGIN
                Selection := STRMENU(Text002,3);
                IF Selection = 0 THEN
                  EXIT;
                Ship := Selection IN [1,3];
                Invoice := Selection IN [2,3];
                "Register Invoice" := FALSE //**4PS01.n
              END
            ELSE
              IF NOT CONFIRM(Text001,FALSE,"Document Type") THEN
                EXIT;
          END;
          "Print Posted Documents" := FALSE;

          PurchSetup.GET;
          IF PurchSetup."Post with Job Queue" THEN
            PurchPostViaJobQueue.EnqueuePurchDoc(PurchHeader)
          ELSE
            CODEUNIT.RUN(CODEUNIT::"Purch.-Post",PurchHeader);
        END ELSE BEGIN
          Ship := "Document Type" = "Document Type"::"Return Order";
          Receive := "Document Type" = "Document Type"::Order;
          Invoice := TRUE;
          PurchPost.SetPreviewMode(TRUE);
          PurchPost.RUN(PurchHeader);
        END;
        PostingHasBeenDone := TRUE; //**4PS.n
      END;
    END;

    PROCEDURE Preview@2(VAR PurchaseHeader@1000 : Record 38);
    VAR
      GenJnlPostPreview@1002 : Codeunit 19;
    BEGIN
      GenJnlPostPreview.Start;
      PreviewMode := TRUE;
      PurchHeader.COPY(PurchaseHeader);
      IF NOT Code THEN BEGIN
        GenJnlPostPreview.Finish;
        IF GETLASTERRORTEXT <> GenJnlPostPreview.GetPreviewModeErrMessage THEN
          ERROR(GETLASTERRORTEXT);
        GenJnlPostPreview.ShowAllEntries;
        ERROR('');
      END;
    END;

    PROCEDURE PostReceiptsFromBlanketScheme@1100485001(VAR Rec@1100485000 : Record 38;NewPostingDate@1100485001 : Date;PlotNo@1100525000 : Code[10]);
    VAR
      PurchPost@1100525002 : Codeunit 90;
    BEGIN
      //**4PS
      PurchHeader.COPY(Rec);
      WITH PurchHeader DO BEGIN
        PostingHasBeenDone := FALSE;
        TESTFIELD("Document Type", "Document Type"::Order);
        TESTFIELD("Purchase Order Type", "Purchase Order Type"::"Blanket Order");

        Receive := TRUE;
        Invoice := FALSE;
        "Register Invoice" := FALSE;

        IF NOT gSkipReplaceDates THEN
          UpdatePostingAndDocDate(TRUE,gWorkingDate);

        CLEAR(PurchPost);  //DP00416.n
        PurchPost.SetPlotNoReceipts(PlotNo);  //DP00416.n
        PurchPost.RUN(PurchHeader);
        //Note: PurchPostViaJobQueue not alowed. Post receipts must be done immediately because there can be a
        //      second run for the same order. Then first run must be processed. (see R11020239)
        PostingHasBeenDone := TRUE;
      END;
      Rec := PurchHeader;
    END;

    PROCEDURE SetSelectionOnlyReceipt@1100525000();
    BEGIN
      //**4PS
      gSelectionOnlyReceipt := TRUE;
    END;

    PROCEDURE SetSkipReplaceDates@1100525001();
    BEGIN
      //**4PS
      gSkipReplaceDates := TRUE;
    END;

    PROCEDURE SetSiteMgtForm@1100525002(WorkingDate@1100525000 : Date);
    BEGIN
      //**4PS  C-027632
      gFromSiteMgtForm := TRUE;
      gWorkingDate := WorkingDate;
    END;

    PROCEDURE PurchOrderWithPlantAcqOrRent@1100525003() : Boolean;
    VAR
      PurchOrderLine@1100525000 : Record 39;
    BEGIN
      //**4PS T003489
      PurchOrderLine.SETRANGE("Document Type", PurchHeader."Document Type");
      PurchOrderLine.SETRANGE("Document No.", PurchHeader."No.");
      PurchOrderLine.SETFILTER("Cost Component Plant", '<>%1', '');
      IF PurchOrderLine.FINDSET THEN BEGIN
        REPEAT
          IF PurchOrderLine.CheckPlantAcquisitionOrRent(PurchOrderLine) <> 0 THEN
            EXIT(TRUE);
        UNTIL PurchOrderLine.NEXT = 0;
      END;
      EXIT(FALSE);
    END;

    PROCEDURE GetPostingHasBeenDone@1100528400() : Boolean;
    BEGIN
      //**4PS
      EXIT(PostingHasBeenDone);
    END;

    BEGIN
    END.
  }
}

