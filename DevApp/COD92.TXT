OBJECT Codeunit 92 Purch.-Post + Print
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW17.00,4PS9.00;
  }
  PROPERTIES
  {
    TableNo=38;
    OnRun=BEGIN
            PurchHeader.COPY(Rec);
            Code;
            Rec := PurchHeader;
          END;

  }
  CODE
  {
    VAR
      Text000@1100485000 : TextConst 'ENU=&Receive,&Invoice,Receive and &Register Invoice,Receive &and Invoice';
      Text001@1001 : TextConst 'ENU=Do you want to post and print the %1?';
      Text002@1002 : TextConst 'ENU=&Ship,&Invoice,Ship &and Invoice';
      PurchHeader@1003 : Record 38;
      PurchRcptHeader@1004 : Record 120;
      PurchInvHeader@1005 : Record 122;
      PurchCrMemoHeader@1006 : Record 124;
      PurchShptHeader@1007 : Record 6650;
      ReportSelection@1008 : Record 77;
      Selection@1010 : Integer;
      gWorkingDate@1100525001 : Date;
      gFromSiteMgtForm@1100525000 : Boolean;
      Text11012001@1100409000 : TextConst 'ENU=It is only possible to post released Orders';

    LOCAL PROCEDURE Code@2();
    VAR
      PurchSetup@1000 : Record 312;
      PurchasePostViaJobQueue@1001 : Codeunit 98;
    BEGIN
      PurchSetup.GET;  //**4PS.n

      WITH PurchHeader DO BEGIN
        CASE "Document Type" OF
          "Document Type"::Order:
            BEGIN
              //**4PS.so
              //Selection := STRMENU(Text000,3);
              //IF Selection = 0 THEN
              //  EXIT;
              //Receive := Selection IN [1,3];
              //Invoice := Selection IN [2,3];
              //**4PS.eo

              //**4PS.sn

              // dp00556.sn
              IF ("Purchase Order Type" = "Purchase Order Type"::"Purchase Order") THEN
                IF PurchSetup."Release Purch Orders Required" THEN BEGIN
                  IF Status = Status::Open THEN BEGIN
                    MESSAGE(Text11012001);
                    EXIT;
                  END;
                END;
              // dp00556.en

              IF ("Purchase Order Type" = "Purchase Order Type"::"Return Order") THEN
                Selection := 1
              ELSE BEGIN
                IF PurchSetup."Invoice Purchase Orders" THEN
                  Selection := STRMENU(Text000,1)
                ELSE
                  Selection := 1;
              END;

              IF Selection = 0 THEN
                EXIT;
              Receive := Selection IN [1,3,4];
              Invoice := Selection IN [2,4];
              //**4PS.sn
              "Register Invoice" := (Selection = 3);  //**4PS01.n
              UpdatePostingAndDocDate(FALSE,gWorkingDate);
              //**4PS.en
            END;
          "Document Type"::"Return Order":
            BEGIN
              Selection := STRMENU(Text002,3);
              IF Selection = 0 THEN
                EXIT;
              Ship := Selection IN [1,3];
              Invoice := Selection IN [2,3];
              "Register Invoice" := FALSE;  //**4PS01.n
            END
          ELSE
            IF NOT
               CONFIRM(
                 Text001,FALSE,
                 "Document Type")
            THEN
              EXIT;
        END;
        "Print Posted Documents" := TRUE;

        PurchSetup.GET;
        IF PurchSetup."Post & Print with Job Queue" THEN
          PurchasePostViaJobQueue.EnqueuePurchDoc(PurchHeader)
        ELSE BEGIN
          CODEUNIT.RUN(CODEUNIT::"Purch.-Post",PurchHeader);
          COMMIT;  //**4PS.n
          GetReport(PurchHeader);
        END;
      END;
    END;

    PROCEDURE GetReport@3(VAR PurchHeader@1000 : Record 38);
    BEGIN
      WITH PurchHeader DO
        CASE "Document Type" OF
          "Document Type"::Order:
            BEGIN
              IF Receive THEN BEGIN
                PurchRcptHeader."No." := "Last Receiving No.";
                PurchRcptHeader.SETRECFILTER;
                PrintReport(ReportSelection.Usage::"P.Receipt");
              END;
              IF Invoice THEN BEGIN
                PurchInvHeader."No." := "Last Posting No.";
                PurchInvHeader.SETRECFILTER;
                PrintReport(ReportSelection.Usage::"P.Invoice");
              END;
            END;
          "Document Type"::Invoice:
            BEGIN
              IF "Last Posting No." = '' THEN
                PurchInvHeader."No." := "No."
              ELSE
                PurchInvHeader."No." := "Last Posting No.";
              PurchInvHeader.SETRECFILTER;
              PrintReport(ReportSelection.Usage::"P.Invoice");
            END;
          "Document Type"::"Return Order":
            BEGIN
              IF Ship THEN BEGIN
                PurchShptHeader."No." := "Last Return Shipment No.";
                PurchShptHeader.SETRECFILTER;
                PrintReport(ReportSelection.Usage::"P.Ret.Shpt.");
              END;
              IF Invoice THEN BEGIN
                PurchCrMemoHeader."No." := "Last Posting No.";
                PurchCrMemoHeader.SETRECFILTER;
                PrintReport(ReportSelection.Usage::"P.Cr.Memo");
              END;
            END;
          "Document Type"::"Credit Memo":
            BEGIN
              IF "Last Posting No." = '' THEN
                PurchCrMemoHeader."No." := "No."
              ELSE
                PurchCrMemoHeader."No." := "Last Posting No.";
              PurchCrMemoHeader.SETRECFILTER;
              PrintReport(ReportSelection.Usage::"P.Cr.Memo");
            END;
        END;
    END;

    LOCAL PROCEDURE PrintReport@1(ReportUsage@1000 : Integer);
    VAR
      DocPrint@1100485001 : Codeunit 229;
      TempReportSelection@1100485000 : TEMPORARY Record 77;
    BEGIN
      { //**4PS.so
      ReportSelection.RESET;
      ReportSelection.SETRANGE(Usage,ReportUsage);
      ReportSelection.FINDSET;
      REPEAT
        ReportSelection.TESTFIELD("Report ID");
        CASE ReportUsage OF
          ReportSelection.Usage::"P.Invoice":
            REPORT.RUN(ReportSelection."Report ID",FALSE,FALSE,PurchInvHeader);
          ReportSelection.Usage::"P.Cr.Memo":
            REPORT.RUN(ReportSelection."Report ID",FALSE,FALSE,PurchCrMemoHeader);
          ReportSelection.Usage::"P.Receipt":
            REPORT.RUN(ReportSelection."Report ID",FALSE,FALSE,PurchRcptHeader);
          ReportSelection.Usage::"P.Ret.Shpt.":
            REPORT.RUN(ReportSelection."Report ID",FALSE,FALSE,PurchShptHeader);
        END;
      UNTIL ReportSelection.NEXT = 0;
      } //**4PS.eo

      //**4PS.sn
      //* Now 'TempReportSelection' and argument TRUE on REPORT.RUN
      //DocPrint.GetReportSelection(ReportUsage,TempReportSelection,FALSE);  //C021520.o
      DocPrint.GetReportSelection(ReportUsage,TempReportSelection,TRUE);  //C021520.n
      TempReportSelection.FIND('-');
      REPEAT
        CASE ReportUsage OF
          TempReportSelection.Usage::"P.Invoice":
            REPORT.RUN(TempReportSelection."Report ID",TRUE,FALSE,PurchInvHeader);
          TempReportSelection.Usage::"P.Cr.Memo":
            REPORT.RUN(TempReportSelection."Report ID",TRUE,FALSE,PurchCrMemoHeader);
          TempReportSelection.Usage::"P.Receipt":
            REPORT.RUN(TempReportSelection."Report ID",TRUE,FALSE,PurchRcptHeader);
          TempReportSelection.Usage::"P.Ret.Shpt.":
            REPORT.RUN(TempReportSelection."Report ID",TRUE,FALSE,PurchShptHeader);
        END;
      UNTIL TempReportSelection.NEXT = 0;
      //**4PS.en
    END;

    PROCEDURE SetSiteMgtForm@1100525002(WorkingDate@1100525000 : Date);
    BEGIN
      //**4PS  C-027632
      gFromSiteMgtForm := TRUE;
      gWorkingDate := WorkingDate;
    END;

    BEGIN
    {
      4PS, dbeekman, 22-10-2008:
            - Report selection handled by cod229.GetReportSelection
    }
    END.
  }
}

