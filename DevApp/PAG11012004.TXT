OBJECT Page 11012004 Budget Subform
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    SourceTable=Table11012001;
    SourceTableView=WHERE(Budget Summary Line=FILTER(No));
    PageType=ListPart;
    TimerUpdate=0;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             FILTERGROUP(4);
             "Project No." := GETFILTER("Project No.");
             FILTERGROUP(0);
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 TradeItemEnabled := ItemSetup.READPERMISSION;

                 JobsSetup.GET();
                 CostComponentEditable := JobsSetup."Cost Component Editable";

                 FILTERGROUP(4);
                 "Project No." := GETFILTER("Project No.");
                 FILTERGROUP(0);
               END;

    OnClosePage=BEGIN
                  RecalcSummarySheet;
                END;

    OnAfterGetRecord=BEGIN
                       RefQuote := RouteRefMgtCU.GetQuoteOfReference("Purchase Route Reference");
                       GetItemSpecifications;

                       IF gFromReference THEN BEGIN
                         gFromReference := FALSE;
                         SETRANGE("Line No.");
                       END;

                       KeyChangedBySystem := FALSE;
                       DescriptionOnFormat;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  //DPA_SetDefaultDepartment; //*31927.o Not department of the user must always be that of the project (done in OnInsert of table)
                  //**4PS Generated Code.en02
                  RefQuote := '';
                  GetVersionDate;
                  //"Cost Type" := xRec."Cost Type";  //db, 26-03-04  //*C-025993.o
                  IF "Project No." <> '' THEN
                    VALIDATE("Cost Type", xRec."Cost Type");  //*C-025993.n
                END;

    OnInsertRecord=BEGIN
                     Fixed := BudgetFixed(Rec);
                     IF Fixed THEN
                       ERROR(Text000);

                     IF NOT KeyChangedBySystem THEN BEGIN
                       IF "Extension Contract" <> '' THEN BEGIN
                         SETCURRENTKEY("Project No.","Extension Contract","Line No.");
                         KeyChangedBySystem := TRUE;
                       END;
                       IF Adjustment <> '' THEN BEGIN
                         SETCURRENTKEY("Project No.",Adjustment,"Line No.");
                         KeyChangedBySystem := TRUE;
                       END;
                     END;

                     IF (Quantity <> 0) OR
                        (Amount <> 0)
                     THEN BEGIN
                       FillChangedSummarySheet(Rec, FALSE);
                       RecalcSummarySheet;
                     END;
                   END;

    OnModifyRecord=BEGIN
                     IF (xRec.Quantity <> Quantity) OR
                        (xRec.Hours <> Hours ) OR
                        (xRec.Amount <> Amount) OR
                        (xRec."Cost Object" <> "Cost Object") OR //M25061
                        (xRec."Cost Type" <> "Cost Type") THEN BEGIN
                       FillChangedSummarySheet(Rec, FALSE);
                       RecalcSummarySheet;
                     END;
                   END;

    OnDeleteRecord=BEGIN
                     Fixed := BudgetFixed(Rec);
                     IF Fixed THEN
                       ERROR(Text001);

                     //DeleteSummaryLinesExtAdjust; //call 29724  //29724-2.o
                     //FillChangedSummarySheet(Rec, TRUE);        //29724-2.o
                     //29724-2.sn
                     IF DeleteSummaryLinesExtAdjust THEN   // If last line of contract and/or adjusment is deleted
                       FillChangedSummarySheet(Rec, TRUE)
                     ELSE
                       FillChangedSummarySheet(Rec, FALSE);
                     //29724-2.en

                     DELETE(FALSE);
                     RecalcSummarySheet;
                     INSERT(FALSE);
                   END;

    OnAfterGetCurrRecord=BEGIN
                           Fixed := BudgetFixed(Rec);

                           CALCFIELDS("Total Labor", "Total material", "Total Subcontracting", "Total Plant", "Total Sundry",
                             "Total Hours", "Total Amount");

                           SetFieldsEditable;
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1100525023;2 ;Action    ;
                      Name=CopyPasteButton;
                      CaptionML=ENU=&Copy;
                      Image=Copy;
                      OnAction=VAR
                                 BudgetLine@1100525002 : Record 11012001;
                                 Job@1100525004 : Record 11072003;
                                 ExtensionContract@1100525000 : Record 11012004;
                                 CopyBudgetPage@1100525001 : Page 11130145;
                                 ContractNo@1100525003 : Code[20];
                               BEGIN
                                 CASE gMainPageID OF
                                   PAGE::"Project Budget":
                                     BEGIN
                                       TESTFIELD("Project No.");
                                       Job.GET("Project No.");
                                       Job.TESTFIELD("Budget Fixed", FALSE);

                                     END;
                                   PAGE::"Extension Contract":
                                     BEGIN
                                       TESTFIELD("Project No.");
                                       TESTFIELD("Extension Contract");
                                       ExtensionContract.GET("Project No.", "Extension Contract");
                                       ExtensionContract.TESTFIELD("Extension Fixed", FALSE);
                                       ContractNo := "Extension Contract";
                                     END;
                                 ELSE
                                   EXIT;
                                 END;

                                 // Copy from original budget
                                 BudgetLine.SETRANGE("Project No.", "Project No.");
                                 BudgetLine.SETFILTER(Adjustment, '%1','');
                                 BudgetLine.SETFILTER("Adjustment Filter", '%1','');
                                 BudgetLine.SETFILTER("Extension Contract", '%1','');
                                 BudgetLine.SETFILTER("Extension Filter", '%1','');
                                 BudgetLine.SETFILTER(Option, '%1','');

                                 CopyBudgetPage.SETTABLEVIEW(BudgetLine);
                                 CopyBudgetPage.SetToSelection("Project No.", ContractNo, "Line No.");
                                 CopyBudgetPage.StdDialogRunModal;
                               END;
                                }
      { 1100525001;2 ;Action    ;
                      Name=ReverseButton;
                      CaptionML=ENU=&Reverse;
                      Image=ReverseLines;
                      OnAction=VAR
                                 ExtensionRec@1100525000 : Record 11012004;
                               BEGIN
                                 //Used in Extension Contract.
                                 IF "Extension Contract" = '' THEN
                                   EXIT;

                                 IF ExtensionRec.GET("Project No.", "Extension Contract") THEN;
                                 IF ExtensionRec."Extension Fixed" THEN
                                   ERROR(Text002);

                                 ShiftQuantity;
                               END;
                                }
      { 1210190001;2 ;Action    ;
                      CaptionML=ENU=Recalc Summary Sheet;
                      Image=Recalculate;
                      OnAction=BEGIN
                                 RecalcSummarySheet;
                               END;
                                }
      { 1901111604;2 ;Action    ;
                      CaptionML=ENU=Modify Vendor Collectively;
                      Image=Vendor;
                      OnAction=BEGIN
                                 UpdateVendor;
                               END;
                                }
      { 1907905804;1 ;ActionGroup;
                      CaptionML=ENU=Budgetline }
      { 1906995904;2 ;Action    ;
                      CaptionML=ENU=&Text;
                      Image=Text;
                      OnAction=BEGIN
                                 //This functionality was copied from page #11012013. Unsupported part was commented. Please check it.
                                 EditText;
                               END;
                                }
      { 1100525005;2 ;Action    ;
                      CaptionML=ENU=Comment Lines (Budget Line);
                      Image=ViewComments;
                      OnAction=BEGIN
                                 // **4PS MVOS
                                 EditCommentLines;
                               END;
                                }
      { 1100409001;2 ;Action    ;
                      CaptionML=ENU=Split Project Planning Activity No.;
                      RunPageOnRec=Yes;
                      Image=SplitLines;
                      OnAction=VAR
                                 BudgetLine@1100528801 : Record 11012001;
                                 SplitProjlanningActivityPAGE@1100528800 : Page 11132121;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(BudgetLine);
                                 IF BudgetLine.COUNT > 1 THEN
                                   ERROR(Text015);

                                 TESTFIELD("Project Planning Activity No.");

                                 SplitProjlanningActivityPAGE.SETTABLEVIEW(BudgetLine);
                                 SplitProjlanningActivityPAGE.RUNMODAL;
                               END;
                                }
      { 1900854904;1 ;ActionGroup;
                      CaptionML=ENU=&Project }
      { 1903665304;2 ;Action    ;
                      CaptionML=ENU=&Text;
                      Visible=False;
                      Image=Text;
                      OnAction=BEGIN
                                 EditText;
                               END;
                                }
      { 1905210204;2 ;Action    ;
                      CaptionML=ENU=Purchase Route References;
                      Visible=True;
                      Image=ContactReference;
                      OnAction=BEGIN
                                 ShowPurchRouteRef;
                               END;
                                }
      { 1903326104;2 ;Action    ;
                      CaptionML=ENU=Item Features;
                      Visible=True;
                      Image=BulletList;
                      OnAction=BEGIN
                                 ShowItemRouteRef;  //db, 06-04-07 (rano)
                               END;
                                }
      { 1100525003;1 ;ActionGroup;
                      CaptionML=ENU=Bill of material }
      { 1901540504;2 ;Action    ;
                      CaptionML=ENU=Explode Bill of Materials;
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeBOM; //db, 06-04-07 (rano)
                               END;
                                }
      { 1100525007;2 ;Action    ;
                      CaptionML=ENU=Modify BOM Discount;
                      Image=CopyFromBOM;
                      OnAction=BEGIN
                                 UpgradeBOMDiscount;
                               END;
                                }
      { 1100525009;2 ;Action    ;
                      CaptionML=ENU=Modify BOM Amount;
                      Image=CopyFromBOM;
                      OnAction=BEGIN
                                 UpgradeBOMAmount;
                               END;
                                }
      { 1100525011;2 ;Action    ;
                      CaptionML=ENU=Remove Zero-Lines BOM;
                      Image=Delete;
                      OnAction=BEGIN
                                 RemoveZeroLinesBOM;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 1100525016;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE;
                Editable=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr=Element;
                Editable=ElementEditable }

    { 1100485018;2;Field  ;
                SourceExpr="Element Description";
                Visible=FALSE }

    { 1100525002;2;Field  ;
                SourceExpr=Chapter;
                Visible=FALSE }

    { 1100525004;2;Field  ;
                SourceExpr=Paragraph;
                Visible=FALSE }

    { 2   ;2   ;Field     ;
                SourceExpr="Cost Type";
                Editable=CostTypeEditable;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;
                            }

    { 1210190018;2;Field  ;
                SourceExpr="Extension Contract";
                Visible=FALSE;
                Enabled=FALSE;
                Editable=FALSE }

    { 1100409000;2;Field  ;
                SourceExpr=Adjustment;
                Visible=FALSE;
                Editable=false }

    { 1100485042;2;Field  ;
                SourceExpr="Plot No.";
                Visible=FALSE;
                Editable="Plot No.Editable" }

    { 1100485044;2;Field  ;
                SourceExpr="House Model";
                Visible=FALSE;
                Editable="House ModelEditable" }

    { 1100485046;2;Field  ;
                SourceExpr="Main Group";
                Visible=FALSE;
                Editable="Main GroupEditable" }

    { 1100485048;2;Field  ;
                SourceExpr=Group;
                Visible=FALSE;
                Editable=GroupEditable }

    { 1100485050;2;Field  ;
                SourceExpr="Sub Group";
                Visible=FALSE;
                Editable="Sub GroupEditable" }

    { 1100485040;2;Field  ;
                SourceExpr=Option;
                Visible=FALSE;
                Editable=OptionEditable }

    { 1100485038;2;Field  ;
                SourceExpr="Project Planning Activity No.";
                Visible=FALSE;
                Editable=ProjectPlanningActivityNoEdita }

    { 1100528800;2;Field  ;
                SourceExpr="Proj. Plan. Par. Activ. Descr." }

    { 1100485000;2;Field  ;
                SourceExpr="Tender Paragraph";
                Visible=FALSE;
                Editable="Tender ParagraphEditable";
                OnValidate=BEGIN
                             TenderParagraphOnAfterValidate;
                           END;
                            }

    { 1100485006;2;Field  ;
                SourceExpr="Description Tender Paragraph";
                Visible=FALSE }

    { 1100525010;2;Field  ;
                SourceExpr="Tender Paragraph Text";
                Visible=FALSE }

    { 1100485002;2;Field  ;
                SourceExpr="Tender Paragraph Part";
                Visible=FALSE;
                Editable="Tender Paragraph PartEditable";
                OnValidate=BEGIN
                             TenderParagraphtPartOnAfterVal;
                           END;
                            }

    { 1100485008;2;Field  ;
                SourceExpr="Descr Tender Paragraph Part";
                Visible=FALSE }

    { 1100485020;2;Field  ;
                SourceExpr="Estimate No.";
                Visible=FALSE }

    { 1100528600;2;Field  ;
                SourceExpr="Sub-Estimate No.";
                Visible=FALSE }

    { 1100525006;2;Field  ;
                SourceExpr="Recipe Group";
                Visible=FALSE;
                Editable="Recipe GroupEditable" }

    { 1100525008;2;Field  ;
                SourceExpr=Recipe;
                Visible=FALSE;
                Editable=RecipeEditable;
                OnLookup=BEGIN
                           LookupRecipe(Fixed);  //DP00381
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 6   ;2   ;Field     ;
                SourceExpr="Item No.";
                Editable=ItemNoEditable;
                OnValidate=BEGIN
                             ItemNoOnAfterValidate;
                             SetFieldsEditable;
                           END;

                OnLookup=BEGIN
                           IF Fixed THEN
                             ERROR(Text005);

                           IF NOT ItemNoEditable THEN
                             EXIT;

                           IF HandleLookupItem(FIELDNO("Item No.")) THEN  //db, 24-08-15
                             CurrPage.UPDATE(TRUE);

                           SetFieldsEditable;
                         END;
                          }

    { 1100525018;2;Field  ;
                SourceExpr="Variant Code";
                Visible=FALSE;
                Editable="Variant CodeEditable" }

    { 8   ;2   ;Field     ;
                SourceExpr=Manufacturer;
                Visible=False;
                Enabled=TradeItemEnabled;
                Editable=ItemNoEditable }

    { 10  ;2   ;Field     ;
                SourceExpr="Basic Item";
                Visible=False;
                Enabled=TradeItemEnabled;
                Editable=ItemNoEditable;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;

                OnLookup=BEGIN
                           IF Fixed THEN
                             ERROR(Text005);

                           IF NOT ItemNoEditable THEN
                             EXIT;

                           IF HandleLookupItem(FIELDNO("Basic Item")) THEN  //db, 24-08-15
                             CurrPage.UPDATE(TRUE);

                           SetFieldsEditable;
                         END;
                          }

    { 12  ;2   ;Field     ;
                SourceExpr="Vendor (Trade Item)";
                Visible=false;
                Enabled=TradeItemEnabled;
                Editable=ItemNoEditable }

    { 14  ;2   ;Field     ;
                SourceExpr="Trade Item";
                Visible=false;
                Enabled=TradeItemEnabled;
                Editable=ItemNoEditable;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;

                OnLookup=BEGIN
                           IF Fixed THEN
                             ERROR(Text005);

                           IF NOT ItemNoEditable THEN
                             EXIT;

                           IF HandleLookupItem(FIELDNO("Trade Item")) THEN  //db, 24-08-15
                             CurrPage.UPDATE(TRUE);

                           SetFieldsEditable;
                         END;

                OnAssistEdit=BEGIN
                               IF (HandleAssistEditItem(FIELDNO("Trade Item"))) THEN
                                 CurrPage.UPDATE(TRUE);
                             END;
                              }

    { 1100485012;2;Field  ;
                SourceExpr="Item Brand";
                Visible=FALSE }

    { 1100485014;2;Field  ;
                SourceExpr="Item Type";
                Visible=FALSE }

    { 1100485016;2;Field  ;
                SourceExpr="Item Series";
                Visible=FALSE }

    { 1210190002;2;Field  ;
                SourceExpr="Plant Type";
                Visible=FALSE;
                Editable="Plant TypeEditable" }

    { 18  ;2   ;Field     ;
                SourceExpr="Cost Object";
                Editable=CostObjectEditable;
                LookupPageID=Cost Object List;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;
                            }

    { 1100485010;2;Field  ;
                SourceExpr="Cost Component";
                Visible=FALSE;
                Editable=CostComponentEditable }

    { 1100529000;2;Field  ;
                SourceExpr="FSC Type Code";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr=Description;
                Editable=DescriptionEditable;
                Style=AttentionAccent;
                StyleExpr=DescriptionStyleExpr }

    { 1210190008;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE;
                Editable=Description2Editable }

    { 1210190000;2;Field  ;
                SourceExpr="External Text Block";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Time Quantity";
                Visible=FALSE;
                Editable=TimeQuantityEditable;
                OnValidate=BEGIN
                             UpdateSummary;
                           END;
                            }

    { 24  ;2   ;Field     ;
                SourceExpr="Unit of Time";
                Visible=FALSE;
                Editable=UnitOfTimeEditable }

    { 26  ;2   ;Field     ;
                SourceExpr=Quantity;
                Editable=QuantityEditable;
                OnValidate=BEGIN
                             UpdateSummary;
                             SetFieldsEditable;
                           END;
                            }

    { 1100525012;2;Field  ;
                SourceExpr="Original Quantity";
                Visible=FALSE;
                Editable=OriginalQuantityEditable;
                OnValidate=BEGIN
                             OriginalQuantityOnAfterValidat;
                           END;
                            }

    { 1100525014;2;Field  ;
                SourceExpr="Part of Line";
                Visible=FALSE;
                Editable="Part of LineEditable" }

    { 28  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Editable=UnitOfMeasureEditable }

    { 30  ;2   ;Field     ;
                SourceExpr=Norm;
                Editable=NormEDITABLE;
                OnValidate=BEGIN
                             UpdateSummary;
                             SetFieldsEditable;
                           END;
                            }

    { 1100485004;2;Field  ;
                SourceExpr="Production Rate";
                Visible=FALSE;
                Editable=ProductionRateEDITABLE }

    { 32  ;2   ;Field     ;
                SourceExpr="Rate Code";
                Editable=[RateCodeEDITABLE ];
                OnValidate=BEGIN
                             UpdateSummary;
                             SetFieldsEditable;
                           END;
                            }

    { 34  ;2   ;Field     ;
                SourceExpr=Rate;
                Editable=RateEDITABLE;
                OnValidate=BEGIN
                             UpdateSummary;
                           END;
                            }

    { 1100525020;2;Field  ;
                SourceExpr="Rate (FCY)";
                Visible=FALSE;
                Editable=RateEDITABLE }

    { 1100528900;2;Field  ;
                SourceExpr="Wage Component";
                Visible=FALSE;
                OnValidate=BEGIN
                             //DP00236
                             CurrPage.UPDATE(TRUE);
                             CalcTotals();
                             SetFieldsEditable;
                           END;
                            }

    { 1210190014;2;Field  ;
                SourceExpr="Gross Price";
                Visible=FALSE;
                Editable=GrossPriceEDITABLE }

    { 1100525019;2;Field  ;
                SourceExpr="Gross Price (FCY)";
                Visible=FALSE;
                Editable=GrossPriceEDITABLE }

    { 1210190016;2;Field  ;
                SourceExpr="Discount %";
                Visible=FALSE;
                Editable=DiscountPercEDITABLE }

    { 36  ;2   ;Field     ;
                SourceExpr=Price;
                Editable=PriceEDITABLE;
                OnValidate=BEGIN
                             UpdateSummary;
                           END;
                            }

    { 1100525017;2;Field  ;
                SourceExpr="Price (FCY)";
                Visible=FALSE;
                Editable=PriceEDITABLE }

    { 1100485032;2;Field  ;
                SourceExpr="Surcharge %";
                Visible=FALSE;
                Editable=SurchargePercEDITABLE;
                OnValidate=BEGIN
                             UpdateSummary;
                           END;
                            }

    { 1100485034;2;Field  ;
                SourceExpr="Surcharge Price";
                Visible=FALSE;
                Editable=SurchargePriceEDITABLE }

    { 38  ;2   ;Field     ;
                SourceExpr=Hours }

    { 40  ;2   ;Field     ;
                SourceExpr=Amount;
                Editable=AmountEDITABLE;
                OnValidate=BEGIN
                             UpdateSummary;
                           END;
                            }

    { 1100525021;2;Field  ;
                SourceExpr="Amount (FCY)";
                Visible=FALSE;
                Editable=AmountEDITABLE }

    { 1100525022;2;Field  ;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 1100525024;2;Field  ;
                SourceExpr="Currency Agreement";
                Visible=FALSE }

    { 42  ;2   ;Field     ;
                SourceExpr="Purchase Action";
                Visible=FALSE }

    { 44  ;2   ;Field     ;
                SourceExpr="Purchase Phase";
                Visible=FALSE }

    { 1210190010;2;Field  ;
                SourceExpr="Price Agreement";
                Visible=FALSE;
                Editable="Price AgreementEditable" }

    { 1210190012;2;Field  ;
                SourceExpr=Vendor;
                Visible=FALSE }

    { 1210190006;2;Field  ;
                CaptionML=ENU=Quote No.;
                SourceExpr=RefQuote;
                Visible=FALSE;
                Editable=FALSE;
                OnLookup=VAR
                           lvPurchHeadRec@1210190000 : Record 38;
                         BEGIN
                           IF (RefQuote = '') THEN
                             EXIT;

                           IF (COPYSTR(RefQuote, 1, 1) = '<') THEN  // IF Quote No. is '<Nr.>', then more than one quote present
                             RouteRefMgtCU.ShowReferenceQuoteList("Purchase Route Reference")
                           ELSE BEGIN
                             lvPurchHeadRec.SETRANGE("Document Type", lvPurchHeadRec."Document Type"::Quote);
                             lvPurchHeadRec.SETRANGE("No.", RefQuote);
                             PAGE.RUNMODAL(PAGE::"Purchase Quote", lvPurchHeadRec);
                           END;
                         END;
                          }

    { 1210190004;2;Field  ;
                SourceExpr="Purchase Route Reference";
                Visible=FALSE }

    { 1100485030;2;Field  ;
                SourceExpr="Scheme Code";
                Visible=false;
                Enabled=TradeItemEnabled }

    { 1100485022;2;Field  ;
                SourceExpr=Comments;
                Visible=CommentsVisible;
                Enabled=TradeItemEnabled }

    { 1100485026;2;Field  ;
                SourceExpr="Comments for Logistics";
                Visible=false;
                Enabled=TradeItemEnabled }

    { 1100485024;2;Field  ;
                SourceExpr=Supply;
                Visible=false;
                Enabled=TradeItemEnabled }

    { 1100485028;2;Field  ;
                SourceExpr="Material Sheet";
                Visible=false;
                Enabled=TradeItemEnabled }

    { 1210190024;2;Field  ;
                SourceExpr="Overhead Surcharge from Summ.";
                Visible=FALSE }

    { 1210190022;2;Field  ;
                SourceExpr="Surcharge Amnt from Summary";
                Visible=FALSE;
                Editable=FALSE }

    { 1100485036;2;Field  ;
                SourceExpr="Line No. External Estimate";
                Visible=FALSE }

    { 1100525000;2;Field  ;
                Description=db,  01-10-15: allow reset if generated data (MatReqLine or AdviceOrder) is deleted;
                SourceExpr=Advised;
                Visible=FALSE }

    { 1210190026;2;Field  ;
                CaptionML=ENU=Comment;
                SourceExpr=CommentLineExist();
                Visible=FALSE;
                Editable=FALSE;
                OnValidate=BEGIN
                             CommentLineExistOnPush;
                           END;
                            }

    { 1100525013;2;Field  ;
                SourceExpr="Copied to Adjustment" }

    { 1100525015;2;Field  ;
                SourceExpr="Price History 0 Exists" }

    { 1100528601;2;Field  ;
                SourceExpr="Rental Unit" }

  }
  CODE
  {
    VAR
      Text000@11012009 : TextConst 'ENU=Adding lines not allowed, budget is fixed.';
      Text001@11012010 : TextConst 'ENU=Deleting not allowed, budget is fixed.';
      JobsSetup@1100528000 : Record 315;
      ItemSetup@1100525002 : Record 11012300;
      RouteRefMgtCU@1210190003 : Codeunit 11012045;
      Text005@1100485009 : TextConst 'ENU=Modify not allowed, budget is fixed.';
      Text009@1210190000 : TextConst 'ENU=Before editing text enter the line first';
      gFromReference@1210190004 : Boolean;
      RefQuote@1210190002 : Code[20];
      KeyChangedBySystem@1100485000 : Boolean;
      TmpBudgSummaryRec@1100485004 : TEMPORARY Record 11012064;
      CalcSummaryWindow@1100485005 : Dialog;
      Text011@1100485006 : TextConst 'ENU=Update Summary #1###############';
      DPA_IsHardFilter@1100000999 : Boolean;
      ChangedAmountBOM@1100525114 : Decimal;
      "Plant TypeEditable"@19005558 : Boolean INDATASET;
      ElementEditable@19042443 : Boolean INDATASET;
      "Cost TypeEditable"@19054305 : Boolean INDATASET;
      CostObjectEditable@19075443 : Boolean INDATASET;
      DescriptionEditable@19061412 : Boolean INDATASET;
      Description2Editable@19051642 : Boolean INDATASET;
      TimeQuantityEditable@19056128 : Boolean INDATASET;
      UnitOfTimeEditable@19032307 : Boolean INDATASET;
      QuantityEditable@19013162 : Boolean INDATASET;
      UnitOfMeasureEditable@19007173 : Boolean INDATASET;
      "Price AgreementEditable"@19020391 : Boolean INDATASET;
      "Plot No.Editable"@19050786 : Boolean INDATASET;
      "House ModelEditable"@19059544 : Boolean INDATASET;
      "Main GroupEditable"@19033725 : Boolean INDATASET;
      GroupEditable@19056966 : Boolean INDATASET;
      "Sub GroupEditable"@19017650 : Boolean INDATASET;
      OptionEditable@19055810 : Boolean INDATASET;
      ProjectPlanningActivityNoEdita@19026587 : Boolean INDATASET;
      RecipeEditable@19037157 : Boolean INDATASET;
      "Recipe GroupEditable"@19061145 : Boolean INDATASET;
      "Tender ParagraphEditable"@19020932 : Boolean INDATASET;
      "Tender Paragraph PartEditable"@19054619 : Boolean INDATASET;
      "Variant CodeEditable"@19003611 : Boolean INDATASET;
      OriginalQuantityEditable@19007039 : Boolean INDATASET;
      "Part of LineEditable"@19035014 : Boolean INDATASET;
      "Basic ItemVisible"@19042756 : Boolean INDATASET;
      "Trade ItemVisible"@19042429 : Boolean INDATASET;
      ManufacturerVisible@19015155 : Boolean INDATASET;
      "Vendor (Trade Item)Visible"@19043796 : Boolean INDATASET;
      "Scheme CodeVisible"@19026881 : Boolean INDATASET;
      CommentsVisible@19011032 : Boolean INDATASET;
      "Comments for LogisticsVisible"@19007676 : Boolean INDATASET;
      SupplyVisible@19030730 : Boolean INDATASET;
      "Material SheetVisible"@19042764 : Boolean INDATASET;
      DescriptionStyleExpr@19057867 : Boolean INDATASET;
      Text012@1100525003 : TextConst 'ENU=Select budget lines First';
      ItemNoEditable@1100525004 : Boolean INDATASET;
      NormEditable@1100525009 : Boolean INDATASET;
      ProductionRateEditable@1100525010 : Boolean INDATASET;
      WageCodeEditable@1100528900 : Boolean;
      RateCodeEditable@1100525011 : Boolean INDATASET;
      RateEditable@1100525012 : Boolean INDATASET;
      GrossPriceEditable@1100525013 : Boolean INDATASET;
      DiscountPercEditable@1100525014 : Boolean INDATASET;
      PriceEditable@1100525015 : Boolean INDATASET;
      SurchargePercEditable@1100525016 : Boolean INDATASET;
      SurchargePriceEditable@1100525017 : Boolean INDATASET;
      AmountEditable@1100525018 : Boolean INDATASET;
      CostTypeEditable@1210190007 : Boolean INDATASET;
      CostComponentEditable@1210190008 : Boolean INDATASET;
      TradeItemEnabled@1210190115 : Boolean INDATASET;
      Fixed@1210190006 : Boolean;
      gMainPageID@1100525000 : Integer;
      gvCorrCde@1100525019 : Code[10];
      Text002@1100525020 : TextConst 'ENU=Extension is fixed, Changes not allowed.';
      Text013@1100525005 : TextConst 'ENU=Remove Zero Lines BOM ?';
      Text014@1100528400 : TextConst 'ENU=%1 needs to be recalculated.';
      DataCaptionTxt@1100525021 : Text;
      Text015@1100528800 : TextConst 'ENU=Select a Maximum of one line.';

    PROCEDURE ShiftQuantity@1();
    VAR
      lvBudgetLineRec@1100485000 : Record 11012001;
    BEGIN
      CurrPage.SETSELECTIONFILTER(lvBudgetLineRec);
      WITH lvBudgetLineRec DO BEGIN
        IF NOT FINDSET(FALSE,FALSE) THEN BEGIN
          MESSAGE(Text012);
          EXIT;
        END ELSE BEGIN
          REPEAT
            IF BudgetFixed(lvBudgetLineRec) THEN
              EXIT;
          UNTIL NEXT = 0;
        END;
        IF FINDSET(FALSE,FALSE) THEN
          REPEAT;
            FillChangedSummarySheet(lvBudgetLineRec, FALSE);
          UNTIL NEXT = 0;

        lvBudgetLineRec.ReverseBudgetLines;

      END;

      RecalcSummarySheet;
    END;

    PROCEDURE EditText@1210190000();
    VAR
      TextFrm@11012001 : Page 11012120;
    BEGIN
      IF "Line No." = 0 THEN
        ERROR(Text009);

      TextFrm.SetSelection(DATABASE::"Budget Line","Project No.",
        Adjustment,"Extension Contract",Option,'','',"Line No.",0);
      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    PROCEDURE ShowItemRouteRef@1100485000();
    VAR
      DocFeatureRec@1100485000 : Record 11020303;
    BEGIN
      //db, 06-04-07
      IF "Item Route Reference" = '' THEN EXIT;
      DocFeatureRec.SETRANGE("Document No.", "Item Route Reference");
      PAGE.RUNMODAL(0, DocFeatureRec);
    END;

    PROCEDURE ShowPurchRouteRef@1210190004();
    BEGIN
      RouteRefMgtCU.ShowReferenceList("Purchase Route Reference");
    END;

    PROCEDURE InitSelectionFromReference@1210190008(IBudgetLineNo@1210190000 : Integer);
    BEGIN
      gFromReference := TRUE;
      SETRANGE("Line No.", IBudgetLineNo);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE FillChangedSummarySheet@1100485002(lvBudgetLineRec@1100485001 : Record 11012001;FromDeleteLastTrigger@1210190002 : Boolean);
    VAR
      lvBudgSummaryRec@1100485000 : Record 11012064;
      lBudgetAdjustment@1210190000 : Record 11012003;
      lBudgetLineRec@1210190001 : Record 11012001;
    BEGIN
      WITH lvBudgetLineRec DO BEGIN
        lvBudgSummaryRec.SETRANGE("Project No.", "Project No.");
        lvBudgSummaryRec.SETRANGE("Contract No.", "Extension Contract");
        lvBudgSummaryRec.SETRANGE("House Model", '');
        lvBudgSummaryRec.SETRANGE("Main Group", '');
        lvBudgSummaryRec.SETRANGE(Group, '');
        lvBudgSummaryRec.SETRANGE("Sub Group", '');
        lvBudgSummaryRec.SETRANGE(Option, '');
        IF NOT lvBudgSummaryRec.FIND('-') THEN
          EXIT;

        IF NOT FromDeleteLastTrigger THEN BEGIN //call 29724
          TmpBudgSummaryRec.RESET;
          TmpBudgSummaryRec.SETRANGE("Project No.", "Project No.");
          TmpBudgSummaryRec.SETRANGE("Contract No.", "Extension Contract");
          TmpBudgSummaryRec.SETRANGE("Row No.", Adjustment);    //Summary Adjustments
          IF NOT TmpBudgSummaryRec.FIND('-') THEN BEGIN
            TmpBudgSummaryRec.INIT;
            TmpBudgSummaryRec."Project No." := "Project No.";
            TmpBudgSummaryRec."Contract No." := "Extension Contract";
            TmpBudgSummaryRec."Row No." := Adjustment;  //Summary Adjustments
            TmpBudgSummaryRec.INSERT;
          END;
        END; //call 29724

        //Summary Adjustment
        //More recent adjustments are re-calculated.
        lBudgetAdjustment.RESET;
        lBudgetAdjustment.SETRANGE("Project No.", "Project No.");
        lBudgetAdjustment.SETFILTER("No.", '%1..', Adjustment);
        IF lBudgetAdjustment.FINDSET THEN BEGIN
          IF lBudgetAdjustment."No." <> Adjustment THEN BEGIN
            IF "Extension Contract" = '' THEN BEGIN //M18478
              TmpBudgSummaryRec.RESET;
              TmpBudgSummaryRec.SETRANGE("Project No.", "Project No.");
              TmpBudgSummaryRec.SETRANGE("Contract No.", "Extension Contract");
              TmpBudgSummaryRec.SETRANGE("Row No.", lBudgetAdjustment."No." );
              IF NOT TmpBudgSummaryRec.FIND('-') THEN BEGIN
                TmpBudgSummaryRec.INIT;
                TmpBudgSummaryRec."Project No." := "Project No.";
                TmpBudgSummaryRec."Contract No." := "Extension Contract";
                TmpBudgSummaryRec."Row No." := lBudgetAdjustment."No.";
                TmpBudgSummaryRec.INSERT;
              END;
            END ELSE BEGIN        //M18478 sn
              lBudgetLineRec.RESET;
              lBudgetLineRec.SETCURRENTKEY("Project No.","Cost Type","Cost Object","Extension Contract Status","Version Date",
                Adjustment,"Extension Contract",Option,"Purchase Action");
              lBudgetLineRec.SETRANGE("Project No.","Project No.");
              lBudgetLineRec.SETFILTER("Extension Contract", "Extension Contract");
              lBudgetLineRec.SETFILTER(Adjustment, lBudgetAdjustment."No.");
              lBudgetLineRec.SETFILTER(Option, '%1','');
              lBudgetLineRec.SETRANGE("Budget Summary Line",FALSE); //call 29724
              IF lBudgetLineRec.FINDFIRST THEN BEGIN
                TmpBudgSummaryRec.RESET;
                TmpBudgSummaryRec.SETRANGE("Project No.", "Project No.");
                TmpBudgSummaryRec.SETRANGE("Contract No.", "Extension Contract");
                TmpBudgSummaryRec.SETRANGE("Row No.", lBudgetAdjustment."No." );
                IF NOT TmpBudgSummaryRec.FIND('-') THEN BEGIN
                  TmpBudgSummaryRec.INIT;
                  TmpBudgSummaryRec."Project No." := "Project No.";
                  TmpBudgSummaryRec."Contract No." := "Extension Contract";
                  TmpBudgSummaryRec."Row No." := lBudgetAdjustment."No.";
                  TmpBudgSummaryRec.INSERT;
                END;
              END;
            END;       //M18478 en
           END;
        END;
        //Summary Adjustment

        TmpBudgSummaryRec.RESET;

      END;
    END;

    PROCEDURE RecalcSummarySheet@1100485006() : Boolean;
    VAR
      lvBudgSummaryRec@1100485000 : Record 11012064;
    BEGIN
      IF NOT TmpBudgSummaryRec.FIND('-') THEN
        EXIT(FALSE);

      CalcSummaryWindow.OPEN(Text011);

      REPEAT
        CalcSummaryWindow.UPDATE(1, "Project No.");

        lvBudgSummaryRec.SETRANGE("Project No.", TmpBudgSummaryRec."Project No.");
        lvBudgSummaryRec.SETRANGE("Contract No.", TmpBudgSummaryRec."Contract No.");
        lvBudgSummaryRec.SETRANGE("House Model", '');
        lvBudgSummaryRec.SETRANGE("Main Group", '');
        lvBudgSummaryRec.SETRANGE(Group, '');
        lvBudgSummaryRec.SETRANGE("Sub Group", '');
        lvBudgSummaryRec.SETRANGE(Option, '');
        IF lvBudgSummaryRec.FIND('-') THEN BEGIN
          //lvBudgSummaryRec.ReCalcSummaryLines();        //Summary Adjustment
          //lvBudgSummaryRec.UpdateBudgetLines(FALSE);    //Summary Adjustments
          //Summary Adjustments  Teh Adjustment is stored in the field "Row No."
          lvBudgSummaryRec.ReCalcSummaryLines(TmpBudgSummaryRec."Row No.");
          lvBudgSummaryRec.UpdateBudgetLines(FALSE,TmpBudgSummaryRec."Row No.");
          //Summary Adjustments
        END;
        TmpBudgSummaryRec.DELETE;
      UNTIL TmpBudgSummaryRec.NEXT = 0;

      CalcSummaryWindow.CLOSE;

      EXIT(TRUE);
    END;

    PROCEDURE CheckIfRecalcIsNecessary@1100528400();
    BEGIN
      //C008449
      IF NOT TmpBudgSummaryRec.ISEMPTY THEN
        ERROR(Text014, TmpBudgSummaryRec.TABLECAPTION);
    END;

    PROCEDURE InsertExtendedText@5(Unconditionally@1000 : Boolean);
    VAR
      TransferExtendedText@1100485000 : Codeunit 378;
    BEGIN
      IF TransferExtendedText.BudgetCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        TransferExtendedText.InsertBudgetExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE ExplodeBOM@1100485001();
    VAR
      BudgetLine@1100525000 : Record 11012001;
    BEGIN
      BudgetLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(BudgetLine);
      IF BudgetLine.FINDSET THEN BEGIN
        REPEAT
          ChangedAmountBOM := BudgetLine.Amount;
          CODEUNIT.RUN(CODEUNIT::"BudgetLine-Explode BOM",BudgetLine);
          UpgradeBOMAmountAfter(BudgetLine);
          COMMIT;
        UNTIL BudgetLine.NEXT = 0;
      END;
    END;

    PROCEDURE UpdateVendor@1100485004();
    VAR
      BudgetLine@1100525000 : Record 11012001;
      ModifyItemVendor@1100485000 : Page 11020420;
    BEGIN
      BudgetLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(BudgetLine);
      ModifyItemVendor.SetBudgetLineRec(BudgetLine);
      ModifyItemVendor.RUNMODAL;
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE UpgradeBOMDiscount@1100525002();
    VAR
      BudgetLine@1100525000 : Record 11012001;
      ProcessBOMDiscount@1100525001 : Report 11012549;
    BEGIN
      BudgetLine.COPY(Rec);
      BudgetLine.SETRECFILTER;
      ProcessBOMDiscount.SetSelection(DATABASE::"Budget Line");
      ProcessBOMDiscount.SetSelectionBudget(BudgetLine);
      ProcessBOMDiscount.SETTABLEVIEW(BudgetLine);
      ProcessBOMDiscount.RUNMODAL;
      CurrPage.UPDATE;
    END;

    PROCEDURE RemoveZeroLinesBOM@1100525003();
    VAR
      BudgetLine@1100525003 : Record 11012001;
      RemoveZeroLinesBOM@1100525002 : Report 11012358;
    BEGIN
      //26253.sn
      IF NOT CONFIRM(Text013,FALSE) THEN
        EXIT;

      BudgetLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(BudgetLine);
      IF BudgetLine.ISEMPTY THEN BEGIN
        BudgetLine.SETRANGE("Line No.", "Line No.");
      END;
      IF BudgetLine.FINDSET THEN BEGIN
        REPEAT
          RemoveZeroLinesBOM.SetSelection(DATABASE::"Budget Line");
          RemoveZeroLinesBOM.SetSelectionBudget(BudgetLine);
          RemoveZeroLinesBOM.SETTABLEVIEW(BudgetLine);
          RemoveZeroLinesBOM.USEREQUESTPAGE(FALSE);
          RemoveZeroLinesBOM.RUNMODAL;
          COMMIT;
          CLEAR(RemoveZeroLinesBOM);
        UNTIL BudgetLine.NEXT = 0;
      END;
      //26253.en
    END;

    PROCEDURE UpgradeBOMAmount@1100525001();
    VAR
      BudgetLine@1100525002 : Record 11012001;
      ProcessBOMAmount@1100525001 : Report 11012359;
    BEGIN
      BudgetLine.COPY(Rec);
      BudgetLine.SETRECFILTER;
      ProcessBOMAmount.SetSelection(DATABASE::"Budget Line");
      ProcessBOMAmount.SetSelectionBudget(BudgetLine);
      ProcessBOMAmount.SETTABLEVIEW(BudgetLine);
      ProcessBOMAmount.RUNMODAL;
      CurrPage.UPDATE;
    END;

    PROCEDURE UpgradeBOMAmountAfter@1100525004(VAR BudgetLine2@1100525000 : Record 11012001);
    VAR
      BudgetLine@1100525002 : Record 11012001;
      ProcessBOMAmount@1100525001 : Report 11012359;
    BEGIN
      BudgetLine.COPY(BudgetLine2);
      BudgetLine.SETRECFILTER;
      ProcessBOMAmount.SetSelection(DATABASE::"Budget Line");
      ProcessBOMAmount.SetSelectionBudgetAmount(BudgetLine,ChangedAmountBOM);
      ProcessBOMAmount.SETTABLEVIEW(BudgetLine);
      ProcessBOMAmount.USEREQUESTPAGE(FALSE);
      ProcessBOMAmount.RUNMODAL;
      CurrPage.UPDATE;
    END;

    PROCEDURE CalcSummaryTotal@1100485003() : Decimal;
    VAR
      lBudgetLineRec@1100485000 : Record 11012001;
    BEGIN
      //Summary Adjustment
      FILTERGROUP(4);
      lBudgetLineRec.SETCURRENTKEY("Project No.","Cost Type","Cost Object","Extension Contract Status","Version Date",
                                    Adjustment,"Extension Contract",Option,"Purchase Action");
      lBudgetLineRec.SETRANGE("Project No.","Project No.");
      lBudgetLineRec.SETFILTER("Extension Contract", GETFILTER("Extension Filter"));
      lBudgetLineRec.SETFILTER(Adjustment, GETFILTER("Adjustment Filter"));
      lBudgetLineRec.SETFILTER(Option, '%1','');
      lBudgetLineRec.SETFILTER("Purchase Action", GETFILTER("Purchase Action Filter"));
      lBudgetLineRec.SETRANGE("Budget Summary Line",TRUE);
      FILTERGROUP(0);
      IF lBudgetLineRec.FINDFIRST THEN BEGIN
        lBudgetLineRec.CALCSUMS(Amount);
        EXIT(lBudgetLineRec.Amount);
      END;
      EXIT(0);
    END;

    PROCEDURE EditCommentLines@1100529800();
    VAR
      CommentLine@1100529800 : Record 11020634;
      RecRef@1100529801 : RecordRef;
      RID@1100529802 : RecordID;
    BEGIN
      RecRef.GETTABLE(Rec);
      RID := RecRef.RECORDID();
      CommentLine.EditCommentLines(0, RID);
    END;

    LOCAL PROCEDURE CostTypeOnAfterValidate@19000073();
    BEGIN
      "Plant TypeEditable" := "Cost Type" = "Cost Type"::Plant; //mg, 03-03-11: M24448
    END;

    LOCAL PROCEDURE TenderParagraphOnAfterValidate@19061856();
    BEGIN
      CALCFIELDS("Description Tender Paragraph");
    END;

    LOCAL PROCEDURE TenderParagraphtPartOnAfterVal@19026696();
    BEGIN
      CALCFIELDS("Descr Tender Paragraph Part");
    END;

    LOCAL PROCEDURE ItemNoOnAfterValidate@19061248();
    BEGIN
      InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE OriginalQuantityOnAfterValidat@19021056();
    BEGIN
      //**4PS
      IF (xRec."Original Quantity" <> "Original Quantity") AND (xRec."Original Quantity" <> 0) THEN BEGIN
        ChangeQuantityExplodedLines("Original Quantity" / xRec."Original Quantity");
        CurrPage.UPDATE;
      END;
    END;

    PROCEDURE SetFieldsEditable@1210190002();
    BEGIN
      ElementEditable := (NOT Fixed);
      CostTypeEditable := (NOT Fixed) AND ("Item No." + "Basic Item" + "Trade Item" = '');
      CostObjectEditable := (NOT Fixed);
      DescriptionEditable := (NOT Fixed);
      Description2Editable := (NOT Fixed);
      TimeQuantityEditable := (NOT Fixed);
      UnitOfTimeEditable := (NOT Fixed);
      QuantityEditable := (NOT Fixed);
      UnitOfMeasureEditable := (NOT Fixed);
      "Price AgreementEditable" := NOT Fixed;
      "Plot No.Editable" := NOT Fixed;
      "House ModelEditable" := NOT Fixed;
      "Main GroupEditable" := NOT Fixed;
      GroupEditable := NOT Fixed;
      "Sub GroupEditable" := NOT Fixed;
      OptionEditable := NOT Fixed;
      ProjectPlanningActivityNoEdita := NOT Fixed;
      RecipeEditable := NOT Fixed;
      "Recipe GroupEditable" := NOT Fixed;
      "Tender ParagraphEditable" := NOT Fixed;
      "Tender Paragraph PartEditable" := NOT Fixed;
      "Variant CodeEditable" := NOT Fixed;
      OriginalQuantityEditable := (NOT Fixed) AND ("Item No." = '');
      "Part of LineEditable" := NOT Fixed;
      "Plant TypeEditable" := (NOT Fixed) AND ("Cost Type" = "Cost Type"::Plant); //mg, 03-03-11: M24448
      CostComponentEditable :=  (NOT Fixed) AND JobsSetup."Cost Component Editable";
      SurchargePriceEditable := (NOT Fixed) AND ("Item Route Reference"='');
      SurchargePercEditable := (NOT Fixed) AND ("Item Route Reference"='');

      PriceEditable := (NOT Fixed) AND (NOT ("Cost Type" = "Cost Type"::Labor));
      DiscountPercEditable := (NOT Fixed) AND (NOT ("Cost Type" = "Cost Type"::Labor));
      GrossPriceEditable := (NOT Fixed) AND (NOT ("Cost Type" = "Cost Type"::Labor));

      WageCodeEditable := (NOT Fixed) AND  ("Cost Type" = "Cost Type"::Labor);  //DP00236
      RateCodeEditable := (NOT Fixed) AND  ("Cost Type" = "Cost Type"::Labor);
      ProductionRateEditable := (NOT Fixed) AND ("Cost Type" = "Cost Type"::Labor);
      NormEditable := (NOT Fixed) AND ("Cost Type" = "Cost Type"::Labor);

      RateEditable := (NOT Fixed) AND ("Cost Type" = "Cost Type"::Labor) AND ("Rate Code" = '');
      AmountEditable := (NOT Fixed) AND ("Cost Type" = "Cost Type"::Labor) AND (Norm = 0) AND (Quantity = 0);

      ItemNoEditable := (NOT Fixed) AND ("Cost Type" = "Cost Type"::Material);
    END;

    PROCEDURE SetCorrCde@1100525008(lvCorrCde@1100525000 : Code[10]);
    BEGIN
      gvCorrCde := lvCorrCde;
    END;

    LOCAL PROCEDURE CommentLineExistOnPush@19031096();
    BEGIN
      EditCommentLines(); // M28907
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      //C027913.so
      //DescriptionIndent := 0;
      //IF "Level BOM" < 10 THEN
      //  DescriptionIndent := "Level BOM";
      //IF "Source Type"  = "Source Type"::"Recipe Line" THEN
      //  DescriptionIndent := 1;
      DescriptionStyleExpr := ("Level BOM" > 0) OR ("Source Type"  = "Source Type"::"Recipe Line");  //C027913.n
    END;

    LOCAL PROCEDURE UpdateSummary@1100528401();
    BEGIN
      CurrPage.UPDATE(TRUE);
      CalcTotals;
      CurrPage.UPDATE;
    END;

    PROCEDURE SetMainPageID@1100525000(MainPageID@1100525000 : Integer);
    BEGIN
      gMainPageID := MainPageID;
    END;

    BEGIN
    {
      4PS - 28-02-05 - call 5949, Peter: changes made to prevent unnecessary autosplitkey error messages.
      4PS01 Call C-012372, JD, 29-04-08: Leave hiding/showing of GWW fields to the ZUP file
      4PS02 06-07-09 HBK Added Field "Generic Item No."
      4PS - 25-03-2010  Call 18564. DelayedInsert is set ot Yes
    }
    END.
  }
}

