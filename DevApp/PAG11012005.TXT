OBJECT Page 11012005 Budget List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Budget List;
    SourceTable=Table11012001;
    DataCaptionFields=Project No.,Cost Type;
    PageType=List;
    OnInit=BEGIN
             AssignButtonVisible := TRUE;
             UndoAssignButtonVisible := TRUE;
             AdviceButtonVisible := TRUE;
             PurchActButtonVisible := FALSE;
             TradeItemEnabled := TRUE;
           END;

    OnOpenPage=BEGIN
                 GetPageCaption;

                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 SETFILTER("Extension Contract Status", '%1|>=%2&<%3',
                   "Extension Contract Status"::"Not Applicable",
                   "Extension Contract Status"::Order,
                   "Extension Contract Status"::Expired);  //db, 02-06-15: C023418 (filter SourceTableView page 11012008)
                 CALCFIELDS("Total Hours");

                 TradeItemEnabled := ItemSetup.READPERMISSION ;

                 IF (NOT gCopyToPurchOrder) AND (NOT gCopyToSiteMgtGetOrder) AND (NOT gCopyToOptionBudget) AND
                    (NOT gCopyToPlantRequest) AND (NOT gCopyToPlantOrder) AND
                    (NOT gCopyToBlanketOrder) AND (NOT gCopyToPurchaseQuote)
                 THEN BEGIN //mg.c, 03-03-11: M24448
                   IF gAdviceSelect = FALSE THEN BEGIN
                     AdviceButtonVisible := FALSE;
                     AssignButtonVisible := FALSE;
                     UndoAssignButtonVisible := FALSE;
                     IF gPurchActSelect THEN BEGIN
                       PurchActButtonVisible := TRUE;
                     END;
                   END ELSE BEGIN
                     AdviceOrderMgt.ToggleProject(1,Rec);
                   END;
                 END ELSE BEGIN
                   AdviceButtonVisible := FALSE;
                   AssignButtonVisible := TRUE;
                   UndoAssignButtonVisible := TRUE;
                   ProjectNoEnabled := TRUE;
                 END;

                 IF gCopyToPurchaseQuote OR gCopyToBlanketOrder THEN BEGIN
                   AdviceButtonVisible := FALSE;
                   AssignButtonVisible := FALSE;
                   UndoAssignButtonVisible := FALSE;
                   CopyButtonVisible := TRUE;
                 END;
               END;

    OnAfterGetRecord=BEGIN
                       DescriptionIndent := 0;
                       GetItemSpecifications;
                       DescriptionOnFormat;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  //DPA_SetDefaultDepartment; //*31927.o  Form not editable (if so then department of the project (not of the user)
                  //**4PS Generated Code.en02
                END;

    ActionList=ACTIONS
    {
      { 1900000003;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 61      ;1   ;ActionGroup;
                      Name=BudgetLine;
                      CaptionML=ENU=Budget Line }
      { 62      ;2   ;Action    ;
                      CaptionML=ENU=Budget Lines per Project;
                      Image=LedgerBudget;
                      OnAction=BEGIN
                                 AdviceOrderMgt.ToggleProject(0,Rec);
                               END;
                                }
      { 63      ;2   ;Action    ;
                      CaptionML=ENU=Not Adviced lines;
                      Image=CancelAllLines;
                      OnAction=BEGIN
                                 AdviceOrderMgt.ToggleProject(1,Rec);
                               END;
                                }
      { 64      ;2   ;Action    ;
                      CaptionML=ENU=Adviced Lines;
                      Image=SuggestLines;
                      OnAction=BEGIN
                                 AdviceOrderMgt.ToggleProject(2,Rec);
                               END;
                                }
      { 59      ;1   ;ActionGroup;
                      Name=AdviceOrder;
                      CaptionML=ENU=Advice Order;
                      Visible=AdviceButtonVisible }
      { 60      ;2   ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=ENU=Create;
                      Image=MakeAgreement;
                      OnAction=BEGIN
                                 IF gAdviceSelect = TRUE THEN CreateAdvice;
                               END;
                                }
      { 65      ;2   ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=ENU=Disconnect;
                      Image=UnLinkAccount;
                      OnAction=BEGIN
                                 IF gAdviceSelect = TRUE THEN RemoveAdvice;
                               END;
                                }
      { 1100409003;1 ;ActionGroup;
                      Name=PurchaseAction;
                      CaptionML=ENU=Purchase Action;
                      Visible=PurchActButtonVisible }
      { 1100409001;2 ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=ENU=Disconnect;
                      Image=UnLinkAccount;
                      OnAction=BEGIN
                                 IF gPurchActSelect = TRUE THEN RemovePurchAction;
                               END;
                                }
      { 1100525005;1 ;ActionGroup;
                      Name=PurchaseOrder;
                      CaptionML=ENU=Purchase Order;
                      Visible=AdviceButtonVisible }
      { 1100525004;2 ;Action    ;
                      Name=Undo Advise;
                      CaptionML=ENU=Undo Advise;
                      Enabled=UndoAssignButtonVisible;
                      Image=UnLinkAccount;
                      OnAction=BEGIN
                                 UndoAdvised();
                               END;
                                }
      { 1210190001;1 ;ActionGroup;
                      Name=AssignButton;
                      CaptionML=ENU=Assign;
                      Visible=AssignButtonVisible }
      { 1100528800;2 ;Action    ;
                      Name=Copy;
                      CaptionML=ENU=&Copy;
                      Promoted=Yes;
                      Enabled=CopyButtonVisible;
                      PromotedIsBig=Yes;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF gCopyToPurchaseQuote THEN BEGIN
                                   CopyToPurchaseQuote();
                                   CurrPage.CLOSE;
                                 END;

                                 IF gCopyToBlanketOrder THEN BEGIN
                                   CopyToBlanketOrder();
                                   CurrPage.CLOSE;
                                 END;
                               END;
                                }
      { 66      ;2   ;Action    ;
                      CaptionML=ENU=A&ssign;
                      Promoted=Yes;
                      Enabled=AssignButtonVisible;
                      PromotedIsBig=Yes;
                      Image=AddAction;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF (NOT gCopyToPurchOrder) AND (NOT gCopyToSiteMgtGetOrder) AND (NOT gCopyToOptionBudget) THEN
                                   IF gAdviceSelect = TRUE THEN CreateAdvice;

                                 IF gCopyToPurchOrder THEN BEGIN
                                   CopyToPurchOrder();
                                   CurrPage.CLOSE;
                                 END;

                                 IF gCopyToBlanketOrder THEN BEGIN
                                   CopyToBlanketOrder();
                                   CurrPage.CLOSE;
                                 END;

                                 IF gCopyToPurchaseQuote THEN BEGIN
                                   CopyToPurchaseQuote();
                                   CurrPage.CLOSE;
                                 END;

                                 IF gCopyToSiteMgtGetOrder THEN BEGIN
                                   CopyToSiteMgtGetOrder();
                                   CurrPage.CLOSE;
                                 END;

                                 IF gCopyToOptionBudget THEN BEGIN
                                   CopyToOptionBudget();
                                   CurrPage.CLOSE;
                                 END;

                                 //mg.sn, 03-03-11: M24448
                                 IF gCopyToPlantRequest THEN BEGIN
                                   CopyToPlantRequest();
                                   CurrPage.CLOSE;
                                 END;

                                 IF gCopyToPlantOrder THEN BEGIN
                                   CopyToPlantOrder();
                                   CurrPage.CLOSE;
                                 END;
                                 //mg.en, 03-03-11: M24448
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Project No.";
                Enabled=ProjectNoEnabled }

    { 4   ;2   ;Field     ;
                SourceExpr="Extension Contract" }

    { 6   ;2   ;Field     ;
                SourceExpr=Option }

    { 8   ;2   ;Field     ;
                SourceExpr=Adjustment }

    { 1210190012;2;Field  ;
                SourceExpr="Plot No." }

    { 1100528200;2;Field  ;
                SourceExpr="Settlement Quantity Code" }

    { 10  ;2   ;Field     ;
                SourceExpr=Advised }

    { 14  ;2   ;Field     ;
                SourceExpr=Element }

    { 1100485008;2;Field  ;
                SourceExpr="Element Description";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                SourceExpr="Cost Type" }

    { 1210190020;2;Field  ;
                SourceExpr="Tender Paragraph";
                Visible=FALSE }

    { 1210190022;2;Field  ;
                SourceExpr="Description Tender Paragraph";
                Visible=FALSE }

    { 1210190016;2;Field  ;
                SourceExpr="Project Planning Activity No.";
                Visible=FALSE }

    { 1210190018;2;Field  ;
                CaptionML=ENU=Project Planning Activity Description;
                SourceExpr=GetProjPlanActivityDescription();
                Visible=FALSE }

    { 1100525000;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE;
                Editable=false }

    { 16  ;2   ;Field     ;
                SourceExpr="Item No." }

    { 18  ;2   ;Field     ;
                SourceExpr=Manufacturer;
                Visible=false;
                Enabled=TradeItemEnabled }

    { 20  ;2   ;Field     ;
                SourceExpr="Basic Item";
                Visible=false;
                Enabled=TradeItemEnabled }

    { 22  ;2   ;Field     ;
                SourceExpr="Vendor (Trade Item)";
                Visible=false;
                Enabled=TradeItemEnabled }

    { 24  ;2   ;Field     ;
                SourceExpr="Trade Item";
                Visible=false;
                Enabled=TradeItemEnabled }

    { 1100485002;2;Field  ;
                SourceExpr="Item Brand";
                Visible=FALSE }

    { 1100485004;2;Field  ;
                SourceExpr="Item Type";
                Visible=FALSE }

    { 1100485006;2;Field  ;
                SourceExpr="Item Series";
                Visible=FALSE }

    { 1210190014;2;Field  ;
                SourceExpr="Plant Type";
                Visible=false }

    { 28  ;2   ;Field     ;
                SourceExpr="Cost Object";
                LookupPageID=Cost Object List }

    { 1100485000;2;Field  ;
                SourceExpr="Cost Component";
                Visible=false }

    { 30  ;2   ;Field     ;
                SourceExpr=Description }

    { 1210190000;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr="Time Quantity";
                Visible=false }

    { 34  ;2   ;Field     ;
                SourceExpr="Unit of Time";
                Visible=false }

    { 36  ;2   ;Field     ;
                SourceExpr=Quantity }

    { 38  ;2   ;Field     ;
                SourceExpr="Unit of Measure" }

    { 40  ;2   ;Field     ;
                SourceExpr=Norm }

    { 42  ;2   ;Field     ;
                SourceExpr="Rate Code" }

    { 44  ;2   ;Field     ;
                SourceExpr=Rate }

    { 46  ;2   ;Field     ;
                SourceExpr=Hours }

    { 1210190008;2;Field  ;
                SourceExpr="Gross Price";
                Visible=FALSE }

    { 1210190010;2;Field  ;
                SourceExpr="Discount %";
                Visible=FALSE }

    { 48  ;2   ;Field     ;
                SourceExpr=Price }

    { 50  ;2   ;Field     ;
                SourceExpr=Amount }

    { 1210190006;2;Field  ;
                SourceExpr="Price Agreement";
                Visible=FALSE }

    { 1210190002;2;Field  ;
                SourceExpr=Vendor;
                Visible=FALSE }

    { 1210190004;2;Field  ;
                SourceExpr="Purchase Route Reference";
                Visible=FALSE }

    { 52  ;2   ;Field     ;
                SourceExpr="Purchase Action";
                Visible=false }

    { 1100485010;2;Field  ;
                SourceExpr="Scheme Code";
                Visible=false;
                Enabled=TradeItemEnabled }

    { 1100485012;2;Field  ;
                SourceExpr="Comments for Logistics";
                Visible=false;
                Enabled=TradeItemEnabled }

    { 54  ;2   ;Field     ;
                SourceExpr="Purchase Phase";
                Visible=false }

    { 1100525001;2;Field  ;
                SourceExpr="Purchase Order No." }

    { 1100525002;2;Field  ;
                SourceExpr="Purchase Order Line No." }

    { 1100528600;2;Field  ;
                SourceExpr="Rental Unit" }

    { 1100525003;2;Field  ;
                SourceExpr="Copied to Adjustment" }

    { 1100409002;0;Container;
                ContainerType=FactBoxArea }

    { 1100409004;1;Part   ;
                CaptionML=ENU=Total Actual Budget;
                SubPageLink=Project No.=FIELD(Project No.);
                PagePartID=Page11130001;
                PartType=Page }

  }
  CODE
  {
    VAR
      ItemSetup@1100525002 : Record 11012300;
      gPurchLineRec@1100485001 : Record 39;
      gOptionBudgetRec@1100525003 : Record 11012503;
      gPlantRequestLineRec@1210190000 : Record 11020521;
      gPlantOrderRec@1210190003 : Record 11012556;
      AdviceOrderMgt@1100485000 : Codeunit 11012041;
      gCopyToPurchOrder@1100485002 : Boolean;
      gCopyToBlanketOrder@1100528800 : Boolean;
      gCopyToPurchaseQuote@1100528801 : Boolean;
      gAdviceSelect@11012000 : Boolean;
      gCopyToSiteMgtGetOrder@1100525000 : Boolean;
      gCopyToOptionBudget@1100525004 : Boolean;
      gCopyToPlantRequest@1210190001 : Boolean;
      gCopyToPlantOrder@1210190002 : Boolean;
      Text000@1100485003 : TextConst 'ENU=First select lines';
      gGetOrderNo@1100525001 : Code[20];
      DPA_IsHardFilter@1100000999 : Boolean;
      TradeItemEnabled@19042429 : Boolean INDATASET;
      AdviceButtonVisible@19067976 : Boolean INDATASET;
      CopyButtonVisible@1100528802 : Boolean;
      AssignButtonVisible@19050710 : Boolean INDATASET;
      UndoAssignButtonVisible@1100528803 : Boolean;
      DescriptionIndent@19057867 : Integer INDATASET;
      ProjectNoEnabled@19043981 : Boolean INDATASET;
      PurchActButtonVisible@1100409000 : Boolean INDATASET;
      gPurchActSelect@1100409001 : Boolean;
      Text001@1100525005 : TextConst 'ENU=Original Budget Lines';
      Text002@1100525006 : TextConst 'ENU=Extension Contract Lines';
      Text003@1100525007 : TextConst 'ENU=Total Budget Lines';
      Text004@1100525008 : TextConst 'ENU=Adjustment Entry Lines';

    PROCEDURE SetSelectionAdvice@1();
    BEGIN
      gAdviceSelect := TRUE;
    END;

    PROCEDURE SetSelectionPurchAction@1100409000();
    BEGIN
      gPurchActSelect := TRUE;
    END;

    PROCEDURE CreateAdvice@2();
    VAR
      BudgetLine@1100525000 : Record 11012001;
    BEGIN
      CurrPage.SETSELECTIONFILTER(BudgetLine);
      AdviceOrderMgt.CreateProjectAdvice(BudgetLine);
    END;

    PROCEDURE RemoveAdvice@3();
    VAR
      BudgetLine@1100525000 : Record 11012001;
    BEGIN
      CurrPage.SETSELECTIONFILTER(BudgetLine);
      AdviceOrderMgt.RemoveProjectAdvice(BudgetLine);
    END;

    PROCEDURE InitSelectionCopyToPurchOrder@1210190000(IPurchLineRec@1210190000 : Record 39);
    BEGIN
      gCopyToPurchOrder := TRUE;
      gPurchLineRec := IPurchLineRec;
    END;

    PROCEDURE InitSelectionCopyToBlanketOrder@1100528800(IPurchLineRec@1210190000 : Record 39);
    BEGIN
      gCopyToBlanketOrder := TRUE;
      gPurchLineRec := IPurchLineRec;
    END;

    PROCEDURE InitSelectionCopyToPurchaseQuote@1100528803(IPurchLineRec@1210190000 : Record 39);
    BEGIN
      gCopyToPurchaseQuote := TRUE;
      gPurchLineRec := IPurchLineRec;
    END;

    PROCEDURE InitSelectionCopyToBudgetOpt@1100525002(IOptionBudgetRec@1210190000 : Record 11012503);
    BEGIN
      gCopyToOptionBudget := TRUE;
      gOptionBudgetRec := IOptionBudgetRec;
    END;

    PROCEDURE InitSelectionCopyToPlantReq@1210190007(IPlantRequestLine@1210190000 : Record 11020521);
    BEGIN
      //mg, 03-03-11: M24448
      gCopyToPlantRequest := TRUE;
      gPlantRequestLineRec := IPlantRequestLine;
    END;

    PROCEDURE InitSelectionCopyToPlantOrder@1210190002(IPlantOrder@1210190000 : Record 11012556);
    BEGIN
      //mg, 03-03-11: M24448
      gCopyToPlantOrder := TRUE;
      gPlantOrderRec := IPlantOrder;
    END;

    PROCEDURE CopyToPurchOrder@1210190004();
    VAR
      lvBudgetRec@1210190001 : Record 11012001;
      lvCopyBudgLinesCU@1210190000 : Codeunit 11012008;
    BEGIN
      CurrPage.SETSELECTIONFILTER(lvBudgetRec);
      IF NOT lvBudgetRec.FINDFIRST THEN
        ERROR(Text000);

      lvCopyBudgLinesCU.CopyMarkedBudgetLines(lvBudgetRec,gPurchLineRec,TRUE);
      COMMIT;
    END;

    PROCEDURE CopyToBlanketOrder@1100528801();
    VAR
      lvBudgetRec@1210190001 : Record 11012001;
      lvCopyBudgLinesCU@1210190000 : Codeunit 11012008;
    BEGIN
      CurrPage.SETSELECTIONFILTER(lvBudgetRec);
      IF NOT lvBudgetRec.FINDFIRST THEN
        ERROR(Text000);

      lvCopyBudgLinesCU.CopyMarkedBudgetLines(lvBudgetRec,gPurchLineRec,FALSE);
      COMMIT;
    END;

    PROCEDURE CopyToPurchaseQuote@1100528804();
    VAR
      lvBudgetRec@1210190001 : Record 11012001;
      lvCopyBudgLinesCU@1210190000 : Codeunit 11012008;
    BEGIN
      CurrPage.SETSELECTIONFILTER(lvBudgetRec);
      IF NOT lvBudgetRec.FINDFIRST THEN
        ERROR(Text000);

      lvCopyBudgLinesCU.CopyMarkedBudgetLines(lvBudgetRec,gPurchLineRec,FALSE);
      COMMIT;
    END;

    PROCEDURE CopyToOptionBudget@1100525003();
    VAR
      lvBudgetRec@1210190001 : Record 11012001;
      lvCopyBudgLinesCU@1210190000 : Codeunit 11012008;
    BEGIN
      CurrPage.SETSELECTIONFILTER(lvBudgetRec);
      IF NOT lvBudgetRec.FINDFIRST THEN
        ERROR(Text000);

      lvCopyBudgLinesCU.CopyMarkedBudgetLinesOption(lvBudgetRec,gOptionBudgetRec);
      COMMIT;
    END;

    PROCEDURE SetSelectionSiteMgtGetOrder@1100525000(IGetOrderNo@1100525000 : Code[20]);
    BEGIN
      gCopyToSiteMgtGetOrder := TRUE;
      gGetOrderNo := IGetOrderNo;
    END;

    PROCEDURE CopyToSiteMgtGetOrder@1100525001();
    VAR
      BudgetLine@1100525001 : Record 11012001;
      lvSiteGetOrderMgtCU@1100525000 : Codeunit 11125527;
    BEGIN
      CurrPage.SETSELECTIONFILTER(BudgetLine);
      lvSiteGetOrderMgtCU.CreateGetOrderLines(gGetOrderNo, BudgetLine);
    END;

    PROCEDURE CopyToPlantRequest@1210190001();
    VAR
      BudgetLine@1210190001 : Record 11012001;
      CopyBudgetLinesCU@1210190000 : Codeunit 11012008;
    BEGIN
      //mg, 03-03-11: M24448
      CurrPage.SETSELECTIONFILTER(BudgetLine);
      IF NOT BudgetLine.FINDFIRST THEN
        ERROR(Text000);

      CopyBudgetLinesCU.CopyMarkedBudgetLinesPlantReq(BudgetLine, gPlantRequestLineRec);
      COMMIT;
    END;

    PROCEDURE CopyToPlantOrder@1210190005();
    VAR
      BudgetLine@1210190001 : Record 11012001;
      CopyBudgetLinesCU@1210190000 : Codeunit 11012008;
    BEGIN
      //mg, 03-03-11: M24448
      CurrPage.SETSELECTIONFILTER(BudgetLine);
      IF NOT BudgetLine.FINDFIRST THEN
        ERROR(Text000);

      CopyBudgetLinesCU.CopyMarkedBudgetLinesPlantOrd(BudgetLine, gPlantOrderRec);
      COMMIT;
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      IF "Level BOM" < 10 THEN
        DescriptionIndent := "Level BOM";
      IF "Source Type"  = "Source Type"::"Recipe Line" THEN
        DescriptionIndent := 1;
    END;

    PROCEDURE RemovePurchAction@1100409001();
    VAR
      BudgetLine@1100525000 : Record 11012001;
    BEGIN
      CurrPage.SETSELECTIONFILTER(BudgetLine);
      BudgetLine.DisconnectFromPurchaseAction('');
    END;

    LOCAL PROCEDURE GetPageCaption@1100525004() : Text[30];
    BEGIN
      CASE GetPageFilterType OF
        0: CurrPage.CAPTION(Text001);
        1: CurrPage.CAPTION(Text002);
        2: CurrPage.CAPTION(Text003);
        3: CurrPage.CAPTION(Text004);
      END;
    END;

    LOCAL PROCEDURE GetPageFilterType@1100525005() : Integer;
    VAR
      PageFilterType@1100525000 : 'Original,Extension,Total,Adjustment';
    BEGIN
      FILTERGROUP(4);
      CASE TRUE OF
        (GETFILTER(Adjustment) <> '') AND (GETFILTER(Adjustment) <> ''''''): PageFilterType := PageFilterType::Adjustment;
        GETFILTER("Extension Contract") = '''''': PageFilterType := PageFilterType::Original; //Filter is empty string
        GETFILTER("Extension Contract") <> '': PageFilterType := PageFilterType::Extension;
        GETFILTER("Extension Contract") = '': PageFilterType := PageFilterType::Total;  //Filter is empty
      END;
      FILTERGROUP(0);
      EXIT(PageFilterType);
    END;

    BEGIN
    END.
  }
}

