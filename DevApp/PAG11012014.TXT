OBJECT Page 11012014 Extension List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Extension List;
    SourceTable=Table11012004;
    DataCaptionFields=Project No.;
    PageType=List;
    CardPageID=Extension Contract;
    OnInit=BEGIN
             ExtensionButtonENABLE := TRUE;
           END;

    OnOpenPage=VAR
                 lExtContractRec@1100525000 : Record 11012004;
               BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 //Disable Menubutton if called from other company
                 IF FIND('=<>') THEN;
                 lExtContractRec.COPY(Rec);
                 IF NOT lExtContractRec.FIND('=<>') THEN
                   CLEAR(lExtContractRec);
                 ExtensionButtonENABLE := (
                   "Project No." + "Contract No." + Description =
                   lExtContractRec."Project No." + lExtContractRec."Contract No." + lExtContractRec.Description);
               END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1210190003;0 ;ActionContainer;
                      ActionContainerType=Reports }
      { 1210190010;1 ;ActionGroup;
                      CaptionML=ENU=&Print }
      { 1100528401;2 ;Action    ;
                      CaptionML=ENU=Extension Reports;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 DocumentPrint@1100528400 : Codeunit 229;
                               BEGIN
                                 DocumentPrint.PrintExtensionContract(Rec);
                               END;
                                }
      { 1100528400;2 ;Action    ;
                      CaptionML=ENU=Budget Reports;
                      Image=Print;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 BudgetLine@11012001 : Record 11012001;
                                 DocumentPrint@1100528400 : Codeunit 229;
                               BEGIN
                                 BudgetLine."Project No." := "Project No.";
                                 BudgetLine."Extension Contract" := "Contract No.";
                                 DocumentPrint.PrintBudget(BudgetLine);
                               END;
                                }
      { 1100285002;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100285003;1 ;ActionGroup;
                      Name=<Action1100285003>;
                      CaptionML=ENU=&Functions }
      { 1100285000;2 ;Action    ;
                      CaptionML=ENU=Release extension contract;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lReleaseExtContract@1100285001 : Page 11125023;
                                 lProjInst@1100285000 : Record 11012018;
                                 lProjInstModify@1100285007 : Record 11012018;
                                 lOption@1100285003 : Integer;
                                 lText001@1100285004 : TextConst 'ENU="Project %1:Contract No. %2\More installments available\Which ones to set chargable? "';
                                 lText000@1100285005 : TextConst 'ENU=Only the First, All Installments';
                                 lExtContract@1100285006 : Record 11012004;
                                 lProjectNo@1100285008 : Code[20];
                                 bmultipleRec@1100285009 : Boolean;
                                 bTest@1100285010 : Boolean;
                                 lTextTmp@1100285011 : Text[200];
                                 ErrorMsg@1100285012 : Text[200];
                                 lbError@1100285013 : Boolean;
                               BEGIN
                                 //IMSE-011
                                 //CurrPage.SETSELECTIONFILTER(Rec);
                                 lExtContract.COPYFILTERS(Rec);
                                 WITH lExtContract DO BEGIN
                                   IF FINDSET THEN
                                      BEGIN
                                        IF COUNT > 1 THEN
                                           bmultipleRec := TRUE
                                        ELSE
                                           bmultipleRec := FALSE;
                                        REPEAT
                                          //130904 +++
                                          lbError := FALSE;
                                          //130904 ---
                                          IF (Status <> Status :: Expired) THEN
                                             BEGIN
                                               // Test +++
                                               IF ("Settlement Method" = "Settlement Method" :: "Fixed Price") THEN
                                                  BEGIN
                                                    IF ("Installment Scheme"    = ''   ) OR
                                                       ("Generate Installments" = FALSE) OR
                                                       ("Contract Amount"       = 0    ) THEN
                                                    BEGIN
                                                       ErrorMsg := '';
                                                       //
                                                       IF ("Contract Amount" = 0 ) THEN
                                                          ErrorMsg := Text001;
                                                       //
                                                       IF ("Generate Installments" = FALSE) THEN BEGIN
                                                          IF (ErrorMsg = '') THEN
                                                              ErrorMsg := Text002
                                                           ELSE
                                                              ErrorMsg := ErrorMsg + '\' + Text002;
                                                       END;
                                                       //
                                                       IF ("Installment Scheme" = '') THEN BEGIN
                                                          IF (ErrorMsg = '') THEN
                                                             ErrorMsg := Text003
                                                          ELSE
                                                             ErrorMsg := ErrorMsg + '\' + Text003;
                                                       END;
                                                       //
                                                       ErrorMsg := ErrorMsg + '\' + Text004;
                                                       //
                                                       MESSAGE (ErrorMsg,"Project No.","Contract No.");
                                                       //130904 +++
                                                       lbError := TRUE;
                                                       //130904 ---
                                                     END;
                                                  END;
                                               //
                                               TESTFIELD("Extension Fixed", FALSE);
                                               // Test ---
                                               //130904 +++
                                               IF NOT lbError THEN BEGIN
                                               //130904 ---
                                                 CLEAR(lReleaseExtContract);
                                                 lReleaseExtContract.InitExtensionContract(lExtContract);
                                                 //
                                                 IF bmultipleRec THEN
                                                    lReleaseExtContract.MultiProcessExtensionContract
                                                 ELSE
                                                    lReleaseExtContract.RUNMODAL;
                                                 //
                                                 IF "Settlement Method" = "Settlement Method" :: "Fixed Price" THEN
                                                    BEGIN
                                                      lProjInst.RESET;
                                                      lProjInst.SETRANGE("Project No."        , "Project No.");
                                                      lProjInst.SETRANGE("Extension Contract" , "Contract No.");
                                                      lProjInst.SETRANGE(Chargeable,FALSE);
                                                      IF lProjInst.FINDFIRST THEN
                                                         BEGIN
                                                           IF lProjInst.COUNT = 1 THEN
                                                              BEGIN
                                                                //IF lProjInst.CheckChargebleAllowed(FALSE) THEN
                                                                   BEGIN
                                                                     lProjInstModify := lProjInst;
                                                                     lProjInstModify.Chargeable := TRUE;
                                                                     lProjInstModify.MODIFY;
                                                                   END;
                                                              END;
                                                           IF lProjInst.COUNT > 1 THEN
                                                              BEGIN
                                                                lTextTmp :='';
                                                                lTextTmp :=STRSUBSTNO(lText001,"Project No.","Contract No.");
                                                                lOption := DIALOG.STRMENU(lText000,1,lTextTmp);
                                                                CASE lOption OF
                                                                1: BEGIN
                                                                     //IF lProjInst.CheckChargebleAllowed(FALSE) THEN
                                                                        BEGIN
                                                                          lProjInstModify := lProjInst;
                                                                          lProjInstModify.Chargeable := TRUE;
                                                                          lProjInstModify.MODIFY;
                                                                        END;
                                                                   END;
                                                                2: BEGIN
                                                                     REPEAT
                                                                     //IF lProjInst.CheckChargebleAllowed(FALSE) THEN
                                                                        BEGIN
                                                                          lProjInstModify := lProjInst;
                                                                          lProjInstModify.Chargeable := TRUE;
                                                                          lProjInstModify.MODIFY;
                                                                        END;
                                                                     UNTIL lProjInst.NEXT = 0;
                                                                   END;
                                                                END;
                                                              END;
                                                         END;
                                                     END;
                                                 END;
                                               COMMIT;
                                          END;
                                       UNTIL lExtContract.NEXT = 0;
                                     END;
                                   //
                                   MARKEDONLY(FALSE);
                                 END;
                                 CurrPage.UPDATE;
                                 //
                               END;
                                }
      { 1100285001;2 ;Action    ;
                      CaptionML=ENU=Create Invoice;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Job@1100285001 : Record 11072003;
                                 lText001@1100285002 : TextConst 'ENU=Settlement Method is not "Fixed Price" for Project %1, Contract No. %2\Invoice will not be created';
                                 lExecute@1100285004 : Boolean;
                                 lText002@1100285003 : TextConst 'ENU=Extension status is not "Invoicing Allowed" for Project %1, Contract No. %2\Invoice will not be created';
                                 lText003@1100285005 : TextConst 'ENU=Installments of Extension are not "Chargeable" for Project %1, Contract No. %2\Invoice will not be created';
                                 lProjInst@1100285006 : Record 11012018;
                                 lExtContract@1000 : Record 11012004;
                               BEGIN
                                 //IMSE-011
                                 //CurrPage.SETSELECTIONFILTER(Rec);
                                 lExtContract.COPYFILTERS(Rec);
                                 WITH lExtContract DO BEGIN
                                   IF FINDSET THEN
                                      BEGIN
                                         REPEAT
                                           lExecute := TRUE;
                                           //-  "settlement method" is "fixed price"
                                           IF "Settlement Method" <> "Settlement Method" :: "Fixed Price" THEN
                                              BEGIN
                                                MESSAGE( lText001,"Project No.","Contract No.");
                                                lExecute := FALSE;
                                              END;
                                           //-Extension status is "invoicing allowed"
                                           IF Status <> Status :: "Invoicing Allowed" THEN
                                              BEGIN
                                                MESSAGE( lText002,"Project No.","Contract No.");
                                                lExecute := FALSE;
                                              END;
                                           //-installments" of extension are not "chargeable"
                                           lProjInst.RESET;
                                           lProjInst.SETRANGE("Project No."        , "Project No.");
                                           lProjInst.SETRANGE("Extension Contract" , "Contract No.");
                                           lProjInst.SETRANGE(Chargeable           , TRUE);
                                           IF NOT lProjInst.FINDFIRST THEN
                                              BEGIN
                                                MESSAGE( lText003,"Project No.","Contract No.");
                                                lExecute := FALSE;
                                              END;

                                           IF lExecute THEN
                                             BEGIN
                                               Job.GET("Project No.");
                                               Job.MARK(TRUE);
                                             END;
                                        UNTIL lExtContract.NEXT = 0;
                                     END;

                                   IF lExecute THEN
                                      BEGIN
                                        Job.MARKEDONLY(TRUE);
                                        REPORT.RUNMODAL(REPORT::"Create Project Invoices", TRUE, FALSE, Job);
                                      END;

                                   Job.MARKEDONLY(FALSE);
                                   MARKEDONLY(FALSE);
                                 END;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1210190001;2 ;Action    ;
                      CaptionML=ENU=Extension List;
                      Image=PrintReport;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 ExtRec."Project No." := "Project No.";
                                 ExtRec.SETRANGE("Project No.","Project No.");
                                 REPORT.RUN(REPORT::"Extension List",TRUE,FALSE,ExtRec);
                               END;
                                }
      { 1100528001;2 ;Action    ;
                      Name=ReleaseExtension;
                      CaptionML=ENU=Release Extension Contract;
                      Promoted=Yes;
                      Image=Approve;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MultiReleaseExtension;  // DP00793-RFC11
                               END;
                                }
      { 1100528000;2 ;Action    ;
                      Name=CreateInvoices;
                      CaptionML=ENU=Create Invoices;
                      Promoted=Yes;
                      Image=Invoice;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MultiCreateInvoice;  //DP00793-RFC11
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Project No." }

    { 1210190002;2;Field  ;
                SourceExpr="Project Description";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr="Contract No." }

    { 6   ;2   ;Field     ;
                SourceExpr=Description }

    { 8   ;2   ;Field     ;
                SourceExpr=Principal;
                Importance=Standard;
                Visible=False }

    { 10  ;2   ;Field     ;
                SourceExpr="Principal Name" }

    { 1210190006;2;Field  ;
                SourceExpr="Your Reference";
                Importance=Standard;
                Visible=False }

    { 1210190000;2;Field  ;
                SourceExpr="Contract Serial No.";
                Importance=Standard;
                Visible=False }

    { 12  ;2   ;Field     ;
                SourceExpr="Version Date";
                Visible=FALSE }

    { 1210190004;2;Field  ;
                SourceExpr="Settlement Method";
                Importance=Standard;
                Visible=False }

    { 14  ;2   ;Field     ;
                SourceExpr=Status }

    { 1100525004;2;Field  ;
                SourceExpr="Treat like Order";
                Visible=FALSE }

    { 1100525006;2;Field  ;
                SourceExpr="Include in Expectation";
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                SourceExpr=Finished;
                Importance=Standard;
                Visible=False }

    { 1100525002;2;Field  ;
                CaptionML=ENU=Total Budget;
                SourceExpr=Total;
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr="Contract Amount (LCY)" }

    { 24  ;2   ;Field     ;
                SourceExpr="Contract Date" }

    { 20  ;2   ;Field     ;
                SourceExpr="Offered Amount";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Offering Date";
                Visible=FALSE }

    { 1100485000;2;Field  ;
                SourceExpr="Due Date";
                Visible=FALSE }

    { 1100525000;2;Field  ;
                SourceExpr="Expected Contract Amount";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                SourceExpr="Installment Scheme";
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                SourceExpr="Installments Generated";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                SourceExpr=Text }

    { 1100525001;2;Field  ;
                SourceExpr="Extra Throughput (Days)";
                Visible=fALSE }

    { 32  ;2   ;Field     ;
                SourceExpr="Input by";
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                SourceExpr="Input Date";
                Visible=FALSE }

    { 1100285300;2;Field  ;
                SourceExpr=Revenues;
                Visible=false }

    { 1100285301;2;Field  ;
                SourceExpr="Extension Category";
                Visible=false }

    { 1100285302;2;Field  ;
                SourceExpr="Internal Reference";
                Visible=false }

  }
  CODE
  {
    VAR
      DPA_IsHardFilter@1100000999 : Boolean;
      ExtensionButtonENABLE@1100525000 : Boolean INDATASET;
      ExtRec@1210190001 : Record 11012004;
      BudgetRec@1210190000 : Record 11012001;
      Text001@1100285000 : TextConst 'ENU="Contract amount = 0"';
      Text002@1100285001 : TextConst 'ENU=Generete Installment needs to be TRUE';
      Text003@1100285003 : TextConst 'ENU=Installment Scheme is empty';
      Text004@1100285002 : TextConst 'ENU=for Project %1, Contract No. %2';

    LOCAL PROCEDURE MultiReleaseExtension@1100528000();
    VAR
      ReleaseExtensionContract@1100528010 : Page 11125023;
      ProjInst@1100528009 : Record 11012018;
      ProjInstModify@1100528008 : Record 11012018;
      ExtensionContract@1100528006 : Record 11012004;
      bmultipleRec@1100528004 : Boolean;
      MessageText@1100528002 : Text[200];
      ErrorMsg@1100528001 : Text[200];
      ErrorBln@1100528000 : Boolean;
      lText001@1100528012 : TextConst 'ENU="Project %1, Contract No. %2\More installments available\Which ones to set chargable? "';
      lText000@1100528011 : TextConst 'ENU=Only the First, All Installments';
      Selection@1100528003 : Integer;
      NumInst@1100528005 : Integer;
    BEGIN
      //DP00793-RFC11
      CurrPage.SETSELECTIONFILTER(Rec);
      IF FINDSET THEN BEGIN
        IF COUNT > 1 THEN
          bmultipleRec := TRUE
        ELSE
          bmultipleRec := FALSE;
        REPEAT
          ErrorBln := FALSE;
          IF (Status <> Status :: Expired) THEN BEGIN
            IF ("Settlement Method" = "Settlement Method"::"Fixed Price") THEN BEGIN
              IF ("Installment Scheme"    = ''   ) OR
                 ("Generate Installments" = FALSE) OR
                 ("Contract Amount"       = 0    ) THEN BEGIN
                ErrorMsg := '';
                IF ("Contract Amount" = 0 ) THEN
                  ErrorMsg := Text001;
                IF ("Generate Installments" = FALSE) THEN BEGIN
                  IF (ErrorMsg = '') THEN
                    ErrorMsg := Text002
                  ELSE
                    ErrorMsg := ErrorMsg + '\' + Text002;
                END;
                IF ("Installment Scheme" = '') THEN BEGIN
                  IF (ErrorMsg = '') THEN
                    ErrorMsg := Text003
                  ELSE
                    ErrorMsg := ErrorMsg + '\' + Text003;
                END;
                ErrorMsg := ErrorMsg + '\' + Text004;
                MESSAGE(ErrorMsg,"Project No.","Contract No.");
                ErrorBln := TRUE;
              END;
            END;
            TESTFIELD("Extension Fixed", FALSE);
            IF NOT ErrorBln THEN BEGIN
              CLEAR(ReleaseExtensionContract);
              ReleaseExtensionContract.InitExtensionContract(Rec);
              IF bmultipleRec THEN
                ReleaseExtensionContract.MultiProcessExtensionContract
              ELSE
                ReleaseExtensionContract.RUNMODAL;
              IF "Settlement Method" = "Settlement Method"::"Fixed Price" THEN BEGIN
                ProjInst.SETRANGE("Project No.","Project No.");
                ProjInst.SETRANGE("Extension Contract","Contract No.");
                ProjInst.SETRANGE(Chargeable,FALSE);
                NumInst := ProjInst.COUNT;
                IF ProjInst.FINDFIRST THEN BEGIN
                  IF NumInst = 1 THEN BEGIN
                    ProjInstModify := ProjInst;
                    ProjInstModify.Chargeable := TRUE;
                    ProjInstModify.MODIFY;
                  END;
                END;
                IF NumInst > 1 THEN BEGIN
                  MessageText :='';
                  MessageText :=STRSUBSTNO(lText001,"Project No.","Contract No.");
                  Selection := DIALOG.STRMENU(lText000,1,MessageText);
                  IF Selection = 1 THEN BEGIN
                    ProjInstModify := ProjInst;
                    ProjInstModify.Chargeable := TRUE;
                    ProjInstModify.MODIFY;
                  END;
                  IF Selection = 2 THEN BEGIN
                    REPEAT
                      ProjInstModify := ProjInst;
                      ProjInstModify.Chargeable := TRUE;
                      ProjInstModify.MODIFY;
                    UNTIL ProjInst.NEXT = 0;
                  END;
                END;
              END;
            END;
            COMMIT;
          END;
        UNTIL NEXT = 0;
      END;
      MARKEDONLY(FALSE);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE MultiCreateInvoice@1100528001();
    VAR
      Job@1100528002 : Record 11072003;
      ExecuteBln@1100528001 : Boolean;
      ProjInst@1100528000 : Record 11012018;
      lText001@1100528005 : TextConst 'ENU=Settlement Method is not "Fixed Price" for Project %1, Contract No. %2\Invoice will not be created';
      lText002@1100528004 : TextConst 'ENU=Extension status is not "Invoicing Allowed" for Project %1, Contract No. %2\Invoice will not be created';
      lText003@1100528003 : TextConst 'ENU=Installments of Extension are not "Chargeable" for Project %1, Contract No. %2\Invoice will not be created';
      NumJob@1100528006 : Integer;
    BEGIN
      //DP00793-RFC11
      CurrPage.SETSELECTIONFILTER(Rec);
      IF FINDSET THEN BEGIN
        REPEAT
          ExecuteBln := TRUE;
          IF "Settlement Method" <> "Settlement Method"::"Fixed Price" THEN BEGIN
            MESSAGE(lText001,"Project No.","Contract No.");
            ExecuteBln := FALSE;
          END;
          IF Status <> Status::"Invoicing Allowed" THEN BEGIN
            MESSAGE(lText002,"Project No.","Contract No.");
            ExecuteBln := FALSE;
          END;
          ProjInst.RESET;
          ProjInst.SETRANGE("Project No.","Project No.");
          ProjInst.SETRANGE("Extension Contract","Contract No.");
          ProjInst.SETRANGE(Chargeable,TRUE);
          IF NOT ProjInst.FINDFIRST THEN BEGIN
            MESSAGE(lText003,"Project No.","Contract No.");
            ExecuteBln := FALSE;
          END;
          IF ExecuteBln THEN BEGIN
            Job.GET("Project No.");
            Job.MARK(TRUE);
            NumJob := NumJob + 1;
          END;
       UNTIL NEXT = 0;
      END;
      IF NumJob <> 0 THEN BEGIN
        Job.MARKEDONLY(TRUE);
        REPORT.RUNMODAL(REPORT::"Create Project Invoices", TRUE, FALSE, Job);
        Job.MARKEDONLY(FALSE);
      END;
      MARKEDONLY(FALSE);
      CurrPage.UPDATE;
    END;

    BEGIN
    {
      130905 ITERO.GH IMSE-011 - FD Make extensions chargeable
      151015 ITERO.SB Added field Revenues
      160314 ITERO.SB RAD-201 New fields, "Extension Category" and "Internal Reference"
    }
    END.
  }
}

