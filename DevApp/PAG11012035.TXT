OBJECT Page 11012035 Hour Accounting
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    Permissions=TableData 11012600=r;
    CaptionML=ENU=Hour Accounting;
    SaveValues=Yes;
    SourceTable=Table11012038;
    PageType=Document;
    RefreshOnActivate=Yes;
    OnInit=BEGIN
             "Date CheckedVisible" := TRUE;
             CheckbyEmplFullNameVisible := TRUE;
             "Check by Empl. No.Visible" := TRUE;
             IAmAControllerEditable := TRUE;
             EmployeeNoEditable := TRUE;
             IAmAControllerVisible := TRUE;
             PostingEnabled := TRUE;
             DocumentNoEditable := TRUE;
           END;

    OnOpenPage=VAR
                 lvUarHrsSetupRec@1100485000 : Record 11012600;
                 HourAccounting@1100525000 : Record 11012038;
                 lvEmployeeRec@1100285501 : Record 5200;
               BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01

                 //**4PS Spoor.sn
                 IF lvUarHrsSetupRec.READPERMISSION THEN BEGIN
                   IF lvUarHrsSetupRec.GET THEN BEGIN
                     IF lvUarHrsSetupRec."Hour Acc. Rail CLA" THEN
                       ERROR(Text003);
                   END;
                 END;
                 //**4PS Spoor.en

                 ProjectSetup.GET;

                 IF UserSetup.GET(USERID) AND (NOT ownHoursOverride) THEN BEGIN
                   IF UserSetup."Access own Hours only" THEN BEGIN
                     UserSetup.TESTFIELD("Employee No.");
                     FILTERGROUP(2);
                     SETRANGE("Employee No.",UserSetup."Employee No.");
                     FILTERGROUP(0);
                     EmployeeNoEditable := FALSE;
                     PostingEnabled := (UserSetup."Posting Hours allowed");
                   END ELSE
                     IamController := UserSetup.IsHourController; //kkleermaker.n, 130911, C007383
                 END;

                 //>>141124 IME247
                 IF Rec."Employee No." <> '' THEN
                   IF ProjectSetup."Filter Cost&Wage on Lab. Code" THEN BEGIN
                     lvEmployeeRec.GET(Rec."Employee No.");
                     IF lvEmployeeRec."Labour Rule" = '' THEN
                     ERROR(Text004,Rec."Employee No.");
                   END;
                 //<<141124 IME247

                 IAmAControllerVisible := (IamController);
                 IAmAControllerEditable := IamController;
                 //kkleermaker.sn, 130911, C007383
                 IF NOT IamController THEN
                   ShowMyEmployeesOnly := FALSE;
                 //kkleermaker.en
                 //kkleermaker.sn, 140102, C011567
                 IF ShowMyEmployeesOnly THEN
                   IF NOT FindRec(ShowMyEmployeesOnly, HourAccounting, '-', UserSetup."Employee No.") THEN
                     ShowMyEmployeesOnly := FALSE;
                 //kkleermaker.en
                 ShowHideCheckHoursFields;
               END;

    OnFindRecord=BEGIN
                   EXIT(FindRec(ShowMyEmployeesOnly,Rec,Which,UserSetup."Employee No."));
                 END;

    OnNextRecord=BEGIN
                   EXIT(GetRec(ShowMyEmployeesOnly,Rec,Steps,UserSetup."Employee No."));
                 END;

    OnAfterGetRecord=BEGIN
                       CALCFIELDS("Full Name");
                       EmplDescrOtherCompany;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                  Year := xRec.Year;
                  IF Year = 0 THEN
                    Year := DATE2DMY(TODAY,3);

                  IF UserSetup."Access own Hours only" THEN BEGIN
                    "Employee No." := UserSetup."Employee No.";
                    CALCFIELDS("First Name","Last Name","Full Name");
                  END ELSE
                    Week := xRec.Week;
                  EmplDescrOtherCompany;
                END;

    OnAfterGetCurrRecord=BEGIN
                           EmplDescrOtherCompany;
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 24      ;1   ;ActionGroup;
                      Name=ButtonHours;
                      CaptionML=ENU=&Hours Accounting }
      { 1100485003;2 ;Action    ;
                      CaptionML=ENU=Leave Overview;
                      Image=ViewPage;
                      OnAction=VAR
                                 lEmplRec@1100485001 : Record 5200;
                               BEGIN
                                 IF UserSetup.GET(USERID) THEN
                                   IF UserSetup."Access own Hours only" THEN BEGIN
                                     lEmplRec.FILTERGROUP(10);
                                     lEmplRec.SETRANGE("No.", "Employee No.");
                                     lEmplRec.FILTERGROUP(0);
                                   END;

                                 lEmplRec.SETRANGE("No.", "Employee No.");
                                 lEmplRec."No." := "Employee No.";
                                 PAGE.RUNMODAL(PAGE::"Leave Overview",lEmplRec);
                               END;
                                }
      { 1210190005;2 ;Action    ;
                      CaptionML=ENU=Hours Consent Lines;
                      RunObject=Page 11072564;
                      RunPageLink=Year=FIELD(Year),
                                  Week=FIELD(Week),
                                  Employee=FIELD(Employee No.);
                      Image=Confirm }
      { 1100525002;2 ;Action    ;
                      CaptionML=ENU=Posted Hours;
                      RunObject=Page 11012272;
                      RunPageView=SORTING(Employee No.,Document No.,Year,Week)
                                  ORDER(Descending);
                      RunPageLink=Employee No.=FIELD(Employee No.);
                      Image=History;
                      OnAction=BEGIN
                                 //db, 03-09-15: usefull option if start/enddate month within week
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100485007;1 ;ActionGroup;
                      Name=ButtonHoursFunc;
                      CaptionML=ENU=F&unctions }
      { 1100485005;2 ;Action    ;
                      CaptionML=ENU=Copy Hours from Employee &Absence;
                      Image=CopyBOM;
                      OnAction=BEGIN
                                 CurrPage.HoursForm.PAGE.GetHoursFromEmployeeAbsence(Rec);
                               END;
                                }
      { 1100528300;2 ;Action    ;
                      CaptionML=ENU=Copy Hours from Change Request Tasks;
                      Image=MoveToNextPeriod;
                      OnAction=BEGIN
                                 CurrPage.HoursForm.PAGE.GetHoursFromChangeRequestTasks(Rec);
                               END;
                                }
      { 1100485006;2 ;Action    ;
                      CaptionML=ENU=Copy hours from posted &hours;
                      Image=CopyWorksheet;
                      OnAction=BEGIN
                                 CurrPage.HoursForm.PAGE.GetHoursFromPostedHours(Rec);
                               END;
                                }
      { 1100485015;2 ;Action    ;
                      CaptionML=ENU=Copy Project/Service Order History;
                      Image=History;
                      OnAction=BEGIN
                                 CurrPage.HoursForm.PAGE.GetProjAndServiceOrderData(Rec);
                               END;
                                }
      { 1100528700;2 ;Action    ;
                      CaptionML=ENU=Generate Hour Accounting;
                      Image=Account;
                      OnAction=VAR
                                 GenerateHourAccounting@1100409000 : Report 11020252;
                               BEGIN
                                 GenerateHourAccounting.SetDefaults(Year, Week, FALSE);
                                 GenerateHourAccounting.RUNMODAL;
                               END;
                                }
      { 1100485016;2 ;Action    ;
                      CaptionML=ENU=Hours Log Entries;
                      RunObject=Page 11071847;
                      RunPageLink=Year=FIELD(Year),
                                  Week=FIELD(Week),
                                  Employee No.=FIELD(Employee No.);
                      Image=Log;
                      OnAction=BEGIN
                                 //DJN
                                 //Moved to properties RunObject/RunPageLink
                                 //HoursLogEntrRec.SETRANGE(Year, Year);
                                 //HoursLogEntrRec.SETRANGE(Week, Week);
                                 //HoursLogEntrRec.SETRANGE("Employee No.","Employee No.");
                                 //IF HoursLogEntrRec.FINDFIRST THEN;
                                 //PAGE.RUNMODAL(PAGE::"Hours Log Entries",HoursLogEntrRec);
                               END;
                                }
      { 1100485031;2 ;Action    ;
                      CaptionML=ENU=Explode Hour Set;
                      Image=ExplodeBOM;
                      OnAction=VAR
                                 lHourLine@11012001 : Record 11012039;
                                 lHourLine2@1210190001 : Record 11012039;
                                 lHourSetLine@1210190000 : Record 11020228;
                                 LineSpacing@11012004 : Integer;
                                 NextLineNo@11012005 : Integer;
                               BEGIN
                                 TESTFIELD(Status, Status::Open);

                                 lHourLine.RESET;
                                 lHourLine.SETRANGE(Year,Year);
                                 lHourLine.SETRANGE(Week,Week);
                                 lHourLine.SETRANGE("Employee No.","Employee No.");
                                 lHourLine.SETFILTER("Hour Set",'<>%1', '');
                                 lHourLine.SETFILTER("Connection No.",'0');

                                 IF lHourLine.FIND('-') THEN
                                   REPEAT
                                     lHourSetLine.SETRANGE("Hour Set", lHourLine."Hour Set");
                                     IF lHourSetLine.FIND('-') THEN BEGIN

                                       //Determine Line Spacing
                                       lHourLine2.COPY(lHourLine);
                                       lHourLine2.SETRANGE("Hour Set");
                                       IF lHourLine2.FIND('>') THEN BEGIN
                                         LineSpacing := (lHourLine2."Line No." - lHourLine."Line No.") DIV (lHourSetLine.COUNT);
                                         IF LineSpacing = 0 THEN
                                           ERROR(Text001);
                                       END ELSE
                                         LineSpacing := 10000;

                                       //Explode
                                       NextLineNo := lHourLine."Line No.";
                                       REPEAT
                                         lHourLine2 := lHourLine;
                                         lHourLine2."Line No." := NextLineNo;
                                         lHourLine2."Hour Set":= '';
                                         CASE lHourLine.Type OF
                                           lHourLine.Type::Project:
                                             BEGIN
                                               IF lHourSetLine.Element <> '' THEN
                                                 lHourLine2.Element := lHourSetLine.Element;
                                               IF lHourSetLine."Wage Component" <> '' THEN
                                                 lHourLine2.VALIDATE("Wage Component",lHourSetLine."Wage Component");
                                               IF lHourSetLine."Cost Object" <> '' THEN
                                                 lHourLine2.VALIDATE("Cost Object",lHourSetLine."Cost Object");
                                             END;
                                           lHourLine.Type::Service,
                                           lHourLine.Type::Indirect:
                                             BEGIN
                                               IF lHourSetLine."Wage Component" <> '' THEN
                                                 lHourLine2.VALIDATE("Wage Component",lHourSetLine."Wage Component");
                                               IF lHourSetLine."Cost Object" <> '' THEN
                                                 lHourLine2.VALIDATE("Cost Object",lHourSetLine."Cost Object");
                                               IF lHourSetLine."Cost Code" <>'' THEN
                                                 lHourLine2.VALIDATE("Cost Code",lHourSetLine."Cost Code");   //Check PS
                                             END;
                                           lHourLine.Type::Plant:
                                             BEGIN
                                               lHourLine2.VALIDATE("Plant Type",lHourSetLine."Plant Type");
                                               lHourLine2.VALIDATE("Plant No.",lHourSetLine."Plant No.");
                                               IF lHourSetLine."Wage Component" <> '' THEN
                                                 lHourLine2.VALIDATE("Wage Component",lHourSetLine."Wage Component");
                                             END;
                                         END;
                                         IF lHourSetLine.Comment <> '' THEN
                                           lHourLine2.Comment := lHourSetLine.Comment;
                                         lHourLine2."Unit Cost (LCY)" := 0;
                                         lHourLine2."Amount (LCY)" := 0;
                                         lHourLine2.CalcRateAndAmount();
                                         IF NextLineNo = lHourLine."Line No." THEN
                                           lHourLine2.MODIFY(TRUE)
                                         ELSE
                                           lHourLine2.INSERT(TRUE);
                                         NextLineNo := NextLineNo + LineSpacing;
                                       UNTIL lHourSetLine.NEXT = 0;
                                     END;
                                   UNTIL lHourLine.NEXT = 0;
                               END;
                                }
      { 1100485004;2 ;Action    ;
                      CaptionML=ENU=Import &Site Management Hours;
                      RunObject=XMLport 11012425;
                      Image=Import }
      { 3       ;1   ;ActionGroup;
                      Name=ButtonPost;
                      CaptionML=ENU=P&osting }
      { 4       ;2   ;Action    ;
                      CaptionML=ENU=Test Report;
                      Enabled=PostingEnabled;
                      Image=TestReport;
                      OnAction=VAR
                                 PrintDoc@1210190001 : Codeunit 229;
                               BEGIN
                                 HourRec.COPY(Rec);
                                 HourRec.SETFILTER("Document No.", "Document No.");
                                 PrintDoc.PrintHours(HourRec,1,FALSE);
                               END;
                                }
      { 5       ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Reconcile;
                      Enabled=PostingEnabled;
                      Image=Reconcile;
                      OnAction=BEGIN
                                 CheckHourAccounting.RUN(Rec);
                               END;
                                }
      { 1100485010;2 ;Action    ;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=ENU=Re&lease;
                      Promoted=Yes;
                      Enabled=PostingEnabled;
                      Image=ReleaseDoc;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CurrPage.UPDATE(TRUE);
                                 SetStatus(TRUE, UserSetup."Employee No.");
                               END;
                                }
      { 1100485011;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+F9;
                      CaptionML=ENU=Re&open;
                      Promoted=Yes;
                      Enabled=PostingEnabled;
                      Image=ReOpen;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetStatus(FALSE, UserSetup."Employee No.");

                                 IF NOT ProjectSetup."Activation Hour Log Entries" THEN
                                   EXIT;

                                 IF Status <> xRec.Status THEN BEGIN
                                   IF Status = Status::Open THEN BEGIN
                                     gHoursLogEntrRec.INIT;
                                     gHoursLogEntrRec.Year := Year;
                                     gHoursLogEntrRec.Week := Week;
                                     gHoursLogEntrRec."Employee No." := "Employee No.";
                                     gHoursLogEntrRec."Full Name" := "Full Name" ;
                                     gHoursLogEntrRec."Document No." := "Document No.";
                                     gHoursLogEntrRec."Posting Date" := "Posting Date";
                                     gHoursLogEntrRec.Status := Status;
                                     gHoursLogEntrRec."Released By" := "Released by";
                                     IF gHoursLogEntrRec.INSERT THEN;

                                     gHoursLogEntrLinesRec.INIT;
                                     gHoursLogEntrLinesRec.Year := gHoursLogEntrRec.Year;
                                     gHoursLogEntrLinesRec.Week := gHoursLogEntrRec.Week;
                                     gHoursLogEntrLinesRec."Employee No." := gHoursLogEntrRec."Employee No.";
                                     gHoursLogEntrLinesRec.Date := TODAY;
                                     gHoursLogEntrLinesRec.Time := TIME;
                                     IF UserSetup.GET(USERID) THEN
                                       gHoursLogEntrLinesRec."Consentor Change" := UserSetup."Employee No."
                                     ELSE
                                       ERROR(Text002);
                                     gHoursLogEntrLinesRec.Field := 'Status';
                                     gHoursLogEntrLinesRec."Old Value" := STRSUBSTNO('%1',xRec.Status);
                                     gHoursLogEntrLinesRec."New Value" := STRSUBSTNO('%1',Rec.Status);

                                     gHoursLogEntrLinesRec.Informed := TRUE; //ENH032

                                     //>>IME-107
                                     IF gHoursLogEntrLinesRec."Consentor Change" <> '' THEN BEGIN
                                        IF gHoursLogEntrLinesRec."Employee No." = gHoursLogEntrLinesRec."Consentor Change" THEN BEGIN
                                           gHoursLogEntrLinesRec.Informed := TRUE;
                                         END;
                                      END;
                                       //<<IME-107

                                     gHoursLogEntrLinesRec.INSERT;
                                   END;
                                 END;
                               END;
                                }
      { 1210190000;2 ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=ENU=Post;
                      Promoted=Yes;
                      Enabled=PostingEnabled;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 PostHours(FALSE, FALSE);
                               END;
                                }
      { 1210190001;2 ;Action    ;
                      ShortCutKey=Shift+F9;
                      CaptionML=ENU=Post and Print;
                      Promoted=Yes;
                      Enabled=PostingEnabled;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 PostHours(TRUE, FALSE);
                               END;
                                }
      { 7       ;2   ;Action    ;
                      CaptionML=ENU=Post Batch;
                      Enabled=PostingEnabled;
                      Image=PostBatch;
                      OnAction=BEGIN
                                 PostHours(FALSE, TRUE);
                               END;
                                }
      { 8       ;2   ;Action    ;
                      CaptionML=ENU=Post Batch and Print;
                      Enabled=PostingEnabled;
                      Image=PrintAttachment;
                      OnAction=BEGIN
                                 PostHours(TRUE, TRUE);
                               END;
                                }
      { 27      ;1   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=&Print;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 PrintDoc@1210190001 : Codeunit 229;
                               BEGIN
                                 HourRec.COPY(Rec);
                                 HourRec.SETRECFILTER;
                                 PrintDoc.PrintHours(HourRec,0,FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 11  ;1   ;Group     ;
                CaptionML=ENU=General }

    { 16  ;2   ;Field     ;
                SourceExpr=Year }

    { 12  ;2   ;Field     ;
                SourceExpr=Week;
                OnValidate=BEGIN
                             WeekOnAfterValidate;
                           END;
                            }

    { 14  ;2   ;Field     ;
                SourceExpr="Employee No.";
                Editable=EmployeeNoEditable;
                OnValidate=VAR
                             lvEmployeeRec@1100285500 : Record 5200;
                           BEGIN
                             EmployeeNoOnAfterValidate;

                             //>>141124 IME247
                             IF ProjectSetup."Filter Cost&Wage on Lab. Code" THEN BEGIN
                               lvEmployeeRec.GET(Rec."Employee No.");
                               IF lvEmployeeRec."Labour Rule" = '' THEN
                               ERROR(Text004,Rec."Employee No.");
                             END;
                             //<<141124 IME247
                           END;

                OnLookup=BEGIN
                           Rec.LookUpEmployee(EmployeeNoEditable);
                           IF EmployeeNoEditable THEN
                             CurrPage.UPDATE(TRUE);
                           CALCFIELDS("Full Name");
                         END;
                          }

    { 1210190002;2;Field  ;
                DrillDown=No;
                CaptionML=ENU=Name;
                SourceExpr="Full Name" }

    { 1100528400;2;Field  ;
                SourceExpr="Date Checked";
                Visible="Date CheckedVisible";
                OnValidate=BEGIN
                             DateCheckedOnAfterValidate;
                           END;
                            }

    { 1100528402;2;Field  ;
                CaptionML=ENU=Check by;
                SourceExpr="Check by Empl. No.";
                Visible="Check by Empl. No.Visible" }

    { 1100528406;2;Field  ;
                SourceExpr="Check by Empl. Full Name";
                Visible=CheckbyEmplFullNameVisible }

    { 22  ;2   ;Field     ;
                SourceExpr="Document No.";
                Editable=DocumentNoEditable;
                OnValidate=BEGIN
                             DocumentNoOnAfterValidate;
                           END;
                            }

    { 20  ;2   ;Field     ;
                SourceExpr="Posting Date";
                Editable=FALSE }

    { 1100485001;2;Field  ;
                SourceExpr=Status;
                Editable=FALSE }

    { 1100485013;2;Field  ;
                SourceExpr="Released by" }

    { 1100485017;2;Field  ;
                Name=IAmAController;
                CaptionML=ENU=Show My Employees Only;
                SourceExpr=ShowMyEmployeesOnly;
                Visible=IAmAControllerVisible;
                Editable=IAmAControllerEditable;
                OnValidate=BEGIN
                             ShowMyEmployeesOnlyOnAfterVali;
                           END;
                            }

    { 10  ;1   ;Part      ;
                Name=HoursForm;
                SubPageLink=Year=FIELD(Year),
                            Week=FIELD(Week),
                            Employee No.=FIELD(Employee No.),
                            Document No.=FIELD(Document No.);
                PagePartID=Page11012036 }

    { 1210190104;0;Container;
                ContainerType=FactBoxArea }

    { 1210190008;1;Part   ;
                SubPageLink=Year=FIELD(Year),
                            Week=FIELD(Week),
                            Employee No.=FIELD(Employee No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11130125;
                ProviderID=10;
                PartType=Page }

    { 1210190105;1;Part   ;
                SubPageLink=Year=FIELD(Year),
                            Week=FIELD(Week),
                            Employee No.=FIELD(Employee No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11130103;
                ProviderID=10;
                PartType=Page }

    { 1210190007;1;Part   ;
                SubPageLink=Year=FIELD(Year),
                            Week=FIELD(Week),
                            Employee No.=FIELD(Employee No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11130123;
                ProviderID=10;
                PartType=Page }

    { 1210190006;1;Part   ;
                SubPageLink=Project No.=FIELD(Year),
                            Principal=FIELD(Week),
                            Contract Amount=FIELD(Employee No.);
                PagePartID=Page11130104;
                Visible=FALSE;
                PartType=Page }

    { 1100285001;1;Part   ;
                SubPageLink=Year=FIELD(Year),
                            Week=FIELD(Week),
                            Employee No.=FIELD(Employee No.);
                PagePartID=Page11128052;
                ProviderID=10;
                PartType=Page }

    { 1100285000;1;Part   ;
                SubPageLink=Line No.=FIELD(Line No.),
                            Year=FIELD(Year),
                            Week=FIELD(Week),
                            Employee No.=FIELD(Employee No.);
                PagePartID=Page11128053;
                ProviderID=10;
                PartType=Page }

    { 1100525001;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1100525000;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ProjectSetup@11012000 : Record 315;
      UserSetup@11012001 : Record 91;
      HourRec@11012002 : Record 11012038;
      gHoursLogEntrRec@1100485006 : Record 11072024;
      gHoursLogEntrLinesRec@1100485005 : Record 11072025;
      HourControllerRec@1100485007 : Record 11012008;
      CheckHourAccounting@11012003 : Codeunit 11012002;
      DepAuthRec@1100000997 : Record 11012466;
      PostHoursBatch@1100485000 : Report 11020222;
      Text001@1100485001 : TextConst 'ENU=There is not enough space to explode the Hour Sets.';
      Text002@1100485004 : TextConst 'ENU=No valid Employee No. Found For UserID %1';
      IamController@1100485008 : Boolean;
      ShowMyEmployeesOnly@1100485002 : Boolean;
      DPA_IsHardFilter@1100000999 : Boolean;
      DocumentNoEditable@19064841 : Boolean INDATASET;
      EmployeeNoEditable@19049966 : Boolean INDATASET;
      PostingEnabled@19050227 : Boolean INDATASET;
      IAmAControllerVisible@19000194 : Boolean INDATASET;
      IAmAControllerEditable@19060515 : Boolean INDATASET;
      "Check by Empl. No.Visible"@19047177 : Boolean INDATASET;
      CheckbyEmplFullNameVisible@19016891 : Boolean INDATASET;
      "Date CheckedVisible"@19050803 : Boolean INDATASET;
      Text003@1100409000 : TextConst 'ENU=Not relevant for Rail CLA.';
      ownHoursOverride@1100285500 : Boolean;
      Text004@1100285501 : TextConst 'ENU=Employee, %1, has no Labour Rule selected on Employee Card.';

    PROCEDURE PostHours@1100485000(Print@1100485000 : Boolean;Batch@1100485001 : Boolean);
    BEGIN
      //call C-009959
      CLEAR(PostHoursBatch);
      PostHoursBatch.SetPostOptions(Print, NOT Batch);
      HourRec.RESET;
      HourRec.SETRANGE("Document No.", "Document No.");
      IF NOT Batch THEN BEGIN
        HourRec.SETRANGE(Year, Year);
        HourRec.SETRANGE(Week, Week);
        HourRec.SETRANGE("Employee No.", "Employee No.");
      END ELSE
        HourRec.DPA_SetFilters('');
      PostHoursBatch.SETTABLEVIEW(HourRec);
      PostHoursBatch.USEREQUESTPAGE := Batch;
      PostHoursBatch.RUNMODAL;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ShowHideCheckHoursFields@1100528400();
    BEGIN
      "Check by Empl. No.Visible" := (ProjectSetup."Check Hours");
      CheckbyEmplFullNameVisible := (ProjectSetup."Check Hours");
      "Date CheckedVisible" := (ProjectSetup."Check Hours");
    END;

    LOCAL PROCEDURE WeekOnAfterValidate@19014554();
    BEGIN
      IF "Employee No." <> '' THEN
        CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE EmployeeNoOnAfterValidate@19040646();
    BEGIN
      CurrPage.UPDATE(TRUE);
      CALCFIELDS("Full Name");
    END;

    LOCAL PROCEDURE DocumentNoOnAfterValidate@19031352();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShowMyEmployeesOnlyOnAfterVali@19015268();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE DateCheckedOnAfterValidate@19039563();
    BEGIN
      CALCFIELDS("Check by Empl. Full Name");
    END;

    PROCEDURE SetOverride@1100285500(OverrideInput@1100285500 : Boolean);
    BEGIN
      ownHoursOverride := OverrideInput;
    END;

    BEGIN
    {
      130912 ITERO.SB Added factbox "Norm Hours Calc FB" and "Norm Hours Diff FB"
      131114 ITERO.DJ added condition to subpagelink of Hour accounting overtime FB to get overtime factbox to update

      140213 ITERO.GH //>>IME-107 in the ReOpen Action
      140305 ITERO.DJ IME108ENH added function setOverride
      140408 ITERO.DL ENH028 added informed=true
      141124 ITERO.WG IME247 Error message when no labour rule on employee card
    }
    END.
  }
}

