OBJECT Page 11012036 Hour Accounting Subform
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    SourceTable=Table11012039;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    RefreshOnActivate=Yes;
    OnInit=BEGIN
             ServiceEnabled := TRUE;

             ProjectNoEditable := TRUE;
             ExtensionContractEditable := TRUE;
             RentalUnitEditable := TRUE;
             PlantFieldsEditable := TRUE;
             PlantRateCodeEditable := TRUE;
             ElementEditable := TRUE;
             CostComponentEditable := TRUE;
             WageComponentEditable := TRUE;
             AmountEditable := TRUE;
             PostingDateEditable := TRUE;
             ReasonCodeEditable := FALSE;
             CostCodeEditable := TRUE;
             ServiceDataEditable := TRUE;
           END;

    OnOpenPage=VAR
                 ShowPlantFields@1100485000 : Boolean;
               BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**FILTER NOT SET, ONLY FILTERTYPE FOR INPUT OF DEPARTMENT CODE
                 //**4PS Generated Code.en01
                 ServiceEnabled := ServiceSetup.READPERMISSION;

                 IF JobsSetup.GET THEN;
                 IF ServiceSetup.GET THEN;

                 //C019758.sn
                 IF UserSetup.GET(USERID) THEN
                   CopyButtonVisible := NOT UserSetup."Access own Hours only";
                 //C019758.en
               END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=VAR
                  EmplRec@1100294002 : Record 5200;
                  HourAccLine@1100294001 : Record 11012039;
                BEGIN
                  // SESB.I029 ASH 03.07.2013 >>
                  IF NOT HourAccLine.GET(xRec.Year,xRec.Week,xRec."Employee No.",xRec."Line No.") THEN BEGIN
                    IF ("Employee No." <> '') AND EmplRec.GET("Employee No.") THEN
                      Type := EmplRec."Default Line Type";
                  END ELSE
                  // SESB.I029 ASH 03.07.2013 <<
                    Type := xRec.Type;
                  IF (Type = Type::Plant) AND (xRec."Plant Rate Code" <> '') THEN
                    "Plant Rate Code" := xRec."Plant Rate Code";
                  "Connection No." := 0;
                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=BEGIN
                     "Connection No." := 0;
                   END;

    OnModifyRecord=BEGIN
                     IF NOT LineIsEditable THEN BEGIN
                       CurrPage.UPDATE(FALSE);
                       EXIT(FALSE);
                     END;
                   END;

    OnDeleteRecord=BEGIN
                     IF NOT LineIsEditable THEN BEGIN
                       CurrPage.UPDATE(FALSE);
                       EXIT(FALSE);
                     END;
                   END;

    ActionList=ACTIONS
    {
      { 1100528700;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528702;1 ;Action    ;
                      CaptionML=ENU=Copy Line to All Employees;
                      Visible=CopyButtonVisible;
                      Image=Copy;
                      OnAction=VAR
                                 CopyHourAccountingLine@1100528700 : Report 11020253;
                               BEGIN
                                 CopyHourAccountingLine.SetHourAccountingLine(Rec);
                                 CopyHourAccountingLine.RUNMODAL;
                               END;
                                }
      { 1100294002;1 ;Action    ;
                      Name=<Action1100294003>;
                      CaptionML=ENU=Line Co&mments;
                      Image=ViewComments;
                      OnAction=BEGIN
                                 ShowLineComments;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 1100485902;2;Field  ;
                SourceExpr="Hour Set";
                Visible=FALSE }

    { 1210190014;2;Field  ;
                SourceExpr=Type;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;
                            }

    { 2   ;2   ;Field     ;
                SourceExpr="Receiving Company";
                Visible=FALSE;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;
                            }

    { 1210190012;2;Field  ;
                SourceExpr="Cost Code";
                Editable=CostCodeEditable;
                OnValidate=BEGIN
                             SetFieldsEditable; //C011429
                             //>>ENH032
                             CostCodeOnValidate;
                             //>>ENH032
                           END;

                OnLookup=BEGIN
                           // SESB.I028 VKO 03.07.2013 >>
                           LookupCostCode;
                           SetFieldsEditable;
                           // SESB.I028 VKO 03.07.2013 <<
                           //>>ENH032
                           IF "Cost Code" <> '' THEN
                             CostCodeOnValidate;
                           //<<ENH032
                         END;
                          }

    { 1100485004;2;Field  ;
                DrillDown=No;
                SourceExpr="Cost Code Description";
                Visible=FALSE }

    { 1210190000;2;Field  ;
                SourceExpr="Service Order No.";
                Enabled=ServiceEnabled;
                Editable=ServiceDataEditable }

    { 1100485012;2;Field  ;
                DrillDown=No;
                SourceExpr="Service Order Description";
                Visible=FALSE }

    { 1210190002;2;Field  ;
                SourceExpr="Service Location No.";
                Enabled=ServiceEnabled;
                Editable=ServiceDataEditable }

    { 1100525002;2;Field  ;
                DrillDown=No;
                SourceExpr="Service Location Description";
                Visible=FALSE }

    { 1100485010;2;Field  ;
                SourceExpr="Additional Cost (Service)";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr="Project No.";
                Editable=ProjectNoEditable;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;

                OnLookup=BEGIN
                           LookupProjectNo;
                           SetFieldsEditable;
                             CurrPage.UPDATE;
                         END;
                          }

    { 11012000;2;Field    ;
                DrillDown=No;
                SourceExpr="Project Description";
                Visible=FALSE }

    { 1100285000;2;Field  ;
                SourceExpr="Project Principal Name" }

    { 1100530000;2;Field  ;
                DrillDown=No;
                SourceExpr="Project City";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                SourceExpr="Extension Contract";
                Visible=FALSE;
                Editable=ExtensionContractEditable }

    { 1100485002;2;Field  ;
                SourceExpr="Rental Unit";
                Visible=FALSE;
                Editable=RentalUnitEditable }

    { 1210190010;2;Field  ;
                SourceExpr="Estimate No.";
                Visible=FALSE }

    { 1210190008;2;Field  ;
                SourceExpr="Try-out No.";
                Visible=FALSE }

    { 1100485904;2;Field  ;
                SourceExpr="Plant Location";
                Editable=PlantFieldsEditable }

    { 1100485906;2;Field  ;
                SourceExpr="Plant Type";
                Editable=PlantFieldsEditable }

    { 1100485908;2;Field  ;
                SourceExpr="Plant No.";
                Editable=PlantFieldsEditable }

    { 1100485914;2;Field  ;
                SourceExpr="Job Notice No.";
                Visible=FALSE }

    { 1100485912;2;Field  ;
                SourceExpr="Plant Rate Code";
                Editable=PlantRateCodeEditable }

    { 1100485910;2;Field  ;
                SourceExpr="Cost Component Plant";
                Editable=PlantFieldsEditable }

    { 6   ;2   ;Field     ;
                SourceExpr=Element;
                Editable=ElementEditable }

    { 1100525000;2;Field  ;
                DrillDown=No;
                SourceExpr="Element Description";
                Visible=FALSE;
                Editable=FALSE }

    { 1100409000;2;Field  ;
                SourceExpr="Department Code";
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                           END;
                            }

    { 10  ;2   ;Field     ;
                SourceExpr="Cost Object";
                LookupPageID=Cost Object List;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;

                OnLookup=BEGIN
                           LookupCostObject;
                           SetFieldsEditable;
                         END;
                          }

    { 1100485014;2;Field  ;
                SourceExpr="Cost Component";
                Editable=CostComponentEditable }

    { 1100485000;2;Field  ;
                DrillDown=No;
                SourceExpr="Cost Object Description";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                SourceExpr="Wage Component";
                Editable=WageComponentEditable;
                OnValidate=VAR
                             "***ITERO***"@1100285002 : Integer;
                             Employee@1100285000 : Record 5200;
                             LabourRuleWageComponent@1100285001 : Record 11128232;
                           BEGIN
                             //>>141104 4PS035
                             WageComponentOnValidate;
                             //<<141104 4PS035
                             SetFieldsEditable;

                             //>> 4PS-011 ITERO.SB 131007 Check if wage comp. is connected to the labour rule of the employee
                             //>>ITERO.DJ IME068 131114
                             Employee.GET("Employee No.");
                             IF Employee."Labour Rule" <> '' THEN BEGIN
                               LabourRuleWageComponent.SETRANGE("Labour Rule Code",Employee."Labour Rule");
                               LabourRuleWageComponent.SETRANGE("Wage Component Code", "Wage Component");
                               IF NOT LabourRuleWageComponent.FINDSET THEN
                                 ERROR(Text002);

                             END;
                             //<<ITERO.DJ 131114
                             //<< 4PS-011
                           END;

                OnLookup=BEGIN
                           // SESB.I028 VKO 03.07.2013 >>
                           LookupWageComponent;
                           SetFieldsEditable;
                           // SESB.I028 VKO 03.07.2013 <<
                         END;
                          }

    { 1210190020;2;Field  ;
                DrillDown=No;
                SourceExpr=Description;
                Visible=FALSE }

    { 1210190026;2;Field  ;
                SourceExpr=Chargeable;
                Visible=FALSE }

    { 1100525005;2;Field  ;
                SourceExpr="Start Kilometer";
                Editable=KMEditable;
                OnValidate=BEGIN
                             IF "Start Kilometer" < "End Kilometer" THEN
                               VALIDATE(Quantity, "End Kilometer" - "Start Kilometer")
                             ELSE
                               VALIDATE(Quantity, 0);
                           END;
                            }

    { 1100525004;2;Field  ;
                SourceExpr="End Kilometer";
                Editable=KMEditable;
                OnValidate=BEGIN
                             IF "Start Kilometer" < "End Kilometer" THEN
                               VALIDATE(Quantity, "End Kilometer" - "Start Kilometer")
                             ELSE
                               VALIDATE(Quantity, 0);
                           END;
                            }

    { 1210190018;2;Field  ;
                SourceExpr=Quantity;
                Editable=QuantityEditable }

    { 1210190022;2;Field  ;
                SourceExpr="Amount (LCY)";
                Editable=AmountEditable;
                HideValue="Amount (LCY)HideValue" }

    { 1100485006;2;Field  ;
                SourceExpr="Posting Date";
                Visible=FALSE;
                Editable=PostingDateEditable }

    { 1100525001;2;Field  ;
                SourceExpr="Start Time" }

    { 1100525003;2;Field  ;
                SourceExpr="End Time" }

    { 14  ;2   ;Field     ;
                SourceExpr=Monday;
                Editable=HoursEditable;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD; //T003308
                           END;
                            }

    { 16  ;2   ;Field     ;
                SourceExpr=Tuesday;
                Editable=HoursEditable;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD; //T003308
                           END;
                            }

    { 18  ;2   ;Field     ;
                SourceExpr=Wednesday;
                Editable=HoursEditable;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD; //T003308
                           END;
                            }

    { 20  ;2   ;Field     ;
                SourceExpr=Thursday;
                Editable=HoursEditable;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD; //T003308
                           END;
                            }

    { 22  ;2   ;Field     ;
                SourceExpr=Friday;
                Editable=HoursEditable;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD; //T003308
                           END;
                            }

    { 24  ;2   ;Field     ;
                SourceExpr=Saturday;
                Editable=HoursEditable;
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD; //T003308
                            END;
                             }

    { 26  ;2   ;Field     ;
                SourceExpr=Sunday;
                Editable=HoursEditable;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD; //T003308
                           END;
                            }

    { 28  ;2   ;Field     ;
                SourceExpr="Total Line";
                Visible=FALSE }

    { 1210190024;2;Field  ;
                SourceExpr="Cost Plus Entry Created";
                Visible=FALSE;
                Editable=FALSE }

    { 1100485008;2;Field  ;
                SourceExpr=Correction;
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr=Comment;
                Visible=FALSE }

    { 1100485016;2;Field  ;
                SourceExpr="Department Code Employee";
                Visible=FALSE }

    { 1100485023;2;Field  ;
                SourceExpr="Cost Price Found at";
                Visible=FALSE }

    { 1100485018;2;Field  ;
                SourceExpr="Reason Code";
                Visible=FALSE;
                Editable=ReasonCodeEditable }

    { 1100528000;2;Field  ;
                CaptionML=ENU=Address;
                SourceExpr=GetServiceOrProjectAddress;
                Visible=FALSE;
                Editable=FALSE }

    { 1100294000;2;Field  ;
                SourceExpr="Team Code" }

    { 1100294001;2;Field  ;
                Name=Text Block;
                CaptionML=ENU=Text Block;
                SourceExpr=CommentLineExist }

    { 1100294003;2;Field  ;
                SourceExpr=Changed;
                Visible=FALSE }

    { 1100294004;2;Field  ;
                SourceExpr=Status;
                Visible=FALSE }

    { 1100294005;2;Field  ;
                SourceExpr=Denied }

    { 1100294006;2;Field  ;
                SourceExpr="Denied By" }

    { 1100294007;2;Field  ;
                SourceExpr="Deny Comment" }

  }
  CODE
  {
    VAR
      JobsSetup@1100525010 : Record 315;
      ServiceSetup@1210190001 : Record 11012800;
      UserSetup@1100409001 : Record 91;
      DimMgt@1100485001 : Codeunit 408;
      DimValRec@1100485002 : Record 349;
      Text001@1100485004 : TextConst 'ENU=Leave Type %1 Total';
      DPA_IsHardFilter@1100000999 : Boolean;
      ServiceEnabled@19076448 : Boolean INDATASET;
      "Amount (LCY)HideValue"@19047794 : Boolean INDATASET;
      Text19017984@19018121 : TextConst 'ENU=Monday';
      Text19002403@19064230 : TextConst 'ENU=Normal Hours';
      Text19055236@19058736 : TextConst 'ENU=Overtime';
      Text19012205@19062374 : TextConst 'ENU=Tuesday';
      Text19044923@19055766 : TextConst 'ENU=Wednesday';
      Text19012960@19062320 : TextConst 'ENU=Thursday';
      Text19029427@19055649 : TextConst 'ENU=Saturday';
      Text19013750@19030036 : TextConst 'ENU=Sunday';
      Text19028226@19014562 : TextConst 'ENU=Total';
      ProjectNoEditable@1100525000 : Boolean INDATASET;
      ExtensionContractEditable@1100525001 : Boolean INDATASET;
      PlantFieldsEditable@1100525015 : Boolean INDATASET;
      PlantRateCodeEditable@1100525002 : Boolean INDATASET;
      RentalUnitEditable@1100525003 : Boolean INDATASET;
      ElementEditable@1100525004 : Boolean INDATASET;
      CostComponentEditable@1100525005 : Boolean INDATASET;
      WageComponentEditable@1100285500 : Boolean INDATASET;
      AmountEditable@1100525007 : Boolean INDATASET;
      PostingDateEditable@1100525008 : Boolean INDATASET;
      ReasonCodeEditable@1100525009 : Boolean INDATASET;
      QuantityEditable@1100525011 : Boolean INDATASET;
      HoursEditable@1100525012 : Boolean INDATASET;
      CostCodeEditable@1100525013 : Boolean INDATASET;
      ServiceDataEditable@1100525014 : Boolean INDATASET;
      CopyButtonVisible@1100409000 : Boolean;
      LabourRuleCostCode@1100294001 : Record 11128231;
      LabourRuleWageComponent@1100294000 : Record 11128232;
      Text002@1100285000 : TextConst 'ENU=Wage Component is not connected to labour rule of the employee';
      Text003@1100285001 : TextConst 'ENU=Cost Code is not connected to labour rule of the employee';
      KMEditable@1100525006 : Boolean INDATASET;

    PROCEDURE GetHoursFromEmployeeAbsence@1100485000(iHourAccountingRec@1100485000 : Record 11012038);
    BEGIN
      GetHoursFromEmployeeAbsence(iHourAccountingRec);
    END;

    PROCEDURE GetHoursFromPostedHours@1100485001(iHourAccountingRec@1100485000 : Record 11012038);
    BEGIN
      GetHoursFromPostedHours(iHourAccountingRec);
    END;

    PROCEDURE GetProjAndServiceOrderData@1100485003(iHourAccountingRec@1100485000 : Record 11012038);
    BEGIN
      GetProjAndServiceOrderData(iHourAccountingRec);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;

      ProjDescrOtherCompany();
      CostObjDescr();
      ElementDescription;
      ServiceLocationDescription; // 33633.n

      CALCFIELDS("Total Monday", "Total Tuesday", "Total Wednesday", "Total Thursday", "Total Friday",
        "Total Saturday", "Total Sunday");
      CALCFIELDS("Overtime Monday", "Overtime Tuesday", "Overtime Wednesday", "Overtime Thursday", "Overtime Friday",
        "Overtime Saturday", "Overtime Sunday", "Overtime Hours");
      CALCFIELDS("Norm Hours", "Norm Days", "Normal Hours", "Posted Normal Hours");
      CALCFIELDS("Component Type");

      SetFieldsEditable;
    END;

    PROCEDURE SetFieldsEditable@1100525007();
    VAR
      PlantSetup@1100525000 : Record 11012550;
    BEGIN
      CALCFIELDS("Component Type", "Travel Expenses");

      ReasonCodeEditable := ("Line No." <> 0);
      PostingDateEditable := CompTypeEditable;

      // SESB.I038 ASH 04.07.2013 >>
      // QuantityEditable := ("Component Type" = "Component Type"::Expenses ) AND ("Wage Component" <>'');
      QuantityEditable :=
        ("Component Type" IN ["Component Type"::Expenses,"Component Type"::"Expense hours"]) AND
        ("Wage Component" <>'');
      // SESB.I038 ASH 04.07.2013 <<

      KMEditable := ("Travel Expenses" AND QuantityEditable);

      AmountEditable := QuantityEditable;

      // SESB.I038 ASH 04.07.2013 >>
      // HoursEditable := ("Component Type" = "Component Type"::Hours );
      HoursEditable := ("Component Type" IN ["Component Type"::Hours,"Component Type"::"Expense hours"]);
      // SESB.I038 ASH 04.07.2013 <<

      IF "Cost Object" <> '' THEN BEGIN
        DimValRec.CHANGECOMPANY("Receiving Company");
        DimMgt.GetDimValueRec(2, "Cost Object", DimValRec, FALSE, '');
        AmountEditable := (
          ("Component Type" IN ["Component Type"::Expenses,"Component Type"::"Expense hours"]) AND // SESB.I038 ASH 04.07.2013
          (DimValRec.Code <> '') AND
          NOT (DimValRec."Fixed at Hours Accounting")
                         );
      END;

      WageComponentEditable := ("Cost Type" <> "Cost Type"::Plant);

      CostComponentEditable := (
        (("Project No." <> '') AND JobsSetup."Cost Component Editable") OR
        (("Service Order No." <> '') AND ServiceSetup."Cost Component Editable") OR
        (("Project No." = '') AND ("Service Order No." = ''))
                                );

      IF Type <> Type::Plant THEN
        ElementEditable := ("Project No." <> '')
      ELSE
        ElementEditable := (CheckPlantLocLinkedToProject());

      CostCodeEditable := (Type = Type::Indirect);

      PlantFieldsEditable := FALSE;
      PlantRateCodeEditable := FALSE;
      IF PlantSetup.READPERMISSION THEN BEGIN
        IF "Receiving Company" <> '' THEN
          PlantSetup.CHANGECOMPANY("Receiving Company");
        IF PlantSetup.GET THEN BEGIN
          PlantFieldsEditable := (Type = Type::Plant);
          PlantRateCodeEditable := (PlantFieldsEditable AND PlantSetup."Rate Codes");
        END;
      END;

      ServiceDataEditable := (Type = Type::Service);

      RentalUnitEditable := ("Project No." <> '');
      ExtensionContractEditable := ("Project No." <> '');

      ProjectNoEditable := ((Type = Type::Project) AND ("Connection No." = 0));
      //* IF connection then changing not allowed, because by saving the project-hour accounting line
      //* will be deleted.

      // SESB.I038 ASH 04.07.2013 >>
      "Amount (LCY)HideValue" := NOT ("Component Type" IN ["Component Type"::Expenses,"Component Type"::"Expense hours"]);
      // SESB.I038 ASH 04.07.2013 <<
    END;

    PROCEDURE GetHoursFromChangeRequestTasks@1100528300(iHourAccountingRec@1100485000 : Record 11012038);
    BEGIN
      Rec.GetHoursFromChangeRequestTasks(iHourAccountingRec);
    END;

    PROCEDURE LookupCostCode@1100294001();
    VAR
      NewCostCode@1100294000 : Code[10];
    BEGIN
      // SESB.I028 VKO 03.07.2013 >>
      IF CostCodeEditable THEN BEGIN
        NewCostCode := LabourRuleCostCode.LookupCostCodeWithFilter("Employee No.");
        IF NewCostCode <> '' THEN
          VALIDATE("Cost Code",NewCostCode);
      END ELSE
        LabourRuleCostCode.LookupCostCodeWithFilter("Employee No.");
      // SESB.I028 VKO 03.07.2013 <<
    END;

    PROCEDURE LookupWageComponent@1100294004();
    VAR
      NewWageComponentCode@1100294000 : Code[10];
    BEGIN
      // SESB.I028 VKO 03.07.2013 >>
      IF WageComponentEditable THEN BEGIN
        NewWageComponentCode := LabourRuleWageComponent.LookupWageComponentWithFilter("Employee No.");
        IF NewWageComponentCode <> '' THEN
          VALIDATE("Wage Component",NewWageComponentCode);
      END ELSE
        LabourRuleWageComponent.LookupWageComponentWithFilter("Employee No.");
      // SESB.I028 VKO 03.07.2013 <<
    END;

    PROCEDURE CostCodeOnValidate@1100285500();
    VAR
      "***ITERO***"@1100285502 : Integer;
      Employee@1100285501 : Record 5200;
      LabourRuleCostCode@1100285500 : Record 11128231;
    BEGIN
      //>> ITERO.SB 131007 4PS-011 Check if cost code is connected to the labour rule of the employee
      //>>141104 4PS035
      IF JobsSetup."Filter Cost&Wage on Lab. Code" THEN BEGIN
      //<<141104 4PS035
        Employee.GET("Employee No.");
        IF Employee."Labour Rule" <> '' THEN BEGIN
          LabourRuleCostCode.SETRANGE("Labour Rule Code",Employee."Labour Rule");
          LabourRuleCostCode.SETRANGE("Cost Code","Cost Code");
          IF NOT LabourRuleCostCode.FINDSET THEN
            ERROR(Text003);
        END;
      END;
      //<<
    END;

    PROCEDURE WageComponentOnValidate@1();
    VAR
      Employee@1000 : Record 5200;
    BEGIN
      //>> 4PS-011 ITERO.SB 131007 Check if wage comp. is connected to the labour rule of the employee
      //>>ITERO.DJ IME068 131114
      //>>141104 4PS035
      IF JobsSetup."Filter Cost&Wage on Lab. Code" THEN BEGIN
      //<<141104 4PS035
        Employee.GET("Employee No.");
        IF Employee."Labour Rule" <> '' THEN BEGIN
          LabourRuleWageComponent.SETRANGE("Labour Rule Code",Employee."Labour Rule");
          LabourRuleWageComponent.SETRANGE("Wage Component Code", "Wage Component");
          IF NOT LabourRuleWageComponent.FINDSET THEN
            ERROR(Text002);
        END;
      END;
      //<<ITERO.DJ 131114
      //<< 4PS-011
    END;

    BEGIN
    {
      SESB.I028 Cost Codes and Wage Component filter
         VKO 03.07.2013 Trigger "Cost Code - OnLookup" changed
         VKO 03.07.2013 Trigger "Wage Component - OnLookup" changed
         VKO 03.07.2013 Trigger LookupCostCode added
         VKO 03.07.2013 Trigger LookupWageComponent added

      SESB.I029 Default value type of time
         ASH 03.07.2013 Trigger "Form - OnNewRecord" changed

      SESB.I037 Enter LAG Number
         ASH 04.07.2013 Control "Team Code" added

      SESB.I038 New Wage Component type
         ASH 04.07.2013 Trigger SetFieldsEditable changed

      SESB.I039 Extend no of characters in hour line
         ASH 05.07.2013 Control "Text Block" added
         ASH 05.07.2013 Action "Line Comments" added

      SESB.I031 Work Flow - Approval of hours
         ASH 17.07.2013 Control Changed added
         ASH 17.07.2013 Control Status added

      SESB.I035.I036 FD Message when dissaproving-correcting hours
         VKO 29.07.2013 Control "Denied" added
         VKO 29.07.2013 Control "Denied By" added
         VKO 29.07.2013 Control "Deny Comment" added

      4PS-011 ITERO.SB 131007 Check if wage comp. is connected to the labour rule of the employee
      ITERO.SB 131007 4PS-011 Check if wage comp. & cost code is connected to the labour rule of the employee
      ITERO.DJ 131114 IME068 Change to check if wage component is connected to the labour rule of the employee
      ITERO.DL 140408 ENH032 same controls for CostCode OnValidate and OnLookup
      141104 ITERO.WG 4PS035 Added trigger WageComponentOnValidate, changed trigger CostCodeOnValidate
    }
    END.
  }
}

