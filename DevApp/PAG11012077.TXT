OBJECT Page 11012077 Progress
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Progress;
    SourceTable=Table11012036;
    DelayedInsert=Yes;
    PageType=Card;
    OnInit=BEGIN
             ProjectNoEditable := TRUE;
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
               END;

    OnAfterGetRecord=BEGIN
                       ProgressSubPageEditable := NOT "Progress Fixed";
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                  IF gFromSiteMgtForm THEN BEGIN
                    "Project No." := gProjectNo;
                    "Progress Date" := gDate;
                  END;
                END;

    ActionList=ACTIONS
    {
      { 1210190008;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525014;1 ;ActionGroup;
                      Name=FunctionsButton;
                      CaptionML=ENU=F&unctions }
      { 1100525015;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy Previous Date;
                      Promoted=Yes;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ProgressRec.GET("Project No.","Progress Date");

                                 IF ProgressRec."Progress Fixed" THEN
                                     ERROR(Text001);

                                 IF NOT CONFIRM(Text000) THEN
                                   EXIT;

                                 CreateProgress;
                                 CopyPreviousProgress;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100525012;2 ;Action    ;
                      Name=PercFinishedProject;
                      CaptionML=ENU=Record  Progress % per Project;
                      Promoted=Yes;
                      Image=CheckRulesSyntax;
                      PromotedCategory=Process;
                      RunPageMode=Edit;
                      OnAction=BEGIN
                                 ProgressRec.GET("Project No.","Progress Date");
                                 CreateProgressLines.InputProgressPerc(ProgressRec,ProgressPercRec.Level::Project);
                               END;
                                }
      { 1100525013;2 ;Action    ;
                      Name=PerdProgrElement;
                      CaptionML=ENU=Record  Progress % per Element;
                      Promoted=Yes;
                      Image=CheckRulesSyntax;
                      PromotedCategory=Process;
                      RunPageMode=Edit;
                      OnAction=BEGIN
                                 ProgressRec.GET("Project No.","Progress Date");
                                 CreateProgressLines.InputProgressPerc(ProgressRec,ProgressPercRec.Level::Element);
                               END;
                                }
      { 1100525010;2 ;Action    ;
                      Name=ProgPercElemCostType;
                      CaptionML=ENU=Record  Progress % per Cost Type - Element;
                      Promoted=Yes;
                      Image=CheckRulesSyntax;
                      PromotedCategory=Process;
                      RunPageMode=Edit;
                      OnAction=BEGIN
                                 ProgressRec.GET("Project No.","Progress Date");
                                 CreateProgressLines.InputProgressPerc(ProgressRec,ProgressPercRec.Level::"Cost Type - Element");
                               END;
                                }
      { 1100525011;2 ;Action    ;
                      CaptionML=ENU=Record  Progress % per Cost Component;
                      Promoted=Yes;
                      Image=CheckRulesSyntax;
                      PromotedCategory=Process;
                      RunPageMode=Edit;
                      OnAction=BEGIN
                                 ProgressRec.GET("Project No.","Progress Date");
                                 CreateProgressLines.InputProgressPerc(ProgressRec,ProgressPercRec.Level::"Cost Component");
                               END;
                                }
      { 1100525008;2 ;Action    ;
                      CaptionML=ENU=Technical Finished;
                      ToolTipML=ENU=Productionstate to 100% on all Cost Units, Technical Project state becomes completed;
                      Image=Completed;
                      OnAction=BEGIN
                                 ProgressRec.GET("Project No.","Progress Date");
                                 IF ProgressRec."Progress Fixed" THEN
                                     ERROR(Text001);

                                 gProjectRec.GET("Project No.");
                                 IF (gProjectRec."Project Status" < gProjectRec."Project Status"::Production) OR
                                    (gProjectRec."Project Status" >= gProjectRec."Project Status"::Finished)
                                 THEN
                                   ERROR(Text11012001);

                                 IF NOT CONFIRM(Text11012000,TRUE,'%') THEN
                                   EXIT;

                                 CreateProgress;
                                 CompleteProgress;
                               END;
                                }
      { 1100525009;1 ;Action    ;
                      ShortCutKey=Ctrl+I;
                      CaptionML=ENU="&Create ";
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=AddAction;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ProgressRec.GET("Project No.","Progress Date");
                                 IF ProgressRec."Progress Fixed" THEN
                                     ERROR(Text001);

                                 CreateProgress;
                               END;
                                }
      { 1210190005;  ;ActionContainer;
                      CaptionML=ENU=&Print;
                      ActionContainerType=Reports }
      { 1210190004;1 ;ActionGroup;
                      CaptionML=ENU=&Print }
      { 1210190003;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Print Progress;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Print;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 ProgressRec := Rec;
                                 ProgressRec.SETRANGE("Project No.","Project No.");
                                 ProgressRec.SETRANGE("Progress Date","Progress Date");
                                 REPORT.RUN(REPORT::"Progress Level",TRUE,FALSE,ProgressRec);
                               END;
                                }
      { 1210190002;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Print Progress - Recording List;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Print;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 ProgressRec := Rec;
                                 ProgressRec.SETRECFILTER;
                                 REPORT.RUN(REPORT::"Progress - Recording List", TRUE, FALSE, ProgressRec);
                               END;
                                }
      { 1210190001;2 ;Action    ;
                      CaptionML=ENU=Progress Reports;
                      Image=PrintChecklistReport;
                      OnAction=BEGIN
                                 PrintDoc.PrintProgress(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=ENU=General;
                GroupType=Group }

    { 2   ;2   ;Field     ;
                SourceExpr="Project No.";
                Editable=ProjectNoEditable }

    { 4   ;2   ;Field     ;
                SourceExpr="Project Description" }

    { 6   ;2   ;Field     ;
                SourceExpr="Progress Date" }

    { 8   ;2   ;Field     ;
                SourceExpr=Comment }

    { 1100525000;2;Field  ;
                SourceExpr="Progress Fixed";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100525002;1;Part   ;
                CaptionML=ENU=Progress Lines;
                SubPageView=SORTING(Project No.,Progress Date,Element,Cost Object);
                SubPageLink=Project No.=FIELD(Project No.),
                            Progress Date=FIELD(Progress Date);
                PagePartID=Page11012078;
                Editable=ProgressSubPageEditable;
                PartType=Page }

    { 1100525007;1;Group  ;
                CaptionML=ENU=Data }

    { 1100525006;2;Field  ;
                SourceExpr="Created by" }

    { 1100525005;2;Field  ;
                SourceExpr="Created on" }

    { 1100525004;2;Field  ;
                SourceExpr="Modified by" }

    { 1100525003;2;Field  ;
                SourceExpr="Modified on" }

    { 1100525001;1;Group  ;
                CaptionML=ENU=Text }

    { 1210190000;2;Field  ;
                SourceExpr=Text;
                MultiLine=Yes }

    { 1100409002;;Container;
                ContainerType=FactBoxArea }

    { 1100409008;1;Part   ;
                SubPageLink=Project No.=FIELD(Project No.);
                PagePartID=Page11130221;
                PartType=Page }

  }
  CODE
  {
    VAR
      DPA_IsHardFilter@1100000999 : Boolean;
      ProgressRec@1210190000 : Record 11012036;
      gProjectRec@1100525002 : Record 11072003;
      ProgressPercRec@1100525004 : Record 11012054;
      PrintDoc@1210190001 : Codeunit 229;
      CreateProgressLines@1100525003 : Codeunit 11012031;
      ProjectNoEditable@1210190002 : Boolean INDATASET;
      gDate@1210190006 : Date;
      gFromSiteMgtForm@1210190005 : Boolean;
      gProjectNo@1210190004 : Code[20];
      Text000@1100525000 : TextConst 'ENU=Do you want to copy previous progress?';
      Text001@1100525001 : TextConst 'ENU=Progress is fixed, Changes not allowed.';
      Text11012000@1100525006 : TextConst 'ENU="Set Progress to 100% and Project Status to Technical Finished? "';
      Text11012001@1100525005 : TextConst 'ENU=Project Status is not correct for this action';
      ProgressSubPageEditable@1100525007 : Boolean INDATASET;

    PROCEDURE SetFromSiteMgtForm@1100525000(IProjectNo@1100525000 : Code[20];IDate@1100525002 : Date);
    BEGIN
      gFromSiteMgtForm := TRUE;
      gProjectNo := IProjectNo;
      gDate := IDate;
      ProjectNoEditable := FALSE;
    END;

    PROCEDURE CopyPreviousProgress@8();
    VAR
      lProgressLineRec@11012000 : Record 11012037;
    BEGIN
      lProgressLineRec.SETRANGE("Project No.","Project No.");
      lProgressLineRec.SETRANGE("Progress Date","Progress Date");
      lProgressLineRec.SETRANGE("Cost Type");
      IF lProgressLineRec.FINDSET(TRUE, FALSE) THEN
        REPEAT
          lProgressLineRec.SetFlowFiltersDates; //C017374.n
          lProgressLineRec.CALCFIELDS("Previous Date");
          IF lProgressLineRec."Previous Date" <> 0D THEN BEGIN
            IF lProgressLineRec."Progress Registry" = lProgressLineRec."Progress Registry"::Quantities THEN BEGIN
              lProgressLineRec.CALCFIELDS("Previous Posture");
              lProgressLineRec.VALIDATE("Cumulative Progress",lProgressLineRec."Previous Posture");
            END ELSE BEGIN
              lProgressLineRec.CALCFIELDS("Prev.Cumulative Progr.%");
              lProgressLineRec.VALIDATE("Cumulative Progress %",lProgressLineRec."Prev.Cumulative Progr.%");
            END;
            lProgressLineRec.MODIFY(TRUE);
          END;
        UNTIL lProgressLineRec.NEXT = 0;
    END;

    PROCEDURE CreateProgress@4();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Create Progress Lines",ProgressRec);
    END;

    PROCEDURE CompleteProgress@1210190000();
    VAR
      lProgressLineRec@11012000 : Record 11012037;
    BEGIN
      lProgressLineRec.RESET;
      lProgressLineRec.SETRANGE("Project No.","Project No.");
      lProgressLineRec.SETRANGE("Progress Date","Progress Date");
      IF lProgressLineRec.FINDSET(TRUE, FALSE) THEN
        REPEAT
          IF lProgressLineRec."Progress Registry" = lProgressLineRec."Progress Registry"::Quantities THEN
            lProgressLineRec.VALIDATE("Cumulative Progress", lProgressLineRec.ProgressQuantity)
          ELSE
            lProgressLineRec.VALIDATE("Cumulative Progress %",100);
          lProgressLineRec.MODIFY(TRUE);
        UNTIL lProgressLineRec.NEXT = 0;

      IF gProjectRec."Project Status" < gProjectRec."Project Status"::"Technical Finished" THEN  BEGIN
        gProjectRec.VALIDATE("Project Status", gProjectRec."Project Status"::"Technical Finished");
        gProjectRec.MODIFY(TRUE);
      END;
    END;

    BEGIN
    END.
  }
}

