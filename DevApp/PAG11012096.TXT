OBJECT Page 11012096 Project/Element Control
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Project/Element Control;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table11012048;
    PageType=List;
    PromotedActionCategoriesML=ENU=New,Process,Report,Project Control;
    OnOpenPage=BEGIN
                 BuildElemCostControl.CreateCostControlProjElem(gJobRec);

                 CODEUNIT.RUN(CODEUNIT::CreateControlLinesElemCostObj,gJobRec);

                 IF gJobRec."No." <> '' THEN
                   SETRANGE("Project No.",gJobRec."No.");

                 PeriodFilter := gJobRec.GETFILTER("Period Filter");
                 PeriodType := gJobRec.GETRANGEMAX("Period Type Filter");
               END;

    OnAfterGetRecord=BEGIN
                       CalcAmounts;

                       DescriptionOnFormat;
                     END;

    ActionList=ACTIONS
    {
      { 1210190013;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1210190011;1 ;Action    ;
                      CaptionML=ENU=Previous Period;
                      ToolTipML=ENU=Previous Period;
                      Promoted=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('<=');
                                 PeriodTypeOnAfterValidate;
                               END;
                                }
      { 1210190009;1 ;Action    ;
                      CaptionML=ENU=Next Period;
                      ToolTipML=ENU=Next Period;
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('>=');
                                 PeriodTypeOnAfterValidate;
                               END;
                                }
      { 1210190025;  ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1210190027;1 ;Action    ;
                      Name=Cost Type;
                      CaptionML=ENU=Cost Type;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ValueLedger;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CLEAR(CostTypeFrm);
                                 CostTypeFrm.SetDefault(gJobRec,Element);
                                 CostTypeFrm.RUNMODAL;
                               END;
                                }
      { 1210190023;1 ;Action    ;
                      Name=Cost Object Labor;
                      CaptionML=ENU=Cost Object Labor;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ItemTrackingLedger;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CLEAR(CostObjectOtherFrm);
                                 CostObjectOtherFrm.SetDefault(gJobRec, Element, 0);
                                 CostObjectOtherFrm.RUN;
                               END;
                                }
      { 1210190021;1 ;Action    ;
                      Name=Cost Object Material;
                      CaptionML=ENU=Cost Object Material;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ItemTrackingLedger;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CLEAR(CostObjectOtherFrm);
                                 CostObjectOtherFrm.SetDefault(gJobRec, Element, 1);
                                 CostObjectOtherFrm.RUN;
                               END;
                                }
      { 1210190019;1 ;Action    ;
                      Name=Cost Object Subcontracting;
                      CaptionML=ENU=Cost Object Subcontracting;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ItemTrackingLedger;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CLEAR(CostObjectOtherFrm);
                                 CostObjectOtherFrm.SetDefault(gJobRec, Element, 2);
                                 CostObjectOtherFrm.RUN;
                               END;
                                }
      { 1210190017;1 ;Action    ;
                      Name=Cost Object Plant;
                      CaptionML=ENU=Cost Object Plant;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ItemTrackingLedger;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CLEAR(CostObjectOtherFrm);
                                 CostObjectOtherFrm.SetDefault(gJobRec, Element, 3);
                                 CostObjectOtherFrm.RUN;
                               END;
                                }
      { 1210190015;1 ;Action    ;
                      Name=Cost Object Sundry;
                      CaptionML=ENU=Cost Object Sundry;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ItemTrackingLedger;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CLEAR(CostObjectOtherFrm);
                                 CostObjectOtherFrm.SetDefault(gJobRec, Element, 4);
                                 CostObjectOtherFrm.RUN;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210190035;1;Group  ;
                CaptionML=ENU=Options }

    { 1210190033;2;Field  ;
                CaptionML=ENU=View by;
                OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             FindPeriod('');
                             PeriodTypeOnAfterValidate;
                           END;
                            }

    { 1210190031;2;Field  ;
                CaptionML=ENU=Date Filter;
                SourceExpr=PeriodFilter;
                OnValidate=VAR
                             ApplicationManagement@1001 : Codeunit 1;
                           BEGIN
                             gJobRec.SETFILTER("Period Filter", PeriodFilter);
                             PeriodFilter := gJobRec.GETFILTER("Period Filter");

                             PeriodFilterOnAfterValidate;
                             IF ApplicationManagement.MakeDateFilter(PeriodFilter) = 0 THEN;
                           END;
                            }

    { 1210190029;1;Group  ;
                Name=Elements;
                CaptionML=ENU=Elements;
                GroupType=Group }

    { 1   ;2   ;Group     ;
                Editable=FALSE;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                GroupType=Repeater }

    { 2   ;3   ;Field     ;
                SourceExpr=Element }

    { 1100485010;3;Field  ;
                DrillDown=No;
                SourceExpr=Level;
                Visible=FALSE }

    { 4   ;3   ;Field     ;
                DrillDown=No;
                SourceExpr=Description }

    { 1100528800;3;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 6   ;3   ;Field     ;
                SourceExpr=Budget }

    { 1210190008;3;Field  ;
                SourceExpr="Budget Hours" }

    { 8   ;3   ;Field     ;
                SourceExpr="Purchase Budget";
                Visible=FALSE }

    { 1100485004;3;Field  ;
                SourceExpr=Purchase;
                Visible=FALSE }

    { 1100485006;3;Field  ;
                SourceExpr="Purchase Period";
                Visible=FALSE }

    { 10  ;3   ;Field     ;
                SourceExpr="Open (Purchase)";
                Visible=TRUE }

    { 12  ;3   ;Field     ;
                CaptionML=ENU=Received/Not Invoiced;
                SourceExpr="Received/Not Invoiced";
                Visible=TRUE }

    { 1210190056;3;Field  ;
                SourceExpr="Received/Not Inv. Hours";
                Visible=FALSE }

    { 1100525000;3;Field  ;
                SourceExpr="Open Ovh. Surch. Firm (Purch.)";
                Visible=FALSE }

    { 1210190002;3;Field  ;
                SourceExpr="Open Ovh. Surch. Soft (Purch.)";
                Visible=FALSE }

    { 1100485022;3;Field  ;
                SourceExpr="Risc Coverage (Prognosis)";
                Visible=FALSE }

    { 14  ;3   ;Field     ;
                SourceExpr="Risc Coverage";
                Visible=FALSE }

    { 16  ;3   ;Field     ;
                SourceExpr="Risc Coverage Withdraw";
                Visible=FALSE }

    { 1210190000;3;Field  ;
                SourceExpr="Open (Inventory)";
                Visible=FALSE }

    { 1210190046;3;Field  ;
                SourceExpr="Open Ovh. Surch. (Inventory)";
                Visible=FALSE }

    { 1210190052;3;Field  ;
                SourceExpr="Open Amount (Hours)";
                Visible=FALSE }

    { 1210190054;3;Field  ;
                SourceExpr="Open Hours";
                Visible=FALSE }

    { 1210190050;3;Field  ;
                SourceExpr="Open Ovh. Surch. (Hours)";
                Visible=FALSE }

    { 20  ;3   ;Field     ;
                SourceExpr="Actual Costs" }

    { 1210190018;3;Field  ;
                SourceExpr="Actual Hours" }

    { 22  ;3   ;Field     ;
                CaptionML=ENU=Total Cost;
                SourceExpr=TotCostDec }

    { 1100485008;3;Field  ;
                CaptionML=ENU=Total Hours;
                SourceExpr=TotHoursDec }

    { 1100485002;3;Field  ;
                CaptionML=ENU=Available;
                SourceExpr=AvailableDec;
                Visible=FALSE }

    { 24  ;3   ;Field     ;
                CaptionML=ENU=Allowed Costs;
                SourceExpr=AllowedDec;
                Visible=FALSE }

    { 1100485012;3;Field  ;
                CaptionML=ENU=Allowed %;
                SourceExpr=AllowedPercDec;
                Visible=FALSE }

    { 1210190022;3;Field  ;
                CaptionML=ENU=Allowed Hours;
                SourceExpr=AllowedHoursDec;
                Visible=FALSE }

    { 18  ;3   ;Field     ;
                CaptionML=ENU=Purchase Result;
                SourceExpr=CostContMgt.PurchResultElem(Rec,FALSE);
                Visible=FALSE }

    { 26  ;3   ;Field     ;
                CaptionML=ENU=Result;
                SourceExpr=ResultDec;
                Visible=FALSE }

    { 1100485014;3;Field  ;
                CaptionML=ENU=Hours Result;
                SourceExpr=ResultHoursDec;
                Visible=FALSE }

    { 1210190030;3;Field  ;
                SourceExpr=Prognosis;
                Visible=FALSE }

    { 1100485016;3;Field  ;
                SourceExpr="Hours Prognosis";
                Visible=FALSE }

    { 1210190036;3;Field  ;
                CaptionML=ENU=Prognosis Total Cost;
                SourceExpr=PrognTotCostDec;
                Visible=FALSE }

    { 1100485018;3;Field  ;
                CaptionML=ENU=Prognosis Total Hours;
                SourceExpr=PrognTotHoursDec;
                Visible=FALSE }

    { 1210190034;3;Field  ;
                CaptionML=ENU=Prognosis End Result;
                SourceExpr=PrognEndResultDec;
                Visible=FALSE }

    { 1100485020;3;Field  ;
                CaptionML=ENU=Prognosis End Result Hours;
                SourceExpr=PrognEndResultHoursDec;
                Visible=FALSE }

    { 1210190032;3;Field  ;
                CaptionML=ENU=Prognosis Result;
                SourceExpr=PrognResultDec;
                Visible=FALSE }

    { 1210190004;3;Field  ;
                SourceExpr=Revenues }

    { 1100485000;3;Field  ;
                CaptionML=ENU=WIP Position;
                SourceExpr="Actual Costs" - Revenues }

    { 28  ;3   ;Field     ;
                SourceExpr="Actuals Period";
                Visible=FALSE }

    { 30  ;3   ;Field     ;
                CaptionML=ENU=Allowed Period;
                SourceExpr=AllowedDec - PrevAllowedDec;
                Visible=FALSE }

    { 32  ;3   ;Field     ;
                CaptionML=ENU=Result Period;
                SourceExpr=AllowedDec - PrevAllowedDec - "Actuals Period";
                Visible=FALSE }

    { 1210190006;3;Field  ;
                SourceExpr="Revenues Period";
                Visible=FALSE }

    { 1210190010;3;Field  ;
                CaptionML=ENU=Cumulative Budget Amount;
                SourceExpr=CumBudgetAmount;
                Visible=FALSE }

    { 1210190012;3;Field  ;
                CaptionML=ENU=Cumulative Budget Hours;
                SourceExpr=CumBudgetHours;
                Visible=FALSE }

    { 1210190016;3;Field  ;
                CaptionML=ENU=Cumulative Actual Costs;
                SourceExpr=CumActualAmount;
                Visible=FALSE }

    { 1210190014;3;Field  ;
                CaptionML=ENU=Cumulative Actual Hours;
                SourceExpr=CumActualHours;
                Visible=FALSE }

    { 1210190048;3;Field  ;
                CaptionML=ENU=Cumulative Total Cost;
                SourceExpr=CumTotalCostDec;
                Visible=FALSE }

    { 1100528000;3;Field  ;
                CaptionML=ENU=Cumulative Total Hours;
                SourceExpr=CumTotalHoursDec;
                Visible=FALSE }

    { 1210190020;3;Field  ;
                CaptionML=ENU=Cumulative Revenues;
                SourceExpr=CumRevenues;
                Visible=FALSE }

    { 1210190024;3;Field  ;
                CaptionML=ENU=Cumulative Allowed Costs;
                SourceExpr=CumAllowedAmount;
                Visible=FALSE }

    { 1210190028;3;Field  ;
                CaptionML=ENU=Cumulative Allowed Hours;
                SourceExpr=CumAllowedHours;
                Visible=FALSE }

    { 1210190026;3;Field  ;
                CaptionML=ENU=Cumulative Result;
                SourceExpr=CumAllowedAmount - CumActualAmount;
                Visible=FALSE }

    { 1210190038;3;Field  ;
                CaptionML=ENU=Cumulative Prognosis;
                SourceExpr=CumPrognosis;
                Visible=FALSE }

    { 1210190040;3;Field  ;
                CaptionML=ENU=Cumulative Prognosis Total Cost;
                SourceExpr=CumPrognTotCostDec;
                Visible=FALSE }

    { 1210190044;3;Field  ;
                CaptionML=ENU=Cumulative Prognosis Result;
                SourceExpr=CumPrognResultDec;
                Visible=FALSE }

    { 1210190042;3;Field  ;
                CaptionML=ENU=Cumulative Prognosis End Result;
                SourceExpr=CumPrognEndResult;
                Visible=FALSE }

  }
  CODE
  {
    VAR
      gJobRec@1210190035 : Record 11072003;
      CumControlProjElemRec@1210190009 : Record 11012048;
      ProjElemRec@1210190019 : Record 11012010;
      CostContMgt@1210190028 : Codeunit 11012006;
      SearchPeriodCu@1210190034 : Codeunit 11012013;
      CostContrCreateCu@1210190033 : Codeunit 11012011;
      DetermineProductionDate@1210190032 : Codeunit 11012014;
      DeterminePrognosisDate@1210190031 : Codeunit 11012029;
      BuildElemCostControl@1210190036 : Codeunit 11012032;
      CostTypeFrm@1210190038 : Page 11012100;
      CostObjectOtherFrm@1210190037 : Page 11012098;
      TotCostDec@1210190027 : Decimal;
      TotHoursDec@1100485001 : Decimal;
      ResultDec@1210190026 : Decimal;
      ResultHoursDec@1100485005 : Decimal;
      PrognTotCostDec@1210190025 : Decimal;
      PrognTotHoursDec@1100485003 : Decimal;
      PrognResultDec@1210190024 : Decimal;
      PrognEndResultDec@1210190023 : Decimal;
      PrognEndResultHoursDec@1100485004 : Decimal;
      AllowedDec@11012004 : Decimal;
      AllowedHoursDec@11012005 : Decimal;
      PrevAllowedDec@1210190004 : Decimal;
      PrevAllowedHoursDec@11012007 : Decimal;
      CumTotalCostDec@1210190018 : Decimal;
      CumTotalHoursDec@1100528000 : Decimal;
      CumBudgetHours@1210190000 : Decimal;
      CumBudgetAmount@1210190001 : Decimal;
      CumActualHours@1210190002 : Decimal;
      CumActualAmount@1210190003 : Decimal;
      CumRevenues@1210190005 : Decimal;
      CumAllowedAmount@1210190006 : Decimal;
      CumAllowedHours@1210190007 : Decimal;
      CumPrognosis@1210190010 : Decimal;
      CumPrognEndResult@1210190011 : Decimal;
      CumPrognTotCostDec@1210190020 : Decimal;
      CumPrognResultDec@1210190029 : Decimal;
      CumOpenPurch@1210190012 : Decimal;
      CumOpenPurchOvhSurch@1210190014 : Decimal;
      CumOpenProd@1210190015 : Decimal;
      CumOpenProdOvhSurch@1210190016 : Decimal;
      CumReceivedNotInvoiced@1210190013 : Decimal;
      CumOpenHours@1210190021 : Decimal;
      CumOpenHoursOvhSurch@1210190022 : Decimal;
      DummyDec@1210190008 : Decimal;
      AvailableDec@1100485000 : Decimal;
      AllowedPercDec@1100485002 : Decimal;
      DescriptionIndent@19057867 : Integer INDATASET;
      PeriodType@1210190030 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      PeriodFilter@1210190017 : Text[50];

    PROCEDURE SetDefault@1210190014(VAR lJobRec@1210190000 : Record 11072003);
    BEGIN
      gJobRec.COPY(lJobRec);
    END;

    PROCEDURE CalcAmounts@1210190001();
    BEGIN
      DetermineProductionDate.DetermineBothDates(gJobRec);
      DeterminePrognosisDate.DetermineBothDates(gJobRec);
      gJobRec.COPYFILTER("Period Filter", "Period Filter");
      gJobRec.COPYFILTER("Cumulation Filter", "Cumulation Filter");

      gJobRec.COPYFILTER("Progress Filter", "Progress Filter");
      gJobRec.COPYFILTER(PrevProgressFilter, PrevProgressFilter);
      gJobRec.COPYFILTER("Prognosis Filter", "Prognosis Filter");
      gJobRec.COPYFILTER(PrevPrognosisFilter, PrevPrognosisFilter);


      SETFILTER("Element Filter",Element);
      CALCFIELDS("Prognosis Previous Period", "Budget Hours", "Actual Hours", Revenues);

      CostContMgt.CalcFieldsElem(Rec);
      CostContMgt.AllowedAndPurchElem(
        Rec,
        AllowedDec, AllowedHoursDec, PrevAllowedDec, PrevAllowedHoursDec,
        TRUE);

      TotCostDec := CostContMgt.TotCostElem(Rec,FALSE);
      TotHoursDec := CostContMgt.TotHoursElem(Rec,FALSE);
      ResultDec := CostContMgt.ResultElem(Rec,FALSE);
      ResultHoursDec := CostContMgt.ResultHoursElem(Rec,FALSE);
      PrognEndResultDec := CostContMgt.PrognEndResultElem(Rec,FALSE);
      PrognEndResultHoursDec := CostContMgt.PrognEndResultHoursElem(Rec,FALSE);
      PrognTotCostDec := CostContMgt.PrognTotCostElem(Rec,FALSE);
      PrognTotHoursDec := CostContMgt.PrognTotHoursElem(Rec,FALSE);
      PrognResultDec := CostContMgt.PrognResultElem(Rec,FALSE);
      AvailableDec := Budget - TotCostDec;
      AllowedPercDec := CostContMgt.AllowedPercElem(Rec,FALSE);

      CalcCumulatives;
    END;

    PROCEDURE CalcCumulatives@1210190003();
    VAR
      MaxElem@1210190000 : Code[20];
    BEGIN
      //Set Element Filter
      CumControlProjElemRec.COPY(Rec);
      CALCFIELDS(Level);
      IF Level = 0 THEN
        CumControlProjElemRec.SETRANGE("Element Filter")
      ELSE BEGIN
        MaxElem := '';

        ProjElemRec.RESET; //C001378
        ProjElemRec.SETRANGE("Project No.","Project No.");
        //C001378.sn
        CASE Level OF
          1:
            BEGIN
              ProjElemRec.SETRANGE(Chapter, Element);
              IF ProjElemRec.FINDLAST THEN
                MaxElem := ProjElemRec.Element;
            END;
          2:
            BEGIN
              ProjElemRec.SETRANGE(Paragraph, Element);
              IF ProjElemRec.FINDLAST THEN
                MaxElem := ProjElemRec.Element;
            END;
          3:
            MaxElem := Element;
        END;
        //C001378.en

        CumControlProjElemRec.COPY(Rec);
        IF (MaxElem = '') OR (MaxElem = Element) THEN
          CumControlProjElemRec.SETRANGE("Element Filter", Element)
        ELSE
          CumControlProjElemRec.SETFILTER("Element Filter", '%1..%2', Element, MaxElem);
      END;


      WITH CumControlProjElemRec DO BEGIN

        CostContMgt.CalcFieldsElem(CumControlProjElemRec);

        //Do Not use CostContMgt.AllowedAndPurchElem To Calc Cumulatives
        CalculateAllowed(CumAllowedAmount,CumAllowedHours,DummyDec,DummyDec,Level,Element);
        CumBudgetHours := "Budget Hours";
        CumBudgetAmount := Budget;
        CumActualHours := "Actual Hours";
        CumActualAmount := "Actual Costs";
        CumRevenues := Revenues;
        CumPrognosis := Prognosis;
        CumOpenPurch := CostContMgt.OutstandingElem(CumControlProjElemRec,FALSE);
        CumOpenPurchOvhSurch := CostContMgt.OpenOvhPurchElem(CumControlProjElemRec,FALSE);
        CumOpenProd := "Open (Inventory)";
        CumOpenProdOvhSurch := "Open Ovh. Surch. (Inventory)";
        CumOpenHours := "Open Amount (Hours)";
        CumOpenHoursOvhSurch := "Open Ovh. Surch. (Hours)";
        CumReceivedNotInvoiced := CostContMgt.ReceivedNotInvoicedElem(CumControlProjElemRec,FALSE);
        CumTotalCostDec := CostContMgt.TotCostElem(CumControlProjElemRec,FALSE);
        CumTotalHoursDec := CostContMgt.TotHoursElem(CumControlProjElemRec,FALSE); //C24203
        CumPrognEndResult := CostContMgt.PrognEndResultElem(CumControlProjElemRec,FALSE);
        CumPrognTotCostDec := CostContMgt.PrognTotCostElem(CumControlProjElemRec,FALSE); //call 33954
        CumPrognResultDec := CostContMgt.PrognResultElem(CumControlProjElemRec,FALSE); //call 33954

      END;
    END;

    PROCEDURE CostPerElement@1(VAR PRJ@11012000 : Record 11072003);
    BEGIN
      PRJ.SETRANGE("Multipurpose Filter", Element);
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      DescriptionIndent := Level;  //db, 28-03-06
    END;

    LOCAL PROCEDURE PeriodTypeOnAfterValidate@19012979();
    BEGIN
      PeriodFilter := gJobRec.GETFILTER("Period Filter");
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PeriodFilterOnAfterValidate@1210190002();
    BEGIN
      gJobRec.SETFILTER("Cumulation Filter", '..%1', gJobRec.GETRANGEMAX("Period Filter"));
      CurrPage.UPDATE;
    END;

    PROCEDURE FindPeriod@1210190000(SearchString@1210190000 : Text[3]);
    BEGIN
      SearchPeriodCu.FindPeriod(gJobRec,PeriodType,SearchString);
    END;

    BEGIN
    END.
  }
}

