OBJECT Page 11012105 Select Advice Orders
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Select Advice Orders;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    PageType=Card;
    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 20      ;1   ;Action    ;
                      CaptionML=ENU=Previous Period;
                      ToolTipML=ENU=Previous Period;
                      Promoted=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SearchPeriod.FindPeriod(datfilterstart,DatFilterEnd,CumulationFilterTxt,datefiltertxt,PeriodType,'<=');
                               END;
                                }
      { 21      ;1   ;Action    ;
                      CaptionML=ENU=Next Period;
                      ToolTipML=ENU=Next Period;
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SearchPeriod.FindPeriod(datfilterstart,DatFilterEnd,CumulationFilterTxt,datefiltertxt,PeriodType,'>=');
                               END;
                                }
      { 3       ;1   ;Action    ;
                      CaptionML=ENU=Process;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 StoreDefaults;
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1902923501;1;Group  ;
                CaptionML=ENU=View By;
                GroupType=Group }

    { 14  ;2   ;Field     ;
                CaptionML=ENU=View by;
                ToolTipML=ENU=Day;
                OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             IF PeriodType = PeriodType::"Accounting Period" THEN
                               AccountingPerioPeriodTypeOnVal;
                             IF PeriodType = PeriodType::Year THEN
                               YearPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Quarter THEN
                               QuarterPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Month THEN
                               MonthPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Week THEN
                               WeekPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Day THEN
                               DayPeriodTypeOnValidate;
                           END;
                            }

    { 1210190000;1;Group  ;
                CaptionML=ENU=General;
                GroupType=Group }

    { 10  ;2   ;Field     ;
                CaptionML=ENU=Process Run;
                OptionCaptionML=ENU=Purchase,Inventory,Both;
                SourceExpr=SelRun }

    { 1100485001;2;Field  ;
                CaptionML=ENU=Service Order;
                SourceExpr=SelServOrder;
                OnLookup=BEGIN
                           IF PAGE.RUNMODAL(PAGE::"Service-Order List", ServOrderRec, ServOrderRec."No.") = ACTION::LookupOK THEN BEGIN
                             SelZoom := ServOrderRec."No.";
                             IF ServOrderRec.GET(SelServOrder) THEN
                               //**replace an earlier selected serv.order by 1 other serv.order
                               SelServOrder := SelZoom
                             ELSE
                               //**add selected serv.order, fe. to create a series (A1..A5|B1&C*)
                               SelServOrder := SelServOrder + SelZoom;
                           END;
                         END;
                          }

    { 6   ;2   ;Field     ;
                CaptionML=ENU=Project;
                SourceExpr=SelProject;
                OnLookup=BEGIN
                           IF PAGE.RUNMODAL(PAGE::"Job List", ProjRec, ProjRec."No.") = ACTION::LookupOK THEN BEGIN
                             SelZoom := ProjRec."No.";
                             IF ProjRec.GET(SelProject) THEN
                               //**replace an earlier selected project by 1 other project
                               SelProject := SelZoom
                             ELSE
                               //**add selected project, fe. to create a series (A1..A5|B1&C*)
                               SelProject := SelProject + SelZoom;
                           END;
                         END;
                          }

    { 8   ;2   ;Field     ;
                CaptionML=ENU=Element;
                SourceExpr=SelElement;
                OnLookup=BEGIN
                           IF PAGE.RUNMODAL(PAGE::Elements, ElemRec, ElemRec.Code) = ACTION::LookupOK THEN  BEGIN
                             SelZoom := ElemRec.Code;
                             IF ElemRec.GET(SelElement) THEN
                               //**replace an earlier selected element by 1 other element
                               SelElement := SelZoom
                             ELSE
                               //**add selected element, fe. to create a series (A1..A5|B1&C*)
                               SelElement := SelElement + SelZoom;
                           END;
                         END;
                          }

    { 5   ;2   ;Field     ;
                CaptionML=ENU=Deliver;
                OptionCaptionML=ENU=" ,Location,Project Location,Service Location";
                SourceExpr=SelShip }

    { 1   ;2   ;Field     ;
                Name=SelLocation;
                CaptionML=ENU=Location;
                SourceExpr=SelLocation;
                OnLookup=BEGIN
                           IF SelShip = SelShip::"Project Location" THEN BEGIN
                             IF PAGE.RUNMODAL(PAGE::"Project Location", ProjLocRec, ProjLocRec.Code) = ACTION::LookupOK THEN BEGIN
                               SelZoom := ProjLocRec.Code;
                               IF ProjLocRec.GET(SelProject, SelLocation) THEN
                                 //**replace an earlier selected location by 1 other location
                                 SelLocation := SelZoom
                               ELSE
                                 //**add selected location, fe. to create a series  (A1..A5|B1&C*)
                                 SelLocation := SelLocation + SelZoom;
                             END;
                           END;
                           IF SelShip = SelShip::Location THEN BEGIN
                             IF PAGE.RUNMODAL(PAGE::"Location List", LocRec, LocRec.Code) = ACTION::LookupOK THEN BEGIN
                               SelZoom := LocRec.Code;
                               IF LocRec.GET(SelLocation) THEN
                                 //**replace an earlier selected location by 1 other location
                                 SelLocation := SelZoom
                               ELSE
                                 //**add selected location, fe. to create a series  (A1..A5|B1&C*)
                                 SelLocation := SelLocation + SelZoom;
                             END;
                           END;
                         END;
                          }

    { 13  ;2   ;Field     ;
                CaptionML=ENU=Shipment Date;
                SourceExpr=CumulationFilterTxt;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      ImexRec@11012000 : Record 11012056;
      ServOrderRec@1100485001 : Record 11012823;
      ProjRec@11012001 : Record 11072003;
      ElemRec@11012002 : Record 11012060;
      LocRec@11012003 : Record 14;
      ProjLocRec@11012004 : Record 11012011;
      SelZoom@11012005 : Code[80];
      SelRun@11012006 : 'Purchase,Inventory,Both';
      SelShip@11012007 : ' ,Location,Project Location,Service Location';
      SelLocation@11012009 : Code[80];
      SelProject@11012011 : Code[80];
      SelElement@11012012 : Code[80];
      SelServOrder@1100485000 : Code[80];
      SearchPeriod@11012013 : Codeunit 11012016;
      CumulationFilterTxt@11012014 : Text[80];
      PeriodType@11012015 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      datfilterstart@11012016 : Date;
      DatFilterEnd@11012017 : Date;
      datefiltertxt@11012018 : Text[80];

    PROCEDURE StoreDefaults@1000000000();
    BEGIN
      ImexRec.SETRANGE("User ID", USERID);
      ImexRec.SETFILTER("Process ID", 'F51012*');
      ImexRec.SETRANGE(Type, ImexRec.Type::Export);
      ImexRec.DELETEALL;
      COMMIT;

      ImexRec.INIT;
      ImexRec."User ID" := USERID;
      ImexRec."Process ID" := 'F51012.1';
      ImexRec.Type := ImexRec.Type::Export;
      ImexRec.Description := 'Transaction';
      IF SelRun = SelRun::Purchase THEN ImexRec.Condition := 'Purchases';
      IF SelRun = SelRun::Inventory THEN ImexRec.Condition := 'Inventory';
      IF SelRun = SelRun::Both THEN ImexRec.Condition := 'Both';
      ImexRec.INSERT;

      ImexRec."Process ID" := 'F51012.2';
      ImexRec.Description := 'Project';
      ImexRec.Condition := SelProject;
      ImexRec.INSERT;

      ImexRec."Process ID" := 'F51012.3';
      ImexRec.Description := 'Element';
      ImexRec.Condition := SelElement;
      ImexRec.INSERT;

      ImexRec."Process ID" := 'F51012.4';
      ImexRec.Description := 'Shipm.Date';
      ImexRec.Condition := CumulationFilterTxt;
      ImexRec.INSERT;

      ImexRec."Process ID" := 'F51012.5';
      ImexRec.Description := 'ServOrder';
      ImexRec.Condition := SelServOrder;
      ImexRec.INSERT;
    END;

    LOCAL PROCEDURE SelLocationOnBeforeInput@19058501();
    BEGIN
      //CurrPage.SelLocation.UPDATEEDITABLE(SelShip<>SelShip::"Service Location");
    END;

    LOCAL PROCEDURE DayPeriodTypeOnPush@19008851();
    BEGIN
      SearchPeriod.FindPeriod(datfilterstart,DatFilterEnd,CumulationFilterTxt,datefiltertxt,PeriodType,'');
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnPush@19046063();
    BEGIN
      SearchPeriod.FindPeriod(datfilterstart,DatFilterEnd,CumulationFilterTxt,datefiltertxt,PeriodType,'');
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnPush@19047374();
    BEGIN
      SearchPeriod.FindPeriod(datfilterstart,DatFilterEnd,CumulationFilterTxt,datefiltertxt,PeriodType,'');
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnPush@19018850();
    BEGIN
      SearchPeriod.FindPeriod(datfilterstart,DatFilterEnd,CumulationFilterTxt,datefiltertxt,PeriodType,'');
    END;

    LOCAL PROCEDURE YearPeriodTypeOnPush@19051042();
    BEGIN
      SearchPeriod.FindPeriod(datfilterstart,DatFilterEnd,CumulationFilterTxt,datefiltertxt,PeriodType,'');
    END;

    LOCAL PROCEDURE AccountingPerioPeriodTypOnPush@19038761();
    BEGIN
      SearchPeriod.FindPeriod(datfilterstart,DatFilterEnd,CumulationFilterTxt,datefiltertxt,PeriodType,'');
    END;

    LOCAL PROCEDURE DayPeriodTypeOnValidate@19012979();
    BEGIN
      DayPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnValidate@19058475();
    BEGIN
      WeekPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnValidate@19021027();
    BEGIN
      MonthPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnValidate@19015346();
    BEGIN
      QuarterPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE YearPeriodTypeOnValidate@19064743();
    BEGIN
      YearPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE AccountingPerioPeriodTypeOnVal@19058901();
    BEGIN
      AccountingPerioPeriodTypOnPush;
    END;

    BEGIN
    END.
  }
}

