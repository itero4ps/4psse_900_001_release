OBJECT Page 11012147 Budget Summary Sheet
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Budget Summary Sheet;
    SourceTable=Table11012064;
    DataCaptionFields=Project No.,Contract No.;
    PageType=List;
    OnInit=BEGIN
             InitEditable;  //db, 24-08-15
           END;

    OnOpenPage=VAR
                 lvJobRec@1100525001 : Record 11072003;
                 lvExtensionRec@1100525002 : Record 11012004;
               BEGIN
                 CalcSummaryTotals(TRUE,FALSE);

                 lvJobRec.INIT;
                 IF (GETFILTERS <> '') AND (GETFILTERS <> '''''') THEN BEGIN  // '''''' = 2 quotes
                   IF (GETFILTER(Option) = '''''') OR (GETFILTER(Option) = '') THEN BEGIN
                     IF lvJobRec.GET(GETFILTER("Project No.")) THEN BEGIN
                       IF (GETFILTER("Contract No.") <> '''''') AND (GETFILTER("Contract No.") <> '') THEN BEGIN
                         IF lvExtensionRec.GET(lvJobRec."No.", GETFILTER("Contract No.")) THEN BEGIN
                           lvJobRec."Budget Fixed" := lvExtensionRec."Budget Fixed";
                           IF lvExtensionRec."Extension Fixed" THEN
                             lvJobRec."Budget Fixed" := lvExtensionRec."Extension Fixed";
                         END;
                       END;
                     END;
                   END;
                 END;

                 IF lvJobRec."Budget Fixed" THEN CurrPage.EDITABLE := FALSE;
               END;

    OnAfterGetRecord=BEGIN
                       CalcTotals('');
                       CalcSummaryTotals(FALSE,FALSE);
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=BEGIN
                     INSERT(TRUE);
                     CalcSummaryTotals(TRUE,TRUE);
                     DELETE(FALSE);
                   END;

    OnQueryClosePage=BEGIN
                       UpdateBudgetLines(TRUE,'');
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1210190034;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1210190067;2 ;Action    ;
                      CaptionML=ENU=Get Standard Summary Sheet;
                      Image=CopyCostBudget;
                      OnAction=BEGIN
                                 CopyTemplate("Project No.", "Contract No.", '', '', '', '', '', '');
                                 ReCalcSummaryLines('');  //Budget Adjustment
                                 UpdateBudgetLines(TRUE, '');  //Budget Adjustment
                                 CalcSummaryTotals(TRUE,FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210190000;1;Group  ;
                GroupType=Repeater }

    { 1210190068;2;Field  ;
                SourceExpr="Row No." }

    { 1210190001;2;Field  ;
                SourceExpr=Element }

    { 1100409002;2;Field  ;
                SourceExpr="Version Date" }

    { 1210190003;2;Field  ;
                SourceExpr="Cost Type";
                OnValidate=BEGIN
                             CalcLineAndSummaryTotals;
                             CurrPage.UPDATE;
                           END;
                            }

    { 1210190005;2;Field  ;
                SourceExpr="Cost Object";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100525002;2;Field  ;
                SourceExpr="Overhead Surcharge" }

    { 1100485000;2;Field  ;
                SourceExpr="Cost Component";
                Editable=CostComponentEditable }

    { 1210190007;2;Field  ;
                SourceExpr=Description }

    { 1210190009;2;Field  ;
                SourceExpr=Type;
                OnValidate=BEGIN
                             CalcLineAndSummaryTotals;
                             CurrPage.UPDATE;
                           END;
                            }

    { 1210190074;2;Field  ;
                SourceExpr="Kind of Surcharge";
                Editable=KindofSurchargeEditable;
                OnValidate=BEGIN
                             CalcLineAndSummaryTotals;
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100409000;2;Field  ;
                SourceExpr="Amount/Hours" }

    { 1210190011;2;Field  ;
                SourceExpr=Quantity;
                Editable=QuantityEditable;
                OnValidate=BEGIN
                             CalcLineAndSummaryTotals;
                             CurrPage.UPDATE;
                           END;
                            }

    { 1210190013;2;Field  ;
                SourceExpr=Norm;
                Editable=NormEditable;
                OnValidate=BEGIN
                             CalcLineAndSummaryTotals;
                             CurrPage.UPDATE;
                           END;
                            }

    { 1210190015;2;Field  ;
                SourceExpr="Unit of Measure";
                Editable=UnitOfMeasureEditable }

    { 1210190017;2;Field  ;
                SourceExpr="Rate Code";
                Editable=RateCodeEditable;
                OnValidate=BEGIN
                             CalcLineAndSummaryTotals;
                             CurrPage.UPDATE;
                           END;
                            }

    { 1210190019;2;Field  ;
                SourceExpr=Rate;
                Editable=RateEditable;
                OnValidate=BEGIN
                             CalcLineAndSummaryTotals;
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100525001;2;Field  ;
                SourceExpr="Rate (FCY)";
                Visible=FALSE;
                Editable=RateEditable }

    { 1210190021;2;Field  ;
                SourceExpr=Price;
                Editable=PriceEditable;
                OnValidate=BEGIN
                             CalcLineAndSummaryTotals;
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100525003;2;Field  ;
                SourceExpr="Price (FCY)";
                Visible=FALSE;
                Editable=PriceEditable }

    { 1210190023;2;Field  ;
                SourceExpr=Hours;
                Editable=HoursEditable }

    { 1210190025;2;Field  ;
                SourceExpr=Amount;
                Editable=AmountEditable }

    { 1100525004;2;Field  ;
                SourceExpr="Amount (FCY)";
                Visible=FALSE;
                Editable=AmountEditable }

    { 1100525005;2;Field  ;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 1210190027;2;Field  ;
                SourceExpr="Cost Type Filter";
                Editable=CostTypeFilterEditable;
                OnValidate=BEGIN
                             CalcLineAndSummaryTotals;
                             CurrPage.UPDATE;
                           END;
                            }

    { 1210190029;2;Field  ;
                SourceExpr="Cost Object Filter";
                Editable=CostObjectFilterEditable;
                OnValidate=BEGIN
                             CalcLineAndSummaryTotals;
                             CurrPage.UPDATE;
                           END;
                            }

    { 1210190035;2;Field  ;
                SourceExpr="Element Filter";
                Editable=ElementFilterEditable;
                OnValidate=BEGIN
                             CalcLineAndSummaryTotals;
                             CurrPage.UPDATE;
                           END;
                            }

    { 1210190070;2;Field  ;
                SourceExpr=Totaling;
                Editable=TotalingEditable;
                OnValidate=BEGIN
                             CalcLineAndSummaryTotals;
                             CurrPage.UPDATE;
                           END;
                            }

    { 1210190072;2;Field  ;
                SourceExpr=Subtotal;
                Editable=FALSE }

    { 1100525000;2;Field  ;
                SourceExpr="Delete Line if Order" }

    { 1210190002;0;Container;
                ContainerType=FactBoxArea }

    { 1210190006;1;Part   ;
                SubPageLink=Project No.=FIELD(Project No.),
                            Contract No.=FIELD(Contract No.),
                            Plot No.=FIELD(Plot No.),
                            House Model=FIELD(House Model),
                            Main Group=FIELD(Main Group),
                            Group=FIELD(Group),
                            Sub Group=FIELD(Sub Group),
                            Option=FIELD(Option),
                            Row No.=FIELD(Row No.);
                PagePartID=Page11130113;
                PartType=Page }

    { 1210190004;1;Part   ;
                SubPageLink=Project No.=FIELD(Project No.),
                            Contract No.=FIELD(Contract No.),
                            Plot No.=FIELD(Plot No.),
                            House Model=FIELD(House Model),
                            Main Group=FIELD(Main Group),
                            Group=FIELD(Group),
                            Sub Group=FIELD(Sub Group),
                            Option=FIELD(Option),
                            Row No.=FIELD(Row No.);
                PagePartID=Page11130114;
                PartType=Page }

  }
  CODE
  {
    VAR
      "Summary Total Labor"@1210190007 : Decimal;
      "Summary Total Material"@1210190008 : Decimal;
      "Summary Total Subcontracting"@1210190010 : Decimal;
      "Summary Total Plant"@1210190011 : Decimal;
      "Summary Total Sundry"@1210190009 : Decimal;
      "Summary Total Hours"@1210190012 : Decimal;
      "Summary Total Amount"@1210190013 : Decimal;
      CostComponentEditable@19073195 : Boolean INDATASET;
      KindofSurchargeEditable@1100525000 : Boolean INDATASET;
      QuantityEditable@1100525001 : Boolean INDATASET;
      UnitOfMeasureEditable@1100525003 : Boolean INDATASET;
      RateCodeEditable@1100525002 : Boolean INDATASET;
      RateEditable@1100525004 : Boolean INDATASET;
      NormEditable@1100525005 : Boolean INDATASET;
      PriceEditable@1100525006 : Boolean INDATASET;
      HoursEditable@1100525007 : Boolean INDATASET;
      AmountEditable@1100525008 : Boolean INDATASET;
      CostTypeFilterEditable@1100525009 : Boolean INDATASET;
      CostObjectFilterEditable@1100525010 : Boolean INDATASET;
      ElementFilterEditable@1100525011 : Boolean INDATASET;
      TotalingEditable@1100525012 : Boolean INDATASET;

    PROCEDURE CalcSummaryTotals@1210190001(iWithUpdate@1210190001 : Boolean;iInsertRecord@1210190004 : Boolean);
    VAR
      lSummaryRec@1210190000 : Record 11012064;
      lPreviousTotal@1210190002 : Decimal;
      lLoopCount@1210190003 : Integer;
    BEGIN
      "Summary Total Amount":= 0;
      lLoopCount := 0;
      REPEAT
        lLoopCount := lLoopCount + 1;
        lSummaryRec.SETRANGE("Project No.","Project No.");
        lSummaryRec.SETRANGE("Contract No.","Contract No.");
        lSummaryRec.SETFILTER(Option,'%1','');

        lPreviousTotal := "Summary Total Amount";
        "Summary Total Labor" := 0;
        "Summary Total Hours" := 0;
        "Summary Total Amount":= 0;

        lSummaryRec.SETRANGE("Cost Type","Cost Type"::Labor);
        IF lSummaryRec.FIND('-') THEN BEGIN
          REPEAT
            //lSummaryRec.CalcTotals(); //Summary Adjustment
            lSummaryRec.CalcTotals(''); //Summary Adjustment

            IF iWithUpdate THEN
              lSummaryRec.MODIFY;
            "Summary Total Labor" := "Summary Total Labor" + lSummaryRec.Amount;
            "Summary Total Hours" := "Summary Total Hours" + lSummaryRec.Hours;

            IF iInsertRecord AND ("Row No." = lSummaryRec."Row No.") THEN BEGIN
              Amount := lSummaryRec.Amount;
              Hours := lSummaryRec.Hours;
              Price := lSummaryRec.Price;
              Subtotal := lSummaryRec.Subtotal;
            END;

          UNTIL lSummaryRec.NEXT = 0;
        END;

        lSummaryRec.SETRANGE("Cost Type","Cost Type"::Material);
        "Summary Total Material" := 0;
        IF lSummaryRec.FIND('-') THEN BEGIN
          REPEAT
            //lSummaryRec.CalcTotals(); //Summary Adjustment
            lSummaryRec.CalcTotals(''); //Summary Adjustment

            IF iWithUpdate THEN
              lSummaryRec.MODIFY;
            "Summary Total Material" := "Summary Total Material" + lSummaryRec.Amount;

            IF iInsertRecord AND ("Row No." = lSummaryRec."Row No.") THEN BEGIN
              Amount := lSummaryRec.Amount;
              Price := lSummaryRec.Price;
              Subtotal := lSummaryRec.Subtotal;
            END;

          UNTIL lSummaryRec.NEXT = 0;
        END;

        lSummaryRec.SETRANGE("Cost Type","Cost Type"::Subcontracting);
        "Summary Total Subcontracting" := 0;
        IF lSummaryRec.FIND('-') THEN BEGIN
          REPEAT
            //lSummaryRec.CalcTotals(); //Summary Adjustment
            lSummaryRec.CalcTotals(''); //Summary Adjustment

            IF iWithUpdate THEN
              lSummaryRec.MODIFY;
            "Summary Total Subcontracting" := "Summary Total Subcontracting" + lSummaryRec.Amount;

            IF iInsertRecord AND ("Row No." = lSummaryRec."Row No.") THEN BEGIN
              Amount := lSummaryRec.Amount;
              Price := lSummaryRec.Price;
              Subtotal := lSummaryRec.Subtotal;
            END;

          UNTIL lSummaryRec.NEXT = 0;
        END;

        lSummaryRec.SETRANGE("Cost Type","Cost Type"::Plant);
        "Summary Total Plant" := 0;
        IF lSummaryRec.FIND('-') THEN BEGIN
          REPEAT
            //lSummaryRec.CalcTotals(); //Summary Adjustment
            lSummaryRec.CalcTotals(''); //Summary Adjustment

            IF iWithUpdate THEN
              lSummaryRec.MODIFY;
            "Summary Total Plant" := "Summary Total Plant" + lSummaryRec.Amount;

            IF iInsertRecord AND ("Row No." = lSummaryRec."Row No.") THEN BEGIN
              Amount := lSummaryRec.Amount;
              Price := lSummaryRec.Price;
              Subtotal := lSummaryRec.Subtotal;
            END;

          UNTIL lSummaryRec.NEXT = 0;
        END;

        lSummaryRec.SETRANGE("Cost Type","Cost Type"::Sundry);
        "Summary Total Sundry" := 0;
        IF lSummaryRec.FIND('-') THEN BEGIN
          REPEAT
            //lSummaryRec.CalcTotals(); //Summary Adjustment
            lSummaryRec.CalcTotals(''); //Summary Adjustment

            IF iWithUpdate THEN
              lSummaryRec.MODIFY;
            "Summary Total Sundry" := "Summary Total Sundry" + lSummaryRec.Amount;

            IF iInsertRecord AND ("Row No." = lSummaryRec."Row No.") THEN BEGIN
              Amount := lSummaryRec.Amount;
              Price := lSummaryRec.Price;
              Subtotal := lSummaryRec.Subtotal;
            END;

          UNTIL lSummaryRec.NEXT = 0;
        END;

        "Summary Total Amount":= "Summary Total Labor" + "Summary Total Material" +
                                  "Summary Total Subcontracting" + "Summary Total Plant" + "Summary Total Sundry";
        lSummaryRec.SETRANGE("Cost Type");

      UNTIL (ROUND("Summary Total Amount") = ROUND(lPreviousTotal)) OR
            (NOT iWithUpdate) OR
            (lLoopCount > 20);
    END;

    PROCEDURE CalcLineAndSummaryTotals@1210190002();
    BEGIN
      CurrPage.SAVERECORD();
      //CalcTotals(); //Summary Adjustment
      CalcTotals(''); //Summary Adjustment

      CurrPage.SAVERECORD();
      CalcSummaryTotals(TRUE,FALSE);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      CalcSummaryTotals(FALSE,FALSE);
      SetEditable;  //db, 24-08-15
    END;

    LOCAL PROCEDURE InitEditable@1100525000();
    BEGIN
      //db, 24-08-15
      CostComponentEditable := TRUE;
      KindofSurchargeEditable := TRUE;
      QuantityEditable := TRUE;
      UnitOfMeasureEditable := TRUE;
      RateCodeEditable := TRUE;
      RateEditable := TRUE;
      NormEditable := TRUE;
      PriceEditable := TRUE;
      HoursEditable := TRUE;
      AmountEditable := TRUE;
      CostTypeFilterEditable := TRUE;
      CostObjectFilterEditable := TRUE;
      ElementFilterEditable := TRUE;
      TotalingEditable := TRUE;
    END;

    LOCAL PROCEDURE SetEditable@1100525001();
    BEGIN
      //db, 24-08-15
      CostComponentEditable := CostComponentIsEditable;
      KindofSurchargeEditable := KindOfSurchargeIsEditable;
      QuantityEditable := QuantityIsEditable;
      UnitOfMeasureEditable := UnitOfMeasureIsEditable;
      RateCodeEditable := RateCodeIsEditable;
      RateEditable := RateIsEditable;
      NormEditable := NormIsEditable;
      PriceEditable := PriceIsEditable;
      //HoursEditable := HoursIsEditable;
      AmountEditable := AmountIsEditable;
      CostTypeFilterEditable := CostTypeFilterIsEditable;
      CostObjectFilterEditable := CostObjectFltrIsEditable;
      ElementFilterEditable := ElementFilterIsEditable;
      TotalingEditable := TotalingIsEditable;
    END;

    BEGIN
    END.
  }
}

