OBJECT Page 11012149 Small Project
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Small Project Card;
    SourceTable=Table11072003;
    SourceTableView=WHERE(Small Project=CONST(Yes));
    PageType=Card;
    RefreshOnActivate=Yes;
    OnInit=BEGIN
             "Cost Component PlantEditable" := TRUE;
             "Plant No.Editable" := TRUE;
             "Plant TypeEditable" := TRUE;
             FunctionsBtnVisible := TRUE;
             ProjectBtnVisible := TRUE;
             BillToCustBmpVisible := TRUE;
             BillToCustInfoVisible := TRUE;
             "Plant LocationEditable" := TRUE;
             "Plant Job OrderEditable" := TRUE;
             DisableExportLosaCOBRAVisible := TRUE;
             "Main ProjectEditable" := TRUE;
             "% to B AccountEditable" := TRUE;
             "% LaborEditable" := TRUE;
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01

                 ProjSetup.GET;
                 DisableExportLosaCOBRAVisible :=
                   (ProjSetup."Exchange Salary Application" AND
                   (ProjSetup."Salary Application" = ProjSetup."Salary Application"::"LOSA-Cobra"));

                 IF gCreateFromPlantLoc THEN BEGIN
                   "Plant Job OrderEditable" := FALSE;
                   "Plant LocationEditable" := FALSE;
                 END;
               END;

    OnAfterGetRecord=VAR
                       lvAppRec@1210190000 : Record 11012081;
                     BEGIN
                       lvAppRec.SETRANGE("Project No.","No.");
                       IF lvAppRec.FINDFIRST THEN
                         AppPresBln := TRUE
                       ELSE
                         AppPresBln := FALSE;

                       FillActionByName();

                       CALCFIELDS("Urgency Description","Response Time",Prospect);

                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                  "Small Project" := TRUE;
                  "Project Status" := "Project Status"::Production;
                  "Settlement Method" := "Settlement Method"::"Cost Plus";
                  OperText := '';
                  IF gCreateFromPlantLoc THEN
                    FillDefaultFromPlantLocation();
                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 58      ;1   ;ActionGroup;
                      Name=ProjectBtn;
                      CaptionML=ENU=Small &Project;
                      Visible=ProjectBtnVisible }
      { 62      ;2   ;Action    ;
                      CaptionML=ENU=Co&mments;
                      RunObject=Page 124;
                      RunPageLink=Table Name=CONST(Job),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 60      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Ledger E&ntries;
                      RunObject=Page 11072005;
                      RunPageView=SORTING(Job No.,Posting Date);
                      RunPageLink=Job No.=FIELD(No.);
                      Image=LedgerEntries }
      { 1100529900;2 ;ActionGroup;
                      CaptionML=ENU=Project Tables;
                      Image=ExecuteBatch }
      { 84      ;3   ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      RunObject=Page 540;
                      RunPageLink=Table ID=CONST(11072003),
                                  No.=FIELD(No.);
                      Image=Dimensions }
      { 1000000012;3 ;Action    ;
                      CaptionML=ENU=Principals;
                      Image=TeamSales;
                      OnAction=BEGIN
                                 ProjPrincipRec.RESET;
                                 ProjPrincipRec.SETRANGE("Project No.","No.");
                                 IF "Bill-to Customer No." <> '' THEN
                                   IF NOT ProjPrincipRec.GET("No.", "Bill-to Customer No.") THEN
                                     ProjPrincipRec.SETRANGE(Principal, "Bill-to Customer No.");
                                 PAGE.RUN(PAGE::"Project Principal",ProjPrincipRec);
                               END;
                                }
      { 1100485001;3 ;Action    ;
                      CaptionML=ENU=&Project Authorities;
                      RunObject=Page 11020231;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=IndustryGroups }
      { 1210190014;3 ;Action    ;
                      CaptionML=ENU=Sub Projects;
                      Image=Splitlines;
                      OnAction=VAR
                                 JobRec@1210190000 : Record 11072003;
                               BEGIN
                                 JobRec.SETRANGE("Single/Main/Sub Project", "Single/Main/Sub Project"::"Sub Project");
                                 JobRec.SETRANGE("Main Project", "No.");
                                 IF JobRec.FINDFIRST THEN
                                   PAGE.RUNMODAL(PAGE::"Job List", JobRec)
                                 ELSE
                                   MESSAGE(Text11012000);
                               END;
                                }
      { 1100485094;3 ;Action    ;
                      CaptionML=ENU=&Activities;
                      Image=JobTimeSheet;
                      OnAction=BEGIN
                                 ShowTodos;
                               END;
                                }
      { 1210190048;3 ;Action    ;
                      CaptionML=ENU=Common Agreements;
                      RunObject=Page 11020311;
                      RunPageView=WHERE(Appointment Type=CONST(General));
                      RunPageLink=Project No.=FIELD(No.);
                      Image=Agreement }
      { 1210190074;3 ;Action    ;
                      CaptionML=ENU=Operations;
                      RunObject=Page 11012283;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=Design }
      { 1100525017;3 ;Action    ;
                      CaptionML=ENU=&Features;
                      Image=QualificationOverview;
                      OnAction=BEGIN
                                 ShowFeatures;
                               END;
                                }
      { 1100525005;3 ;Action    ;
                      CaptionML=ENU=Exchange Rates;
                      RunObject=Page 11124939;
                      RunPageLink=Project Filter=FIELD(No.);
                      Image=AdjustExchangeRates }
      { 1210190007;2 ;Action    ;
                      CaptionML=ENU=Do&cuments;
                      Image=Documents;
                      OnAction=BEGIN
                                 OpenDocumentList;
                               END;
                                }
      { 1100527001;2 ;Action    ;
                      CaptionML=ENU=Work Orders;
                      Image=HRSetup;
                      OnAction=VAR
                                 Proj@1100529000 : Record 11072003;
                               BEGIN
                                 Proj.ShowWorkOrders("No.", '');
                               END;
                                }
      { 1100529901;2 ;ActionGroup;
                      CaptionML=ENU=Sales;
                      Image=CashFlow }
      { 1000000008;3 ;Action    ;
                      CaptionML=ENU=Invoices;
                      Image=Invoice;
                      OnAction=VAR
                                 lSalesInvHeader@1210190002 : Record 112;
                                 lSalesInvLine@1210190001 : Record 113;
                               BEGIN
                                 //**4PS
                                 lSalesInvHeader.CLEARMARKS;
                                 lSalesInvLine.SETCURRENTKEY("Job No.","Project Invoice","Installment Invoice","Sell-to Customer No.");
                                 lSalesInvLine.SETRANGE("Job No.","No.");
                                 IF lSalesInvLine.FINDSET THEN
                                   REPEAT
                                     IF lSalesInvHeader.GET(lSalesInvLine."Document No.") THEN
                                       lSalesInvHeader.MARK(TRUE);
                                   UNTIL lSalesInvLine.NEXT = 0;

                                 lSalesInvHeader.MARKEDONLY(TRUE);

                                 PAGE.RUNMODAL(PAGE::"Posted Sales Invoices",lSalesInvHeader);
                               END;
                                }
      { 1000000004;3 ;Action    ;
                      CaptionML=ENU=Credit Memos;
                      Image=CreditMemo;
                      OnAction=VAR
                                 lSalesCrMemoHeader@1210190002 : Record 114;
                                 lSalesCrMemoLine@1210190001 : Record 115;
                               BEGIN
                                 //**4PS
                                 lSalesCrMemoHeader.CLEARMARKS;
                                 lSalesCrMemoLine.SETRANGE("Job No.","No.");
                                 IF lSalesCrMemoLine.FINDSET THEN
                                   REPEAT
                                     IF lSalesCrMemoHeader.GET(lSalesCrMemoLine."Document No.") THEN
                                       lSalesCrMemoHeader.MARK(TRUE);
                                   UNTIL lSalesCrMemoLine.NEXT = 0;

                                 lSalesCrMemoHeader.MARKEDONLY(TRUE);

                                 PAGE.RUNMODAL(PAGE::"Posted Sales Credit Memos",lSalesCrMemoHeader);
                               END;
                                }
      { 1000000007;3 ;Action    ;
                      CaptionML=ENU=&Cost Plus Entries;
                      RunObject=Page 11012043;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=ApplyEntries }
      { 1101200084;3 ;Action    ;
                      CaptionML=ENU=&Installments;
                      RunObject=Page 11012025;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=AmountByPeriod }
      { 1210190030;3 ;Action    ;
                      CaptionML=ENU=Settlement Sheet;
                      Promoted=Yes;
                      Image=ApplyEntries;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 SettlRec@1210190000 : Record 11012021;
                                 CommRec@1210190001 : Record 11012020;
                               BEGIN
                                 //db, 04-10-04:
                                 TESTFIELD("Bill-to Customer No.");
                                 CommRec.RESET;
                                 CommRec.SETRANGE("Project No.", "No.");
                                 CommRec.SETRANGE(Principal, "Bill-to Customer No.");
                                 //IF NOT CommRec.FIND('+') THEN CommRec.INIT;  //* C-027523.o
                                 CommRec.FINDLAST;  //* C-027523.n  Must exist, otherwise it is not possible to insert settlements
                                                    //*             Normaly this will exist, because it is autom. inserted for a small project

                                 SettlRec.RESET;
                                 SettlRec.SETRANGE("Project No.", "No.");
                                 SettlRec.SETRANGE(Principal, "Bill-to Customer No.");
                                 SettlRec.SETRANGE("Commission No.", CommRec."No.");
                                 IF NOT SettlRec.FIND('+') THEN SettlRec.INIT;

                                 PAGE.RUNMODAL(PAGE::"Settlement Sheet", SettlRec);
                               END;
                                }
      { 1210190039;2 ;Action    ;
                      CaptionML=ENU=Purchase Orders;
                      Image=Document;
                      OnAction=BEGIN
                                 ShowPurchaseOrdersForProject;  //db, 05-09-13
                               END;
                                }
      { 1100485107;2 ;ActionGroup;
                      CaptionML=ENU=Unit Prices;
                      Image=CostAccounting }
      { 1100485106;3 ;Action    ;
                      CaptionML=ENU=Project Unit Prices;
                      RunObject=Page 11072519;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=CostCenter }
      { 1100485108;3 ;Action    ;
                      CaptionML=ENU=Production Motivation;
                      Image=Production;
                      OnAction=VAR
                                 ProdMot@1210190000 : Record 11020425;
                               BEGIN
                                 ProdMot.RunUnitPriceProdMotList("No.", '', 0);  //* Level 0=Project
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1101200085;1 ;ActionGroup;
                      Name=FunctionsBtn;
                      CaptionML=ENU=F&unctions;
                      Visible=FunctionsBtnVisible }
      { 1100485092;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy Small Project;
                      Image=Copy;
                      OnAction=VAR
                                 CopyProjFrm@1100525001 : Page 11012106;
                               BEGIN
                                 //**4PS
                                 CopyProjFrm.FillDefaults("No."); //mg, 12-07-11: M28335
                                 CopyProjFrm.StdDialogRunModal;
                               END;
                                }
      { 1210190015;2 ;Action    ;
                      CaptionML=ENU=Link Complaint;
                      Image=Link;
                      OnAction=BEGIN
                                 //kzwerver, 110802, c, #26039
                                 Rec.LinkComplaint();
                               END;
                                }
      { 1210190016;2 ;Action    ;
                      CaptionML=ENU=Unlink Complaint;
                      Image=UnLinkAccount;
                      OnAction=BEGIN
                                 //kzwerver, 110802, c, #26039
                                 Rec.UnlinkComplaint();
                               END;
                                }
      { 1100485018;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Print Project Cost Plus Entries to Create;
                      Image=PrintChecklistReport;
                      OnAction=VAR
                                 Job@1100485004 : Record 11072003;
                                 JobLedgerEntry@1100485003 : Record 11072005;
                                 PostedHourLine@1100485002 : Record 11012085;
                                 HourAccountingLine@1100485001 : Record 11012039;
                                 ProjectCostPlustoCreate@1100525000 : Report 11012137;
                               BEGIN
                                 //**4PS
                                 Job.SETRANGE("No.", "No.");
                                 JobLedgerEntry.SETRANGE("Cost Plus Entry Created", FALSE);
                                 PostedHourLine.SETRANGE("Cost Plus Entry Created", FALSE);
                                 HourAccountingLine.SETRANGE("Cost Plus Entry Created", FALSE);

                                 ProjectCostPlustoCreate.SETTABLEVIEW(Job);
                                 ProjectCostPlustoCreate.SETTABLEVIEW(JobLedgerEntry);
                                 ProjectCostPlustoCreate.SETTABLEVIEW(PostedHourLine);
                                 ProjectCostPlustoCreate.SETTABLEVIEW(HourAccountingLine);
                                 ProjectCostPlustoCreate.SetDefault("No.");
                                 ProjectCostPlustoCreate.RUN;
                               END;
                                }
      { 1210190150;2 ;Action    ;
                      CaptionML=ENU=Project Documents;
                      Image=Word;
                      OnAction=VAR
                                 Contact@1210190002 : Record 5050;
                                 DocumentTemplate@1210190000 : Record 11012401;
                               BEGIN
                                 //**4PS
                                 TESTFIELD("Bill-to Customer No.");
                                 IF Contact.GetContactByCustomer("Bill-to Customer No.", Contact, TRUE) THEN
                                   EditDocuments(STRSUBSTNO('%1', DocumentTemplate.Type::Job), Contact."No.", '', FALSE, '');
                               END;
                                }
      { 1000000014;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+A;
                      Ellipsis=Yes;
                      CaptionML=ENU=Generate Cost Plus Entries;
                      Promoted=Yes;
                      Image=ApplyEntries;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lvProjRec@1210190005 : Record 11072003;
                                 lvProjLedgEntryRec@1210190002 : Record 11072005;
                                 lvPostedHourLineRec@1210190004 : Record 11012085;
                                 lvHourAccLineRec@1210190003 : Record 11012039;
                                 lvCreateCostPlusRpt@1210190001 : Report 11012013;
                               BEGIN
                                 lvProjRec.SETRANGE("No.", "No.");
                                 lvProjLedgEntryRec.SETRANGE("Cost Plus Entry Created", FALSE);
                                 lvPostedHourLineRec.SETRANGE("Cost Plus Entry Created", FALSE);
                                 lvHourAccLineRec.SETRANGE("Cost Plus Entry Created", FALSE);

                                 lvCreateCostPlusRpt.SETTABLEVIEW(lvProjRec);
                                 lvCreateCostPlusRpt.SETTABLEVIEW(lvProjLedgEntryRec);
                                 lvCreateCostPlusRpt.SETTABLEVIEW(lvPostedHourLineRec);
                                 lvCreateCostPlusRpt.SETTABLEVIEW(lvHourAccLineRec);
                                 lvCreateCostPlusRpt.SetDefault("No.");
                                 lvCreateCostPlusRpt.RUN;
                               END;
                                }
      { 1000000015;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Invoices;
                      Promoted=Yes;
                      Image=CreateJobSalesInvoice;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Job@1210190001 : Record 11072003;
                               BEGIN
                                 // jhoek.270611.begin: melding 16372
                                 Job := Rec;
                                 Job.SETRECFILTER;
                                 // ProjPrincipRec.SETRANGE("Project No.","No.");
                                 REPORT.RUNMODAL(REPORT::"Create Project Invoices",TRUE,FALSE,Job);
                                 // jhoek.270611.end
                               END;
                                }
      { 1100485902;2 ;Action    ;
                      CaptionML=ENU=Build &iMOS workticket;
                      Visible=FALSE;
                      Image=Worksheet;
                      OnAction=VAR
                                 lvJobNoteHeadRec@1100485000 : Record 11020536;
                                 lvJobNoteLineRec@1100485003 : Record 11020537;
                                 lvJobNoteFrm@1100525000 : Page 11020533;
                               BEGIN
                                 IF NOT "Plant Job Order" THEN
                                   ERROR(Text11012003, FIELDCAPTION("Plant Job Order"));

                                 lvJobNoteHeadRec.INIT;
                                 lvJobNoteHeadRec.VALIDATE("Small Project", "No.");   //Gets Customer and bon-type too.
                                 lvJobNoteHeadRec.INSERT(TRUE);

                                 IF "Plant Type" <> '' THEN BEGIN
                                   lvJobNoteLineRec.INIT;
                                   lvJobNoteLineRec."Job Notice No." := lvJobNoteHeadRec."No.";
                                   lvJobNoteLineRec."Line No." := 10000;
                                   lvJobNoteLineRec."Line Type" := lvJobNoteLineRec."Line Type"::Plant;
                                   lvJobNoteLineRec.VALIDATE("Plant Type", "Plant Type");
                                   lvJobNoteLineRec.VALIDATE("Plant No.", "Plant No.");
                                   lvJobNoteLineRec.INSERT(TRUE);
                                 END;

                                 COMMIT;
                                 lvJobNoteFrm.SETRECORD(lvJobNoteHeadRec);
                                 lvJobNoteFrm.RUNMODAL;
                               END;
                                }
      { 1100485903;2 ;Action    ;
                      CaptionML=ENU=Overview iMOS wordtickets;
                      RunObject=Page 11020535;
                      RunPageLink=Small Project=FIELD(No.);
                      Visible=FALSE;
                      Image=Worksheet2 }
      { 1100485004;1 ;Action    ;
                      CaptionML=ENU=Work&sheet;
                      Promoted=Yes;
                      Image=PrintDocument;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 //**4PS
                                 CurrPage.SETSELECTIONFILTER(ProjRec);
                                 PrintDoc.PrintProjWorksheet(ProjRec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=ENU=General }

    { 2   ;2   ;Field     ;
                SourceExpr="No.";
                OnValidate=BEGIN
                             NoOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 4   ;2   ;Field     ;
                SourceExpr=Description }

    { 1100528800;2;Field  ;
                SourceExpr="Description 2";
                Importance=Additional }

    { 1210190019;2;Field  ;
                SourceExpr="Settlement Method";
                Importance=Promoted;
                OnValidate=BEGIN
                             SettlementMethodOnAfterValidat;
                           END;
                            }

    { 1210190018;2;Field  ;
                SourceExpr="Contract Type";
                OnValidate=BEGIN
                             ContractTypeOnAfterValidate;
                           END;
                            }

    { 1101200004;2;Field  ;
                SourceExpr="Project Address Code";
                OnValidate=BEGIN
                             ProjectAddressCodeOnAfterValid;
                           END;

                OnLookup=VAR
                           AddressFrm@1210190001 : Page 301;
                           AddressRec@1210190000 : Record 222;
                         BEGIN
                           CLEAR(AddressFrm);
                           AddressFrm.LOOKUPMODE(TRUE);
                           AddressRec.RESET;
                           AddressRec.SETRANGE("Project Address", TRUE);
                           IF "Bill-to Customer No." <> '' THEN
                             AddressRec.SETRANGE("Customer No.","Bill-to Customer No.");
                           AddressFrm.SETTABLEVIEW(AddressRec);
                           IF AddressFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             AddressFrm.GETRECORD(AddressRec);
                             //"Project Address Code" := AddressRec.Code;
                             IF "Bill-to Customer No." = '' THEN BEGIN
                               "Project Address Code" := AddressRec.Code;
                               InsertProjectPrincipal(AddressRec."Customer No.");
                               VALIDATE("Bill-to Customer No.",AddressRec."Customer No.");
                             END ELSE BEGIN
                               VALIDATE("Project Address Code", AddressRec.Code);
                               //UpdateProjectAddress;
                             END;
                           END;
                           CurrPage.UPDATE;
                         END;
                          }

    { 32  ;2   ;Field     ;
                AssistEdit=Yes;
                SourceExpr="Bill-to Customer No.";
                OnValidate=BEGIN
                             CALCFIELDS("Principal Name",Prospect);
                           END;

                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           COMMIT;
                           LookupProjectPrincipal; //DP00790-RFC41
                           CurrPage.UPDATE;
                         END;

                OnAssistEdit=BEGIN
                               CurrPage.SAVERECORD;
                               COMMIT;
                               AssistEditProjectPrincipal; //DP00790-RFC41
                               CurrPage.UPDATE;
                             END;
                              }

    { 1210190031;2;Field  ;
                SourceExpr="Principal Name";
                Importance=Additional;
                Editable=FALSE }

    { 1100485087;2;Field  ;
                SourceExpr="Principal Contact Person" }

    { 1100485085;2;Field  ;
                SourceExpr="Principal Contact Person Name";
                Importance=Additional }

    { 1210190051;2;Field  ;
                SourceExpr="Order No. Customer";
                OnValidate=BEGIN
                             OrderNoCustomerOnAfterValidate;
                           END;
                            }

    { 1100485002;2;Field  ;
                SourceExpr="Commision Date Principal";
                OnValidate=BEGIN
                             CommisionDatePrincipalC1100485;
                           END;
                            }

    { 1210190017;2;Field  ;
                SourceExpr=Name }

    { 45  ;2   ;Field     ;
                SourceExpr=Address;
                Editable=TRUE }

    { 47  ;2   ;Field     ;
                SourceExpr="Address 2";
                Importance=Additional;
                Editable=TRUE }

    { 55  ;2   ;Field     ;
                SourceExpr="Post Code";
                Editable=TRUE }

    { 49  ;2   ;Field     ;
                SourceExpr=City;
                Editable=TRUE }

    { 1210190008;2;Field  ;
                SourceExpr="Phone No." }

    { 1100485048;2;Field  ;
                SourceExpr="Mobile Phone No.";
                Importance=Additional }

    { 1100485050;2;Field  ;
                SourceExpr="Phone No. at Work";
                Importance=Additional }

    { 1100485063;2;Field  ;
                SourceExpr="Maximum Amount to Invoice";
                Importance=Additional }

    { 1100485058;2;Field  ;
                SourceExpr="Urgency Code";
                OnValidate=BEGIN
                             UrgencyCodeC1100485058OnAfterV;
                           END;
                            }

    { 1100485059;2;Field  ;
                SourceExpr="Urgency Description";
                Importance=Additional }

    { 1210190053;2;Field  ;
                SourceExpr="Internal/External Action";
                OnValidate=BEGIN
                             FillActionByName();
                           END;
                            }

    { 1210190055;2;Field  ;
                SourceExpr="Action by";
                OnValidate=BEGIN
                             ActionbyOnAfterValidate;
                           END;
                            }

    { 1210190056;2;Field  ;
                DrillDown=No;
                CaptionML=ENU=Action By Name;
                SourceExpr=ActionByName;
                Importance=Additional;
                Editable=FALSE }

    { 1101200011;2;Field  ;
                SourceExpr=Type }

    { 1210190035;2;Field  ;
                SourceExpr="Small Project Status" }

    { 1100525013;1;Part   ;
                CaptionML=ENU=Worksheet Text;
                SubPageLink=Table=CONST(Job),
                            Code=FIELD(No.),
                            Table Line No.=CONST(0);
                PagePartID=Page11020309;
                PartType=Page }

    { 1903705201;1;Group  ;
                CaptionML=ENU=Personnel }

    { 1210190107;2;Field  ;
                SourceExpr=Estimator;
                OnValidate=BEGIN
                             EstimatorOnAfterValidate;
                           END;
                            }

    { 1210190113;2;Field  ;
                SourceExpr="Name Estimator";
                Importance=Additional;
                Editable=FALSE }

    { 1100485071;2;Field  ;
                SourceExpr="Site Manager";
                Importance=Promoted;
                OnValidate=BEGIN
                             SiteManagerC1100485071OnAfterV;
                           END;
                            }

    { 1100485072;2;Field  ;
                SourceExpr="Name Site Manager";
                Importance=Additional;
                Editable=FALSE }

    { 1210190106;2;Field  ;
                SourceExpr="Project Manager";
                OnValidate=BEGIN
                             ProjectManagerOnAfterValidate;
                           END;
                            }

    { 1210190111;2;Field  ;
                SourceExpr="Name Project Manager";
                Importance=Additional;
                Editable=FALSE }

    { 1100485098;2;Field  ;
                SourceExpr="Project Engineer";
                OnValidate=BEGIN
                             ProjectEngineerOnAfterValidate;
                           END;
                            }

    { 1100485097;2;Field  ;
                SourceExpr="Name Project Engineer";
                Importance=Additional;
                Editable=FALSE }

    { 1210190108;2;Field  ;
                SourceExpr=Supervisor;
                Importance=Promoted }

    { 1210190112;2;Field  ;
                CaptionML=ENU=Supervisor Name;
                SourceExpr=NameSupervisor;
                Importance=Additional;
                Editable=FALSE }

    { 1100525007;2;Field  ;
                SourceExpr="Purchaser Code" }

    { 1100525009;2;Field  ;
                SourceExpr="Name Purchaser";
                Importance=Additional;
                Editable=FALSE }

    { 1100525011;2;Field  ;
                SourceExpr=Expediter;
                Importance=Additional;
                OnValidate=BEGIN
                             ExpediterOnAfterValidate;
                           END;
                            }

    { 1100525012;2;Field  ;
                SourceExpr="Name Expediter";
                Importance=Additional;
                Editable=FALSE }

    { 1905223301;1;Group  ;
                CaptionML=ENU=Dates }

    { 14  ;2   ;Field     ;
                SourceExpr="Creation Date";
                Editable=FALSE }

    { 1210190073;2;Field  ;
                SourceExpr="Creation Time" }

    { 1210190037;2;Field  ;
                SourceExpr="Created by";
                Importance=Promoted }

    { 30  ;2   ;Field     ;
                SourceExpr="Last Date Modified";
                Editable=FALSE }

    { 1210190002;2;Field  ;
                SourceExpr="Modified by";
                Importance=Promoted }

    { 1101200036;2;Field  ;
                SourceExpr="Status Modification Date" }

    { 20  ;2   ;Field     ;
                CaptionML=ENU=Starting Date (Requested);
                SourceExpr="Starting Date";
                Importance=Additional }

    { 1100485006;2;Field  ;
                SourceExpr="Requested Starting Time";
                Importance=Additional }

    { 22  ;2   ;Field     ;
                CaptionML=ENU=Ending Date  (Requested);
                SourceExpr="Ending Date";
                Importance=Additional }

    { 1100485009;2;Field  ;
                CaptionML=ENU=Planned Starting Date;
                SourceExpr=Appointmentrec."Starting Date";
                Importance=Additional;
                Editable=FALSE }

    { 1100485010;2;Field  ;
                CaptionML=ENU=Planned Starting Time;
                SourceExpr=Appointmentrec."Start Time";
                Importance=Additional;
                Editable=FALSE }

    { 1100485012;2;Field  ;
                CaptionML=ENU=Planned Ending Date;
                SourceExpr=Appointmentrec."Ending Date";
                Importance=Additional;
                Editable=FALSE }

    { 1100485013;2;Field  ;
                CaptionML=ENU=Planned Ending Time;
                SourceExpr=Appointmentrec."End Time";
                Importance=Additional;
                Editable=FALSE }

    { 1210190020;2;Field  ;
                SourceExpr="Technical Finished Date";
                Importance=Additional }

    { 1100485020;2;Field  ;
                SourceExpr="Posting Date Closing";
                Importance=Additional }

    { 1100525000;2;Field  ;
                SourceExpr=Blocked;
                Importance=Additional }

    { 1210190000;2;Field  ;
                SourceExpr="Archive Location Documents";
                Importance=Additional;
                OnAssistEdit=BEGIN
                               AssistEditProjFolder;
                             END;
                              }

    { 1100525010;2;Field  ;
                SourceExpr="Archive Location";
                Importance=Additional }

    { 1100485014;2;Field  ;
                SourceExpr="Finish report to Principal";
                Importance=Additional }

    { 1100485016;2;Field  ;
                SourceExpr="Last Invoice date";
                Importance=Additional }

    { 1905885101;1;Group  ;
                CaptionML=ENU=Invoicing }

    { 1210190022;2;Field  ;
                SourceExpr="Contract Amount" }

    { 1210190024;2;Field  ;
                SourceExpr="VAT Bus. Posting Group" }

    { 1210190089;2;Field  ;
                SourceExpr="Calculate B Amounts based on";
                Editable="Calculate B Amounts based onED" }

    { 1210190025;2;Field  ;
                SourceExpr="% Labor";
                Editable="% LaborEditable" }

    { 1210190027;2;Field  ;
                SourceExpr="% to B Account";
                Editable="% to B AccountEditable" }

    { 1100485095;2;Field  ;
                SourceExpr="Print Manday Register" }

    { 1100485080;2;Field  ;
                SourceExpr="Invoice Contact Person" }

    { 1100485081;2;Field  ;
                DrillDown=No;
                SourceExpr="Invoice Contact Person Name";
                Importance=Additional }

    { 1100485101;2;Field  ;
                SourceExpr="Invoice Layout Code";
                Importance=Additional }

    { 1100485077;2;Field  ;
                SourceExpr=Text;
                MultiLine=Yes }

    { 1100485112;2;Field  ;
                SourceExpr="Price List";
                Importance=Additional }

    { 1100485113;2;Field  ;
                SourceExpr="Ref. Date Unit Price";
                Importance=Additional }

    { 1100525024;2;Field  ;
                SourceExpr="Internal Project";
                Importance=Additional }

    { 1100529000;2;Field  ;
                SourceExpr="Master Company";
                Importance=Additional }

    { 1100525020;2;Field  ;
                SourceExpr="Master Project";
                Importance=Additional }

    { 1100525019;2;Field  ;
                SourceExpr="Cost Object Inter Project Cost";
                Importance=Additional }

    { 1100525018;2;Field  ;
                SourceExpr="Cost Object Inter Project Rev";
                Importance=Additional }

    { 1100528500;2;Field  ;
                SourceExpr="Service Warranty Code" }

    { 1100485082;2;Field  ;
                CaptionML=ENU=Contact;
                SourceExpr=Prospect;
                CaptionClass=FORMAT ("Invoice Contact Person Name");
                Importance=Additional;
                Visible=FALSE }

    { 1907580001;1;Group  ;
                CaptionML=ENU=Miscelaneous }

    { 1101200000;2;Field  ;
                SourceExpr="Project Type";
                OnValidate=BEGIN
                             ProjectTypeOnAfterValidate;
                           END;
                            }

    { 1101200002;2;Field  ;
                SourceExpr="Project Status" }

    { 1101200009;2;Field  ;
                SourceExpr="Territory Code" }

    { 1100525016;2;Field  ;
                SourceExpr=Discipline }

    { 1101200013;2;Field  ;
                SourceExpr="Global Dimension 1 Code";
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                           END;
                            }

    { 1101200021;2;Field  ;
                SourceExpr="Single/Main/Sub Project";
                OnValidate=BEGIN
                             SingleMainSubProjectOnAfterVal;
                           END;
                            }

    { 1101200023;2;Field  ;
                SourceExpr="Main Project";
                Editable="Main ProjectEditable" }

    { 1210190042;2;Field  ;
                SourceExpr="Regular Costs";
                Importance=Additional;
                OnValidate=BEGIN
                             RegularCostsOnAfterValidate;
                           END;
                            }

    { 1210190044;2;Field  ;
                SourceExpr="Recoverable Costs";
                Importance=Additional;
                OnValidate=BEGIN
                             RecoverableCostsOnAfterValidat;
                           END;
                            }

    { 1210190047;2;Field  ;
                CaptionML=ENU=Estmated Costs;
                SourceExpr="Recoverable Costs" + "Regular Costs";
                Importance=Additional;
                Editable=FALSE }

    { 1210190097;2;Field  ;
                CaptionML=ENU=Total Fixed Rate Settlement Sheet;
                SourceExpr=TotalOperation;
                Importance=Additional;
                Editable=FALSE }

    { 1210190084;2;Field  ;
                CaptionML=ENU=Total Settlement Sheet;
                SourceExpr=TotalSettlDec;
                Importance=Additional;
                Editable=FALSE }

    { 1210190093;2;Field  ;
                SourceExpr="Open Amount (Hours)";
                Importance=Additional }

    { 1210190095;2;Field  ;
                SourceExpr="Actual Costs";
                Importance=Additional }

    { 1100485083;2;Field  ;
                SourceExpr="Disable Export Losa (COBRA)";
                Importance=Additional;
                Visible=DisableExportLosaCOBRAVisible }

    { 1100485086;2;Field  ;
                SourceExpr="Origin Complaint Company";
                Importance=Additional;
                Editable=FALSE }

    { 1100485090;2;Field  ;
                SourceExpr="Origin Complaint No.";
                Importance=Additional;
                Editable=FALSE;
                OnLookup=VAR
                           lvComplaintRec@1100485002 : Record 11012450;
                           lvComplaintListFrm@1100485003 : Page 11012468;
                         BEGIN
                           IF ("Origin Complaint Company" <> '') AND ("Origin Complaint Company" <> COMPANYNAME) THEN
                             lvComplaintListFrm.SetOtherCompany("Origin Complaint Company");
                           lvComplaintRec."No." := "Origin Complaint No.";
                           lvComplaintListFrm.SETRECORD(lvComplaintRec);
                           lvComplaintListFrm.RUNMODAL;
                         END;
                          }

    { 1100525008;2;Field  ;
                CaptionML=ENU=Try-Out;
                SourceExpr=GetTryOut(1);
                Importance=Additional;
                Editable=FALSE;
                OnLookup=BEGIN
                           ShowTryOut(1);
                         END;
                          }

    { 1100525006;2;Field  ;
                CaptionML=ENU=Try-Out Quote;
                SourceExpr=GetTryOut(2);
                Importance=Additional;
                Editable=FALSE;
                OnLookup=BEGIN
                           ShowTryOut(2);
                         END;
                          }

    { 1100525003;2;Field  ;
                CaptionML=ENU=Estimate No.;
                SourceExpr=GetEstimate();
                Importance=Additional;
                Editable=FALSE;
                OnLookup=BEGIN
                           //**4PS
                           ShowEstimate;
                         END;
                          }

    { 1100525002;2;Field  ;
                SourceExpr="Created from Service Loc. No.";
                Importance=Additional;
                Editable=FALSE }

    { 1905446501;1;Group  ;
                CaptionML=ENU=Complex Data }

    { 1210190083;2;Field  ;
                SourceExpr="Estate Owner";
                OnValidate=BEGIN
                             EstateOwnerC1210190083OnAfterV;
                           END;
                            }

    { 1210190081;2;Field  ;
                SourceExpr="Estate Owner Name";
                Importance=Additional;
                Editable=FALSE }

    { 1210190072;2;Field  ;
                SourceExpr="Estate No." }

    { 1210190070;2;Field  ;
                SourceExpr=Building }

    { 1210190068;2;Field  ;
                SourceExpr=Floor }

    { 1210190066;2;Field  ;
                SourceExpr=Department }

    { 1210190064;2;Field  ;
                SourceExpr=Room }

    { 1210190034;2;Field  ;
                SourceExpr="Response Time";
                Importance=Additional }

    { 1210190033;2;Field  ;
                SourceExpr="Area Team";
                Importance=Additional }

    { 1210190032;2;Field  ;
                SourceExpr="Phone No. Area Team";
                Importance=Additional }

    { 1906747901;1;Group  ;
                CaptionML=ENU=Plant }

    { 1100485904;2;Field  ;
                SourceExpr="Plant Job Order";
                Editable="Plant Job OrderEditable";
                OnValidate=BEGIN
                             //**4PS
                             SetPlantJobOrderFieldsEditable();
                           END;
                            }

    { 1100485913;2;Field  ;
                SourceExpr="Plant Location";
                Editable="Plant LocationEditable" }

    { 1100485906;2;Field  ;
                SourceExpr="Plant Type";
                Editable="Plant TypeEditable" }

    { 1100485908;2;Field  ;
                SourceExpr="Plant No.";
                Editable="Plant No.Editable" }

    { 1100485910;2;Field  ;
                SourceExpr="Cost Component Plant";
                Editable="Cost Component PlantEditable" }

    { 1210190004;0;Container;
                ContainerType=FactBoxArea }

    { 1100529902;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                PartType=Page }

    { 1210190003;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page11130002;
                PartType=Page }

    { 1210190005;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page11130105;
                PartType=Page }

    { 1100525004;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1100525001;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ProjPrincipRec@11012002 : Record 11012005;
      EmplRec@11012003 : Record 5200;
      VendorRec@1210190004 : Record 23;
      ProjRec@11012004 : Record 11072003;
      Appointmentrec@1100485003 : Record 11012081;
      ProjSetup@1100485005 : Record 315;
      gPlantLocRec@1100485023 : Record 11012554;
      PrintDoc@1100485000 : Codeunit 229;
      ProjectInfoPaneMgt@1100485002 : Codeunit 11012066;
      AppPresBln@1210190000 : Boolean;
      gCreateFromPlantLoc@1100485022 : Boolean;
      Text11012000@1210190003 : TextConst 'ENU=For this Project are no Sub Projects present.';
      Text11012003@1100485021 : TextConst 'ENU=Small Project must be ''%1''.';
      TotalOperation@1210190008 : Decimal;
      TotalSettlDec@1210190011 : Decimal;
      TotalCost@1100485004 : Decimal;
      ActionByName@1210190007 : Text[50];
      OperText@1210190005 : Text[50];
      DPA_IsHardFilter@1100000999 : Boolean;
      "% LaborEditable"@19078728 : Boolean INDATASET;
      "% to B AccountEditable"@19001286 : Boolean INDATASET;
      "Main ProjectEditable"@19070977 : Boolean INDATASET;
      DisableExportLosaCOBRAVisible@19015054 : Boolean INDATASET;
      "Plant Job OrderEditable"@19059329 : Boolean INDATASET;
      "Plant LocationEditable"@19020337 : Boolean INDATASET;
      BillToCustInfoVisible@19018081 : Boolean INDATASET;
      BillToCustBmpVisible@19021368 : Boolean INDATASET;
      ProjectBtnVisible@19034021 : Boolean INDATASET;
      FunctionsBtnVisible@19078569 : Boolean INDATASET;
      "Plant TypeEditable"@19005558 : Boolean INDATASET;
      "Plant No.Editable"@19002985 : Boolean INDATASET;
      "Cost Component PlantEditable"@19033688 : Boolean INDATASET;
      "Calculate B Amounts based onED"@1100525003 : Boolean INDATASET;

    PROCEDURE FillActionByName@1210190000();
    BEGIN
      ActionByName := '';
      IF ("Action by" = '') THEN
        EXIT;

      CASE "Internal/External Action" OF
        "Internal/External Action"::Internal:
          IF EmplRec.GET("Action by") THEN
            ActionByName := EmplRec."Full Name";
        "Internal/External Action"::External:
          IF VendorRec.GET("Action by") THEN
            ActionByName := VendorRec.Name;
      END;
    END;

    PROCEDURE UpdateInfoPanel@1100485000();
    BEGIN
      BillToCustInfoVisible := ("Bill-to Customer No." <> '');
      BillToCustBmpVisible := ("Bill-to Customer No." <> '');
    END;

    PROCEDURE DetermineExecutionDate@1100485001();
    BEGIN
      Appointmentrec.SETCURRENTKEY("Project No.","Appointment Type","Starting Date");
      Appointmentrec.SETRANGE("Project No.","No.");
      Appointmentrec.SETRANGE("Appointment Type",Appointmentrec."Appointment Type"::Execution);
      IF NOT Appointmentrec.FINDLAST THEN
        Appointmentrec.INIT;
    END;

    PROCEDURE SetSelectionCreateFromPlantLoc@1100485010(IPlantLocRec@1100485000 : Record 11012554);
    BEGIN
      gCreateFromPlantLoc := TRUE;
      gPlantLocRec := IPlantLocRec;
    END;

    LOCAL PROCEDURE FillDefaultFromPlantLocation@1100485011();
    VAR
      lvProjRec@1100485000 : Record 11072003;
      lvCustRec@1100485001 : Record 18;
    BEGIN
      "Plant Job Order" := TRUE;
      "Plant Location" := gPlantLocRec.Code;
      Description := gPlantLocRec.Description;
      //"Description 2" := gPlantLocRec."Description 2";  Field not on Small Project Form, so don't fill
      "Search Description" := gPlantLocRec."Search Name";
      "VAT Bus. Posting Group" := gPlantLocRec."VAT Bus. Posting Group";
      IF gPlantLocRec."Bill-to Customer No." <> '' THEN
        "Bill-to Customer No." := gPlantLocRec."Bill-to Customer No."
      ELSE BEGIN
        IF gPlantLocRec."Customer No." <> '' THEN
          "Bill-to Customer No." := gPlantLocRec."Customer No."
        ELSE BEGIN
          IF (gPlantLocRec."Project No." <> '') AND (gPlantLocRec."Company Name" = '') THEN BEGIN
            IF lvProjRec.GET(gPlantLocRec."Project No.") THEN BEGIN
              IF lvProjRec."Bill-to Customer No." <> '' THEN
                "Bill-to Customer No." := lvProjRec."Bill-to Customer No.";
            END;
          END;
        END;
      END;
      IF "Bill-to Customer No." <> '' THEN BEGIN
        IF lvCustRec.GET("Bill-to Customer No.") THEN BEGIN
          Name := lvCustRec.Name;
          IF "VAT Bus. Posting Group" = '' THEN
            "VAT Bus. Posting Group" := lvCustRec."VAT Bus. Posting Group";
          VALIDATE("Contract Type", lvCustRec."Project Contract Type");
          "Settlement Method" := lvCustRec."Project Settlement Method";
        END;
      END;
      Address := gPlantLocRec.Address;
      "Address 2" := gPlantLocRec."Address 2";
      City := gPlantLocRec.City;
      County := gPlantLocRec.County;
      "Post Code" := gPlantLocRec."Post Code";
      "Country/Region Code" := gPlantLocRec."Country/Region Code";
      "Territory Code" := gPlantLocRec."Territory Code";
      "Phone No." := gPlantLocRec."Phone No.";
      "Fax No." := gPlantLocRec."Fax No.";
    END;

    PROCEDURE SetPlantJobOrderFieldsEditable@1100485002();
    BEGIN
      "Plant LocationEditable" := ("Plant Job Order");
      "Plant TypeEditable" := ("Plant Job Order");
      "Plant No.Editable" := ("Plant Job Order");
      "Cost Component PlantEditable" := ("Plant Job Order");
    END;

    PROCEDURE OpenDocumentList@1100525000();
    VAR
      RecRef@1100525000 : RecordRef;
      DocumentFilters@1100525001 : Codeunit 11012432;
    BEGIN
      RecRef.GETTABLE(Rec);
      // ByCompany changed to FALSE, otherwise documents are not showed in the archive company
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, "Global Dimension 1 Code", FALSE, FALSE);
    END;

    PROCEDURE RemoveProjectAndFunctionButton@1210190001();
    BEGIN
      //mg, 10-05-11: C-028275
      ProjectBtnVisible := (FALSE);
      FunctionsBtnVisible := (FALSE);
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      IF gCreateFromPlantLoc AND ("Bill-to Customer No." <> '') THEN
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ProjectAddressCodeOnAfterValid@19042697();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OrderNoCustomerOnAfterValidate@19028010();
    VAR
      lvSettleRec@1100485000 : Record 11012021;
    BEGIN
      //**4PS01.sn
      //Update automatic generated Settlement Sheet with new order number
      IF lvSettleRec.GET("No.", "Bill-to Customer No.", '1', '1') THEN BEGIN
        IF (lvSettleRec."Order No. Customer" = xRec."Order No. Customer") OR
           (lvSettleRec."Order No. Customer" = '') THEN BEGIN
            //only update if not already overwritten with another number.
            lvSettleRec."Order No. Customer" := "Order No. Customer";
            lvSettleRec.MODIFY;
        END;
      END;
      //**4PS01.en
    END;

    LOCAL PROCEDURE ActionbyOnAfterValidate@19077937();
    BEGIN
      FillActionByName();
    END;

    LOCAL PROCEDURE SiteManagerC1210190105OnAfterV@19021044();
    BEGIN
      CALCFIELDS("Name Site Manager");
    END;

    LOCAL PROCEDURE CommisionDatePrincipalC1100485@19031206();
    VAR
      lvSettleRec@1100485000 : Record 11012021;
    BEGIN
      //**4PS02.sn
      //Update automatic generated Settlement Sheet with new order number
      IF lvSettleRec.GET("No.", "Bill-to Customer No.", '1', '1') THEN BEGIN
        IF (lvSettleRec."Commision Date Principal" = xRec."Commision Date Principal") OR
           (lvSettleRec."Commision Date Principal" = 0D) THEN BEGIN
            //only update if not already overwritten with another number.
            lvSettleRec."Commision Date Principal" := "Commision Date Principal";
            lvSettleRec.MODIFY;
        END;
      END;
      //**4PS02.en
    END;

    LOCAL PROCEDURE EstateOwnerC1100485053OnAfterV@19006846();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE UrgencyCodeC1100485058OnAfterV@19043651();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ContractTypeOnAfterValidate@19077313();
    BEGIN
      CurrPage.UPDATE(TRUE);
      IF "Contract Type" = "Contract Type"::Maincontracting THEN BEGIN
        "% Labor" := 0;
        "% to B Account" :=0;
      END;
    END;

    LOCAL PROCEDURE SettlementMethodOnAfterValidat@19029111();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE ProjectManagerOnAfterValidate@19053768();
    BEGIN
      CALCFIELDS("Name Project Manager");
      CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE EstimatorOnAfterValidate@19077849();
    BEGIN
      CALCFIELDS("Name Estimator");
      CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE SiteManagerC1100485071OnAfterV@19010149();
    BEGIN
      CALCFIELDS("Name Site Manager");
      CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE ProjectEngineerOnAfterValidate@19046031();
    BEGIN
      //**4PS
      CALCFIELDS("Name Project Engineer");
      CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE RecoverableCostsOnAfterValidat@19001148();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE RegularCostsOnAfterValidate@19059904();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SingleMainSubProjectOnAfterVal@19021142();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE ProjectTypeOnAfterValidate@19063423();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE UrgencyCodeC1210190058OnAfterV@19028422();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE EstateOwnerC1210190083OnAfterV@19046510();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    VAR
      lvCostPlusRec@1210190000 : Record 11012019;
      lvProjOperRec@1210190001 : Record 11012094;
      RecRef@1100529900 : RecordRef;
    BEGIN
      xRec := Rec;
      SETRANGE("Project Filter", "No.");
      "% LaborEditable" := ("Contract Type" = "Contract Type"::Subcontracting);
      "% to B AccountEditable" := ("Contract Type" = "Contract Type"::Subcontracting);
      "Main ProjectEditable" := ("Single/Main/Sub Project" = "Single/Main/Sub Project"::"Sub Project");
      "Calculate B Amounts based onED" := (("Contract Type" = "Contract Type"::Subcontracting) AND
                                                       ("Settlement Method" = "Settlement Method"::"Cost Plus"));
      SetPlantJobOrderFieldsEditable();
      lvProjOperRec.CalculateOperationTotal("No.",TotalOperation, TotalCost);

      TotalSettlDec := 0;
      lvCostPlusRec.SETRANGE("Project No.","No.");
      IF lvCostPlusRec.FINDSET THEN BEGIN
        REPEAT
          TotalSettlDec := TotalSettlDec + (lvCostPlusRec.Quantity * lvCostPlusRec."Sales Price");
        UNTIL lvCostPlusRec.NEXT = 0;
      END;
      DetermineExecutionDate;

      RecRef.GETTABLE(Rec);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(FALSE);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode("Global Dimension 1 Code");
    END;

    LOCAL PROCEDURE ExpediterOnAfterValidate@19017853();
    BEGIN
      //**4PS
      CALCFIELDS("Name Expediter");
    END;

    BEGIN
    END.
  }
}

