OBJECT Page 11012155 Estimate Lines
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Estimate Lines;
    SourceTable=Table11012154;
    DataCaptionExpr=GetDataCaptionEstPart;
    DelayedInsert=No;
    SourceTableView=SORTING(Estimate No.,Sub-Estimate No.,Part Group,Part,Line No.);
    PageType=List;
    AutoSplitKey=Yes;
    PromotedActionCategoriesML=ENU=New,Process,Report,Copy,Text,Navigate;
    OnInit=BEGIN
             RecipeGroupEditable := TRUE;
             RecipeEditable := TRUE;
             PlantTypeEditable := TRUE;
             ItemNoEditable := TRUE;
             CostObjectEditable := TRUE;
             CodeEditable := TRUE;
             DescriptionEditable := TRUE;
             LWHEditable := TRUE;
             TimeQuantityEditable := TRUE;
             QuantityEditable := TRUE;
             UnitofMeasureEditable := TRUE;
             SurchargeTypeEditable := TRUE;
             SurchargePercEditable := TRUE;
             NormGroupEditable := TRUE;
             SubOperationCodeEditable := TRUE;
             NormEditable := TRUE;
             RateCodeEditable := TRUE;
             WageComponentEditable := TRUE;  //DP00236
             GrossPriceEditable := TRUE;
             DiscountPercEditable := TRUE;
             MaterialPriceEditable := TRUE;
             SubcontractingPriceEditable := TRUE;
             PlantPriceEditable := TRUE;
             ObjectNoEditable := TRUE;
             MaintenanceIntervalEditable := TRUE;
             MaintenanceRelationEditable := TRUE;

             SchemeCodeEditable := TRUE;
             TradeExpertiseEditable := TRUE;
             TradeSpecialityEditable := TRUE;
             DisciplineEditable := TRUE;
             VendorEditable := TRUE;
             PriceAgreementEditable := TRUE;
             AskforQuoteEditable := TRUE;
             DocumentNoEditable := TRUE;
             LineStatusEditable := TRUE;
           END;

    OnOpenPage=VAR
                 EstimateManagementRTC@1100525000 : Codeunit 11130010;
               BEGIN
                 GetFilterZeroLinesByUser(Rec);  //C025240
                 IF ServSetup.READPERMISSION THEN
                   ServSetup.GET;
               END;

    OnAfterGetRecord=BEGIN
                       DescriptionIndent := 0;
                       DetermineCostObject(1);
                       RefQuote := RouteRefMgtCU.GetQuoteOfReference("Purchase Route Reference");
                       GetItemSpecifications;

                       IF gFromReference THEN BEGIN
                         gFromReference := FALSE;
                         SETRANGE("Line No.");
                       END;

                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  CostObject := '';
                  RefQuote := '';
                  IF EstRec.GET("Estimate No.") THEN
                    "Recipe Group" := EstRec."Recipe Group";
                  InitRecord; // 34595.n
                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=BEGIN
                     CheckEstEditable;
                     IF NOT FixedOff THEN BEGIN
                       ERROR(Text000);
                     END;
                     CheckHideZeroLines;  //C025240
                     ValidateRecipe(0);
                   END;

    OnModifyRecord=BEGIN
                     CheckEstEditable;
                     IF NOT FixedOff THEN BEGIN
                       CurrPage.UPDATE(FALSE);
                       ERROR(Text001);
                     END;
                     ValidateRecipe(1);
                   END;

    OnDeleteRecord=BEGIN
                     CheckEstEditable;
                     IF NOT FixedOff THEN BEGIN
                       CurrPage.UPDATE(FALSE);
                       ERROR(Text002);
                     END;

                     RouteRefMgtCU.CheckDeleteEstLineHasQuoteOLD(Rec, TRUE);
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528000;1 ;ActionGroup;
                      CaptionML=ENU=Navi&gation }
      { 1100528003;2 ;Action    ;
                      CaptionML=ENU=Previous Chapter;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 EstimateManagementRTC.FilterEstimateLinesNextPartOLD(2, 0, Rec); //2=chapter, 0=previous
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100528005;2 ;Action    ;
                      CaptionML=ENU=Previous Paragraph;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 EstimateManagementRTC.FilterEstimateLinesNextPartOLD(1, 0, Rec); //1=paragraph, 0=previous
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100528002;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+F11;
                      CaptionML=ENU=Previous Part;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 EstimateManagementRTC.FilterEstimateLinesNextPartOLD(0, 0, Rec); //0=part, 0=previous
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100528001;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+F12;
                      CaptionML=ENU=Next Part;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 EstimateManagementRTC.FilterEstimateLinesNextPartOLD(0, 1, Rec); //0=part, 1=next
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100528006;2 ;Action    ;
                      CaptionML=ENU=Next Paragraph;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 EstimateManagementRTC.FilterEstimateLinesNextPartOLD(1, 1, Rec); //1=paragraph, 1=next
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100528004;2 ;Action    ;
                      CaptionML=ENU=Next Chapter;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 EstimateManagementRTC.FilterEstimateLinesNextPartOLD(2, 1, Rec); //2=chapter, 1=next
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100528007;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+F10;
                      CaptionML=ENU=Lookup Part;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Find;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 SubEstimatePart@1100528000 : Record 11012153;
                               BEGIN
                                 SubEstimatePart.SETRANGE("Estimate No.", "Estimate No.");
                                 IF NOT SubEstimatePart.FINDSET THEN
                                   EXIT;

                                 SubEstimatePart."Sub-Estimate No." := "Sub-Estimate No.";
                                 SubEstimatePart."Part Group" := "Part Group";
                                 SubEstimatePart.Part := Part;
                                 IF SubEstimatePart.FIND THEN;

                                 PAGE.RUNMODAL(PAGE::"Estimate Part List", SubEstimatePart);
                               END;
                                }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1100525014;2 ;Action    ;
                      ShortCutKey=Ctrl+Q;
                      CaptionML=ENU=Recipe Lines;
                      Promoted=Yes;
                      Image=ExpandDepositLine;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 EstimateManagementRTC@1100525000 : Codeunit 11130010;
                               BEGIN
                                 EstimateManagementRTC.EditViewRecipeLinesOLD(Rec);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100525016;2 ;Action    ;
                      CaptionML=ENU=Explode Recipe;
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeRecipe;
                               END;
                                }
      { 1100525005;2 ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=ENU=Zero Lines (on/off);
                      Image=GetLines;
                      OnAction=VAR
                                 EstimateManagementRTC@1100525001 : Codeunit 11130010;
                               BEGIN
                                 SetFilterZeroLinesByUser(Rec);  //C025240
                               END;
                                }
      { 1904814104;2 ;Action    ;
                      CaptionML=ENU=&Explode BOM;
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeBOM;
                               END;
                                }
      { 1100525017;2 ;Action    ;
                      CaptionML=ENU=Modify BOM Discount;
                      Image=CalculateDiscount;
                      OnAction=BEGIN
                                 UpgradeBOMDiscount;
                               END;
                                }
      { 1100525018;2 ;Action    ;
                      CaptionML=ENU=Modify BOM Amount;
                      Image=ContractPayment;
                      OnAction=BEGIN
                                 UpgradeBOMAmount;
                               END;
                                }
      { 1100525019;2 ;Action    ;
                      CaptionML=ENU=Remove Zero-Lines BOM;
                      Image=Delete;
                      OnAction=BEGIN
                                 RemoveZeroLinesBOM;
                               END;
                                }
      { 1100525500;2 ;Action    ;
                      CaptionML=ENU=&Surcharge;
                      Image=InsertStartingFee;
                      OnAction=BEGIN
                                 GenerateCharge;
                               END;
                                }
      { 1905064604;1 ;ActionGroup;
                      CaptionML=ENU=&Copy }
      { 1100409001;2 ;Action    ;
                      Name=New Buffer Procedure;
                      ShortCutKey=Shift+Ctrl+B;
                      CaptionML=ENU=New Buffer Procedure;
                      Promoted=Yes;
                      Image=SelectLineToApply;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 EstLineFrm@1100409000 : Page 11229770;
                               BEGIN
                                 //db, 16-12-14: C019887
                                 EstLineFrm.SetSelection("Estimate No.","Sub-Estimate No.", "Part Group", Part, "Line No.");
                                 EstLineFrm.RUNMODAL;
                               END;
                                }
      { 1906656704;2 ;Action    ;
                      CaptionML=ENU=Show Buffer;
                      Promoted=Yes;
                      Image=Allocations;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowBuffer;
                               END;
                                }
      { 1906995904;2 ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=ENU=Copy &to Buffer;
                      Promoted=Yes;
                      Image=SelectLineToApply;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CopyToBuffer;
                               END;
                                }
      { 1907335104;2 ;Action    ;
                      ShortCutKey=Shift+F11;
                      CaptionML=ENU=Copy &from Buffer;
                      Promoted=Yes;
                      Image=PostApplication;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CopyFromBuffer;
                               END;
                                }
      { 1904442304;2 ;Action    ;
                      ShortCutKey=F7;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy &Recipes;
                      Image=Copy;
                      OnAction=BEGIN
                                 CopyRecipe;
                               END;
                                }
      { 1901111704;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+F9;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy &Model Quantities;
                      Image=Copy;
                      OnAction=BEGIN
                                 CopyModelQuan;
                               END;
                                }
      { 1901111604;2 ;Action    ;
                      CaptionML=ENU=Copy &Part Lines;
                      Promoted=Yes;
                      Image=Copy;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 SelectPartLines;
                               END;
                                }
      { 1902986904;2 ;Action    ;
                      CaptionML=ENU=Copy &Entries;
                      Image=Copy;
                      OnAction=BEGIN
                                 SelectEntry;
                               END;
                                }
      { 1100525009;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100525010;1 ;ActionGroup;
                      CaptionML=ENU=Estimate &Part }
      { 1100525011;2 ;Action    ;
                      CaptionML=ENU=&Coding;
                      RunObject=Page 11012185;
                      RunPageLink=Estimate No.=FIELD(Estimate No.),
                                  Sub-Estimate No.=FIELD(Sub-Estimate No.),
                                  Part Group=FIELD(Part Group),
                                  Part=FIELD(Part);
                      Promoted=Yes;
                      Image=ItemTrackingLines;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 EstimateManagementRTC@1100525000 : Codeunit 11130010;
                               BEGIN
                               END;
                                }
      { 1100525001;2 ;Action    ;
                      CaptionML=ENU=&Totals;
                      RunObject=Page 11012198;
                      RunPageLink=Estimate No.=FIELD(Estimate No.),
                                  Sub-Estimate No.=FIELD(Sub-Estimate No.),
                                  Part Group=FIELD(Part Group),
                                  Part=FIELD(Part);
                      Promoted=Yes;
                      Image=LedgerBudget;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 EstimateManagementRTC@1100525000 : Codeunit 11130010;
                               BEGIN
                               END;
                                }
      { 1100525006;2 ;Action    ;
                      CaptionML=ENU=Model Quantities;
                      RunObject=Page 11012252;
                      RunPageLink=Estimate No.=FIELD(Estimate No.),
                                  Sub-Estimate No.=FIELD(Sub-Estimate No.),
                                  Part Group=FIELD(Part Group),
                                  Part=FIELD(Part);
                      Promoted=No;
                      Image=Warehouse;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 EstimateManagementRTC@1100525000 : Codeunit 11130010;
                               BEGIN
                               END;
                                }
      { 1100525013;1 ;ActionGroup;
                      CaptionML=ENU=Estimate &Line }
      { 1904871004;2 ;Action    ;
                      CaptionML=ENU=Purchase Route References;
                      Image=ContactReference;
                      OnAction=BEGIN
                                 ShowPurchRouteRef;
                               END;
                                }
      { 1904903804;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=&Internal Text;
                      Promoted=Yes;
                      Image=SNInfo;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 EditText(0);
                               END;
                                }
      { 1907028604;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+E;
                      CaptionML=ENU=&External Text;
                      Promoted=Yes;
                      Image=SNInfo;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 EditText(1);
                               END;
                                }
      { 1100525020;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+R;
                      CaptionML=ENU=&Comment Lines;
                      Image=SNInfo;
                      OnAction=BEGIN
                                 EditCommentLines;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                GroupType=Repeater }

    { 1100525012;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE;
                Editable=FALSE }

    { 2   ;2   ;Field     ;
                SourceExpr="Recipe Group";
                Visible=FALSE;
                Editable=RecipeGroupEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 4   ;2   ;Field     ;
                SourceExpr=Recipe;
                Editable=RecipeEditable;
                OnValidate=BEGIN
                             //db, 03-02-15
                             CurrPage.SAVERECORD;
                             CurrPage.UPDATE(FALSE);
                             SetEditable;
                           END;

                OnLookup=BEGIN
                           //db, 03-02-15
                           IF HandleLookupRecipe THEN
                             CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 1100525003;2;Field  ;
                SourceExpr="Recipe Lines Exist" }

    { 1210190006;2;Field  ;
                SourceExpr="Project No.";
                Visible=FALSE }

    { 1210190022;2;Field  ;
                SourceExpr=Element;
                Visible=FALSE }

    { 1210190030;2;Field  ;
                SourceExpr="Project Planning Activity Code";
                Visible=FALSE }

    { 1100485050;2;Field  ;
                SourceExpr="Plant Type";
                Visible=FALSE;
                Editable=PlantTypeEditable }

    { 6   ;2   ;Field     ;
                SourceExpr="Item No.";
                Editable=ItemNoEditable;
                OnValidate=BEGIN
                             ItemNoOnAfterValidate;
                             SetEditable;
                           END;

                OnLookup=BEGIN
                           IF HandleLookupItem(FIELDNO("Item No.")) THEN
                             CurrPage.UPDATE(TRUE);  //db, 09-03-07 (call 8283)
                         END;
                          }

    { 8   ;2   ;Field     ;
                SourceExpr=Manufacturer;
                Editable=ItemNoEditable;
                OnLookup=BEGIN
                           GabiVendorRec.HandleVendorLookup(1, Manufacturer);
                         END;
                          }

    { 10  ;2   ;Field     ;
                SourceExpr="Basic Item";
                Editable=ItemNoEditable;
                OnValidate=BEGIN
                             BasicItemOnAfterValidate;
                             SetEditable;
                           END;

                OnLookup=BEGIN
                           IF HandleLookupItem(FIELDNO("Basic Item")) THEN
                             CurrPage.UPDATE(TRUE);  //db, 09-03-07 (call 8283)
                         END;
                          }

    { 12  ;2   ;Field     ;
                SourceExpr="Vendor (Trade Item)";
                Editable=ItemNoEditable;
                OnLookup=VAR
                           lvItem@1100485000 : Code[20];
                         BEGIN
                           lvItem := "Vendor (Trade Item)";
                           GabiVendorRec.HandleVendorLookup(2, lvItem);
                           VALIDATE("Vendor (Trade Item)", lvItem);
                           SetEditable;
                         END;
                          }

    { 1100529101;2;Field  ;
                SourceExpr=Vendor;
                Visible=FALSE;
                Editable=VendorEditable;
                OnValidate=BEGIN
                             VendorOnAfterValidate;
                           END;
                            }

    { 1100529100;2;Field  ;
                SourceExpr="Vendor Name";
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr="Trade Item";
                Editable=ItemNoEditable;
                OnValidate=BEGIN
                             TradeItemOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           IF HandleLookupItem(FIELDNO("Trade Item")) THEN
                             CurrPage.UPDATE(TRUE);  //db, 09-03-07 (call 8283)
                         END;

                OnAssistEdit=BEGIN
                               IF HandleAssistEditItem(FIELDNO("Trade Item")) THEN
                                 CurrPage.UPDATE(TRUE);
                             END;
                              }

    { 18  ;2   ;Field     ;
                SourceExpr="Item Brand";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr="Item Type";
                Visible=FALSE }

    { 1100485016;2;Field  ;
                SourceExpr="Item Series";
                Visible=FALSE }

    { 11012000;2;Field    ;
                Name=CostObject;
                CaptionML=ENU=Cost Object;
                SourceExpr=CostObject;
                Visible=FALSE;
                Editable=CostObjectEditable;
                OnValidate=BEGIN
                             ProcessCostObject(1);  //db, 18-11-04
                               CostObjectOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           IF Recipe <> '' THEN EXIT;
                           ProcessCostObject(2);  //db, 18-11-04
                         END;
                          }

    { 1100485044;2;Field  ;
                SourceExpr="Cost Component";
                Visible=FALSE }

    { 1210190016;2;Field  ;
                SourceExpr=Code;
                Visible=FALSE;
                Editable=CodeEditable }

    { 22  ;2   ;Field     ;
                SourceExpr=Description;
                Editable=DescriptionEditable }

    { 1210190002;2;Field  ;
                SourceExpr="Internal Text Block";
                Visible=FALSE;
                OnValidate=BEGIN
                             InternalTextBlockOnPush;
                           END;
                            }

    { 24  ;2   ;Field     ;
                SourceExpr="External Text Block";
                Visible=FALSE;
                OnValidate=BEGIN
                             ExternalTextBlockOnPush;
                           END;
                            }

    { 1100525106;2;Field  ;
                SourceExpr=Comment;
                Visible=FALSE;
                OnValidate=BEGIN
                             CommentOnPush;
                           END;
                            }

    { 1210190024;2;Field  ;
                SourceExpr="Print on Quote";
                Visible=FALSE }

    { 1210190026;2;Field  ;
                SourceExpr=Extension;
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                SourceExpr="Time Quantity";
                Visible=FALSE;
                Editable=TimeQuantityEditable;
                OnValidate=BEGIN
                             TimeQuantityOnAfterValidate;
                           END;
                            }

    { 28  ;2   ;Field     ;
                SourceExpr="Unit of Time";
                Visible=FALSE;
                Editable=TimeQuantityEditable }

    { 11012002;2;Field    ;
                BlankZero=Yes;
                SourceExpr=Length;
                Visible=FALSE;
                Editable=LWHEditable;
                OnValidate=BEGIN
                             LengthOnAfterValidate;
                           END;
                            }

    { 11012004;2;Field    ;
                BlankZero=Yes;
                SourceExpr=Width;
                Visible=FALSE;
                Editable=LWHEditable;
                OnValidate=BEGIN
                             WidthOnAfterValidate;
                           END;
                            }

    { 1210190000;2;Field  ;
                BlankZero=Yes;
                SourceExpr=Height;
                Visible=FALSE;
                Editable=LWHEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 30  ;2   ;Field     ;
                SourceExpr=Quantity;
                Editable=QuantityEditable;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           //db.sn, 27-10-11: CORR-FACTOR
                           IF EnterQuantity(4) THEN BEGIN
                             EditQuanSheet;
                             RecalcTotals;
                           END;
                           //db.en, 27-10-11: CORR-FACTOR
                         END;
                          }

    { 1210190028;2;Field  ;
                SourceExpr="Part Quantity";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525108;2;Field  ;
                SourceExpr="Original Quantity";
                Visible=FALSE;
                OnValidate=BEGIN
                             OriginalQuantityOnAfterValidat;
                           END;
                            }

    { 1100525110;2;Field  ;
                SourceExpr="Part of Line";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Editable=UnitofMeasureEditable }

    { 1100525004;2;Field  ;
                SourceExpr="Ignore Part Quantity";
                OnValidate=BEGIN
                             IgnorePartQuantityOnAfterValid;
                           END;
                            }

    { 34  ;2   ;Field     ;
                SourceExpr="Line Status";
                Editable=LineStatusEditable }

    { 36  ;2   ;Field     ;
                SourceExpr="Surcharge Type";
                Editable=SurchargeTypeEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 38  ;2   ;Field     ;
                SourceExpr="Surcharge %";
                Editable=SurchargePercEditable;
                OnDrillDown=VAR
                              ChrgFrm@1100485001 : Page 11012219;
                            BEGIN
                              ChrgRec.RESET;
                              ChrgRec.SETRANGE("Estimate No.", "Estimate No.");
                              ChrgRec.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
                              ChrgRec.SETRANGE("Part Group", "Part Group");
                              ChrgRec.SETRANGE(Part, Part);
                              ChrgRec.SETRANGE("Recipe Line", 0);
                              ChrgRec.SETRANGE("Recipe Group", '');
                              ChrgRec.SETRANGE(Recipe, '');
                              ChrgRec.SETRANGE("Surcharge Line", "Line No.");
                              ChrgFrm.SETTABLEVIEW(ChrgRec);
                              ChrgFrm.SetSelection(2);
                              ChrgFrm.RUNMODAL;

                              RecalcTotals;
                              CurrPage.UPDATE(TRUE);
                            END;
                             }

    { 40  ;2   ;Field     ;
                SourceExpr="Norm Group";
                Visible=FALSE;
                Editable=NormGroupEditable;
                OnValidate=BEGIN
                             NormGroupOnAfterValidate;
                           END;
                            }

    { 42  ;2   ;Field     ;
                SourceExpr="Sub Operation Code";
                Visible=FALSE;
                Editable=SubOperationCodeEditable;
                OnValidate=BEGIN
                             ProcessSubOperation;  //db, 21-12-04
                             SubOperationCodeOnAfterValidat;
                             SetEditable;
                           END;

                OnLookup=VAR
                           OperFrm@1100485001 : Page 11012178;
                           OperRec@1100485000 : Record 11012166;
                         BEGIN
                           IF (Recipe <> '') OR ("Surcharge Type" <> "Surcharge Type"::" ") THEN EXIT;  //db, 07-08-15: C022442

                           CLEAR(OperFrm);
                           OperFrm.LOOKUPMODE(TRUE);
                           OperFrm.SetSelection(DATABASE::"Estimate Line OLD","Estimate No.","Sub-Estimate No.",
                             "Part Group",Part,0,'','');

                           OperRec.Code := "Sub Operation Code";
                           OperFrm.SETRECORD(OperRec);

                           IF OperFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             OperFrm.GETRECORD(OperRec);
                             VALIDATE("Sub Operation Code", OperRec.Code);
                             ProcessSubOperation;  //db, 09-02-12: M32143
                             RecalcTotals;
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 44  ;2   ;Field     ;
                SourceExpr=Norm;
                Editable=NormEditable;
                OnValidate=BEGIN
                             NormOnAfterValidate;
                           END;

                OnLookup=VAR
                           NormGroupFrm@11012002 : Page 11012174;
                         BEGIN
                           //DP00381
                           IF HandleLookupOperationNorm THEN
                             CurrPage.UPDATE(TRUE)
                           ELSE
                             RecalcTotals;
                         END;
                          }

    { 1100485052;2;Field  ;
                CaptionML=ENU=Norm (Minuts);
                SourceExpr=GetMinuts(0);
                Visible=FALSE;
                Editable=FALSE }

    { 46  ;2   ;Field     ;
                SourceExpr="Rate Code";
                Editable=RateCodeEditable;
                OnValidate=BEGIN
                             RateCodeOnAfterValidate;
                             SetEditable;
                           END;
                            }

    { 48  ;2   ;Field     ;
                SourceExpr=Rate }

    { 1100528900;2;Field  ;
                SourceExpr="Wage Component";
                Visible=FALSE;
                OnValidate=BEGIN
                             //DP00236
                             WageComponentOnAfterValidate;
                             SetEditable;
                           END;
                            }

    { 54  ;2   ;Field     ;
                SourceExpr="Gross Price";
                Visible=FALSE;
                Editable=GrossPriceEditable;
                OnValidate=BEGIN
                             GrossPriceOnAfterValidate;
                           END;
                            }

    { 1100485064;2;Field  ;
                SourceExpr="Purchase Discount %";
                Visible=FALSE }

    { 1100485066;2;Field  ;
                SourceExpr="Sales Discount %";
                Visible=FALSE }

    { 52  ;2   ;Field     ;
                SourceExpr="Discount %";
                Visible=FALSE;
                Editable=DiscountPercEditable;
                OnValidate=BEGIN
                             Discount37OnAfterValidate;
                           END;
                            }

    { 50  ;2   ;Field     ;
                SourceExpr="Material Price";
                Editable=MaterialPriceEditable;
                OnValidate=BEGIN
                             MaterialPriceOnAfterValidate;
                           END;
                            }

    { 56  ;2   ;Field     ;
                SourceExpr="Subcontracting Price";
                Editable=SubcontractingPriceEditable;
                OnValidate=BEGIN
                             SubcontractingPriceOnAfterVali;
                           END;
                            }

    { 58  ;2   ;Field     ;
                SourceExpr="Plant Price";
                Editable=PlantPriceEditable;
                OnValidate=BEGIN
                             PlantPriceOnAfterValidate;
                           END;
                            }

    { 1210190004;2;Field  ;
                SourceExpr="Total Recipe";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              EstLineRec := Rec;
                              StartRecipe(EstLineRec);   //db, 01-11-04
                            END;
                             }

    { 1100485008;2;Field  ;
                DecimalPlaces=2:3;
                SourceExpr=Hours;
                Visible=FALSE }

    { 1100485000;2;Field  ;
                SourceExpr="Labor Amount";
                Visible=FALSE }

    { 1100485002;2;Field  ;
                SourceExpr="Gross Amount";
                Visible=FALSE }

    { 1100485006;2;Field  ;
                SourceExpr="Material Amount";
                Visible=FALSE }

    { 1100485004;2;Field  ;
                SourceExpr="Subcontracting Amount";
                Visible=FALSE }

    { 1100485010;2;Field  ;
                SourceExpr="Plant Amount";
                Visible=FALSE }

    { 1100485012;2;Field  ;
                SourceExpr=Amount;
                Visible=FALSE }

    { 60  ;2   ;Field     ;
                SourceExpr="Price Reference Date";
                Visible=FALSE }

    { 1100485032;2;Field  ;
                SourceExpr="Norm Agreement";
                Visible=FALSE }

    { 1210190018;2;Field  ;
                SourceExpr="Price Agreement";
                Visible=FALSE;
                Editable=PriceAgreementEditable }

    { 1100485054;2;Field  ;
                SourceExpr="Subcontracting Agreement";
                Visible=FALSE }

    { 1100485056;2;Field  ;
                SourceExpr="Plant Agreement";
                Visible=FALSE }

    { 1210190008;2;Field  ;
                SourceExpr="Ask for Quote";
                Visible=FALSE;
                Editable=AskforQuoteEditable }

    { 1210190012;2;Field  ;
                CaptionML=ENU=Quote No.;
                SourceExpr=RefQuote;
                Visible=FALSE;
                Editable=FALSE;
                OnLookup=VAR
                           lvPurchHeadRec@1210190002 : Record 38;
                         BEGIN
                           IF (RefQuote = '') THEN
                             EXIT;

                           IF (COPYSTR(RefQuote, 1, 1) = '<') THEN  // IF Quote No. is '<Nr.>', then more than one quote present
                             RouteRefMgtCU.ShowReferenceQuoteList("Purchase Route Reference")
                           ELSE BEGIN
                             lvPurchHeadRec.SETRANGE("Document Type", lvPurchHeadRec."Document Type"::Quote);
                             lvPurchHeadRec.SETRANGE("No.", RefQuote);
                             PAGE.RUNMODAL(PAGE::"Purchase Quote", lvPurchHeadRec);
                           END;
                         END;
                          }

    { 1210190010;2;Field  ;
                SourceExpr="Purchase Route Reference";
                Visible=FALSE }

    { 1210190014;2;Field  ;
                SourceExpr="Document No.";
                Visible=FALSE;
                Editable=DocumentNoEditable }

    { 1100485028;2;Field  ;
                SourceExpr=Subcontractor;
                Visible=FALSE;
                OnValidate=BEGIN
                             SubcontractorOnAfterValidate;
                           END;
                            }

    { 1100485030;2;Field  ;
                SourceExpr="Subcontractor Name";
                Visible=FALSE }

    { 1100525000;2;Field  ;
                SourceExpr="Service Order No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100485046;2;Field  ;
                SourceExpr="Object No.";
                Visible=FALSE;
                Editable=ObjectNoEditable }

    { 1100485048;2;Field  ;
                SourceExpr="Object Customer";
                Visible=FALSE }

    { 1100485018;2;Field  ;
                SourceExpr=Discipline;
                Visible=FALSE;
                Editable=DisciplineEditable }

    { 1100485020;2;Field  ;
                SourceExpr="Trade Speciality";
                Visible=FALSE;
                Editable=TradeSpecialityEditable }

    { 1100485022;2;Field  ;
                SourceExpr="Trade Expertise";
                Visible=FALSE;
                Editable=TradeExpertiseEditable }

    { 1100525002;2;Field  ;
                SourceExpr="E-Plan Item";
                Visible=FALSE }

    { 1100485042;2;Field  ;
                SourceExpr="Scheme Code";
                Visible=FALSE;
                Editable=SchemeCodeEditable }

    { 1100485036;2;Field  ;
                SourceExpr=Comments;
                Visible=FALSE }

    { 1100485040;2;Field  ;
                SourceExpr="Comments for Logistics";
                Visible=FALSE }

    { 1100485038;2;Field  ;
                SourceExpr=Supply;
                Visible=FALSE }

    { 1100485034;2;Field  ;
                SourceExpr="Material Sheet";
                Visible=FALSE }

    { 1100528600;2;Field  ;
                SourceExpr="Price History 0 Exists" }

    { 1100525007;0;Container;
                ContainerType=FactBoxArea }

    { 1100525008;1;Part   ;
                SubPageLink=Estimate No.=FIELD(Estimate No.),
                            Sub-Estimate No.=FIELD(Sub-Estimate No.),
                            Part Group=FIELD(Part Group),
                            Part=FIELD(Part),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11130155;
                PartType=Page }

  }
  CODE
  {
    VAR
      Text000@11012016 : TextConst 'ENU=Adding not allowed, Estimate is fixed.';
      Text001@11012017 : TextConst 'ENU=Changing not allowed, Estimate is fixed.';
      Text002@11012018 : TextConst 'ENU=Deleting not allowed, Estimate is fixed.';
      ServSetup@1100485004 : Record 11012800;
      GabiVendorRec@1100525002 : Record 11012304;
      EstRec@1210190002 : Record 11012151;
      ChrgRec@1210190004 : Record 11012175;
      EstLineRec@1210190003 : Record 11012154;
      RcpLineRec@1100485000 : Record 11012156;
      RecipeRec@1210190005 : Record 11012155;
      PartLineRec@1100485002 : Record 11012187;
      DimValRec@1210190008 : Record 349;
      OldDimValRec@1210190013 : Record 349;
      FixedOff@11012007 : Boolean;
      RouteRefMgtCU@1210190011 : Codeunit 11012045;
      EstimateManagementRTC@1100528000 : Codeunit 11130010;
      chrg0@11012009 : Boolean;
      chrg1@11012010 : Boolean;
      chrg2@11012011 : Boolean;
      chrg3@11012012 : Boolean;
      chrg4@11012013 : Boolean;
      Text009@1210190007 : TextConst 'ENU=Add Line first.';
      gFromReference@1210190012 : Boolean;
      CostObject@1210190000 : Code[20];
      RefQuote@1210190010 : Code[20];
      BufferMgt@1100485003 : Codeunit 11012150;
      ChangedAmountBOM@1100525001 : Decimal;
      Text010@1210190001 : TextConst 'ENU=Remove Zero Lines BOM ?';
      RecipeGroupEditable@1100525000 : Boolean INDATASET;
      RecipeEditable@1100525003 : Boolean INDATASET;
      PlantTypeEditable@1100525201 : Boolean INDATASET;
      ItemNoEditable@1100525004 : Boolean INDATASET;
      CostObjectEditable@1100525006 : Boolean INDATASET;
      CodeEditable@1100525005 : Boolean INDATASET;
      DescriptionEditable@19061412 : Boolean INDATASET;
      LWHEditable@1100525007 : Boolean INDATASET;
      TimeQuantityEditable@1100525008 : Boolean INDATASET;
      QuantityEditable@1100525009 : Boolean INDATASET;
      UnitofMeasureEditable@1100525010 : Boolean INDATASET;
      SurchargeTypeEditable@1100525011 : Boolean INDATASET;
      SurchargePercEditable@1100525012 : Boolean INDATASET;
      NormGroupEditable@19020879 : Boolean INDATASET;
      SubOperationCodeEditable@1100525013 : Boolean INDATASET;
      NormEditable@1100525014 : Boolean INDATASET;
      RateCodeEditable@1100525015 : Boolean INDATASET;
      WageComponentEditable@1100528900 : Boolean;
      GrossPriceEditable@1100525016 : Boolean INDATASET;
      DiscountPercEditable@1100525017 : Boolean INDATASET;
      MaterialPriceEditable@1100525018 : Boolean INDATASET;
      SubcontractingPriceEditable@1100525019 : Boolean INDATASET;
      PlantPriceEditable@1100525020 : Boolean INDATASET;
      ObjectNoEditable@1100525021 : Boolean INDATASET;
      MaintenanceIntervalEditable@1100525022 : Boolean INDATASET;
      MaintenanceRelationEditable@1100525023 : Boolean INDATASET;
      LineStatusEditable@19051744 : Boolean INDATASET;
      DocumentNoEditable@19064841 : Boolean INDATASET;
      AskforQuoteEditable@19065696 : Boolean INDATASET;
      PriceAgreementEditable@19020391 : Boolean INDATASET;
      VendorEditable@19059821 : Boolean INDATASET;
      DisciplineEditable@19028222 : Boolean INDATASET;
      TradeSpecialityEditable@19063570 : Boolean INDATASET;
      TradeExpertiseEditable@19008865 : Boolean INDATASET;
      SchemeCodeEditable@19006379 : Boolean INDATASET;
      SurchargeEmphasize@19034906 : Boolean INDATASET;
      DescriptionIndent@19057867 : Integer INDATASET;
      NormEmphasize@19010576 : Boolean INDATASET;
      GrossPriceEmphasize@19074771 : Boolean INDATASET;
      MaterialPriceEmphasize@19051745 : Boolean INDATASET;
      SubcontractingPriceEmphasize@19001766 : Boolean INDATASET;
      PlantPriceEmphasize@19034801 : Boolean INDATASET;

    PROCEDURE StartRecipe@1(VAR EstLineRec@1210190000 : Record 11012154);
    BEGIN
      //BufferMgt.StartRecipe(EstLineRec, Rec);  //db, 06-05-08: M10706
    END;

    PROCEDURE CopyRecipe@2();
    VAR
      CopyFrm@11012000 : Page 11012213;
    BEGIN
      CopyFrm.FillDefaults("Estimate No.","Sub-Estimate No.","Part Group",Part,"Line No.","Recipe Group",Recipe);
      CopyFrm.StdDialogRunModal;
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE SelectEntry@1100485001();
    BEGIN
      CopyEntry;
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE SelectPartLines@1100485002();
    VAR
      CopyFrm@1100485000 : Page 11012242;
    BEGIN
      CopyFrm.FillDefaults("Estimate No.","Sub-Estimate No.","Part Group",Part,"Line No.");
      PartLineRec.SETRANGE("Part Group","Part Group");
      PartLineRec.SETRANGE(Part,Part);
      CopyFrm.SETTABLEVIEW(PartLineRec);
      CopyFrm.EDITABLE(FALSE);
      CopyFrm.RUNMODAL;

      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE CopyToBuffer@1210190005();
    VAR
      EstimateLine@1100525000 : Record 11012154;
    BEGIN
      EstimateLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(EstimateLine);
      BufferMgt.CopyToBuffer(0,EstimateLine,RcpLineRec,PartLineRec);
    END;

    PROCEDURE CopyFromBuffer@1210190006();
    BEGIN
      BufferMgt.CopyFromBuffer(0,Rec,RcpLineRec,PartLineRec);
    END;

    PROCEDURE ShowBuffer@1210190007();
    BEGIN
      BufferMgt.ShowBuffer(0,Rec,RcpLineRec,PartLineRec);
    END;

    PROCEDURE CheckEstEditable@3();
    VAR
      EstRec@11012000 : Record 11012151;
    BEGIN
      IF EstRec.GET("Estimate No.") THEN
        FixedOff := NOT EstRec.Fixed;
    END;

    PROCEDURE GenerateCharge@4();
    VAR
      EstimateLine@1100525500 : Record 11012154;
    BEGIN
      EstimateLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(EstimateLine);
      EstimateLine.CreateCharge;
      RecalcTotals;
    END;

    PROCEDURE RecalcTotals@5();
    BEGIN
      CurrPage.SAVERECORD;
      //db.sn, 03-11-11: M27731
      UpdateRecipeTotals;
      CheckIgnoreRecipeQuantity;
      //db.en, 03-11-11: M27731
      CalculateTotals;
      CheckEstimateCharge;
      CurrPage.UPDATE(FALSE); //PS, 27-04-12
    END;

    PROCEDURE ChargePresent@7();
    BEGIN
      chrg0 := FALSE;
      chrg1 := FALSE;
      chrg2 := FALSE;
      chrg3 := FALSE;
      chrg4 := FALSE;

      ChrgRec.RESET;
      ChrgRec.SETRANGE("Estimate No.", "Estimate No.");
      ChrgRec.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
      ChrgRec.SETRANGE("Part Group", "Part Group");
      ChrgRec.SETRANGE(Part, Part);
      ChrgRec.SETRANGE("Recipe Line", 0);
      ChrgRec.SETRANGE("Recipe Group", '');
      ChrgRec.SETRANGE(Recipe, '');
      ChrgRec.SETRANGE("Basic Line", "Line No.");
      ChrgRec.SETRANGE("Surcharge Line");
      IF ChrgRec.FINDSET THEN BEGIN
        REPEAT
          IF EstLineRec.GET("Estimate No.", "Sub-Estimate No.", "Part Group", Part, ChrgRec."Surcharge Line") THEN BEGIN
            CASE EstLineRec."Surcharge Type" OF
              EstLineRec."Surcharge Type"::Labor:
                chrg1 := TRUE;
              EstLineRec."Surcharge Type"::Material:
                chrg2 := TRUE;
              EstLineRec."Surcharge Type"::Subcontracting:
                chrg3 := TRUE;
              EstLineRec."Surcharge Type"::Plant:
                chrg4 := TRUE;
            END;
          END;
        UNTIL ChrgRec.NEXT = 0;
      END;

      ChrgRec.SETRANGE("Basic Line");
      ChrgRec.SETRANGE("Surcharge Line", "Line No.");
      IF ChrgRec.FINDFIRST THEN
        chrg0 := TRUE;
    END;

    PROCEDURE ValidateRecipe@6(lvAct@11012000 : Integer);
    VAR
      RecipeLineRec@11012001 : Record 11012156;
    BEGIN
      IF Recipe = '' THEN EXIT;

      IF lvAct = 1 THEN BEGIN
        RecipeLineRec.SETRANGE("Estimate No.", "Estimate No.");
        RecipeLineRec.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
        RecipeLineRec.SETRANGE("Part Group", "Part Group");
        RecipeLineRec.SETRANGE(Part, Part);
        RecipeLineRec.SETRANGE("Estimate Line", "Line No.");
        IF RecipeLineRec.FINDFIRST THEN EXIT;
      END;

      IF RecipeRec.GET("Recipe Group",Recipe) THEN BEGIN
        Description := RecipeRec.Description;
        "Unit of Measure" := RecipeRec."Unit of Measure";
        Manufacturer := RecipeRec.Manufacturer;
        CopyRecipe;
      END;
    END;

    PROCEDURE EditText@8(lvType@1210190000 : 'intern,extern');
    VAR
      TextFrm@11012001 : Page 11012120;
    BEGIN
      IF "Line No." = 0 THEN
        ERROR(Text009);

      TextFrm.TextType(lvType);
      TextFrm.SetSelection(DATABASE::"Estimate Line OLD","Estimate No.","Sub-Estimate No.",
        "Part Group",Part,'','',"Line No.",0);

      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    PROCEDURE ProcessCostObject@1210190000(lvAction@1210190000 : Integer);
    BEGIN
      IF lvAction = 0 THEN BEGIN   //before input
        IF CostObject <> '' THEN BEGIN
          OldDimValRec.RESET;
          OldDimValRec.SETRANGE("Global Dimension No.",2);
          OldDimValRec.SETRANGE(Code, CostObject);
          OldDimValRec.FINDFIRST;
        END ELSE BEGIN
          CLEAR(OldDimValRec);
        END;
      END;

      IF lvAction = 1 THEN BEGIN   //validate
        IF CostObject <> '' THEN BEGIN
          DimValRec.RESET;
          DimValRec.SETRANGE("Global Dimension No.",2);
            DimValRec.SETRANGE(Code, CostObject);
          IF OldDimValRec.Code <> '' THEN
            DimValRec.SETRANGE("Cost Type", OldDimValRec."Cost Type");
          DimValRec.FINDFIRST;
        END ELSE BEGIN
          IF "Item No." + "Basic Item" + "Trade Item" <> '' THEN
            DimValRec.TESTFIELD("Cost Type", DimValRec."Cost Type"::Material);
        END;
        DetermineCostObject(2);
      END;

      IF lvAction = 2 THEN BEGIN   //lookup
        DimValRec.RESET;
        DimValRec.Code := CostObject;
        DimValRec.SETRANGE("Global Dimension No.",2);
        IF OldDimValRec.Code <> '' THEN
          DimValRec.SETRANGE("Cost Type", OldDimValRec."Cost Type");
        IF PAGE.RUNMODAL(PAGE::"Cost Object List", DimValRec) = ACTION::LookupOK THEN BEGIN
          CostObject := DimValRec.Code;
          ProcessCostObject(1);
        END;
      END;
    END;

    PROCEDURE DetermineCostObject@1210190001(lvAction@1210190000 : Integer);
    BEGIN
      IF lvAction = 1 THEN BEGIN
        CostObject := '';
        IF "Item No." + "Basic Item" + "Trade Item" <> '' THEN
          CostObject := "Cost Object Material";
        IF CostObject = '' THEN
          CostObject := "Cost Object Labor";
        IF CostObject = '' THEN
          CostObject := "Cost Object Material";
        IF CostObject = '' THEN
          CostObject := "Cost Object Subcontracting";
        IF CostObject = '' THEN
          CostObject := "Cost Object Plant";
      END ELSE BEGIN
        "Cost Object Labor" := '';
        "Cost Object Material" := '';
        "Cost Object Subcontracting" := '';
        "Cost Object Plant" := '';
        IF DimValRec."Cost Type" = DimValRec."Cost Type"::Labor THEN
          VALIDATE("Cost Object Labor", DimValRec.Code);
        IF DimValRec."Cost Type" = DimValRec."Cost Type"::Material THEN
          VALIDATE("Cost Object Material", DimValRec.Code);
        IF DimValRec."Cost Type" = DimValRec."Cost Type"::Subcontracting THEN
          VALIDATE("Cost Object Subcontracting", DimValRec.Code);
        IF DimValRec."Cost Type" = DimValRec."Cost Type"::Plant THEN
          VALIDATE("Cost Object Plant", DimValRec.Code);

        CheckCostObject(CostObject,TRUE);  //function deleted from table validation
        IF "Item No." + "Basic Item" + "Trade Item" = '' THEN BEGIN
          IF "Sub Operation Code" <> '' THEN
            ProcessSubOperation
          ELSE
            Description := DimValRec.Name;
        END;
      END;
    END;

    PROCEDURE HandleZeroLines@1210190002();
    BEGIN
      CheckHideZeroLines;  //C025240
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE GetFilterZeroLines@1210190003(lvRefresh@1210190000 : Boolean);
    BEGIN
      GetFilterZeroLinesByUser(Rec);  //C025240
      IF lvRefresh = TRUE THEN
        CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE ShowPurchRouteRef@1210190004();
    BEGIN
      RouteRefMgtCU.ShowReferenceList("Purchase Route Reference");
    END;

    PROCEDURE InitSelectionFromReference@1210190008(IEstLineNo@1210190000 : Integer);
    BEGIN
      gFromReference := TRUE;
      SETRANGE("Line No.", IEstLineNo);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE CopyModelQuan@1100485000();
    VAR
      CopyFrm@11012000 : Page 11012259;
    BEGIN
      CopyFrm.FillDefaults("Estimate No.","Sub-Estimate No.","Part Group",Part,'');
      CopyFrm.StdDialogRunModal;
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE ExplodeRecipe@1210190009();
    VAR
      EstimateLine@1100525000 : Record 11012154;
    BEGIN
      EstimateLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(EstimateLine);
      EstimateLine.SETFILTER(Recipe, '<>%1', '');
      IF EstimateLine.FINDSET THEN BEGIN
        REPEAT
          EstimateLine.ExplodeRecipe;
        UNTIL EstimateLine.NEXT = 0;
      END;
    END;

    PROCEDURE ExplodeBOM@1100525000();
    VAR
      EstimateLine@1100525000 : Record 11012154;
    BEGIN
      EstimateLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(EstimateLine);
      IF EstimateLine.FINDSET THEN BEGIN
        REPEAT
          ChangedAmountBOM := EstimateLine.Amount;
          CODEUNIT.RUN(CODEUNIT::"EstimateLineOLD-Explode BOM",EstimateLine);
          UpgradeBOMAmountAfter(EstimateLine);
          COMMIT;
        UNTIL EstimateLine.NEXT = 0;
      END;
    END;

    PROCEDURE EditCommentLines@1100525015();
    VAR
      EstMgt@1210190000 : Codeunit 11012153;
    BEGIN
      EstMgt.EditCommentLines("Estimate No.","Sub-Estimate No.","Part Group",Part,"Line No.",'','');  //db, 24-03-11
    END;

    PROCEDURE UpgradeBOMDiscount@1100525002();
    VAR
      EstimateLine@1100525000 : Record 11012154;
      ProcessBOMDiscount@1100525001 : Report 11012549;
    BEGIN
      EstimateLine.COPY(Rec);
      EstimateLine.SETRECFILTER;
      ProcessBOMDiscount.SetSelection(DATABASE::"Estimate Line OLD");
      ProcessBOMDiscount.SetSelectionEstimateOLD(EstimateLine);
      ProcessBOMDiscount.SETTABLEVIEW(EstimateLine);
      ProcessBOMDiscount.RUNMODAL;
      CurrPage.UPDATE;
    END;

    PROCEDURE RemoveZeroLinesBOM@1100525003();
    VAR
      EstimateLine@1100525001 : Record 11012154;
      RemoveZeroLinesBOM@1100525002 : Report 11012358;
    BEGIN
      //26253.sn
      IF NOT CONFIRM(Text010,FALSE) THEN
        EXIT;

      EstimateLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(EstimateLine);
      IF EstimateLine.ISEMPTY THEN BEGIN
        EstimateLine.SETRANGE("Line No.", "Line No.");
      END;
      IF EstimateLine.FINDSET THEN BEGIN
        REPEAT
          RemoveZeroLinesBOM.SetSelection(DATABASE::"Estimate Line OLD");
          RemoveZeroLinesBOM.SetSelectionEstimateOLD(EstimateLine);
          RemoveZeroLinesBOM.SETTABLEVIEW(EstimateLine);
          RemoveZeroLinesBOM.USEREQUESTPAGE(FALSE);
          RemoveZeroLinesBOM.RUNMODAL;
          COMMIT;
          CLEAR(RemoveZeroLinesBOM);
        UNTIL EstimateLine.NEXT = 0;
      END;
      //26253.en
    END;

    PROCEDURE UpgradeBOMAmount@1100525001();
    VAR
      EstimateLine@1100525002 : Record 11012154;
      ProcessBOMAmount@1100525001 : Report 11012359;
    BEGIN
      EstimateLine.COPY(Rec);
      EstimateLine.SETRECFILTER;
      ProcessBOMAmount.SetSelection(DATABASE::"Estimate Line OLD");
      ProcessBOMAmount.SetSelectionEstimateOLD(EstimateLine);
      ProcessBOMAmount.SETTABLEVIEW(EstimateLine);
      ProcessBOMAmount.RUNMODAL;
      CurrPage.UPDATE;
    END;

    PROCEDURE UpgradeBOMAmountAfter@1100525005(VAR EstimateLine2@1100525000 : Record 11012154);
    VAR
      EstimateLine@1100525002 : Record 11012154;
      ProcessBOMAmount@1100525001 : Report 11012359;
    BEGIN
      EstimateLine.COPY(EstimateLine2);
      EstimateLine.SETRECFILTER;
      ProcessBOMAmount.SetSelection(DATABASE::"Estimate Line OLD");
      ProcessBOMAmount.SetSelectionEstimateAmountOLD(EstimateLine,ChangedAmountBOM);
      ProcessBOMAmount.SETTABLEVIEW(EstimateLine);
      ProcessBOMAmount.USEREQUESTPAGE(FALSE);
      ProcessBOMAmount.RUNMODAL;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ItemNoOnAfterValidate@19061248();
    BEGIN
      DetermineCostObject(1);  //db, 01-06-10: M18537
    END;

    LOCAL PROCEDURE BasicItemOnAfterValidate@19054956();
    BEGIN
      DetermineCostObject(1);  //db, 01-06-10: M18537
    END;

    LOCAL PROCEDURE TradeItemOnAfterValidate@19075338();
    BEGIN
      DetermineCostObject(1);  //db, 01-06-10: M18537
    END;

    LOCAL PROCEDURE CostObjectOnAfterValidate@19061648();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE TimeQuantityOnAfterValidate@19030511();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE LengthOnAfterValidate@19043825();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE WidthOnAfterValidate@19005050();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE HeightOnAfterValidate@19042348();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE OriginalQuantityOnAfterValidat@19021056();
    BEGIN
      IF (xRec."Original Quantity" <> "Original Quantity") AND (xRec."Original Quantity" <> 0) THEN BEGIN
        ChangeQuantityExplodedLines("Original Quantity" / xRec."Original Quantity");
        CurrPage.UPDATE;
      END;
    END;

    LOCAL PROCEDURE IgnorePartQuantityOnAfterValid@19065410();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE NormGroupOnAfterValidate@19073036();
    BEGIN
      RecalcTotals;  //db, 13-06-05
    END;

    LOCAL PROCEDURE SubOperationCodeOnAfterValidat@19058750();
    BEGIN
      RecalcTotals;  //db, 13-06-05
      IF "Sub Operation Code" <> '' THEN
        "Norm Agreement" := FALSE; //db, 28-08-07
    END;

    LOCAL PROCEDURE NormOnAfterValidate@19051466();
    BEGIN
      "Norm Agreement" := TRUE; //db, 14-06-07
      RecalcTotals;
    END;

    LOCAL PROCEDURE RateCodeOnAfterValidate@19043554();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE WageComponentOnAfterValidate@1100528900();
    BEGIN
      //DP00236
      RecalcTotals;
    END;

    LOCAL PROCEDURE GrossPriceOnAfterValidate@19036441();
    BEGIN
      "Price Agreement" := TRUE; //db, 14-06-06
      RecalcTotals;
    END;

    LOCAL PROCEDURE Discount37OnAfterValidate@19039847();
    BEGIN
      "Price Agreement" := TRUE; //db, 14-06-06
      RecalcTotals;
    END;

    LOCAL PROCEDURE MaterialPriceOnAfterValidate@19066096();
    BEGIN
      "Price Agreement" := TRUE; //db, 14-06-06
      RecalcTotals;
    END;

    LOCAL PROCEDURE SubcontractingPriceOnAfterVali@19026415();
    BEGIN
      "Subcontracting Agreement" := TRUE; //db, 16-01-08
      RecalcTotals;
    END;

    LOCAL PROCEDURE PlantPriceOnAfterValidate@19075011();
    BEGIN
      "Plant Agreement" := TRUE; //db, 16-01-08
      RecalcTotals;
    END;

    LOCAL PROCEDURE VendorOnAfterValidate@19052966();
    BEGIN
      CALCFIELDS("Vendor Name");
    END;

    LOCAL PROCEDURE SubcontractorOnAfterValidate@19029042();
    BEGIN
      CALCFIELDS("Subcontractor Name");
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      CheckEstEditable;
      SetEditable;

      CALCFIELDS("Labor Part", "Hours Part", "Material Part", "Gross Price Part",
                 "Subcontracting Part", "Plant Part", "Total Part");
      CALCFIELDS("Quantity Model Exist");
      DescriptionOnFormat;
    END;

    LOCAL PROCEDURE NormOnActivate@19077738();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE CostObjectOnBeforeInput@19037399();
    BEGIN
      ProcessCostObject(0);  //db, 18-11-04
    END;

    LOCAL PROCEDURE InternalTextBlockOnPush@19008801();
    BEGIN
      EditText(0);  //db, 12-11-09
    END;

    LOCAL PROCEDURE ExternalTextBlockOnPush@19064562();
    BEGIN
      EditText(1);  //db, 12-11-09
    END;

    LOCAL PROCEDURE CommentOnPush@19063718();
    BEGIN
      EditCommentLines;  //db, 24-03-11
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      IF "Level BOM" < 10 THEN
        DescriptionIndent := "Level BOM";
    END;

    PROCEDURE SetEmphasized@1100525101();
    BEGIN
      ChargePresent;
      SurchargeEmphasize := chrg0;
      NormEmphasize := chrg1;
      GrossPriceEmphasize := chrg2;
      MaterialPriceEmphasize := chrg2;
      SubcontractingPriceEmphasize := chrg3;
      PlantPriceEmphasize := chrg4;
    END;

    PROCEDURE SetEditable@1100525500();
    BEGIN
      CheckEstEditable;

      RecipeGroupEditable := FixedOff;
      RecipeEditable := FixedOff;
      PlantTypeEditable := FixedOff;
      ItemNoEditable := FixedOff;
      CostObjectEditable := FixedOff;
      CodeEditable := FixedOff;
      DescriptionEditable := FixedOff;
      LWHEditable := FixedOff;
      TimeQuantityEditable := FixedOff;
      QuantityEditable := FixedOff;
      UnitofMeasureEditable := FixedOff;
      SurchargeTypeEditable := FixedOff;
      SurchargePercEditable := FixedOff;
      NormGroupEditable := FixedOff;
      SubOperationCodeEditable := FixedOff;
      NormEditable := FixedOff;
      RateCodeEditable := FixedOff;
      WageComponentEditable := FixedOff;  //DP00236
      GrossPriceEditable := FixedOff;
      DiscountPercEditable := FixedOff;
      MaterialPriceEditable := FixedOff;
      SubcontractingPriceEditable := FixedOff;
      PlantPriceEditable := FixedOff;
      ObjectNoEditable := FixedOff;
      MaintenanceIntervalEditable := FixedOff;
      MaintenanceRelationEditable := FixedOff;

      LineStatusEditable := FixedOff;
      DocumentNoEditable := FixedOff;
      AskforQuoteEditable := FixedOff;
      PriceAgreementEditable := FixedOff;
      VendorEditable := FixedOff;
      DisciplineEditable := FixedOff;
      TradeSpecialityEditable := FixedOff;
      TradeExpertiseEditable := FixedOff;
      SchemeCodeEditable := FixedOff;

      IF FixedOff THEN BEGIN
        RecipeGroupEditable := ("Surcharge Type" = "Surcharge Type"::" ");
        RecipeEditable := (("Basic Item" = '') AND ("Trade Item" = '') AND ("Item No." = '')
          AND ("Surcharge Type" = "Surcharge Type"::" "));
        PlantTypeEditable := ((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" ")
          AND ("Item No." + "Basic Item" + "Trade Item" = ''));
        ItemNoEditable := ((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
        CostObjectEditable := ((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
        CodeEditable := (Recipe='');
        LWHEditable := EnterQuantity(1);
        TimeQuantityEditable := ("Surcharge Type" = "Surcharge Type"::" ");
        QuantityEditable := EnterQuantity(2);
        SurchargeTypeEditable := (Recipe + "Item No." + "Basic Item" + "Trade Item" = '');
        SurchargePercEditable := ("Surcharge Type" <> "Surcharge Type"::" ");
        NormGroupEditable := (Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" ");
        SubOperationCodeEditable := (Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" ");
        NormEditable := ((Recipe = '') AND ("Sub Operation Code" = '') AND
          ("Surcharge Type" = "Surcharge Type"::" ") AND ("Rate Code" <> ''));
        RateCodeEditable := (Recipe='');
        WageComponentEditable := ((Recipe = '') AND
          ("Surcharge Type" = "Surcharge Type"::" ") AND ("Rate Code" <> ''));   //DP00236
        GrossPriceEditable := (Recipe='') AND ("Surcharge Type" = "Surcharge Type"::" ");
        DiscountPercEditable := (Recipe='') AND ("Surcharge Type" = "Surcharge Type"::" ");
        MaterialPriceEditable := (Recipe='') AND ("Surcharge Type" = "Surcharge Type"::" ");
        SubcontractingPriceEditable := (Recipe='') AND ("Surcharge Type" = "Surcharge Type"::" ");
        PlantPriceEditable := (Recipe='') AND ("Surcharge Type" = "Surcharge Type"::" ");

        MaintenanceIntervalEditable := (Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" ");
        MaintenanceRelationEditable := (Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" ");
      END;

      SetEmphasized;
    END;

    PROCEDURE GetDataCaptionEstPart@1100528000() : Text[250];
    VAR
      SubEstimatePart@1100528000 : Record 11012153;
    BEGIN
      SubEstimatePart.GET("Estimate No.", "Sub-Estimate No.", "Part Group", Part);
      EXIT(SubEstimatePart.GetDataCaption);
    END;

    BEGIN
    END.
  }
}

