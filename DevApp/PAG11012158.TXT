OBJECT Page 11012158 Recipe Lines List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Recipe Lines;
    SourceTable=Table11012156;
    DelayedInsert=No;
    PageType=List;
    TimerUpdate=1;
    AutoSplitKey=Yes;
    PromotedActionCategoriesML=ENU=New,Process,Report,Copy,Text;
    OnInit=BEGIN
             RAWEditable := TRUE;
             RecipeGroupChildEditable := TRUE;
             RecipeChildEditable := TRUE;
             SetCodeEditable := TRUE;
             PlantTypeEditable := TRUE;
             ItemNoEditable := TRUE;
             TradeItemEditable := TRUE;
             VendorTradeItemEditable := TRUE;
             BasicItemEditable := TRUE;
             ManufacturerEditable := TRUE;
             CodeEditable := TRUE;
             TimeQuantityEditable := TRUE;
             UnitOfTimeEditable := TRUE;
             SurchargeTypeEditable := TRUE;
             SurchargePercEditable := TRUE;
             SubOperationCodeEditable := TRUE;
             NormGroupEditable := TRUE;
             NormEditable := TRUE;
             DiscountPercEditable := TRUE;
             GrossPriceEditable := TRUE;
             PlantPriceEditable := TRUE;
             SubcontractingPriceEditable := TRUE;
             MaterialPriceEditable := TRUE;
             RateCodeEditable := TRUE;
             WageComponentEditable := TRUE;  //DP00236
             BuyBackPriceEditable := TRUE;
             BuyBackPercEditable := TRUE;
             DisciplineEditable := TRUE;
             TradeSpecialityEditable := TRUE;
             TradeExpertiseEditable := TRUE;
             MaintenanceIntervalEditable := TRUE;
             MaintenanceRelationEditable := TRUE;
             CostObjectEditable := TRUE;
             QuantityEditable := TRUE;
             LBWEditable := TRUE;

             AdditionalCostEditable := TRUE;
             VendorEditable := TRUE;
             PriceAgreementEditable := TRUE;
             AskForQuoteEditable := TRUE;
             DocumentNoEditable := TRUE;
             LineStatusEditable := TRUE;
             UnitOfMeasureEditable := TRUE;
             DescriptionEditable := TRUE;
           END;

    OnOpenPage=VAR
                 CompRel@11012000 : Record 11012059;
                 CentrManagementCU@11012001 : Codeunit 11012010;
                 NavBln@11012002 : Boolean;
                 DiscBln@1100485000 : Boolean;
                 DiscGrpBln@1100528300 : Boolean;
                 RcpBln@11012005 : Boolean;
               BEGIN
                 IF "Estimate No." = '' THEN BEGIN
                   CumEstFldVisible := (FALSE);
                   CumRcpFldVisible := (FALSE);
                   IF CompRel.READPERMISSION THEN BEGIN
                     CentrManagementCU.ItemFormEditable(NavBln,DiscBln,DiscGrpBln,RcpBln);
                     IF RcpBln THEN
                       CurrPage.EDITABLE(FALSE);
                   END;
                   AskForQuoteEditable := FALSE;
                 END ELSE BEGIN
                   GetFilterZeroLines;
                 END;

                 IF NOT EstRAWSetup.READPERMISSION THEN
                   RAWEnabled:= FALSE
                 ELSE
                   RAWEnabled:= TRUE;
               END;

    OnAfterGetRecord=BEGIN
                       DescriptionIndent := 0;
                       CALCFIELDS("Estimate Quantity","Estimate Part Quantity");
                       DetermineCostObject(1);
                       RefQuote := RouteRefMgtCU.GetQuoteOfReference("Purchase Route Reference");
                       GetItemSpecifications;

                       IF gFromReference THEN BEGIN
                         gFromReference := FALSE;
                         SETRANGE("Line No.");
                       END;
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=VAR
                  lvRcpLineRec@1100525001 : Record 11012156;
                BEGIN
                  CostObject := '';
                  RefQuote := '';
                  IF "Estimate No." = '' THEN BEGIN
                    IF RecipeRec.GET("Recipe Group",Recipe) THEN BEGIN
                      "Norm Group" := RecipeRec."Norm Group";
                    END;
                  END;
                  "Recipe Group (Child)" := "Recipe Group";  //db, 01-08-05

                  //db.sn, 08-10-10: M22182
                  IF "Estimate No." <> '' THEN BEGIN
                    lvRcpLineRec := xRec;
                    lvRcpLineRec.SETRANGE("Estimate No.", "Estimate No.");
                    lvRcpLineRec.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
                    lvRcpLineRec.SETRANGE("Part Group", "Part Group");
                    lvRcpLineRec.SETRANGE(Part, Part);
                    lvRcpLineRec.SETRANGE("Estimate Line", "Estimate Line");
                    lvRcpLineRec.SETRANGE("Recipe Group", "Recipe Group");
                    lvRcpLineRec.SETRANGE(Recipe, Recipe);
                    IF BelowxRec THEN BEGIN
                      IF NOT lvRcpLineRec.FIND('=') THEN
                        lvRcpLineRec.INIT;
                    END ELSE BEGIN
                      IF NOT lvRcpLineRec.FIND('<') THEN
                        lvRcpLineRec.INIT;
                    END;
                    IF lvRcpLineRec."Recipe Level" <> 0 THEN BEGIN
                      "Recipe (Child)" := lvRcpLineRec."Recipe (Child)";
                      "Recipe Group (Child)" := lvRcpLineRec."Recipe Group (Child)";
                    END;
                     IF lvRcpLineRec."Recipe Header" = TRUE THEN
                      "Recipe Level" := lvRcpLineRec."Recipe Level" + 1
                    ELSE
                      "Recipe Level" := lvRcpLineRec."Recipe Level";
                  END;
                  //db.en, 08-10-10: M22182
                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=BEGIN
                     IF IsFixed THEN BEGIN
                       IF "Estimate No." = '' THEN
                         ERROR(Text000, FIELDCAPTION(Recipe))
                       ELSE
                         ERROR(Text000, FIELDCAPTION("Estimate No."));
                     END;
                     CheckHideZeroLines;  //C025240
                   END;

    OnModifyRecord=BEGIN
                     IF IsFixed THEN BEGIN
                       CurrPage.UPDATE(FALSE);
                       IF "Estimate No." = '' THEN
                         ERROR(Text001, FIELDCAPTION(Recipe))
                       ELSE
                         ERROR(Text001, FIELDCAPTION("Estimate No."));
                     END;

                     IF "Recipe (Child)" = '' THEN "Recipe Group (Child)" := '';  //db, 01-08-05
                   END;

    OnDeleteRecord=BEGIN
                     IF IsFixed THEN BEGIN
                       CurrPage.UPDATE(FALSE);
                       IF "Estimate No." = '' THEN
                         ERROR(Text002, FIELDCAPTION(Recipe))
                       ELSE
                         ERROR(Text002, FIELDCAPTION("Estimate No."));
                     END;

                     RouteRefMgtCU.CheckDeleteRcpLineHasQuoteOLD(Rec, TRUE);
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1905064604;1 ;ActionGroup;
                      CaptionML=ENU=&Copy }
      { 1900004504;2 ;Action    ;
                      CaptionML=ENU=Show Buffer;
                      Promoted=Yes;
                      Image=Allocations;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowBuffer;
                               END;
                                }
      { 1900772504;2 ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=ENU=Copy &to Buffer;
                      Promoted=Yes;
                      Image=SelectLineToApply;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CopyToBuffer;
                               END;
                                }
      { 1903326104;2 ;Action    ;
                      ShortCutKey=Shift+F11;
                      CaptionML=ENU=Copy from Buffer;
                      Promoted=Yes;
                      Image=PostApplication;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CopyFromBuffer;
                               END;
                                }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1906689404;2 ;Action    ;
                      CaptionML=ENU=&Explode Sets;
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeSetLines;
                               END;
                                }
      { 1904814204;2 ;Action    ;
                      CaptionML=ENU=Add Std. P&lant Costs and Items;
                      Image=Costs;
                      OnAction=BEGIN
                                 InsertPlantCostLines;
                               END;
                                }
      { 1100525013;2 ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=ENU=Zero Lines (on/off);
                      Image=GetLines;
                      OnAction=BEGIN
                                 HandleZeroLines;
                               END;
                                }
      { 1100525015;2 ;Action    ;
                      CaptionML=ENU=&Surcharge;
                      Promoted=Yes;
                      Image=InsertStartingFee;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 RecipeLine@1100525001 : Record 11012156;
                               BEGIN
                                 RecipeLine.COPY(Rec);
                                 CurrPage.SETSELECTIONFILTER(RecipeLine);
                                 RecipeLine.CreateCharge;
                                 RecalcTotals;
                               END;
                                }
      { 1100525001;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1907460704;1 ;ActionGroup;
                      CaptionML=ENU=&Estimate Line }
      { 1100525011;2 ;Action    ;
                      CaptionML=ENU=&Coding;
                      RunObject=Page 11012186;
                      RunPageLink=Estimate No.=FIELD(Estimate No.),
                                  Sub-Estimate No.=FIELD(Sub-Estimate No.),
                                  Part Group=FIELD(Part Group),
                                  Part=FIELD(Part),
                                  Estimate Line=FIELD(Estimate Line);
                      Promoted=Yes;
                      Image=ItemTrackingLines;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 EstimateManagementRTC@1100525000 : Codeunit 11130010;
                               BEGIN
                               END;
                                }
      { 1100525009;2 ;Action    ;
                      CaptionML=ENU=&Totals;
                      RunObject=Page 11012199;
                      RunPageLink=Estimate No.=FIELD(Estimate No.),
                                  Sub-Estimate No.=FIELD(Sub-Estimate No.),
                                  Part Group=FIELD(Part Group),
                                  Part=FIELD(Part),
                                  Estimate Line=FIELD(Estimate Line);
                      Promoted=Yes;
                      Image=LedgerBudget;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 EstimateManagementRTC@1100525000 : Codeunit 11130010;
                               BEGIN
                               END;
                                }
      { 1100525007;1 ;ActionGroup;
                      CaptionML=ENU=&Recipe Line }
      { 1905582304;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=&Internal Text;
                      Promoted=Yes;
                      Image=SNInfo;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 EditText(0);
                               END;
                                }
      { 1904135904;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+E;
                      CaptionML=ENU=&External Text;
                      Promoted=Yes;
                      Image=SNInfo;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 EditText(1);
                               END;
                                }
      { 1904871004;2 ;Action    ;
                      CaptionML=ENU=Purchase Route References;
                      Image=ContactReference;
                      OnAction=BEGIN
                                 ShowPurchRouteRef;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                GroupType=Repeater }

    { 1210190012;2;Field  ;
                SourceExpr="Project No.";
                Visible=FALSE }

    { 1100525032;2;Field  ;
                SourceExpr="Project Planning Activity Code";
                Visible=FALSE }

    { 1210190020;2;Field  ;
                SourceExpr=Element;
                Visible=FALSE }

    { 1210190022;2;Field  ;
                SourceExpr="Recipe Group (Child)";
                Visible=FALSE }

    { 1210190042;2;Field  ;
                SourceExpr="Recipe (Child)";
                Visible=FALSE;
                OnValidate=BEGIN
                             RecipeChildOnAfterValidate;
                           END;

                OnDrillDown=VAR
                              RcpFrm@1100485001 : Page 11012217;
                            BEGIN
                              IF "Recipe (Child)" = '' THEN EXIT;
                              RecipeRec.RESET;
                              RecipeRec.SETRANGE("Recipe Group", "Recipe Group (Child)");
                              RecipeRec.SETRANGE("No.", "Recipe (Child)");
                              RcpFrm.SETTABLEVIEW(RecipeRec);
                              RcpFrm.RUNMODAL;
                            END;
                             }

    { 1100525000;2;Field  ;
                SourceExpr="Set Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             SetCodeOnAfterValidate;
                           END;
                            }

    { 1100485046;2;Field  ;
                SourceExpr="Plant Type";
                Visible=FALSE;
                OnValidate=BEGIN
                             PlantTypeOnAfterValidate;
                           END;
                            }

    { 4   ;2   ;Field     ;
                SourceExpr="Item No.";
                Editable=ItemNoEditable;
                OnValidate=BEGIN
                             ItemNoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           IF HandleLookupItem(FIELDNO("Item No.")) THEN
                             CurrPage.UPDATE(TRUE)  //db, 09-03-07 (call 8283)
                           ELSE
                             IF ("Item No." <> xRec."Item No.") AND
                                (Quantity <> 0)
                             THEN
                               RecalcTotals;
                         END;
                          }

    { 6   ;2   ;Field     ;
                SourceExpr=Manufacturer;
                Editable=ManufacturerEditable;
                OnLookup=BEGIN
                           GabiVendorRec.HandleVendorLookup(1, Manufacturer);
                         END;
                          }

    { 8   ;2   ;Field     ;
                SourceExpr="Basic Item";
                Editable=BasicItemEditable;
                OnValidate=BEGIN
                             BasicItemOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           IF HandleLookupItem(FIELDNO("Basic Item")) THEN
                             CurrPage.UPDATE(TRUE)  //db, 09-03-07 (call 8283)
                           ELSE
                             IF ("Basic Item" <> xRec."Basic Item") AND
                                (Quantity <> 0)
                             THEN
                               RecalcTotals;
                         END;
                          }

    { 10  ;2   ;Field     ;
                SourceExpr="Vendor (Trade Item)";
                Editable=VendorTradeItemEditable;
                OnLookup=VAR
                           lvItem@1100485000 : Code[20];
                         BEGIN
                           lvItem := "Vendor (Trade Item)";
                           GabiVendorRec.HandleVendorLookup(2, lvItem);
                           VALIDATE("Vendor (Trade Item)", lvItem);
                         END;
                          }

    { 12  ;2   ;Field     ;
                SourceExpr="Trade Item";
                Editable=TradeItemEditable;
                OnValidate=BEGIN
                             TradeItemOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           IF HandleLookupItem(FIELDNO("Trade Item")) THEN
                             CurrPage.UPDATE(TRUE)  //db, 09-03-07 (call 8283)
                           ELSE
                             IF ("Trade Item" <> xRec."Trade Item") AND
                                (Quantity <> 0)
                             THEN
                               RecalcTotals;
                         END;
                          }

    { 16  ;2   ;Field     ;
                SourceExpr="Item Brand";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr="Item Type";
                Visible=FALSE }

    { 1100485020;2;Field  ;
                SourceExpr="Item Series";
                Visible=FALSE }

    { 1210190026;2;Field  ;
                Name=CostObject;
                CaptionML=ENU=Cost Object;
                SourceExpr=CostObject;
                Visible=FALSE;
                Editable=CostObjectEditable;
                OnValidate=BEGIN
                             ProcessCostObject(1);  //db, 18-11-04
                           END;

                OnLookup=BEGIN
                           IF "Recipe (Child)" <> '' THEN EXIT;
                           ProcessCostObject(2);  //db, 18-11-04
                         END;
                          }

    { 1100485042;2;Field  ;
                SourceExpr="Cost Component";
                Visible=FALSE }

    { 1210190036;2;Field  ;
                SourceExpr=Code;
                Visible=FALSE;
                Editable=CodeEditable }

    { 20  ;2   ;Field     ;
                SourceExpr=Description;
                Editable=DescriptionEditable }

    { 1210190016;2;Field  ;
                SourceExpr="Internal Text Block";
                Visible=FALSE;
                OnValidate=BEGIN
                             InternalTextBlockOnPush;
                           END;
                            }

    { 1210190018;2;Field  ;
                SourceExpr="External Text Block";
                Visible=FALSE;
                OnValidate=BEGIN
                             ExternalTextBlockOnPush;
                           END;
                            }

    { 22  ;2   ;Field     ;
                SourceExpr="Time Quantity";
                Visible=FALSE;
                Editable=TimeQuantityEditable;
                OnValidate=BEGIN
                             TimeQuantityOnAfterValidate;
                           END;
                            }

    { 24  ;2   ;Field     ;
                SourceExpr="Unit of Time";
                Visible=FALSE;
                Editable=UnitOfTimeEditable }

    { 1210190006;2;Field  ;
                BlankZero=Yes;
                SourceExpr=Length;
                Visible=FALSE }

    { 1210190008;2;Field  ;
                BlankZero=Yes;
                SourceExpr=Width;
                Visible=FALSE }

    { 1210190010;2;Field  ;
                BlankZero=Yes;
                SourceExpr=Height;
                Visible=FALSE }

    { 1100525002;2;Field  ;
                SourceExpr=Weight;
                Visible=FALSE }

    { 1100525004;2;Field  ;
                SourceExpr="Total Weight";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                SourceExpr=Quantity;
                Editable=QuantityEditable;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;
                            }

    { 1210190014;2;Field  ;
                Name=CumRcpFld;
                CaptionML=ENU=Total Quantity Recipe;
                SourceExpr=ROUND(Quantity * "Estimate Part Quantity");
                Visible=CumRcpFldVisible }

    { 28  ;2   ;Field     ;
                Name=CumEstFld;
                CaptionML=ENU=Total Quantity Estimate;
                BlankZero=Yes;
                SourceExpr=GetTotalQuantityEstimate;
                Visible=CumEstFldVisible }

    { 30  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Editable=UnitOfMeasureEditable }

    { 1100525020;2;Field  ;
                SourceExpr="Ignore Recipe Quantity";
                OnValidate=BEGIN
                             IgnoreRecipeQuantityOnAfterVal;
                           END;
                            }

    { 1210190004;2;Field  ;
                SourceExpr="Line Status";
                Editable=LineStatusEditable }

    { 1210190002;2;Field  ;
                SourceExpr="Surcharge Type";
                Editable=SurchargeTypeEditable }

    { 1210190000;2;Field  ;
                SourceExpr="Surcharge %";
                Editable=SurchargePercEditable;
                OnValidate=BEGIN
                             Surcharge37OnAfterValidate;
                           END;

                OnDrillDown=VAR
                              ChrgFrm@1100485001 : Page 11012219;
                            BEGIN
                              ChrgRec.RESET;
                              ChrgRec.SETRANGE("Estimate No.", "Estimate No.");
                              ChrgRec.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
                              ChrgRec.SETRANGE("Part Group", "Part Group");
                              ChrgRec.SETRANGE(Part, Part);
                              ChrgRec.SETRANGE("Recipe Line", "Estimate Line");
                              ChrgRec.SETRANGE("Recipe Group", "Recipe Group");
                              ChrgRec.SETRANGE(Recipe, Recipe);
                              ChrgRec.SETRANGE("Surcharge Line", "Line No.");
                              ChrgFrm.SETTABLEVIEW(ChrgRec);
                              ChrgFrm.SetSelection(3);
                              ChrgFrm.RUNMODAL;

                              RecalcTotals;
                              CurrPage.UPDATE(TRUE);
                            END;
                             }

    { 32  ;2   ;Field     ;
                SourceExpr="Norm Group";
                Visible=FALSE;
                Editable=NormGroupEditable;
                OnValidate=BEGIN
                             NormGroupOnAfterValidate;
                           END;
                            }

    { 34  ;2   ;Field     ;
                SourceExpr="Sub Operation Code";
                Visible=FALSE;
                Editable=SubOperationCodeEditable;
                OnValidate=BEGIN
                             ProcessSubOperation;
                               SubOperationCodeOnAfterValidat;
                           END;

                OnLookup=VAR
                           OperFrm@1100485000 : Page 11012178;
                           OperRec@1100485001 : Record 11012166;
                         BEGIN
                           IF NOT FieldIsEditable(FIELDNO("Sub Operation Code")) THEN EXIT;  //db, 08-10-10: M22182

                           CLEAR(OperFrm);
                           OperFrm.LOOKUPMODE(TRUE);
                           OperFrm.SetSelection(DATABASE::"Recipe Line OLD","Estimate No.","Sub-Estimate No.",
                             Part,"Part Group","Estimate Line","Recipe Group",Recipe);

                           OperRec.Code := "Sub Operation Code";
                           OperFrm.SETRECORD(OperRec);

                           IF OperFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             OperFrm.GETRECORD(OperRec);
                             VALIDATE("Sub Operation Code", OperRec.Code);
                             ProcessSubOperation;  //db, 09-02-12: M32143
                             RecalcTotals;
                             UpdateEstLines;
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 36  ;2   ;Field     ;
                SourceExpr=Norm;
                Editable=NormEditable;
                OnValidate=BEGIN
                             NormOnAfterValidate;
                           END;

                OnLookup=VAR
                           NormGroupFrm@11012002 : Page 11012174;
                         BEGIN
                           //DP00381
                           IF HandleLookupOperationNorm THEN
                             CurrPage.UPDATE(TRUE)
                           ELSE
                             RecalcTotals;
                         END;
                          }

    { 1100525022;2;Field  ;
                SourceExpr="Production Rate";
                Visible=FALSE }

    { 1100525026;2;Field  ;
                SourceExpr="Norm (Plant)";
                Visible=FALSE;
                Enabled=RAWEnabled }

    { 1100525028;2;Field  ;
                SourceExpr="Production Rate (Plant)";
                Visible=FALSE;
                Enabled=RAWenabled }

    { 1100525030;2;Field  ;
                SourceExpr="Hours (Plant)";
                Visible=FALSE;
                Enabled=RAWenabled }

    { 38  ;2   ;Field     ;
                SourceExpr="Rate Code";
                Editable=RateCodeEditable;
                OnValidate=BEGIN
                             RateCodeOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           IF "Estimate No." = '' THEN BEGIN
                             EstSetup.GET;
                             IF EstSetup."Rates Based On" = EstSetup."Rates Based On"::"Budget Rate" THEN BEGIN
                               IF PAGE.RUNMODAL(0, BudgetRateRec) = ACTION::LookupOK THEN
                                 VALIDATE("Rate Code", BudgetRateRec.Code);
                             END ELSE BEGIN
                               RecipeRec.GET("Recipe Group", Recipe);
                               RateGroupRec.SETRANGE("Rate Group", RecipeRec."Rate Group");
                               IF PAGE.RUNMODAL(0, RateGroupRec) = ACTION::LookupOK THEN
                                 VALIDATE("Rate Code", RateGroupRec."Rate Code");
                             END;
                           END ELSE BEGIN
                             EstRateRec.SETRANGE("Estimate No.", "Estimate No.");
                             IF PAGE.RUNMODAL(0, EstRateRec) = ACTION::LookupOK THEN
                               VALIDATE("Rate Code", EstRateRec."Rate Code");
                           END;
                           RecalcTotals;  //db, 12-07-06
                         END;
                          }

    { 40  ;2   ;Field     ;
                SourceExpr=Rate }

    { 1100528900;2;Field  ;
                SourceExpr="Wage Component";
                Visible=FALSE;
                OnValidate=BEGIN
                             WageComponentOnAfterValidate;  //DP00236
                           END;
                            }

    { 46  ;2   ;Field     ;
                SourceExpr="Gross Price";
                Visible=FALSE;
                Editable=GrossPriceEditable;
                OnValidate=BEGIN
                             GrossPriceOnAfterValidate;
                           END;
                            }

    { 1100485052;2;Field  ;
                SourceExpr="Purchase Discount %";
                Visible=FALSE }

    { 1100485054;2;Field  ;
                SourceExpr="Sales Discount %";
                Visible=FALSE }

    { 44  ;2   ;Field     ;
                SourceExpr="Discount %";
                Visible=FALSE;
                Editable=DiscountPercEditable;
                OnValidate=BEGIN
                             Discount37OnAfterValidate;
                           END;
                            }

    { 42  ;2   ;Field     ;
                SourceExpr="Material Price";
                Editable=MaterialPriceEditable;
                OnValidate=BEGIN
                             MaterialPriceOnAfterValidate;
                           END;
                            }

    { 48  ;2   ;Field     ;
                SourceExpr="Subcontracting Price";
                Editable=SubcontractingPriceEditable;
                OnValidate=BEGIN
                             SubcontractingPriceOnAfterVali;
                           END;
                            }

    { 50  ;2   ;Field     ;
                SourceExpr="Plant Price";
                Editable=PlantPriceEditable;
                OnValidate=BEGIN
                             PlantPriceOnAfterValidate;
                           END;
                            }

    { 1100525006;2;Field  ;
                SourceExpr="Buy Back Price";
                Visible=FALSE;
                Editable=BuyBackPriceEditable }

    { 1100525008;2;Field  ;
                SourceExpr="Buy Back %";
                Visible=FALSE;
                Editable=BuyBackPercEditable }

    { 1100525024;2;Field  ;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE }

    { 1100485000;2;Field  ;
                DecimalPlaces=2:3;
                SourceExpr=Hours;
                Visible=FALSE }

    { 1100485002;2;Field  ;
                SourceExpr="Labor Amount";
                Visible=FALSE }

    { 1100485006;2;Field  ;
                SourceExpr="Material Amount";
                Visible=FALSE }

    { 1100485004;2;Field  ;
                SourceExpr="Gross Amount";
                Visible=FALSE }

    { 1100485008;2;Field  ;
                SourceExpr="Subcontracting Amount";
                Visible=FALSE }

    { 1100485010;2;Field  ;
                SourceExpr="Plant Amount";
                Visible=FALSE }

    { 1000000000;2;Field  ;
                SourceExpr=Amount }

    { 52  ;2   ;Field     ;
                SourceExpr="Price Reference Date";
                Visible=FALSE }

    { 1100525010;2;Field  ;
                SourceExpr="Plant Price Type";
                Visible=FALSE }

    { 1100525012;2;Field  ;
                SourceExpr="Start Rental Period";
                Visible=FALSE }

    { 1100525014;2;Field  ;
                SourceExpr="End Rental Period";
                Visible=FALSE }

    { 1100525016;2;Field  ;
                SourceExpr="Rental Period Formula";
                Visible=FALSE }

    { 1100525018;2;Field  ;
                SourceExpr="Rental Time Units";
                Visible=FALSE }

    { 1100485044;2;Field  ;
                SourceExpr="Norm Agreement";
                Visible=FALSE }

    { 1210190038;2;Field  ;
                SourceExpr="Price Agreement";
                Visible=FALSE;
                Editable=PriceAgreementEditable }

    { 1100485048;2;Field  ;
                SourceExpr="Subcontracting Agreement";
                Visible=FALSE }

    { 1100485050;2;Field  ;
                SourceExpr="Plant Agreement";
                Visible=FALSE }

    { 1210190028;2;Field  ;
                SourceExpr="Ask for Quote";
                Visible=FALSE;
                Editable=AskForQuoteEditable }

    { 1210190032;2;Field  ;
                CaptionML=ENU=Quote No.;
                SourceExpr=RefQuote;
                Visible=FALSE;
                Editable=FALSE;
                OnLookup=VAR
                           lvPurchHeadRec@1210190000 : Record 38;
                         BEGIN
                           IF (RefQuote = '') OR ("Estimate No." = '') THEN
                             EXIT;

                           IF (COPYSTR(RefQuote, 1, 1) = '<') THEN  // IF Quote No. is '<Nr.>', then more than one quote present
                             RouteRefMgtCU.ShowReferenceQuoteList("Purchase Route Reference")
                           ELSE BEGIN
                             lvPurchHeadRec.SETRANGE("Document Type", lvPurchHeadRec."Document Type"::Quote);
                             lvPurchHeadRec.SETRANGE("No.", RefQuote);
                             PAGE.RUNMODAL(PAGE::"Purchase Quote", lvPurchHeadRec);
                           END;
                         END;
                          }

    { 1210190030;2;Field  ;
                SourceExpr="Purchase Route Reference";
                Visible=FALSE }

    { 1210190034;2;Field  ;
                SourceExpr="Document No.";
                Visible=FALSE;
                Editable=DocumentNoEditable }

    { 1100485012;2;Field  ;
                SourceExpr="Additional Cost";
                Visible=FALSE;
                Editable=AdditionalCostEditable }

    { 1210190040;2;Field  ;
                SourceExpr=Vendor;
                Visible=FALSE;
                Editable=VendorEditable;
                OnValidate=BEGIN
                             VendorOnAfterValidate;
                           END;
                            }

    { 1100485014;2;Field  ;
                SourceExpr="Vendor Name";
                Visible=FALSE }

    { 1100485028;2;Field  ;
                SourceExpr=Subcontractor;
                Visible=FALSE;
                OnValidate=BEGIN
                             SubcontractorOnAfterValidate;
                           END;
                            }

    { 1100485030;2;Field  ;
                SourceExpr="Subcontractor Name";
                Visible=FALSE }

    { 1100485022;2;Field  ;
                SourceExpr=Discipline;
                Visible=FALSE;
                Editable=DisciplineEditable }

    { 1100485024;2;Field  ;
                SourceExpr="Trade Speciality";
                Visible=FALSE;
                Editable=TradeSpecialityEditable }

    { 1100485026;2;Field  ;
                SourceExpr="Trade Expertise";
                Visible=FALSE;
                Editable=TradeExpertiseEditable }

    { 1100485032;2;Field  ;
                SourceExpr="Scheme Code";
                Visible=FALSE }

    { 1100485034;2;Field  ;
                SourceExpr=Comments;
                Visible=FALSE }

    { 1100485038;2;Field  ;
                SourceExpr="Comments for Logistics";
                Visible=FALSE }

    { 1100485040;2;Field  ;
                SourceExpr="Material Sheet";
                Visible=FALSE }

    { 1100485036;2;Field  ;
                SourceExpr=Supply;
                Visible=FALSE }

    { 1100528600;2;Field  ;
                SourceExpr="Price History 0 Exists" }

    { 1100525003;0;Container;
                ContainerType=FactBoxArea }

    { 1100525005;1;Part   ;
                SubPageLink=Estimate No.=FIELD(Estimate No.),
                            Sub-Estimate No.=FIELD(Sub-Estimate No.),
                            Part Group=FIELD(Part Group),
                            Part=FIELD(Part),
                            Estimate Line=FIELD(Estimate Line),
                            Recipe=FIELD(Recipe),
                            Recipe Group=FIELD(Recipe Group),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11130156;
                PartType=Page }

  }
  CODE
  {
    VAR
      Text000@11012013 : TextConst 'ENU=Adding not allowed: %1 is fixed.';
      Text001@11012014 : TextConst 'ENU=Changing not allowed: %1 is fixed.';
      Text002@11012015 : TextConst 'ENU=Deleting not allowed: %1 is fixed.';
      EstSetup@1210190018 : Record 11012150;
      EstRAWSetup@1100525002 : Record 11125673;
      EstRec@1210190022 : Record 11012151;
      EstLineRec@11012006 : Record 11012154;
      RecipeRec@11012007 : Record 11012155;
      RcpLineRec@1210190009 : Record 11012156;
      PartLineRec@1100485001 : Record 11012187;
      RateGroupRec@11012009 : Record 11012162;
      EstRateRec@11012011 : Record 11012160;
      BudgetRateRec@1210190019 : Record 11012000;
      ChrgRec@1210190005 : Record 11012175;
      GabiVendorRec@1100485002 : Record 11012304;
      DimValRec@1210190021 : Record 349;
      OldDimValRec@1210190027 : Record 349;
      RouteRefMgtCU@1210190025 : Codeunit 11012045;
      EstMgmt@1100525001 : Codeunit 11012153;
      EstMgmtFrm@1100525000 : Codeunit 11012157;
      chrg0@1210190000 : Boolean;
      chrg1@1210190001 : Boolean;
      chrg2@1210190002 : Boolean;
      chrg3@1210190003 : Boolean;
      chrg4@1210190004 : Boolean;
      gFromReference@1210190026 : Boolean;
      CostObject@1210190020 : Code[20];
      RefQuote@1210190024 : Code[20];
      Text009@1100485000 : TextConst 'ENU=Add Line first.';
      BufferMgt@1100485003 : Codeunit 11012150;
      RAWEnabled@1100525035 : Boolean INDATASET;
      RAWEditable@1100525036 : Boolean INDATASET;
      RecipeGroupChildEditable@1100525003 : Boolean INDATASET;
      RecipeChildEditable@1100525004 : Boolean INDATASET;
      SetCodeEditable@1100525005 : Boolean INDATASET;
      PlantTypeEditable@1100525006 : Boolean;
      ItemNoEditable@1100525007 : Boolean INDATASET;
      BasicItemEditable@1100525008 : Boolean INDATASET;
      VendorTradeItemEditable@1100525009 : Boolean INDATASET;
      TradeItemEditable@1100525010 : Boolean INDATASET;
      CodeEditable@1100525011 : Boolean INDATASET;
      TimeQuantityEditable@1100525012 : Boolean INDATASET;
      UnitOfTimeEditable@1100525013 : Boolean INDATASET;
      SurchargeTypeEditable@1100525014 : Boolean INDATASET;
      SurchargePercEditable@1100525015 : Boolean INDATASET;
      NormGroupEditable@1100525018 : Boolean INDATASET;
      SubOperationCodeEditable@1100525017 : Boolean INDATASET;
      NormEditable@1100525016 : Boolean INDATASET;
      RateCodeEditable@1100525024 : Boolean INDATASET;
      WageComponentEditable@1100528900 : Boolean;
      MaterialPriceEditable@1100525023 : Boolean INDATASET;
      SubcontractingPriceEditable@1100525022 : Boolean INDATASET;
      PlantPriceEditable@1100525021 : Boolean INDATASET;
      GrossPriceEditable@1100525020 : Boolean INDATASET;
      DiscountPercEditable@1100525019 : Boolean INDATASET;
      BuyBackPriceEditable@1100525026 : Boolean INDATASET;
      BuyBackPercEditable@1100525025 : Boolean INDATASET;
      DisciplineEditable@1100525029 : Boolean INDATASET;
      TradeSpecialityEditable@1100525028 : Boolean INDATASET;
      TradeExpertiseEditable@1100525027 : Boolean INDATASET;
      MaintenanceIntervalEditable@1100525034 : Boolean INDATASET;
      MaintenanceRelationEditable@1100525033 : Boolean INDATASET;
      QuantityEditable@1100525030 : Boolean INDATASET;
      LBWEditable@1100525031 : Boolean INDATASET;
      CostObjectEditable@1100525032 : Boolean INDATASET;
      DescriptionEditable@19061412 : Boolean INDATASET;
      ManufacturerEditable@19042322 : Boolean INDATASET;
      UnitOfMeasureEditable@19007173 : Boolean INDATASET;
      LineStatusEditable@19051744 : Boolean INDATASET;
      DocumentNoEditable@19064841 : Boolean INDATASET;
      AskForQuoteEditable@19065696 : Boolean INDATASET;
      PriceAgreementEditable@19020391 : Boolean INDATASET;
      VendorEditable@19059821 : Boolean INDATASET;
      AdditionalCostEditable@19064947 : Boolean INDATASET;
      CumEstFldVisible@19073827 : Boolean INDATASET;
      CumRcpFldVisible@19074581 : Boolean INDATASET;
      DescriptionIndent@19057867 : Integer INDATASET;
      SurchargePercEmphasize@19034906 : Boolean INDATASET;
      NormEmphasize@19010576 : Boolean INDATASET;
      GrossPriceEmphasize@19074771 : Boolean INDATASET;
      MaterialPriceEmphasize@19051745 : Boolean INDATASET;
      SubcontractingPriceEmphasize@19001766 : Boolean INDATASET;
      PlantPriceEmphasize@19034801 : Boolean INDATASET;

    PROCEDURE ChargePresent@7();
    BEGIN
      chrg0 := FALSE;
      chrg1 := FALSE;
      chrg2 := FALSE;
      chrg3 := FALSE;
      chrg4 := FALSE;

      ChrgRec.RESET;
      ChrgRec.SETRANGE("Estimate No.", "Estimate No.");
      ChrgRec.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
      ChrgRec.SETRANGE("Part Group", "Part Group");
      ChrgRec.SETRANGE(Part, Part);
      ChrgRec.SETRANGE("Recipe Line", "Estimate Line");
      ChrgRec.SETRANGE("Recipe Group", "Recipe Group");
      ChrgRec.SETRANGE(Recipe, Recipe);
      ChrgRec.SETRANGE("Basic Line", "Line No.");
      ChrgRec.SETRANGE("Surcharge Line");
      IF ChrgRec.FIND('-') THEN BEGIN
        REPEAT
          IF RcpLineRec.GET("Estimate No.", "Sub-Estimate No.", "Part Group", Part, "Estimate Line",
                            "Recipe Group", Recipe, ChrgRec."Surcharge Line") THEN BEGIN
            CASE RcpLineRec."Surcharge Type" OF
              RcpLineRec."Surcharge Type"::Labor:
                chrg1 := TRUE;
              RcpLineRec."Surcharge Type"::Material:
                chrg2 := TRUE;
              RcpLineRec."Surcharge Type"::Subcontracting:
                chrg3 := TRUE;
              RcpLineRec."Surcharge Type"::Plant:
                chrg4 := TRUE;
            END;
          END;
        UNTIL ChrgRec.NEXT = 0;
      END;

      ChrgRec.SETRANGE("Basic Line");
      ChrgRec.SETRANGE("Surcharge Line", "Line No.");
      IF ChrgRec.FIND('-') THEN
        chrg0 := TRUE;

      SurchargePercEmphasize := chrg0;
      NormEmphasize := chrg1;
      GrossPriceEmphasize := chrg2;
      MaterialPriceEmphasize := chrg2;
      SubcontractingPriceEmphasize := chrg3;
      PlantPriceEmphasize := chrg2;
    END;

    PROCEDURE RecalcTotals@1();
    BEGIN
      CurrPage.SAVERECORD;
      CalculateTotals;
      CheckRecipeCharge;
      UpdateEstLines;
      UpdateRelatedRecipe("Recipe Group", Recipe);
      CurrPage.UPDATE(FALSE); //mg, 12-06-12: C000053; db, 30-05-13: C007523 (true->false)
    END;

    PROCEDURE CheckTimer@1210190000();
    BEGIN
      IF EstLineRec.GET("Estimate No.", "Sub-Estimate No.", "Part Group", Part, "Estimate Line") THEN BEGIN
        IF (EstLineRec.Norm * EstLineRec.Rate) + EstLineRec."Material Price" +
           EstLineRec."Subcontracting Price" + EstLineRec."Plant Price" <> "Total Recipe" THEN BEGIN
          UpdateEstLines;
        END;
      END;
    END;

    PROCEDURE EnterQuantity@1210190003() : Boolean;
    BEGIN
      IF "Surcharge Type" <> "Surcharge Type"::" " THEN EXIT(FALSE);
      IF Length <> 0 THEN EXIT(FALSE);
      IF Width <> 0 THEN EXIT(FALSE);
      IF Height <> 0 THEN EXIT(FALSE);
      EXIT(TRUE);
    END;

    PROCEDURE EditText@8(lvType@1210190000 : 'intern,extern');
    VAR
      TextFrm@11012001 : Page 11012120;
    BEGIN
      IF "Line No." = 0 THEN
        ERROR(Text009);

      TextFrm.TextType(lvType);
      TextFrm.SetSelection(DATABASE::"Recipe Line OLD","Estimate No.","Sub-Estimate No.",
        "Part Group",Part,"Recipe Group",Recipe,"Estimate Line","Line No.");

      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    PROCEDURE ProcessCostObject@1210190007(lvAction@1210190000 : Integer);
    BEGIN
      IF lvAction = 0 THEN BEGIN   //before input
        IF CostObject <> '' THEN BEGIN
          OldDimValRec.RESET;
          OldDimValRec.SETRANGE("Global Dimension No.",2);
          OldDimValRec.SETRANGE(Code, CostObject);
          OldDimValRec.FIND('-');
        END ELSE BEGIN
          CLEAR(OldDimValRec);
        END;
      END;

      IF lvAction = 1 THEN BEGIN   //validate
        IF CostObject <> '' THEN BEGIN
          DimValRec.RESET;
          DimValRec.SETRANGE("Global Dimension No.",2);
            DimValRec.SETRANGE(Code, CostObject);
          IF OldDimValRec.Code <> '' THEN
            DimValRec.SETRANGE("Cost Type", OldDimValRec."Cost Type");
          DimValRec.FIND('-');
        END ELSE BEGIN
          IF "Item No." + "Basic Item" + "Trade Item" <> '' THEN
            DimValRec.TESTFIELD("Cost Type", DimValRec."Cost Type"::Material);
        END;
        DetermineCostObject(2);
      END;

      IF lvAction = 2 THEN BEGIN   //lookup
        DimValRec.RESET;
        DimValRec.Code := CostObject;
        DimValRec.SETRANGE("Global Dimension No.",2);
        IF OldDimValRec.Code <> '' THEN
          DimValRec.SETRANGE("Cost Type", OldDimValRec."Cost Type");
        IF PAGE.RUNMODAL(PAGE::"Cost Object List", DimValRec) = ACTION::LookupOK THEN BEGIN
          CostObject := DimValRec.Code;
          ProcessCostObject(1);
        END;
      END;
    END;

    PROCEDURE DetermineCostObject@1210190002(lvAction@1210190000 : Integer);
    BEGIN
      IF lvAction = 1 THEN BEGIN
        CostObject := '';
        IF "Item No." + "Basic Item" + "Trade Item" <> '' THEN
          CostObject := "Cost Object Material";
        IF CostObject = '' THEN
          CostObject := "Cost Object Labor";
        IF CostObject = '' THEN
          CostObject := "Cost Object Material";
        IF CostObject = '' THEN
          CostObject := "Cost Object Subcontracting";
        IF CostObject = '' THEN
          CostObject := "Cost Object Plant";
      END ELSE BEGIN
        "Cost Object Labor" := '';
        "Cost Object Material" := '';
        "Cost Object Subcontracting" := '';
        "Cost Object Plant" := '';
        IF DimValRec."Cost Type" = DimValRec."Cost Type"::Labor THEN
          VALIDATE("Cost Object Labor", DimValRec.Code);
        IF DimValRec."Cost Type" = DimValRec."Cost Type"::Material THEN
          VALIDATE("Cost Object Material", DimValRec.Code);
        IF DimValRec."Cost Type" = DimValRec."Cost Type"::Subcontracting THEN
          VALIDATE("Cost Object Subcontracting", DimValRec.Code);
        IF DimValRec."Cost Type" = DimValRec."Cost Type"::Plant THEN
          VALIDATE("Cost Object Plant", DimValRec.Code);

        CheckCostObject(CostObject,TRUE);  //function deleted from table validation
        IF "Item No." + "Basic Item" + "Trade Item" = '' THEN BEGIN
          IF "Sub Operation Code" <> '' THEN
            ProcessSubOperation
          ELSE
            Description := DimValRec.Name;
        END;
      END;
    END;

    PROCEDURE HandleZeroLines@1210190005();
    BEGIN
      HandleZeroLinesByUser(Rec);  //C025240
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE GetFilterZeroLines@1210190004();
    BEGIN
      GetFilterZeroLinesByUser(Rec);  //C025240
    END;

    PROCEDURE ShowPurchRouteRef@1210190006();
    BEGIN
      RouteRefMgtCU.ShowReferenceList("Purchase Route Reference");
    END;

    PROCEDURE InitSelectionFromReference@1210190008(IRcpLineNo@1210190000 : Integer);
    BEGIN
      gFromReference := TRUE;
      SETRANGE("Line No.", IRcpLineNo);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE CopyToBuffer@1100485003();
    VAR
      RecipeLine@1100525000 : Record 11012156;
    BEGIN
      RecipeLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(RecipeLine);
      BufferMgt.CopyToBuffer(1,EstLineRec,RecipeLine,PartLineRec);
    END;

    PROCEDURE CopyFromBuffer@1100485002();
    BEGIN
      BufferMgt.CopyFromBuffer(1,EstLineRec,Rec,PartLineRec);
    END;

    PROCEDURE ShowBuffer@1100485001();
    BEGIN
      BufferMgt.ShowBuffer(1,EstLineRec,Rec,PartLineRec);
    END;

    PROCEDURE InsertPlantCostLines@1100525001();
    VAR
      Rec2@1100525000 : Record 11012156;
    BEGIN
      Rec2.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(Rec2);
      Rec2.SETFILTER(Rec2."Plant Type",'<>%1','');

      IF EstMgmt.InsPltCostItmLinesToRcpLine(Rec2) THEN
        CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE ExplodeSetLines@1100525002();
    VAR
      Rec2@1100525000 : Record 11012156;
    BEGIN
      Rec2.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(Rec2);
      Rec2.SETFILTER(Rec2."Set Code",'<>%1','');

      IF EstMgmt.ExplodeSetLinesToRcpLine(Rec2) THEN
        CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE FieldIsEditable@1100525008(FieldNo2@1100525000 : Integer) : Boolean;
    BEGIN
      EXIT(EstMgmtFrm.RcpFieldIsEditable(FieldNo2,Rec));
    END;

    LOCAL PROCEDURE RecipeChildOnAfterValidate@19032467();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE SetCodeOnAfterValidate@19013329();
    BEGIN
      CurrPage.SAVERECORD;
      ExplodeSetLines;
    END;

    LOCAL PROCEDURE PlantTypeOnAfterValidate@19013868();
    BEGIN
      CurrPage.SAVERECORD;
      InsertPlantCostLines;
    END;

    LOCAL PROCEDURE ItemNoOnAfterValidate@19061248();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE BasicItemOnAfterValidate@19054956();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE TradeItemOnAfterValidate@19075338();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE TimeQuantityOnAfterValidate@19030511();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE IgnoreRecipeQuantityOnAfterVal@19058719();
    BEGIN
      RecalcTotals;  //db, 15-09-11: M27731
    END;

    LOCAL PROCEDURE Surcharge37OnAfterValidate@19035353();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE NormGroupOnAfterValidate@19073036();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE SubOperationCodeOnAfterValidat@19058750();
    BEGIN
      RecalcTotals;  //db, 13-06-05
    END;

    LOCAL PROCEDURE NormOnAfterValidate@19051466();
    BEGIN
      "Norm Agreement" := TRUE; //db, 14-06-07
      RecalcTotals;
    END;

    LOCAL PROCEDURE RateCodeOnAfterValidate@19043554();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE WageComponentOnAfterValidate@1100528900();
    BEGIN
      //DP00236
      RecalcTotals;
    END;

    LOCAL PROCEDURE GrossPriceOnAfterValidate@19036441();
    BEGIN
      "Price Agreement" := TRUE; //db, 14-06-06
      RecalcTotals;
    END;

    LOCAL PROCEDURE Discount37OnAfterValidate@19039847();
    BEGIN
      "Price Agreement" := TRUE; //db, 14-06-06
      RecalcTotals;
    END;

    LOCAL PROCEDURE MaterialPriceOnAfterValidate@19066096();
    BEGIN
      "Price Agreement" := TRUE; //db, 14-06-06
      RecalcTotals;
    END;

    LOCAL PROCEDURE SubcontractingPriceOnAfterVali@19026415();
    BEGIN
      "Subcontracting Agreement" := TRUE; //db, 16-01-08
      RecalcTotals;
    END;

    LOCAL PROCEDURE PlantPriceOnAfterValidate@19075011();
    BEGIN
      "Plant Agreement" := TRUE; //db, 16-01-08
      RecalcTotals;
    END;

    LOCAL PROCEDURE VendorOnAfterValidate@19052966();
    BEGIN
      CALCFIELDS("Vendor Name");
    END;

    LOCAL PROCEDURE SubcontractorOnAfterValidate@19029042();
    BEGIN
      CALCFIELDS("Subcontractor Name");
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      SetEditable;  //db, 01-07-14: T005104

      CALCFIELDS("Labor Recipe", "Hours Recipe", "Material Recipe", "Gross Price Recipe",
                 "Subcontracting Recipe", "Plant Recipe", "Total Recipe");

      ChargePresent;

      IF ("Attached to Line No." <> 0) THEN
        DescriptionIndent := "Set Level";
      IF "Recipe Level" <> 0 THEN
        DescriptionIndent := "Recipe Level";   //db, 08-10-10: M22182
    END;

    LOCAL PROCEDURE CostObjectOnBeforeInput@19037399();
    BEGIN
      ProcessCostObject(0);  //db, 18-11-04
    END;

    LOCAL PROCEDURE OnTimer@19019642();
    BEGIN
      //for insert of records with copy/paste without validate of field which updates totals of related estimateline.
      CheckTimer;
    END;

    LOCAL PROCEDURE InternalTextBlockOnPush@19008801();
    BEGIN
      EditText(0);  //db, 12-11-09
    END;

    LOCAL PROCEDURE ExternalTextBlockOnPush@19064562();
    BEGIN
      EditText(1);  //db, 12-11-09
    END;

    PROCEDURE SetEditable@1100525000();
    VAR
      Fixed@1210190000 : Boolean;
    BEGIN
      Fixed := IsFixed;

      RAWEditable := NOT Fixed;
      RecipeGroupChildEditable := NOT Fixed;
      RecipeChildEditable := NOT Fixed;
      SetCodeEditable := NOT Fixed;
      PlantTypeEditable := NOT Fixed;
      ItemNoEditable := NOT Fixed;
      BasicItemEditable := NOT Fixed;
      ManufacturerEditable := NOT Fixed;
      VendorTradeItemEditable := NOT Fixed;
      TradeItemEditable := NOT Fixed;
      CodeEditable := NOT Fixed;
      TimeQuantityEditable := NOT Fixed;
      UnitOfTimeEditable := NOT Fixed;
      SurchargeTypeEditable := NOT Fixed;
      SurchargePercEditable := NOT Fixed;
      SubOperationCodeEditable := NOT Fixed;
      NormGroupEditable := NOT Fixed;
      NormEditable := NOT Fixed;

      RateCodeEditable := NOT Fixed;
      WageComponentEditable := NOT Fixed;  //DP00236
      GrossPriceEditable := NOT Fixed;
      DiscountPercEditable := NOT Fixed;
      MaterialPriceEditable := NOT Fixed;
      SubcontractingPriceEditable := NOT Fixed;
      PlantPriceEditable := NOT Fixed;
      BuyBackPriceEditable := NOT Fixed;
      BuyBackPercEditable := NOT Fixed;

      DisciplineEditable := NOT Fixed;
      TradeSpecialityEditable := NOT Fixed;
      TradeExpertiseEditable := NOT Fixed;

      MaintenanceIntervalEditable := NOT Fixed;
      MaintenanceRelationEditable := NOT Fixed;
      CostObjectEditable := NOT Fixed;
      QuantityEditable := NOT Fixed;
      LBWEditable := NOT Fixed;

      AdditionalCostEditable := NOT Fixed;
      VendorEditable := NOT Fixed;
      PriceAgreementEditable := NOT Fixed;
      AskForQuoteEditable := NOT Fixed;
      DocumentNoEditable := NOT Fixed;
      LineStatusEditable := NOT Fixed;
      UnitOfMeasureEditable := NOT Fixed;
      DescriptionEditable := NOT Fixed;

      IF NOT Fixed THEN BEGIN
        RecipeGroupChildEditable := FieldIsEditable(FIELDNO("Recipe Group (Child)"));
        RecipeChildEditable := FieldIsEditable(FIELDNO("Recipe (Child)"));
        SetCodeEditable := FieldIsEditable(FIELDNO("Set Code"));
        PlantTypeEditable := FieldIsEditable(FIELDNO("Plant Type"));
        ItemNoEditable := FieldIsEditable(FIELDNO("Item No."));
        ManufacturerEditable := FieldIsEditable(FIELDNO(Manufacturer));
        BasicItemEditable := FieldIsEditable(FIELDNO("Basic Item"));
        VendorTradeItemEditable := FieldIsEditable(FIELDNO("Vendor (Trade Item)"));
        TradeItemEditable := FieldIsEditable(FIELDNO("Trade Item"));
        CodeEditable := FieldIsEditable(FIELDNO(Code));
        TimeQuantityEditable := FieldIsEditable(FIELDNO("Time Quantity"));
        UnitOfTimeEditable := FieldIsEditable(FIELDNO("Unit of Time"));
        SurchargeTypeEditable := FieldIsEditable(FIELDNO("Surcharge Type"));
        SurchargePercEditable := FieldIsEditable(FIELDNO("Surcharge %"));
        SubOperationCodeEditable := FieldIsEditable(FIELDNO("Sub Operation Code"));
        NormGroupEditable := FieldIsEditable(FIELDNO("Norm Group"));
        NormEditable := FieldIsEditable(FIELDNO(Norm));
        RateCodeEditable := FieldIsEditable(FIELDNO("Rate Code"));
        WageComponentEditable := FieldIsEditable(FIELDNO("Wage Component"));  //DP00236
        GrossPriceEditable := FieldIsEditable(FIELDNO("Gross Price"));
        DiscountPercEditable := FieldIsEditable(FIELDNO("Discount %"));
        MaterialPriceEditable := FieldIsEditable(FIELDNO("Material Price"));
        SubcontractingPriceEditable := FieldIsEditable(FIELDNO("Subcontracting Price"));
        PlantPriceEditable := FieldIsEditable(FIELDNO("Plant Price"));
        BuyBackPriceEditable := FieldIsEditable(FIELDNO("Buy Back Price"));
        BuyBackPercEditable := FieldIsEditable(FIELDNO("Buy Back %"));
        DisciplineEditable := FieldIsEditable(FIELDNO(Discipline));
        TradeSpecialityEditable := FieldIsEditable(FIELDNO("Trade Speciality"));
        TradeExpertiseEditable := FieldIsEditable(FIELDNO("Trade Expertise"));
        CostObjectEditable := (("Recipe (Child)" = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
        LBWEditable := (EnterQuantity(1));
        QuantityEditable := (EnterQuantity(2));
      END;
    END;

    BEGIN
    END.
  }
}

