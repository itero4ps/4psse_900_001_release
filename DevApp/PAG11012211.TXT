OBJECT Page 11012211 Copy Sub-Estimate
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Copy Sub-Estimate;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    PageType=StandardDialog;
    OnQueryClosePage=BEGIN
                       CloseActionOK := CloseAction IN [ACTION::OK,ACTION::LookupOK];
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100525001;1;Group  ;
                CaptionML=ENU=Copy from;
                GroupType=Group }

    { 6   ;2   ;Field     ;
                CaptionML=ENU=Estimate;
                NotBlank=Yes;
                SourceExpr=EstFrom;
                OnValidate=BEGIN
                             EstRec."No." := EstFrom;
                             EstRec.DPA_FindRecWithDPAFilterAppld;
                             EstFromTxt := EstRec.Description;

                             CheckDefaultNormGroupFrom;  //db, 10-02-15: C009772
                           END;

                OnLookup=BEGIN
                           EstRec.RESET;
                           IF PAGE.RUNMODAL(PAGE::"Estimate List",EstRec) = ACTION::LookupOK THEN BEGIN
                              EstFrom := EstRec."No.";
                              EstFromTxt := EstRec.Description;
                              CheckDefaultNormGroupFrom;  //db, 10-02-15: C009772
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 8   ;2   ;Field     ;
                CaptionML=ENU=Estimate Description;
                SourceExpr=EstFromTxt;
                Importance=Standard;
                Editable=FALSE }

    { 7   ;2   ;Field     ;
                CaptionML=ENU=Estimate Part;
                NotBlank=Yes;
                SourceExpr=SubEstFrom;
                OnValidate=VAR
                             Chapter@1100485003 : Code[20];
                             Paragraph@1100485004 : Code[20];
                             Level@1100485001 : Integer;
                           BEGIN
                             FormatMgt.FormatSubEstimate(SubEstFrom,Chapter,Paragraph,Level,EstFrom,FALSE);
                             SubEstRec.GET(EstFrom,SubEstFrom);
                             SubEstFromTxt := SubEstRec.Description;
                             SubEstToTxt := SubEstRec.Description;

                             CheckDefaultNormGroupFrom;  //db, 10-02-15: C009772
                           END;

                OnLookup=BEGIN
                           SubEstRec.RESET;
                           SubEstRec.SETRANGE("Estimate No.",EstFrom);
                           IF PAGE.RUNMODAL(PAGE::"Sub-Estimate List",SubEstRec) = ACTION::LookupOK THEN BEGIN
                              EstRec.GET(SubEstRec."Estimate No.");
                              EstFrom := EstRec."No.";
                              EstFromTxt := EstRec.Description;
                              SubEstFrom := SubEstRec."Sub-Estimate No.";
                              SubEstFromTxt := SubEstRec.Description;
                              SubEstToTxt := SubEstRec.Description;
                              CheckDefaultNormGroupFrom;  //db, 10-02-15: C009772
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 9   ;2   ;Field     ;
                CaptionML=ENU=Estimate Part Description;
                SourceExpr=SubEstFromTxt;
                Importance=Standard;
                Editable=FALSE }

    { 1210190000;2;Field  ;
                CaptionML=ENU=Norm Group;
                SourceExpr=NormGroupFrom }

    { 1100525009;2;Field  ;
                CaptionML=ENU=Norm Group Description;
                SourceExpr=NormGroupFromTxt;
                Editable=FALSE }

    { 1100525000;1;Group  ;
                CaptionML=ENU=Copy to;
                GroupType=Group }

    { 11  ;2   ;Field     ;
                CaptionML=ENU=Estimate;
                NotBlank=Yes;
                SourceExpr=EstTo;
                OnValidate=BEGIN
                             EstRec."No." := EstTo;
                             EstRec.DPA_FindRecWithDPAFilterAppld;
                             EstToTxt := EstRec.Description;

                             CheckDefaultNormGroupTo;  //db, 10-02-15: C009772
                           END;

                OnLookup=BEGIN
                           EstRec.RESET;
                           IF PAGE.RUNMODAL(PAGE::"Estimate List",EstRec) = ACTION::LookupOK THEN BEGIN
                             EstTo := EstRec."No.";
                             EstToTxt := EstRec.Description;
                             CheckDefaultNormGroupTo;  //db, 10-02-15: C009772
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 12  ;2   ;Field     ;
                CaptionML=ENU=Estimate Description;
                SourceExpr=EstToTxt;
                Editable=FALSE }

    { 14  ;2   ;Field     ;
                CaptionML=ENU=Estimate Part;
                NotBlank=Yes;
                SourceExpr=SubEstTo;
                OnValidate=VAR
                             Chapter@1100485003 : Code[20];
                             Paragraph@1100485002 : Code[20];
                             Level@1100485001 : Integer;
                           BEGIN
                             FormatMgt.FormatSubEstimate(SubEstTo,Chapter,Paragraph,Level,EstTo,FALSE);
                             IF SubEstRec.GET(EstTo, SubEstTo) THEN
                               SubEstToTxt := SubEstRec.Description
                             ELSE
                               SubEstToTxt := SubEstFromTxt;  //db, 11-08-05

                             CheckDefaultNormGroupTo;  //db, 10-02-15: C009772
                           END;

                OnLookup=BEGIN
                           SubEstRec.RESET;
                           SubEstRec.SETRANGE("Estimate No.",EstTo);
                           IF PAGE.RUNMODAL(PAGE::"Sub-Estimate List",SubEstRec) = ACTION::LookupOK THEN BEGIN
                              EstRec.GET(SubEstRec."Estimate No.");
                              EstTo := EstRec."No.";
                              EstToTxt := EstRec.Description;
                              SubEstTo := SubEstRec."Sub-Estimate No.";
                              SubEstToTxt := SubEstRec.Description;
                              CheckDefaultNormGroupTo;  //db, 10-02-15: C009772
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 15  ;2   ;Field     ;
                CaptionML=ENU=Estimate Part Description;
                SourceExpr=SubEstToTxt }

    { 1210190004;2;Field  ;
                CaptionML=ENU=Norm Group;
                SourceExpr=NormGroupTo;
                TableRelation="Norm Group".Code;
                OnValidate=BEGIN
                             OnValidateNormGroupTo;  //db, 10-02-15: C009772
                           END;
                            }

    { 1210190003;2;Field  ;
                CaptionML=ENU=Norm Group Description;
                SourceExpr=NormGroupToTxt;
                Editable=FALSE }

    { 1100525002;1;Group  ;
                CaptionML=ENU=Apply;
                GroupType=Group }

    { 1100485000;2;Field  ;
                CaptionML=ENU=Skip Lines;
                SourceExpr=SkipLines }

    { 1210190006;2;Field  ;
                CaptionML=ENU=Copy Price Agreement;
                SourceExpr=CopyPriceAgreement }

    { 1210190009;2;Field  ;
                CaptionML=ENU=Transfer Comment Lines;
                SourceExpr=TransferCommentLines }

  }
  CODE
  {
    VAR
      EstFrom@11012029 : Code[20];
      EstTo@11012028 : Code[20];
      SubEstFrom@11012027 : Code[20];
      SubEstTo@11012026 : Code[20];
      EstFromTxt@11012005 : Text[50];
      EstToTxt@11012004 : Text[50];
      SubEstFromTxt@11012003 : Text[50];
      SubEstToTxt@11012002 : Text[50];
      EstRec@11012011 : Record 11012151;
      SubEstRec@11012012 : Record 11012152;
      FormatMgt@11012000 : Codeunit 11012022;
      SkipLines@1100485000 : Boolean;
      NormGroupFrom@1210190002 : Code[20];
      NormGroupTo@1210190003 : Code[20];
      NormGroupFromTxt@1210190000 : Text[50];
      NormGroupToTxt@1210190001 : Text[50];
      NormGroupRec@1210190004 : Record 11012164;
      CopyPriceAgreement@1210190005 : Boolean;
      TransferCommentLines@1210190006 : Boolean;
      CloseActionOK@1100528400 : Boolean;

    PROCEDURE FillDefaults@1(lEstFrom@11012000 : Code[20];lSubEstFrom@11012001 : Code[20]);
    BEGIN
      EstFrom := lEstFrom;
      SubEstFrom := lSubEstFrom;
      EstTo := EstFrom;
      SubEstTo := SubEstFrom;

      IF EstRec.GET(EstFrom) THEN BEGIN
        EstFromTxt := EstRec.Description;
        EstToTxt := EstRec.Description;
      END;

      IF SubEstRec.GET(EstFrom,SubEstFrom) THEN BEGIN
        SubEstFromTxt := SubEstRec.Description;
        SubEstToTxt := SubEstRec.Description;
      END;

      CheckDefaultNormGroupFrom;  //db, 10-02-15: C009772
      CheckDefaultNormGroupTo;  //db, 10-02-15: C009772
    END;

    PROCEDURE ValidateEstimate@1210190001();
    VAR
      EstLineRec@1210190000 : Record 11012154;
      lvText000@1210190001 : TextConst 'ENU=Estimate Lines present in Destination.';
      SubEstRec@1100525000 : Record 11012152;
      LineExist@1100525001 : Boolean;
      lvText001@1100525002 : TextConst 'ENU="Estimate Lines present in Destination; Continue ?"';
    BEGIN
      //db, 08-10-10: M23043
      EstLineRec.RESET;
      EstLineRec.SETRANGE("Estimate No.", EstTo);
      EstLineRec.SETRANGE("Sub-Estimate No.", SubEstTo);
      IF EstLineRec.FINDFIRST THEN BEGIN
        LineExist := TRUE;
        IF NOT SkipLines THEN
          ERROR(lvText000);
      END;

      IF NOT SubEstRec.GET(EstFrom,SubEstFrom) THEN SubEstRec.INIT;
      EstLineRec.RESET;
      EstLineRec.SETRANGE("Estimate No.", EstTo);
      CASE SubEstRec.Level OF
        0,1: EstLineRec.SETRANGE("Chapter (Sub-Estimate)", SubEstTo);
        2: EstLineRec.SETRANGE("Paragraph (Sub-Estimate)", SubEstTo);
      END;
      IF EstLineRec.FINDFIRST THEN BEGIN
        LineExist := TRUE;
        IF NOT SkipLines THEN
          ERROR(lvText000);
      END;

      IF LineExist THEN BEGIN
        IF NOT CONFIRM(lvText001) THEN
          ERROR('');
      END;
    END;

    PROCEDURE StartUpdate@1210190000();
    VAR
      CopyCu@1210190000 : Codeunit 11012151;
    BEGIN
      EstRec.GET(EstTo);
      EstRec.TESTFIELD(Fixed, FALSE);
      ValidateEstimate;
      CopyCu.SetSelectionSubLevel(NormGroupFrom, NormGroupTo);  //db, 10-02-15: C009772
      CopyCu.SetTransferComments(TransferCommentLines);
      CopyCu.CopySubEst(EstFrom,SubEstFrom,EstTo,SubEstTo,SubEstToTxt,SkipLines,CopyPriceAgreement);
    END;

    LOCAL PROCEDURE StdDialogConfirm@1100528400() : Boolean;
    BEGIN
      CurrPage.RUNMODAL;
      EXIT(CloseActionOK);
    END;

    LOCAL PROCEDURE StdDialogDoAction@1100528401();
    BEGIN
      StartUpdate;
    END;

    PROCEDURE StdDialogRunModal@1100528404();
    BEGIN
      IF StdDialogConfirm THEN
        StdDialogDoAction;
    END;

    PROCEDURE CheckDefaultNormGroupFrom@1100525016();
    VAR
      EstRecFrom@1100525000 : Record 11012151;
      SubEstRecFrom@1100525001 : Record 11012152;
    BEGIN
      //db, 10-02-15: C009772
      IF NOT EstRecFrom.GET(EstFrom) THEN EstRecFrom.INIT;
      IF NOT SubEstRecFrom.GET(EstFrom,SubEstFrom) THEN SubEstRecFrom.INIT;

      IF SubEstRecFrom."Norm Group" <> '' THEN
        NormGroupFrom := SubEstRecFrom."Norm Group"
      ELSE
        NormGroupFrom := EstRecFrom."Norm Group";

      IF NOT NormGroupRec.GET(NormGroupFrom) THEN NormGroupRec.INIT;
      NormGroupFromTxt := COPYSTR(NormGroupRec.Description, 1, 50);
    END;

    PROCEDURE CheckDefaultNormGroupTo@1100525012();
    VAR
      EstRecTo@1100525000 : Record 11012151;
    BEGIN
      //db, 10-02-15: C009772
      IF NOT EstRecTo.GET(EstTo) THEN EstRecTo.INIT;
      NormGroupTo := EstRecTo."Norm Group";

      OnValidateNormGroupTo;
    END;

    PROCEDURE OnValidateNormGroupTo@1100525005();
    BEGIN
      //db, 10-02-15: C009772
      IF NOT NormGroupRec.GET(NormGroupTo) THEN BEGIN
        NormGroupTo := NormGroupFrom;
        NormGroupToTxt := NormGroupFromTxt;
      END ELSE BEGIN
        NormGroupToTxt := COPYSTR(NormGroupRec.Description, 1, 50);
      END;
    END;

    BEGIN
    END.
  }
}

