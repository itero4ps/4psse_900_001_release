OBJECT Page 11012213 Copy Recipe
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Copy Recipe;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    PageType=StandardDialog;
    OnInit=BEGIN
             EstFromVisible := TRUE;
             SubEstFromVisible := TRUE;
             EstPartFromVisible := TRUE;
             EstFromTxtVisible := TRUE;
             SubEstFromTxtVisible := TRUE;
             EstPartFromTxtVisible := TRUE;

             EstToVisible := TRUE;
             SubEstToVisible := TRUE;
             EstPartToVisible := TRUE;
             EstToTxtVisible := TRUE;
             SubEstToTxtVisible := TRUE;
             EstPartToTxtVisible := TRUE;
           END;

    OnOpenPage=BEGIN
                 IF EstFrom = '' THEN BEGIN
                   EstFromVisible := (FALSE);
                   SubEstFromVisible := (FALSE);
                   EstPartFromVisible := (FALSE);
                   EstFromTxtVisible := (FALSE);
                   SubEstFromTxtVisible := (FALSE);
                   EstPartFromTxtVisible := (FALSE);

                   EstToVisible := (FALSE);
                   SubEstToVisible := (FALSE);
                   EstPartToVisible := (FALSE);
                   EstToTxtVisible := (FALSE);
                   SubEstToTxtVisible := (FALSE);
                   EstPartToTxtVisible := (FALSE);
                 END;

                 RecipeToSetEditable;
               END;

    OnQueryClosePage=BEGIN
                       CloseActionOK := CloseAction IN [ACTION::OK,ACTION::LookupOK];
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100525001;1;Group  ;
                CaptionML=ENU=Copy from;
                GroupType=Group }

    { 1   ;2   ;Field     ;
                CaptionML=ENU=Estimate;
                SourceExpr=EstFrom;
                Visible=EstFromVisible;
                OnValidate=BEGIN
                             IF EstFrom = '' THEN BEGIN
                               SubEstFrom := '';
                               PartGrpFrom := '';
                               EstPartFrom := '';
                               LineFrom := 0;
                               EstFromTxt := '';
                               SubEstFromTxt := '';
                               EstPartFromTxt := '';
                             END ELSE BEGIN
                               //dbeekman.sn: 28837
                               EstRec."No." := EstFrom;
                               EstRec.DPA_FindRecWithDPAFilterAppld;
                               //dbeekman.en: 28837
                               EstFromTxt := EstRec.Description;
                             END;
                           END;

                OnLookup=BEGIN
                           EstRec.RESET;
                           IF PAGE.RUNMODAL(PAGE::"Estimate List",EstRec) = ACTION::LookupOK THEN BEGIN
                              EstFrom := EstRec."No.";
                              EstFromTxt := EstRec.Description;
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 11  ;2   ;Field     ;
                CaptionML=ENU=Estimate Description;
                SourceExpr=EstFromTxt;
                Visible=EstFromTxtVisible;
                Editable=FALSE }

    { 3   ;2   ;Field     ;
                CaptionML=ENU=Estimate Part;
                SourceExpr=SubEstFrom;
                Visible=SubEstFromVisible;
                OnValidate=VAR
                             Chapter@1100485003 : Code[20];
                             Paragraph@1100485002 : Code[20];
                             Level@1100485001 : Integer;
                           BEGIN
                             FormatMgt.FormatSubEstimate(SubEstFrom,Chapter,Paragraph,Level,EstFrom,FALSE);
                             SubEstRec.GET(EstFrom,SubEstFrom);
                             SubEstFromTxt := SubEstRec.Description;
                             PartGrpFrom := SubEstRec."Part Group";
                           END;

                OnLookup=BEGIN
                           SubEstRec.RESET;
                           SubEstRec.SETRANGE("Estimate No.",EstFrom);
                           IF PAGE.RUNMODAL(PAGE::"Sub-Estimate List",SubEstRec) = ACTION::LookupOK THEN BEGIN
                              EstRec.GET(SubEstRec."Estimate No.");
                              EstFrom := EstRec."No.";
                              EstFromTxt := EstRec.Description;
                              SubEstFrom := SubEstRec."Sub-Estimate No.";
                              SubEstFromTxt := SubEstRec.Description;
                              PartGrpFrom := SubEstRec."Part Group";
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 12  ;2   ;Field     ;
                CaptionML=ENU=Estimate Part Description;
                SourceExpr=SubEstFromTxt;
                Visible=SubEstFromTxtVisible;
                Editable=FALSE }

    { 17  ;2   ;Field     ;
                CaptionML=ENU=Part;
                SourceExpr=EstPartFrom;
                Visible=EstPartFromVisible;
                OnValidate=BEGIN
                             FormatMgt.FormatElem(EstPartFrom,1,'');
                             EstPartRec.GET(EstFrom,SubEstFrom,PartGrpFrom,EstPartFrom);
                             EstPartFromTxt := EstPartRec.Description;
                           END;

                OnLookup=BEGIN
                           EstPartRec.RESET;
                           EstPartRec.SETRANGE("Estimate No.",EstFrom);
                           EstPartRec.SETRANGE("Sub-Estimate No.",SubEstFrom);
                           IF PAGE.RUNMODAL(PAGE::"Estimate Part List",EstPartRec) = ACTION::LookupOK THEN BEGIN
                              EstPartRec.CALCFIELDS("Estimate Description", "Sub-Estimate Description");
                              EstFrom := EstPartRec."Estimate No.";
                              EstFromTxt := EstPartRec."Estimate Description";
                              SubEstFrom := EstPartRec."Sub-Estimate No.";
                              SubEstFromTxt := EstPartRec."Sub-Estimate Description";
                              PartGrpFrom := EstPartRec."Part Group";
                              EstPartFrom := EstPartRec.Part;
                              EstPartFromTxt := EstPartRec.Description;
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 18  ;2   ;Field     ;
                CaptionML=ENU=Part Description;
                SourceExpr=EstPartFromTxt;
                Visible=EstPartFromTxtVisible;
                Editable=FALSE }

    { 22  ;2   ;Field     ;
                CaptionML=ENU=Recipe Group;
                SourceExpr=RecipeGrpFrom;
                OnValidate=BEGIN
                             IF NOT RgrpRec.GET(RecipeGrpFrom) THEN
                               ERROR(Text003)
                             ELSE
                               RecipeGrpFromTxt := RgrpRec.Description;
                           END;

                OnLookup=BEGIN
                           RgrpRec.SETRANGE(Type, RgrpRec.Type::Recipe);
                           IF PAGE.RUNMODAL(PAGE::"Estimate Groups", RgrpRec) = ACTION::LookupOK THEN BEGIN
                              RecipeGrpFrom := RgrpRec."No.";
                              RecipeGrpFromTxt := RgrpRec.Description;
                           END;
                         END;
                          }

    { 23  ;2   ;Field     ;
                CaptionML=ENU=Recipe Group Description;
                SourceExpr=RecipeGrpFromTxt;
                Editable=FALSE }

    { 29  ;2   ;Field     ;
                CaptionML=ENU=Recipe;
                SourceExpr=RecipeFrom;
                OnValidate=BEGIN
                             RecipeFromOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           IF EstFrom = '' THEN BEGIN
                             RecipeRec.SETRANGE("Recipe Group", RecipeGrpFrom);
                             IF PAGE.RUNMODAL(PAGE::"Recipe List", RecipeRec) = ACTION::LookupOK THEN BEGIN
                               RecipeFrom := RecipeRec."No.";
                               RecipeFromTxt := RecipeRec.Description;
                               RecipeTo := RecipeFrom;
                               RecipeToTxt := RecipeFromTxt;
                             END;
                           END ELSE BEGIN
                             EstLineRec.SETRANGE("Estimate No.", EstFrom);
                             EstLineRec.SETRANGE("Sub-Estimate No.", SubEstFrom);
                             EstLineRec.SETRANGE("Part Group", PartGrpFrom);
                             EstLineRec.SETRANGE(Part, EstPartFrom);
                             EstLineRec.SETRANGE("Recipe Group", RecipeGrpFrom);
                             IF PAGE.RUNMODAL(PAGE::"Estimate Line List", EstLineRec) = ACTION::LookupOK THEN BEGIN
                               EstLineRec.CALCFIELDS("Estimate Description", "Sub-Estimate Description", "Part Description");
                               EstFrom := EstLineRec."Estimate No.";
                               EstFromTxt := EstLineRec."Estimate Description";
                               SubEstFrom := EstLineRec."Sub-Estimate No.";
                               SubEstFromTxt := EstLineRec."Sub-Estimate Description";
                               PartGrpFrom := EstLineRec."Part Group";
                               EstPartFrom := EstLineRec.Part;
                               EstPartFromTxt := EstLineRec."Part Description";
                               RecipeFrom := EstLineRec.Recipe;
                               RecipeFromTxt := EstLineRec.Description;
                               RecipeTo := RecipeFrom;
                               RecipeToTxt := RecipeFromTxt;
                               LineFrom := EstLineRec."Line No.";
                             END;
                           END;
                           RecipeToSetEditable;
                         END;
                          }

    { 30  ;2   ;Field     ;
                CaptionML=ENU=Recipe Description;
                SourceExpr=RecipeFromTxt;
                Editable=FALSE }

    { 1100525000;1;Group  ;
                CaptionML=ENU=Copy to;
                GroupType=Group }

    { 7   ;2   ;Field     ;
                CaptionML=ENU=Estimate;
                SourceExpr=EstTo;
                Visible=EstToVisible;
                OnValidate=BEGIN
                             IF EstTo = '' THEN BEGIN
                               SubEstTo := '';
                               PartGrpTo := '';
                               EstPartTo := '';
                               LineTo := 0;
                               EstToTxt := '';
                               SubEstToTxt := '';
                               EstPartToTxt := '';
                             END ELSE BEGIN
                               //dbeekman.sn: 28837
                               EstRec."No." := EstTo;
                               EstRec.DPA_FindRecWithDPAFilterAppld;
                               //dbeekman.en: 28837
                               EstToTxt := EstRec.Description;
                             END;
                           END;

                OnLookup=BEGIN
                           EstRec.RESET;
                           IF PAGE.RUNMODAL(PAGE::"Estimate List",EstRec) = ACTION::LookupOK THEN BEGIN
                              EstTo := EstRec."No.";
                              EstToTxt := EstRec.Description;
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 13  ;2   ;Field     ;
                CaptionML=ENU=Estimate Description;
                SourceExpr=EstToTxt;
                Visible=EstToTxtVisible;
                Editable=FALSE }

    { 8   ;2   ;Field     ;
                CaptionML=ENU=Estimate Part;
                SourceExpr=SubEstTo;
                Visible=SubEstToVisible;
                OnValidate=VAR
                             Chapter@1100485003 : Code[20];
                             Paragraph@1100485002 : Code[20];
                             Level@1100485001 : Integer;
                           BEGIN
                             FormatMgt.FormatSubEstimate(SubEstTo,Chapter,Paragraph,Level,EstTo,FALSE);
                             SubEstRec.GET(EstTo,SubEstTo);
                             SubEstToTxt := SubEstRec.Description;
                           END;

                OnLookup=BEGIN
                           SubEstRec.RESET;
                           SubEstRec.SETRANGE("Estimate No.",EstTo);
                           IF PAGE.RUNMODAL(PAGE::"Sub-Estimate List",SubEstRec) = ACTION::LookupOK THEN BEGIN
                              EstRec.GET(SubEstRec."Estimate No.");
                              EstTo := EstRec."No.";
                              EstToTxt := EstRec.Description;
                              SubEstTo := SubEstRec."Sub-Estimate No.";
                              SubEstToTxt := SubEstRec.Description;
                              PartGrpTo := SubEstRec."Part Group";
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 14  ;2   ;Field     ;
                CaptionML=ENU=Estimate Part Description;
                SourceExpr=SubEstToTxt;
                Visible=SubEstToTxtVisible;
                Editable=FALSE }

    { 20  ;2   ;Field     ;
                CaptionML=ENU=Part;
                SourceExpr=EstPartTo;
                Visible=EstPartToVisible;
                OnValidate=BEGIN
                             FormatMgt.FormatElem(EstPartTo,1,'');
                             EstPartRec.GET(EstTo,SubEstTo,PartGrpTo,EstPartTo);
                             EstPartToTxt := EstPartRec.Description;
                           END;

                OnLookup=BEGIN
                           EstPartRec.RESET;
                           EstPartRec.SETRANGE("Estimate No.",EstTo);
                           EstPartRec.SETRANGE("Sub-Estimate No.",SubEstTo);
                           IF PAGE.RUNMODAL(PAGE::"Estimate Part List",EstPartRec) = ACTION::LookupOK THEN BEGIN
                              PartGrpTo := EstPartRec."Part Group";
                              EstPartTo := EstPartRec.Part;
                              EstPartToTxt := EstPartRec.Description;
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 24  ;2   ;Field     ;
                CaptionML=ENU=Part Description;
                SourceExpr=EstPartToTxt;
                Visible=EstPartToTxtVisible;
                Editable=FALSE }

    { 26  ;2   ;Field     ;
                CaptionML=ENU=Recipe Group;
                SourceExpr=RecipeGrpTo;
                OnValidate=BEGIN
                             IF NOT RgrpRec.GET(RecipeGrpTo) THEN
                               ERROR(Text003)
                             ELSE
                               RecipeGrpToTxt := RgrpRec.Description;
                           END;

                OnLookup=BEGIN
                           RgrpRec.SETRANGE(Type, RgrpRec.Type::Recipe);
                           IF PAGE.RUNMODAL(PAGE::"Estimate Groups", RgrpRec) = ACTION::LookupOK THEN BEGIN
                              RecipeGrpTo := RgrpRec."No.";
                              RecipeGrpToTxt := RgrpRec.Description;
                           END;
                         END;
                          }

    { 27  ;2   ;Field     ;
                CaptionML=ENU=Recipe Group Description;
                SourceExpr=RecipeGrpToTxt;
                Editable=FALSE }

    { 32  ;2   ;Field     ;
                CaptionML=ENU=Recipe;
                SourceExpr=RecipeTo;
                Editable=RecipeToEditable;
                OnValidate=BEGIN
                             IF (RecipeFrom <> '') AND (RecipeTo = '') THEN ERROR('');
                           END;

                OnLookup=BEGIN
                           IF EstTo = '' THEN BEGIN
                             RecipeRec.SETRANGE("Recipe Group", RecipeGrpTo);
                             PAGE.RUNMODAL(PAGE::"Recipe List", RecipeRec);
                           END ELSE BEGIN
                             EstLineRec.SETRANGE("Estimate No.", EstTo);
                             EstLineRec.SETRANGE("Sub-Estimate No.", SubEstTo);
                             EstLineRec.SETRANGE("Part Group", PartGrpTo);
                             EstLineRec.SETRANGE(Part, EstPartTo);
                             EstLineRec.SETRANGE("Recipe Group", RecipeGrpTo);
                             PAGE.RUNMODAL(PAGE::"Estimate Line List", EstLineRec);
                           END;
                         END;
                          }

    { 33  ;2   ;Field     ;
                CaptionML=ENU=Recipe Description;
                SourceExpr=RecipeToTxt;
                Editable=RecipeToEditable }

  }
  CODE
  {
    VAR
      Text003@11012044 : TextConst 'ENU=Recipe Group not present';
      Text005@11012046 : TextConst 'ENU=Recipe does not exist';
      Text006@11012047 : TextConst 'ENU=Transaction only allowed in company used as source for central itemmanagement';
      EstFrom@11012000 : Code[20];
      EstTo@11012013 : Code[20];
      SubEstFrom@11012002 : Code[20];
      SubEstTo@11012014 : Code[20];
      PartGrpFrom@11012003 : Code[20];
      PartGrpTo@11012004 : Code[20];
      EstPartFrom@11012005 : Code[20];
      EstPartTo@11012006 : Code[20];
      LineFrom@11012007 : Integer;
      LineTo@11012008 : Integer;
      RecipeGrpFrom@11012009 : Code[20];
      RecipeGrpTo@11012010 : Code[20];
      RecipeFrom@11012011 : Code[20];
      RecipeTo@11012012 : Code[20];
      EstFromTxt@11012017 : Text[50];
      EstToTxt@11012020 : Text[50];
      SubEstFromTxt@11012018 : Text[50];
      SubEstToTxt@11012021 : Text[50];
      EstPartFromTxt@11012019 : Text[50];
      EstPartToTxt@11012022 : Text[50];
      RecipeGrpFromTxt@11012023 : Text[50];
      RecipeGrpToTxt@11012024 : Text[50];
      RecipeFromTxt@11012025 : Text[100];
      RecipeToTxt@11012026 : Text[100];
      EstRec@11012027 : Record 11012151;
      EstRec2@1210190002 : Record 11012151;
      SubEstRec@11012028 : Record 11012152;
      EstPartRec@11012030 : Record 11012153;
      EstLineRec@11012031 : Record 11012154;
      RgrpRec@11012032 : Record 11012157;
      RecipeRec@11012033 : Record 11012155;
      RcpRec2@1210190008 : Record 11012155;
      RecipeLineRec@11012034 : Record 11012156;
      RcpLineRec2@11012035 : Record 11012156;
      TextRec@1210190005 : Record 11020595;
      TextRec2@1210190007 : Record 11020595;
      EstCodeRec@1210190009 : Record 11012194;
      EstCodeRec2@1210190010 : Record 11012194;
      ChrgRec@1210190000 : Record 11012175;
      ChrgRec2@1210190001 : Record 11012175;
      QuanSheetRec@1210190011 : Record 11012186;
      QuanSheetRec2@1210190012 : Record 11012186;
      QuanModelRec@1210190014 : Record 11012197;
      QuanModelRec2@1210190016 : Record 11012197;
      CompRel@1210190013 : Record 11012059;
      CentrManagementCU@1210190015 : Codeunit 11012010;
      FormatMgt@1210190006 : Codeunit 11012022;
      NavBln@1210190021 : Boolean;
      DiscBln@1100485000 : Boolean;
      DiscGrpBln@1100528300 : Boolean;
      RcpBln@1210190018 : Boolean;
      CopyRecipeLine@1100485001 : Boolean;
      EstFromVisible@19046234 : Boolean INDATASET;
      SubEstFromVisible@19031054 : Boolean INDATASET;
      EstPartFromVisible@19066383 : Boolean INDATASET;
      EstFromTxtVisible@19043272 : Boolean INDATASET;
      SubEstFromTxtVisible@19064954 : Boolean INDATASET;
      EstPartFromTxtVisible@19070444 : Boolean INDATASET;
      EstToVisible@19075382 : Boolean INDATASET;
      SubEstToVisible@19003394 : Boolean INDATASET;
      EstPartToVisible@19020650 : Boolean INDATASET;
      EstToTxtVisible@19051147 : Boolean INDATASET;
      SubEstToTxtVisible@19024429 : Boolean INDATASET;
      EstPartToTxtVisible@19071763 : Boolean INDATASET;
      RecipeToEditable@1100525004 : Boolean INDATASET;
      RecipeToTxtEditable@1100525007 : Boolean INDATASET;
      CloseActionOK@1100528400 : Boolean;

    PROCEDURE FillDefaults@1(lEstFrom@11012000 : Code[20];lSubEstFrom@11012001 : Code[20];lPartGrpFrom@11012002 : Code[20];lEstPartFrom@11012003 : Code[20];lLineFrom@11012004 : Integer;lRecipeGrpFrom@11012005 : Code[20];lRecipeFrom@11012006 : Code[20]);
    BEGIN
      EstFrom  := lEstFrom;
      SubEstFrom := lSubEstFrom;
      PartGrpFrom := lPartGrpFrom;
      EstPartFrom := lEstPartFrom;
      LineFrom := lLineFrom;
      RecipeGrpFrom := lRecipeGrpFrom;
      RecipeFrom  := lRecipeFrom;

      EstTo := EstFrom;
      SubEstTo := SubEstFrom;
      PartGrpTo:= PartGrpFrom;
      EstPartTo := EstPartFrom;
      RecipeGrpTo := RecipeGrpFrom;
      RecipeTo := RecipeFrom;

      IF EstRec.GET(EstFrom) THEN BEGIN
        EstFromTxt := EstRec.Description;
        EstToTxt := EstRec.Description;
      END;

      IF SubEstRec.GET(EstFrom,SubEstFrom) THEN BEGIN
        SubEstFromTxt := SubEstRec.Description;
        SubEstToTxt := SubEstRec.Description;
      END;

      IF EstPartRec.GET(EstFrom,SubEstFrom,PartGrpFrom,EstPartFrom) THEN BEGIN
        EstPartFromTxt := EstPartRec.Description;
        EstPartToTxt := EstPartRec.Description;
      END;

      IF RgrpRec.GET(RecipeGrpFrom) THEN BEGIN
        RecipeGrpFromTxt := RgrpRec.Description;
        RecipeGrpToTxt := RgrpRec.Description;
      END;

      IF RecipeRec.GET(RecipeGrpFrom,RecipeFrom) THEN BEGIN
        RecipeFromTxt := RecipeRec.Description;
        RecipeToTxt := RecipeRec.Description;
      END;

      IF EstLineRec.GET(EstFrom,SubEstFrom,PartGrpFrom,EstPartFrom,LineFrom) THEN BEGIN
        IF (RecipeGrpFrom <> '') AND (RecipeFrom <> '') THEN BEGIN
          RecipeFromTxt := EstLineRec.Description;
          RecipeToTxt := EstLineRec.Description;
        END;
      END;

      RecipeToSetEditable;
    END;

    PROCEDURE StartUpdate@2();
    VAR
      BufferMgt@1100528900 : Codeunit 11012150;
    BEGIN
      IF EstTo <> '' THEN BEGIN
        EstRec.GET(EstTo);
        EstRec.TESTFIELD(Fixed, FALSE);
        IF NOT EstRec2.GET(EstFrom) THEN EstRec2.INIT;

        SubEstRec.GET(EstTo, SubEstTo);
        EstPartRec.GET(EstTo, SubEstTo, PartGrpTo, EstPartTo);

        EstLineRec.RESET;
        EstLineRec.SETRANGE("Estimate No.", EstTo);
        EstLineRec.SETRANGE("Sub-Estimate No.", SubEstTo);
        EstLineRec.SETRANGE("Part Group", PartGrpTo);
        EstLineRec.SETRANGE(Part, EstPartTo);
        IF EstLineRec.FINDLAST THEN
          LineTo := EstLineRec."Line No." + 10000
        ELSE
          LineTo := 10000;

        IF NOT EstLineRec.GET(EstFrom,SubEstFrom,PartGrpFrom,EstPartFrom,LineFrom) THEN BEGIN
          EstLineRec.INIT;
          IF RecipeRec.GET(RecipeGrpFrom, RecipeFrom) THEN
            EstLineRec.Manufacturer := RecipeRec.Manufacturer;
        END;
        EstLineRec."Estimate No." := EstTo;
        EstLineRec."Sub-Estimate No." := SubEstTo;
        EstLineRec."Part Group" := PartGrpTo;
        EstLineRec.Part := EstPartTo;
        EstLineRec."Line No." := LineTo;
        EstLineRec."Recipe Group" := RecipeGrpTo;
        EstLineRec.Recipe := RecipeTo;
        EstLineRec.Description := RecipeToTxt;
        EstLineRec.INSERT(TRUE);
      END ELSE BEGIN
        IF NOT EstRec.GET(EstTo) THEN EstRec.INIT;
        IF NOT EstRec2.GET(EstFrom) THEN EstRec2.INIT;
        IF CompRel.READPERMISSION THEN BEGIN
          CentrManagementCU.ItemFormEditable(NavBln,DiscBln,DiscGrpBln,RcpBln);
          IF RcpBln THEN
            ERROR(Text006);
        END;
        RecipeRec.SETRANGE("Recipe Group",RecipeGrpFrom);
        IF RecipeFrom <> '' THEN
          RecipeRec.SETRANGE("No.",RecipeFrom);
        IF RecipeRec.FINDSET THEN BEGIN
          REPEAT
            RcpRec2.COPY(RecipeRec);
            RcpRec2."Recipe Group" := RecipeGrpTo;
            IF RecipeTo <> '' THEN BEGIN
              RcpRec2."No." := RecipeTo;
              RcpRec2.Description := RecipeToTxt;
            END;
            RcpRec2.Blocked := FALSE;
            RcpRec2.INSERT(TRUE);
          UNTIL RecipeRec.NEXT = 0;
        END ELSE BEGIN
          RcpRec2.INIT;
          RcpRec2."Recipe Group" := RecipeGrpTo;
          RcpRec2."No." := RecipeTo;
          RcpRec2.Description := RecipeToTxt;
          RcpRec2.Blocked := FALSE;
          RcpRec2.INSERT(TRUE);
        END;
      END;

      BufferMgt.CopyDetails(
        EstFrom, SubEstFrom, PartGrpFrom, EstPartFrom, LineFrom, RecipeGrpFrom, RecipeFrom, 0,
        EstTo, SubEstTo, PartGrpTo, EstPartTo, LineTo, RecipeGrpTo, RecipeTo, 0,
        TRUE);  //DP00381

      IF EstLineRec.GET(EstTo, SubEstTo, PartGrpTo, EstPartTo, LineTo) THEN
        EstLineRec.VALIDATE("Adjustment Factor Hours");
    END;

    PROCEDURE CopyDetails@1210190000(EstFrom@1210190013 : Code[20];SubEstFrom@1210190011 : Code[20];PartGrpFrom@1210190009 : Code[20];EstPartFrom@1210190007 : Code[20];EstLineFrom@1210190005 : Integer;RecipeGrpFrom@1210190003 : Code[20];RecipeFrom@1210190001 : Code[20];RecipeLineFrom@1100485000 : Integer;EstTo@1210190012 : Code[20];SubEstTo@1210190010 : Code[20];PartGrpTo@1210190008 : Code[20];EstPartTo@1210190006 : Code[20];EstLineTo@1210190004 : Integer;RecipeGrpTo@1210190002 : Code[20];RecipeTo@1210190000 : Code[20];RecipeLineTo@1100485001 : Integer);
    BEGIN
      //function: CopyDetails
      //db, 01-07-04: also called when copy recipe from buffer

      IF CopyRecipeLine = TRUE THEN BEGIN
        RecipeLineRec.SETRANGE("Estimate No.",EstFrom);
        RecipeLineRec.SETRANGE("Sub-Estimate No.",SubEstFrom);
        RecipeLineRec.SETRANGE("Part Group",PartGrpFrom);
        RecipeLineRec.SETRANGE(Part,EstPartFrom);
        RecipeLineRec.SETRANGE("Estimate Line",EstLineFrom);
        IF EstFrom = '' THEN BEGIN
          RecipeLineRec.SETRANGE("Recipe Group",RecipeGrpFrom);
          IF RecipeFrom <> '' THEN
            RecipeLineRec.SETRANGE(Recipe,RecipeFrom);
          IF RecipeLineFrom <> 0 THEN
            RecipeLineRec.SETRANGE("Line No.",RecipeLineFrom);
        END;
        IF RecipeLineRec.FINDSET THEN BEGIN
          REPEAT
            RcpLineRec2.COPY(RecipeLineRec);
            RcpLineRec2."Estimate No." := EstTo;
            RcpLineRec2."Sub-Estimate No." := SubEstTo;
            RcpLineRec2."Part Group" := PartGrpTo;
            RcpLineRec2.Part := EstPartTo;
            RcpLineRec2."Estimate Line" := EstLineTo;
            IF (RecipeGrpFrom + RecipeFrom) <> (RecipeGrpTo + RecipeTo) THEN BEGIN
              RcpLineRec2."Recipe Group" := RecipeGrpTo;
              IF RecipeTo <> '' THEN
                RcpLineRec2.Recipe := RecipeTo;
            END;
            RcpLineRec2.INSERT(TRUE);
            //db.en, 12-05-09: M15306
            RcpLineRec2."Norm Agreement" := RecipeLineRec."Norm Agreement";
            RcpLineRec2."Price Agreement" := RecipeLineRec."Price Agreement";
            RcpLineRec2."Subcontracting Agreement" := RecipeLineRec."Subcontracting Agreement";
            RcpLineRec2."Plant Agreement" := RecipeLineRec."Plant Agreement";
            //db.en, 12-05-09
            IF EstRec."Estimate Type" <> EstRec2."Estimate Type" THEN BEGIN
              //db.sn, 03-04-13: C006746
              IF RecipeLineRec."Trade Item" <> '' THEN BEGIN
                RcpLineRec2."Trade Item" := '';
                RcpLineRec2.VALIDATE("Trade Item", RecipeLineRec."Trade Item");
              END ELSE BEGIN
                IF RecipeLineRec."Basic Item" <> '' THEN BEGIN
                  RcpLineRec2."Basic Item" := '';
                  RcpLineRec2.VALIDATE("Basic Item", RecipeLineRec."Basic Item");
                END ELSE BEGIN
                  IF RecipeLineRec."Item No." <> '' THEN BEGIN
                    RcpLineRec2."Item No." := '';
                    RcpLineRec2.VALIDATE("Item No.", RecipeLineRec."Item No.");
                  END;
                END;
              END;
              //db.en, 03-04-13: C006746
            END;
            RcpLineRec2.MODIFY(TRUE);
          UNTIL RecipeLineRec.NEXT = 0;
          RcpLineRec2.UpdateEstLines;
        END;
      END;

      IF CopyRecipeLine = TRUE THEN BEGIN
        ChrgRec.SETRANGE("Estimate No.",EstFrom);
        ChrgRec.SETRANGE("Sub-Estimate No.",SubEstFrom);
        ChrgRec.SETRANGE("Part Group",PartGrpFrom);
        ChrgRec.SETRANGE(Part,EstPartFrom);
        ChrgRec.SETRANGE("Recipe Line",EstLineFrom);
        IF EstFrom = '' THEN BEGIN
          ChrgRec.SETRANGE("Recipe Group",RecipeGrpFrom);
          IF RecipeFrom <> '' THEN
            ChrgRec.SETRANGE(Recipe,RecipeFrom);
        END;
        IF ChrgRec.FINDSET THEN BEGIN
          REPEAT
            ChrgRec2.COPY(ChrgRec);
            ChrgRec2."Estimate No." := EstTo;
            ChrgRec2."Sub-Estimate No." := SubEstTo;
            ChrgRec2."Part Group" := PartGrpTo;
            ChrgRec2.Part := EstPartTo;
            ChrgRec2."Recipe Line" := EstLineTo;
            IF (RecipeGrpFrom + RecipeFrom) <> (RecipeGrpTo + RecipeTo) THEN BEGIN
              ChrgRec2."Recipe Group" := RecipeGrpTo;
              IF RecipeTo <> '' THEN
                ChrgRec2.Recipe := RecipeTo;
              IF RecipeLineTo <> 0 THEN
                ChrgRec2."Recipe Line" := RecipeLineTo;
            END;
            ChrgRec2.INSERT;
          UNTIL ChrgRec.NEXT = 0;
        END;
      END;

      //T000933 START
      //Because ontimer ceased to exist, this is necessary to update the Estimate line if recipe lines are copied
      IF (NOT CopyRecipeLine) AND (RecipeLineTo <> 0) THEN BEGIN
        RcpLineRec2.INIT;
        RcpLineRec2."Estimate No." := EstTo;
        RcpLineRec2."Sub-Estimate No." := SubEstTo;
        RcpLineRec2."Part Group" := PartGrpTo;
        RcpLineRec2.Part := EstPartTo;
        RcpLineRec2."Estimate Line" := EstLineTo;
        RcpLineRec2."Recipe Group" := RecipeGrpTo;
        RcpLineRec2.Recipe := RecipeTo;
        RcpLineRec2."Line No." := RecipeLineTo;
        IF RcpLineRec2.FIND('=') THEN
          RcpLineRec2.UpdateEstLines;
      END;
      //T000933 END

      QuanSheetRec.SETRANGE("Estimate No.",EstFrom);
      QuanSheetRec.SETRANGE("Sub-Estimate No.",SubEstFrom);
      QuanSheetRec.SETRANGE("Part Group",PartGrpFrom);
      QuanSheetRec.SETRANGE(Part,EstPartFrom);
      QuanSheetRec.SETRANGE("Estimate Line",EstLineFrom);
      IF EstFrom = '' THEN BEGIN
        QuanSheetRec.SETRANGE("Recipe Group",RecipeGrpFrom);
        IF RecipeFrom <> '' THEN
          QuanSheetRec.SETRANGE(Recipe,RecipeFrom);
      END;
      IF QuanSheetRec.FINDSET THEN BEGIN
        REPEAT
          QuanSheetRec2.COPY(QuanSheetRec);
          QuanSheetRec2."Estimate No." := EstTo;
          QuanSheetRec2."Sub-Estimate No." := SubEstTo;
          QuanSheetRec2."Part Group" := PartGrpTo;
          QuanSheetRec2.Part := EstPartTo;
          QuanSheetRec2."Estimate Line" := EstLineTo;
          IF (RecipeGrpFrom + RecipeFrom) <> (RecipeGrpTo + RecipeTo) THEN BEGIN
            QuanSheetRec2."Recipe Group" := RecipeGrpTo;
            IF RecipeTo <> '' THEN
              QuanSheetRec2.Recipe := RecipeTo;
            IF RecipeLineTo <> 0 THEN
              QuanSheetRec2."Recipe Line" := RecipeLineTo;
          END;
          QuanSheetRec2.INSERT;
        UNTIL QuanSheetRec.NEXT = 0;
      END;

      QuanModelRec.SETRANGE("Estimate No.",EstFrom);
      QuanModelRec.SETRANGE("Sub-Estimate No.",SubEstFrom);
      QuanModelRec.SETRANGE("Part Group",PartGrpFrom);
      QuanModelRec.SETRANGE(Part,EstPartFrom);
      QuanModelRec.SETRANGE("Estimate Line",EstLineFrom);
      IF QuanModelRec.FINDSET THEN BEGIN
        REPEAT
          QuanModelRec2.COPY(QuanModelRec);
          QuanModelRec2."Estimate No." := EstTo;
          QuanModelRec2."Sub-Estimate No." := SubEstTo;
          QuanModelRec2."Part Group" := PartGrpTo;
          QuanModelRec2.Part := EstPartTo;
          QuanModelRec2."Estimate Line" := EstLineTo;
          QuanModelRec2.INSERT;
        UNTIL QuanModelRec.NEXT = 0;
      END;

      //db.sn, 25-03-11
      TextRec.SETRANGE("Estimate No.",EstFrom);
      TextRec.SETRANGE("Sub-Estimate No.",SubEstFrom);
      TextRec.SETRANGE("Part Group",PartGrpFrom);
      TextRec.SETRANGE(Part,EstPartFrom);
      TextRec.SETRANGE("Estimate Line No.",EstLineFrom);
      IF EstFrom = '' THEN BEGIN
        TextRec.SETRANGE(Group,RecipeGrpFrom);
        IF RecipeFrom <> '' THEN
          TextRec.SETRANGE("No.",RecipeFrom);
      END;
      IF TextRec.FINDSET THEN BEGIN
        REPEAT
          TextRec2.COPY(TextRec);
          TextRec2."Estimate No." := EstTo;
          TextRec2."Sub-Estimate No." := SubEstTo;
          TextRec2."Part Group" := PartGrpTo;
          TextRec2.Part := EstPartTo;
          TextRec2."Estimate Line No." := EstLineTo;
          IF (RecipeGrpFrom + RecipeFrom) <> (RecipeGrpTo + RecipeTo) THEN BEGIN
            TextRec2.Group := RecipeGrpTo;
            IF RecipeTo <> '' THEN
              TextRec2."No." := RecipeTo;
            //IF RecipeLineTo <> 0 THEN
            //  TextRec2."Recipe Line" := RecipeLineTo;
          END;
          IF TextRec2.INSERT THEN;  //db, 06-12-11 (error with copy text from estimate line, while copy recipe lines from buffer)
        UNTIL TextRec.NEXT = 0;
      END;
      //db.en, 25-03-11

      EstCodeRec.SETRANGE("Estimate No.",EstFrom);
      EstCodeRec.SETRANGE("Sub-Estimate No.",SubEstFrom);
      EstCodeRec.SETRANGE("Part Group",PartGrpFrom);
      EstCodeRec.SETRANGE(Part,EstPartFrom);
      EstCodeRec.SETRANGE("Estimate Line",EstLineFrom);
      IF EstFrom = '' THEN BEGIN
        EstCodeRec.SETRANGE("Recipe Group",RecipeGrpFrom);
        IF RecipeFrom <> '' THEN
          EstCodeRec.SETRANGE(Recipe,RecipeFrom);
      END;
      IF EstCodeRec.FINDSET THEN BEGIN
        REPEAT
          EstCodeRec2.COPY(EstCodeRec);
          EstCodeRec2."Estimate No." := EstTo;
          EstCodeRec2."Sub-Estimate No." := SubEstTo;
          EstCodeRec2."Part Group" := PartGrpTo;
          EstCodeRec2.Part := EstPartTo;
          EstCodeRec2."Estimate Line" := EstLineTo;
          IF (RecipeGrpFrom + RecipeFrom) <> (RecipeGrpTo + RecipeTo) THEN BEGIN
            EstCodeRec2."Recipe Group" := RecipeGrpTo;
            IF RecipeTo <> '' THEN
              EstCodeRec2.Recipe := RecipeTo;
            IF RecipeLineTo <> 0 THEN
              EstCodeRec2."Recipe Line" := RecipeLineTo;
          END;
          EstCodeRec2.INSERT;
        UNTIL EstCodeRec.NEXT = 0;
      END;
    END;

    PROCEDURE SetBufferSelection@1100485000(lvCopyRecipeLine@1100485000 : Boolean);
    BEGIN
      CopyRecipeLine := lvCopyRecipeLine;
    END;

    LOCAL PROCEDURE RecipeFromOnAfterValidate@19030182();
    BEGIN
      IF EstFrom = '' THEN BEGIN
        IF NOT RecipeRec.GET(RecipeGrpFrom, RecipeFrom) THEN
          IF RecipeFrom = '' THEN
            RecipeRec.INIT
          ELSE
            ERROR(Text005);
        RecipeRec.TESTFIELD(Blocked, FALSE);
        RecipeFromTxt := RecipeRec.Description;
      END ELSE BEGIN
        EstLineRec.SETRANGE("Estimate No.", EstFrom);
        EstLineRec.SETRANGE("Sub-Estimate No.", SubEstFrom);
        EstLineRec.SETRANGE("Part Group", PartGrpFrom);
        EstLineRec.SETRANGE(Part, EstPartFrom);
        EstLineRec.SETRANGE("Recipe Group", RecipeGrpFrom);
        EstLineRec.SETRANGE(Recipe, RecipeFrom);
        IF NOT EstLineRec.FIND('-') THEN
          ERROR(Text005);
        RecipeFromTxt := EstLineRec.Description;
        LineFrom := EstLineRec."Line No.";
      END;
      RecipeTo := RecipeFrom;
      RecipeToTxt := RecipeFromTxt;
      RecipeToSetEditable;
    END;

    LOCAL PROCEDURE RecipeToSetEditable@19039246();
    BEGIN
      RecipeToEditable := RecipeFrom <> '';
      RecipeToTxtEditable := RecipeFrom <> '';
    END;

    LOCAL PROCEDURE StdDialogConfirm@1100528400() : Boolean;
    BEGIN
      CurrPage.RUNMODAL;
      EXIT(CloseActionOK);
    END;

    LOCAL PROCEDURE StdDialogDoAction@1100528401();
    BEGIN
      StartUpdate;
    END;

    PROCEDURE StdDialogRunModal@1100528404();
    BEGIN
      IF StdDialogConfirm THEN
        StdDialogDoAction;
    END;

    BEGIN
    {
      db, 13-10-15: SourceTable (Recipe Line OLD) removed.
    }
    END.
  }
}

