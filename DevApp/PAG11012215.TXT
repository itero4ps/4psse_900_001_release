OBJECT Page 11012215 Copy Sub-Estimate for Model
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Generate Sub-Estimate per Model;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    PageType=StandardDialog;
    OnOpenPage=BEGIN
                 EstToTxtEditable := TRUE;
               END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                   END;

    OnQueryClosePage=BEGIN
                       CloseActionOK := CloseAction IN [ACTION::OK,ACTION::LookupOK];
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100525000;1;Group  ;
                CaptionML=ENU=Copy from;
                GroupType=Group }

    { 1   ;2   ;Field     ;
                CaptionML=ENU=Estimate;
                NotBlank=Yes;
                SourceExpr=EstFrom;
                OnValidate=BEGIN
                             //dbeekman.sn: 28837
                             EstRec."No." := EstFrom;
                             EstRec.DPA_FindRecWithDPAFilterAppld;
                             //dbeekman.en: 28837
                             EstFromTxt := EstRec.Description;
                             EstToTxt := EstRec.Description;
                           END;

                OnLookup=BEGIN
                           EstRec.RESET;
                           IF PAGE.RUNMODAL(PAGE::"Estimate List", EstRec) = ACTION::LookupOK THEN BEGIN
                              EstFrom := EstRec."No.";
                              EstFromTxt := EstRec.Description;
                              EstToTxt := EstRec.Description;
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 7   ;2   ;Field     ;
                CaptionML=ENU=Estimate Description;
                SourceExpr=EstFromTxt;
                Editable=FALSE }

    { 1210190017;2;Field  ;
                CaptionML=ENU=Estimate Part;
                SourceExpr=SubEstFrom;
                OnValidate=VAR
                             Level@1210190002 : Integer;
                             Chapter@1210190001 : Code[20];
                             Paragraph@1100485001 : Code[20];
                             SubEstRecOLD@1100528901 : Record 11012152;
                             SubEstRecNEW@1100528900 : Record 11072074;
                           BEGIN
                             IF SubEstFrom <> '' THEN
                               IF FormatMgt.Numeric(SubEstFrom) THEN
                                 FormatMgt.FormatSubEstimate(SubEstFrom,Chapter,Paragraph,Level,EstFrom,FALSE);

                             IF EstRec.Converted THEN BEGIN  //DP00381
                               IF NOT SubEstRecNEW.GET(EstFrom,SubEstFrom) THEN SubEstRecNEW.INIT;
                               SubEstFromTxt := SubEstRecNEW.Description;
                             END ELSE BEGIN
                               IF NOT SubEstRecOLD.GET(EstFrom,SubEstFrom) THEN SubEstRecOLD.INIT;
                               SubEstFromTxt := SubEstRecOLD.Description;
                             END;
                           END;

                OnLookup=VAR
                           SubEstRecOLD@1100528902 : Record 11012152;
                           SubEstRecNEW@1100528901 : Record 11072074;
                         BEGIN
                           IF EstRec.Converted THEN BEGIN  //DP00381
                             SubEstRecNEW.SETRANGE("Estimate No.", EstFrom);
                             IF PAGE.RUNMODAL(0,SubEstRecNEW) = ACTION::LookupOK THEN BEGIN
                                SubEstFrom := SubEstRecNEW."Sub-Estimate No.";
                                SubEstFromTxt := SubEstRecNEW.Description;
                             END;
                           END ELSE BEGIN
                             SubEstRecOLD.SETRANGE("Estimate No.", EstFrom);
                             IF PAGE.RUNMODAL(0,SubEstRecOLD) = ACTION::LookupOK THEN BEGIN
                                SubEstFrom := SubEstRecOLD."Sub-Estimate No.";
                                SubEstFromTxt := SubEstRecOLD.Description;
                             END;
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 1210190021;2;Field  ;
                CaptionML=ENU=Estimate Part Description;
                SourceExpr=SubEstFromTxt;
                Editable=FALSE }

    { 1100525001;1;Group  ;
                CaptionML=ENU=Copy to;
                GroupType=Group }

    { 4   ;2   ;Field     ;
                CaptionML=ENU=Estimate;
                NotBlank=Yes;
                SourceExpr=EstTo;
                OnValidate=BEGIN
                             //dbeekman.sn: 28837
                             EstRec."No." := EstTo;
                             IF EstRec.DPA_CanFindRecWithDPAFltrAppld THEN
                               EstToTxt := EstRec.Description
                             ELSE
                               EstToTxt := EstFromTxt;
                             //dbeekman.en: 28837

                             EstToTxtSetEditable;
                           END;

                OnLookup=BEGIN
                           EstRec.RESET;
                           IF PAGE.RUNMODAL(PAGE::"Estimate List", EstRec) = ACTION::LookupOK THEN BEGIN
                              EstTo := EstRec."No.";
                              EstToTxt := EstRec.Description;
                              ValidateEstimate;
                           END;
                           CurrPage.UPDATE(TRUE);

                           EstToTxtSetEditable;
                         END;
                          }

    { 8   ;2   ;Field     ;
                Name=EstToTxt;
                CaptionML=ENU=Estimate Description;
                SourceExpr=EstToTxt;
                Editable=EstToTxtEditable }

    { 1100525007;1;Group  ;
                CaptionML=ENU=Apply;
                GroupType=Group }

    { 1210190000;2;Field  ;
                CaptionML=ENU=Copy Price Agreement;
                SourceExpr=CopyPriceAgreement }

  }
  CODE
  {
    VAR
      Text000@11012008 : TextConst 'ENU=Estimate does not exist';
      EstFrom@11012000 : Code[20];
      EstTo@11012001 : Code[20];
      NewEst@11012002 : Code[20];
      EstFromTxt@11012003 : Text[50];
      EstToTxt@11012004 : Text[50];
      EstNos@1000000002 : Code[20];
      SubEstFrom@1210190021 : Code[20];
      SubEstFromTxt@1210190022 : Text[50];
      SubEstTo@1210190003 : Code[20];
      EstRec@1210190016 : Record 11012151;
      SubEstRec@1210190024 : Record 11012152;
      EstPartRec@1210190001 : Record 11012153;
      EstLineRec@1210190002 : Record 11012154;
      EstModelRec@1210190000 : Record 11012196;
      EstSetupRec@1210190015 : Record 11012150;
      SerLineRec@1210190014 : Record 309;
      SerRelRec@1210190013 : Record 310;
      NoSeriesMgt@1210190012 : Codeunit 396;
      FormatMgt@1210190023 : Codeunit 11012022;
      lp@1100485001 : Integer;
      sp@1100485000 : Integer;
      SkipLines@1100485002 : Boolean;
      EstToTxtEditable@1100525004 : Boolean INDATASET;
      CopyPriceAgreement@1100525007 : Boolean;
      CloseActionOK@1100528400 : Boolean;

    PROCEDURE FillDefaults@1(lEstFrom@11012000 : Code[20]);
    BEGIN
      EstFrom := lEstFrom;
      IF EstRec.GET(EstFrom) THEN BEGIN
        EstFromTxt  := EstRec.Description;

        DetermineNewEstimate;
        EstTo    := NewEst;
        EstToTxt := EstFromTxt;
      END;

      EstToTxtSetEditable;
    END;

    PROCEDURE DetermineNewEstimate@1000000000();
    BEGIN
      EstSetupRec.GET;
      EstNos := EstSetupRec."Estimate Nos.";

      SerRelRec.SETRANGE(Code, EstNos);
      IF SerRelRec.FINDSET THEN BEGIN
        REPEAT
          SerLineRec.SETRANGE("Series Code", SerRelRec."Series Code");
          IF SerLineRec.FINDSET THEN BEGIN
            REPEAT
              IF (SerLineRec.Open = TRUE) AND
                 (EstFrom >= SerLineRec."Starting No.") AND
                 ((EstFrom < SerLineRec."Ending No.") OR (SerLineRec."Ending No." = '')) THEN
                EstNos := SerLineRec."Series Code";
            UNTIL SerLineRec.NEXT = 0;
          END;
        UNTIL SerRelRec.NEXT = 0;
      END;

      NewEst := NoSeriesMgt.GetNextNo(EstNos,0D,FALSE);
    END;

    PROCEDURE Replenish@4(String@11012001 : Text[80];TotLength@11012002 : Integer;WithCharacter@11012003 : Text[1];TrueBool@11012004 : Char) Text@11012000 : Text[80];
    VAR
      Length@11012005 : Integer;
    BEGIN
      Length:=STRLEN(String);
      IF TotLength>Length THEN BEGIN
        CASE TrueBool OF
          '<': String:=PADSTR('',TotLength-Length,WithCharacter)+String;
          '>': String:=String+PADSTR('',TotLength-Length,WithCharacter);
        END;
      END;

      EXIT(String);
    END;

    PROCEDURE ValidateEstimate@1210190001();
    VAR
      lvText000@1210190001 : TextConst 'ENU=Estimate Lines present in Destination.';
      EstLineRecOLD@1100528901 : Record 11012154;
      EstLineRecNEW@1100528900 : Record 11072072;
    BEGIN
      IF EstRec.Converted THEN BEGIN  //DP00381
        EstLineRecNEW.SETRANGE("Estimate No.", EstTo);
        IF SubEstFrom <> '' THEN
          EstLineRecNEW.SETFILTER("Sub-Estimate No.", SubEstFrom);
        IF EstLineRecNEW.FINDFIRST THEN
          ERROR(lvText000);
      END ELSE BEGIN
        EstLineRecOLD.SETRANGE("Estimate No.", EstTo);
        IF SubEstFrom <> '' THEN
          EstLineRecOLD.SETFILTER("Sub-Estimate No.", SubEstFrom);
        IF EstLineRecOLD.FINDFIRST THEN
          ERROR(lvText000);
      END;
    END;

    PROCEDURE StartUpdate@1210190000();
    VAR
      CopyCu@1100528901 : Codeunit 11012151;
      CopyMgt@1100528900 : Codeunit 11012227;
    BEGIN
      IF EstRec.GET(EstTo) THEN
        EstRec.TESTFIELD(Fixed, FALSE);

      EstRec.GET(EstFrom);  //C027729: db 24-12=15
      ValidateEstimate;

      WITH EstRec DO BEGIN  //C027729: db 24-12-15
        IF EstRec.Converted THEN BEGIN  //DP00381
          CopyMgt.SetSelection;
          CopyMgt.CopyEst(EstFrom, SubEstFrom, EstTo, EstToTxt, "Estimate Type",
            "Norm Group", "Rate Group", "Customer No.", "Reference Date (Item)","Purch Discount Term Group 1",
            "Purch Discount Term Group 2", SkipLines, 0, FALSE, CopyPriceAgreement);
        END ELSE BEGIN
          CopyCu.SetSelection;
          CopyCu.CopyEst(EstFrom, SubEstFrom, EstTo, EstToTxt, "Estimate Type",
            "Norm Group", "Rate Group", "Customer No.", "Reference Date (Item)","Purch Discount Term Group 1",
            "Purch Discount Term Group 2", SkipLines, 0, FALSE, CopyPriceAgreement);
        END;
      END;

      CLEAR(NoSeriesMgt);
      NewEst := NoSeriesMgt.GetNextNo(EstNos,0D,FALSE);
      IF NewEst = EstTo THEN
        NewEst := NoSeriesMgt.GetNextNo(EstNos,0D,TRUE);

      IF EstRec.Converted THEN  //DP00381
        CopyModelNEW
      ELSE
        CopyModelOLD;
    END;

    PROCEDURE CopyModelOLD@1210190004();
    VAR
      CopyCu@1210190002 : Codeunit 11012151;
      lvSubEstRec@1210190000 : Record 11012152;
      lvModelLineQuanRec@1210190004 : Record 11012197;
      lvEstModelRec@1100485000 : Record 11012196;
      lvModelTxt@1100485001 : Text[30];
      lvLastModel@1100485002 : Text[30];
    BEGIN
      //- sub-estimates on level 1 will be created for each model
      //- details (parts, lines) will be copied from origin (level=0) to destination (level=1)
      //- quantity recalculated based on model

      CheckFormat;
      lvModelTxt := PADSTR('',lp-sp,'0');
      lvLastModel := '';
      EstModelRec.SETRANGE("Estimate No.", EstFrom);
      IF EstModelRec.FINDSET THEN BEGIN
        REPEAT
          SubEstRec.RESET;
          SubEstRec.SETRANGE("Estimate No.", EstFrom);
          IF SubEstFrom <> '' THEN
            SubEstRec.SETRANGE("Sub-Estimate No.", SubEstFrom);
          SubEstRec.SETRANGE(Level, 0);
          IF SubEstRec.FINDSET THEN BEGIN
            REPEAT
              IF lvLastModel <> EstModelRec.Model THEN
                lvModelTxt := INCSTR(lvModelTxt);
              lvLastModel := EstModelRec.Model;
              SubEstTo := COPYSTR(SubEstRec."Sub-Estimate No.", 1, sp) + Replenish(lvModelTxt,lp-sp,'0','<');

              CLEAR(CopyCu);
              CopyCu.CopyModel(DATABASE::"Sub-Estimate OLD", SubEstRec, EstPartRec);
              CopyCu.CopySubEstimate(EstTo, SubEstTo, EstModelRec.Description,
                SubEstRec."Sub-Estimate No.", '', 1,
                EstModelRec.Quantity, SubEstRec.Frequency * EstModelRec.Quantity);
              CopyCu.UpdateFromTmp;

              CLEAR(CopyCu);
              CopyCu.CopyModel(DATABASE::"Estimate Part OLD", SubEstRec, EstPartRec);
              CopyCu.CopySubEst(EstFrom,SubEstRec."Sub-Estimate No.",EstTo,SubEstTo,EstModelRec.Description,SkipLines,
                CopyPriceAgreement); //mg.c, 11-10-11: M29108;
              CopyCu.UpdateFromTmp;

              lvSubEstRec.GET(EstTo, SubEstTo);
              lvSubEstRec.Model := EstModelRec.Model;
              lvSubEstRec."Source Estimate" := SubEstRec."Estimate No.";
              lvSubEstRec."Adjustment Factor Hours" := 1;
              lvSubEstRec."Adjustment Factor Material" := 1;
              lvSubEstRec."Adjustment Factor Subcontr." := 1;
              lvSubEstRec."Adjustment Factor Plant" := 1;
              lvSubEstRec.VALIDATE(Frequency);  //db, 08-04-05: for cum.frequency (surcharge)
              lvSubEstRec.MODIFY;
            UNTIL SubEstRec.NEXT = 0;
          END;
        UNTIL EstModelRec.NEXT = 0;
      END;

      lvEstModelRec.RESET;
      lvEstModelRec.SETRANGE("Estimate No.", EstTo);
      lvEstModelRec.DELETEALL;

      lvModelLineQuanRec.RESET;
      lvModelLineQuanRec.SETRANGE("Estimate No.", EstTo);
      lvModelLineQuanRec.DELETEALL;

      EstLineRec.RESET;
      EstLineRec.SETRANGE("Estimate No.", EstTo);
      IF EstLineRec.FINDSET(TRUE, FALSE) THEN BEGIN
        REPEAT
          IF EstLineRec."Surcharge Type" = EstLineRec."Surcharge Type"::" " THEN BEGIN
            IF EstLineRec."Sub-Estimate No." <> lvSubEstRec."Sub-Estimate No." THEN
              lvSubEstRec.GET(EstLineRec."Estimate No.", EstLineRec."Sub-Estimate No.");
            IF NOT lvModelLineQuanRec.GET(lvSubEstRec."Source Estimate", lvSubEstRec.Chapter,
              EstLineRec."Part Group", EstLineRec.Part, EstLineRec."Line No.", lvSubEstRec.Model) THEN
              lvModelLineQuanRec.INIT;
            EstLineRec.VALIDATE(Quantity, lvModelLineQuanRec.Quantity);
            EstLineRec.MODIFY;
          END ELSE BEGIN
            IF EstLineRec."Surcharge %" <> 0 THEN
              EstLineRec.CheckEstimateCharge;
          END;
        UNTIL EstLineRec.NEXT = 0;
      END;
    END;

    PROCEDURE CopyModelNEW@1100528902();
    VAR
      CopyMgt@1210190002 : Codeunit 11012227;
      SubEstRec@1100528900 : Record 11072074;
      EstPartRec@1100528901 : Record 11072073;
      EstLineRec@1100528902 : Record 11072072;
      SubEstRec2@1210190000 : Record 11072074;
      ModelLineQuanRec@1210190004 : Record 11012197;
      EstModelRec@1100485000 : Record 11012196;
      lvModelTxt@1100485001 : Text[30];
      lvLastModel@1100485002 : Text[30];
    BEGIN
      //- sub-estimates on level 1 will be created for each model
      //- details (parts, lines) will be copied from origin (level=0) to destination (level=1)
      //- quantity recalculated based on model

      CheckFormat;
      lvModelTxt := PADSTR('',lp-sp,'0');
      lvLastModel := '';
      EstModelRec.SETRANGE("Estimate No.", EstFrom);
      IF EstModelRec.FINDSET THEN BEGIN
        REPEAT
          SubEstRec.RESET;
          SubEstRec.SETRANGE("Estimate No.", EstFrom);
          IF SubEstFrom <> '' THEN
            SubEstRec.SETRANGE("Sub-Estimate No.", SubEstFrom);
          SubEstRec.SETRANGE(Level, 0);
          IF SubEstRec.FINDSET THEN BEGIN
            REPEAT
              IF lvLastModel <> EstModelRec.Model THEN
                lvModelTxt := INCSTR(lvModelTxt);
              lvLastModel := EstModelRec.Model;
              SubEstTo := COPYSTR(SubEstRec."Sub-Estimate No.", 1, sp) + Replenish(lvModelTxt,lp-sp,'0','<');

              CLEAR(CopyMgt);
              CopyMgt.CopyModel(DATABASE::"Sub-Estimate NEW", SubEstRec, EstPartRec);
              CopyMgt.CopySubEstimate(EstTo, SubEstTo, EstModelRec.Description,
                SubEstRec."Sub-Estimate No.", '', 1,
                EstModelRec.Quantity, SubEstRec.Frequency * EstModelRec.Quantity);
              CopyMgt.UpdateFromTmp;

              CLEAR(CopyMgt);
              CopyMgt.CopyModel(DATABASE::"Estimate Part NEW", SubEstRec, EstPartRec);
              CopyMgt.CopySubEst(EstFrom,SubEstRec."Sub-Estimate No.",EstTo,SubEstTo,EstModelRec.Description,SkipLines,
                CopyPriceAgreement); //mg.c, 11-10-11: M29108;
              CopyMgt.UpdateFromTmp;

              SubEstRec2.GET(EstTo, SubEstTo);
              SubEstRec2.Model := EstModelRec.Model;
              SubEstRec2."Source Estimate" := SubEstRec."Estimate No.";
              SubEstRec2."Adjustment Factor Hours" := 1;
              SubEstRec2."Adjustment Factor Material" := 1;
              SubEstRec2."Adjustment Factor Subcontr." := 1;
              SubEstRec2."Adjustment Factor Plant" := 1;
              SubEstRec2."Adjustment Factor Sundry" := 1;
              SubEstRec2.VALIDATE(Frequency);  //db, 08-04-05: for cum.frequency (surcharge)
              SubEstRec2.MODIFY;
            UNTIL SubEstRec.NEXT = 0;
          END;
        UNTIL EstModelRec.NEXT = 0;
      END;

      EstModelRec.RESET;
      EstModelRec.SETRANGE("Estimate No.", EstTo);
      EstModelRec.DELETEALL;

      ModelLineQuanRec.RESET;
      ModelLineQuanRec.SETRANGE("Estimate No.", EstTo);
      ModelLineQuanRec.DELETEALL;

      EstLineRec.RESET;
      EstLineRec.SETRANGE("Estimate No.", EstTo);
      IF EstLineRec.FINDSET(TRUE, FALSE) THEN BEGIN
        REPEAT
          IF EstLineRec."Surcharge Type" = EstLineRec."Surcharge Type"::" " THEN BEGIN
            IF EstLineRec."Sub-Estimate No." <> SubEstRec2."Sub-Estimate No." THEN
              SubEstRec2.GET(EstLineRec."Estimate No.", EstLineRec."Sub-Estimate No.");
            IF NOT ModelLineQuanRec.GET(SubEstRec2."Source Estimate", SubEstRec2.Chapter,
              EstLineRec."Part Group", EstLineRec.Part, EstLineRec."Line No.", SubEstRec2.Model) THEN
              ModelLineQuanRec.INIT;
            EstLineRec.VALIDATE(Quantity, ModelLineQuanRec.Quantity);
            EstLineRec.MODIFY;
          END ELSE BEGIN
            IF EstLineRec."Surcharge %" <> 0 THEN
              EstLineRec.CheckEstimateCharge;
          END;
        UNTIL EstLineRec.NEXT = 0;
      END;
    END;

    PROCEDURE CheckFormat@16();
    VAR
      EstSetupRec@11012000 : Record 11012150;
      lvFrmt@1100485001 : Code[20];
      x@1100485002 : Integer;
    BEGIN
      x := 0;
      sp := 0;

      EstSetupRec.GET();
      EstSetupRec.TESTFIELD("Sub-Estimate Format");
      lp := STRLEN(EstSetupRec."Sub-Estimate Format");
      lvFrmt := EstSetupRec."Sub-Estimate Format";

      REPEAT
        x := x + 1;
        IF COPYSTR(lvFrmt,x,1) = '.' THEN
          sp := x;
      UNTIL x = lp;
    END;

    LOCAL PROCEDURE EstToTxtSetEditable@19010875();
    BEGIN
      IF EstRec.GET(EstTo) THEN
        EstToTxtEditable :=FALSE
      ELSE
        EstToTxtEditable := TRUE;
    END;

    LOCAL PROCEDURE StdDialogConfirm@1100528400() : Boolean;
    BEGIN
      CurrPage.RUNMODAL;
      EXIT(CloseActionOK);
    END;

    LOCAL PROCEDURE StdDialogDoAction@1100528401();
    BEGIN
      StartUpdate;
    END;

    PROCEDURE StdDialogRunModal@1100528404();
    BEGIN
      IF StdDialogConfirm THEN
        StdDialogDoAction;
    END;

    PROCEDURE GetNewEstimate@1100525000() : Code[20];
    BEGIN
      //C027729: db, 24-12-15
      EXIT(EstTo);
    END;

    BEGIN
    {
      db, 24-12-15: SourceTable (Estimate) removed; DPA-actions skipped  (C027729)
    }
    END.
  }
}

