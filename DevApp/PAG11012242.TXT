OBJECT Page 11012242 Estimate Part Lines OLD
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Estimate Part Lines;
    SourceTable=Table11012187;
    DelayedInsert=Yes;
    PageType=List;
    AutoSplitKey=Yes;
    PromotedActionCategoriesML=ENU=New,Process,Report,Copy,Text;
    OnInit=BEGIN
             CopyButton2Visible := TRUE;
             QuantityEditable := TRUE;  //DP00686
           END;

    OnOpenPage=BEGIN
                 CopyButton2Visible := (gvEst<>'');  //db 19-09-07
               END;

    OnAfterGetRecord=BEGIN
                       Surcharge37OnFormat;
                       CostObjectLaborOnFormat;
                       CostObjectMaterialOnFormat;
                       CostObjectSubcontractingOnForm;
                       CostObjectPlantOnFormat;
                     END;

    OnAfterGetCurrRecord=BEGIN
                           QuantityEditable := EnterQuantity(2);  //DP00686
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1210190051;1 ;ActionGroup;
                      CaptionML=ENU=Text &Block }
      { 1210190052;2 ;Action    ;
                      CaptionML=ENU=&Internal Text;
                      Promoted=Yes;
                      Image=SNInfo;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 EditText(TxtType::intern);
                               END;
                                }
      { 1210190053;2 ;Action    ;
                      CaptionML=ENU=&External Text;
                      Promoted=Yes;
                      Image=SNInfo;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 EditText(TxtType::extern);
                               END;
                                }
      { 1100485037;1 ;ActionGroup;
                      Name=CopyButton;
                      CaptionML=ENU=&Copy }
      { 1100485038;2 ;Action    ;
                      CaptionML=ENU=Show Buffer;
                      Promoted=Yes;
                      Image=Allocations;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowBuffer;
                               END;
                                }
      { 1100485039;2 ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=ENU=Copy to Buffer;
                      Promoted=Yes;
                      Image=SelectLineToApply;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CopyToBuffer;
                               END;
                                }
      { 1100485040;2 ;Action    ;
                      ShortCutKey=Shift+F11;
                      CaptionML=ENU=Copy from Buffer;
                      Promoted=Yes;
                      Image=PostApplication;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CopyFromBuffer;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100485042;1 ;Action    ;
                      Name=CopyButton2;
                      CaptionML=ENU=&Copy;
                      Promoted=Yes;
                      Visible=CopyButton2Visible;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 EstimatePartLine@1100525001 : Record 11012187;
                               BEGIN
                                 //db, 14-06-07
                                 EstPartRec.GET(gvEst, gvSubEst, gvPartGrp, gvPart);
                                 CurrPage.SETSELECTIONFILTER(EstimatePartLine);
                                 EstLineRec.CopyPartLines(EstPartRec,EstimatePartLine,TRUE);
                                 CurrPage.CLOSE;
                               END;
                                }
      { 1100485005;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1100485006;2 ;Action    ;
                      CaptionML=ENU=Explode Recipe Lines;
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeRecipe("Part Group", Part);
                               END;
                                }
      { 1100485007;2 ;Action    ;
                      CaptionML=ENU=Compress Part Lines;
                      Image=Start;
                      OnAction=BEGIN
                                 CompressLines("Part Group", Part);
                               END;
                                }
      { 1100485030;2 ;Action    ;
                      CaptionML=ENU=Compress Collectively;
                      Image=Start;
                      OnAction=VAR
                                 BasePart@1100525000 : Record 11012169;
                               BEGIN
                                 //db, 08-09-15
                                 BasePart.SETRANGE("Part Group","Part Group");
                                 BasePart.SETRANGE(Code,Part);
                                 REPORT.RUN(REPORT::"Compress Estimate Part Lines",TRUE,FALSE,BasePart);
                               END;
                                }
      { 1100485033;2 ;Action    ;
                      CaptionML=ENU=Modify Vendor Collectively;
                      Promoted=Yes;
                      Image=SuggestVendorBills;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 EstimatePartLine@1100525001 : Record 11012187;
                                 ModifyItemVendor@1100485000 : Page 11020420;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(EstimatePartLine);
                                 ModifyItemVendor.SetEstimatePartLineOLDRec(EstimatePartLine);
                                 ModifyItemVendor.RUNMODAL;
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100485000;1 ;Action    ;
                      CaptionML=ENU=&Surcharge;
                      Promoted=Yes;
                      Image=AdjustItemCost;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 EstimatePartLine@1100525000 : Record 11012187;
                               BEGIN
                                 //C008842.sn
                                 //CreateCharge;
                                 EstimatePartLine.COPY(Rec);
                                 CurrPage.SETSELECTIONFILTER(EstimatePartLine);
                                 EstimatePartLine.CreateCharge;
                                 //C008842.en
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210190000;1;Group  ;
                GroupType=Repeater }

    { 1210190001;2;Field  ;
                SourceExpr="Part Group";
                Visible=FALSE }

    { 1210190003;2;Field  ;
                SourceExpr=Part;
                Visible=FALSE }

    { 1210190005;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE }

    { 1210190007;2;Field  ;
                SourceExpr="Recipe Group" }

    { 1210190009;2;Field  ;
                SourceExpr=Recipe;
                OnLookup=VAR
                           RecipeFrm@1210190002 : Page 11012164;
                           RecipeRec@1210190001 : Record 11012155;
                         BEGIN
                           CLEAR(RecipeFrm);
                           RecipeFrm.LOOKUPMODE(TRUE);
                           RecipeFrm.SetSelection(DATABASE::"Estimate Part Line OLD",'','',"Part Group",Part,'','','','','',TRUE);
                           RecipeRec.SETRANGE("Recipe Group","Recipe Group");
                           IF RecipeRec.GET("Recipe Group",Recipe) THEN
                             RecipeFrm.SETRECORD(RecipeRec);
                           RecipeFrm.SETTABLEVIEW(RecipeRec);
                           IF RecipeFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             RecipeFrm.GETRECORD(RecipeRec);
                             "Recipe Group" := RecipeRec."Recipe Group";
                             VALIDATE(Recipe, RecipeRec."No.");
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 1210190069;2;Field  ;
                SourceExpr=Element;
                Visible=FALSE }

    { 1100528400;2;Field  ;
                SourceExpr="Project Plann. Base Act. Code";
                Visible=FALSE }

    { 1210190011;2;Field  ;
                SourceExpr="Item No.";
                OnLookup=VAR
                           ItemFrm@1210190001 : Page 31;
                           ItemRec@1210190000 : Record 27;
                         BEGIN
                           IF Recipe <> '' THEN EXIT;
                           CLEAR(ItemFrm);
                           ItemFrm.LOOKUPMODE(TRUE);
                           ItemFrm.DetermineInterface(DATABASE::"Estimate Part Line OLD",'','',Part,'',0,'',"Part Group","Line No.",'','');
                           IF ItemRec.GET("Item No.") THEN
                             ItemFrm.SETRECORD(ItemRec);
                           IF ItemFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             ItemFrm.GETRECORD(ItemRec);
                             VALIDATE("Item No.", ItemRec."No.");
                           END ELSE BEGIN
                             IF ItemFrm.CheckMultiCopy THEN  //db, 09-03-07 (call 8283)
                               CurrPage.UPDATE(TRUE);
                           END;
                         END;
                          }

    { 1210190021;2;Field  ;
                SourceExpr=Manufacturer }

    { 1210190013;2;Field  ;
                SourceExpr="Basic Item";
                OnLookup=VAR
                           BasicItemFrm@1210190001 : Page 11012333;
                           BasicItemRec@1210190000 : Record 11012316;
                         BEGIN
                           IF Recipe <> '' THEN EXIT;
                           CLEAR(BasicItemFrm);
                           BasicItemFrm.LOOKUPMODE(TRUE);
                           BasicItemFrm.SetSelection(DATABASE::"Estimate Part Line OLD",'','',Part,'',0,'',"Part Group", "Line No.",'','');

                           BasicItemRec.InitLookup(BasicItemRec, "Basic Item", Manufacturer);
                           BasicItemFrm.SETRECORD(BasicItemRec);

                           IF BasicItemFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             BasicItemFrm.GETRECORD(BasicItemRec);
                             Manufacturer := BasicItemRec.Manufacturer;
                             VALIDATE("Basic Item", BasicItemRec."Product Code");
                           END ELSE BEGIN
                             IF BasicItemFrm.CheckMultiCopy THEN  //db, 09-03-07 (call 8283)
                               CurrPage.UPDATE(TRUE);
                           END;
                         END;
                          }

    { 1210190019;2;Field  ;
                SourceExpr="Vendor (Trade Item)" }

    { 1210190015;2;Field  ;
                SourceExpr="Trade Item";
                OnLookup=VAR
                           TradeItemRec@1210190001 : Record 11012317;
                           TradeItemFrm@1210190000 : Page 11012334;
                           lvTempPartLine@1100525002 : TEMPORARY Record 11012187;
                         BEGIN
                           IF Recipe <> '' THEN
                             EXIT;

                           IF "Item No." <> '' THEN BEGIN
                             lvTempPartLine.INIT;
                             lvTempPartLine."Recipe Group" := "Recipe Group";
                             lvTempPartLine.VALIDATE("Item No.","Item No.");
                             g_ItemCode := lvTempPartLine."Trade Item";
                             g_Vendor := lvTempPartLine."Vendor (Trade Item)";
                           END ELSE BEGIN
                             g_ItemCode := '';
                             g_Vendor := '';
                           END;

                           CLEAR(TradeItemFrm);
                           TradeItemFrm.LOOKUPMODE(TRUE);
                           TradeItemFrm.SetSelection(DATABASE::"Estimate Part Line OLD",
                             '', '', Part, '', 0, '', "Part Group", "Line No.", '', '',
                             "Vendor (Trade Item)", "Trade Item", Manufacturer, "Basic Item", g_ItemCode, g_Vendor);

                           TradeItemRec.InitLookup(TradeItemRec, "Basic Item", Manufacturer, "Trade Item", "Vendor (Trade Item)");
                           TradeItemFrm.SETRECORD(TradeItemRec);

                           IF TradeItemFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             TradeItemFrm.GETRECORD(TradeItemRec);
                             Manufacturer := TradeItemRec.Manufacturer;
                             "Basic Item" := TradeItemRec."Product Code";
                             "Vendor (Trade Item)" := TradeItemRec.Vendor;
                             VALIDATE("Trade Item", TradeItemRec."Item Code");
                           END ELSE BEGIN
                             IF TradeItemFrm.CheckMultiCopy THEN  //db, 09-03-07 (call 8283)
                               CurrPage.UPDATE(TRUE);
                           END;
                         END;
                          }

    { 1210190023;2;Field  ;
                SourceExpr=Description }

    { 1210190036;2;Field  ;
                SourceExpr="Internal Text Block";
                Visible=FALSE }

    { 1210190037;2;Field  ;
                SourceExpr="External Text Block";
                Visible=FALSE }

    { 1210190025;2;Field  ;
                SourceExpr="Time Quantity";
                Visible=FALSE }

    { 1210190027;2;Field  ;
                SourceExpr="Unit of Time";
                Visible=FALSE }

    { 1210190029;2;Field  ;
                SourceExpr=Quantity;
                Editable=QuantityEditable }

    { 1210190031;2;Field  ;
                SourceExpr="Unit of Measure" }

    { 1100409000;2;Field  ;
                SourceExpr="Ignore Part Quantity";
                Importance=Additional }

    { 1210190055;2;Field  ;
                SourceExpr="Line Status" }

    { 1100485001;2;Field  ;
                SourceExpr="Surcharge Type" }

    { 1100485003;2;Field  ;
                SourceExpr="Surcharge %";
                OnDrillDown=VAR
                              ChrgFrm@1100485001 : Page 11012219;
                            BEGIN
                              ChrgRec.RESET;
                              ChrgRec.SETRANGE("Estimate No.", '');
                              ChrgRec.SETRANGE("Sub-Estimate No.", '');
                              ChrgRec.SETRANGE("Part Group", "Part Group");
                              ChrgRec.SETRANGE(Part, Part);
                              ChrgRec.SETRANGE("Recipe Line", 0);
                              ChrgRec.SETRANGE("Recipe Group", '');
                              ChrgRec.SETRANGE(Recipe, '');
                              ChrgRec.SETRANGE("Surcharge Line", "Line No.");
                              ChrgFrm.SETTABLEVIEW(ChrgRec);
                              ChrgFrm.SetSelection(1);
                              ChrgFrm.RUNMODAL;
                              //PAGE.RUNMODAL(PAGE::"Estimate Surcharge", ChrgRec);

                              CurrPage.UPDATE(TRUE);
                            END;
                             }

    { 1210190049;2;Field  ;
                SourceExpr="Rate Code" }

    { 1210190047;2;Field  ;
                SourceExpr="Sub Operation Code" }

    { 1100485008;2;Field  ;
                SourceExpr=Norm;
                Visible=FALSE }

    { 1100485012;2;Field  ;
                SourceExpr="Gross Price";
                Visible=FALSE }

    { 1100485014;2;Field  ;
                SourceExpr="Discount %";
                Visible=FALSE }

    { 1100485010;2;Field  ;
                SourceExpr="Material Price";
                Visible=FALSE }

    { 1100485016;2;Field  ;
                SourceExpr="Subcontracting Price";
                Visible=FALSE }

    { 1100485018;2;Field  ;
                SourceExpr="Plant Price";
                Visible=FALSE }

    { 1210190039;2;Field  ;
                SourceExpr="Cost Object Labor" }

    { 1210190041;2;Field  ;
                SourceExpr="Cost Object Material" }

    { 1210190043;2;Field  ;
                SourceExpr="Cost Object Subcontracting" }

    { 1210190045;2;Field  ;
                SourceExpr="Cost Object Plant" }

    { 1100525000;2;Field  ;
                SourceExpr="Cost Component";
                Visible=FALSE }

    { 1210190057;2;Field  ;
                SourceExpr=Code;
                Visible=FALSE }

    { 1210190061;2;Field  ;
                SourceExpr="Adjustment Factor Hours";
                Visible=FALSE }

    { 1210190063;2;Field  ;
                SourceExpr="Adjustment Factor Material";
                Visible=FALSE }

    { 1210190065;2;Field  ;
                SourceExpr="Adjustment Factor Subcontr.";
                Visible=FALSE }

    { 1210190067;2;Field  ;
                SourceExpr="Adjustment Factor Plant";
                Visible=FALSE }

    { 1100485024;2;Field  ;
                SourceExpr=Discipline;
                Visible=FALSE }

    { 1100485026;2;Field  ;
                SourceExpr="Trade Speciality";
                Visible=FALSE }

    { 1100485028;2;Field  ;
                SourceExpr="Trade Expertise";
                Visible=FALSE }

    { 1100485031;2;Field  ;
                SourceExpr=Subcontractor;
                Visible=FALSE }

    { 1210190059;2;Field  ;
                SourceExpr=Vendor;
                Visible=FALSE }

  }
  CODE
  {
    VAR
      Text009@1210190000 : TextConst 'ENU=Before editing text enter the line first';
      ChrgRec@1100485009 : Record 11012175;
      PartLineRec@1100485000 : Record 11012187;
      EstPartRec@1100485012 : Record 11012153;
      EstLineRec@1100485013 : Record 11012154;
      RcpLineRec@1100485015 : Record 11012156;
      TxtType@1210190001 : 'intern,extern';
      chrg0@1100485008 : Boolean;
      chrg1@1100485007 : Boolean;
      chrg2@1100485006 : Boolean;
      chrg3@1100485005 : Boolean;
      chrg4@1100485004 : Boolean;
      gvEst@1100485011 : Code[20];
      gvSubEst@1100485010 : Code[20];
      gvPartGrp@1100485003 : Code[20];
      gvPart@1100485002 : Code[20];
      gvLine@1100485001 : Integer;
      BufferMgt@1100485014 : Codeunit 11012150;
      g_ItemCode@1100525001 : Code[20];
      g_Vendor@1100525000 : Code[20];
      CopyButton2Visible@19069644 : Boolean INDATASET;
      "Surcharge %Emphasize"@19034906 : Boolean INDATASET;
      "Cost Object LaborEmphasize"@19031060 : Boolean INDATASET;
      "Cost Object MaterialEmphasize"@19008779 : Boolean INDATASET;
      CostObjectSubcontractingEmphas@19042349 : Boolean INDATASET;
      "Cost Object PlantEmphasize"@19056740 : Boolean INDATASET;
      QuantityEditable@1100409000 : Boolean INDATASET;

    PROCEDURE EditText@8(lvType@1210190000 : 'intern,extern');
    VAR
      TextFrm@11012001 : Page 11012120;
    BEGIN
      IF "Line No." = 0 THEN
        ERROR(Text009);

      TextFrm.TextType(lvType);
      TextFrm.SetSelection(DATABASE::"Estimate Part Line OLD",'','',"Part Group",Part,'','',"Line No.",0);
      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    PROCEDURE CheckCostObjectsFilled@1210190003() : Boolean;
    BEGIN
      IF ("Cost Object Labor" = '') AND ("Cost Object Material" = '') AND
         ("Cost Object Subcontracting" = '') AND ("Cost Object Plant" = '') THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE ChargePresent@7();
    BEGIN
      chrg0 := FALSE;
      chrg1 := FALSE;
      chrg2 := FALSE;
      chrg3 := FALSE;
      chrg4 := FALSE;

      ChrgRec.RESET;
      ChrgRec.SETRANGE("Estimate No.", '');
      ChrgRec.SETRANGE("Sub-Estimate No.", '');
      ChrgRec.SETRANGE("Part Group", "Part Group");
      ChrgRec.SETRANGE(Part, Part);
      ChrgRec.SETRANGE("Recipe Line", 0);
      ChrgRec.SETRANGE("Recipe Group", '');
      ChrgRec.SETRANGE(Recipe, '');
      ChrgRec.SETRANGE("Basic Line", "Line No.");
      ChrgRec.SETRANGE("Surcharge Line");
      IF ChrgRec.FIND('-') THEN BEGIN
        REPEAT
          IF PartLineRec.GET("Part Group", Part, ChrgRec."Surcharge Line") THEN BEGIN
            CASE PartLineRec."Surcharge Type" OF
              PartLineRec."Surcharge Type"::Labor:
                chrg1 := TRUE;
              PartLineRec."Surcharge Type"::Material:
                chrg2 := TRUE;
              PartLineRec."Surcharge Type"::Subcontracting:
                chrg3 := TRUE;
              PartLineRec."Surcharge Type"::Plant:
                chrg4 := TRUE;
            END;
          END;
        UNTIL ChrgRec.NEXT = 0;
      END;

      ChrgRec.SETRANGE("Basic Line");
      ChrgRec.SETRANGE("Surcharge Line", "Line No.");
      IF ChrgRec.FIND('-') THEN
        chrg0 := TRUE;
    END;

    PROCEDURE FillDefaults@1(lvEst@11012000 : Code[20];lvSubEst@11012001 : Code[20];lvPartGrp@11012002 : Code[20];lvPart@11012003 : Code[20];lvLine@11012004 : Integer);
    BEGIN
      gvEst  := lvEst;
      gvSubEst := lvSubEst;
      gvPartGrp := lvPartGrp;
      gvPart := lvPart;
      gvLine := lvLine;
    END;

    PROCEDURE CopyToBuffer@1100485003();
    VAR
      EstimatePartLine@1100525000 : Record 11012187;
    BEGIN
      EstimatePartLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(EstimatePartLine);
      BufferMgt.CopyToBuffer(2,EstLineRec,RcpLineRec,EstimatePartLine);
    END;

    PROCEDURE CopyFromBuffer@1100485002();
    BEGIN
      BufferMgt.CopyFromBuffer(2,EstLineRec,RcpLineRec,Rec);
    END;

    PROCEDURE ShowBuffer@1100485001();
    BEGIN
      BufferMgt.ShowBuffer(2,EstLineRec,RcpLineRec,Rec);
    END;

    LOCAL PROCEDURE Surcharge37OnFormat@19065939();
    BEGIN
      ChargePresent;
      "Surcharge %Emphasize" := chrg0;
    END;

    LOCAL PROCEDURE CostObjectLaborOnFormat@19035706();
    BEGIN
      ChargePresent;
      "Cost Object LaborEmphasize" := chrg1;
    END;

    LOCAL PROCEDURE CostObjectMaterialOnFormat@19013276();
    BEGIN
      ChargePresent;
      "Cost Object MaterialEmphasize" := chrg2;
    END;

    LOCAL PROCEDURE CostObjectSubcontractingOnForm@19025878();
    BEGIN
      ChargePresent;
      CostObjectSubcontractingEmphas := chrg3;
    END;

    LOCAL PROCEDURE CostObjectPlantOnFormat@19076026();
    BEGIN
      ChargePresent;
      "Cost Object PlantEmphasize" := chrg4;
    END;

    BEGIN
    END.
  }
}

