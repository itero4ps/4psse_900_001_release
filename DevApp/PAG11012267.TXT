OBJECT Page 11012267 Extra Receipts
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Extra Receipts;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table39;
    SourceTableView=WHERE(Document Type=CONST(Order));
    DataCaptionFields=Description;
    PageType=Card;
    OnInit=BEGIN
             AmountTextBoxEditable := TRUE;
             QuanTextBoxEditable := TRUE;
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
               END;

    OnAfterGetRecord=BEGIN
                       PurchHeader.GET("Document Type", "Document No.");
                       QuanTextBoxEditable := (NOT PurchHeader."Amounts only");
                       AmountTextBoxEditable := (PurchHeader."Amounts only");
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1210190013;1 ;Action    ;
                      CaptionML=ENU=&Insert;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 PurchLineRec@1210190000 : Record 39;
                                 PurchaseLineExtension@1100525001 : Record 11020644;
                               BEGIN
                                 InsertExtraOrderLine;

                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group      }

    { 1210190000;2;Field  ;
                SourceExpr="Document No.";
                Editable=FALSE }

    { 1210190002;2;Field  ;
                SourceExpr="Buy-from Vendor No.";
                Editable=FALSE }

    { 1210190004;2;Field  ;
                SourceExpr="Shortcut Dimension 2 Code";
                Editable=FALSE }

    { 1210190006;2;Field  ;
                SourceExpr=Quantity;
                Editable=FALSE }

    { 1210190008;2;Field  ;
                SourceExpr="Unit of Measure Code";
                Editable=FALSE }

    { 1210190010;2;Field  ;
                SourceExpr=Description;
                Editable=FALSE }

    { 1100525000;2;Field  ;
                CaptionML=ENU=Element;
                SourceExpr=ElementCde;
                TableRelation="Project Element".Element WHERE (Project No.=FIELD(Job No.));
                OnValidate=VAR
                             ExtensionContractRec@1210190000 : Record 11012004;
                           BEGIN
                             IF ElementCde <> '' THEN
                               IF NOT ProjectElementRec.GET("Job No.",ElementCde) THEN
                                 ERROR(STRSUBSTNO(text001,ElementCde,"Job No."));
                           END;

                OnLookup=VAR
                           ProjectElementPage@1100525000 : Page 11012029;
                         BEGIN
                           IF "Job No." <> '' THEN BEGIN
                             CLEAR(ProjectElementPage);
                             ProjectElementRec.SETRANGE("Project No.","Job No.");
                             ProjectElementPage.SETTABLEVIEW(ProjectElementRec);
                             ProjectElementPage.LOOKUPMODE(TRUE);
                             IF ProjectElementPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
                               ProjectElementPage.GETRECORD(ProjectElementRec);
                               ElementCde := ProjectElementRec.Element;
                             END;
                           END;
                         END;
                          }

    { 1210190014;2;Field  ;
                CaptionML=ENU=Extension Contract;
                SourceExpr=ExtensionCde;
                OnValidate=VAR
                             ExtensionContractRec@1210190000 : Record 11012004;
                           BEGIN
                             IF ExtensionCde <> '' THEN
                               IF NOT ExtensionContractRec.GET("Job No.",ExtensionCde) THEN
                                 ERROR(STRSUBSTNO(text000,ExtensionCde,"Job No."));
                           END;

                OnLookup=VAR
                           ExtensionContractFrm@1210190000 : Page 11012014;
                           ExtensionContractRec@1210190001 : Record 11012004;
                         BEGIN
                           IF "Job No." <> '' THEN BEGIN
                             CLEAR(ExtensionContractFrm);
                             ExtensionContractRec.SETRANGE("Project No.","Job No.");
                             ExtensionContractFrm.SETTABLEVIEW(ExtensionContractRec);
                             ExtensionContractFrm.LOOKUPMODE(TRUE);
                             IF ExtensionContractFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                               ExtensionContractFrm.GETRECORD(ExtensionContractRec);
                               ExtensionCde := ExtensionContractRec."Contract No.";
                             END;
                           END;
                         END;
                          }

    { 1210190009;2;Field  ;
                CaptionML=ENU=Extra Description;
                SourceExpr=ExtraDescTxt }

    { 1210190015;2;Field  ;
                Name=QuanTextBox;
                CaptionML=ENU=Extra Quantity;
                SourceExpr=ExtraQuanDec;
                Editable=QuanTextBoxEditable }

    { 1100485000;2;Field  ;
                Name=AmountTextBox;
                CaptionML=ENU=Extra Amount;
                SourceExpr=ExtraAmount;
                Editable=AmountTextBoxEditable }

  }
  CODE
  {
    VAR
      PurchHeader@1100485004 : Record 38;
      DepAuthRec@1100485002 : Record 11012466;
      ExtensionCde@1100485003 : Code[10];
      ExtraDescTxt@1210190000 : Text[50];
      ExtraQuanDec@1210190001 : Decimal;
      ExtraAmount@1100485000 : Decimal;
      text000@1210190003 : TextConst 'ENU=Extension contract %1 does not exist for project %2';
      DPA_IsHardFilter@1100000999 : Boolean;
      QuanTextBoxEditable@19017492 : Boolean INDATASET;
      AmountTextBoxEditable@19030150 : Boolean INDATASET;
      ElementCde@1100525000 : Code[20];
      ProjectElementRec@1100525001 : Record 11012010;
      text001@1100525002 : TextConst 'ENU=Extension contract %1 does not exist for project %2';

    LOCAL PROCEDURE InsertExtraOrderLine@1100525001();
    VAR
      PurchLineRec@1100525001 : Record 39;
      PurchaseLineExtension@1100525000 : Record 11020644;
    BEGIN
      IF (ExtraQuanDec = 0) AND (ExtraAmount = 0) THEN
        EXIT;

      PurchLineRec.INIT;
      PurchLineRec.SuspendStatusCheck(TRUE);
      PurchLineRec."Document Type"  := "Document Type";
      PurchLineRec."Document No." := "Document No.";
      PurchLineRec."Line No." := NewLineNo();
      PurchLineRec.VALIDATE("Currency Code","Currency Code");
      PurchLineRec.VALIDATE(Type,PurchLineRec.Type::"G/L Account");
      PurchLineRec."System-Created Entry"  := TRUE;
      PurchLineRec."Job No." := "Job No.";
      PurchLineRec."Service Contract No." := "Service Contract No.";
      PurchLineRec.VALIDATE("Service Order No.", "Service Order No.");
      IF ElementCde <> '' THEN
        PurchLineRec.Element := ElementCde
      ELSE
        PurchLineRec.Element := Element;

      IF ExtensionCde <> '' THEN
        PurchLineRec."Extension Contract" := ExtensionCde
      ELSE
        PurchLineRec."Extension Contract" := "Extension Contract";
      PurchLineRec.VALIDATE("Purchase Action", '');
      PurchLineRec.VALIDATE("Tender Paragraph","Tender Paragraph");
      PurchLineRec."Purchase Phase" := '';
      PurchLineRec."Cost Type" := "Cost Type";
      PurchLineRec.VALIDATE("Item No.", "Item No.");
      PurchLineRec.Manufacturer := Manufacturer;
      PurchLineRec.VALIDATE("Basic Item", "Basic Item");
      PurchLineRec."Vendor (Trade Item)" := "Vendor (Trade Item)";
      PurchLineRec.VALIDATE("Trade Item","Trade Item");
      PurchLineRec.VALIDATE("Plant Type","Plant Type");  //*29594   Do not fill PlantNo (extra receipt of same PlantNo not allowed
      PurchLineRec.VALIDATE("Cost Component Plant","Cost Component Plant");  //*29594
      PurchLineRec.VALIDATE("No.","No.");
      //T004036
      //PurchLineRec.VALIDATE("Shortcut Dimension 2 Code","Shortcut Dimension 2 Code");
      PurchLineRec."Shortcut Dimension 1 Code" := "Shortcut Dimension 1 Code";
      PurchLineRec."Shortcut Dimension 2 Code" := "Shortcut Dimension 2 Code";
      PurchLineRec."Dimension Set ID" := "Dimension Set ID";
      //
      IF PurchHeader."Amounts only" THEN BEGIN
        PurchLineRec.VALIDATE("Line Amount", ExtraAmount);
        PurchLineRec.VALIDATE("Unit of Measure Code","Unit of Measure Code");
      END ELSE BEGIN
        PurchLineRec.VALIDATE(Quantity, ExtraQuanDec);
        PurchLineRec.VALIDATE("Unit of Measure Code","Unit of Measure Code");
        IF "Direct Unit Cost" < 0 THEN
          PurchLineRec.VALIDATE("Direct Unit Cost",-"Direct Unit Cost")
        ELSE
          PurchLineRec.VALIDATE("Direct Unit Cost","Direct Unit Cost");
      END;
      PurchLineRec.VALIDATE("Line Discount %","Line Discount %");  //*C-025870.n
      PurchLineRec."Cost Component" := "Cost Component";
      PurchLineRec."Posting Date" := "Posting Date";
      PurchLineRec.VALIDATE("Expected Receipt Date","Expected Receipt Date");
      PurchLineRec."Extra Receipt Line" := TRUE;
      IF ExtraDescTxt <> '' THEN
        PurchLineRec.Description := ExtraDescTxt
      ELSE
        PurchLineRec.Description := Description;
      PurchLineRec.FillMainProject;
      PurchLineRec."Inward Processing Relief" := "Inward Processing Relief";
      PurchLineRec."Input by" := USERID; //DP00469
      PurchLineRec."Input Date" := TODAY; //DP00469
      PurchLineRec.INSERT;
      PurchLineRec.CreatePurchOrderControl(FALSE);
      PurchaseLineExtension.CopyPurchLineExtension(
        "Document Type", "Document No.", "Line No.",
        PurchLineRec."Document Type", PurchLineRec."Document No.", PurchLineRec."Line No.");
    END;

    LOCAL PROCEDURE NewLineNo@1210190000() LineNo : Integer;
    VAR
      lPurchLineRec@1210190000 : Record 39;
    BEGIN
      LineNo := "Line No.";
      WHILE lPurchLineRec.GET(lPurchLineRec."Document Type"::Order,"Document No.",LineNo) DO
        LineNo := LineNo + 10;
      EXIT(LineNo);
    END;

    BEGIN
    {
      4PS, 13-12-2013, T004036, Dimensions are copied from original purchase order line to the new line
    }
    END.
  }
}

