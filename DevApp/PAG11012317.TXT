OBJECT Page 11012317 Trade Items
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Trade Items;
    SaveValues=Yes;
    SourceTable=Table11012317;
    DelayedInsert=Yes;
    PageType=List;
    PromotedActionCategoriesML=ENU=New,Process,Report,Alternative item;
    OnOpenPage=BEGIN
                 GetFilterVendor;

                 //IF gvRefDate = 0D THEN  //db, 19-02-15: C016914 (if mainprocess use workdate; skip default by SaveValues)
                   gvRefDate := ValidateCu.CheckRefDateLevel('');  //db,03-07-08

                 IF GETFILTER(Expired) = '' THEN
                   ShowItem;
               END;

    OnFindRecord=BEGIN
                   EXIT(FindRec(gvOnlyPriceOnDemand,Rec,Which,gvRefDate));  //CALL C006542 n
                 END;

    OnNextRecord=BEGIN
                   EXIT(GetRec(gvOnlyPriceOnDemand,Rec,Steps,gvRefDate));   //CALL C006542 n
                 END;

    OnAfterGetRecord=BEGIN
                       SaveTradeItemRec := Rec;  //db, 10-09-09
                       GetActualPrice(gvRefDate, gvDiscRef1, gvDiscRef2);
                       GetUnitPrices(GrossPriceInventoryUnit, NettPriceInventoryUnit, GrossPricePurchaseUnit, NettPricePurchaseUnit, DiscPerc);
                       Rec := SaveTradeItemRec;  //db, 10-09-09
                       IF gvItemBlockbln AND (Expired=TRUE) THEN
                         gvItemBlockbln := FALSE;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100485034;1 ;ActionGroup;
                      CaptionML=ENU=&Item }
      { 1100485035;2 ;Action    ;
                      CaptionML=ENU=Price History;
                      RunObject=Page 11012314;
                      RunPageLink=Item Code=FIELD(Item Code),
                                  Vendor=FIELD(Vendor);
                      Image=History }
      { 1100485036;2 ;Action    ;
                      Name=DiscountHistory;
                      CaptionML=ENU=Discount History;
                      Image=History;
                      OnAction=BEGIN
                                 LookupDiscountHistory(gvRefDate, gvDiscRef1, gvDiscRef2);  //db, 11-06-15: C017270
                               END;
                                }
      { 1100485037;2 ;Action    ;
                      CaptionML=ENU=Charge;
                      RunObject=Page 11012313;
                      RunPageLink=Item Code=FIELD(Item Code),
                                  Vendor=FIELD(Vendor);
                      Image=InsertStartingFee }
      { 1100485038;2 ;Action    ;
                      CaptionML=ENU=Features;
                      Image=CheckRulesSyntax;
                      OnAction=BEGIN
                                 ShowFeatures;
                               END;
                                }
      { 1100528600;2 ;Action    ;
                      CaptionML=ENU=Item Information (2BA);
                      Image=RelatedInformation;
                      OnAction=VAR
                                 "2baManagement"@1100528600 : Codeunit 11012306;
                               BEGIN
                                 "2baManagement".ShowTradeItemInformationVia2ba(Vendor, "Item Code");
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100485001;1 ;Action    ;
                      CaptionML=ENU=Hyperlink;
                      ToolTipML=ENU=Hyperlink;
                      Promoted=Yes;
                      Image=LaunchWeb;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lVendorRelation@1100485001 : Record 11012313;
                                 lVendor@1100485002 : Record 23;
                               BEGIN
                                 IF lVendorRelation.GET(Vendor) THEN BEGIN
                                   IF lVendor.GET(lVendorRelation."Vendor (Purchase)") THEN BEGIN
                                     lVendor.TESTFIELD("URL Vendor");
                                     IF "Item Code" <> '' THEN
                                       HYPERLINK(lVendor."URL Vendor" + "Item Code")
                                   END;
                                 END;
                               END;
                                }
      { 74      ;1   ;ActionGroup;
                      Name=FuncButton;
                      CaptionML=ENU=F&unctions }
      { 1100525008;2 ;ActionGroup;
                      CaptionML=ENU=Alternatives;
                      Image=FilterLines }
      { 1100485029;3 ;Action    ;
                      ShortCutKey=Shift+Ctrl+G;
                      CaptionML=ENU=Alternative (GTIN Code);
                      Promoted=Yes;
                      Image=FilterLines;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IF "GTIN Code (Item)" <> '' THEN BEGIN
                                   ResetFilters; //mg.c, 07-10-11: M28366
                                   SETCURRENTKEY("GTIN Code (Item)");
                                   SETRANGE("GTIN Code (Item)", "GTIN Code (Item)");
                                 END ELSE
                                   ERROR(Text003);
                               END;
                                }
      { 1100485030;3 ;Action    ;
                      ShortCutKey=Shift+Ctrl+P;
                      CaptionML=ENU=Alternative (Product Code);
                      Promoted=Yes;
                      Image=FilterLines;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IF "Product Code" <> '' THEN BEGIN
                                   ResetFilters; //mg.c, 07-10-11: M28366
                                   SETCURRENTKEY("Product Code");
                                   SETRANGE("Product Code", "Product Code");
                                 END ELSE
                                   ERROR(Text004);
                               END;
                                }
      { 1100525017;3 ;Action    ;
                      ShortCutKey=Shift+Ctrl+B;
                      CaptionML=ENU=Alternative (Basic Item);
                      Promoted=Yes;
                      Image=FilterLines;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IF "Product Code" <> '' THEN BEGIN
                                   ResetFilters; //mg.c, 07-10-11: M28366
                                   SETCURRENTKEY("Product Code");
                                   SETRANGE("Product Code", "Product Code");
                                   SETRANGE(Manufacturer, Manufacturer);
                                 END ELSE
                                   ERROR(Text004);
                               END;
                                }
      { 1100525004;3 ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Alternative (Item Relation);
                      Promoted=Yes;
                      Image=FilterLines;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CheckItemAlts(TRUE);
                               END;
                                }
      { 1100525007;3 ;Action    ;
                      ShortCutKey=Shift+Ctrl+A;
                      CaptionML=ENU=All alternatives;
                      Promoted=Yes;
                      Image=FilterLines;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 GetAllAlts;
                               END;
                                }
      { 75      ;2   ;Action    ;
                      CaptionML=ENU=Copy Trade Item to Item;
                      Promoted=Yes;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF NOT NavBln THEN BEGIN  //db, 04-11-04
                                   TradeItemRec.SETRANGE("Product Code","Product Code");
                                   TradeItemRec.SETRANGE(Manufacturer,Manufacturer);
                                   TradeItemRec.SETRANGE("Item Code","Item Code");
                                   TradeItemRec.SETRANGE(Vendor,Vendor);
                                   REPORT.RUN(REPORT::"Copy Item from Trade Item",TRUE,FALSE,TradeItemRec);
                                 END;
                               END;
                                }
      { 1100525010;2 ;Action    ;
                      CaptionML=ENU=Copy Trade Item to E-Plan Item;
                      Image=Copy;
                      OnAction=BEGIN
                                 //db, 12-05-09
                                 TradeItemRec.SETRANGE("Product Code","Product Code");
                                 TradeItemRec.SETRANGE(Manufacturer,Manufacturer);
                                 TradeItemRec.SETRANGE("Item Code","Item Code");
                                 TradeItemRec.SETRANGE(Vendor,Vendor);
                                 REPORT.RUN(REPORT::"Copy E-Plan from Trade Item",TRUE,FALSE,TradeItemRec);
                               END;
                                }
      { 1210190012;2 ;Action    ;
                      CaptionML=ENU=Assign Basic Item (SiB);
                      Image=SelectLineToApply;
                      OnAction=VAR
                                 TradeItemRec@1210190001 : Record 11012317;
                                 LinkRep@1210190000 : Report 11012345;
                               BEGIN
                                 //DP00065
                                 TradeItemRec.COPY(Rec);
                                 CurrPage.SETSELECTIONFILTER(TradeItemRec);
                                 IF NOT TradeItemRec.FINDFIRST THEN BEGIN
                                   TradeItemRec.SETRANGE("Item Code", "Item Code");
                                   TradeItemRec.SETRANGE(Vendor, Vendor);
                                   TradeItemRec.SETRANGE("GTIN Code (Item)", "GTIN Code (Item)");
                                 END;

                                 LinkRep.SETTABLEVIEW(TradeItemRec);
                                 //LinkRep.SetSelection(DATABASE::"Trade Item");
                                 LinkRep.RUNMODAL;
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1210190004;2 ;Action    ;
                      CaptionML=ENU=Update Item Data;
                      Image=Refresh;
                      OnAction=VAR
                                 CalcRep@1100485001 : Report 11012304;
                               BEGIN
                                 TradeItemRec.SETRANGE("Item Code","Item Code");
                                 TradeItemRec.SETRANGE(Vendor,Vendor);
                                 CalcRep.SETTABLEVIEW(TradeItemRec);
                                 BasicItemRec.SETRANGE("Product Code","Product Code");
                                 BasicItemRec.SETRANGE(Manufacturer,Manufacturer);
                                 CalcRep.SETTABLEVIEW(BasicItemRec);
                                 CalcRep.RUNMODAL;
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1210190011;2 ;Action    ;
                      CaptionML=ENU=Replace Cost Objects Collectively;
                      Image=Interaction;
                      OnAction=BEGIN
                                 ChangeCostObject;
                               END;
                                }
      { 1100485024;2 ;Action    ;
                      ShortCutKey=F11;
                      CaptionML=ENU=Search Item;
                      Promoted=Yes;
                      Image=Find;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SearchItem;
                               END;
                                }
      { 1100525014;2 ;Action    ;
                      CaptionML=ENU=Show Only Price On Demand;
                      Promoted=Yes;
                      Image=ShowSelected;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TradeItems@1100525000 : Page 11012317;
                               BEGIN
                                 //CALL C006542
                                 TradeItemRec.COPY(Rec);
                                 TradeItems.SETTABLEVIEW(TradeItemRec);
                                 TradeItems.SetOnlyPriceOnDemand;
                                 TradeItems.RUNMODAL;
                               END;
                                }
      { 1100525012;2 ;Action    ;
                      CaptionML=ENU=Create 2ba Discount File;
                      RunObject=Report 11012348;
                      Image=CreateForm }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 8   ;2   ;Field     ;
                SourceExpr=Vendor }

    { 1100485013;2;Field  ;
                SourceExpr="Vendor Name";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr="Item Code" }

    { 12  ;2   ;Field     ;
                SourceExpr="Item Description" }

    { 1100485006;2;Field  ;
                SourceExpr="Item Description 2";
                Visible=FALSE }

    { 1100528301;2;Field  ;
                SourceExpr="Maintained by 2ba";
                Visible=false }

    { 1100485021;2;Field  ;
                SourceExpr="Basic Item Exists";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr=Manufacturer }

    { 2   ;2   ;Field     ;
                SourceExpr="Product Code" }

    { 1100528300;2;Field  ;
                CaptionML=ENU=Navision Item;
                SourceExpr=GetItemCode();
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrillDownNavisionItem;
                            END;
                             }

    { 1100525013;2;Field  ;
                SourceExpr="Item Series";
                Visible=FALSE }

    { 1100525011;2;Field  ;
                SourceExpr="Item Type";
                Visible=FALSE }

    { 1100485004;2;Field  ;
                SourceExpr="Item Brand";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr="GTIN Code (Item)" }

    { 1100525000;2;Field  ;
                SourceExpr="CBS Code";
                Visible=FALSE }

    { 1210190009;2;Field  ;
                SourceExpr="Cost Object" }

    { 1100528900;2;Field  ;
                CaptionML=ENU=Cost Object changed Manually;
                SourceExpr="Cost Object changed Manually";
                Visible=FALSE }

    { 1100525015;2;Field  ;
                CaptionML=ENU=Price on Demand;
                SourceExpr=PriceOnDemand(gvRefDate);
                Visible=FALSE }

    { 1210190005;2;Field  ;
                CaptionML=ENU=Gross Price/Inventory Unit;
                DecimalPlaces=2:5;
                SourceExpr=GrossPriceInventoryUnit;
                Editable=FALSE }

    { 1210190007;2;Field  ;
                CaptionML=ENU=Nett Price/Inventory Unit;
                DecimalPlaces=2:5;
                SourceExpr=NettPriceInventoryUnit;
                Editable=FALSE }

    { 28  ;2   ;Field     ;
                SourceExpr="Application Unit" }

    { 16  ;2   ;Field     ;
                CaptionML=ENU=Gross Price/Purchase Unit;
                DecimalPlaces=2:5;
                SourceExpr=GrossPricePurchaseUnit }

    { 18  ;2   ;Field     ;
                CaptionML=ENU=Nett Price/Purchase Unit;
                DecimalPlaces=2:5;
                SourceExpr=NettPricePurchaseUnit }

    { 1210190014;2;Field  ;
                SourceExpr="Packaging Unit" }

    { 1210190016;2;Field  ;
                SourceExpr="Qty. per Unit of Measure";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                CaptionML=ENU=Discount Percentage;
                SourceExpr=DiscPerc }

    { 22  ;2   ;Field     ;
                SourceExpr="Price Reference Date" }

    { 24  ;2   ;Field     ;
                SourceExpr="Packaging Form";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                SourceExpr="Packaging Size";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                SourceExpr=Processable;
                Visible=FALSE }

    { 1100485009;2;Field  ;
                SourceExpr=Deliverable;
                Visible=FALSE }

    { 1100485023;2;Field  ;
                SourceExpr="Factor Price-Purchase Unit";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr="Application Unit Quantity";
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                SourceExpr="Minimum Order Quantity";
                Visible=FALSE }

    { 36  ;2   ;Field     ;
                SourceExpr="Lot Size Quantity";
                Visible=FALSE }

    { 1100485011;2;Field  ;
                SourceExpr="Application ID";
                Visible=FALSE }

    { 1100485015;2;Field  ;
                SourceExpr="Order ID";
                Visible=FALSE }

    { 38  ;2   ;Field     ;
                SourceExpr="Discount Group Code";
                OnLookup=VAR
                           DiscHistFrm@1100485000 : Page 11020421;
                           DiscHistRec@1100485001 : Record 11012312;
                         BEGIN
                           //db, 08-07-08
                           DiscHistRec.SETRANGE(Vendor, Vendor);
                           DiscHistRec.SETRANGE("Discount Group", "Discount Group Code");
                           DiscHistFrm.SETTABLEVIEW(DiscHistRec);
                           DiscHistFrm.SetReference(gvDiscRef1, gvDiscRef2, 0D, gvRefDate, '');
                           DiscHistFrm.RUNMODAL;
                         END;
                          }

    { 40  ;2   ;Field     ;
                SourceExpr="Delivery Period" }

    { 42  ;2   ;Field     ;
                SourceExpr="Delivery Time ID";
                Visible=FALSE }

    { 44  ;2   ;Field     ;
                SourceExpr="Delivery Time Unit" }

    { 46  ;2   ;Field     ;
                SourceExpr="Delivery Group Code";
                Visible=FALSE }

    { 48  ;2   ;Field     ;
                SourceExpr="Gross Weight";
                Visible=FALSE }

    { 50  ;2   ;Field     ;
                SourceExpr="Weight ID";
                Visible=FALSE }

    { 52  ;2   ;Field     ;
                SourceExpr="Weight Unit";
                Visible=FALSE }

    { 54  ;2   ;Field     ;
                SourceExpr="Packaging Code";
                Visible=FALSE }

    { 56  ;2   ;Field     ;
                SourceExpr=Length;
                Visible=FALSE }

    { 58  ;2   ;Field     ;
                SourceExpr=Width;
                Visible=FALSE }

    { 60  ;2   ;Field     ;
                SourceExpr=Height;
                Visible=FALSE }

    { 62  ;2   ;Field     ;
                SourceExpr="Size ID";
                Visible=FALSE }

    { 64  ;2   ;Field     ;
                SourceExpr="Size Unit";
                Visible=FALSE }

    { 68  ;2   ;Field     ;
                SourceExpr=Expired;
                Visible=FALSE }

    { 1100525005;2;Field  ;
                SourceExpr="Expiry Date";
                Visible=FALSE;
                Editable=FALSE }

    { 1100485002;2;Field  ;
                Name=ConvertImportDateTime;
                CaptionML=ENU=Import Date-Time;
                SourceExpr=ConvertImportDateTime;
                Visible=FALSE;
                Editable=FALSE }

    { 1210190000;2;Field  ;
                SourceExpr="Search Argument";
                Visible=FALSE }

    { 1210190002;2;Field  ;
                SourceExpr="Sub Operation Code";
                Visible=FALSE }

    { 1100485019;2;Field  ;
                SourceExpr="Cost Object (Removal)";
                Visible=FALSE }

    { 1100485017;2;Field  ;
                SourceExpr="Removal Contribution" }

    { 1100525020;2;Field  ;
                SourceExpr="Item Code (Successor)";
                Visible=FALSE }

    { 1100525019;2;Field  ;
                SourceExpr="Item Code (Predecessor)";
                Visible=FALSE }

    { 1100525018;2;Field  ;
                SourceExpr="GTIN Code (Successor)";
                Visible=FALSE }

    { 1100525016;2;Field  ;
                SourceExpr="GTIN Code (Predecessor)";
                Visible=FALSE }

    { 1100525009;1;Group  ;
                CaptionML=ENU=Nett Price Calculation;
                GroupType=Group }

    { 1100525006;2;Field  ;
                CaptionML=ENU=Reference Date;
                SourceExpr=gvRefDate;
                Importance=Promoted;
                OnValidate=BEGIN
                             gvRefDateOnAfterValidate;
                           END;
                            }

    { 1100525003;2;Field  ;
                CaptionML=ENU=Show Only not Expired Items;
                SourceExpr=gvItemBlockbln;
                OnValidate=BEGIN
                             gvItemBlockblnOnAfterValidate;
                           END;
                            }

    { 1100525002;2;Field  ;
                CaptionML=ENU=Discount Term Group (Customer);
                SourceExpr=gvDiscRef1;
                TableRelation="Discount Term Group".Code WHERE (Level=CONST(Customer));
                OnValidate=BEGIN
                             gvDiscRef1OnAfterValidate;
                           END;
                            }

    { 1100525001;2;Field  ;
                CaptionML=ENU=Discount Term Group (Job);
                SourceExpr=gvDiscRef2;
                TableRelation="Discount Term Group".Code WHERE (Level=CONST(Job));
                OnValidate=BEGIN
                             gvDiscRef2OnAfterValidate;
                           END;
                            }

  }
  CODE
  {
    VAR
      TradeItemRec@1210190000 : Record 11012317;
      SaveTradeItemRec@1100525006 : Record 11012317;
      BasicItemRec@1100485000 : Record 11012316;
      NavBln@11012000 : Boolean;
      GrossPriceInventoryUnit@1210190001 : Decimal;
      NettPriceInventoryUnit@1210190002 : Decimal;
      GrossPricePurchaseUnit@1100525003 : Decimal;
      NettPricePurchaseUnit@1100525001 : Decimal;
      DiscPerc@1100525007 : Decimal;
      ValidateCu@1100485001 : Codeunit 11012033;
      gvRefDate@1100485004 : Date;
      gvDiscRef1@1100485003 : Code[20];
      gvDiscRef2@1100485002 : Code[20];
      gvItemBlockbln@1100525000 : Boolean;
      Text001@1100525002 : TextConst 'ENU=No Alternatives Available';
      Text003@1100525005 : TextConst 'ENU=GTIN code is Empty';
      Text004@1100525004 : TextConst 'ENU=Vendor or Productcode is empty';
      gvOnlyPriceOnDemand@1100525008 : Boolean;

    PROCEDURE ChangeCostObject@1210190003();
    VAR
      TradeItemRec@1210190003 : Record 11012317;
      ChangeRep@1210190000 : Report 11012305;
    BEGIN
      TradeItemRec.SETRANGE("Item Code", "Item Code");
      TradeItemRec.SETRANGE(Vendor, Vendor);

      ChangeRep.SETTABLEVIEW(TradeItemRec);
      ChangeRep.SetSelection(DATABASE::"Trade Item");
      ChangeRep.RUNMODAL;
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE SearchItem@1210190009();
    VAR
      SearchItemFrm@1210190001 : Page 11012356;
      ItemType@1210190000 : 'Navision Item,Basic Item,Trade Item';
      lvVendor@1100485003 : Code[1024];
      lvManufacturer@1100485002 : Code[1024];
      lvProduct@1100485001 : Code[1024];
      lvItem@1100485000 : Code[1024];
    BEGIN
      //db, 15-12-05
      lvManufacturer := GETFILTER(Manufacturer);
      lvProduct := GETFILTER("Product Code");
      lvVendor := GETFILTER(Vendor);
      lvItem := GETFILTER("Item Code");
      SearchItemFrm.SetDefaultsItem(ItemType::"Trade Item", '', lvManufacturer, lvProduct, lvVendor, lvItem);
      SearchItemFrm.RUNMODAL;
      //CurrPage.CLOSE; Call T002897
    END;

    PROCEDURE GetFilterVendor@1100485001();
    VAR
      InvtSetup@1100525000 : Record 313;
      lvVendorRec@1100485001 : Record 11012313;
      lvFilter@1100485000 : Text[1024];
    BEGIN
      //db, 29-05-08
      lvFilter := lvVendorRec.GetFilterRelation(1,TRUE);
      IF lvFilter <> '' THEN BEGIN
        InvtSetup.GET;  //db, 22-10-08: M13034
        IF InvtSetup."Vendor Filter" = InvtSetup."Vendor Filter"::Hard THEN
          FILTERGROUP(2);
        SETFILTER(Vendor, lvFilter);
        IF InvtSetup."Vendor Filter" = InvtSetup."Vendor Filter"::Hard THEN
          FILTERGROUP(0);
      END;
    END;

    PROCEDURE ShowFeatures@1100485000();
    VAR
      BasicItemRec@1100485002 : Record 11012316;
      ItemClassRec@1100485001 : Record 11012303;
      FeatureRec@1100485000 : Record 11012310;
    BEGIN
      IF NOT BasicItemRec.GET(Manufacturer, "Product Code") THEN BasicItemRec.INIT;
      IF NOT ItemClassRec.GET(BasicItemRec."Product Group", BasicItemRec."Product Group Line No.") THEN ItemClassRec.INIT;

      FeatureRec.SETRANGE("Product Group", ItemClassRec."Product Group");
      FeatureRec.SETRANGE("Product Group Line No.", ItemClassRec."Product Group Line No.");

      PAGE.RUN(PAGE::"ETIM Feature Product Class", FeatureRec);
    END;

    PROCEDURE ShowItem@1100525001();
    BEGIN
      //db, 30-10-08
      IF gvItemBlockbln THEN
        SETRANGE(Expired, FALSE)
       ELSE
        SETRANGE (Expired);
    END;

    PROCEDURE CheckItemAlts@1100525000(ShowBl@1100525007 : Boolean);
    VAR
      TempTradeItemRec@1100525009 : TEMPORARY Record 11012317;
      lvItemRelRec@1100525000 : Record 11012319;
      lvTradeItemRec@1100525001 : Record 11012317;
      lvTradeItemRec2@1100525006 : Record 11012317;
      lvItemVendorRec@1100525002 : Record 99;
      lvItemVendorRec2@1100525005 : Record 99;
      lvVendorRec@1100525003 : Record 23;
    BEGIN
      TempTradeItemRec.DELETEALL;
      lvItemRelRec.SETCURRENTKEY(Vendor,"Trade Item");
      lvItemRelRec.SETRANGE("Source Type",lvItemRelRec."Source Type"::"Trade Item");
      lvItemRelRec.SETRANGE("Trade Item","Item Code");
      lvItemRelRec.SETRANGE(Vendor,Vendor);
      IF lvItemRelRec.FINDFIRST THEN BEGIN
        lvItemVendorRec.RESET;
        lvItemVendorRec.SETRANGE("Item No.",lvItemRelRec."Navision Item");
        IF lvItemVendorRec.FINDSET(FALSE,FALSE) THEN
          REPEAT
            lvTradeItemRec.RESET;
            lvTradeItemRec.SETRANGE("Item Code",lvItemVendorRec."Vendor Item No.");
            lvItemVendorRec.CALCFIELDS("Vendor (Trade Item)");
            lvTradeItemRec.SETRANGE(Vendor,lvItemVendorRec."Vendor (Trade Item)");
            IF lvTradeItemRec.FIND('-') THEN BEGIN
              TempTradeItemRec.COPY(lvTradeItemRec);
              TempTradeItemRec.INSERT;
            END;
          UNTIL lvItemVendorRec.NEXT = 0;
      END;

      lvItemVendorRec.RESET;
      lvItemVendorRec.SETRANGE("Vendor Item No.","Item Code");
      IF lvItemVendorRec.FINDSET(FALSE,FALSE) THEN BEGIN
        REPEAT
          lvTradeItemRec.RESET;
          lvVendorRec.GET(lvItemVendorRec."Vendor No.");
          lvTradeItemRec.SETRANGE(Vendor,lvVendorRec."Vendor (Trade Item)");
          lvTradeItemRec.SETRANGE("Item Code",lvItemVendorRec."Item No.");
          IF lvTradeItemRec.FIND('-') THEN BEGIN
            TempTradeItemRec.COPY(lvTradeItemRec);
            IF TempTradeItemRec.INSERT THEN;
          END;
        UNTIL lvItemVendorRec.NEXT = 0;
      END;

      lvItemVendorRec2.RESET;
      lvItemVendorRec2.SETRANGE("Item No.",lvTradeItemRec."Item Code");  //diekus: ???
      lvItemVendorRec2.SETFILTER("Vendor Item No.",'<>%1',"Item Code");
      IF lvItemVendorRec2.FINDSET THEN BEGIN
        REPEAT
          lvVendorRec.GET(lvItemVendorRec2."Vendor No.");
          IF lvTradeItemRec2.GET(lvVendorRec."Vendor (Trade Item)",lvItemVendorRec2."Vendor Item No.") THEN BEGIN
            TempTradeItemRec.COPY(lvTradeItemRec2);
            IF TempTradeItemRec.INSERT THEN;
          END;
        UNTIL lvItemVendorRec2.NEXT = 0;
      END;

      CLEARMARKS;
      MARKEDONLY(FALSE);
      TempTradeItemRec.RESET;
      IF TempTradeItemRec.FINDSET(FALSE,FALSE) THEN BEGIN
        ResetFilters; //mg.c, 07-10-11: M28366
        REPEAT
          GET(TempTradeItemRec.Vendor,TempTradeItemRec."Item Code");
          MARK(TRUE);
        UNTIL TempTradeItemRec.NEXT = 0;
        IF ShowBl THEN BEGIN
          MARKEDONLY(TRUE);
          CurrPage.UPDATE(FALSE);
        END;
      END ELSE
        IF ShowBl THEN
          MESSAGE(Text001);
    END;

    PROCEDURE GetAllAlts@1100525002();
    VAR
      OrigTradeItemRec@1100525002 : Record 11012317;
      lvTradeItemRec@1100525001 : Record 11012317;
    BEGIN
      OrigTradeItemRec.COPY(Rec);
      ResetFilters;  //db, 27-11-09: M16098 //mg.c, 07-10-11: M28366
      CheckItemAlts(FALSE);

      IF OrigTradeItemRec."GTIN Code (Item)" <>'' THEN BEGIN
        lvTradeItemRec.SETCURRENTKEY("GTIN Code (Item)");
        lvTradeItemRec.SETRANGE("GTIN Code (Item)", OrigTradeItemRec."GTIN Code (Item)");
        IF lvTradeItemRec.FINDSET(FALSE,FALSE) THEN BEGIN
          REPEAT
            GET(lvTradeItemRec.Vendor,lvTradeItemRec."Item Code");
            MARK(TRUE);
          UNTIL lvTradeItemRec.NEXT = 0
        END;
      END;

      IF OrigTradeItemRec."Product Code" <>'' THEN BEGIN
        lvTradeItemRec.SETCURRENTKEY("Product Code");
        lvTradeItemRec.SETRANGE("GTIN Code (Item)");
        lvTradeItemRec.SETRANGE("Product Code", OrigTradeItemRec."Product Code");
        lvTradeItemRec.SETRANGE(Manufacturer, OrigTradeItemRec.Manufacturer);
        IF lvTradeItemRec.FINDSET(FALSE,FALSE) THEN BEGIN
          REPEAT
            GET(lvTradeItemRec.Vendor,lvTradeItemRec."Item Code");
            MARK(TRUE);
          UNTIL lvTradeItemRec.NEXT = 0
        END;
      END;

      IF (gvItemBlockbln) THEN
        SETRANGE(Expired, FALSE);

      MARKEDONLY(TRUE);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE ResetFilters@1210190000();
    BEGIN
      RESET;
      ShowItem;  //db, 19-06-14: activate filter on Expired
      GetFilterVendor;
    END;

    LOCAL PROCEDURE gvRefDateOnAfterValidate@19079653();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE gvDiscRef1OnAfterValidate@19006895();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE gvDiscRef2OnAfterValidate@19054678();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE gvItemBlockblnOnAfterValidate@19069594();
    BEGIN
      ShowItem;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE SetOnlyPriceOnDemand@1100525004();
    BEGIN
      gvOnlyPriceOnDemand := TRUE;   //CALL C006542 n
    END;

    BEGIN
    END.
  }
}

