OBJECT Page 11012334 Trade Item List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Trade Item List;
    SaveValues=Yes;
    SourceTable=Table11012317;
    PageType=List;
    PromotedActionCategoriesML=ENU=New,Process,Report,Alternative item;
    OnInit=BEGIN
             DiscountPercentageVisible := TRUE;
             NettPricePerPurchaseUnitVisibl := TRUE;
             NettPricePerApplUnitVisible := TRUE;
             CopyButtonEnable := TRUE;
           END;

    OnOpenPage=VAR
                 InventorySetup@1210190000 : Record 313;
               BEGIN
                 IF g_table = 0 THEN BEGIN
                   CopyButtonEnable := FALSE;
                 END ELSE BEGIN
                   RESET;  //**undo filters of previous selection
                   IF (g_table = 39) AND (g_code3 <> '') THEN BEGIN
                     SETCURRENTKEY(Vendor, "Item Code");
                     SETFILTER(Vendor, g_code3);
                   END;
                   IF g_index <> 0 THEN BEGIN
                     IF g_index = 1 THEN BEGIN
                       SETCURRENTKEY(Vendor, "Item Code");
                       SETRANGE(Vendor, Vendor);
                     END;
                     IF g_index = 3 THEN BEGIN
                       SETCURRENTKEY("Product Code", Manufacturer);
                       SETRANGE("Product Code", "Product Code");
                       SETRANGE(Manufacturer, Manufacturer);
                     END;
                   END;
                 END;

                 //mg.sc, 11-10-11: M29687
                 InventorySetup.GET;
                 IF (GETFILTER(Vendor) = '') OR (InventorySetup."Vendor Filter" = InventorySetup."Vendor Filter"::Hard) THEN
                   GetFilterVendor;
                 //mg.ec, 11-10-11: M29687

                 IF GETFILTER(Expired) = ''THEN
                   ShowItem;

                 IF RefImport THEN BEGIN  //db, 09-03-09: M14636
                   gvRefDate := iRefDate;
                   gvDiscRef1 := iDiscRef1;
                   gvDiscRef2 := iDiscRef2;
                 END;

                 IF gvRefDate = 0D THEN
                   gvRefDate := ValidateCu.CheckRefDateLevel('');  //db, 03-07-08

                 //**4PS.sn
                 IF UseLimitedPurchaserFilter THEN BEGIN
                   FILTERGROUP(10);
                   SETFILTER("Discount Group Code",'<>%1','');
                   FILTERGROUP(0);
                 END;
                 //**4PS.en

                 //kzwerver, 110609, sn, #RfC ULC
                 IF (gCalledFromSiteMgtForm) THEN
                   ShowPriceFieldsOnForm;
                 //kzwerver, 110609, en, #RfC ULC
               END;

    OnAfterGetRecord=BEGIN
                       SaveTradeItemRec := Rec;  //db, 10-09-09
                       GetActualPrice(gvRefDate, gvDiscRef1, gvDiscRef2);
                       GetUnitPrices(GrossPriceInventoryUnit, NettPriceInventoryUnit, GrossPricePurchaseUnit, NettPricePurchaseUnit, DiscPerc);
                       Rec := SaveTradeItemRec;  //db, 10-09-09

                       //kzwerver, 110609, sn, #RfC ULC
                       IF (gCalledFromSiteMgtForm) THEN
                         ShowPriceFieldsOnForm;
                       //kzwerver, 110609, en, #RfC ULC
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1210190000;1 ;ActionGroup;
                      CaptionML=ENU=Hidden Button;
                      Visible=False }
      { 1210190002;2 ;Action    ;
                      CaptionML=ENU=Mark;
                      Image=SelectEntries;
                      OnAction=BEGIN
                                 HiddenMark;
                               END;
                                }
      { 1100485017;1 ;ActionGroup;
                      CaptionML=ENU=&Item }
      { 1100485019;2 ;Action    ;
                      CaptionML=ENU=Price History;
                      RunObject=Page 11012331;
                      RunPageLink=Item Code=FIELD(Item Code),
                                  Vendor=FIELD(Vendor);
                      Image=History }
      { 1100409000;2 ;Action    ;
                      Name=DiscountHistory;
                      CaptionML=ENU=Discount History;
                      Image=History;
                      OnAction=BEGIN
                                 LookupDiscountHistory(gvRefDate, gvDiscRef1, gvDiscRef2);  //db, 11-06-15: C017270
                               END;
                                }
      { 1100485020;2 ;Action    ;
                      CaptionML=ENU=Charge;
                      RunObject=Page 11012338;
                      RunPageLink=Item Code=FIELD(Item Code),
                                  Vendor=FIELD(Vendor);
                      Image=InsertStartingFee }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100485024;1 ;Action    ;
                      CaptionML=ENU=Hyperlink;
                      ToolTipML=ENU=Hyperlink;
                      Promoted=Yes;
                      Image=LaunchWeb;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lVendorRelation@1100485001 : Record 11012313;
                                 lVendor@1100485002 : Record 23;
                               BEGIN
                                 IF lVendorRelation.GET(Vendor) THEN BEGIN
                                   IF lVendor.GET(lVendorRelation."Vendor (Purchase)") THEN BEGIN
                                     lVendor.TESTFIELD("URL Vendor");
                                     IF "Item Code" <> '' THEN
                                       HYPERLINK(lVendor."URL Vendor" + "Item Code")
                                   END;
                                 END;
                               END;
                                }
      { 66      ;1   ;Action    ;
                      Name=CopyButton;
                      CaptionML=ENU=&Copy;
                      Promoted=Yes;
                      Visible=CopyButtonEnable;
                      Enabled=CopyButtonEnable;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 HiddenMark;
                                 CopyLines;
                               END;
                                }
      { 1100485018;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1100485008;2 ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=ENU=Search Item;
                      Promoted=Yes;
                      Image=Find;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SearchItem;
                               END;
                                }
      { 1100525001;2 ;ActionGroup;
                      CaptionML=ENU=Alternatives;
                      Image=FilterLines }
      { 1100485021;3 ;Action    ;
                      ShortCutKey=Shift+Ctrl+G;
                      CaptionML=ENU=Alternative (GTIN Code);
                      Promoted=Yes;
                      Image=FilterLines;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IF "GTIN Code (Item)" <> '' THEN BEGIN
                                   ResetFilters; //mg.c, 07-10-11: M28366
                                   SETCURRENTKEY("GTIN Code (Item)");
                                   SETRANGE("GTIN Code (Item)", "GTIN Code (Item)");
                                 END ELSE
                                   ERROR(Text003);
                               END;
                                }
      { 1100485022;3 ;Action    ;
                      ShortCutKey=Shift+Ctrl+P;
                      CaptionML=ENU=Alternative (Product Code);
                      Promoted=Yes;
                      Image=FilterLines;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IF "Product Code" <> '' THEN BEGIN
                                   ResetFilters; //mg.c, 07-10-11: M28366
                                   SETCURRENTKEY("Product Code");
                                   SETRANGE("Product Code", "Product Code");
                                 END ELSE
                                   ERROR(Text004);
                               END;
                                }
      { 1100525015;3 ;Action    ;
                      ShortCutKey=Shift+Ctrl+B;
                      CaptionML=ENU=Alternative (Basic Item);
                      Promoted=Yes;
                      Image=FilterLines;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IF "Product Code" <> '' THEN BEGIN
                                   ResetFilters; //mg.c, 07-10-11: M28366
                                   SETCURRENTKEY("Product Code");
                                   SETRANGE("Product Code", "Product Code");
                                   SETRANGE(Manufacturer, Manufacturer);
                                 END ELSE
                                   ERROR(Text004);
                               END;
                                }
      { 1100525004;3 ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Alternative (Item Relation);
                      Promoted=Yes;
                      Image=FilterLines;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 GetItemVendorRelation(TRUE,FALSE);
                               END;
                                }
      { 1100525007;3 ;Action    ;
                      CaptionML=ENU=All Alternatives;
                      Promoted=Yes;
                      Image=FilterLines;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 GetAllRelations(FALSE);
                               END;
                                }
      { 1100525008;3 ;Action    ;
                      ShortCutKey=Shift+Ctrl+O;
                      CaptionML=ENU=All Alternatives (Original Item);
                      Promoted=Yes;
                      Image=FilterLines;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IF g_code9 <> '' THEN BEGIN
                                   GetAllRelations(TRUE);
                                 END ELSE
                                   ERROR(Text002);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 8   ;2   ;Field     ;
                SourceExpr=Vendor }

    { 1100485000;2;Field  ;
                SourceExpr="Vendor Name";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr="Item Code" }

    { 10  ;2   ;Field     ;
                SourceExpr="Item Description" }

    { 1100485009;2;Field  ;
                SourceExpr="Item Description 2";
                Visible=FALSE }

    { 1100528301;2;Field  ;
                SourceExpr="Maintained by 2ba";
                Visible=false }

    { 4   ;2   ;Field     ;
                SourceExpr=Manufacturer }

    { 2   ;2   ;Field     ;
                SourceExpr="Product Code" }

    { 1100528300;2;Field  ;
                CaptionML=ENU=Navision Item;
                SourceExpr=GetItemCode();
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrillDownNavisionItem;
                            END;
                             }

    { 1100525011;2;Field  ;
                SourceExpr="Item Series";
                Visible=FALSE }

    { 1100525009;2;Field  ;
                SourceExpr="Item Type";
                Visible=FALSE }

    { 1100485006;2;Field  ;
                SourceExpr="Item Brand";
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                SourceExpr="GTIN Code (Item)" }

    { 1100525000;2;Field  ;
                SourceExpr="CBS Code";
                Visible=FALSE }

    { 1100485027;2;Field  ;
                SourceExpr="Cost Object" }

    { 1100525013;2;Field  ;
                CaptionML=ENU=Price on Demand;
                SourceExpr=PriceOnDemand(gvRefDate);
                Visible=FALSE }

    { 1210190008;2;Field  ;
                CaptionML=ENU=Gross Price / Appl.Unit;
                DecimalPlaces=2:5;
                SourceExpr=GrossPriceInventoryUnit }

    { 1210190006;2;Field  ;
                Name=NettPricePerApplUnit;
                CaptionML=ENU=Nett Price / Appl.Unit;
                DecimalPlaces=2:5;
                SourceExpr=NettPriceInventoryUnit;
                Visible=NettPricePerApplUnitVisible }

    { 16  ;2   ;Field     ;
                SourceExpr="Application Unit" }

    { 14  ;2   ;Field     ;
                CaptionML=ENU=Gross Price / Purchase Unit;
                SourceExpr=GrossPricePurchaseUnit }

    { 18  ;2   ;Field     ;
                Name=NettPricePerPurchaseUnit;
                CaptionML=ENU=Nett Price / Purchase Unit;
                SourceExpr=NettPricePurchaseUnit;
                Visible=NettPricePerPurchaseUnitVisibl }

    { 1210190010;2;Field  ;
                SourceExpr="Packaging Unit" }

    { 1210190012;2;Field  ;
                SourceExpr="Qty. per Unit of Measure";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                Name=DiscountPercentage;
                CaptionML=ENU=Discount Percentage;
                SourceExpr=DiscPerc;
                Visible=DiscountPercentageVisible }

    { 22  ;2   ;Field     ;
                SourceExpr="Price Reference Date" }

    { 24  ;2   ;Field     ;
                SourceExpr="Packaging Form";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                SourceExpr="Packaging Size";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                SourceExpr=Processable;
                Visible=FALSE }

    { 1100485011;2;Field  ;
                SourceExpr=Deliverable;
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr="Application Unit Quantity";
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                SourceExpr="Minimum Order Quantity";
                Visible=FALSE }

    { 36  ;2   ;Field     ;
                SourceExpr="Lot Size Quantity";
                Visible=FALSE }

    { 1100485002;2;Field  ;
                SourceExpr="Application ID";
                Visible=FALSE }

    { 1100485004;2;Field  ;
                SourceExpr="Order ID";
                Visible=FALSE }

    { 38  ;2   ;Field     ;
                SourceExpr="Discount Group Code" }

    { 40  ;2   ;Field     ;
                SourceExpr="Delivery Period" }

    { 42  ;2   ;Field     ;
                SourceExpr="Delivery Time Unit" }

    { 44  ;2   ;Field     ;
                SourceExpr="Delivery Group Code";
                Visible=FALSE }

    { 46  ;2   ;Field     ;
                SourceExpr="Gross Weight";
                Visible=FALSE }

    { 48  ;2   ;Field     ;
                SourceExpr="Weight Unit";
                Visible=FALSE }

    { 50  ;2   ;Field     ;
                SourceExpr="Packaging Code";
                Visible=FALSE }

    { 52  ;2   ;Field     ;
                SourceExpr=Length;
                Visible=FALSE }

    { 54  ;2   ;Field     ;
                SourceExpr=Width;
                Visible=FALSE }

    { 56  ;2   ;Field     ;
                SourceExpr=Height;
                Visible=FALSE }

    { 58  ;2   ;Field     ;
                SourceExpr="Size Unit";
                Visible=FALSE }

    { 1100485025;2;Field  ;
                SourceExpr=Expired;
                Visible=FALSE }

    { 1100525005;2;Field  ;
                SourceExpr="Expiry Date";
                Visible=FALSE;
                Editable=FALSE }

    { 1210190001;2;Field  ;
                SourceExpr="Search Argument";
                Visible=FALSE }

    { 1100485015;2;Field  ;
                SourceExpr="Cost Object (Removal)";
                Visible=FALSE }

    { 1100485013;2;Field  ;
                SourceExpr="Removal Contribution" }

    { 1100525002;2;Field  ;
                SourceExpr="Item Code (Successor)";
                Visible=FALSE }

    { 1100525016;2;Field  ;
                SourceExpr="Item Code (Predecessor)";
                Visible=FALSE }

    { 1100525017;2;Field  ;
                SourceExpr="GTIN Code (Successor)";
                Visible=FALSE }

    { 1100525018;2;Field  ;
                SourceExpr="GTIN Code (Predecessor)";
                Visible=FALSE }

    { 1100525014;1;Group  ;
                CaptionML=ENU=Nett Price Calculation;
                GroupType=Group }

    { 1100525012;2;Field  ;
                CaptionML=ENU=Reference Date;
                SourceExpr=gvRefDate;
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100525010;2;Field  ;
                CaptionML=ENU=Show Only not Expired Items;
                SourceExpr=gvItemBlockbln;
                OnValidate=BEGIN
                             gvItemBlockblnOnAfterValidate;
                           END;
                            }

    { 1100525006;2;Field  ;
                CaptionML=ENU=Discount Term Group (Customer);
                SourceExpr=gvDiscRef1;
                TableRelation="Discount Term Group".Code WHERE (Level=CONST(Customer));
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100525003;2;Field  ;
                CaptionML=ENU=Discount Term Group (Job);
                SourceExpr=gvDiscRef2;
                TableRelation="Discount Term Group".Code WHERE (Level=CONST(Job));
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

  }
  CODE
  {
    VAR
      SiteManagerFormSetup@1210190004 : Record 11125525;
      MarkedRec@1210190000 : TEMPORARY Record 11012317;
      SaveTradeItemRec@1100525014 : Record 11012317;
      g_int1@1210190016 : Integer;
      g_int2@1210190018 : Integer;
      g_table@11012000 : Integer;
      g_index@1210190032 : Integer;
      g_code1@11012001 : Code[20];
      g_code2@11012002 : Code[20];
      g_code3@11012003 : Code[250];
      g_code4@11012004 : Code[20];
      g_code5@11012005 : Code[20];
      g_code6@11012006 : Code[20];
      g_code7@1210190031 : Code[20];
      g_code8@1210190030 : Code[20];
      g_code9@1100525005 : Code[20];
      g_code10@1100525004 : Code[20];
      g_MC@1100485000 : Boolean;
      GrossPriceInventoryUnit@1210190028 : Decimal;
      NettPriceInventoryUnit@1210190027 : Decimal;
      GrossPricePurchaseUnit@1100525003 : Decimal;
      NettPricePurchaseUnit@1100525001 : Decimal;
      DiscPerc@1100525015 : Decimal;
      ValidateCu@1100485001 : Codeunit 11012033;
      gvRefDate@1100485002 : Date;
      gvDiscRef1@1100485003 : Code[20];
      gvDiscRef2@1100485004 : Code[20];
      gvItemBlockbln@1100525000 : Boolean;
      Text001@1100525002 : TextConst 'ENU=No Alternatives Available';
      Text002@1100525006 : TextConst 'ENU=Function is not allowed here';
      Text003@1100525007 : TextConst 'ENU=GTIN code is Empty';
      Text004@1100525008 : TextConst 'ENU=Vendor or Productcode is empty';
      RefImport@1100525009 : Boolean;
      iRefDate@1100525012 : Date;
      iDiscRef1@1100525011 : Code[20];
      iDiscRef2@1100525010 : Code[20];
      UseLimitedPurchaserFilter@1100525013 : Boolean;
      SiteManagerFormSetupRead@1210190002 : Boolean;
      gCalledFromSiteMgtForm@1210190001 : Boolean;
      CopyButtonEnable@19014618 : Boolean INDATASET;
      NettPricePerApplUnitVisible@19022188 : Boolean INDATASET;
      NettPricePerPurchaseUnitVisibl@19000574 : Boolean INDATASET;
      DiscountPercentageVisible@19075996 : Boolean INDATASET;

    PROCEDURE SetSelection@2(l_table@11012000 : Integer;l_code1@11012001 : Code[20];l_code2@11012002 : Code[20];l_code3@11012003 : Code[250];l_code4@11012004 : Code[20];l_int1@11012005 : Integer;l_code5@11012006 : Code[20];l_code6@11012007 : Code[20];l_int2@1210190000 : Integer;l_code7@1210190002 : Code[20];l_code8@1210190001 : Code[20];lvVendor@1210190006 : Code[20];lvTradeItem@1210190005 : Code[20];lvManufacturer@1210190004 : Code[20];lvBasicItem@1210190003 : Code[20];l_code9@1100525001 : Code[20];l_code10@1100525000 : Code[20]);
    BEGIN
      g_table := l_table;
      g_code1 := l_code1;
      g_code2 := l_code2;
      g_code3 := l_code3;  //db, 27-01-14: T004213 (20->250)
      g_code4 := l_code4;
      g_int1 := l_int1;
      g_code5 := l_code5;
      g_code6 := l_code6;
      g_int2 := l_int2;
      g_code7 := l_code7;
      g_code8 := l_code8;
      g_code9 := l_code9;
      g_code10 := l_code10;

      IF lvVendor <> '' THEN
        g_index := 1
      ELSE
        IF (lvBasicItem + lvManufacturer <> '') AND (lvTradeItem + lvVendor = '') THEN
          g_index := 3;
    END;

    PROCEDURE SetReference@1100485002(lvRefDate@1100485002 : Date;lvDiscRef1@1100485001 : Code[20];lvDiscRef2@1100485000 : Code[20]);
    BEGIN
      //db, 09-03-09: M14636
      iRefDate := lvRefDate;
      iDiscRef1 := lvDiscRef1;
      iDiscRef2 := lvDiscRef2;
      RefImport := TRUE;
    END;

    PROCEDURE HiddenMark@1210190002();
    VAR
      lRec@1210190002 : Record 11012317;
      NextNo@1210190001 : Code[30];
      AllMarked@1210190000 : Boolean;
    BEGIN
      //Check whether records must be marked or unmarked
      //If one of the selected filed is not marked then all selected must be marked
      //If all of the selected files are already marked them they must be unmarked.
      AllMarked := TRUE;
      CurrPage.SETSELECTIONFILTER(lRec);
      lRec.SETCURRENTKEY(Vendor, "Item Code");

      IF lRec.FINDSET THEN
        REPEAT
          Rec := lRec;
          IF NOT MARK THEN
            AllMarked := FALSE;
        UNTIL lRec.NEXT = 0;

      //Get seq. no.
      IF NOT AllMarked THEN BEGIN
        MarkedRec.SETCURRENTKEY("GTIN Code (Item)");
        IF MarkedRec.FINDLAST THEN
          NextNo := INCSTR(MarkedRec."GTIN Code (Item)")
        ELSE
          NextNo := '1';
      END;
      MarkedRec.SETCURRENTKEY(Vendor, "Item Code");

      CurrPage.SETSELECTIONFILTER(lRec);
      lRec.SETCURRENTKEY(Vendor, "Item Code");

      IF lRec.FINDSET THEN
        REPEAT
          Rec := lRec;
          MarkedRec := lRec;
          IF AllMarked THEN BEGIN
            MARK(FALSE);
            IF MarkedRec.FIND('=') THEN
              MarkedRec.DELETE;
          END ELSE BEGIN
            MARK(TRUE);
            IF MarkedRec.FIND('=') THEN BEGIN
              MarkedRec."GTIN Code (Item)" := NextNo;
              MarkedRec.MODIFY;
            END ELSE BEGIN
              MarkedRec."GTIN Code (Item)" := NextNo;
              MarkedRec.INSERT;
            END;
            NextNo := INCSTR(NextNo);
          END;
        UNTIL lRec.NEXT = 0;
    END;

    PROCEDURE CopyLines@1210190000();
    VAR
      CopyMgt@1210190000 : Codeunit 11012068;
      VendorFilter@1100525000 : Text[30];
    BEGIN
      g_MC := TRUE;  //db, 09-03-07 (call 8283)
      IF g_table = DATABASE::"Purchase Line" THEN
        //db, 27-01-14: T004213 (use empty VendorFilter instead of g_code3)
        CopyMgt.SetSelectionItem(g_table, g_code1, g_code2, VendorFilter, g_code4, g_int1,
          g_code5, g_code6, g_int2, g_code7, g_code8, 0D)
      ELSE
        //db, 17-03-14: T004498
        CopyMgt.SetSelectionItem(g_table, g_code1, g_code2, g_code3, g_code4, g_int1,
          g_code5, g_code6, g_int2, g_code7, g_code8, 0D);

      MarkedRec.SETCURRENTKEY("GTIN Code (Item)");
      CopyMgt.CopyTradeItems(MarkedRec);
      CurrPage.CLOSE;
    END;

    PROCEDURE SearchItem@1210190009();
    VAR
      SearchItemFrm@1210190001 : Page 11012356;
      ItemType@1210190000 : 'Navision Item,Basic Item,Trade Item';
      lvVendor@1100485000 : Code[1024];
      lvManufacturer@1100485001 : Code[1024];
      lvProduct@1100485002 : Code[1024];
      lvItem@1100485003 : Code[1024];
    BEGIN
      lvManufacturer := GETFILTER(Manufacturer);
      lvProduct := GETFILTER("Product Code");
      lvVendor := GETFILTER(Vendor);
      lvItem := GETFILTER("Item Code");
      SearchItemFrm.SetSelection(g_table, g_code1, g_code2, g_code3, g_code4, g_int1,
        g_code5, g_code6, g_int2, g_code7, g_code8);
      SearchItemFrm.SetDefaultsItem(ItemType::"Trade Item", '', lvManufacturer, lvProduct, lvVendor, lvItem);
      SearchItemFrm.RUNMODAL;
      IF SearchItemFrm.CheckMultiCopy THEN
        g_MC := TRUE;  //db, 25-05-07 (call 9590)
      CurrPage.CLOSE;
    END;

    PROCEDURE CheckMultiCopy@1100485000() : Boolean;
    BEGIN
      EXIT (g_MC = TRUE);  //db, 09-03-07 (call 8283)
    END;

    PROCEDURE GetFilterVendor@1100485001();
    VAR
      InvtSetup@1100525000 : Record 313;
      lvVendorRec@1100485001 : Record 11012313;
      lvFilter@1100485000 : Text[1024];
    BEGIN
      //db, 29-05-08
      lvFilter := lvVendorRec.GetFilterRelation(1,TRUE);
      IF lvFilter <> '' THEN BEGIN
        InvtSetup.GET;  //db, 22-10-08: M13034
        IF InvtSetup."Vendor Filter" = InvtSetup."Vendor Filter"::Hard THEN
          FILTERGROUP(2);
        SETFILTER(Vendor, lvFilter);
        IF InvtSetup."Vendor Filter" = InvtSetup."Vendor Filter"::Hard THEN
          FILTERGROUP(0);
      END;
    END;

    PROCEDURE ShowItem@1100525000();
    BEGIN
      //db, 30-10-08
      IF gvItemBlockbln THEN
        SETRANGE(Expired, FALSE)
       ELSE
        SETRANGE (Expired);
    END;

    PROCEDURE GetItemVendorRelation@1100525001(ShowBl@1100525007 : Boolean;FunctionBl@1100525008 : Boolean);
    VAR
      TempTradeItemRec@1100525010 : TEMPORARY Record 11012317;
      lvItemRelRec@1100525003 : Record 11012319;
      lvTradeItemRec@1100525002 : Record 11012317;
      lvTradeItemRec2@1100525005 : Record 11012317;
      lvItemVendorRec@1100525000 : Record 99;
      lvItemVendorRec2@1100525004 : Record 99;
      lvVendorRec@1100525006 : Record 23;
    BEGIN
      TempTradeItemRec.DELETEALL;
      lvItemRelRec.SETCURRENTKEY(Vendor,"Trade Item");
      lvItemRelRec.SETRANGE("Source Type",lvItemRelRec."Source Type"::"Trade Item");
      IF NOT FunctionBl THEN BEGIN
        lvItemRelRec.SETRANGE("Trade Item","Item Code");
        lvItemRelRec.SETRANGE(Vendor,Vendor);
      END ELSE BEGIN
        lvItemRelRec.SETRANGE("Trade Item",g_code9);
        lvItemRelRec.SETRANGE(Vendor,g_code10);
      END;

      IF lvItemRelRec.FINDFIRST THEN BEGIN
        lvItemVendorRec.RESET;
        lvItemVendorRec.SETRANGE("Item No.",lvItemRelRec."Navision Item");
        IF lvItemVendorRec.FINDSET(FALSE,FALSE) THEN
          REPEAT
            lvTradeItemRec.RESET;
            lvTradeItemRec.SETRANGE("Item Code",lvItemVendorRec."Vendor Item No.");
            lvItemVendorRec.CALCFIELDS("Vendor (Trade Item)");
            lvTradeItemRec.SETRANGE(Vendor,lvItemVendorRec."Vendor (Trade Item)");
            IF lvTradeItemRec.FIND('-') THEN BEGIN
              TempTradeItemRec.COPY(lvTradeItemRec);
              TempTradeItemRec.INSERT;
            END;
          UNTIL lvItemVendorRec.NEXT = 0;
      END;

      lvItemVendorRec.RESET;
      IF FunctionBl THEN
        lvItemVendorRec.SETRANGE("Vendor Item No.","Item Code")
      ELSE
        lvItemVendorRec.SETRANGE("Vendor Item No.",g_code9);
        IF lvItemVendorRec.FINDSET(FALSE,FALSE) THEN
          REPEAT
            lvTradeItemRec.RESET;
            lvVendorRec.GET(lvItemVendorRec."Vendor No.");
            lvTradeItemRec.SETRANGE(Vendor,lvVendorRec."Vendor (Trade Item)");
            lvTradeItemRec.SETRANGE("Item Code",lvItemVendorRec."Item No.");
            IF lvTradeItemRec.FIND('-') THEN BEGIN
              TempTradeItemRec.COPY(lvTradeItemRec);
              IF TempTradeItemRec.INSERT THEN;
            END;
          UNTIL lvItemVendorRec.NEXT = 0;

      lvItemVendorRec2.RESET;
      lvItemVendorRec2.SETRANGE("Item No.",lvTradeItemRec."Item Code");
      lvItemVendorRec2.SETFILTER("Vendor Item No.",'<>%1',"Item Code");
      IF lvItemVendorRec2.FINDSET THEN BEGIN
        REPEAT
          lvVendorRec.GET(lvItemVendorRec2."Vendor No.");
          IF lvTradeItemRec2.GET(lvVendorRec."Vendor (Trade Item)",lvItemVendorRec2."Vendor Item No.") THEN BEGIN
            TempTradeItemRec.COPY(lvTradeItemRec2);
            IF TempTradeItemRec.INSERT THEN;
          END;
        UNTIL lvItemVendorRec2.NEXT = 0;
      END;

      CLEARMARKS;
      MARKEDONLY(FALSE);
      TempTradeItemRec.RESET;
      IF TempTradeItemRec.FINDSET(FALSE,FALSE) THEN BEGIN
        ResetFilters; //mg.c, 07-10-11: M28366
        REPEAT
          GET(TempTradeItemRec.Vendor,TempTradeItemRec."Item Code");
          MARK(TRUE);
        UNTIL TempTradeItemRec.NEXT = 0;
        IF ShowBl THEN BEGIN
          MARKEDONLY(TRUE);
          CurrPage.UPDATE(FALSE);
        END;
      END ELSE
        IF ShowBl THEN
          MESSAGE(Text001);
    END;

    PROCEDURE GetAllRelations@1100525002(TradeItemBool@1100525002 : Boolean);
    VAR
      OrigTradeItemRec@1100525003 : Record 11012317;
      lvTradeItemRec@1100525000 : Record 11012317;
    BEGIN
      IF NOT TradeItemBool THEN
        OrigTradeItemRec.COPY(Rec)
      ELSE
        OrigTradeItemRec.GET(g_code10,g_code9);
      ResetFilters; //mg.c, 07-10-11: M28366
      IF NOT TradeItemBool THEN
        GetItemVendorRelation(FALSE,FALSE)
      ELSE
        GetItemVendorRelation(FALSE,TRUE);

      lvTradeItemRec.SETCURRENTKEY("GTIN Code (Item)");
      IF OrigTradeItemRec."GTIN Code (Item)" <> '' THEN BEGIN
        lvTradeItemRec.SETRANGE("GTIN Code (Item)", OrigTradeItemRec."GTIN Code (Item)");
        IF lvTradeItemRec.FINDSET(FALSE,FALSE) THEN BEGIN
          REPEAT
            GET(lvTradeItemRec.Vendor,lvTradeItemRec."Item Code");
            MARK(TRUE);
          UNTIL lvTradeItemRec.NEXT = 0
        END;
      END;

      IF OrigTradeItemRec."Product Code" <>'' THEN BEGIN
        lvTradeItemRec.SETCURRENTKEY("Product Code");
        lvTradeItemRec.SETRANGE("GTIN Code (Item)");
        lvTradeItemRec.SETRANGE("Product Code", OrigTradeItemRec."Product Code");
        lvTradeItemRec.SETRANGE(Manufacturer, OrigTradeItemRec.Manufacturer);
        IF lvTradeItemRec.FINDSET(FALSE,FALSE) THEN BEGIN
          REPEAT
            GET(lvTradeItemRec.Vendor,lvTradeItemRec."Item Code");
            MARK(TRUE);
          UNTIL lvTradeItemRec.NEXT = 0
        END;
      END;

      SETRANGE(Vendor);
      MARKEDONLY(TRUE);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE SetLimitedPurchaserFilter@1100525003(SetTo@1100525000 : Boolean);
    BEGIN
      UseLimitedPurchaserFilter := SetTo;
    END;

    PROCEDURE SetFromSiteMgtForm@1100528301();
    BEGIN
      //kzwerver, 110609, n, #RfC ULC
      gCalledFromSiteMgtForm := TRUE;  //* Called from Site Manager Form
    END;

    PROCEDURE ShowPriceFieldsOnForm@1100528300();
    BEGIN
      //kzwerver, 110609, n, #RfC ULC
      IF (NOT SiteManagerFormSetupRead) THEN
        SiteManagerFormSetupRead := SiteManagerFormSetup.GET;

      NettPricePerApplUnitVisible := (SiteManagerFormSetup."Show Nett Price");
      NettPricePerPurchaseUnitVisibl := (SiteManagerFormSetup."Show Nett Price");
      DiscountPercentageVisible := (SiteManagerFormSetup."Show Nett Price");
    END;

    PROCEDURE ResetFilters@1210190001();
    BEGIN
      RESET;
      ShowItem;  //db, 19-06-14: activate filter on Expired
      GetFilterVendor;
    END;

    LOCAL PROCEDURE gvItemBlockblnOnAfterValidate@19069594();
    BEGIN
      ShowItem;
      CurrPage.UPDATE(FALSE);
    END;

    BEGIN
    END.
  }
}

