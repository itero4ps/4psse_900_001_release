OBJECT Page 11012350 Replace Items
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Replace Items;
    PageType=NavigatePage;
    OnOpenPage=VAR
                 NavBln@1100409005 : Boolean;
                 DiscBln@1100409004 : Boolean;
                 DiscGrpBln@1100409003 : Boolean;
                 RcpBln@1100409002 : Boolean;
                 CompRel@1100409001 : Record 11012059;
                 CentrManagementCU@1100409000 : Codeunit 11012010;
               BEGIN
                 ActPrice := TRUE;
                 IF CompRel.READPERMISSION THEN BEGIN  //db, 03-11-14: C018589
                   CentrManagementCU.ItemFormEditable(NavBln,DiscBln,DiscGrpBln,RcpBln);
                   UpdateRecipeProhibited := RcpBln;
                 END;
                 EstSetup.GET;  //DP00381
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 5       ;1   ;Action    ;
                      CaptionML=ENU=&Process;
                      InFooterBar=No;
                      Image=Start;
                      OnAction=BEGIN
                                 StartUpdate;
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100525006;1;Field  ;
                CaptionML=ENU=Revise Estimation Lines;
                SourceExpr=ActEst;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100525008;1;Field  ;
                CaptionML=ENU=Revise Estimation Recipes;
                SourceExpr=ActEstRecipe;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100525014;1;Field  ;
                CaptionML=ENU=Revise Standard Recipes;
                SourceExpr=ActRecipe;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100525012;1;Field  ;
                CaptionML=ENU=Actualise Norm/ Price;
                SourceExpr=ActPrice;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100525000;1;Field  ;
                CaptionML=ENU=Revise Base Estimate Part Lines;
                SourceExpr=ActEstPartLine;
                OnValidate=BEGIN
                             UpdateEditable;
                             ActEstPartLineOnAfterValidate;
                           END;
                            }

    { 1210190000;1;Field  ;
                CaptionML=ENU=Revise Item Relation;
                SourceExpr=ActItemRelation;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100528608;1;Field  ;
                CaptionML=ENU=Revise Maintenance Schemes;
                SourceExpr=ActMaintScheme;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100528610;1;Field  ;
                CaptionML=ENU=Revise Modifications;
                SourceExpr=ActModification;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100528612;1;Field  ;
                CaptionML=ENU=Revise Standard Objects;
                SourceExpr=ActStandardObject;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100528614;1;Field  ;
                CaptionML=ENU=Revise Objects;
                SourceExpr=ActServiceObject;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1   ;1   ;Field     ;
                Name=EstFilter;
                CaptionML=ENU=Estimate;
                SourceExpr=EstFilter;
                Editable=EstFilterEditable;
                OnLookup=BEGIN
                           EstRec.SETFILTER("No.", EstFilter);
                           IF PAGE.RUNMODAL(PAGE::"Estimate List",EstRec) = ACTION::LookupOK THEN
                             IF (ActEst = TRUE) OR (ActEstRecipe = TRUE) THEN
                               EstFilter := EstRec."No.";
                         END;
                          }

    { 3   ;1   ;Field     ;
                Name=RcpGrpFilter;
                CaptionML=ENU=Recipe Group;
                SourceExpr=RcpGrpFilter;
                Editable=RcpGrpFilterEditable;
                OnLookup=BEGIN
                           LookupRecipeGroup;
                         END;
                          }

    { 1100525016;1;Field  ;
                Name=RcpFilter;
                CaptionML=ENU=Recipe;
                SourceExpr=RcpFilter;
                Editable=RcpFilterEditable;
                OnLookup=BEGIN
                           LookupRecipe;
                         END;
                          }

    { 1100525004;1;Field  ;
                Name=PartGrpFilter;
                CaptionML=ENU=Estimate Part Group;
                SourceExpr=EstPartGrpFilter;
                Editable=EstPartGrpFilterEditable;
                OnLookup=BEGIN
                           LookupPartGroup;
                         END;
                          }

    { 1100525002;1;Field  ;
                Name=PartFilter;
                CaptionML=ENU=Base Estimate Part;
                SourceExpr=EstPartFilter;
                Editable=EstPartFilterEditable;
                OnLookup=BEGIN
                           LookupPart;
                         END;
                          }

    { 1100528600;1;Field  ;
                Name=MaintSchemeFilter;
                CaptionML=ENU=Maintenance Scheme (Objects);
                SourceExpr=MaintSchemeFilter;
                Editable=MaintSchemeFilterEditable;
                OnLookup=BEGIN
                           IF PAGE.RUNMODAL(0, MaintenanceScheme) = ACTION::LookupOK THEN
                             IF ActMaintScheme THEN
                               MaintSchemeFilter := MaintenanceScheme.Code;
                         END;
                          }

    { 1100528602;1;Field  ;
                Name=ModificationFilter;
                CaptionML=ENU=Modification (objecten);
                SourceExpr=ModificationFilter;
                Editable=ModificationFilterEditable;
                OnLookup=BEGIN
                           ObjectModification.SETFILTER("No.", ModificationFilter);
                           IF PAGE.RUNMODAL(0, ObjectModification) = ACTION::LookupOK THEN
                             IF ActModification THEN
                               ModificationFilter := ObjectModification."No.";
                         END;
                          }

    { 1100528604;1;Field  ;
                Name=StandardObjectFilter;
                CaptionML=ENU=Standard Object;
                SourceExpr=StandardObjectFilter;
                Editable=StandardObjectFilterEditable;
                OnLookup=BEGIN
                           StandardObject.SETFILTER("No.", StandardObjectFilter);
                           IF PAGE.RUNMODAL(0, StandardObject) = ACTION::LookupOK THEN
                             IF ActStandardObject THEN
                               StandardObjectFilter := StandardObject."No.";
                         END;
                          }

    { 1100528606;1;Field  ;
                Name=ServiceObjectFilter;
                CaptionML=ENU=Object;
                SourceExpr=ServiceObjectFilter;
                Editable=ServiceObjectFilterEditable;
                OnLookup=BEGIN
                           ServiceObject.SETFILTER("No.", ServiceObjectFilter);
                           IF PAGE.RUNMODAL(0, ServiceObject) = ACTION::LookupOK THEN
                             IF ActServiceObject THEN
                               ServiceObjectFilter := ServiceObject."No.";
                         END;
                          }

  }
  CODE
  {
    VAR
      EstFilter@11012000 : Code[20];
      RcpGrpFilter@1210190001 : Code[20];
      RcpFilter@11012001 : Code[20];
      EstPartGrpFilter@1100525002 : Code[20];
      EstPartFilter@1100525001 : Code[20];
      MaintSchemeFilter@1100528600 : Code[20];
      ModificationFilter@1100528601 : Code[20];
      StandardObjectFilter@1100528602 : Code[20];
      ServiceObjectFilter@1100528603 : Code[20];
      EstSetup@1100528900 : Record 11012150;
      EstRec@11012003 : Record 11012151;
      RecipeRec@11012005 : Record 11012155;
      EstGrpRec@1210190002 : Record 11012157;
      EstPartRec@1100525003 : Record 11012169;
      ServGrpRec@1100525007 : Record 11012830;
      MaintenanceScheme@1100528608 : Record 11071745;
      ObjectModification@1100528609 : Record 11071700;
      StandardObject@1100528610 : Record 11020334;
      ServiceObject@1100528611 : Record 11071691;
      ActEst@11012012 : Boolean;
      ActRecipe@11012013 : Boolean;
      ActEstRecipe@11012014 : Boolean;
      ActPrice@1210190000 : Boolean;
      ActEstPartLine@1100525000 : Boolean;
      Text011@1100525005 : TextConst 'ENU=Busy with       #1################# @2@@@@@@@@@@@@@';
      ActItemRelation@1210190003 : Boolean;
      ActMaintScheme@1100528604 : Boolean;
      ActModification@1100528605 : Boolean;
      ActStandardObject@1100528606 : Boolean;
      ActServiceObject@1100528607 : Boolean;
      UpdateRecipeProhibited@1210190005 : Boolean;
      Text000@1210190006 : TextConst 'ENU="Update base recipes not possible because of Central Management "';
      EstFilterEditable@1100525014 : Boolean;
      RcpGrpFilterEditable@1100525013 : Boolean;
      RcpFilterEditable@1100525012 : Boolean;
      EstPartGrpFilterEditable@1100525011 : Boolean;
      EstPartFilterEditable@1100525010 : Boolean;
      MaintSchemeFilterEditable@1100525009 : Boolean;
      ModificationFilterEditable@1100525008 : Boolean;
      StandardObjectFilterEditable@1100525006 : Boolean;
      ServiceObjectFilterEditable@1100525004 : Boolean;

    PROCEDURE StartUpdate@1100525000();
    VAR
      ConvRec@1100525003 : Record 11012322;
      EstLineRecOLD@1100525002 : Record 11012154;
      EstLineRecNEW@1100525005 : Record 11072072;
      RcpLineRecOLD@1100525001 : Record 11012156;
      RcpLineRecNEW@1100525006 : Record 11072075;
      BaseRcpLine@1100525008 : Record 11020582;
      MaintSchemeVersionLine@1100528601 : Record 11071744;
      UseLock@1100525000 : Boolean;
      UpdateEst@1100525004 : Codeunit 11012155;
      UpdateMgt@1100525007 : Codeunit 11012229;
      ReviseAdditionalActivitities@1100528600 : Codeunit 11012833;
    BEGIN
      //db, 07-10-08: M11811
      ConvRec.SETRANGE(Select, TRUE);

      IF ActRecipe AND UpdateRecipeProhibited THEN
        ERROR(Text000);

      IF ActEst THEN BEGIN
        IF EstSetup.Converted THEN BEGIN  //DP00381
          IF EstFilter = '' THEN
            EstLineRecNEW.SETFILTER("Estimate No.", '<>%1', '')
          ELSE
            EstLineRecNEW.SETFILTER("Estimate No.", EstFilter);
        END ELSE BEGIN
          IF EstFilter = '' THEN
            EstLineRecOLD.SETFILTER("Estimate No.", '<>%1', '')
          ELSE
            EstLineRecOLD.SETFILTER("Estimate No.", EstFilter);
        END;
      END;

      IF ActRecipe OR ActEstRecipe THEN BEGIN
        IF EstSetup.Converted THEN BEGIN  //DP00381
          IF ActRecipe THEN BEGIN  //db, 24-06-14: C014467
            IF RcpGrpFilter = '' THEN
              BaseRcpLine.SETFILTER("Recipe Group", '<>%1', '')
            ELSE
              BaseRcpLine.SETFILTER("Recipe Group", RcpGrpFilter);
            IF RcpFilter = '' THEN
              BaseRcpLine.SETFILTER(Recipe, '<>%1', '')
            ELSE
              BaseRcpLine.SETFILTER(Recipe, RcpFilter);
          END;
          IF ActEstRecipe THEN BEGIN  //db, 24-06-14: C014467
            IF EstFilter = '' THEN
              RcpLineRecNEW.SETFILTER("Estimate No.", '<>%1', '')
            ELSE
              RcpLineRecNEW.SETFILTER("Estimate No.", EstFilter);
            IF RcpGrpFilter = '' THEN
              RcpLineRecNEW.SETFILTER("Recipe Group", '<>%1', '')
            ELSE
              RcpLineRecNEW.SETFILTER("Recipe Group", RcpGrpFilter);
            IF RcpFilter = '' THEN
              RcpLineRecNEW.SETFILTER(Recipe, '<>%1', '')
            ELSE
              RcpLineRecNEW.SETFILTER(Recipe, RcpFilter);
          END;
        END ELSE BEGIN
          IF ActRecipe = TRUE THEN
            RcpLineRecOLD.SETFILTER("Estimate No.", '%1', '')
          ELSE
            IF EstFilter = '' THEN
              RcpLineRecOLD.SETFILTER("Estimate No.", '<>%1', '')
            ELSE
              RcpLineRecOLD.SETFILTER("Estimate No.", EstFilter);
          IF RcpGrpFilter = '' THEN
            RcpLineRecOLD.SETFILTER("Recipe Group", '<>%1', '')
          ELSE
            RcpLineRecOLD.SETFILTER("Recipe Group", RcpGrpFilter);
          IF RcpFilter = '' THEN
            RcpLineRecOLD.SETFILTER(Recipe, '<>%1', '')
          ELSE
            RcpLineRecOLD.SETFILTER(Recipe, RcpFilter);
        END;
      END;

      IF ActEst OR ActRecipe OR ActEstRecipe THEN BEGIN
        IF EstSetup.Converted THEN BEGIN //DP00381
          UpdateMgt.SetSkipFixed;  //C026777: db 24-12-15
          UpdateMgt.ReplaceItem(ConvRec, EstLineRecNEW, RcpLineRecNEW, BaseRcpLine,
            ActEst, ActEstRecipe, ActRecipe, FALSE, ActPrice);  //db, 24-06-14: C014467
        END ELSE BEGIN
          UpdateEst.ReplaceItem(ConvRec, EstLineRecOLD, RcpLineRecOLD, ActEst, (ActRecipe OR ActEstRecipe), FALSE, ActPrice, UseLock);
        END;
      END;

      IF ActEstPartLine THEN
        ProcessEstPart(ConvRec);  //db, 23-08-10: M17540

      IF ActItemRelation THEN
        ProcessItemRelation(ConvRec);  //db, 21-06-11: M18987

      //mg.sn, 07-09-11: M27754
      IF ActMaintScheme THEN BEGIN
        MaintSchemeVersionLine.SETRANGE("Line Type", MaintSchemeVersionLine."Line Type"::"Maintenance Scheme");
        IF MaintSchemeFilter <> '' THEN
          MaintSchemeVersionLine.SETFILTER("Type Code", MaintSchemeFilter);
        ReviseAdditionalActivitities.ReviceAdditionalActivities(ConvRec, MaintSchemeVersionLine, ActPrice);
      END;

      IF ActModification THEN BEGIN
        MaintSchemeVersionLine.SETRANGE("Line Type", MaintSchemeVersionLine."Line Type"::Modification);
        IF ModificationFilter <> '' THEN
          MaintSchemeVersionLine.SETFILTER("Type Code", ModificationFilter);
        ReviseAdditionalActivitities.ReviceAdditionalActivities(ConvRec, MaintSchemeVersionLine, ActPrice);
      END;

      IF ActStandardObject THEN BEGIN
        MaintSchemeVersionLine.SETFILTER("Line Type", '%1|%2|%3',
          MaintSchemeVersionLine."Line Type"::"Standard Object",
          MaintSchemeVersionLine."Line Type"::"Standard Object Installation",
          MaintSchemeVersionLine."Line Type"::"Standard Object Deinstallation");
        IF StandardObjectFilter <> '' THEN
          MaintSchemeVersionLine.SETFILTER("Type Code", StandardObjectFilter);
        ReviseAdditionalActivitities.ReviceAdditionalActivities(ConvRec, MaintSchemeVersionLine, ActPrice);
      END;

      IF ActServiceObject THEN BEGIN
        MaintSchemeVersionLine.SETFILTER("Line Type", '%1|%2',
          MaintSchemeVersionLine."Line Type"::"Object Installation",
          MaintSchemeVersionLine."Line Type"::Object);
        IF ServiceObjectFilter <> '' THEN
          MaintSchemeVersionLine.SETFILTER("Type Code", ServiceObjectFilter);
        ReviseAdditionalActivitities.ReviceAdditionalActivities(ConvRec, MaintSchemeVersionLine, ActPrice);
      END;
      //mg.en, 07-09-11: M27754
    END;

    PROCEDURE ProcessEstPart@1100525001(VAR ConvRec@1100525001 : Record 11012322);
    VAR
      EstPartLineRecOLD@1100525000 : Record 11012187;
      EstPartLineRecNEW@1100528900 : Record 11072076;
      DimValRec@1100525002 : Record 349;
      DimMgt@1100525003 : Codeunit 408;
      ItemTypeOpt@1100525008 : 'Item,Basic Item,Trade Item,Trade Vendor';
      OldSubOperation@1210190000 : Code[20];
      currec@1100525004 : Integer;
      maxrec@1100525005 : Integer;
      Status@1100525006 : Dialog;
    BEGIN
      //db, 23-08-10: M17540
      IF ConvRec.FINDSET THEN BEGIN
        Status.OPEN(Text011);
        REPEAT
          IF ActEstPartLine THEN BEGIN
            IF EstSetup.Converted THEN BEGIN  //DP00381
              //copy from codeunit 11012229 (function ReplaceItem)
              Status.UPDATE(1,EstPartLineRecNEW.TABLECAPTION);
              IF RcpGrpFilter = '' THEN
                EstPartLineRecNEW.SETFILTER("Part Group", '<>%1', '')
              ELSE
                EstPartLineRecNEW.SETFILTER("Part Group", EstPartGrpFilter);
              IF EstPartFilter = '' THEN
                EstPartLineRecNEW.SETFILTER(Part, '<>%1', '')
              ELSE
                EstPartLineRecNEW.SETFILTER(Part, EstPartFilter);
              IF ConvRec."Trade Item (Old)" <> '' THEN BEGIN
                EstPartLineRecNEW.SETRANGE("Trade Item", ConvRec."Trade Item (Old)");
                EstPartLineRecNEW.SETRANGE("Vendor (Trade Item)", ConvRec."Vendor (Old)");
              END ELSE BEGIN
                IF ConvRec."Basic Item (Old)" <> '' THEN BEGIN
                  EstPartLineRecNEW.SETRANGE("Basic Item", ConvRec."Basic Item (Old)");
                  EstPartLineRecNEW.SETRANGE(Manufacturer, ConvRec."Manufacturer (Old)");
                END ELSE BEGIN
                  IF ConvRec."Item No. (Old)" <> '' THEN BEGIN
                    EstPartLineRecNEW.SETRANGE("Item No.", ConvRec."Item No. (Old)");
                  END ELSE BEGIN
                    IF ConvRec."Cost Object (Old)" <> '' THEN BEGIN
                      EstPartLineRecNEW.SETFILTER("Trade Item", '%1', '');
                      EstPartLineRecNEW.SETFILTER("Vendor (Trade Item)", '%1', '');
                      EstPartLineRecNEW.SETFILTER("Basic Item", '%1', '');
                      EstPartLineRecNEW.SETFILTER(Manufacturer, '%1', '');
                      EstPartLineRecNEW.SETFILTER("Item No.", '%1', '');
                      DimMgt.GetDimValueRec(2, ConvRec."Cost Object (Old)", DimValRec, TRUE, '');
                      IF DimValRec."Cost Type" = DimValRec."Cost Type"::Labor THEN
                        EstPartLineRecNEW.SETRANGE("Cost Object Labor", ConvRec."Cost Object (Old)");
                      IF DimValRec."Cost Type" = DimValRec."Cost Type"::Material THEN
                        EstPartLineRecNEW.SETRANGE("Cost Object Price", ConvRec."Cost Object (Old)");
                      IF DimValRec."Cost Type" = DimValRec."Cost Type"::Subcontracting THEN
                        EstPartLineRecNEW.SETRANGE("Cost Object Price", ConvRec."Cost Object (Old)");
                      IF DimValRec."Cost Type" = DimValRec."Cost Type"::Plant THEN
                        EstPartLineRecNEW.SETRANGE("Cost Object Price", ConvRec."Cost Object (Old)");
                      IF DimValRec."Cost Type" = DimValRec."Cost Type"::Sundry THEN
                        EstPartLineRecNEW.SETRANGE("Cost Object Price", ConvRec."Cost Object (Old)");
                    END;
                  END;
                END;
              END;
              IF EstPartLineRecNEW.FINDSET (TRUE, FALSE) THEN BEGIN
                currec := 0;
                maxrec := EstPartLineRecNEW.COUNT;
                REPEAT
                  OldSubOperation := EstPartLineRecNEW."Sub Operation Code";  //db, 21-11-11: M30942
                  IF ConvRec."Cost Object (Old)" <> '' THEN BEGIN
                    DimMgt.GetDimValueRec(2, ConvRec."Cost Object (New)", DimValRec, TRUE, '');
                    IF DimValRec."Cost Type" = DimValRec."Cost Type"::Labor THEN
                      EstPartLineRecNEW."Cost Object Labor" := ConvRec."Cost Object (New)";
                    IF DimValRec."Cost Type" = DimValRec."Cost Type"::Material THEN
                      EstPartLineRecNEW."Cost Object Price" := ConvRec."Cost Object (New)";
                    IF DimValRec."Cost Type" = DimValRec."Cost Type"::Subcontracting THEN
                      EstPartLineRecNEW."Cost Object Price" := ConvRec."Cost Object (New)";
                    IF DimValRec."Cost Type" = DimValRec."Cost Type"::Plant THEN
                      EstPartLineRecNEW."Cost Object Price" := ConvRec."Cost Object (New)";
                    IF DimValRec."Cost Type" = DimValRec."Cost Type"::Sundry THEN
                      EstPartLineRecNEW."Cost Object Price" := ConvRec."Cost Object (New)";
                  END ELSE BEGIN
                    EstPartLineRecNEW."Item No." := ConvRec."Item No. (New)";
                    EstPartLineRecNEW."Basic Item" := ConvRec."Basic Item (New)";
                    EstPartLineRecNEW."Trade Item" := ConvRec."Trade Item (New)";
                    EstPartLineRecNEW.Manufacturer := ConvRec."Manufacturer (New)";
                    EstPartLineRecNEW."Vendor (Trade Item)" := ConvRec."Vendor (New)";
                  END;
                  IF ActPrice = TRUE THEN BEGIN
                    IF ConvRec."Trade Item (New)" <> '' THEN
                      EstPartLineRecNEW.ValidateItem(ItemTypeOpt::"Trade Item")
                    ELSE
                      IF ConvRec."Basic Item (New)" <> '' THEN
                        EstPartLineRecNEW.ValidateItem(ItemTypeOpt::"Basic Item")
                      ELSE
                        IF ConvRec."Item No. (New)" <> '' THEN
                          EstPartLineRecNEW.ValidateItem(ItemTypeOpt::Item);
                    IF OldSubOperation <> '' THEN
                      EstPartLineRecNEW."Sub Operation Code" := OldSubOperation;  //db, 21-11-11: M30942
                  END;
                  EstPartLineRecNEW.MODIFY;
                  currec := currec + 1;
                  Status.UPDATE(2,ROUND(currec / maxrec * 10000,1));
                UNTIL EstPartLineRecNEW.NEXT = 0;
              END;
            END ELSE BEGIN
              //copy from codeunit 11012155 (function ReplaceItem)
              Status.UPDATE(1,EstPartLineRecOLD.TABLECAPTION);
              IF RcpGrpFilter = '' THEN
                EstPartLineRecOLD.SETFILTER("Part Group", '<>%1', '')
              ELSE
                EstPartLineRecOLD.SETFILTER("Part Group", EstPartGrpFilter);
              IF EstPartFilter = '' THEN
                EstPartLineRecOLD.SETFILTER(Part, '<>%1', '')
              ELSE
                EstPartLineRecOLD.SETFILTER(Part, EstPartFilter);
              IF ConvRec."Trade Item (Old)" <> '' THEN BEGIN
                EstPartLineRecOLD.SETRANGE("Trade Item", ConvRec."Trade Item (Old)");
                EstPartLineRecOLD.SETRANGE("Vendor (Trade Item)", ConvRec."Vendor (Old)");
              END ELSE BEGIN
                IF ConvRec."Basic Item (Old)" <> '' THEN BEGIN
                  EstPartLineRecOLD.SETRANGE("Basic Item", ConvRec."Basic Item (Old)");
                  EstPartLineRecOLD.SETRANGE(Manufacturer, ConvRec."Manufacturer (Old)");
                END ELSE BEGIN
                  IF ConvRec."Item No. (Old)" <> '' THEN BEGIN
                    EstPartLineRecOLD.SETRANGE("Item No.", ConvRec."Item No. (Old)");
                  END ELSE BEGIN
                    IF ConvRec."Cost Object (Old)" <> '' THEN BEGIN
                      EstPartLineRecOLD.SETFILTER("Trade Item", '%1', '');
                      EstPartLineRecOLD.SETFILTER("Vendor (Trade Item)", '%1', '');
                      EstPartLineRecOLD.SETFILTER("Basic Item", '%1', '');
                      EstPartLineRecOLD.SETFILTER(Manufacturer, '%1', '');
                      EstPartLineRecOLD.SETFILTER("Item No.", '%1', '');
                      DimMgt.GetDimValueRec(2, ConvRec."Cost Object (Old)", DimValRec, TRUE, '');
                      IF DimValRec."Cost Type" = DimValRec."Cost Type"::Labor THEN
                        EstPartLineRecOLD.SETRANGE("Cost Object Labor", ConvRec."Cost Object (Old)");
                      IF DimValRec."Cost Type" = DimValRec."Cost Type"::Material THEN
                        EstPartLineRecOLD.SETRANGE("Cost Object Material", ConvRec."Cost Object (Old)");
                      IF DimValRec."Cost Type" = DimValRec."Cost Type"::Subcontracting THEN
                        EstPartLineRecOLD.SETRANGE("Cost Object Subcontracting", ConvRec."Cost Object (Old)");
                      IF DimValRec."Cost Type" = DimValRec."Cost Type"::Plant THEN
                        EstPartLineRecOLD.SETRANGE("Cost Object Plant", ConvRec."Cost Object (Old)");
                    END;
                  END;
                END;
              END;
              IF EstPartLineRecOLD.FINDSET (TRUE, FALSE) THEN BEGIN
                currec := 0;
                maxrec := EstPartLineRecOLD.COUNT;
                REPEAT
                  OldSubOperation := EstPartLineRecOLD."Sub Operation Code";  //db, 21-11-11: M30942
                  IF ConvRec."Cost Object (Old)" <> '' THEN BEGIN
                    DimMgt.GetDimValueRec(2, ConvRec."Cost Object (New)", DimValRec, TRUE, '');
                    IF DimValRec."Cost Type" = DimValRec."Cost Type"::Labor THEN
                      EstPartLineRecOLD."Cost Object Labor" := ConvRec."Cost Object (New)";
                    IF DimValRec."Cost Type" = DimValRec."Cost Type"::Material THEN
                      EstPartLineRecOLD."Cost Object Material" := ConvRec."Cost Object (New)";
                    IF DimValRec."Cost Type" = DimValRec."Cost Type"::Subcontracting THEN
                      EstPartLineRecOLD."Cost Object Subcontracting" := ConvRec."Cost Object (New)";
                    IF DimValRec."Cost Type" = DimValRec."Cost Type"::Plant THEN
                      EstPartLineRecOLD."Cost Object Plant" := ConvRec."Cost Object (New)";
                  END ELSE BEGIN
                    EstPartLineRecOLD."Item No." := ConvRec."Item No. (New)";
                    EstPartLineRecOLD."Basic Item" := ConvRec."Basic Item (New)";
                    EstPartLineRecOLD."Trade Item" := ConvRec."Trade Item (New)";
                    EstPartLineRecOLD.Manufacturer := ConvRec."Manufacturer (New)";
                    EstPartLineRecOLD."Vendor (Trade Item)" := ConvRec."Vendor (New)";
                  END;
                  IF ActPrice = TRUE THEN BEGIN
                    IF ConvRec."Trade Item (New)" <> '' THEN
                      EstPartLineRecOLD.ValidateItem(ItemTypeOpt::"Trade Item")
                    ELSE
                      IF ConvRec."Basic Item (New)" <> '' THEN
                        EstPartLineRecOLD.ValidateItem(ItemTypeOpt::"Basic Item")
                      ELSE
                        IF ConvRec."Item No. (New)" <> '' THEN
                          EstPartLineRecOLD.ValidateItem(ItemTypeOpt::Item);
                    IF OldSubOperation <> '' THEN
                      EstPartLineRecOLD."Sub Operation Code" := OldSubOperation;  //db, 21-11-11: M30942
                  END;
                  EstPartLineRecOLD.MODIFY;
                  currec := currec + 1;
                  Status.UPDATE(2,ROUND(currec / maxrec * 10000,1));
                UNTIL EstPartLineRecOLD.NEXT = 0;
              END;
            END;
          END;
        UNTIL ConvRec.NEXT = 0;
        Status.CLOSE;
      END;
    END;

    PROCEDURE ProcessItemRelation@1210190000(VAR ConvRec@1210190004 : Record 11012322);
    VAR
      ItemRelationRec@1210190000 : Record 11012319;
      ItemRelationRec2@1210190006 : Record 11012319;
      currec@1210190003 : Integer;
      maxrec@1210190002 : Integer;
      Status@1210190001 : Dialog;
      ItemLevel@1210190005 : Integer;
    BEGIN
      //db, 21-06-11: M18987
      IF ConvRec.FINDSET THEN BEGIN
        Status.OPEN(Text011);
        REPEAT
          ItemLevel := 0;
          ItemRelationRec.RESET;
          IF (ConvRec."Item No. (Old)" <> '') AND (ConvRec."Item No. (New)" <> '') THEN BEGIN
            ItemLevel := 1;
            ItemRelationRec.SETRANGE("Navision Item", ConvRec."Item No. (Old)");
          END;
          IF (ConvRec."Basic Item (Old)" <> '') AND (ConvRec."Basic Item (New)" <> '') THEN BEGIN
            ItemLevel := 2;
            ItemRelationRec.SETRANGE(Manufacturer, ConvRec."Manufacturer (Old)");
            ItemRelationRec.SETRANGE("Basic Item", ConvRec."Basic Item (Old)");
          END;
          IF (ConvRec."Trade Item (Old)" <> '') AND (ConvRec."Trade Item (New)" <> '') THEN BEGIN
            ItemLevel := 3;
            ItemRelationRec.SETRANGE(Vendor, ConvRec."Vendor (Old)");
            ItemRelationRec.SETRANGE("Trade Item", ConvRec."Trade Item (Old)");
          END;
          IF ItemLevel <> 0 THEN BEGIN
            Status.UPDATE(1,ItemRelationRec.TABLECAPTION);
            IF ItemRelationRec.FINDSET (TRUE, TRUE) THEN BEGIN
              currec := 0;
              maxrec := ItemRelationRec.COUNT;
              REPEAT
                IF ItemLevel = 1 THEN BEGIN
                  ItemRelationRec2 := ItemRelationRec;
                  ItemRelationRec2."Navision Item" := ConvRec."Item No. (New)";
                  IF ItemRelationRec2.INSERT THEN
                    ItemRelationRec.DELETE;
                END;
                IF ItemLevel = 2 THEN BEGIN
                  ItemRelationRec.Manufacturer := ConvRec."Manufacturer (New)";
                  ItemRelationRec.VALIDATE("Basic Item", ConvRec."Basic Item (New)");
                  ItemRelationRec.MODIFY;
                END;
                IF ItemLevel = 3 THEN BEGIN
                  ItemRelationRec.Vendor := ConvRec."Vendor (New)";
                  ItemRelationRec.VALIDATE("Trade Item", ConvRec."Trade Item (New)");
                  ItemRelationRec.MODIFY;
                END;
                currec := currec + 1;
                Status.UPDATE(2,ROUND(currec / maxrec * 10000,1));
              UNTIL ItemRelationRec.NEXT = 0;
            END;
          END;
        UNTIL ConvRec.NEXT = 0;
        Status.CLOSE;
      END;
    END;

    LOCAL PROCEDURE ActEstPartLineOnAfterValidate@19066497();
    BEGIN
      IF ActEstPartLine = FALSE THEN BEGIN
        EstPartGrpFilter := '';
        EstPartFilter := '';
      END;
    END;

    PROCEDURE UpdateEditable@1100525003();
    BEGIN
      EstFilterEditable := (ActEst = TRUE) OR (ActEstRecipe = TRUE);
      RcpGrpFilterEditable := (ActRecipe = TRUE) OR (ActEstRecipe = TRUE);
      RcpFilterEditable := (ActRecipe = TRUE) OR (ActEstRecipe = TRUE);
      EstPartGrpFilterEditable :=  ActEstPartLine = TRUE;
      EstPartFilterEditable := ActEstPartLine = TRUE;
      MaintSchemeFilterEditable := ActMaintScheme = TRUE;
      ModificationFilterEditable := ActModification = TRUE;
      StandardObjectFilterEditable := ActStandardObject = TRUE;
      ServiceObjectFilterEditable := ActServiceObject = TRUE;
    END;

    PROCEDURE LookupRecipeGroup@1100528900();
    VAR
      RcpGrpRec@1100525001 : Record 11020580;
      EstGrpRec@1100525000 : Record 11012157;
    BEGIN
      //DP00381
      IF EstSetup.Converted THEN BEGIN
        RcpGrpRec.SETFILTER("No.", RcpGrpFilter);
        IF PAGE.RUNMODAL(0, RcpGrpRec) = ACTION::LookupOK THEN
          IF (ActRecipe = TRUE) OR (ActEstRecipe = TRUE) THEN
            RcpGrpFilter := RcpGrpRec."No.";
      END ELSE BEGIN
        EstGrpRec.RESET;
        EstGrpRec.SETRANGE(Type, EstGrpRec.Type::Recipe);
        EstGrpRec.SETFILTER("No.", RcpGrpFilter);
        IF PAGE.RUNMODAL(0, EstGrpRec) = ACTION::LookupOK THEN
          IF (ActRecipe = TRUE) OR (ActEstRecipe = TRUE) THEN
            RcpGrpFilter := EstGrpRec."No.";
      END;
    END;

    PROCEDURE LookupRecipe@1100525004();
    VAR
      RecipeRec@1100525001 : Record 11012155;
      BaseRecipeRec@1100525000 : Record 11020581;
    BEGIN
      //DP00381
      IF EstSetup.Converted THEN BEGIN
        BaseRecipeRec.SETFILTER("No.", RcpFilter);
        IF PAGE.RUNMODAL(0, BaseRecipeRec) = ACTION::LookupOK THEN
          IF (ActRecipe = TRUE) OR (ActEstRecipe = TRUE) THEN
            RcpFilter := BaseRecipeRec."No.";
      END ELSE BEGIN
        RecipeRec.SETFILTER("Recipe Group", RcpGrpFilter);
        RecipeRec.SETFILTER("No.", RcpFilter);
        IF PAGE.RUNMODAL(0, RecipeRec) = ACTION::LookupOK THEN
          IF (ActRecipe = TRUE) OR (ActEstRecipe = TRUE) THEN
            RcpFilter := RecipeRec."No.";
      END;
    END;

    PROCEDURE LookupPartGroup@1100525005();
    VAR
      EstGrpRec@1100525000 : Record 11012157;
    BEGIN
      //DP00381
      EstGrpRec.SETRANGE(Type, EstGrpRec.Type::Part);
      EstGrpRec.SETFILTER("No.", EstPartGrpFilter);
      IF PAGE.RUNMODAL(0, EstGrpRec) = ACTION::LookupOK THEN
        IF ActEstPartLine = TRUE THEN
          EstPartGrpFilter := EstGrpRec."No.";
    END;

    PROCEDURE LookupPart@1100525006();
    VAR
      EstPartRec@1100525000 : Record 11012169;
    BEGIN
      //DP00381
      EstPartRec.SETFILTER("Part Group", EstPartGrpFilter);
      EstPartRec.SETFILTER(Code, EstPartFilter);
      IF PAGE.RUNMODAL(0, EstPartRec) = ACTION::LookupOK THEN
        IF ActEstPartLine = TRUE THEN
          EstPartFilter := EstPartRec.Code;
    END;

    BEGIN
    {
      db, 03-10-14: setfilter changed
    }
    END.
  }
}

