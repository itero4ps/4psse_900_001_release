OBJECT Page 11012417 External Document
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=External Document;
    SourceTable=Table11012746;
    PopulateAllFields=Yes;
    SourceTableView=WHERE(External Document=CONST(Yes));
    PageType=ListPlus;
    TimerUpdate=1;
    OnInit=BEGIN
             "Original ToEditable" := TRUE;
             "Addressed ToEditable" := TRUE;
             ConfidentialEditable := TRUE;
             "Expired OnEditable" := TRUE;
           END;

    OnOpenPage=VAR
                 Contact@1100409000 : Record 5050;
               BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01

                 IF EVALUATE(ShowingResultDocumentFilter, GETFILTER("Showing Result Document Filter")) THEN;

                 RelationSetup.GET;
                 IF NOT ShowingResultDocumentFilter THEN BEGIN
                   IF RelationSetup."Show only own documents" THEN BEGIN
                     FILTERGROUP(2);
                     SETRANGE("Internal Company",COMPANYNAME);
                     FILTERGROUP(0);
                   END;
                 END;

                 IF NOT UserSetup.GET(USERID) THEN UserSetup.INIT; //**4PS01.n

                 // T000916.sn
                 IF Contact.GET(GETFILTER("Contact No.")) THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Contact No.", Contact."No.");
                   FILTERGROUP(0);
                 END;
                 IF Contact.GET(GETFILTER("Contact Person No.")) THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Contact Person No.", Contact."No.");
                   FILTERGROUP(0);
                 END;
                 FILTERGROUP(2);
                 IF GETFILTER("RID Filter") <> '''''' THEN
                   IF EVALUATE(RID, GETFILTER("RID Filter")) THEN;
                 IF GETFILTER("Department Code Filter") <> '''''' THEN
                   DepartmentCode := GETFILTER("Department Code Filter");
                 FILTERGROUP(0);
                 // T000916.en
               END;

    OnAfterGetRecord=BEGIN
                       // Check if Default Document Links are coupled with a record in the database.
                       IF xRec."No." <> '' THEN BEGIN
                         IF "No." <> xRec."No." THEN BEGIN
                           CheckDefaultDocumentLink(xRec, TRUE);
                         END;
                       END;
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  IF (FORMAT(RID) <> '') AND (DepartmentCode <> '') THEN
                    "Department Code" := DepartmentCode;

                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02

                  "External Document" := TRUE;
                  Status := Status::Concept;
                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     MARKEDONLY(FALSE); // Doc Mgt
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    OnModifyRecord=BEGIN
                     IF "Document Sharepoint ID" <> 0 THEN
                       ERROR(Text003);
                   END;

    OnDeleteRecord=BEGIN
                     IF "Document Sharepoint ID" <> 0 THEN
                       ERROR(Text003);
                   END;

    OnQueryClosePage=VAR
                       ConfirmDescription@1199198000 : Text[250];
                     BEGIN
                       EXIT(CheckDefaultDocumentLink(Rec, FALSE)); // Doc Mgt
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1210190065;1 ;ActionGroup;
                      CaptionML=ENU=&External Document }
      { 1100485016;2 ;Action    ;
                      CaptionML=ENU=Copy to;
                      RunObject=Page 11012414;
                      RunPageLink=Document No.=FIELD(No.);
                      Image=Copy }
      { 1100525016;2 ;Action    ;
                      CaptionML=ENU=Document &Relations;
                      Image=Relationship;
                      OnAction=VAR
                                 DocRelFrm@1100525001 : Page 11012413;
                                 DocRelRec@1100525000 : Record 11012407;
                                 DocumentLinkMgt@1199198001 : Codeunit 11012401;
                                 ProjectNo@1199198002 : Code[20];
                               BEGIN
                                 DocRelRec.SETRANGE("Document Type",DocRelRec."Document Type"::Document);
                                 DocRelRec.SETRANGE("No.","No.");
                                 DocRelFrm.SETTABLEVIEW(DocRelRec);

                                 ProjectNo := DocumentLinkMgt.GetProjectNo("No.");

                                 IF ProjectNo <> '' THEN
                                   DocRelFrm.SetProjFilter(ProjectNo);

                                 DocRelFrm.RUNMODAL;
                               END;
                                }
      { 1210190072;2 ;Action    ;
                      ShortCutKey=Return;
                      CaptionML=ENU=Open;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Document;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //**4PS01.sn
                                 IF NOT IsConfidentialOwner() THEN
                                   TESTFIELD(Confidential, FALSE);
                                 //**4PS01.en
                                 OpenDocument;
                                 //ExtDocManagement.OpenExternalDocument("Document Type",File);
                               END;
                                }
      { 1100528301;1 ;Action    ;
                      CaptionML=ENU=Co&mments;
                      Image=ViewComments;
                      OnAction=BEGIN
                                 OpenCommentSheet;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1210190035;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1210190042;2 ;Action    ;
                      CaptionML=ENU=Copy;
                      Image=Copy;
                      OnAction=VAR
                                 lDocPropertiesRec@1210190000 : Record 11012746;
                                 DocumentProperties2@1100528701 : Record 11012746;
                                 lExtDocCopyToRec@1100485001 : Record 11012408;
                                 lExtDocCopyToRec2@1100485002 : Record 11012408;
                                 DocumentLinkMgt@1199198001 : Codeunit 11012401;
                                 ProjectSiteMgt@1100528401 : Codeunit 11012282;
                                 WasRecordMarked@1100525001 : Boolean;
                               BEGIN
                                 //**4PS01.sn
                                 IF (UserSetup."Employee No." <> "Addressed To") AND
                                    (UserSetup."Employee No." <> "Original To") THEN
                                   TESTFIELD(Confidential, FALSE);
                                 //**4PS01.en
                                 IF NOT CONFIRM(Text001, TRUE, "No.") THEN
                                   EXIT;

                                 WasRecordMarked := MARK; // jhoek.100211

                                 lDocPropertiesRec.COPY(Rec);
                                 lDocPropertiesRec."No." := '';
                                 IF ProjectSiteMgt.IsInLicense(FALSE) THEN BEGIN
                                   // The fields File and Web Link are made empty to prevent inserting
                                   // records in table Project Site Change Logging for Document Links
                                   // when an external document is copied.
                                   lDocPropertiesRec.File := '';
                                   lDocPropertiesRec."Web link" := '';
                                 END;
                                 lDocPropertiesRec.FILTERGROUP(2);
                                 lDocPropertiesRec.COPYFILTER("RID Filter", DocumentProperties2."RID Filter");
                                 lDocPropertiesRec.SETRANGE("RID Filter");
                                 lDocPropertiesRec.FILTERGROUP(0);

                                 lDocPropertiesRec.INSERT(TRUE);

                                 lDocPropertiesRec.FILTERGROUP(2);
                                 DocumentProperties2.COPYFILTER("RID Filter", lDocPropertiesRec."RID Filter");
                                 lDocPropertiesRec.FILTERGROUP(0);

                                 lDocPropertiesRec."Internal Company" := "Internal Company";
                                 lDocPropertiesRec.MODIFY;

                                 // Copy Document Links
                                 DocumentLinkMgt.CopyDocumentLink("No.", lDocPropertiesRec."No.", FALSE);

                                 lExtDocCopyToRec.SETRANGE("Document No.", "No.");
                                 IF lExtDocCopyToRec.FIND('-') THEN
                                   REPEAT
                                     lExtDocCopyToRec2 := lExtDocCopyToRec;
                                     lExtDocCopyToRec2."Document No." := lDocPropertiesRec."No.";
                                     lExtDocCopyToRec2.INSERT;
                                   UNTIL lExtDocCopyToRec.NEXT = 0;

                                 MESSAGE(STRSUBSTNO(Text002, "No.", lDocPropertiesRec."No."));
                                 //**4PS
                                 //"No." := lDocPropertiesRec."No.";
                                 //
                                 //FIND;
                                 GET(lDocPropertiesRec."No.");
                                 MARK(WasRecordMarked); // jhoek.100211
                                 //**4PS
                               END;
                                }
      { 1210190038;1 ;ActionGroup;
                      CaptionML=ENU=&Print }
      { 1210190033;2 ;Action    ;
                      CaptionML=ENU=External Document Reports;
                      Image=Report;
                      OnAction=VAR
                                 DocPrint@1210190000 : Codeunit 229;
                               BEGIN
                                 DocPrint.PrintDocI(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210190027;1;Group  ;
                CaptionML=ENU=General }

    { 1210190001;2;Field  ;
                Name=No;
                SourceExpr="No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             NoOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1210190018;2;Field  ;
                SourceExpr=Description;
                Importance=Promoted }

    { 1210190005;2;Field  ;
                SourceExpr="Contact No.";
                OnValidate=BEGIN
                             ContactNoOnAfterValidate;
                           END;
                            }

    { 1210190007;2;Field  ;
                CaptionML=ENU=Contact Name;
                SourceExpr=CompNameTxt;
                Importance=Additional;
                Editable=FALSE }

    { 1210190009;2;Field  ;
                SourceExpr="Contact Person No.";
                OnValidate=BEGIN
                             ContactPersonNoOnAfterValidate;
                           END;
                            }

    { 1210190008;2;Field  ;
                SourceExpr="Contact Person Name";
                Importance=Additional;
                Editable=FALSE }

    { 1100525000;2;Field  ;
                SourceExpr="Project Portal Subsite" }

    { 1100528300;2;Field  ;
                SourceExpr="Project Portal Subsite Descr";
                Importance=Additional }

    { 1210190052;2;Field  ;
                SourceExpr="Document Type";
                OnValidate=BEGIN
                             DocumentTypeOnAfterValidate;
                           END;
                            }

    { 1210190030;2;Field  ;
                SourceExpr="Document Type Description";
                Importance=Additional;
                Editable=FALSE }

    { 1100525001;2;Field  ;
                SourceExpr="Private Company Document" }

    { 1100485061;2;Field  ;
                SourceExpr="Document Category" }

    { 1100485060;2;Field  ;
                SourceExpr="Document Category Description";
                Importance=Additional;
                Editable=FALSE }

    { 1100525003;2;Field  ;
                SourceExpr="Project Element" }

    { 1100525002;2;Field  ;
                SourceExpr="Project Element Description";
                Importance=Additional }

    { 1210190049;2;Field  ;
                SourceExpr="Original To";
                Editable="Original ToEditable";
                OnValidate=BEGIN
                             OriginalToOnAfterValidate;
                           END;
                            }

    { 1210190051;2;Field  ;
                CaptionML=ENU=Original To Name;
                SourceExpr=OrigToNameTxt;
                Editable=FALSE }

    { 1100485020;2;Field  ;
                SourceExpr=Reference }

    { 1210190091;2;Field  ;
                SourceExpr=Subject }

    { 1210190054;2;Field  ;
                SourceExpr="Document Date";
                Importance=Additional }

    { 1210190000;2;Field  ;
                SourceExpr="Modification Date";
                Importance=Additional;
                OnDrillDown=VAR
                              lModDateFrm@1210190000 : Page 11012412;
                              lModDateRec@1210190002 : Record 11012406;
                            BEGIN
                              lModDateRec.SETRANGE("Document No.","No.");
                              lModDateFrm.SETTABLEVIEW(lModDateRec);
                              lModDateFrm.RUNMODAL;
                              CurrPage.UPDATE;
                            END;
                             }

    { 1100485015;2;Field  ;
                SourceExpr="React Before";
                Importance=Additional }

    { 1210190045;2;Field  ;
                CaptionML=ENU=Addressed to Company;
                SourceExpr="Internal Company" }

    { 1210190031;2;Field  ;
                SourceExpr="Addressed To";
                Editable="Addressed ToEditable";
                OnValidate=BEGIN
                             AddressedToOnAfterValidate;
                           END;
                            }

    { 1210190021;2;Field  ;
                SourceExpr=File;
                OnDrillDown=BEGIN
                              ExtDocManagement.FileDrillDown(Rec);
                            END;

                OnAssistEdit=BEGIN
                               ExtDocManagement.BrowseForFile(File,"Document Type");
                               VALIDATE(File);
                             END;
                              }

    { 1210190039;2;Field  ;
                SourceExpr="Web link" }

    { 1100485064;2;Field  ;
                SourceExpr="Version External Doc." }

    { 1210190062;2;Field  ;
                SourceExpr=Scale;
                Importance=Additional }

    { 1210190058;2;Field  ;
                SourceExpr="Expired On";
                Importance=Additional;
                Editable="Expired OnEditable" }

    { 1210190011;2;Field  ;
                SourceExpr="Addressed To Name" }

    { 1199198000;1;Part   ;
                Name=DocumentLink;
                SubPageView=SORTING(Document No.,Seq. No.);
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page11072478 }

    { 1902597601;1;Group  ;
                CaptionML=ENU=Document }

    { 1210190003;2;Field  ;
                SourceExpr="Document No.";
                Importance=Promoted }

    { 1210190056;2;Field  ;
                SourceExpr=Status;
                Importance=Promoted;
                OnValidate=BEGIN
                             StatusOnAfterValidate;
                           END;
                            }

    { 1100525004;2;Field  ;
                SourceExpr=Editor;
                Editable=false }

    { 1100525005;2;Field  ;
                SourceExpr="Name Editor" }

    { 1210190026;2;Field  ;
                SourceExpr="Creation Date";
                Editable=FALSE }

    { 1210190036;2;Field  ;
                SourceExpr="Creation Time";
                Importance=Additional;
                Editable=FALSE }

    { 1100485056;2;Field  ;
                SourceExpr=Modified;
                Importance=Additional;
                Editable=FALSE }

    { 1100485058;2;Field  ;
                SourceExpr="Modified By";
                Importance=Additional;
                Editable=FALSE }

    { 1210190012;2;Field  ;
                SourceExpr="E-Mail Sent On" }

    { 1210190013;2;Field  ;
                SourceExpr="E-Mail Sent By" }

    { 1210190024;2;Field  ;
                SourceExpr="E-Mail Sent To" }

    { 1210190043;2;Field  ;
                SourceExpr=Confidential;
                Editable=ConfidentialEditable;
                OnValidate=BEGIN
                             ConfidentialOnAfterValidate;
                           END;
                            }

    { 1100528100;2;Field  ;
                SourceExpr="Publish on Service Portal";
                Importance=Additional }

    { 1100409000;2;Field  ;
                SourceExpr="Publish on Subcont.Portal" }

    { 1100409001;2;Field  ;
                SourceExpr="Available for Field Service" }

    { 1100409002;2;Field  ;
                SourceExpr="Created by Field Service" }

    { 1100528302;2;Field  ;
                SourceExpr="Project Portal Publish Date" }

    { 1100528600;1;Group  ;
                CaptionML=ENU=Dispatch;
                GroupType=Group }

    { 1100528602;2;Field  ;
                SourceExpr="Send to Dispatch" }

    { 1100528601;2;Field  ;
                SourceExpr="Sent to Dispatch on" }

    { 1100528603;2;Field  ;
                SourceExpr="Dispatch Attachment Type" }

  }
  CODE
  {
    VAR
      CompNameTxt@1210190000 : Text[50];
      PersonNameTxt@1210190001 : Text[50];
      OrigToNameTxt@1210190006 : Text[100];
      Text001@1100485000 : TextConst 'ENU=Do you want to copy Document %1?';
      Text002@1210190011 : TextConst 'ENU=Document %1 copied to Document %2';
      UserSetup@1210190012 : Record 91;
      RelationSetup@1210190008 : Record 5079;
      ExtDocManagement@1210190013 : Codeunit 11012403;
      DepAuthRec@1100000997 : Record 11012466;
      Text003@1100485001 : TextConst 'ENU=This is a Sharepoint generated document.';
      gEngDoc@1100525000 : Boolean;
      gDocType@1100525001 : Code[10];
      gSubType@1100525002 : ' ,Project,System,Device,Device Type,Location,,,,Document Package';
      gSubPart1@1100525003 : Code[30];
      gSubPart2@1100525004 : Code[30];
      gPageNo@1100525005 : Integer;
      Text004@1100525006 : TextConst 'ENU=Engineering document is created.';
      gComposedIDEngDoc@1100525009 : Code[110];
      DPA_IsHardFilter@1100000999 : Boolean;
      RID@1100528702 : RecordID;
      UpdateDocumentLink@1199198003 : Boolean;
      DepartmentCode@1100528700 : Code[20];
      "Expired OnEditable"@19045550 : Boolean INDATASET;
      ConfidentialEditable@19013874 : Boolean INDATASET;
      "Addressed ToEditable"@19022721 : Boolean INDATASET;
      "Original ToEditable"@19010438 : Boolean INDATASET;
      ShowingResultDocumentFilter@1100528701 : Boolean;

    PROCEDURE HandleConfidential@1210190002();
    BEGIN
      //**4PS01.n
      IF NOT (Confidential) THEN BEGIN
        HandleConfidentialOwnerShip(TRUE);
        IF (UserSetup."Employee No." <> "Addressed To") AND
           (UserSetup."Employee No." <> "Original To") THEN
          ConfidentialEditable := FALSE;
      END ELSE BEGIN
        HandleConfidentialOwnerShip(FALSE);
        IF (UserSetup."Employee No." = "Addressed To") OR
           (UserSetup."Employee No." = "Original To") THEN BEGIN
          "Addressed ToEditable" := TRUE;
          "Original ToEditable" := TRUE;
          ConfidentialEditable := TRUE;
        END;
        IF ("Addressed To" = '') AND
           ("Original To" = '') THEN BEGIN
            HandleConfidentialOwnerShip(TRUE);
            ConfidentialEditable := FALSE;
        END;
      END;
    END;

    PROCEDURE HandleConfidentialOwnerShip@1210190005(ControlEDitable@1210190000 : Boolean);
    BEGIN
      //**4PS01.n
      "Addressed ToEditable" := ControlEDitable;
      "Original ToEditable" := ControlEDitable;
      ConfidentialEditable := ControlEDitable;
    END;

    PROCEDURE GetDescription@1210190000();
    VAR
      ContactRec@1210190007 : Record 5050;
      WerknRec@1210190005 : Record 5200;
    BEGIN
      IF "Contact No." = '' THEN
        CompNameTxt := ''
      ELSE
        IF ContactRec.GET("Contact No.") THEN
          CompNameTxt := ContactRec.Name
        ELSE
          CompNameTxt := '';

      IF "Contact Person No." = '' THEN
        PersonNameTxt := ''
      ELSE
        IF ContactRec.GET("Contact Person No.") THEN
          PersonNameTxt := ContactRec.Name
        ELSE
          PersonNameTxt := '';

      IF "Original To" = '' THEN
        OrigToNameTxt := ''
      ELSE
        IF WerknRec.GET("Original To") THEN
          OrigToNameTxt := WerknRec."Full Name"
        ELSE
          OrigToNameTxt := '';
    END;

    LOCAL PROCEDURE ContactNoOnAfterValidate@19009577();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ContactPersonNoOnAfterValidate@19021883();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE AddressedToOnAfterValidate@19010233();
    BEGIN
      HandleConfidential; //**4PS01.n
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OriginalToOnAfterValidate@19072905();
    BEGIN
      HandleConfidential; //**4PS01.n
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE DocumentTypeOnAfterValidate@19030163();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE ConfidentialOnAfterValidate@19046777();
    BEGIN
      HandleConfidential; //**4PS01.n
    END;

    LOCAL PROCEDURE StatusOnAfterValidate@19072689();
    BEGIN
      CurrPage.UPDATE;  //**4PS.n
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      GetDescription;

      "Expired OnEditable" := Status = Status::Definite;
      HandleConfidential; //**4PS01.n
    END;

    BEGIN
    {
      4PS   Marcel Vos C-019333 : Fixed error filter new record after copy
    }
    END.
  }
}

