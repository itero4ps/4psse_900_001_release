OBJECT Page 11012470 Tender Paragraphs by Principal
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Tender Paragraphs by Project Principal;
    SourceTable=Table11012470;
    SourceTableView=SORTING(Project No.,Principal,Contract No.,Tender Paragraph OLD,No.);
    DataCaptionFields=Project No.,Principal;
    PageType=List;
    OnInit=BEGIN
             SettleExcessEditable := TRUE;
             DeviantSettlementPriceEditable := TRUE;
             SettlementPriceEditable := TRUE;
             RevisionEditable := TRUE;
           END;

    OnOpenPage=BEGIN
                 ProjPrinRec.GET("Project No.",Principal);
               END;

    OnClosePage=BEGIN
                  CheckFictAmtFilledForOpen();  //C001959
                END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                       DescriptionOnFormat;
                     END;

    OnNewRecord=BEGIN
                  FillDefaultSettleExcess();  //C-026862.n
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100485002;1 ;ActionGroup;
                      Name=Tender Paragraph;
                      CaptionML=ENU=Tender &Paragraph }
      { 1100485005;2 ;Action    ;
                      CaptionML=ENU=Text;
                      RunObject=Page 11012480;
                      RunPageView=SORTING(Project No.,Principal,Contract No.,Tender Paragraph,Text Line No.)
                                  ORDER(Ascending);
                      RunPageLink=Project No.=FIELD(Project No.),
                                  Principal=FIELD(Principal),
                                  Contract No.=FIELD(Contract No.),
                                  Tender Paragraph=FIELD(No.);
                      Image=Text }
      { 1100525000;2 ;Action    ;
                      CaptionML=ENU=VAT-Specification;
                      Description=ISS;
                      RunObject=Page 11012481;
                      RunPageLink=Project No.=FIELD(Project No.),
                                  Principal=FIELD(Principal),
                                  Contract No.=FIELD(Contract No.),
                                  Tender Paragraph=FIELD(No.);
                      Image=VATEntries }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100485008;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1100525005;2 ;Action    ;
                      Name=ExchangeRate;
                      CaptionML=ENU=Actualise Currency Exchange Rate;
                      Image=CurrencyExchangeRates;
                      OnAction=VAR
                                 ProjectPrincipal@1100525000 : Record 11012005;
                               BEGIN
                                 ProjectPrincipal.UpdateTenderElementCurrencyData("Project No.", Principal);  //DP00886
                               END;
                                }
      { 1100525006;2 ;ActionGroup;
                      CaptionML=ENU=Copy;
                      Image=Copy }
      { 1100485010;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy &Standard Tender Paragraphs;
                      Image=Copy;
                      OnAction=VAR
                                 lvTenderParRec@1100485002 : Record 11012072;
                                 lvPrinTenderElemRec@1100485001 : Record 11012470;
                                 lvTendParFrm@1100485000 : Page 11012132;
                               BEGIN
                                 IF CONFIRM(Text002, FALSE) THEN BEGIN
                                   lvTenderParRec.SETRANGE(Type, lvTenderParRec.Type::Document);
                                   lvTenderParRec.SETRANGE("No.", '');
                                   lvTenderParRec.SETRANGE("Purchase Action", '');
                                   lvTenderParRec.SETRANGE("Document No.", '');
                                   IF lvTenderParRec.FIND('-') THEN BEGIN
                                     REPEAT
                                       IF NOT lvPrinTenderElemRec.GET("Project No.",Principal,'', '', lvTenderParRec."Tender Paragraph") THEN BEGIN
                                         lvPrinTenderElemRec.INIT;
                                         lvPrinTenderElemRec."Project No." := "Project No.";
                                         lvPrinTenderElemRec.Principal := Principal;
                                         lvPrinTenderElemRec."Contract No." := '';
                                         lvPrinTenderElemRec.FillDefaultSettleExcess();  //C-026862.n
                                         lvPrinTenderElemRec."No." := lvTenderParRec."Tender Paragraph";
                                         lvPrinTenderElemRec.Description := lvTenderParRec.Description;
                                         lvPrinTenderElemRec.INSERT(TRUE);
                                       END;
                                     UNTIL lvTenderParRec.NEXT = 0;
                                   END;
                                 END ELSE BEGIN
                                   lvTendParFrm.SetDefaultsProjPrincipal("Project No.",Principal,'');
                                   lvTendParFrm.RUNMODAL;
                                 END;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100485016;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy &Project Tender Paragraphs;
                      Image=CopyBudget;
                      OnAction=VAR
                                 lvTenderParRec@1100485002 : Record 11012072;
                                 lvPrinTenderElemRec@1100485001 : Record 11012470;
                                 lvProjTendParFrm@1100485000 : Page 11020346;
                               BEGIN
                                 TESTFIELD("Project No.");
                                 IF CONFIRM(Text003, FALSE) THEN BEGIN
                                   lvTenderParRec.SETRANGE(Type, lvTenderParRec.Type::Job);
                                   lvTenderParRec.SETRANGE("No.", "Project No.");
                                   lvTenderParRec.SETRANGE("Purchase Action", '');
                                   lvTenderParRec.SETRANGE("Document No.", '');
                                   IF lvTenderParRec.FIND('-') THEN BEGIN
                                     REPEAT
                                       IF NOT lvPrinTenderElemRec.GET("Project No.",Principal,'', '', lvTenderParRec."Tender Paragraph") THEN BEGIN
                                         lvPrinTenderElemRec.INIT;
                                         lvPrinTenderElemRec."Project No." := "Project No.";
                                         lvPrinTenderElemRec.Principal := Principal;
                                         lvPrinTenderElemRec."Contract No." := '';
                                         lvPrinTenderElemRec.FillDefaultSettleExcess();  //C-026862.n
                                         lvPrinTenderElemRec."No." := lvTenderParRec."Tender Paragraph";
                                         lvPrinTenderElemRec.Description := lvTenderParRec.Description;
                                         lvPrinTenderElemRec.INSERT(TRUE);
                                       END;
                                     UNTIL lvTenderParRec.NEXT = 0;
                                   END;
                                 END ELSE BEGIN
                                   lvTenderParRec.RESET;
                                   lvTenderParRec.FILTERGROUP(9);
                                   lvTenderParRec.SETRANGE("No.", "Project No.");
                                   lvTenderParRec.FILTERGROUP(0);
                                   lvProjTendParFrm.SETTABLEVIEW(lvTenderParRec);
                                   lvProjTendParFrm.SetDefaultsProjPrincipal("Project No.",Principal,'');
                                   lvProjTendParFrm.RUNMODAL;
                                 END;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100525007;2 ;ActionGroup;
                      CaptionML=ENU=Import;
                      Image=Import }
      { 1100485009;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Import Tender Paragraphs (Measurement List);
                      Image=Import;
                      OnAction=VAR
                                 ImportMeasurementList@1100485000 : XMLport 11012014;
                                 ListType@1100485001 : 'ProjectPrincipal,ExtContract,ProvWork';
                               BEGIN
                                 ImportMeasurementList.SetSelections(ListType::ProjectPrincipal, "Project No.", Principal, "Contract No.");
                                 ImportMeasurementList.RUN;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100485015;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Import RAW Estimate;
                      Image=Import;
                      OnAction=VAR
                                 ImportRSU@1100485000 : XMLport 11012276;
                               BEGIN
                                 ImportRSU.SetSelections("Project No.", Principal, "Contract No.");
                                 ImportRSU.RUN;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100485018;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Import RAW Tender;
                      Image=import;
                      OnAction=VAR
                                 ImportZSU@1100485000 : XMLport 11012277;
                               BEGIN
                                 ImportZSU.SetSelections("Project No.", Principal, "Contract No.");
                                 ImportZSU.RUN;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100485011;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Project &Elements;
                      Image=CreateLinesFromJob;
                      OnAction=VAR
                                 lvPrinTenderElemRec@1100485005 : Record 11012470;
                                 lvProjectElement@1100485004 : Record 11012010;
                                 lvFormatElement@1100485003 : Codeunit 11012022;
                                 lvChapter@1100485002 : Code[20];
                                 lvParagraph@1100485001 : Code[20];
                                 lvLevel@1100485000 : Integer;
                               BEGIN
                                 IF CONFIRM(Text004, TRUE) THEN BEGIN
                                   lvPrinTenderElemRec.SETRANGE("Project No.", "Project No.");
                                   lvPrinTenderElemRec.SETRANGE(Principal, Principal);
                                   lvPrinTenderElemRec.SETRANGE("Contract No.", '');
                                   lvPrinTenderElemRec.SETFILTER(Element, '<>%1', '');
                                   IF lvPrinTenderElemRec.FIND('-') THEN BEGIN
                                     REPEAT
                                       IF NOT lvProjectElement.GET(lvPrinTenderElemRec."Project No.", lvPrinTenderElemRec.Element) THEN BEGIN
                                         lvFormatElement.FormatElemExtended(2, lvPrinTenderElemRec.Element, lvChapter, lvParagraph, lvLevel);
                                         IF lvLevel IN [1,2,3] THEN BEGIN
                                           IF NOT lvProjectElement.GET(lvPrinTenderElemRec."Project No.", lvChapter) THEN BEGIN
                                             lvProjectElement.INIT;
                                             lvProjectElement.VALIDATE("Project No.", lvPrinTenderElemRec."Project No.");
                                             lvProjectElement.VALIDATE(Element, lvChapter);
                                             lvProjectElement.Description := lvPrinTenderElemRec.Description;
                                             lvProjectElement."Unit of Measure" := lvPrinTenderElemRec."Unit of Measure";
                                             lvProjectElement.INSERT;
                                           END;
                                         END;
                                         IF lvLevel IN [2,3] THEN BEGIN
                                           IF NOT lvProjectElement.GET(lvPrinTenderElemRec."Project No.", lvParagraph) THEN BEGIN
                                             lvProjectElement.INIT;
                                             lvProjectElement.VALIDATE("Project No.", lvPrinTenderElemRec."Project No.");
                                             lvProjectElement.VALIDATE(Element, lvParagraph);
                                             lvProjectElement.Description := lvPrinTenderElemRec.Description;
                                             lvProjectElement."Unit of Measure" := lvPrinTenderElemRec."Unit of Measure";
                                             lvProjectElement.INSERT;
                                           END;
                                         END;
                                         IF lvLevel = 3 THEN BEGIN
                                           lvProjectElement.INIT;
                                           lvProjectElement.VALIDATE("Project No.", lvPrinTenderElemRec."Project No.");
                                           lvProjectElement.VALIDATE(Element, lvPrinTenderElemRec.Element);
                                           lvProjectElement.Description := lvPrinTenderElemRec.Description;
                                           lvProjectElement."Unit of Measure" := lvPrinTenderElemRec."Unit of Measure";
                                           lvProjectElement.INSERT;
                                         END;
                                       END;
                                     UNTIL lvPrinTenderElemRec.NEXT = 0;
                                   END;
                                 END;
                               END;
                                }
      { 1210190030;1 ;Action    ;
                      CaptionML=ENU=&Print;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ProjPrincipalRec@1210190000 : Record 11012005;
                                 PrintDoc@1210190002 : Codeunit 229;
                               BEGIN
                                 ProjPrincipalRec."Project No." :=  "Project No.";
                                 ProjPrincipalRec.Principal := Principal;
                                 PrintDoc.PrintTenderParagraphbyPrinc(ProjPrincipalRec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210190000;1;Group  ;
                GroupType=Repeater }

    { 1100485019;2;Field  ;
                SourceExpr="No.";
                OnLookup=BEGIN
                           LookupTenderParagraph;
                         END;
                          }

    { 1210190003;2;Field  ;
                SourceExpr=Description;
                Style=Strong;
                StyleExpr=DescriptionEmphasize }

    { 1100485000;2;Field  ;
                SourceExpr=Element }

    { 1210190005;2;Field  ;
                BlankZero=Yes;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             RefreshPage;
                           END;
                            }

    { 1210190007;2;Field  ;
                SourceExpr="Unit of Measure" }

    { 1210190011;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Unit Price (LCY)";
                OnValidate=BEGIN
                             RefreshPage;
                           END;
                            }

    { 1100525001;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Unit Price (FCY)";
                Visible=FALSE }

    { 1100485021;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Settlement Price (LCY)";
                Visible=FALSE;
                Editable=SettlementPriceEditable;
                OnValidate=BEGIN
                             //handmatig afgeweken van de door RAW systematiek bepaalde verrekenprijs
                             "Deviant Settlement Price" := TRUE;
                           END;
                            }

    { 1100525002;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Settlement Price (FCY)";
                Visible=FALSE;
                Editable=SettlementPriceEditable }

    { 1100485031;2;Field  ;
                SourceExpr="Deviant Settlement Price";
                Visible=FALSE;
                Editable=DeviantSettlementPriceEditable }

    { 1210190013;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Total Amount (LCY)" }

    { 1100525003;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Total Amount (FCY)";
                Visible=FALSE }

    { 1100525004;2;Field  ;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 1210190009;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Number of Points/Percentage";
                Editable=NumberofPointsEditable;
                OnValidate=BEGIN
                             RefreshPage;
                           END;
                            }

    { 1100485023;2;Field  ;
                SourceExpr=Finished;
                Visible=FALSE;
                OnValidate=BEGIN
                             RefreshPage;
                           END;
                            }

    { 1100485006;2;Field  ;
                SourceExpr="Settlement Type";
                Visible=FALSE }

    { 1100485029;2;Field  ;
                SourceExpr="Settle Excess";
                Visible=FALSE;
                Editable=SettleExcessEditable }

    { 1100485012;2;Field  ;
                SourceExpr=Text;
                Visible=FALSE;
                Editable=FALSE }

    { 1100485003;2;Field  ;
                SourceExpr=Revision;
                Editable=RevisionEditable;
                OnValidate=VAR
                             ProjRec@1100485000 : Record 11072003;
                             Text001@1100485001 : TextConst 'ENU=Warning: A Revision Rule is specified for the project!';
                           BEGIN
                             ProjRec.GET("Project No.");
                             IF ProjRec.Revision AND NOT Revision THEN
                               MESSAGE(Text001);
                           END;
                            }

    { 1100485025;2;Field  ;
                SourceExpr=Type;
                Visible=FALSE }

    { 1100485027;2;Field  ;
                SourceExpr=Layout;
                Visible=FALSE }

    { 1210190001;0;Container;
                ContainerType=FactBoxArea }

    { 1210190002;1;Part   ;
                SubPageView=SORTING(Project No.,Principal,Contract No.,Tender Paragraph OLD,No.);
                SubPageLink=Project No.=FIELD(Project No.),
                            Principal=FIELD(Principal),
                            Contract No.=FILTER('');
                PagePartID=Page11130020;
                PartType=Page }

  }
  CODE
  {
    VAR
      Text000@1210190002 : TextConst 'ENU=Number of assigned points is not equal to Total Points';
      Text001@1210190003 : TextConst 'ENU=Total Tender Paragraphs is not equal to the Contract Price';
      ProjPrinRec@1210190004 : Record 11012005;
      Message1@1210190001 : Text[100];
      Message2@1210190000 : Text[100];
      Text002@1210190005 : TextConst 'ENU=Copy all Standard Tender Paragraphs to Tender Paragraphs by Project Principal?';
      Text003@1100485001 : TextConst 'ENU=Copy all Project Tender Paragraphs to Tender Paragraphs by Project Principal?';
      Text004@1100485000 : TextConst 'ENU=Generate Project Elements?';
      gProjRec@1100485002 : Record 11072003;
      TotalPointsPercentage@1100525000 : Decimal;
      RevisionEditable@19056319 : Boolean INDATASET;
      SettlementPriceEditable@19042059 : Boolean INDATASET;
      DeviantSettlementPriceEditable@19035422 : Boolean INDATASET;
      SettleExcessEditable@19041189 : Boolean INDATASET;
      DescriptionEmphasize@19010547 : Boolean INDATASET;
      NumberOfPointsEditable@1100525001 : Boolean INDATASET;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      CALCFIELDS("Contract Price (LCY)", "Total Quant.Points/Percentage", "Total Tender Paragraphs (LCY)", "Total Points/Percentage");

      //mg.sc, 01-02-11: M25239
      IF (ProjPrinRec."Installm.Motivation Method" = ProjPrinRec."Installm.Motivation Method"::Percentages) AND ("Contract Price (LCY)" <> 0)
      THEN
        TotalPointsPercentage := ROUND("Total Tender Paragraphs (LCY)" / "Contract Price (LCY)" * 100)
      ELSE
        TotalPointsPercentage := "Total Points/Percentage";
      //mg.ec, 01-02-11: M25239

      IF TotalPointsPercentage <> "Total Quant.Points/Percentage" THEN
        Message1 := STRSUBSTNO(Text000,"Total Points/Percentage","Total Quant.Points/Percentage")
      ELSE
        Message1 := '';

      IF "Total Tender Paragraphs (LCY)" <> "Contract Price (LCY)" THEN
        Message2 := STRSUBSTNO(Text001,"Total Tender Paragraphs (LCY)","Contract Price (LCY)")
      ELSE
        Message2 := '';

      gProjRec.GET("Project No.");
      RevisionEditable := (gProjRec.Revision AND NOT gProjRec.RAW);
      SettlementPriceEditable := (gProjRec.RAW);
      DeviantSettlementPriceEditable := (gProjRec.RAW);
      //SettleExcessEditable := (gProjRec.RAW);  //C-026862.o

      NumberOfPointsEditable :=
        ((ProjPrinRec."Installm.Motivation Method" = ProjPrinRec."Installm.Motivation Method"::Points) OR
         (ProjPrinRec."Installm.Motivation Method" = ProjPrinRec."Installm.Motivation Method"::Percentages));  //db, 10-03-16
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      IF gProjRec.RAW THEN
        DescriptionEmphasize := (Layout <> Layout::Detail);
    END;

    LOCAL PROCEDURE RefreshPage@1100525001();
    BEGIN
      CurrPage.UPDATE;  //db, 10-03-16
    END;

    BEGIN
    END.
  }
}

