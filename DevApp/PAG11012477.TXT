OBJECT Page 11012477 Tender Paragraphs Ext.Contract
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Tender Paragraphs by Extension Contract;
    SourceTable=Table11012470;
    SourceTableView=SORTING(Project No.,Principal,Contract No.,Tender Paragraph OLD,No.);
    DataCaptionFields=Project No.,Contract No.,Principal;
    PageType=List;
    OnInit=BEGIN
             "Settle ExcessEditable" := TRUE;
             "Settlement PriceEditable" := TRUE;
             RevisionEditable := TRUE;
           END;

    OnOpenPage=BEGIN
                 ExtContractRec.GET("Project No.","Contract No.");
               END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                       DescriptionOnFormat;
                     END;

    OnNewRecord=BEGIN
                  FillDefaultSettleExcess();  //C-026862.n
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100485007;1 ;ActionGroup;
                      Name=Bestekspost;
                      CaptionML=ENU=Tender Paragraph }
      { 1100485015;2 ;Action    ;
                      CaptionML=ENU=Text;
                      RunObject=Page 11012480;
                      RunPageView=SORTING(Project No.,Principal,Contract No.,Tender Paragraph,Text Line No.)
                                  ORDER(Ascending);
                      RunPageLink=Project No.=FIELD(Project No.),
                                  Principal=FIELD(Principal),
                                  Contract No.=FIELD(Contract No.),
                                  Tender Paragraph=FIELD(No.);
                      Image=Text }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100485011;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1100485013;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy &Standard Tender Paragraphs;
                      Image=Copy;
                      OnAction=VAR
                                 lvTenderParRec@1100485002 : Record 11012072;
                                 lvPrinTenderElemRec@1100485001 : Record 11012470;
                                 lvTendParFrm@1100485000 : Page 11012132;
                               BEGIN
                                 IF CONFIRM(Text002, FALSE) THEN BEGIN
                                   lvTenderParRec.SETRANGE(Type, lvTenderParRec.Type::Document);
                                   lvTenderParRec.SETRANGE("No.", '');
                                   lvTenderParRec.SETRANGE("Purchase Action", '');
                                   lvTenderParRec.SETRANGE("Document No.", '');
                                   IF lvTenderParRec.FIND('-') THEN BEGIN
                                     REPEAT
                                       IF NOT lvPrinTenderElemRec.GET("Project No.",Principal,"Contract No.", '', lvTenderParRec."Tender Paragraph") THEN BEGIN
                                         lvPrinTenderElemRec.INIT;
                                         lvPrinTenderElemRec."Project No." := "Project No.";
                                         lvPrinTenderElemRec.Principal := Principal;
                                         lvPrinTenderElemRec."Contract No." := "Contract No.";
                                         lvPrinTenderElemRec.FillDefaultSettleExcess();  //C-026862.n
                                         lvPrinTenderElemRec."No." := lvTenderParRec."Tender Paragraph";
                                         lvPrinTenderElemRec.Description := lvTenderParRec.Description;
                                         lvPrinTenderElemRec.INSERT(TRUE);
                                       END;
                                     UNTIL lvTenderParRec.NEXT = 0;
                                   END;
                                 END ELSE BEGIN
                                   lvTendParFrm.SetDefaultsProjPrincipal("Project No.",Principal,"Contract No.");
                                   lvTendParFrm.RUNMODAL;
                                 END;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100485004;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy &Project Tender Paragraphs;
                      Image=CopyBudget;
                      OnAction=VAR
                                 lvTenderParRec@1100485002 : Record 11012072;
                                 lvPrinTenderElemRec@1100485001 : Record 11012470;
                                 lvProjTendParFrm@1100485000 : Page 11020346;
                               BEGIN
                                 TESTFIELD("Project No.");
                                 IF CONFIRM(Text003, FALSE) THEN BEGIN
                                   lvTenderParRec.SETRANGE(Type, lvTenderParRec.Type::Job);
                                   lvTenderParRec.SETRANGE("No.", "Project No.");
                                   lvTenderParRec.SETRANGE("Purchase Action", '');
                                   lvTenderParRec.SETRANGE("Document No.", '');
                                   IF lvTenderParRec.FIND('-') THEN BEGIN
                                     REPEAT
                                       IF NOT lvPrinTenderElemRec.GET("Project No.",Principal,"Contract No.", '', lvTenderParRec."Tender Paragraph") THEN BEGIN
                                         lvPrinTenderElemRec.INIT;
                                         lvPrinTenderElemRec."Project No." := "Project No.";
                                         lvPrinTenderElemRec.Principal := Principal;
                                         lvPrinTenderElemRec."Contract No." := "Contract No.";
                                         lvPrinTenderElemRec.FillDefaultSettleExcess();  //C-026862.n
                                         lvPrinTenderElemRec."No." := lvTenderParRec."Tender Paragraph";
                                         lvPrinTenderElemRec.Description := lvTenderParRec.Description;
                                         lvPrinTenderElemRec.INSERT(TRUE);
                                       END;
                                     UNTIL lvTenderParRec.NEXT = 0;
                                   END;
                                 END ELSE BEGIN
                                   lvTenderParRec.RESET;
                                   lvTenderParRec.FILTERGROUP(9);
                                   lvTenderParRec.SETRANGE("No.", "Project No.");
                                   lvTenderParRec.FILTERGROUP(0);
                                   lvProjTendParFrm.SETTABLEVIEW(lvTenderParRec);
                                   lvProjTendParFrm.SetDefaultsProjPrincipal("Project No.",Principal,"Contract No.");
                                   lvProjTendParFrm.RUNMODAL;
                                 END;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100485012;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Import Tender Paragraphs (Measurement List);
                      Image=Import;
                      OnAction=VAR
                                 ImportMeasurementList@1100485000 : XMLport 11012014;
                                 ListType@1100485001 : 'ProjectPrincipal,ExtContract,ProvWork';
                               BEGIN
                                 ImportMeasurementList.SetSelections(ListType::ExtContract, "Project No.", Principal, "Contract No.");
                                 ImportMeasurementList.RUN;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100485035;2 ;Action    ;
                      CaptionML=ENU=Import RAW Tender;
                      Image=Import;
                      OnAction=VAR
                                 ImportZSU@1100485000 : XMLport 11012277;
                               BEGIN
                                 ImportZSU.SetSelections("Project No.", Principal, "Contract No.");
                                 ImportZSU.RUN;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100485014;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Project &Elements;
                      Image=CreateLinesFromJob;
                      OnAction=VAR
                                 lvPrinTenderElemRec@1100485005 : Record 11012470;
                                 lvProjectElement@1100485004 : Record 11012010;
                                 lvFormatElement@1100485003 : Codeunit 11012022;
                                 lvChapter@1100485002 : Code[20];
                                 lvParagraph@1100485001 : Code[20];
                                 lvLevel@1100485000 : Integer;
                               BEGIN
                                 IF CONFIRM(Text004, TRUE) THEN BEGIN
                                   lvPrinTenderElemRec.SETRANGE("Project No.", "Project No.");
                                   lvPrinTenderElemRec.SETRANGE(Principal, Principal);
                                   lvPrinTenderElemRec.SETRANGE("Contract No.",  "Contract No.");
                                   lvPrinTenderElemRec.SETFILTER(Element, '<>%1', '');
                                   IF lvPrinTenderElemRec.FIND('-') THEN BEGIN
                                     REPEAT
                                       IF NOT lvProjectElement.GET(lvPrinTenderElemRec."Project No.", lvPrinTenderElemRec.Element) THEN BEGIN
                                         lvFormatElement.FormatElemExtended(2, lvPrinTenderElemRec.Element, lvChapter, lvParagraph, lvLevel);
                                         IF lvLevel IN [1,2,3] THEN BEGIN
                                           IF NOT lvProjectElement.GET(lvPrinTenderElemRec."Project No.", lvChapter) THEN BEGIN
                                             lvProjectElement.INIT;
                                             lvProjectElement.VALIDATE("Project No.", lvPrinTenderElemRec."Project No.");
                                             lvProjectElement.VALIDATE(Element, lvChapter);
                                             lvProjectElement.Description := lvPrinTenderElemRec.Description;
                                             lvProjectElement."Unit of Measure" := lvPrinTenderElemRec."Unit of Measure";
                                             lvProjectElement.INSERT;
                                           END;
                                         END;
                                         IF lvLevel IN [2,3] THEN BEGIN
                                           IF NOT lvProjectElement.GET(lvPrinTenderElemRec."Project No.", lvParagraph) THEN BEGIN
                                             lvProjectElement.INIT;
                                             lvProjectElement.VALIDATE("Project No.", lvPrinTenderElemRec."Project No.");
                                             lvProjectElement.VALIDATE(Element, lvParagraph);
                                             lvProjectElement.Description := lvPrinTenderElemRec.Description;
                                             lvProjectElement."Unit of Measure" := lvPrinTenderElemRec."Unit of Measure";
                                             lvProjectElement.INSERT;
                                           END;
                                         END;
                                         IF lvLevel = 3 THEN BEGIN
                                           lvProjectElement.INIT;
                                           lvProjectElement.VALIDATE("Project No.", lvPrinTenderElemRec."Project No.");
                                           lvProjectElement.VALIDATE(Element, lvPrinTenderElemRec.Element);
                                           lvProjectElement.Description := lvPrinTenderElemRec.Description;
                                           lvProjectElement."Unit of Measure" := lvPrinTenderElemRec."Unit of Measure";
                                           lvProjectElement.INSERT;
                                         END;
                                       END;
                                     UNTIL lvPrinTenderElemRec.NEXT = 0;
                                   END;
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210190000;1;Group  ;
                GroupType=Repeater }

    { 1210190001;2;Field  ;
                SourceExpr="No.";
                OnLookup=BEGIN
                           LookupTenderParagraph();
                         END;
                          }

    { 1210190003;2;Field  ;
                SourceExpr=Description }

    { 1100485000;2;Field  ;
                SourceExpr=Element }

    { 1210190005;2;Field  ;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;
                            }

    { 1210190007;2;Field  ;
                SourceExpr="Unit of Measure" }

    { 1210190011;2;Field  ;
                SourceExpr="Unit Price (LCY)";
                OnValidate=BEGIN
                             UnitPriceOnAfterValidate;
                           END;
                            }

    { 1100485016;2;Field  ;
                SourceExpr="Settlement Price (LCY)";
                Visible=FALSE;
                Editable="Settlement PriceEditable" }

    { 1210190013;2;Field  ;
                SourceExpr="Total Amount (LCY)" }

    { 1210190009;2;Field  ;
                SourceExpr="Number of Points/Percentage";
                OnValidate=BEGIN
                             NumberofPointsPercentageOnAfte;
                           END;
                            }

    { 1100485020;2;Field  ;
                SourceExpr=Finished;
                Visible=FALSE }

    { 1100485009;2;Field  ;
                SourceExpr="Settlement Type" }

    { 1100485024;2;Field  ;
                SourceExpr="Settle Excess";
                Visible=FALSE;
                Editable="Settle ExcessEditable" }

    { 1100485018;2;Field  ;
                SourceExpr=Text;
                Visible=FALSE;
                Editable=FALSE }

    { 1100485002;2;Field  ;
                SourceExpr=Revision;
                Editable=RevisionEditable;
                OnValidate=VAR
                             ExtContRec@1100485000 : Record 11012004;
                             Text001@1100485001 : TextConst 'ENU=Warning: A Revision Rule is specified for the Extension Contract!';
                           BEGIN
                             ExtContRec.GET("Project No.", "Contract No.");
                             IF ExtContRec.Revision AND NOT Revision THEN
                               MESSAGE(Text001);
                           END;
                            }

    { 1100485026;2;Field  ;
                SourceExpr=Type;
                Visible=FALSE }

    { 1100485028;2;Field  ;
                SourceExpr=Layout;
                Visible=FALSE }

    { 1210190002;0;Container;
                ContainerType=FactBoxArea }

    { 1210190004;1;Part   ;
                SubPageLink=Project No.=FIELD(Project No.),
                            Principal=FIELD(Principal),
                            Contract No.=FIELD(Contract No.),
                            Tender Paragraph OLD=FIELD(Tender Paragraph OLD);
                PagePartID=Page11130024;
                PartType=Page }

  }
  CODE
  {
    VAR
      Text000@1210190002 : TextConst 'ENU=Number of assigned points is not equal to Total Points';
      Text001@1210190003 : TextConst 'ENU=Total Tender Paragraphs is not equal to the Contract Price';
      ExtContractRec@1210190004 : Record 11012004;
      Message1@1210190001 : Text[100];
      Message2@1210190000 : Text[100];
      Text002@1210190005 : TextConst 'ENU=Copy all Standard Tender Paragraphs to Tender Paragraphs by Project Principal?';
      Text003@1100485002 : TextConst 'ENU=Copy all Project Tender Paragraphs to Tender Paragraphs by Project Principal?';
      Text004@1100485001 : TextConst 'ENU=Generate Project Elements?';
      gProjRec@1100485000 : Record 11072003;
      TotalPointsPercentage@1100525000 : Decimal;
      RevisionEditable@19056319 : Boolean INDATASET;
      "Settlement PriceEditable"@19042059 : Boolean INDATASET;
      "Settle ExcessEditable"@19041189 : Boolean INDATASET;
      DescriptionEmphasize@19010547 : Boolean INDATASET;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE UnitPriceOnAfterValidate@19060935();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE NumberofPointsPercentageOnAfte@19059739();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      CALCFIELDS("Ext. Contract Price (LCY)", "Ext.Cont.Tot.Quant.Points/Perc", "Total Tender Paragraphs (LCY)", "Total Points/Percentage");

      //mg.sc, 01-02-11: M25239
      IF (ExtContractRec."Installm.Motivation Method" = ExtContractRec."Installm.Motivation Method"::Percentages) AND
        ("Ext. Contract Price (LCY)" <> 0) THEN
        TotalPointsPercentage := ROUND("Total Tender Paragraphs (LCY)" / "Ext. Contract Price (LCY)" * 100)
      ELSE
        TotalPointsPercentage := "Total Points/Percentage";
      //mg.ec, 01-02-11: M25239

      IF TotalPointsPercentage <> "Ext.Cont.Tot.Quant.Points/Perc" THEN
        Message1 := STRSUBSTNO(Text000,"Total Points/Percentage","Ext.Cont.Tot.Quant.Points/Perc")
      ELSE
        Message1 := '';

      IF "Total Tender Paragraphs (LCY)" <> "Ext. Contract Price (LCY)" THEN
        Message2 := STRSUBSTNO(Text001,"Total Tender Paragraphs (LCY)","Ext. Contract Price (LCY)")
      ELSE
        Message2 := '';

      gProjRec.GET("Project No.");
      RevisionEditable := (gProjRec.Revision AND NOT gProjRec.RAW);
      "Settlement PriceEditable" := (gProjRec.RAW);
      //"Settle ExcessEditable" := (gProjRec.RAW);  //C-026862.o
    END;

    LOCAL PROCEDURE NumberofPointsPercentageOnBefo@19064518();
    BEGIN
      //IF ExtContractRec.GET("Project No.","Contract No.") THEN
      //  CurrPage."Number of Points/Percentage".UPDATEEDITABLE(
      //    (ExtContractRec."Installm.Motivation Method" = ExtContractRec."Installm.Motivation Method"::Points) OR
      //    (ExtContractRec."Installm.Motivation Method" = ExtContractRec."Installm.Motivation Method"::Percentages));
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      IF gProjRec.RAW THEN
        DescriptionEmphasize := (Layout <> Layout::Detail);
    END;

    BEGIN
    {
      4PS, 11-11-13, Report "Tender Par.by Ext.Contract" no longer supported in NAV2013
    }
    END.
  }
}

