OBJECT Page 11012513 Option Budget
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Option Budget;
    SourceTable=Table11012503;
    DataCaptionExpr=SetDataCaptionExpr;
    DelayedInsert=Yes;
    SourceTableView=WHERE(Budget Summary Line=FILTER(No));
    PageType=List;
    TimerUpdate=1;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             CostComponentEditable := TRUE;
             RecipeEditable := TRUE;
             RecipeGroupEditable := TRUE;
           END;

    OnOpenPage=VAR
                 JobSetup@1100525000 : Record 315;
               BEGIN
                 TradeItemEnabled := TRUE;
                 IF NOT ItemSetup.READPERMISSION THEN
                   TradeItemEnabled := FALSE;

                 JobSetup.GET;
                 CostComponentEditable := JobSetup."Cost Component Editable";
               END;

    OnClosePage=BEGIN
                  RecalcSummarySheet;
                END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  VALIDATE("Cost Type", xRec."Cost Type");
                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=BEGIN
                     IF (Quantity <> 0) OR
                        (Amount <> 0)
                     THEN BEGIN
                       FillChangedSummarySheet;
                       RecalcSummarySheet;
                     END;
                   END;

    OnModifyRecord=BEGIN
                     IF (xRec.Quantity <> Quantity) OR
                        (xRec.Hours <> Hours ) OR
                        (xRec.Amount <> Amount) OR
                        (xRec.Rate <> Rate) OR
                        (xRec."Cost Object" <> "Cost Object") OR
                        (xRec.Element <> Element) OR
                        (xRec."Cost Type" <> "Cost Type") THEN
                     BEGIN
                       FillChangedSummarySheet;
                       RecalcSummarySheet;
                     END;
                   END;

    OnDeleteRecord=BEGIN
                     FillChangedSummarySheet;

                     DELETE(FALSE);
                     RecalcSummarySheet;
                     INSERT(FALSE);
                   END;

    ActionList=ACTIONS
    {
      { 1210190030;  ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1210190029;1 ;ActionGroup;
                      CaptionML=ENU=&Option Budget }
      { 1210190003;2 ;Action    ;
                      CaptionML=ENU=Text;
                      Image=Text;
                      OnAction=BEGIN
                                 EditText;
                               END;
                                }
      { 1210190009;2 ;Action    ;
                      CaptionML=ENU=Summary Sheet;
                      Promoted=Yes;
                      Image=Worksheet;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lvBuyerMgtCU@1210190000 : Codeunit 11012500;
                                 lvOptionRec@1210190001 : Record 11012502;
                               BEGIN
                                 IF lvOptionRec.GET("Project No.","Plot No.","House Model","Main Group",Group,"Sub Group",Option) THEN
                                   lvBuyerMgtCU.EditOptionBudgetSummarySheet(lvOptionRec);
                               END;
                                }
      { 1210190031;2 ;Action    ;
                      CaptionML=ENU=Total Budget;
                      RunObject=Page 11012532;
                      RunPageLink=Project No.=FIELD(Project No.),
                                  House Model=FIELD(House Model),
                                  Main Group=FIELD(Main Group),
                                  Sub Group=FIELD(Sub Group),
                                  Group=FIELD(Group),
                                  Option=FIELD(Option),
                                  Plot No.=FIELD(Plot No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=LedgerBudget;
                      PromotedCategory=Process }
      { 1210190035;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1210190018;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1100525502;2 ;Action    ;
                      Name=CopyPasteButton;
                      Ellipsis=Yes;
                      CaptionML=ENU=&Copy;
                      Promoted=Yes;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CopyOptionBudgetPage@1100525001 : Page 11130299;
                                 OptionBudgetRec@1100525500 : Record 11012503;
                               BEGIN
                                 OptionBudgetRec.RESET;
                                 OptionBudgetRec.SETRANGE("Project No.", "Project No.");
                                 OptionBudgetRec.SETRANGE("Plot No.", "Plot No.");
                                 OptionBudgetRec.SETRANGE("House Model", "House Model");
                                 OptionBudgetRec.SETRANGE("Main Group", "Main Group");
                                 OptionBudgetRec.SETRANGE(Group, Group);
                                 OptionBudgetRec.SETRANGE("Sub Group", "Sub Group");
                                 OptionBudgetRec.SETRANGE(Option, Option);

                                 CopyOptionBudgetPage.SETTABLEVIEW(OptionBudgetRec);
                                 CopyOptionBudgetPage.SetToSelection("Project No.", "Plot No.", "House Model",
                                   "Main Group",Group, "Sub Group", Option);

                                 CopyOptionBudgetPage.StdDialogRunModal;
                               END;
                                }
      { 1210190033;2 ;Action    ;
                      CaptionML=ENU=Copy Option &Budget;
                      Image=CopyToTask;
                      OnAction=BEGIN
                                 CopyBudget("Project No.", "Plot No.", "House Model", "Main Group", Group, "Sub Group", Option);
                               END;
                                }
      { 1210190017;2 ;Action    ;
                      CaptionML=ENU=Copy Option Budget to Budget;
                      Image=CopyLedgerToBudget;
                      OnAction=VAR
                                 lvProjRec@1210190002 : Record 11072003;
                                 lvOptionRec@1210190001 : Record 11012502;
                                 lvCopyOptBudgToBudgetRpt@1210190003 : Report 11012500;
                               BEGIN
                                 IF "Plot No." = '' THEN
                                   ERROR(Text000);

                                 lvProjRec.SETRANGE("No.", "Project No.");
                                 lvCopyOptBudgToBudgetRpt.SETTABLEVIEW(lvProjRec);

                                 lvOptionRec.SETRANGE("Plot No.", "Plot No.");
                                 lvOptionRec.SETRANGE("House Model", "House Model");
                                 lvOptionRec.SETRANGE("Main Group", "Main Group");
                                 lvOptionRec.SETRANGE(Group, Group);
                                 lvOptionRec.SETRANGE("Sub Group", "Sub Group");
                                 lvOptionRec.SETRANGE(Option, Option);
                                 lvCopyOptBudgToBudgetRpt.SETTABLEVIEW(lvOptionRec);

                                 lvCopyOptBudgToBudgetRpt.RUNMODAL;
                               END;
                                }
      { 1100525023;2 ;Action    ;
                      CaptionML=ENU=Copy Budget Lines;
                      Image=CopyBudget;
                      OnAction=VAR
                                 BudgetLine@1100528600 : Record 11012001;
                                 BudgetList@1100528601 : Page 11012005;
                               BEGIN
                                 BudgetLine.SETRANGE("Project No.", "Project No.");
                                 BudgetList.InitSelectionCopyToBudgetOpt(Rec);
                                 BudgetList.SETTABLEVIEW(BudgetLine);
                                 BudgetList.RUNMODAL;
                               END;
                                }
      { 1210190002;2 ;Action    ;
                      CaptionML=ENU=Replace Recipes;
                      Image=Reuse;
                      OnAction=BEGIN
                                 ReplaceRecipe();
                               END;
                                }
      { 1210190015;2 ;Action    ;
                      CaptionML=ENU=Actualize Budget Rates;
                      Image=UpdateUnitCost;
                      OnAction=VAR
                                 OptionBudgetRec@1100485001 : Record 11012503;
                                 ActualizeOptBudgetRpt@1100485003 : Report 11012532;
                               BEGIN
                                 OptionBudgetRec.RESET;
                                 OptionBudgetRec.SETRANGE("Project No.", "Project No.");
                                 OptionBudgetRec.SETRANGE("Plot No.", "Plot No.");
                                 OptionBudgetRec.SETRANGE("House Model", "House Model");
                                 OptionBudgetRec.SETRANGE("Main Group", "Main Group");
                                 OptionBudgetRec.SETRANGE(Group, Group);
                                 OptionBudgetRec.SETRANGE("Sub Group", "Sub Group");
                                 OptionBudgetRec.SETRANGE(Option, Option);

                                 ActualizeOptBudgetRpt.SETTABLEVIEW(OptionBudgetRec);
                                 ActualizeOptBudgetRpt.RUN;
                               END;
                                }
      { 1100409000;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Actualise Item Prices;
                      Image=RefreshText;
                      OnAction=VAR
                                 lvOption@1100409000 : Record 11012502;
                               BEGIN
                                 FILTERGROUP(9);
                                 IF (GETFILTER("Project No.") <> '''''') THEN BEGIN
                                   FILTERGROUP(0);
                                   ERROR(Text012);
                                 END;
                                 FILTERGROUP(0);
                                 lvOption."Project No." := '';
                                 lvOption."Plot No." := '';
                                 lvOption."House Model" := GETFILTER("House Model");
                                 lvOption."Main Group" := GETFILTER("Main Group");
                                 lvOption.Group := GETFILTER(Group);
                                 lvOption."Sub Group" := GETFILTER("Sub Group");
                                 lvOption.Option := GETFILTER(Option);

                                 ActualiseItemPrices(lvOption);
                               END;
                                }
      { 1210190004;2 ;Action    ;
                      CaptionML=ENU=Assign Summary to Option;
                      Image=Attach;
                      OnAction=VAR
                                 OptionRec@1210190001 : Record 11012502;
                                 CopyRpt@1210190000 : Report 11012538;
                               BEGIN
                                 OptionRec.SETRANGE("Project No.", "Project No.");
                                 OptionRec.SETRANGE("House Model", "House Model");
                                 OptionRec.SETRANGE("Main Group", "Main Group");
                                 OptionRec.SETRANGE(Group, Group);
                                 OptionRec.SETRANGE("Sub Group", "Sub Group");
                                 OptionRec.SETRANGE(Option, Option);

                                 CopyRpt.SETTABLEVIEW(OptionRec);
                                 CopyRpt.RUN;
                               END;
                                }
      { 1210190025;1 ;ActionGroup;
                      Name=ImportButton;
                      CaptionML=ENU=&Import }
      { 1210190024;2 ;Action    ;
                      CaptionML=ENU=Import IBIS-&Trad CSV Estimate;
                      Image=Import;
                      OnAction=BEGIN
                                 ActivateImport(1);
                               END;
                                }
      { 1210190023;2 ;Action    ;
                      CaptionML=ENU=Import IBIS-&Trad TXT Estimate;
                      Image=Import;
                      OnAction=BEGIN
                                 ActivateImport(2);
                               END;
                                }
      { 1210190000;2 ;Action    ;
                      CaptionML=ENU=Import IBIS-Trad X&ML Estimate;
                      Image=Import;
                      OnAction=BEGIN
                                 ActivateImport(7);
                               END;
                                }
      { 1210190022;2 ;Action    ;
                      CaptionML=ENU=Import &CUF Estimate;
                      Image=Import;
                      OnAction=BEGIN
                                 ActivateImport(3);
                               END;
                                }
      { 1210190021;2 ;Action    ;
                      CaptionML=ENU=Import CUF-&XML Estimate;
                      Image=Import;
                      OnAction=BEGIN
                                 ActivateImport(4);
                               END;
                                }
      { 1210190020;2 ;Action    ;
                      CaptionML=ENU=Import &KPD Estimate (Construction);
                      Image=Import;
                      OnAction=BEGIN
                                 ActivateImport(5);
                               END;
                                }
      { 1210190019;2 ;Action    ;
                      CaptionML=ENU=Import &Duncan Budget;
                      Image=Import;
                      OnAction=BEGIN
                                 ActivateImport(6);
                               END;
                                }
      { 1210190026;  ;ActionContainer;
                      ActionContainerType=Reports }
      { 1210190011;1 ;Action    ;
                      CaptionML=ENU=Options Budget;
                      Image=Print;
                      OnAction=BEGIN
                                 BudgetRec."Project No." := "Project No.";
                                 BudgetRec.SETRANGE("Project No.","Project No.");
                                 REPORT.RUN(REPORT::"Options Budget",TRUE,FALSE,BudgetRec);
                               END;
                                }
      { 1210190007;1 ;Action    ;
                      CaptionML=ENU=Option Reports;
                      Image=PrintAcknowledgement;
                      OnAction=BEGIN
                                 OptionRec.RESET;
                                 OptionRec.SETRANGE("Project No.", "Project No.");
                                 OptionRec.SETRANGE("Plot No.", "Plot No.");
                                 OptionRec.SETRANGE("House Model", "House Model");
                                 OptionRec.SETRANGE("Main Group", "Main Group");
                                 OptionRec.SETRANGE(Group, Group);
                                 OptionRec.SETRANGE("Sub Group", "Sub Group");
                                 OptionRec.SETRANGE(Option, Option);
                                 IF OptionRec.FINDFIRST THEN
                                   PrintDoc.PrintOption(OptionRec);
                               END;
                                }
      { 1210190109;1 ;Action    ;
                      CaptionML=ENU=Budget Reports;
                      Image=PrintReport;
                      OnAction=VAR
                                 BudgetRec@11012001 : Record 11012001;
                               BEGIN
                                 BudgetRec."Project No." := "Project No.";
                                 BudgetRec.Option := Option;
                                 PrintDoc.PrintBudget(BudgetRec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Cost Type";
                Editable=CostTypeEditable;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;
                            }

    { 4   ;2   ;Field     ;
                SourceExpr=Element }

    { 1210190102;2;Field  ;
                SourceExpr="Recipe Group";
                Editable=RecipeGroupEditable }

    { 1210190104;2;Field  ;
                SourceExpr=Recipe;
                Editable=RecipeEditable;
                OnLookup=BEGIN
                           IF NOT RecipeEditable THEN
                             EXIT;

                           LookupRecipe;  //DP00381
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 1210190012;2;Field  ;
                SourceExpr="Source Type";
                Visible=FALSE;
                Editable=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr="Item No.";
                Editable=ItemNoEditable;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;

                OnLookup=BEGIN
                           IF NOT ItemNoEditable THEN
                             EXIT;

                           CLEAR(ItemFrm);
                           ItemFrm.LOOKUPMODE(TRUE);
                           ItemFrm.DetermineInterface(DATABASE::"Option Budget",
                             "Project No.",Option,Element,"Plot No.",0,"House Model","Main Group","Line No.",Group,"Sub Group");
                           IF ItemRec.GET("Item No.") THEN
                             ItemFrm.SETRECORD(ItemRec);
                           IF ItemFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             VALIDATE("Cost Type", "Cost Type"::Material);
                             IF "Cost Type" = "Cost Type"::Material THEN BEGIN
                               ItemFrm.GETRECORD(ItemRec);
                               VALIDATE("Item No.", ItemRec."No.");
                             END;
                           END ELSE BEGIN
                             IF ItemFrm.CheckMultiCopy THEN  //db, 09-03-07 (melding 8283)
                               CurrPage.UPDATE(TRUE);
                           END;
                           SetFieldsEditable;
                         END;
                          }

    { 8   ;2   ;Field     ;
                SourceExpr=Manufacturer;
                Enabled=TradeItemEnabled;
                Editable=ManufacturerEditable;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;
                            }

    { 10  ;2   ;Field     ;
                SourceExpr="Basic Item";
                Enabled=TradeItemEnabled;
                Editable=BasicItemEditable;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;

                OnLookup=BEGIN
                           IF NOT BasicItemEditable THEN
                             EXIT;

                           CLEAR(BasicItemFrm);
                           BasicItemFrm.LOOKUPMODE(TRUE);
                           BasicItemFrm.SetSelection(DATABASE::"Option Budget",
                             "Project No.",Option,Element,"Plot No.",0,"House Model","Main Group","Line No.",Group,"Sub Group");

                           BasicItemRec.InitLookup(BasicItemRec, "Basic Item", Manufacturer);
                           BasicItemFrm.SETRECORD(BasicItemRec);

                           IF BasicItemFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             VALIDATE("Cost Type", "Cost Type"::Material);
                             IF "Cost Type" = "Cost Type"::Material THEN BEGIN
                               BasicItemFrm.GETRECORD(BasicItemRec);
                               Manufacturer := BasicItemRec.Manufacturer;
                               VALIDATE("Basic Item", BasicItemRec."Product Code");
                             END;
                           END ELSE BEGIN
                             IF BasicItemFrm.CheckMultiCopy THEN  //db, 09-03-07 (melding 8283)
                               CurrPage.UPDATE(TRUE);
                           END;
                           SetFieldsEditable;
                         END;
                          }

    { 12  ;2   ;Field     ;
                SourceExpr="Vendor (Trade Item)";
                Enabled=TradeItemEnabled;
                Editable=VendorTradeItemEditable;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;
                            }

    { 14  ;2   ;Field     ;
                SourceExpr="Trade Item";
                Enabled=TradeItemEnabled;
                Editable=TradeItemEditable;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;

                OnLookup=VAR
                           lvTempOptionBudget@1100525002 : TEMPORARY Record 11012503;
                         BEGIN
                           IF NOT TradeItemEditable THEN
                             EXIT;

                           IF "Item No." <> '' THEN BEGIN
                             lvTempOptionBudget.INIT;
                             lvTempOptionBudget."Recipe Group" := "Recipe Group";
                             lvTempOptionBudget.VALIDATE("Item No.","Item No.");
                             g_ItemCode := lvTempOptionBudget."Trade Item";
                             g_Vendor := lvTempOptionBudget."Vendor (Trade Item)";
                           END ELSE BEGIN
                             g_ItemCode := '';
                             g_Vendor := '';
                           END;

                           CLEAR(TradeItemFrm);
                           TradeItemFrm.LOOKUPMODE(TRUE);
                           TradeItemFrm.SetSelection(DATABASE::"Option Budget",
                             "Project No.", Option, Element, "Plot No.", 0,
                             "House Model", "Main Group", "Line No.", Group, "Sub Group",
                             "Vendor (Trade Item)", "Trade Item", Manufacturer, "Basic Item", g_ItemCode, g_Vendor);

                           TradeItemRec.InitLookup(TradeItemRec, "Basic Item", Manufacturer, "Trade Item", "Vendor (Trade Item)");
                           TradeItemFrm.SETRECORD(TradeItemRec);

                           IF TradeItemFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             VALIDATE("Cost Type", "Cost Type"::Material);
                             IF "Cost Type" = "Cost Type"::Material THEN BEGIN
                               TradeItemFrm.GETRECORD(TradeItemRec);
                               Manufacturer := TradeItemRec.Manufacturer;
                               "Basic Item" := TradeItemRec."Product Code";
                               "Vendor (Trade Item)" := TradeItemRec.Vendor;
                               VALIDATE("Trade Item", TradeItemRec."Item Code");
                             END;
                           END ELSE BEGIN
                             IF TradeItemFrm.CheckMultiCopy THEN  //db, 09-03-07 (melding 8283)
                               CurrPage.UPDATE(TRUE);
                           END;
                           SetFieldsEditable;
                         END;
                          }

    { 18  ;2   ;Field     ;
                SourceExpr="Cost Object";
                LookupPageID=Cost Object List;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;
                            }

    { 1100485000;2;Field  ;
                SourceExpr="Cost Component";
                Editable=CostComponentEditable }

    { 20  ;2   ;Field     ;
                SourceExpr=Description }

    { 1210190006;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 1210190100;2;Field  ;
                SourceExpr="Text Block" }

    { 22  ;2   ;Field     ;
                SourceExpr="Time Quantity";
                OnValidate=BEGIN
                             UpdateSummary;
                           END;
                            }

    { 24  ;2   ;Field     ;
                SourceExpr="Unit of Time" }

    { 26  ;2   ;Field     ;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             UpdateSummary;
                             SetFieldsEditable;
                           END;
                            }

    { 28  ;2   ;Field     ;
                SourceExpr="Unit of Measure" }

    { 30  ;2   ;Field     ;
                SourceExpr=Norm;
                Editable=NormEditable;
                OnValidate=BEGIN
                             UpdateSummary;
                             SetFieldsEditable;
                           END;
                            }

    { 32  ;2   ;Field     ;
                SourceExpr="Rate Code";
                Editable=RateCodeEditable;
                OnValidate=BEGIN
                             UpdateSummary;
                             SetFieldsEditable;
                           END;
                            }

    { 34  ;2   ;Field     ;
                SourceExpr=Rate;
                Enabled=RateEditable;
                OnValidate=BEGIN
                             UpdateSummary;
                             SetFieldsEditable;
                           END;
                            }

    { 1210190108;2;Field  ;
                SourceExpr="Gross Price";
                Visible=FALSE;
                Editable=GrossPriceEditable }

    { 1210190010;2;Field  ;
                SourceExpr="Discount %";
                Visible=FALSE;
                Editable=DiscountPercEditable }

    { 36  ;2   ;Field     ;
                SourceExpr=Price;
                Editable=PriceEditable;
                OnValidate=BEGIN
                             UpdateSummary;
                           END;
                            }

    { 38  ;2   ;Field     ;
                SourceExpr=Hours }

    { 40  ;2   ;Field     ;
                SourceExpr=Amount;
                Editable=AmountEditable;
                OnValidate=BEGIN
                             UpdateSummary;
                           END;
                            }

    { 1210190103;0;Container;
                ContainerType=FactBoxArea }

    { 1210190001;1;Part   ;
                SubPageLink=Project No.=FIELD(Project No.),
                            Plot No.=FIELD(Plot No.),
                            House Model=FIELD(House Model),
                            Main Group=FIELD(Main Group),
                            Group=FIELD(Group),
                            Sub Group=FIELD(Sub Group),
                            Option=FIELD(Option);
                PagePartID=Page11130293;
                PartType=Page }

    { 1100525500;1;Part   ;
                SubPageLink=Project No.=FIELD(Project No.),
                            Plot No.=FIELD(Plot No.),
                            House Model=FIELD(House Model),
                            Main Group=FIELD(Main Group),
                            Group=FIELD(Group),
                            Sub Group=FIELD(Sub Group),
                            Option=FIELD(Option),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11130292;
                PartType=Page }

  }
  CODE
  {
    VAR
      ItemSetup@1100525002 : Record 11012300;
      ItemRec@1210190004 : Record 27;
      BasicItemRec@1210190005 : Record 11012316;
      TradeItemRec@1210190006 : Record 11012317;
      TmpProjOptionSummaryRec@1100485002 : TEMPORARY Record 11012064;
      BudgetRec@1210190000 : Record 11012001;
      OptionRec@1210190007 : Record 11012502;
      ItemFrm@11012001 : Page 31;
      BasicItemFrm@11012003 : Page 11012333;
      TradeItemFrm@11012005 : Page 11012334;
      Text000@1210190003 : TextConst 'ENU=Copy Standard Option Budget?';
      Text001@1210190001 : TextConst 'ENU=Copy Project Option Budget?';
      Text002@1210190002 : TextConst 'ENU=%1 of the %2 Option Budget Lines have been copied.';
      CopyRecipeMgt@1100485000 : Codeunit 11012068;
      PrintDoc@1210190008 : Codeunit 229;
      CalcSummaryWindow@1100485006 : Dialog;
      Text011@1100485007 : TextConst 'ENU=Update Summary #1###############';
      g_ItemCode@1100525001 : Code[20];
      g_Vendor@1100525000 : Code[20];
      RecipeGroupEditable@19005548 : Boolean INDATASET;
      RecipeEditable@19014030 : Boolean INDATASET;
      CostComponentEditable@19073195 : Boolean INDATASET;
      TradeItemEnabled@1210190009 : Boolean INDATASET;
      ItemNoEditable@1210190026 : Boolean INDATASET;
      NormEditable@1210190021 : Boolean INDATASET;
      RateCodeEditable@1210190019 : Boolean INDATASET;
      RateEditable@1210190018 : Boolean INDATASET;
      GrossPriceEditable@1210190017 : Boolean INDATASET;
      DiscountPercEditable@1210190016 : Boolean INDATASET;
      PriceEditable@1210190015 : Boolean INDATASET;
      AmountEditable@1210190012 : Boolean INDATASET;
      CostTypeEditable@1210190011 : Boolean INDATASET;
      ManufacturerEditable@1210190020 : Boolean INDATASET;
      BasicItemEditable@1210190014 : Boolean INDATASET;
      VendorTradeItemEditable@1210190013 : Boolean INDATASET;
      TradeItemEditable@1210190010 : Boolean INDATASET;
      Text003@1100525003 : TextConst 'ENU=Before editing text enter the line first.';
      Text012@1100409000 : TextConst 'ENU=Actualize Item Prices only Available for Standard Option Budget';

    PROCEDURE ReplaceRecipe@1210190001();
    BEGIN
      CopyRecipeMgt.SetSelectionRecipe(
        DATABASE::"Option Budget","Project No.","Plot No.",Option,'','',"House Model", "Main Group",Group,"Sub Group","Line No.");  //C027336
      CopyRecipeMgt.ReplaceRecipe(3);
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE CopyBudget@1210190003(IProjNo@1210190000 : Code[20];IPlotNo@1210190001 : Code[10];IHouseModel@1210190009 : Code[20];IMainGroup@1210190010 : Code[20];IGroup@1210190012 : Code[20];ISubGroup@1210190011 : Code[20];IOption@1210190002 : Code[20]);
    VAR
      lvPlotOptionBudgetRec@1210190006 : Record 11012503;
      lvProjOptionBudgetRec@1210190005 : Record 11012503;
      lvProjOptionSummaryRec@1210190008 : Record 11012064;
      lvPlotOptionSummaryRec@1210190007 : Record 11012064;
      lvBuyerMgt@1100525000 : Codeunit 11012500;
      lvCounter@1210190004 : Integer;
      lvCounterOK@1210190003 : Integer;
      lvProjFrom@1210190013 : Code[20];
    BEGIN
      IF IProjNo = '' THEN
        EXIT;

      IF IPlotNo = '' THEN BEGIN
        IF NOT CONFIRM(Text000) THEN
          EXIT;
        lvProjFrom := '';
      END ELSE BEGIN
        IF NOT CONFIRM(Text001) THEN
          EXIT;
        lvProjFrom := IProjNo;
      END;

      lvCounter := 0;
      lvCounterOK := 0;

      lvProjOptionBudgetRec.SETRANGE("Project No.", lvProjFrom);
      lvProjOptionBudgetRec.SETRANGE("Plot No.", '');      //* Copy from standard or project level, so always from plot empty.
      lvProjOptionBudgetRec.SETRANGE("House Model", IHouseModel);
      lvProjOptionBudgetRec.SETRANGE("Main Group", IMainGroup);
      lvProjOptionBudgetRec.SETRANGE(Group, IGroup);
      lvProjOptionBudgetRec.SETRANGE("Sub Group", ISubGroup);
      lvProjOptionBudgetRec.SETRANGE(Option, IOption);
      IF lvProjOptionBudgetRec.FINDSET THEN BEGIN
        REPEAT
          lvCounter := lvCounter + 1;
          IF NOT lvPlotOptionBudgetRec.GET(
            IProjNo, IPlotNo, IHouseModel, IMainGroup, IGroup, ISubGroup, IOption, lvProjOptionBudgetRec."Line No." )
          THEN BEGIN
            lvPlotOptionBudgetRec.TRANSFERFIELDS(lvProjOptionBudgetRec, TRUE);
            lvPlotOptionBudgetRec."Project No." := IProjNo;
            lvPlotOptionBudgetRec."Plot No." := IPlotNo;
            lvBuyerMgt.CheckProjectElement(
              lvPlotOptionBudgetRec."Project No.", lvPlotOptionBudgetRec.Element,
              lvProjOptionBudgetRec.TABLECAPTION, lvProjFrom,'',IHouseModel,IMainGroup,IGroup,ISubGroup,IOption); //*C-019091.n
            lvPlotOptionBudgetRec.INSERT(TRUE);
            lvCounterOK := lvCounterOK + 1;
          END;
        UNTIL lvProjOptionBudgetRec.NEXT = 0;
      END;

      lvProjOptionSummaryRec.SETRANGE("Project No.", lvProjFrom);
      lvProjOptionSummaryRec.SETRANGE("Contract No.", '');
      lvProjOptionSummaryRec.SETRANGE("Plot No.", '');
      lvProjOptionSummaryRec.SETRANGE("House Model", IHouseModel);
      lvProjOptionSummaryRec.SETRANGE("Main Group", IMainGroup);
      lvProjOptionSummaryRec.SETRANGE(Group, IGroup);
      lvProjOptionSummaryRec.SETRANGE("Sub Group", ISubGroup);
      lvProjOptionSummaryRec.SETRANGE(Option, IOption);
      IF lvProjOptionSummaryRec.FIND('-') THEN BEGIN
        REPEAT
          IF NOT lvPlotOptionSummaryRec.GET(
            IProjNo, '', IPlotNo, IHouseModel, IMainGroup, IGroup, ISubGroup, IOption, lvProjOptionSummaryRec."Row No.")
          THEN BEGIN
            lvPlotOptionSummaryRec.TRANSFERFIELDS(lvProjOptionSummaryRec, TRUE);
            lvPlotOptionSummaryRec."Project No." := IProjNo;
            lvPlotOptionSummaryRec."Plot No." := IPlotNo;
            lvBuyerMgt.CheckProjectElement(
              lvPlotOptionSummaryRec."Project No.", lvPlotOptionSummaryRec.Element,
              lvProjOptionSummaryRec.TABLECAPTION, lvProjFrom,'',IHouseModel,IMainGroup,IGroup,ISubGroup,IOption); //*C-019091.n
            lvPlotOptionSummaryRec.INSERT(TRUE);
          END;
        UNTIL lvProjOptionSummaryRec.NEXT = 0;
      END;

      MESSAGE(Text002, lvCounterOK, lvCounter);
    END;

    PROCEDURE FillChangedSummarySheet@1100485002();
    VAR
      lvProjOptionSummaryRec@1100485001 : Record 11012064;
    BEGIN
      lvProjOptionSummaryRec.SETRANGE("Project No.", "Project No.");
      lvProjOptionSummaryRec.SETRANGE("Contract No.", '');
      lvProjOptionSummaryRec.SETRANGE("Plot No.", "Plot No.");  //* 13303
      lvProjOptionSummaryRec.SETRANGE("House Model", "House Model");
      lvProjOptionSummaryRec.SETRANGE("Main Group", "Main Group");
      lvProjOptionSummaryRec.SETRANGE(Group, Group);
      lvProjOptionSummaryRec.SETRANGE("Sub Group", "Sub Group");
      lvProjOptionSummaryRec.SETRANGE(Option, Option);
      IF NOT lvProjOptionSummaryRec.FIND('-') THEN
        EXIT;

      TmpProjOptionSummaryRec.RESET;
      TmpProjOptionSummaryRec.SETRANGE("Project No.", "Project No.");
      TmpProjOptionSummaryRec.SETRANGE("Contract No.", '');
      TmpProjOptionSummaryRec.SETRANGE("Plot No.", "Plot No.");  //* 13303
      TmpProjOptionSummaryRec.SETRANGE("House Model", "House Model");
      TmpProjOptionSummaryRec.SETRANGE("Main Group", "Main Group");
      TmpProjOptionSummaryRec.SETRANGE(Group, Group);
      TmpProjOptionSummaryRec.SETRANGE("Sub Group", "Sub Group");
      TmpProjOptionSummaryRec.SETRANGE(Option, Option);
      IF NOT TmpProjOptionSummaryRec.FIND('-') THEN BEGIN
        TmpProjOptionSummaryRec.INIT;
        TmpProjOptionSummaryRec."Project No." := "Project No.";
        TmpProjOptionSummaryRec."Contract No." := '';
        TmpProjOptionSummaryRec."Plot No." := "Plot No.";  //* 13303
        TmpProjOptionSummaryRec."House Model" := "House Model";
        TmpProjOptionSummaryRec."Main Group" := "Main Group";
        TmpProjOptionSummaryRec.Group := Group;
        TmpProjOptionSummaryRec."Sub Group" := "Sub Group";
        TmpProjOptionSummaryRec.Option := Option;
        TmpProjOptionSummaryRec.INSERT;
      END;
      TmpProjOptionSummaryRec.RESET;
    END;

    PROCEDURE RecalcSummarySheet@1100485006() : Boolean;
    VAR
      lvProjOptionSummaryRec@1100485000 : Record 11012064;
    BEGIN
      IF NOT TmpProjOptionSummaryRec.FIND('-') THEN
        EXIT(FALSE);

      CalcSummaryWindow.OPEN(Text011);

      REPEAT
        CalcSummaryWindow.UPDATE(1, "Project No.");

        lvProjOptionSummaryRec.SETRANGE("Project No.", TmpProjOptionSummaryRec."Project No.");
        lvProjOptionSummaryRec.SETRANGE("Contract No.", '');
        lvProjOptionSummaryRec.SETRANGE("Plot No.", TmpProjOptionSummaryRec."Plot No.");  //* 13303
        lvProjOptionSummaryRec.SETRANGE("House Model", TmpProjOptionSummaryRec."House Model");
        lvProjOptionSummaryRec.SETRANGE("Main Group", TmpProjOptionSummaryRec."Main Group");
        lvProjOptionSummaryRec.SETRANGE(Group, TmpProjOptionSummaryRec.Group);
        lvProjOptionSummaryRec.SETRANGE("Sub Group", TmpProjOptionSummaryRec."Sub Group");
        lvProjOptionSummaryRec.SETRANGE(Option, TmpProjOptionSummaryRec.Option);
        IF lvProjOptionSummaryRec.FIND('-') THEN BEGIN
          lvProjOptionSummaryRec.ReCalcOptionSummaryLines();
          lvProjOptionSummaryRec.UpdateOptBudgetLines();
        END;
        TmpProjOptionSummaryRec.DELETE;
      UNTIL TmpProjOptionSummaryRec.NEXT = 0;

      CalcSummaryWindow.CLOSE;

      EXIT(TRUE);
    END;

    PROCEDURE ActualiseItemPrices@1100525000(Option@1100525000 : Record 11012502);
    VAR
      Option2@1100525001 : Record 11012502;
    BEGIN
      Option2 := Option;
      Option2.SETRECFILTER;
      REPORT.RUNMODAL(REPORT::"Actualise Item Option Prices",TRUE,FALSE,Option2);
    END;

    PROCEDURE EditText@1100525002();
    VAR
      ItemText@11012001 : Page 11012120;
    BEGIN
      IF "Line No." = 0 THEN
        ERROR(Text003);

      ItemText.SetSelection3(DATABASE::"Option Budget", "Project No.", "Plot No.", "House Model",
        "Main Group", Group, "Sub Group", Option, "Line No.");

      ItemText.RUNMODAL;
      CLEAR(ItemText);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      SetFieldsEditable;
    END;

    PROCEDURE ActivateImport@1210190000(lvAction@1210190000 : Integer);
    VAR
      SelectionFrm@1210190001 : Page 11012390;
    BEGIN
      CASE lvAction OF
        1: SelectionFrm.DetermineDefaults("Project No.",'','',Option,'TRAD-CSV');
        2: SelectionFrm.DetermineDefaults("Project No.",'','',Option,'TRAD-TXT');
        3: SelectionFrm.DetermineDefaults("Project No.",'','',Option,'CUF');
        4: SelectionFrm.DetermineDefaults("Project No.",'','',Option,'CUF-XML');
        5: SelectionFrm.DetermineDefaults("Project No.",'','',Option,'KPDCONSTRUCT');
        6: SelectionFrm.DetermineDefaults("Project No.",'','',Option,'DUNCAN');
        7: SelectionFrm.DetermineDefaults("Project No.",'','',Option,'TRAD-XML');
      END;
      SelectionFrm.SetExtraDefaultsOptionBudget("House Model", "Main Group", Group, "Sub Group","Plot No.");

      SelectionFrm.RUN;
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE SetFieldsEditable@1210190002();
    BEGIN
      PriceEditable := NOT ("Cost Type" = "Cost Type"::Labor);
      DiscountPercEditable := NOT ("Cost Type" = "Cost Type"::Labor);
      GrossPriceEditable := NOT ("Cost Type" = "Cost Type"::Labor);

      RateCodeEditable := "Cost Type" = "Cost Type"::Labor;
      NormEditable := "Cost Type" = "Cost Type"::Labor;

      RateEditable := ("Cost Type" = "Cost Type"::Labor) AND ("Rate Code" = '');
      AmountEditable := ("Cost Type" = "Cost Type"::Labor) AND (Norm = 0) AND (Quantity = 0);

      TradeItemEditable := ("Cost Type" = "Cost Type"::Material) AND TradeItemEnabled;
      VendorTradeItemEditable := ("Cost Type" = "Cost Type"::Material) AND TradeItemEnabled;
      BasicItemEditable := ("Cost Type" = "Cost Type"::Material) AND TradeItemEnabled;
      ManufacturerEditable := ("Cost Type" = "Cost Type"::Material) AND TradeItemEnabled;
      ItemNoEditable := ("Cost Type" = "Cost Type"::Material);

      CostTypeEditable := ("Item No." + "Basic Item" + "Trade Item" = '');
    END;

    PROCEDURE SetDataCaptionExpr@1100525001() : Text[50];
    BEGIN
      CALCFIELDS("Option Description");
      EXIT(COPYSTR(FORMAT("Project No." + ' ' + "Plot No." + ' ' + Option  + ' ' + "Option Description"), 1,50));
    END;

    LOCAL PROCEDURE UpdateSummary@1100528401();
    BEGIN
      CurrPage.UPDATE(TRUE);
      CalcTotals;
      CurrPage.UPDATE;
    END;

    BEGIN
    {
      4PS, 11-11-13, Report "Option list" no longer supported in NAV2013
    }
    END.
  }
}

