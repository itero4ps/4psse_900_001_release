OBJECT Page 11012554 Plant Number
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Plant Number;
    SourceTable=Table11012552;
    DataCaptionFields=Plant Type,No.;
    PageType=Card;
    PromotedActionCategoriesML=ENU=New,Process,Report,Plant Number,Maintenance;
    OnInit=VAR
             ServiceSetup@1100528800 : Record 11012800;
           BEGIN
             FixedAssetInactivateEditable := TRUE;
             ExternalEditable := TRUE;
             VendorEditable := TRUE;
             ReceiptDateEditable := TRUE;
             ShipToLocationEditable := TRUE;
             QuantityEditable := TRUE;
             UnlinkFAbtnEnabled := FALSE;
             NoEditable := TRUE;
             ExtRentedInvoicedToEnabled := TRUE;
             IF ServiceSetup.READPERMISSION THEN BEGIN
               MaintenanceSchemeVisible := TRUE;
               MaintenanceFactBoxVisible := TRUE;
             END;
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 PlantSetupRec.GET;
                 FillNumberTxt;
                 NoEditable := (PlantSetupRec."Start Numbering per Plant Type" = PlantSetupRec."Start Numbering per Plant Type"::No);
               END;

    OnAfterGetRecord=VAR
                       RecRef@1100529900 : RecordRef;
                     BEGIN
                       QuantityInStockHideValue := FALSE;
                       OnAfterGetCurrRecord;
                       QuantityInStockHideValue := ("Stock No." = '0');
                     END;

    OnNewRecord=BEGIN
                  IF PlantRec.GET("Plant Type") THEN BEGIN
                    External := PlantRec.External;
                    "Department Code" := PlantRec."Department Code";  //* Can be overuled by DepAuth, so this must be done first.
                  END;

                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02

                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 28      ;1   ;ActionGroup;
                      CaptionML=ENU=Plant Number;
                      Image=MaintenanceRegistrations }
      { 1210190000;2 ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Ledger Entries;
                      RunObject=Page 11012585;
                      RunPageView=SORTING(Plant Type,Plant No.,Posting Date);
                      RunPageLink=Plant Type=FIELD(Plant Type),
                                  Plant No.=FIELD(No.);
                      Image=GLRegisters }
      { 1100485092;2 ;Action    ;
                      CaptionML=ENU=Rent Entries;
                      RunObject=Page 11020584;
                      RunPageView=SORTING(Plant Type,Plant No.,Vendor No.);
                      RunPageLink=Plant Type=FIELD(Plant Type),
                                  Plant No.=FIELD(No.);
                      Image=GLRegisters }
      { 1100529002;2 ;Action    ;
                      CaptionML=ENU=Meter Reading;
                      Image=MachineCenterLoad;
                      OnAction=BEGIN
                                 MeterReadings();
                               END;
                                }
      { 30      ;2   ;Action    ;
                      CaptionML=ENU=Inspections;
                      RunObject=Page 11012573;
                      RunPageLink=Plant Type=FIELD(Plant Type),
                                  Plant No.=FIELD(No.);
                      Promoted=Yes;
                      Image=MaintenanceRegistrations;
                      PromotedCategory=Category4 }
      { 1100485007;2 ;Action    ;
                      CaptionML=ENU=Vehicle;
                      Image=NewResource;
                      OnAction=BEGIN
                                 //DP00331
                                 VehicleCard();
                               END;
                                }
      { 1100485018;2 ;Action    ;
                      CaptionML=ENU=Translations;
                      Image=Translation;
                      OnAction=VAR
                                 PlantTranslation@1100529000 : Record 11012542;
                               BEGIN
                                 //DP00241.sn (27089)
                                 PlantTranslation.FILTERGROUP(9);
                                 PlantTranslation.SETRANGE(Type,PlantTranslation.Type::PlantNo);
                                 PlantTranslation.FILTERGROUP(0);
                                 //DP00241.en
                                 PlantTranslation.SETRANGE(Code,"Plant Type");
                                 PlantTranslation.SETRANGE("No.","No.");
                                 PAGE.RUNMODAL(PAGE::"Plant Translations",PlantTranslation);
                               END;
                                }
      { 1210190002;2 ;Action    ;
                      CaptionML=ENU=Rental Rates;
                      RunObject=Page 11012597;
                      RunPageView=WHERE(Rental Type=CONST(Rental));
                      RunPageLink=Plant Type=FIELD(Plant Type),
                                  Plant No.=FIELD(No.);
                      Image=Payment }
      { 1100485019;2 ;Action    ;
                      CaptionML=ENU=Rental Discount;
                      Image=Discount;
                      OnAction=VAR
                                 lvRentDistRec@1100485001 : Record 11012544;
                                 lvRentDiscFrm@1100485000 : Page 11020599;
                               BEGIN
                                 TESTFIELD("No.");
                                 lvRentDistRec.FILTERGROUP(9);
                                 lvRentDistRec.SETRANGE("Customer Discount Group", '');
                                 lvRentDistRec.SETRANGE(Location, '');
                                 lvRentDistRec.SETRANGE("Group Level", '');
                                 lvRentDistRec.SETRANGE("Plant Type", "Plant Type");
                                 lvRentDistRec.SETRANGE(Level, lvRentDistRec.Level::PlantNo);
                                 lvRentDistRec.FILTERGROUP(0);
                                 lvRentDistRec.SETRANGE("Plant No.", "No.");
                                 lvRentDiscFrm.SETTABLEVIEW(lvRentDistRec);
                                 lvRentDistRec."Plant Type" := "Plant Type";
                                 lvRentDistRec."Plant No." := "No.";
                                 lvRentDiscFrm.SETRECORD(lvRentDistRec);
                                 lvRentDiscFrm.SetCalledFrom(2);
                                 lvRentDiscFrm.RUNMODAL;
                               END;
                                }
      { 1100528800;2 ;Action    ;
                      CaptionML=ENU=Rental Quantity Discount;
                      Image=Discount;
                      OnAction=VAR
                                 RentalQuantityDiscount@1100528800 : Record 11072669;
                                 RentalQuantityDiscounts@1100528801 : Page 11125935;
                               BEGIN
                                 TESTFIELD("No.");
                                 RentalQuantityDiscount.FILTERGROUP(9);
                                 RentalQuantityDiscount.SETRANGE("Customer Discount Group", '');
                                 RentalQuantityDiscount.SETRANGE(Location, '');
                                 RentalQuantityDiscount.SETRANGE("Group Level", '');
                                 RentalQuantityDiscount.SETRANGE("Plant Type", "Plant Type");
                                 RentalQuantityDiscount.SETRANGE(Level, RentalQuantityDiscount.Level::PlantNo);
                                 RentalQuantityDiscount.FILTERGROUP(0);
                                 RentalQuantityDiscount.SETRANGE("Plant No.", "No.");
                                 RentalQuantityDiscounts.SETTABLEVIEW(RentalQuantityDiscount);
                                 RentalQuantityDiscount."Plant Type" := "Plant Type";
                                 RentalQuantityDiscount."Plant No." := "No.";
                                 RentalQuantityDiscounts.SETRECORD(RentalQuantityDiscount);
                                 RentalQuantityDiscounts.SetCalledFrom(2);
                                 RentalQuantityDiscounts.RUNMODAL;
                               END;
                                }
      { 1100485093;2 ;Action    ;
                      CaptionML=ENU=Hour Rates;
                      RunObject=Page 11020586;
                      RunPageLink=Rental Type=CONST(Plant Hours),
                                  Plant Type=FIELD(Plant Type),
                                  Plant No.=FIELD(No.);
                      Image=Payment }
      { 1100485006;1 ;ActionGroup;
                      CaptionML=ENU=Complaint Managemant;
                      Image=EditReminder }
      { 1100485008;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create New Complaint;
                      Image=EditReminder;
                      OnAction=VAR
                                 lvComplRec@1100485001 : Record 11012450;
                                 lvComplMgtCU@1100485000 : Codeunit 11012418;
                               BEGIN
                                 TESTFIELD("Plant Type");
                                 TESTFIELD("No.");
                                 lvComplMgtCU.CreateNewComplaintOnSource(lvComplRec."Source Type"::Plant, "Plant Type", "No.");
                               END;
                                }
      { 1100485009;2 ;Action    ;
                      CaptionML=ENU=Open Complaints;
                      RunObject=Page 11012468;
                      RunPageView=SORTING(Source Type,Source No.,Source No. 2)
                                  WHERE(Source Type=CONST(Plant),
                                        Status=FILTER(<>Finished));
                      RunPageLink=Source No.=FIELD(Plant Type),
                                  Source No. 2=FIELD(No.);
                      Image=ReminderTerms }
      { 1100485010;2 ;Action    ;
                      CaptionML=ENU=Complaints;
                      RunObject=Page 11012468;
                      RunPageView=SORTING(Source Type,Source No.,Source No. 2)
                                  WHERE(Source Type=CONST(Plant));
                      RunPageLink=Source No.=FIELD(Plant Type),
                                  Source No. 2=FIELD(No.);
                      Image=Reminder }
      { 32      ;1   ;Action    ;
                      CaptionML=ENU=Inventory;
                      RunObject=Page 11012559;
                      RunPageView=SORTING(Removed,Plant Type,Plant No.,Rate Code,Location);
                      RunPageLink=Removed=CONST(No),
                                  Plant Type=FIELD(Plant Type),
                                  Plant No.=FIELD(Stock No.);
                      Promoted=Yes;
                      Image=InventoryJournal;
                      PromotedCategory=Category4 }
      { 33      ;1   ;Action    ;
                      CaptionML=ENU=Inventory Course;
                      RunObject=Page 11012560;
                      RunPageView=SORTING(Plant Type,Plant No.,Present from);
                      RunPageLink=Plant Type=FIELD(Plant Type),
                                  Plant No.=FIELD(Stock No.);
                      Promoted=Yes;
                      Image=ItemTrackingLines;
                      PromotedCategory=Category4 }
      { 1210190006;1 ;Action    ;
                      CaptionML=ENU=Costs;
                      RunObject=Page 11012610;
                      RunPageOnRec=Yes;
                      RunPageLink=Plant Type=FIELD(Plant Type),
                                  No.=FIELD(No.);
                      Image=ResourceCosts }
      { 1210190008;1 ;Action    ;
                      CaptionML=ENU=Costs per component;
                      RunObject=Page 11012611;
                      RunPageOnRec=Yes;
                      RunPageLink=Plant Type=FIELD(Plant Type),
                                  No.=FIELD(No.);
                      Image=LedgerBudget }
      { 1100485015;1 ;Action    ;
                      CaptionML=ENU=Documents;
                      Visible=FALSE;
                      Image=Documents;
                      OnAction=BEGIN
                                 ShowDocuments();  //DP00183.c
                               END;
                                }
      { 1100529000;1 ;Action    ;
                      CaptionML=ENU=Comments;
                      Image=ViewComments;
                      OnAction=BEGIN
                                 CommentSheet(TRUE);  //DP00183
                               END;
                                }
      { 1100528801;1 ;ActionGroup;
                      Name=Maintenance;
                      CaptionML=ENU=Maintenance;
                      Visible=MaintenanceSchemeVisible }
      { 1100528804;2 ;Action    ;
                      Name=Plant Maintenance Schemes;
                      CaptionML=ENU=Maintenance Schemes;
                      RunObject=Page 11125954;
                      RunPageLink=Plant Type=FIELD(Plant Type),
                                  Plant Number=FIELD(No.);
                      Promoted=Yes;
                      Visible=MaintenanceSchemeVisible;
                      PromotedIsBig=Yes;
                      Image=ProjectToolsProjectMaintenance;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 PlantTypeMaintenanceScheme@1100528800 : Record 11072677;
                                 PlantTypeMaintenanceSchemePage@1100528801 : Page 11125954;
                               BEGIN
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 36      ;1   ;ActionGroup;
                      CaptionML=ENU=Functions;
                      Image=NewDocument }
      { 37      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Explode;
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 Explode;
                               END;
                                }
      { 1210190007;2 ;Action    ;
                      CaptionML=ENU=Create Fixed Asset;
                      Image=CopyFixedAssets;
                      OnAction=BEGIN
                                 CreateFA(FALSE, "Department Code");
                               END;
                                }
      { 1100525005;2 ;Action    ;
                      CaptionML=ENU=Unlink Fixed Asset;
                      Image=DeleteExpiredComponents;
                      OnAction=BEGIN
                                 UnlinkFA();  //*31411
                               END;
                                }
      { 1210190010;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Select Technical Specifications;
                      Image=Skills;
                      OnAction=BEGIN
                                 IF ("Plant Type" = '') OR ("No." = '') THEN
                                   EXIT;

                                 CurrPage."Plant Profile Answer".PAGE.SelectAnswersPlantProfile("Plant Type", "No.");
                               END;
                                }
      { 1100485012;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy Technical Specifications Plant Type;
                      Image=Copy;
                      OnAction=BEGIN
                                 CopyTechSpecsFromPlantType(FALSE);
                               END;
                                }
      { 1100525011;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy Technical Specifications Plant Number;
                      Image=Copy;
                      OnAction=BEGIN
                                 CopyTechSpecsFromPlantType(TRUE);
                               END;
                                }
      { 34      ;1   ;ActionGroup;
                      CaptionML=ENU=P&osting;
                      Image=PostDocument }
      { 35      ;2   ;Action    ;
                      ShortCutKey=F9;
                      Ellipsis=Yes;
                      CaptionML=ENU=Post;
                      RunObject=Codeunit 11012551;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Process }
      { 1100409001;1 ;ActionGroup;
                      CaptionML=ENU=&Maintenance;
                      Visible=MaintenanceSchemeVisible }
      { 1100409000;2 ;Action    ;
                      CaptionML=ENU=Create Service Order;
                      Promoted=Yes;
                      Visible=MaintenanceSchemeVisible;
                      PromotedIsBig=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 ServiceOrder@1100409002 : Record 11012823;
                                 ServiceOrderNo@1100409000 : Code[20];
                                 ServiceOrderPage@1100409001 : Page 11125209;
                               BEGIN
                                 TESTFIELD("Plant Type");
                                 TESTFIELD("No.");
                                 CreateServiceOrder(ServiceOrderNo);

                                 IF ServiceOrder.GET(ServiceOrderNo) THEN BEGIN
                                   ServiceOrderPage.SETRECORD(ServiceOrder);
                                   ServiceOrderPage.RUN;
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=ENU=General }

    { 2   ;2   ;Field     ;
                SourceExpr="No.";
                CaptionClass=FORMAT (NumberTxt);
                Importance=Promoted;
                Editable=NoEditable;
                OnValidate=BEGIN
                             IF "No." <> '' THEN BEGIN
                               IF PlantNoAlreadyUsedBefore("Plant Type", "No.") THEN BEGIN
                                 IF NOT CONFIRM(Text001, FALSE, "No.") THEN
                                   ERROR('');
                               END;
                             END;
                           END;
                            }

    { 3   ;2   ;Field     ;
                SourceExpr=Description }

    { 18  ;2   ;Field     ;
                SourceExpr=Bulk }

    { 5   ;2   ;Field     ;
                SourceExpr=Quantity;
                MinValue=0;
                Editable=QuantityEditable }

    { 20  ;2   ;Field     ;
                SourceExpr="Unit of Measure" }

    { 11  ;2   ;Field     ;
                SourceExpr="Ship To Location";
                Editable=ShipToLocationEditable }

    { 13  ;2   ;Field     ;
                SourceExpr="Receipt Date";
                Editable=ReceiptDateEditable }

    { 21  ;2   ;Field     ;
                SourceExpr=Vendor;
                Editable=VendorEditable }

    { 1100525004;2;Field  ;
                SourceExpr="Vendor Name";
                Importance=Additional }

    { 1100485004;2;Field  ;
                SourceExpr="Department Code";
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03

                             //*19584
                             IF "Department Code" <> xRec."Department Code" THEN
                               WarningDepartmentLinkedFA();
                           END;
                            }

    { 1210190011;2;Field  ;
                SourceExpr=External;
                Editable=ExternalEditable }

    { 1100525007;2;Field  ;
                SourceExpr="Inspection No." }

    { 1100525006;2;Field  ;
                SourceExpr="Insurance Policy No." }

    { 7   ;2   ;Field     ;
                SourceExpr=Posted }

    { 9   ;2   ;Field     ;
                SourceExpr="Posting Date";
                Importance=Additional }

    { 1100525010;2;Field  ;
                SourceExpr="Purchase Order No." }

    { 23  ;2   ;Field     ;
                SourceExpr="Purchase Price";
                Editable=PurchasePriceEditable;
                OnAssistEdit=VAR
                               lvText000@1100485001 : TextConst 'ENU="The price will be filled automatically on posting the purchase invoice.\ \Are you sure you want to enter the price manually? "';
                               lvText001@1100485002 : TextConst 'ENU="The plant number is already posted. Are you sure you want to modify the price? "';
                               lvText002@1100485003 : TextConst 'ENU="Are you sure you want to enter/modify the price of the external plant number? "';
                             BEGIN
                               IF NOT PurchasePriceEditable THEN BEGIN
                                 IF NOT External THEN BEGIN
                                   IF "Purchase Price" = 0 THEN BEGIN
                                     IF NOT CONFIRM(lvText000, FALSE) THEN
                                       EXIT;
                                   END ELSE BEGIN
                                     IF NOT CONFIRM(lvText001, FALSE) THEN
                                       EXIT;
                                   END;
                                 END ELSE BEGIN
                                   IF NOT CONFIRM(lvText002, FALSE) THEN
                                     EXIT;
                                 END;
                                 //PurchasePriceEditable := TRUE;
                                 PurchPriceEditableTmp := TRUE;
                               END;
                             END;
                              }

    { 1100485016;2;Field  ;
                SourceExpr="Fixed Asset Inactivate";
                Importance=Additional;
                Editable=FixedAssetInactivateEditable }

    { 1210190003;2;Field  ;
                SourceExpr="Fixed Asset" }

    { 1210190004;1;Part   ;
                Name=Plant Profile Answer;
                CaptionML=ENU=Technical Specifications (Features);
                SubPageView=SORTING(Plant Type,Plant No.,Profile Code,Line No.);
                SubPageLink=Plant Type=FIELD(Plant Type),
                            Plant No.=FIELD(No.);
                PagePartID=Page11012615;
                PartType=Page }

    { 1901016801;1;Group  ;
                CaptionML=ENU=Technical Specifications }

    { 25  ;2   ;Field     ;
                SourceExpr="Technical Specifications";
                MultiLine=Yes }

    { 1100525000;2;Field  ;
                SourceExpr="Serial No.";
                Importance=Promoted }

    { 1100525002;2;Field  ;
                SourceExpr="Registration No." }

    { 1905885101;1;Group  ;
                CaptionML=ENU=Invoicing }

    { 1100485904;2;Field  ;
                SourceExpr="Plant Calendar" }

    { 1100529001;2;Field  ;
                SourceExpr="Take into Account Rental Cal." }

    { 1100485911;2;Field  ;
                SourceExpr="External Rent Calendar" }

    { 1100485913;2;Field  ;
                SourceExpr="Ext. Rented Invoiced to";
                Enabled=ExtRentedInvoicedToEnabled;
                Editable=FALSE }

    { 1100525001;0;Container;
                ContainerType=FactBoxArea }

    { 1100529900;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                PartType=Page }

    { 1100525003;1;Part   ;
                SubPageLink=Plant Type=FIELD(Plant Type),
                            No.=FIELD(No.);
                PagePartID=Page11130057;
                PartType=Page }

    { 1100528802;1;Part   ;
                Name=ServiceOrderPlantFB;
                SubPageLink=Plant Type=FIELD(Plant Type),
                            Plant Number=FIELD(No.);
                PagePartID=Page11229360;
                Visible=MaintenanceFactBoxVisible;
                PartType=Page }

    { 1100525009;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1100525008;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text000@11012001 : TextConst 'ENU=Bulk Lot No.';
      PlantSetupRec@1100485000 : Record 11012550;
      PlantRec@1210190000 : Record 11012551;
      NumberTxt@11012000 : Text[30];
      Text001@1100485001 : TextConst 'ENU=Plant No. ''%1'' has already been used before, are you sure?';
      DPA_IsHardFilter@1100000999 : Boolean;
      QuantityEditable@19013162 : Boolean INDATASET;
      ShipToLocationEditable@19008550 : Boolean INDATASET;
      ReceiptDateEditable@19051246 : Boolean INDATASET;
      VendorEditable@19059821 : Boolean INDATASET;
      PurchasePriceEditable@19032785 : Boolean INDATASET;
      ExternalEditable@19068606 : Boolean INDATASET;
      FixedAssetInactivateEditable@19028264 : Boolean INDATASET;
      QuantityInStockHideValue@19059762 : Boolean INDATASET;
      NoEditable@1100525000 : Boolean INDATASET;
      ExtRentedInvoicedToEnabled@1100525001 : Boolean INDATASET;
      UnlinkFAbtnEnabled@1100525002 : Boolean INDATASET;
      PurchPriceEditableTmp@1100525003 : Boolean;
      MaintenanceSchemeVisible@1100528800 : Boolean;
      MaintenanceFactBoxVisible@1100525004 : Boolean;

    PROCEDURE FillNumberTxt@1();
    BEGIN
      CALCFIELDS(Bulk);
      IF Bulk THEN
        NumberTxt := Text000
      ELSE
        NumberTxt := FIELDCAPTION("No.");
    END;

    PROCEDURE GetQuantityFA@1100485000() : Decimal;
    VAR
      lvFARec@1100485000 : Record 5600;
    BEGIN
      IF ("Fixed Asset" = '') THEN
        EXIT(0);

      lvFARec."No." := "Fixed Asset";
      EXIT(lvFARec.GetQuantity('', FALSE)); //ps 13795, 29-12-08 arg changed from TRUE to FALSE
    END;

    PROCEDURE CopyTechSpecsFromPlantType@1100485001(PlantNoLevel@1100525001 : Boolean);
    VAR
      PlantNumber@1100525002 : Record 11012552;
      lvPlantProfileAnswerRec@1100485000 : Record 11012582;
      lvPlantProfileAnswerRec2@1100485001 : Record 11012582;
      lvText001@1100485002 : TextConst 'ENU=No Technical Specifications present of Plant Type ''%1''.';
      lvText001b@1100525000 : TextConst 'ENU=No Technical Specifications present of Plant Type ''%1''.';
      lvText002@1100485003 : TextConst 'ENU=Copy Techninical Specifications of Plant Type ''%1''?';
      CopyFromPlantNo@1100525003 : Code[10];
    BEGIN
      TESTFIELD("No.");

      //C012826.sn
      CopyFromPlantNo := '';   //* PlantType level
      IF PlantNoLevel THEN BEGIN
        PlantNumber.FILTERGROUP(9);
        PlantNumber.SETRANGE("Plant Type", "Plant Type");
        PlantNumber.SETFILTER("No.", '<>%1', "No.");
        PlantNumber.FILTERGROUP(0);
        IF PAGE.RUNMODAL(0, PlantNumber) = ACTION::LookupOK THEN
          CopyFromPlantNo := PlantNumber."No.";
        IF CopyFromPlantNo = '' THEN
          EXIT;
      END;
      //C012826.en

      lvPlantProfileAnswerRec.SETRANGE("Plant Type", "Plant Type");
      lvPlantProfileAnswerRec.SETRANGE("Plant No.", CopyFromPlantNo);  //C012826.c
      IF NOT lvPlantProfileAnswerRec.FINDSET THEN
        IF NOT PlantNoLevel THEN  //C012826.n
          ERROR(lvText001, "Plant Type")
        ELSE
          ERROR(lvText001b, "Plant Type", CopyFromPlantNo);

      IF NOT PlantNoLevel THEN BEGIN  //C012826.n  If plant no. level then already No. selected, then no confirm needed anymore
        IF NOT CONFIRM(lvText002, TRUE, "Plant Type") THEN
          EXIT;
      END;

      REPEAT
        lvPlantProfileAnswerRec2.TRANSFERFIELDS(lvPlantProfileAnswerRec, TRUE);
        lvPlantProfileAnswerRec2."Plant No." := "No.";
        lvPlantProfileAnswerRec2."Copy To Plant No." := FALSE; //mg, 12-04-11: M25005
        IF NOT lvPlantProfileAnswerRec2.FIND('=') THEN
          lvPlantProfileAnswerRec2.INSERT(TRUE);
      UNTIL lvPlantProfileAnswerRec.NEXT = 0;
    END;

    PROCEDURE AllowUnlinkFA@1100525000() : Boolean;
    BEGIN
      //* Since update 2009-001 (july 2010) it is possible to setup the integration by plant type. This is only possible for
      //* Rental plant, so not for Sales/BuyBack plant (see also OnValidate of T11012551 field 310).
      //* In can be that there was already S/BB plant linked before, so it should (temporary) be possible to unlink these.
      IF ("Fixed Asset" = '') OR (NOT PlantSetupRec."Integration Fixed Assets") THEN
        EXIT(FALSE);
      IF NOT PlantRec.GET("Plant Type") THEN
        EXIT(FALSE);
      IF (NOT PlantRec."Integration Fixed Assets") AND (PlantRec."Rental Type" <> PlantRec."Rental Type"::Rental) THEN
        EXIT(TRUE);
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    VAR
      PlantRentEntry@1100525000 : Record 11012535;
      RecRef@1100529900 : RecordRef;
    BEGIN
      xRec := Rec;
      FillNumberTxt;
      QuantityEditable := (NOT Posted);
      ShipToLocationEditable := (NOT Posted);
      ReceiptDateEditable := (NOT Posted);

      VendorEditable := TRUE;
      IF Posted AND External AND (Vendor <> '') THEN BEGIN
        PlantRentEntry.SETRANGE(Removed, FALSE);
        PlantRentEntry.SETRANGE("Vendor No.", Vendor);
        PlantRentEntry.SETRANGE("Plant Type", "Plant Type");
        PlantRentEntry.SETRANGE("Plant No.", "No.");
        IF NOT PlantRentEntry.ISEMPTY THEN
          VendorEditable := FALSE;
      END;

      PurchasePriceEditable := ((NOT Posted) AND ("Purchase Order No." = '')) OR (PurchPriceEditableTmp);
      PurchPriceEditableTmp := FALSE;
      PlantRec.GET("Plant Type");
      ExternalEditable := (
        (NOT Posted) AND ("Fixed Asset" = '') AND
        ((NOT PlantRec.Bulk) OR
         (PlantRec.Bulk AND NOT PlantRec.External AND PlantSetupRec."Ext Bulk Plant with No. in Inv")));

      ExtRentedInvoicedToEnabled := ((PlantSetupRec."PLE Journal Template" <> '') AND External);
      FixedAssetInactivateEditable := (NOT External AND ("Fixed Asset" = ''));

      RecRef.GETTABLE(Rec);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(TRUE);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode("Department Code");

      IF MaintenanceFactBoxVisible THEN
        CurrPage.ServiceOrderPlantFB.PAGE.SetPlantSource("Plant Type", "No.");
    END;

    BEGIN
    END.
  }
}

