OBJECT Page 11012561 Plant Order
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    Permissions=TableData 11020520=r;
    CaptionML=ENU=Plant Order;
    SourceTable=Table11012556;
    SourceTableView=WHERE(Posted=CONST(No),
                          Rental Free Order Type=CONST(" "));
    PageType=Card;
    PromotedActionCategoriesML=ENU=New,Process,Report,Order Lines,Order,Fuctions,Order Picking,Mail Documents;
    OnInit=BEGIN
             TranportOrderNoVisible := TRUE;
             RideNoVisible := TRUE;
             PlantRequestNoVisible := TRUE;
             SalesRentalOrdersVisible := TRUE;
             DepartmentCodeVisible := TRUE;
             OrderPickingButtonVisible := TRUE;

             GeneralEditable := TRUE;
             ToLocationEditable := TRUE;
             TransportCostFldsEditable := TRUE;
             RentalShiftDatesEditable := TRUE;
             AdvancedRemovalEditable := TRUE;
             AdvancedRemovalFldsEditable := TRUE;
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 PlantSetup.GET;

                 TransportCostFldsEditable := PlantSetup."Transport Orders";
                 //OrderPickingEditable := PlantSetup."PO-Picking Bar Code Scanner";
                 ReleaseFunctionsVisible := PlantSetup."Extended Picking Procedure";
                 ExternalTransportPlanningVisible := PlantSetup."Transport Status (Ext. Plan.)";

                 IF NOT SalesOrderPlantOrderRelRec.READPERMISSION THEN
                   SalesRentalOrdersVisible := FALSE
                 ELSE
                   SalesRentalOrdersVisible := (NOT SalesOrderPlantOrderRelRec.ISEMPTY);

                 //* See call 22454 (Dura Vermeer)
                 DefTransferVisible := (PlantSetup."Def. Transfer PO" = PlantSetup."Def. Transfer PO"::Yes);
                 SETRANGE("Def. Transfer");  //C023770
                 SETRANGE("Shipping Agent"); //C023770

                 GLSetup.GET;
                 DepartmentCodeVisible := GLSetup."Department Authoriz. Active";
               END;

    OnAfterGetRecord=VAR
                       RecRef@1100529900 : RecordRef;
                     BEGIN
                       OrderContFromRec.GetFirstOrderContact(OrderContFromRec.Type::"PO From", "No.", OrderContFromRec);
                       OrderContToRec.GetFirstOrderContact(OrderContToRec.Type::"PO To", "No.", OrderContToRec);

                       IF "No." <> '' THEN
                         CALCFIELDS("Linked Plant Requests")
                       ELSE
                         "Linked Plant Requests" := 0;
                       PlantRequestNoVisible := ("Linked Plant Requests" <= 1);
                       TranportOrderNoVisible := (NoLinkedTransportOrders(gvText) <= 1);
                       RideNoVisible := (NoLinkedTransportRides(gvText) <= 1);

                       CurrPage."Plant Order Lines".PAGE.SetPlantCategoryFilter(Type = Type::Removal);  //*DP00183
                       SetEditable;
                       RecRef.GETTABLE(Rec);
                       CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
                       CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(TRUE);
                       CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode("Department Code");
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1210190015;1 ;ActionGroup;
                      CaptionML=ENU=Order Lines }
      { 1210190007;2 ;Action    ;
                      CaptionML=ENU=Costs;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Costs;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 PlantOrderCostLine@1210190000 : Record 11012558;
                                 PlantOrderCostSubform@1210190001 : Page 11012564;
                               BEGIN
                                 PlantOrderCostLine.FILTERGROUP(2);
                                 PlantOrderCostLine.SETRANGE("Plant Order No.", "No.");
                                 PlantOrderCostLine.FILTERGROUP(0);
                                 PlantOrderCostSubform.SETTABLEVIEW(PlantOrderCostLine);
                                 PlantOrderCostSubform.RUNMODAL;
                               END;
                                }
      { 2       ;1   ;ActionGroup;
                      CaptionML=ENU=Order;
                      Image=Document }
      { 1100529003;2 ;Action    ;
                      CaptionML=ENU=Comments;
                      Visible=FALSE;
                      Image=ViewComments;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 CommentSheet(TRUE);  //DP00183
                               END;
                                }
      { 1210190001;2 ;Action    ;
                      CaptionML=ENU=Documents;
                      Visible=FALSE;
                      Image=Documents;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 ShowDocuments();  //DP00183.c
                               END;
                                }
      { 1100525018;2 ;ActionGroup;
                      CaptionML=ENU=Inventory;
                      ActionContainerType=NewDocumentItems;
                      Image=InventoryJournal }
      { 4       ;3   ;Action    ;
                      CaptionML=ENU=Inventory - From Location;
                      RunObject=Page 11012559;
                      RunPageLink=Removed=CONST(No),
                                  Location=FIELD(From Location);
                      Image=InventoryJournal;
                      PromotedCategory=Category5 }
      { 5       ;3   ;Action    ;
                      CaptionML=ENU=Inventory - To Location;
                      RunObject=Page 11012559;
                      RunPageLink=Removed=CONST(No),
                                  Location=FIELD(To Location);
                      Image=InventoryJournal;
                      PromotedCategory=Category5 }
      { 6       ;3   ;Action    ;
                      CaptionML=ENU=Inventory Course - From Location;
                      RunObject=Page 11012560;
                      RunPageView=SORTING(Location,Plant Type,Plant No.,Present from);
                      RunPageLink=Location=FIELD(From Location);
                      Image=ItemTrackingLines;
                      PromotedCategory=Category5 }
      { 7       ;3   ;Action    ;
                      CaptionML=ENU=Inventory Course - To Location;
                      RunObject=Page 11012560;
                      RunPageView=SORTING(Location,Plant Type,Plant No.,Present from);
                      RunPageLink=Location=FIELD(To Location);
                      Image=ItemTrackingLines;
                      PromotedCategory=Category5 }
      { 1100525001;2 ;Action    ;
                      CaptionML=ENU=Contacts - From Location;
                      Visible=FALSE;
                      Image=TeamSales;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 lvOrderContRec@1100485000 : Record 11012536;
                                 lvOrderContFrm@1100485001 : Page 11020589;
                               BEGIN
                                 OrderContFromRec.ShowOrderContacts(OrderContFromRec.Type::"PO From", "No.", "From Location");
                                 OrderContFromRec.GetFirstOrderContact(OrderContFromRec.Type::"PO From", "No.", OrderContFromRec);
                               END;
                                }
      { 1100525003;2 ;Action    ;
                      CaptionML=ENU=Contacts - To Location;
                      Visible=FALSE;
                      Image=TeamSales;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 lvOrderContRec@1100485000 : Record 11012536;
                                 lvOrderContFrm@1100485001 : Page 11020589;
                               BEGIN
                                 OrderContToRec.ShowOrderContacts(OrderContToRec.Type::"PO To", "No.", "To Location");
                                 OrderContToRec.GetFirstOrderContact(OrderContToRec.Type::"PO To", "No.", OrderContToRec);
                               END;
                                }
      { 1100485027;2 ;Action    ;
                      CaptionML=ENU=Purchase Orders;
                      Image=Purchase;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 TESTFIELD("No.");
                                 ShowPurchaseOrders("No.", FALSE, '');
                               END;
                                }
      { 1100525019;2 ;ActionGroup;
                      CaptionML=ENU=Sales Rental Order;
                      Visible=SalesRentalOrdersVisible;
                      Enabled=SalesRentalOrdersVisible;
                      Image=Document }
      { 1100485080;3 ;Action    ;
                      CaptionML=ENU=Sales Order related Orders;
                      Visible=SalesRentalOrdersVisible;
                      Enabled=SalesRentalOrdersVisible;
                      Image=Document;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 lvSalesRelOrderRec@1100485000 : Record 11012787;
                               BEGIN
                                 TESTFIELD("No.");
                                 lvSalesRelOrderRec.ShowSalesOrderRelatedOrders(lvSalesRelOrderRec.Level::PlantOrder, "No.");
                               END;
                                }
      { 1100485085;3 ;Action    ;
                      CaptionML=ENU=Communication Board;
                      Visible=SalesRentalOrdersVisible;
                      Enabled=SalesRentalOrdersVisible;
                      Image=Stages;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 lvSalesOrderPlantOrderRelRec@1100485003 : Record 11012787;
                                 lvCommunicationSalesLogLine@1100485002 : Record 11020511;
                                 lvCommunicationBoardform@1100485001 : Page 11071763;
                                 lvOrigin@1100485000 : 'Sales,Logistics';
                                 lvLevel@1100485005 : 'SalesOrder,PlantOrder,Exitorder';
                               BEGIN
                                 TESTFIELD("No.");
                                 lvSalesOrderPlantOrderRelRec.SETCURRENTKEY(Level, "Plant Document No.");
                                 lvSalesOrderPlantOrderRelRec.SETRANGE(Level, lvSalesOrderPlantOrderRelRec.Level::PlantOrder);
                                 lvSalesOrderPlantOrderRelRec.SETRANGE("Plant Document No.", "No.");
                                 lvSalesOrderPlantOrderRelRec.FINDFIRST;

                                 lvCommunicationSalesLogLine.SETRANGE("Sales Company Name", lvSalesOrderPlantOrderRelRec."Sales Company Name");
                                 lvCommunicationSalesLogLine.SETRANGE("Sales Order No.", lvSalesOrderPlantOrderRelRec."Sales Order No.");
                                 lvCommunicationBoardform.SETTABLEVIEW(lvCommunicationSalesLogLine);
                                 lvCommunicationBoardform.SetOrigin(
                                   lvOrigin::Logistics,lvSalesOrderPlantOrderRelRec."Sales Company Name", COMPANYNAME,
                                   lvLevel::PlantOrder, lvSalesOrderPlantOrderRelRec."Sales Order No.","No.");
                                 lvCommunicationBoardform.RUNMODAL;
                               END;
                                }
      { 1100485078;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Plant Orders from Sales Company;
                      Visible=SalesRentalOrdersVisible;
                      Enabled=SalesRentalOrdersVisible;
                      Image=MakeOrder;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 PAGE.RUNMODAL(PAGE::"Create PO's from Sales RO");
                                 FIND('=><');  //* Current PO can be deleted in the creating process
                               END;
                                }
      { 1100529004;2 ;Action    ;
                      CaptionML=ENU=Arrival Orders (OP);
                      Promoted=Yes;
                      Visible=OrderPickingStndActionsVisible;
                      Enabled=OrderPickingStndActionsVisible;
                      Image=PickLines;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 PlantOrder@1100529000 : Record 11012556;
                               BEGIN
                                 PlantOrder."No." := "No.";
                                 PAGE.RUNMODAL(PAGE::"Arrival Plant Order List (OP)", PlantOrder);
                               END;
                                }
      { 1100525005;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 11      ;1   ;ActionGroup;
                      CaptionML=ENU=Functions }
      { 12      ;2   ;ActionGroup;
                      CaptionML=ENU=Insert Plant;
                      Image=CheckRulesSyntax }
      { 1100525014;3 ;Action    ;
                      CaptionML=ENU=Insert Plant &Present;
                      RunObject=Codeunit 11012552;
                      Image=GeneralPostingSetup;
                      PromotedCategory=Category6 }
      { 1100525022;3 ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Insert Plant Present (Selection);
                      Image=GeneralPostingSetup;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 InsertPlantOnPOMgt@1100525000 : Codeunit 11012552;
                               BEGIN
                                 InsertPlantOnPOMgt.InsertPlantSelectionOnPO(Rec);
                               END;
                                }
      { 1100485101;3 ;Action    ;
                      CaptionML=ENU=Insert Plant of &Employee;
                      Image=CheckRulesSyntax;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 lvInsertPlantCU@1100485000 : Codeunit 11012552;
                               BEGIN
                                 lvInsertPlantCU.InsertPlantOfEmplOnPlantOrder(Rec);
                               END;
                                }
      { 1100485094;3 ;Action    ;
                      CaptionML=ENU=Insert Sold Plant (S/BB);
                      Image=Resource;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 lvInsertPlantCU@1100485000 : Codeunit 11012552;
                               BEGIN
                                 lvInsertPlantCU.InsertSoldPlantOnPlantOrder(Rec);
                               END;
                                }
      { 1100525030;3 ;Action    ;
                      CaptionML=ENU=Select Return Items;
                      Image=ReturnReceipt;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 InsertPlantOnPOMgt@1100525000 : Codeunit 11012552;
                               BEGIN
                                 InsertPlantOnPOMgt.InsertItemInventSelectionOnPO(Rec);  //* 23818
                               END;
                                }
      { 14      ;3   ;Action    ;
                      CaptionML=ENU=Insert Negative Inventory;
                      Image=Item;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 InsertPlant@11012001 : Codeunit 11012552;
                               BEGIN
                                 InsertPlant.InsertNegativeInventory(Rec);
                               END;
                                }
      { 1210190000;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy Plant Need;
                      Image=CopyDocument;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 PlantNeedRec@1100525002 : Record 11012579;
                                 PlantNeedListFrm@1100525001 : Page 11012606;
                               BEGIN
                                 //Copy the Plant Need
                                 PlantNeedListFrm.LOOKUPMODE(TRUE);
                                 PlantNeedListFrm.InitCopyProcess("No.");

                                 PlantNeedRec.SETRANGE(Location, "To Location");
                                 PlantNeedRec.SETRANGE(Finished, FALSE);
                                 PlantNeedListFrm.SETTABLEVIEW(PlantNeedRec);
                                 PlantNeedListFrm.RUNMODAL;
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1210190016;3 ;Action    ;
                      CaptionML=ENU=Select Budget Lines;
                      Image=Costs;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 CopyFromWorkBudget; //mg, 03-03-11: M24448
                               END;
                                }
      { 1100525021;2 ;ActionGroup;
                      CaptionML=ENU=Explode;
                      Image=ExplodeBOM }
      { 1100485001;3 ;Action    ;
                      ShortCutKey=Shift+Ctrl+S;
                      CaptionML=ENU=Explode &Set;
                      Image=ExplodeBOM;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 DummyPlantOrderLine@1100529000 : Record 11012557;
                               BEGIN
                                 ExplodeSet(TRUE, FALSE, DummyPlantOrderLine);
                               END;
                                }
      { 13      ;3   ;Action    ;
                      ShortCutKey=Shift+Ctrl+U;
                      CaptionML=ENU=Explode &Unique Plant;
                      Image=ExplodeBOM;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 DummyPlantOrderLine@1100529000 : Record 11012557;
                               BEGIN
                                 Explode(TRUE, FALSE, DummyPlantOrderLine);  //* Explode unique Plant
                               END;
                                }
      { 1100525026;2 ;Action    ;
                      CaptionML=ENU=Fill Quantity with Asked;
                      Image=UntrackedQuantity;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 OrderCollFillQty@1100525000 : Codeunit 11012556;
                               BEGIN
                                 //*22448
                                 PlantSetup.TESTFIELD("Extended Picking Procedure", TRUE);
                                 OrderCollFillQty.QuantityIsAskQuantity(Rec, FALSE);  //C003966.c
                               END;
                                }
      { 1100485007;2 ;Action    ;
                      CaptionML=ENU=Insert Standard Plant Cost;
                      Image=Costs;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 lvPlantOrderCostMgtCU@1100485002 : Codeunit 11012581;
                               BEGIN
                                 lvPlantOrderCostMgtCU.RunInsertPOStandardCostLines(Rec);
                               END;
                                }
      { 1210190011;2 ;Action    ;
                      CaptionML=ENU=Create Damage Lines;
                      Image=Costs;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 InsertPlant@1210190000 : Codeunit 11012552;
                               BEGIN
                                 InsertPlant.InsertRepairCostLines(Rec);
                               END;
                                }
      { 1100525024;1 ;ActionGroup;
                      CaptionML=ENU=Order }
      { 1210190012;2 ;Action    ;
                      CaptionML=ENU=Create Exit Order;
                      Image=Document;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 CreatePlantExitOrder@1210190000 : Codeunit 11012558;
                               BEGIN
                                 CheckNotPostedLinkedRequest(TRUE);
                                 CreatePlantExitOrder.InsertExitOrderFromPlantOrder(Rec);
                               END;
                                }
      { 1100485026;2 ;Action    ;
                      CaptionML=ENU=Create Purchase Order (Plant/Items);
                      Image=Document;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 lvExtentedPlantOrderFuncCU@1100485000 : Codeunit 11020503;
                                 lvText000@1100485001 : TextConst 'ENU=Do you want to create a Purchase Order (Plant/Items)?';
                               BEGIN
                                 CheckNotPostedLinkedRequest(TRUE);
                                 IF NOT CONFIRM(lvText000,FALSE) THEN
                                   EXIT;

                                 lvExtentedPlantOrderFuncCU.RunCreatePurchaseOrders(Rec);
                                 lvExtentedPlantOrderFuncCU.RunGetCreatedPurchaseOrders(TmpPurchOrderRec);

                                 ShowCreatePurchOrders();
                               END;
                                }
      { 1100485008;2 ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=ENU=Create Transport Order;
                      Image=Document;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 lvTransOrderRec@1100485003 : Record 11020505;
                                 lvTransFuncCU@1100485000 : Codeunit 11020504;
                                 lvTransOrder@1100485002 : Code[20];
                                 lvText000@1100485005 : TextConst 'ENU=Do you want to create a Transport Order?';
                                 lvText001@1100485004 : TextConst 'ENU=Transport Order %1 is created. Show?';
                                 lvText002@1100525001 : TextConst 'ENU=Plant Order is not released yet, are you sure you want to create a Transport Order?';
                               BEGIN
                                 TESTFIELD("No.");
                                 IF Type = Type::"Negative Inventory Correction" THEN
                                   FIELDERROR(Type);
                                 CALCFIELDS("Transport Order No.", "Ride No.");
                                 TESTFIELD("Transport Order No.", '');
                                 TESTFIELD("Ride No.", '');
                                 TESTFIELD("Collect Order", FALSE);
                                 //DP01118.so
                                 //IF Type = Type::Arrival THEN BEGIN  //* 12543.n
                                 //  IF PlantSetup."Only Create TO fr. rel. Arr.MO" THEN  //* 15448.n
                                 //    TESTFIELD(Status, Status::Released);
                                 //  ELSE BEGIN
                                 //    IF ("Order Picking Status" <= "Order Picking Status"::Open) THEN BEGIN  //C023560
                                 //      IF (NOT (Status IN [Status::Printed, Status::Released])) THEN
                                 //        FIELDERROR(Status);
                                 //      IF (Status = Status::Printed) AND ("Order Pick List Printed" = 0) THEN
                                 //        TESTFIELD("Order Pick List Printed");
                                 //    END;
                                 //  END;
                                 //END;
                                 //DP01118.eo
                                 IF (Type = Type::Arrival) AND PlantSetup."Only Create TO fr. rel. Arr.MO" THEN //DP01118.n
                                   TESTFIELD(Status, Status::Released);

                                 IF Status = Status::Released THEN BEGIN
                                   IF NOT CONFIRM(lvText000,FALSE) THEN
                                     EXIT;
                                 END ELSE BEGIN  //* 12543.n
                                   IF NOT CONFIRM(lvText002,FALSE,Status) THEN
                                     EXIT;
                                 END;

                                 lvTransOrder := lvTransFuncCU.RunCreateTransportOrder(Rec);
                                 IF lvTransOrder <> '' THEN BEGIN
                                   IF CONFIRM(lvText001, FALSE, lvTransOrder) THEN BEGIN
                                     COMMIT;
                                     lvTransOrderRec.SETRANGE("No.", lvTransOrder);
                                     PAGE.RUNMODAL(PAGE::"Plant Transport Order", lvTransOrderRec);
                                   END;
                                 END;
                               END;
                                }
      { 1100485074;1 ;ActionGroup;
                      Name=PickingButton;
                      CaptionML=ENU=Order Picking;
                      Visible=OrderPickingButtonVisible;
                      Enabled=OrderPickingButtonVisible }
      { 1100529000;2 ;Action    ;
                      ShortCutKey=Ctrl+F10;
                      CaptionML=ENU=To Plan;
                      Promoted=Yes;
                      Visible=OrderPickingStndActionsVisible;
                      Enabled=OrderPickingStndActionsVisible;
                      Image=Planning;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 PlantOrderPickingMgt@1100529000 : Codeunit 11012101;
                               BEGIN
                                 PlantOrderPickingMgt.ArrivalPlantOrderToOrderPicking(Rec, 1);
                               END;
                                }
      { 1100529001;2 ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=ENU=To Order Picker;
                      Promoted=Yes;
                      Visible=OrderPickingStndActionsVisible;
                      Enabled=OrderPickingStndActionsVisible;
                      Image=OrderTracking;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 PlantOrderPickingMgt@1100529000 : Codeunit 11012101;
                               BEGIN
                                 PlantOrderPickingMgt.ArrivalPlantOrderToOrderPicking(Rec, 2);
                               END;
                                }
      { 1100529002;2 ;Action    ;
                      CaptionML=ENU=Reopen OP;
                      Visible=OrderPickingStndActionsVisible;
                      Enabled=OrderPickingStndActionsVisible;
                      Image=ReOpen;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 PlantOrderPickingMgt@1100529000 : Codeunit 11012101;
                               BEGIN
                                 PlantOrderPickingMgt.ReOpenOrderPicking(Rec);
                               END;
                                }
      { 1100485088;2 ;Action    ;
                      ShortCutKey=Ctrl+F10;
                      CaptionML=ENU=To Planner;
                      Promoted=Yes;
                      Visible=OrderPickingCustActionsVisible;
                      Enabled=OrderPickingCustActionsVisible;
                      Image=Planning;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 IF (NOT PlantSetup."PO-Picking Bar Code Scanner") THEN BEGIN
                                   //* Alleen mogelijk n combinatie met maatwerk (BNBM)
                                   MESSAGE(Text001);
                                   EXIT;
                                 END;

                                 TESTFIELD(Type, Type::Arrival);
                                 TESTFIELD("Order Picking Status", "Order Picking Status"::Open);
                                 IF Status < Status::Released THEN BEGIN
                                   VALIDATE("Order Picking Status", "Order Picking Status"::"To Plan");
                                   CurrPage.UPDATE;
                                 END ELSE BEGIN
                                   MESSAGE(Text004);
                                 END;
                               END;
                                }
      { 1100525016;1 ;ActionGroup;
                      CaptionML=ENU=Transport Planning;
                      Visible=ExternalTransportPlanningVisible }
      { 1100525027;2 ;Action    ;
                      CaptionML=ENU=Request;
                      Image=ReleaseShipment;
                      OnAction=VAR
                                 ExtTransportPlanningMgt@1100525000 : Codeunit 11012592;
                               BEGIN
                                 TESTFIELD("No.");
                                 IF CONFIRM(Text006, TRUE, TABLECAPTION, "No.", "Transport Status (Ext.)"::Request) THEN BEGIN
                                   CurrPage.UPDATE;
                                   ExtTransportPlanningMgt.RequestExternalTransport(Rec);
                                 END;
                               END;
                                }
      { 1100525029;2 ;Action    ;
                      CaptionML=ENU=Update;
                      Image=UpdateShipment;
                      OnAction=VAR
                                 ExtTransportPlanningMgt@1100525000 : Codeunit 11012592;
                               BEGIN
                                 TESTFIELD("No.");
                                 IF CONFIRM(Text006, TRUE, TABLECAPTION, "No.", "Transport Status (Ext.)"::Update) THEN BEGIN
                                   CurrPage.UPDATE;
                                   ExtTransportPlanningMgt.UpdateExternalTransport(Rec);
                                 END;
                               END;
                                }
      { 1100525032;2 ;Action    ;
                      CaptionML=ENU=Cancel;
                      Image=UndoShipment;
                      OnAction=VAR
                                 ExtTransportPlanningMgt@1100525000 : Codeunit 11012592;
                               BEGIN
                                 TESTFIELD("No.");
                                 IF CONFIRM(Text006, TRUE, TABLECAPTION, "No.", "Transport Status (Ext.)"::Cancel) THEN BEGIN
                                   CurrPage.UPDATE;
                                   ExtTransportPlanningMgt.CancelExternalTransport(Rec);
                                 END;
                               END;
                                }
      { 1100529005;2 ;Action    ;
                      CaptionML=ENU=Reopen;
                      Image=ReOpen;
                      OnAction=VAR
                                 ExtTransportPlanningMgt@1100529000 : Codeunit 11012592;
                               BEGIN
                                 TESTFIELD("No.");
                                 IF CONFIRM(Text006, TRUE, TABLECAPTION, "No.", Text007) THEN BEGIN
                                   CurrPage.UPDATE;
                                   ExtTransportPlanningMgt.ReopenExternalTransport(Rec);
                                 END;
                               END;
                                }
      { 1100529006;2 ;Action    ;
                      CaptionML=ENU=Finish;
                      Image=Post;
                      OnAction=VAR
                                 ExtTransportPlanningMgt@1100529000 : Codeunit 11012592;
                               BEGIN
                                 TESTFIELD("No.");
                                 IF CONFIRM(Text006, TRUE, TABLECAPTION, "No.", "Transport Status (Ext.)"::Finished) THEN BEGIN
                                   CurrPage.UPDATE;
                                   ExtTransportPlanningMgt.FinishExternalTransport(Rec);
                                 END;
                               END;
                                }
      { 1100525033;2 ;Action    ;
                      Visible=FALSE;
                      Enabled=FALSE;
                      OnAction=VAR
                                 ExternalTransportPlanningWS@1100525000 : Codeunit 11012593;
                               BEGIN
                                 //??TEST Deze PageAction moet na Demo 17-05-2016 weer weg
                                 CASE STRMENU('Aanvraag,Aanpassing,Annuleren,Gereed', 0, 'Bevestigen') OF
                                   1: ExternalTransportPlanningWS.ConfirmTransportRequest("Shipping Agent",'MUL123',"No.",'MUL-TR000001');
                                   2: ExternalTransportPlanningWS.ConfirmTransportUpdate("Shipping Agent",'MUL123',"No.",'MUL-TR000001');
                                   3: ExternalTransportPlanningWS.ConfirmTransportCancel("Shipping Agent",'MUL123',"No.");
                                   4: ExternalTransportPlanningWS.ConfirmTransportFinished("Shipping Agent",'MUL123',"No.");
                                 END;
                               END;
                                }
      { 8       ;1   ;ActionGroup;
                      CaptionML=ENU=Posting }
      { 1100485021;2 ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=ENU=Release;
                      Promoted=Yes;
                      Visible=ReleaseFunctionsVisible;
                      Enabled=ReleaseFunctionsVisible;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lvText000@1100485001 : TextConst 'ENU=Do you want to release the %1?';
                                 lvExtentedPlantOrdeFuncCU@1100485002 : Codeunit 11020503;
                                 MailStatusPOModified@1100525001 : Codeunit 11012588;
                                 lvBackorder@1100485003 : Code[20];
                                 lvText001@1100485004 : TextConst 'ENU=Backorder %1 is created.';
                               BEGIN
                                 PlantSetup.TESTFIELD("Extended Picking Procedure", TRUE);
                                 CheckNotPostedLinkedRequest(TRUE);

                                 IF NOT CONFIRM(lvText000,FALSE,TABLECAPTION) THEN
                                   EXIT;

                                 lvBackorder := lvExtentedPlantOrdeFuncCU.RunReleasePlantOrder(Rec);
                                 IF lvBackorder <> '' THEN
                                   MESSAGE(lvText001, lvBackorder);

                                 //DP00241.sn (31002)
                                 IF (Status = Status::Released) THEN BEGIN
                                   COMMIT;
                                   CLEARLASTERROR;
                                   IF NOT MailStatusPOModified.RUN(Rec) THEN
                                     ERROR(GETLASTERRORTEXT);
                                 END;
                                 //DP00241.en (31002)
                               END;
                                }
      { 1100485025;2 ;Action    ;
                      CaptionML=ENU=Reset Release;
                      Visible=ReleaseFunctionsVisible;
                      Enabled=ReleaseFunctionsVisible;
                      Image=ResetStatus;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lvText000@1100485000 : TextConst 'ENU=Do you want to reset released?';
                                 lvExtentedPlantOrdeFuncCU@1100485001 : Codeunit 11020503;
                               BEGIN
                                 PlantSetup.TESTFIELD("Extended Picking Procedure", TRUE);

                                 CALCFIELDS("Transport Order No.");
                                 IF "Transport Order No." = '' THEN BEGIN
                                   IF NOT CONFIRM(lvText000, FALSE) THEN
                                     EXIT;
                                 END ELSE BEGIN
                                   IF NOT CONFIRM(Text003 + ' ' + lvText000, FALSE) THEN
                                     EXIT;
                                 END;

                                 lvExtentedPlantOrdeFuncCU.RunResetReleasedPlantOrder(Rec);
                               END;
                                }
      { 1100485077;2 ;Action    ;
                      CaptionML=ENU=Reopen;
                      Image=ReOpen;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lvText000@1100485001 : TextConst 'ENU=Do you want to reopen the plant order?';
                                 lvExtentedPlantOrdeFuncCU@1100485000 : Codeunit 11020503;
                               BEGIN
                                 TESTFIELD(Posted,FALSE);

                                 CALCFIELDS("Transport Order No.");
                                 IF "Transport Order No." = '' THEN BEGIN
                                   IF NOT CONFIRM(lvText000,FALSE) THEN
                                     EXIT;
                                 END ELSE BEGIN
                                   IF NOT CONFIRM(Text003 + ' ' + lvText000, FALSE) THEN
                                     EXIT;
                                 END;

                                 IF PlantSetup."Extended Picking Procedure" AND (Status = Status::Released) THEN
                                   lvExtentedPlantOrdeFuncCU.RunResetReleasedPlantOrder(Rec);
                                 IF Status = Status::Open THEN
                                   EXIT;

                                 TESTFIELD(Status, Status::Printed);
                                 Status := Status::Open;
                                 MODIFY;
                               END;
                                }
      { 9       ;2   ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=ENU=Post;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CheckNotPostedLinkedRequest(TRUE);
                                 CODEUNIT.RUN(CODEUNIT::"Post Plant Order (Y/N)", Rec);
                                 IF Posted THEN
                                   CurrPage.CLOSE;
                               END;
                                }
      { 10      ;2   ;Action    ;
                      ShortCutKey=Shift+F9;
                      CaptionML=ENU=Post and Print;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CheckNotPostedLinkedRequest(TRUE);
                                 CODEUNIT.RUN(CODEUNIT::"Post and Print Plant Order", Rec);
                                 IF Posted THEN
                                   CurrPage.CLOSE;
                               END;
                                }
      { 1100525025;2 ;Action    ;
                      CaptionML=ENU=Post and E-Mail;
                      Image=SendConfirmation;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 PostPrintPlantOrder@1100525001 : Codeunit 11012555;
                               BEGIN
                                 IF Type <> Type::"Negative Inventory Correction" THEN BEGIN
                                   CheckNotPostedLinkedRequest(TRUE);

                                   PostPrintPlantOrder.PostAndEmail(Rec);
                                   IF Posted THEN
                                     CurrPage.CLOSE;
                                 END;
                               END;
                                }
      { 1100409000;1 ;ActionGroup;
                      CaptionML=ENU=Mail Documents;
                      ActionContainerType=NewDocumentItems }
      { 1100409001;2 ;Action    ;
                      CaptionML=ENU=From Location;
                      Image=MailAttachment;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 PlantLocation@1100409000 : Record 11012554;
                                 Contact@1100409001 : Record 5050;
                               BEGIN
                                 TESTFIELD("From Location");
                                 IF PlantLocation.GET("From Location") THEN BEGIN
                                   IF PlantLocation.GetContact(Contact, TRUE) THEN BEGIN
                                     IF Contact.IsContactPerson THEN
                                       EditDocuments(Contact."Company No.", Contact."No.", TRUE, PlantLocation."E-Mail")
                                     ELSE
                                       EditDocuments(Contact."No.", '', TRUE, PlantLocation."E-Mail");
                                   END;
                                 END;
                               END;
                                }
      { 1100409002;2 ;Action    ;
                      CaptionML=ENU=To Location;
                      Image=MailAttachment;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 PlantLocation@1100409000 : Record 11012554;
                                 Contact@1100409001 : Record 5050;
                               BEGIN
                                 TESTFIELD("To Location");
                                 IF PlantLocation.GET("To Location") THEN BEGIN
                                   IF PlantLocation.GetContact(Contact, TRUE) THEN BEGIN
                                     IF Contact.IsContactPerson THEN
                                       EditDocuments(Contact."Company No.", Contact."No.", TRUE, PlantLocation."E-Mail")
                                     ELSE
                                       EditDocuments(Contact."No.", '', TRUE, PlantLocation."E-Mail");
                                   END;
                                 END;
                               END;
                                }
      { 1100528400;1 ;ActionGroup;
                      CaptionML=ENU=Dispatch Note;
                      ActionContainerType=NewDocumentItems;
                      Image=Email }
      { 1210190018;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Email Dispatch Note;
                      Image=Email;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 PlantOrder@1210190000 : Record 11012556;
                               BEGIN
                                 TESTFIELD("No.");
                                 IF Type = Type::"Other Transfers" THEN
                                   FIELDERROR(Type);
                                 TESTFIELD("From Location");
                                 TESTFIELD("To Location");

                                 PlantOrder := Rec;
                                 PlantOrder.SETRECFILTER;
                                 REPORT.RUNMODAL(REPORT::"E-mail Plant Order", TRUE, FALSE, PlantOrder);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=Reports }
      { 63      ;1   ;Action    ;
                      CaptionML=ENU=Pick List;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Print;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 PrintDocument@1210190001 : Codeunit 229;
                               BEGIN
                                 PrintDocument.PrintPlantPickingList(Rec, FALSE); //in case lines are exploded
                               END;
                                }
      { 64      ;1   ;Action    ;
                      CaptionML=ENU=Dispatch Note;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Print;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 PrintDocument@11012002 : Codeunit 229;
                               BEGIN
                                 IF Type = Type::Removal THEN
                                   PrintDocument.PrintPlantReturnOrder(Rec)
                                 ELSE
                                   PrintDocument.PrintDispatchNote(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 15  ;1   ;Group     ;
                CaptionML=ENU=General }

    { 16  ;2   ;Field     ;
                SourceExpr="No.";
                OnValidate=BEGIN
                             IF ("No." <> '') THEN
                               CurrPage.UPDATE;
                           END;

                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 18  ;2   ;Field     ;
                SourceExpr=Type;
                Importance=Promoted;
                Editable=GeneralEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 20  ;2   ;Field     ;
                SourceExpr="Transfer Date";
                Importance=Standard;
                Editable=GeneralEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100525031;2;Field  ;
                SourceExpr="Def. Transfer";
                Visible=DefTransferVisible;
                Editable=DefTransferEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 22  ;2   ;Field     ;
                SourceExpr="From Location";
                Editable=GeneralEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 24  ;2   ;Field     ;
                SourceExpr="From Location Description" }

    { 27  ;2   ;Field     ;
                SourceExpr="To Location";
                Editable=ToLocationEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 29  ;2   ;Field     ;
                SourceExpr="To Location Description" }

    { 1100485087;2;Field  ;
                SourceExpr="Your Reference" }

    { 1100525017;2;Field  ;
                SourceExpr="Collect Order";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100409004;2;Field  ;
                SourceExpr="Block Code" }

    { 1100485013;2;Field  ;
                SourceExpr=Status;
                Importance=Promoted;
                Visible=FALSE }

    { 1100485068;2;Field  ;
                SourceExpr="Order Picking Status";
                Visible=FALSE;
                Editable=OrderPickingStatusEditable;
                HideValue=OrderPickingStatusHideValue }

    { 1100485028;2;Field  ;
                SourceExpr="Purchase Order No." }

    { 1100485015;2;Field  ;
                SourceExpr="Transport Cost for (Advice)";
                Importance=Additional;
                Editable=TransportCostFldsEditable }

    { 1100485031;2;Field  ;
                SourceExpr="Project No. (TP-Cost)";
                Importance=Additional;
                Editable=TransportCostFldsEditable }

    { 1100525020;2;Field  ;
                SourceExpr="Shipping Agent";
                Importance=Additional;
                Editable=ShippingAgentEditable }

    { 1100409003;2;Field  ;
                CaptionML=ENU=Documents;
                SourceExpr=HasDocumentLinks();
                Visible=FALSE;
                OnDrillDown=BEGIN
                              ShowDocuments();  //*DP00183
                            END;
                             }

    { 1100526000;2;Field  ;
                SourceExpr="Department Code";
                Visible=DepartmentCodeVisible;
                Editable=GeneralEditable;
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                           END;
                            }

    { 1100525007;1;Part   ;
                Name=Plant Order Lines;
                SubPageLink=Plant Order No.=FIELD(No.);
                PagePartID=Page11012562;
                PartType=Page }

    { 1900609401;1;Group  ;
                CaptionML=ENU=From Location }

    { 36  ;2   ;Field     ;
                Name=FromLocationFld;
                SourceExpr="From Location";
                Importance=Promoted;
                Editable=GeneralEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100485002;2;Field  ;
                CaptionML=ENU=Address Code;
                SourceExpr="From Location Address Code" }

    { 1100525013;2;Field  ;
                Name=FromLocationDescription;
                DrillDown=No;
                CaptionML=ENU=Name;
                SourceExpr="From Location Description" }

    { 30  ;2   ;Field     ;
                CaptionML=ENU=Address;
                SourceExpr="From Location Address";
                Importance=Promoted }

    { 32  ;2   ;Field     ;
                CaptionML=ENU=Address 2;
                SourceExpr="From Location Address 2" }

    { 34  ;2   ;Field     ;
                CaptionML=ENU=Post Code;
                SourceExpr="From Location Post Code" }

    { 39  ;2   ;Field     ;
                CaptionML=ENU=City;
                SourceExpr="From Location City" }

    { 1100485081;2;Field  ;
                CaptionML=ENU=Country;
                SourceExpr="From Location Country/Region" }

    { 40  ;2   ;Field     ;
                CaptionML=ENU=Contact;
                SourceExpr="From Location Contact" }

    { 1100485030;2;Field  ;
                CaptionML=ENU=Contact Phone No.;
                SourceExpr="From Location Contact Phone No";
                Importance=Standard }

    { 1100485044;2;Field  ;
                CaptionML=ENU=Name (Contact);
                SourceExpr=OrderContFromRec.Name;
                Importance=Additional;
                Editable=FALSE }

    { 1100485045;2;Field  ;
                CaptionML=ENU=Address (Contact);
                SourceExpr=OrderContFromRec.Address;
                Importance=Additional;
                Editable=FALSE }

    { 1100485046;2;Field  ;
                CaptionML=ENU=City (Contact);
                SourceExpr=OrderContFromRec.City;
                Importance=Additional;
                Editable=FALSE }

    { 1100485047;2;Field  ;
                CaptionML=ENU=Phone No. (Contact);
                SourceExpr=OrderContFromRec."Phone No." + ' / ' + OrderContFromRec."Phone No. 2";
                Importance=Additional;
                Editable=FALSE }

    { 1100485048;2;Field  ;
                CaptionML=ENU=Mobile Phone No. (Contact);
                SourceExpr=OrderContFromRec."Mobile Phone No." + ' / ' + OrderContFromRec."Mobile Phone No. 2";
                Importance=Additional;
                Editable=FALSE }

    { 1100485049;2;Field  ;
                CaptionML=ENU=Phone No. Work (Contact);
                SourceExpr=OrderContFromRec."Phone No. Work" + ' / ' + OrderContFromRec."Phone No. Work 2";
                Importance=Additional;
                Editable=FALSE }

    { 1906983801;1;Group  ;
                CaptionML=ENU=To Location }

    { 43  ;2   ;Field     ;
                Name=ToLocationFld;
                SourceExpr="To Location";
                Importance=Promoted;
                Editable=ToLocationEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100485004;2;Field  ;
                CaptionML=ENU=Address Code;
                SourceExpr="To Location Address Code" }

    { 1100525015;2;Field  ;
                Name=ToLocationDescription;
                DrillDown=No;
                CaptionML=ENU=Name;
                SourceExpr="To Location Description" }

    { 45  ;2   ;Field     ;
                CaptionML=ENU=Address;
                SourceExpr="To Location Address";
                Importance=Promoted }

    { 47  ;2   ;Field     ;
                CaptionML=ENU=Address 2;
                SourceExpr="To Location Address 2" }

    { 49  ;2   ;Field     ;
                CaptionML=ENU=Post Code;
                SourceExpr="To Location Post Code" }

    { 50  ;2   ;Field     ;
                CaptionML=ENU=City;
                SourceExpr="To Location City" }

    { 1100485083;2;Field  ;
                CaptionML=ENU=Country;
                SourceExpr="To Location Country/Region" }

    { 52  ;2   ;Field     ;
                CaptionML=ENU=Contact;
                SourceExpr="To Location Contact" }

    { 1100485034;2;Field  ;
                CaptionML=ENU=Contact Phone No.;
                SourceExpr="To Location Contact Phone No";
                Importance=Standard }

    { 1100485097;2;Field  ;
                CaptionML=ENU=Employee Company Name;
                SourceExpr="To Employee Company";
                Editable=GeneralEditable }

    { 1100485099;2;Field  ;
                CaptionML=ENU=Employee No.;
                SourceExpr="To Employee No.";
                Editable=GeneralEditable;
                OnValidate=BEGIN
                             ToEmployeeNoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           LookupToEmployee(GeneralEditable);
                           ConfirmUpdateEmplInPlantLines();
                         END;
                          }

    { 1210190032;2;Field  ;
                CaptionML=ENU=Employee Nmae;
                SourceExpr=GetEmployeeName }

    { 1100485092;2;Field  ;
                SourceExpr="Shipment Method Code";
                Importance=Additional }

    { 1100485058;2;Field  ;
                CaptionML=ENU=Name (Contact);
                SourceExpr=OrderContToRec.Name;
                Importance=Additional;
                Editable=FALSE }

    { 1100485059;2;Field  ;
                CaptionML=ENU=Address (Contact);
                SourceExpr=OrderContToRec.Address;
                Importance=Additional;
                Editable=FALSE }

    { 1100485060;2;Field  ;
                CaptionML=ENU=City (Contact);
                SourceExpr=OrderContToRec.City;
                Importance=Additional;
                Editable=FALSE }

    { 1100485061;2;Field  ;
                CaptionML=ENU=Phone No. (Contact);
                SourceExpr=OrderContToRec."Phone No." + ' / ' + OrderContToRec."Phone No. 2";
                Importance=Additional;
                Editable=FALSE }

    { 1100485062;2;Field  ;
                CaptionML=ENU=Mobile Phone No. (Contact);
                SourceExpr=OrderContToRec."Mobile Phone No." + ' / ' + OrderContToRec."Mobile Phone No. 2";
                Importance=Additional;
                Editable=FALSE }

    { 1100485063;2;Field  ;
                CaptionML=ENU=Phone No. Work (Contact);
                SourceExpr=OrderContToRec."Phone No. Work" + ' / ' + OrderContToRec."Phone No. Work 2";
                Importance=Additional;
                Editable=FALSE }

    { 1905995801;1;Group  ;
                CaptionML=ENU=Rental Shift }

    { 54  ;2   ;Field     ;
                SourceExpr="Rental Shift";
                Importance=Standard;
                Editable=GeneralEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 56  ;2   ;Field     ;
                SourceExpr="Rental Startdate (To Location)";
                Importance=Promoted;
                Editable=RentalShiftDatesEditable }

    { 58  ;2   ;Field     ;
                SourceExpr="Rental Enddate (From Location)";
                Importance=Promoted;
                Editable=RentalShiftDatesEditable }

    { 1906935701;1;Group  ;
                CaptionML=ENU=Removal Advanced }

    { 1210190008;2;Field  ;
                SourceExpr="Advanced Removal";
                Editable=AdvancedRemovalEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1210190002;2;Field  ;
                SourceExpr="To Location Repair";
                Importance=Promoted;
                Editable=AdvancedRemovalFldsEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1210190006;2;Field  ;
                SourceExpr="To Location Exit";
                Importance=Promoted;
                Editable=AdvancedRemovalFldsEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1210190013;2;Field  ;
                SourceExpr="Exit Order No.";
                Editable=FALSE }

    { 1900729601;1;Group  ;
                CaptionML=ENU=Appointment }

    { 1100525000;2;Field  ;
                SourceExpr="Appointment Fixed Date";
                Importance=Promoted }

    { 1100525002;2;Field  ;
                SourceExpr="Appointment Time" }

    { 1100525004;2;Field  ;
                SourceExpr="Appointment Code" }

    { 1100525006;2;Field  ;
                DrillDown=No;
                SourceExpr="Appointment Description" }

    { 1100525008;2;Field  ;
                SourceExpr="Appointment Comment";
                Importance=Promoted }

    { 1100525023;2;Field  ;
                SourceExpr="Created on" }

    { 1100485066;2;Field  ;
                SourceExpr="Created by" }

    { 1100525010;2;Field  ;
                SourceExpr="Requested on" }

    { 1100525012;2;Field  ;
                SourceExpr="Requested by" }

    { 1100528001;2;Field  ;
                ExtendedDatatype=E-Mail;
                CaptionML=ENU=Requested by E-Mail;
                SourceExpr=UserSetup.GetUserEmail("Requested by") }

    { 1100485090;2;Field  ;
                SourceExpr="Sales Rental Order No.";
                Visible=SalesRentalOrdersVisible;
                Editable=FALSE }

    { 1210190004;0;Container;
                ContainerType=FactBoxArea }

    { 1100529900;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                PartType=Page }

    { 1210190014;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page11130012;
                PartType=Page }

    { 1100525028;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page11229911;
                Visible=ExternalTransportPlanningVisible;
                PartType=Page }

    { 1210190009;1;Part   ;
                SubPageLink=Plant Order No.=FIELD(Plant Order No.);
                PagePartID=Page11130013;
                ProviderID=1100525007;
                PartType=Page }

    { 1100525011;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1100525009;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      PlantSetup@1210190002 : Record 11012550;
      GLSetup@1100525501 : Record 98;
      UserSetup@1100528000 : Record 91;
      OrderContFromRec@1100485001 : Record 11012536;
      OrderContToRec@1100485000 : Record 11012536;
      SalesOrderPlantOrderRelRec@1100485007 : Record 11012787;
      TmpPurchOrderRec@1100485009 : TEMPORARY Record 38;
      Text001@1100485003 : TextConst 'ENU=Functionality Plant Order Picking Procedure with Bar Code Scanner not available.';
      Text002@1100485004 : TextConst 'ENU=Not allowed, Plant Order ''%1'' is linked to Plant Request ''%2'' with Status ''%3''''.';
      Text003@1100485006 : TextConst 'ENU=Note Plant Order is already present on a Transport Order.';
      Text004@1100485008 : TextConst 'ENU=Not allowed, Plant Order already released';
      Text005@1100485011 : TextConst 'ENU=Update %1 in all plant order lines?';
      DPA_IsHardFilter@1100000999 : Boolean;
      DefTransferEditable@19033520 : Boolean INDATASET;
      GeneralEditable@1100525005 : Boolean INDATASET;
      ToLocationEditable@19031161 : Boolean INDATASET;
      OrderPickingStatusEditable@1100525006 : Boolean INDATASET;
      RentalShiftDatesEditable@19014343 : Boolean INDATASET;
      AdvancedRemovalEditable@19045772 : Boolean INDATASET;
      AdvancedRemovalFldsEditable@19076306 : Boolean INDATASET;
      TransportCostFldsEditable@19079329 : Boolean INDATASET;
      DefTransferVisible@1100525002 : Boolean INDATASET;
      PlantRequestNoVisible@19034754 : Boolean INDATASET;
      DepartmentCodeVisible@19030186 : Boolean INDATASET;
      SalesRentalOrdersVisible@19007803 : Boolean INDATASET;
      Text006@1100529006 : TextConst 'ENU=External transport for %1 ''%2'': %3?';
      Text007@1100529004 : TextConst 'ENU=Reopen';
      Text19021810@19076350 : TextConst 'ENU=Items on Plant Order only available in de granule ''Plant Extended''';
      RideNoVisible@1100525000 : Boolean INDATASET;
      TranportOrderNoVisible@1100525001 : Boolean INDATASET;
      ReleaseFunctionsVisible@1100525008 : Boolean INDATASET;
      OrderPickingStatusHideValue@1100529000 : Boolean INDATASET;
      OrderPickingButtonVisible@1100529001 : Boolean INDATASET;
      OrderPickingStndActionsVisible@1100529002 : Boolean INDATASET;
      OrderPickingCustActionsVisible@1100529003 : Boolean INDATASET;
      ExternalTransportPlanningVisible@1100525004 : Boolean INDATASET;
      ShippingAgentEditable@1100529007 : Boolean INDATASET;
      gvText@1100525003 : Code[20];

    PROCEDURE ShowCreatePurchOrders@1100485005();
    VAR
      lvText001@1100485001 : TextConst 'ENU=No Purchase Order created.';
      lvText002@1100485000 : TextConst 'ENU=%1 Purchase Order(s) created. Show?';
      lvPurchOrderRec@1100485004 : Record 38;
      lvPurchOrderCounter@1100485003 : Integer;
      lvFirstPurchNo@1100485002 : Code[20];
    BEGIN
      TmpPurchOrderRec.RESET;
      TmpPurchOrderRec."Document Type" := TmpPurchOrderRec."Document Type"::Order;
      IF NOT TmpPurchOrderRec.FINDFIRST THEN
        ERROR(lvText001);

      COMMIT;
      lvPurchOrderCounter := TmpPurchOrderRec.COUNT;
      IF CONFIRM(lvText002, FALSE, TmpPurchOrderRec.COUNT) THEN BEGIN
        lvFirstPurchNo := TmpPurchOrderRec."No.";
        lvPurchOrderRec.RESET;
        lvPurchOrderRec.SETRANGE("Document Type", TmpPurchOrderRec."Document Type");
        lvPurchOrderRec.SETRANGE("No.", TmpPurchOrderRec."No.");
        IF lvPurchOrderCounter > 1 THEN BEGIN
          //* We gaan er voorlopig maar vanuit dat alle nieuwe aansluitend zijn (later evt. markeren records inbouwen)
          TmpPurchOrderRec.FINDLAST;
          lvPurchOrderRec.SETRANGE("No.", lvFirstPurchNo, TmpPurchOrderRec."No.");
        END;
        lvPurchOrderRec."Document Type" := TmpPurchOrderRec."Document Type";
        lvPurchOrderRec."No." := lvFirstPurchNo;
        PAGE.RUNMODAL(PAGE::"Purchase Order", lvPurchOrderRec);
      END;
    END;

    PROCEDURE CheckNotPostedLinkedRequest@1100485002(IErrorMess@1100485001 : Boolean) : Boolean;
    VAR
      lvPlantReqRec@1100485000 : Record 11020520;
    BEGIN
      IF "No." = '' THEN
        EXIT;

      lvPlantReqRec.SETCURRENTKEY("Plant Order No.");
      lvPlantReqRec.SETRANGE("Plant Order No.", "No.");
      lvPlantReqRec.SETRANGE(Posted, FALSE);
      IF lvPlantReqRec.FINDFIRST THEN BEGIN
        IF NOT IErrorMess THEN
          EXIT(TRUE);
        ERROR(Text002, "No.", lvPlantReqRec."No.", lvPlantReqRec.Status);
      END;

      EXIT(FALSE);
    END;

    PROCEDURE ConfirmUpdateEmplInPlantLines@1100485007();
    VAR
      lvPlantOrderLineRec@1100485000 : Record 11012557;
    BEGIN
      IF ("To Employee No." = '') THEN
        EXIT;

      lvPlantOrderLineRec.SETRANGE("Plant Order No.", "No.");
      lvPlantOrderLineRec.SETRANGE(Type, lvPlantOrderLineRec.Type::Plant);
      IF NOT lvPlantOrderLineRec.FINDFIRST THEN
        EXIT;

      lvPlantOrderLineRec.SETFILTER("To Employee No.", '<>%1', "To Employee No.");
      IF NOT lvPlantOrderLineRec.FINDFIRST THEN BEGIN
        lvPlantOrderLineRec.SETRANGE("To Employee No.");  //* Reset filter
        lvPlantOrderLineRec.SETFILTER("To Employee Company", '<>%1', "To Employee Company");
        IF NOT lvPlantOrderLineRec.FINDFIRST THEN
          EXIT;  //* On all plantorderlines the company and employee are the same as in the header
      END;

      IF NOT CONFIRM(Text005, TRUE, FIELDCAPTION("To Employee No.")) THEN
        EXIT;
      Rec.ModifyEmployeeInPlantOrderLine();
      CurrPage.UPDATE;
    END;

    PROCEDURE CopyFromWorkBudget@1210190000();
    VAR
      PlantLocation@1210190000 : Record 11012554;
      BudgetLine@1210190001 : Record 11012001;
      BudgetListFrm@1210190002 : Page 11012005;
    BEGIN
      //mg, 03-03-11: M24448
      TESTFIELD(Type, Type::Arrival);
      TESTFIELD("To Location");

      PlantLocation.GET("To Location");
      PlantLocation.TESTFIELD("Company Name", '');
      PlantLocation.TESTFIELD("Project No.");

      BudgetLine.RESET;
      BudgetLine.SETRANGE("Project No.", PlantLocation."Project No.");
      BudgetLine.SETFILTER("Cost Type", '%1|%2', BudgetLine."Cost Type"::Material, BudgetLine."Cost Type"::Plant);
      BudgetLine.SETRANGE(Advised, FALSE);
      CLEAR(BudgetListFrm);
      BudgetListFrm.SETRECORD(BudgetLine);
      BudgetListFrm.SETTABLEVIEW(BudgetLine);
      BudgetListFrm.InitSelectionCopyToPlantOrder(Rec);
      BudgetListFrm.EDITABLE(FALSE);
      BudgetListFrm.RUNMODAL;
    END;

    LOCAL PROCEDURE ToEmployeeNoOnAfterValidate@19029678();
    BEGIN
      ConfirmUpdateEmplInPlantLines();
    END;

    PROCEDURE SetEditable@1100525012();
    VAR
      lvPlantOrderLineRec@1100525001 : Record 11012557;
    BEGIN
      GeneralEditable := (Status < Status::Released);

      ToLocationEditable := GeneralEditable;
      IF ToLocationEditable THEN BEGIN
        lvPlantOrderLineRec.SETRANGE("Plant Order No.", "No.");
        lvPlantOrderLineRec.SETFILTER("Line No. Copied Need", '>0');
        IF lvPlantOrderLineRec.FINDFIRST THEN
          ToLocationEditable := FALSE;
      END;

      RentalShiftDatesEditable := ("Rental Shift" AND GeneralEditable);

      AdvancedRemovalEditable := (PlantSetup."Advanced Removal" AND (Type=Type::Removal) AND GeneralEditable);
      AdvancedRemovalFldsEditable := ("Advanced Removal" AND GeneralEditable);

      TransportCostFldsEditable := (PlantSetup."Transport Orders" AND GeneralEditable);
      DefTransferEditable := ((PlantSetup."Def. Transfer PO" = PlantSetup."Def. Transfer PO"::Yes) AND GeneralEditable);;
      ShippingAgentEditable := GeneralEditable;
      IF PlantSetup."Transport Status (Ext. Plan.)" AND ("Transport Status (Ext.)" > "Transport Status (Ext.)"::Open) THEN
        ShippingAgentEditable := FALSE;
      //DP00688.sn
      IF (Type = Type::Arrival) AND
         (PlantSetup."Order Picking Procedure" OR PlantSetup."PO-Picking Bar Code Scanner")
      THEN BEGIN
        OrderPickingStatusHideValue := FALSE;
        OrderPickingStndActionsVisible := PlantSetup."Order Picking Procedure";
        OrderPickingCustActionsVisible := PlantSetup."PO-Picking Bar Code Scanner";
        OrderPickingButtonVisible := OrderPickingStndActionsVisible OR OrderPickingCustActionsVisible;
      END ELSE BEGIN
        OrderPickingStatusHideValue := TRUE;
        OrderPickingStndActionsVisible := FALSE;
        OrderPickingCustActionsVisible := FALSE;
        OrderPickingButtonVisible := FALSE;
      END;
      //DP00688.sn
      OrderPickingStatusEditable :=
        (PlantSetup."PO-Picking Bar Code Scanner" AND GeneralEditable AND (NOT OrderPickingStatusHideValue)); //DP00688.c
    END;

    BEGIN
    {
      4PS MVOS 20100927 22452 : Added menuoption "Post and E-mail"
    }
    END.
  }
}

