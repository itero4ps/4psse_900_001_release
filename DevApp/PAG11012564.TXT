OBJECT Page 11012564 Plant Order Cost
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Plant Order Cost;
    SourceTable=Table11012558;
    DelayedInsert=Yes;
    PopulateAllFields=Yes;
    DataCaptionFields=Plant Order No.;
    PageType=List;
    AutoSplitKey=Yes;
    OnOpenPage=BEGIN
                 PlantSetupRec.GET;

                 IF "Plant Order No." <> '' THEN BEGIN
                   PlantOrderRec.GET("Plant Order No.");
                 //  MESSAGE('testing, %1',"Plant Order No." );
                   IF PlantOrderRec.Posted THEN
                     CurrPage.EDITABLE(FALSE);
                 END;
               END;

    OnNewRecord=BEGIN
                  InitRecord;
                  IF "Plant Order No." = xRec."Plant Order No." THEN
                    VALIDATE(Type, xRec.Type);
                END;

    OnInsertRecord=BEGIN
                     "Plant Order Line No." := 0;
                   END;

    OnModifyRecord=BEGIN
                     IF "Purchase Order No." <> '' THEN BEGIN
                       IF NOT CONFIRM(Text001) THEN
                         ERROR('');
                     END;
                   END;

    OnDeleteRecord=BEGIN
                     IF PlantOrderRec.GET("Plant Order No.") THEN BEGIN
                       //* Ondanks dat subform op niet editable is gezet was verwijderen toch mogelijk
                       IF PlantOrderRec.Status = PlantOrderRec.Status::Released THEN
                         PlantOrderRec.FIELDERROR(Status);
                     END;
                     IF "Purchase Order No." <> '' THEN BEGIN
                       IF NOT CONFIRM(Text002) THEN
                         ERROR('');
                     END;
                   END;

    ActionList=ACTIONS
    {
      { 1100409002;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100409001;1 ;ActionGroup;
                      CaptionML=ENU=Functions }
      { 1100409000;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Purchase Order (Cost Lines);
                      Image=MakeOrder;
                      OnAction=VAR
                                 lvText000@1100485000 : TextConst 'ENU=Do you want to create a Purchase Order (Cost Lines)?';
                                 PlantOrder@1100409000 : Record 11012556;
                               BEGIN
                                 PlantOrder.GET("Plant Order No.");
                                 CheckNotPostedLinkedRequest(PlantOrder, TRUE);
                                 IF NOT CONFIRM(lvText000,FALSE) THEN
                                   EXIT;

                                 CreatePurchaseOrders(PlantOrder, TmpPurchOrderRec);
                                 ShowCreatePurchOrders();
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 1100409004;2;Field  ;
                SourceExpr="Plant Order No.";
                Visible=FALSE;
                Editable=FALSE }

    { 2   ;2   ;Field     ;
                SourceExpr=Type;
                OnValidate=BEGIN
                             TypeOnAfterValidate;
                           END;
                            }

    { 4   ;2   ;Field     ;
                SourceExpr="No.";
                OnLookup=VAR
                           StandTextRec@11012003 : Record 7;
                           DimValRec@11012004 : Record 349;
                         BEGIN
                           CASE Type OF
                             Type::Text:
                               BEGIN
                                 StandTextRec.Code := "No.";
                                 IF PAGE.RUNMODAL(PAGE::"Standard Text Codes",StandTextRec) = ACTION::LookupOK THEN BEGIN
                                   Text := StandTextRec.Code;
                                   EXIT(TRUE);
                                 END;
                               END;
                             ELSE
                               BEGIN
                                 DimValRec.Code := "No.";
                                 DimValRec.SETRANGE("Global Dimension No.", 2);
                                 CASE Type OF
                                   Type::Hours: DimValRec.SETRANGE(Plant,DimValRec.Plant::Hours);
                                   Type::Transport: DimValRec.SETRANGE(Plant,DimValRec.Plant::Transport);
                                   Type::"Sundry Costs": DimValRec.SETRANGE(Plant,DimValRec.Plant::Sundry);
                                   Type::Damage: DimValRec.SETRANGE(Plant,DimValRec.Plant::Damage);
                                 END;
                                 IF PAGE.RUNMODAL(PAGE::"Cost Object List",DimValRec) = ACTION::LookupOK THEN BEGIN
                                   Text := DimValRec.Code;
                                   EXIT(TRUE);
                                 END;
                               END;
                           END;
                         END;
                          }

    { 1210190000;2;Field  ;
                SourceExpr="Plant Type" }

    { 1210190002;2;Field  ;
                SourceExpr="Plant No." }

    { 6   ;2   ;Field     ;
                SourceExpr=Description }

    { 1100529000;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 1100525003;2;Field  ;
                SourceExpr=Element;
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                SourceExpr=Quantity }

    { 10  ;2   ;Field     ;
                SourceExpr="Unit of Measure" }

    { 12  ;2   ;Field     ;
                SourceExpr=Price }

    { 14  ;2   ;Field     ;
                SourceExpr=Amount }

    { 16  ;2   ;Field     ;
                SourceExpr=Date }

    { 1100485000;2;Field  ;
                SourceExpr="Vendor No." }

    { 1100485002;2;Field  ;
                SourceExpr="Purchase Order No." }

    { 1100409003;2;Field  ;
                SourceExpr="Location Related";
                Visible=FALSE }

    { 1210190001;0;Container;
                ContainerType=FactBoxArea }

    { 1210190003;1;Part   ;
                SubPageLink=Plant Order No.=FIELD(Plant Order No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11130011;
                PartType=Page }

  }
  CODE
  {
    VAR
      PlantSetupRec@1100485001 : Record 11012550;
      PlantOrderRec@1100485000 : Record 11012556;
      Text000@1100485002 : TextConst 'ENU=It is not recommende to enter Transport Cost here, because %1 ''%2'' is on.';
      Text001@1100485003 : TextConst 'ENU=Already a Purchase Order created, Cost Line will be modified. Are you sure?';
      Text002@1100485004 : TextConst 'ENU=Already a Purchase Order created, Cost Line will be deleted. Are you sure?';
      Text003@1100409000 : TextConst 'ENU=Not allowed, Plant Order ''%1'' is linked to Plant Request ''%2'' with Status ''%3''''.';
      TmpPurchOrderRec@1100409001 : TEMPORARY Record 38;

    PROCEDURE TotalWeightPO@1100525000() : Decimal;
    VAR
      lvPlantOrderLineRec@1100525000 : Record 11012557;
    BEGIN
      lvPlantOrderLineRec."Plant Order No." := "Plant Order No.";
      EXIT(lvPlantOrderLineRec.PlantOrderTotalWeight(FALSE));
    END;

    PROCEDURE CreatePurchaseOrders@1100485000(IPlantOrderRec@1100485001 : Record 11012556;VAR VarTmpPurchOrderRec@1100485002 : TEMPORARY Record 38);
    VAR
      PlantOrderCostLine@1100525000 : Record 11012558;
      lvPlantOrderCostMgtCU@1100485000 : Codeunit 11012581;
    BEGIN
      PlantOrderCostLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(PlantOrderCostLine);
      lvPlantOrderCostMgtCU.RunCreatePurchaseOrders(IPlantOrderRec, PlantOrderCostLine);
      lvPlantOrderCostMgtCU.RunGetCreatedPurchaseOrders(VarTmpPurchOrderRec);
    END;

    PROCEDURE ShowCreatePurchOrders@1100485005();
    VAR
      lvText001@1100485001 : TextConst 'ENU=No Purchase Order created.';
      lvText002@1100485000 : TextConst 'ENU=%1 Purchase Order(s) created. Show?';
      lvPurchOrderRec@1100485004 : Record 38;
      lvPurchOrderCounter@1100485003 : Integer;
      lvFirstPurchNo@1100485002 : Code[20];
    BEGIN
      TmpPurchOrderRec.RESET;
      TmpPurchOrderRec."Document Type" := TmpPurchOrderRec."Document Type"::Order;
      IF NOT TmpPurchOrderRec.FINDFIRST THEN
        ERROR(lvText001);

      COMMIT;
      lvPurchOrderCounter := TmpPurchOrderRec.COUNT;
      IF CONFIRM(lvText002, FALSE, TmpPurchOrderRec.COUNT) THEN BEGIN
        lvFirstPurchNo := TmpPurchOrderRec."No.";
        lvPurchOrderRec.RESET;
        lvPurchOrderRec.SETRANGE("Document Type", TmpPurchOrderRec."Document Type");
        lvPurchOrderRec.SETRANGE("No.", TmpPurchOrderRec."No.");
        IF lvPurchOrderCounter > 1 THEN BEGIN
          //* We gaan er voorlopig maar vanuit dat alle nieuwe aansluitend zijn (later evt. markeren records inbouwen)
          TmpPurchOrderRec.FINDLAST;
          lvPurchOrderRec.SETRANGE("No.", lvFirstPurchNo, TmpPurchOrderRec."No.");
        END;
        lvPurchOrderRec."Document Type" := TmpPurchOrderRec."Document Type";
        lvPurchOrderRec."No." := lvFirstPurchNo;
        PAGE.RUNMODAL(PAGE::"Purchase Order", lvPurchOrderRec);
      END;
    END;

    PROCEDURE CheckNotPostedLinkedRequest@1100485002(PlantOrder@1100409000 : Record 11012556;IErrorMess@1100485001 : Boolean) : Boolean;
    VAR
      lvPlantReqRec@1100485000 : Record 11020520;
    BEGIN
      IF PlantOrder."No." = '' THEN
        EXIT;

      lvPlantReqRec.SETCURRENTKEY("Plant Order No.");
      lvPlantReqRec.SETRANGE("Plant Order No.", PlantOrder."No.");
      lvPlantReqRec.SETRANGE(Posted, FALSE);
      IF lvPlantReqRec.FINDFIRST THEN BEGIN
        IF NOT IErrorMess THEN
          EXIT(TRUE);
        ERROR(Text003, PlantOrder."No.", lvPlantReqRec."No.", lvPlantReqRec.Status);
      END;

      EXIT(FALSE);
    END;

    LOCAL PROCEDURE TypeOnAfterValidate@19069045();
    BEGIN
      IF (Type = Type::Transport) AND PlantSetupRec."Transport Orders" THEN
        MESSAGE(Text000, PlantSetupRec.TABLECAPTION, PlantSetupRec.FIELDCAPTION("Transport Orders"));
    END;

    LOCAL PROCEDURE PlantTypeOnBeforeInput@19048251();
    BEGIN
      //CurrPage."Plant Type".UPDATEEDITABLE := ((Type <> Type::Text) AND ("Plant Order Line No." = 0));
    END;

    LOCAL PROCEDURE PlantNoOnBeforeInput@19052532();
    BEGIN
      //CurrPage."Plant No.".UPDATEEDITABLE := ((Type <> Type::Text) AND ("Plant Order Line No." = 0));
    END;

    BEGIN
    END.
  }
}

