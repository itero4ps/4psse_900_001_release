OBJECT Page 11012565 Exit Order Plant Lines
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Exit Order Plant Lines;
    SourceTable=Table11012560;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    RefreshOnActivate=Yes;
    OnInit=BEGIN
             "From Rate CodeVisible" := TRUE;
           END;

    OnOpenPage=BEGIN
                 PlantSetupRec.GET;
                 "From Rate CodeVisible" := PlantSetupRec."Rate Codes";
               END;

    OnAfterGetRecord=BEGIN
                       SETFILTER("Date Filter",'..%1',"Exit-date");
                       CALCFIELDS(Bulk,"Stock Plant No. on Location","Stock Plant Type on Location");
                       OnAfterGetCurrRecord;

                       //DP00241.sn (19335)
                       ActionFAListVisible := TRUE;
                       IF "Exit-order No." <> '' THEN BEGIN
                         OrderRec.GET("Exit-order No.");
                         IF OrderRec.Posted THEN
                           ActionFAListVisible := FALSE;
                       END;
                       //DP00241.en (19335)
                     END;

    OnNewRecord=BEGIN
                  InitRecord;
                  Type := xRec.Type;
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=ENU=&Line }
      { 1100529003;2 ;Action    ;
                      CaptionML=ENU=Comments;
                      Image=ViewComments;
                      OnAction=BEGIN
                                 CommentSheet(TRUE);  //*DP00183
                               END;
                                }
      { 1100529004;2 ;Action    ;
                      CaptionML=ENU=Documents;
                      Image=Documents;
                      OnAction=BEGIN
                                 ShowDocuments();  //*DP00183
                               END;
                                }
      { 1903098604;2 ;Action    ;
                      CaptionML=ENU=Inventory on From Location;
                      Image=CreateInventoryPickup;
                      OnAction=BEGIN
                                 //This functionality was copied from page #11012566. Unsupported part was commented. Please check it.
                                 {CurrPage.ExitOrderLines.PAGE.}
                                 StockOnFromLocation;
                               END;
                                }
      { 1100529007;2 ;Action    ;
                      Name=ActionFAList;
                      CaptionML=ENU=Fixed Asset List;
                      Visible=ActionFAListVisible;
                      Image=FixedAssetLedger;
                      OnAction=BEGIN
                                 //DP00241 (19335)
                                 ShowFixedAsset();
                               END;
                                }
      { 1100525000;2 ;Action    ;
                      CaptionML=ENU=Exit-order Bulk Plant;
                      Image=MakeOrder;
                      OnAction=BEGIN
                                 //This functionality was copied from page #11012566. Unsupported part was commented. Please check it.
                                 {CurrPage.ExitOrderLines.PAGE.}
                                 CallExitBulkPlantForm();
                               END;
                                }
      { 1100529002;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1100529006;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Partly Transfer to New Order;
                      Image=MakeOrder;
                      OnAction=VAR
                                 ExitOrderLine@1100529005 : Record 11012560;
                                 InsertExitOrderCU@1100529001 : Codeunit 11012558;
                                 NewOrderNo@1100529000 : Code[20];
                               BEGIN
                                 //*DP00183
                                 CurrPage.SETSELECTIONFILTER(ExitOrderLine);

                                 OrderRec.GET("Exit-order No.");
                                 NewOrderNo := InsertExitOrderCU.RunPartlyMoveToNewOrder(OrderRec, ExitOrderLine);
                                 IF NewOrderNo <> '' THEN BEGIN
                                   COMMIT;
                                   CurrPage.UPDATE(FALSE);  //Update orderlines ('delete' copied lines)
                                   IF OrderRec.GET(NewOrderNo) THEN
                                     PAGE.RUN(PAGE::"Exit Order", OrderRec);  //Open new card with new order
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="From Location" }

    { 30  ;2   ;Field     ;
                SourceExpr="Exit-date";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr=Type }

    { 6   ;2   ;Field     ;
                AssistEdit=Yes;
                SourceExpr="Plant Type";
                OnValidate=BEGIN
                             PlantTypeOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               LookupPlantInventory(1);
                             END;
                              }

    { 8   ;2   ;Field     ;
                SourceExpr="No.";
                OnValidate=BEGIN
                             NoOnAfterValidate;
                           END;

                OnLookup=VAR
                           StandTextRec@11012003 : Record 7;
                         BEGIN
                           CASE Type OF
                             Type::Plant:
                               LookupPlantInventory(2);
                             Type::Text:
                               BEGIN
                                 StandTextRec.Code := "No.";
                                 IF PAGE.RUNMODAL(PAGE::"Standard Text Codes",StandTextRec) = ACTION::LookupOK THEN BEGIN
                                   Text := StandTextRec.Code;
                                   EXIT(TRUE);
                                 END;
                               END;
                           END;
                         END;
                          }

    { 10  ;2   ;Field     ;
                SourceExpr=Description }

    { 1100409000;2;Field  ;
                SourceExpr="Stnd. Plant Items";
                Style=Attention;
                StyleExpr=TRUE;
                OnDrillDown=BEGIN
                              OnDrillDownStndPlantItems();  //DP00670
                            END;
                             }

    { 1100409001;2;Field  ;
                SourceExpr=Element;
                Visible=FALSE }

    { 1100485010;2;Field  ;
                SourceExpr="Vendor No." }

    { 1100485008;2;Field  ;
                SourceExpr="From Rate Code";
                Visible="From Rate CodeVisible";
                OnLookup=BEGIN
                           LookupPlantInventory(3);
                         END;
                          }

    { 12  ;2   ;Field     ;
                SourceExpr=Bulk;
                Visible=FALSE }

    { 1100525008;2;Field  ;
                SourceExpr="Reason Code" }

    { 14  ;2   ;Field     ;
                SourceExpr=Quantity }

    { 16  ;2   ;Field     ;
                SourceExpr="Unit of Measure" }

    { 1100485000;2;Field  ;
                SourceExpr="Quantity Bulk Plant";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              COMMIT;
                              CallExitBulkPlantForm();
                              CurrPage.UPDATE(FALSE);
                            END;
                             }

    { 18  ;2   ;Field     ;
                SourceExpr=Price }

    { 20  ;2   ;Field     ;
                SourceExpr=Amount }

    { 1100485012;2;Field  ;
                SourceExpr="BPM Amount";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Current Price" }

    { 1100525006;2;Field  ;
                SourceExpr="Settlement Value Exit-Order" }

    { 24  ;2   ;Field     ;
                SourceExpr="Purchase Price" }

    { 26  ;2   ;Field     ;
                SourceExpr="Stock Plant No. on Location";
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                SourceExpr="Stock Plant Type on Location";
                Visible=FALSE }

    { 1100485002;2;Field  ;
                SourceExpr="To Item Inventory";
                Visible=FALSE;
                OnValidate=BEGIN
                             ToItemInventoryOnAfterValidate;
                           END;
                            }

    { 1100485004;2;Field  ;
                SourceExpr="Item No.";
                Visible=FALSE;
                Editable="Item No.EDITABLE" }

    { 1100485006;2;Field  ;
                SourceExpr="Location Code";
                Visible=FALSE;
                Editable="Location CodeEDITABLE" }

    { 1100529001;2;Field  ;
                CaptionML=ENU=Comments;
                SourceExpr=HasCommentLines();
                Visible=FALSE;
                OnDrillDown=BEGIN
                              CommentSheet(TRUE);  //*DP00183
                            END;
                             }

    { 1100529000;2;Field  ;
                CaptionML=ENU=Documents;
                SourceExpr=HasDocumentLinks();
                Visible=FALSE;
                OnDrillDown=BEGIN
                              ShowDocuments();  //*DP00183
                            END;
                             }

  }
  CODE
  {
    VAR
      PlantSetupRec@1100485000 : Record 11012550;
      OrderRec@11012000 : Record 11012559;
      PlantRec@1100485001 : Record 11012551;
      PlantNoRec@1100485002 : Record 11012552;
      Text000@1100485003 : TextConst 'ENU=Note, concerns external plant';
      "From Rate CodeVisible"@19023073 : Boolean INDATASET;
      "Item No.EDITABLE"@1210190000 : Boolean;
      "Location CodeEDITABLE"@1210190001 : Boolean;
      ActionFAListVisible@1100529000 : Boolean INDATASET;

    PROCEDURE GetExitOrderHead@1100485002();
    BEGIN
      IF "Exit-order No." <> '' THEN
        OrderRec.GET("Exit-order No.");
    END;

    PROCEDURE StockOnFromLocation@1();
    VAR
      lvInventoryRec@1100485000 : Record 11012555;
    BEGIN
      lvInventoryRec.RESET;
      lvInventoryRec.SETRANGE(Removed,FALSE);
      lvInventoryRec.SETRANGE(Location,"From Location");
      lvInventoryRec.Removed := FALSE;
      lvInventoryRec.Location := "From Location";
      lvInventoryRec."Plant Type" := "Plant Type";
      lvInventoryRec."Plant No." := "No.";
      PAGE.RUN(PAGE::"Plant Inventory",lvInventoryRec);
    END;

    PROCEDURE CallExitBulkPlantForm@1100485000();
    BEGIN
      ExitOrderBulkPlant();
    END;

    PROCEDURE LookupPlantInventory@1100485001(ILevel@1100485003 : Integer);
    VAR
      lvInventoryRec@1100485001 : Record 11012555;
      lvInventoryPage@1100525000 : Page 11012559;
      lvDetails@1100485002 : 'InventEntry,PlantType,PlantNo,RateCode';
    BEGIN

      //* Level: 1-Plant Type, 2-Plant No., 3-Rate Code
      GetExitOrderHead();
      lvInventoryRec.SETRANGE(Removed,FALSE);
      lvInventoryRec.SETRANGE(Location,"From Location");
      IF (ILevel = 2) OR (ILevel = 3) THEN
        lvInventoryRec.SETRANGE("Plant Type", "Plant Type");
      IF (ILevel = 3) THEN
        lvInventoryRec.SETRANGE("Plant No.", "No.");
      IF (OrderRec.Type = OrderRec.Type::External) OR (OrderRec."Vendor No." <> '') THEN
        lvInventoryRec.SETFILTER("Vendor No.",'%1|%2',OrderRec."Vendor No.",''); //Also empty because of bulk with plantno. is '0'
      IF ("Exit-date" <> 0D) THEN
        lvInventoryRec.SETFILTER("Present from",'..%1',"Exit-date");
      lvInventoryRec.Removed := FALSE;
      lvInventoryRec.Location := "From Location";
      lvInventoryRec."Plant Type" := "Plant Type";
      lvInventoryRec."Plant No." := "No.";
      IF NOT PlantSetupRec."Rate Codes" THEN
        lvInventoryPage.SetDetailSelection(lvDetails::PlantNo)
      ELSE BEGIN
        lvInventoryRec."Rate Code" := "From Rate Code";
        lvInventoryPage.SetDetailSelection(lvDetails::RateCode);
      END;
      lvInventoryPage.SETTABLEVIEW(lvInventoryRec);
      lvInventoryPage.SETRECORD(lvInventoryRec);
      lvInventoryPage.LOOKUPMODE := TRUE;
      IF lvInventoryPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
        lvInventoryPage.GETRECORD(lvInventoryRec);
        lvInventoryPage.GetDetailSelection(lvDetails);
        IF (ILevel = 1) THEN
          VALIDATE("Plant Type",lvInventoryRec."Plant Type");
        IF ((ILevel = 1) OR (ILevel = 2)) AND (lvDetails <> lvDetails::PlantType) THEN
          VALIDATE("No.",lvInventoryRec."Plant No.");
        IF ((ILevel = 1) OR (ILevel = 2) OR (ILevel = 3)) AND (lvDetails = lvDetails::RateCode) THEN
          VALIDATE("From Rate Code",lvInventoryRec."Rate Code");
      END;
    END;

    LOCAL PROCEDURE PlantTypeOnAfterValidate@19013868();
    BEGIN
      CALCFIELDS(Bulk,"Current Price");
      IF ("Plant Type" <> '') AND Bulk AND (Type = Type::Plant) THEN BEGIN
        PlantRec.GET("Plant Type");
        IF PlantRec.External THEN BEGIN
          OrderRec.GET("Exit-order No.");
          IF OrderRec.Type <> OrderRec.Type::External THEN
            MESSAGE(Text000);
        END;
      END;
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      CALCFIELDS(Bulk,"Purchase Price");
      IF ("No." <> '') AND (NOT Bulk) AND (Type = Type::Plant) THEN BEGIN
        PlantNoRec.GET("Plant Type", "No.");
        IF PlantNoRec.External THEN BEGIN
          OrderRec.GET("Exit-order No.");
          IF OrderRec.Type <> OrderRec.Type::External THEN
            MESSAGE(Text000);
        END;
      END;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      SETFILTER("Date Filter",'..%1',"Exit-date");
      CALCFIELDS("Order Plant Amount", "Order Cost Amount");
      ToItemInventoryOnAfterValidate;
    END;

    LOCAL PROCEDURE FromRateCodeOnAfterInput@19020096(VAR Text@19020097 : Text[1024]);
    VAR
      PlantRateCodeRec@1100525000 : Record 11020502;
    BEGIN
      PlantRateCodeRec.ExpandRateCodeOnInput(Text, "From Location", '');
    END;

    PROCEDURE ToItemInventoryOnAfterValidate@1210190000();
    BEGIN
      "Item No.EDITABLE" := "To Item Inventory";
      "Location CodeEDITABLE" := "To Item Inventory";
    END;

    BEGIN
    END.
  }
}

