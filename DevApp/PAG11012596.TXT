OBJECT Page 11012596 Plant Hour Rates
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Plant Hour Rates;
    SourceTable=Table11012567;
    DelayedInsert=Yes;
    SourceTableView=WHERE(Rental Type=CONST(Plant Hours),
                          Plant No.=FILTER(''));
    DataCaptionFields=Plant Type;
    PageType=List;
    OnOpenPage=BEGIN
                 PlantSetupRec.GET;
                 GLSetup.GET;
               END;

    OnAfterGetRecord=BEGIN
                       CalcfieldRateUnit();
                       DetermineCalculatedRate();
                       OnAfterGetCurrRecord;
                       RentalRateHoursOnFormat;
                       RentalRateExternalHoursOnForma;
                     END;

    OnNewRecord=BEGIN
                  "Rental Type" := "Rental Type"::"Plant Hours";
                  IF NOT PlantTypeRec.GET("Plant Type") THEN
                    PlantTypeRec.INIT;
                  "Expected Occupation Perc." := PlantTypeRec."Expected Occupation Perc.";
                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=BEGIN
                     VALIDATE("Rental Type","Rental Type"::"Plant Hours");
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100485001;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1100485002;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Update Rate on Components;
                      Image=UpdateUnitCost;
                      OnAction=VAR
                                 lvRentalRateRec@1210190000 : Record 11012567;
                                 lvUpdateRatesReport@1210190001 : Report 11012580;
                               BEGIN
                                 lvRentalRateRec.FILTERGROUP := 9;
                                 lvRentalRateRec.SETRANGE("Rental Type","Rental Type"::"Plant Hours");
                                 //*In filtergroep 9 zodat men zeker geen andere kan bijwerken
                                 lvRentalRateRec.FILTERGROUP := 0;
                                 lvRentalRateRec.SETRANGE("Rental Type","Rental Type"::"Plant Hours");  //* In filtergroep 0 zodat men het ook op het scherm ziet
                                 lvRentalRateRec.SETRANGE("Plant Type","Plant Type");
                                 lvRentalRateRec.SETRANGE("Starting Date","Starting Date");
                                 lvUpdateRatesReport.SETTABLEVIEW(lvRentalRateRec);
                                 lvUpdateRatesReport.RUNMODAL;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100525001;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100485000;1 ;Action    ;
                      CaptionML=ENU=Rate &Components;
                      Promoted=Yes;
                      Image=ViewPage;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lvRateCompRec@1210190000 : Record 11012585;
                                 lvRateCompFrm@1210190001 : Page 11012618;
                               BEGIN
                                 IF NOT Rec.GET("Rental Type","Plant Type","Plant No.","Starting Date") THEN
                                   ERROR(Text000);

                                 lvRateCompRec.FILTERGROUP := 4;
                                 lvRateCompRec.SETRANGE("Rental Type","Rental Type");
                                 lvRateCompRec.SETRANGE("Plant Type","Plant Type");
                                 lvRateCompRec.SETRANGE("Plant No.","Plant No.");
                                 lvRateCompRec.SETRANGE("Starting Date","Starting Date");
                                 lvRateCompRec.FILTERGROUP := 0;
                                 lvRateCompFrm.SETTABLEVIEW(lvRateCompRec);
                                 lvRateCompFrm.RUNMODAL;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Rental Type";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr="Plant Type";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr="Plant Description";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                SourceExpr="Starting Date" }

    { 1100525006;2;Field  ;
                SourceExpr="Ending Date" }

    { 1100525000;2;Field  ;
                SourceExpr="Expected Occupation Perc.";
                OnValidate=BEGIN
                             ExpectedOccupationPercOnAfterV;
                           END;
                            }

    { 1100485003;2;Field  ;
                CaptionML=ENU=Internal Hour Rate on Components;
                SourceExpr="Internal Rate on Components";
                OnDrillDown=BEGIN
                              DrillDownRateComponents();
                              CurrPage.UPDATE(FALSE);
                            END;
                             }

    { 1100525002;2;Field  ;
                CaptionML=ENU=Internal Hour Rate (Calc.);
                SourceExpr=InternalRateCalc;
                AutoFormatType=2;
                Editable=FALSE }

    { 10  ;2   ;Field     ;
                BlankZero=No;
                SourceExpr="Rental Rate (Hours)" }

    { 1100485005;2;Field  ;
                CaptionML=ENU=External Hour Rate on Components;
                SourceExpr="External Rate on Components";
                OnDrillDown=BEGIN
                              DrillDownRateComponents();
                              CurrPage.UPDATE(FALSE);
                            END;
                             }

    { 1100525004;2;Field  ;
                CaptionML=ENU=External Rate (Calc.);
                SourceExpr=ExternalRateCalc;
                AutoFormatType=2;
                Editable=FALSE }

    { 1100485009;2;Field  ;
                BlankZero=No;
                SourceExpr="Rental Rate External (Hours)" }

    { 1100525003;2;Field  ;
                SourceExpr="Cost Price";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      Text000@1100485000 : TextConst 'ENU=Rate Components only allowed for existing Rates.';
      GLSetup@1100525000 : Record 98;
      PlantSetupRec@1100485001 : Record 11012550;
      PlantTypeRec@1100525003 : Record 11012551;
      InternalRateCalc@1100525002 : Decimal;
      ExternalRateCalc@1100525001 : Decimal;
      "Rental Rate (Hours)Emphasize"@19028448 : Boolean INDATASET;
      RentalRateExternalHoursEmphasi@19008988 : Boolean INDATASET;

    PROCEDURE DrillDownRateComponents@1210190000();
    VAR
      lvRateCompRec@1210190001 : Record 11012585;
      lvRateCompFrm@1210190000 : Page 11012618;
    BEGIN
      lvRateCompRec.FILTERGROUP := 4;
      lvRateCompRec.SETRANGE("Rental Type","Rental Type");
      lvRateCompRec.SETRANGE("Plant Type","Plant Type");
      lvRateCompRec.SETRANGE("Plant No.","Plant No.");
      lvRateCompRec.SETRANGE("Starting Date","Starting Date");
      lvRateCompRec.FILTERGROUP := 0;
      lvRateCompFrm.SETTABLEVIEW(lvRateCompRec);
      lvRateCompFrm.RUNMODAL;
    END;

    PROCEDURE DetermineCalculatedRate@1210190001();
    BEGIN
      CALCFIELDS("Internal Rate on Components","External Rate on Components");

      InternalRateCalc := "Internal Rate on Components";
      ExternalRateCalc := "External Rate on Components";
      IF ("Expected Occupation Perc." <> 0) THEN BEGIN
        InternalRateCalc := InternalRateCalc * (100 / "Expected Occupation Perc.");
        ExternalRateCalc := ExternalRateCalc * (100 / "Expected Occupation Perc.");
      END;
      InternalRateCalc := ROUND(InternalRateCalc, GLSetup."Unit-Amount Rounding Precision");
      ExternalRateCalc := ROUND(ExternalRateCalc, GLSetup."Unit-Amount Rounding Precision");
    END;

    LOCAL PROCEDURE ExpectedOccupationPercOnAfterV@19033681();
    BEGIN
      DetermineCalculatedRate();
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      CalcfieldRateUnit();
      DetermineCalculatedRate();
    END;

    LOCAL PROCEDURE RentalRateHoursOnFormat@19058785();
    BEGIN
      IF ("Rental Rate (Hours)" = 0) THEN
        "Rental Rate (Hours)Emphasize" := TRUE;
    END;

    LOCAL PROCEDURE RentalRateExternalHoursOnForma@19001984();
    BEGIN
      IF ("Rental Rate External (Hours)" = 0) THEN
        RentalRateExternalHoursEmphasi := TRUE;
    END;

    BEGIN
    END.
  }
}

