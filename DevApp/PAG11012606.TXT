OBJECT Page 11012606 Plant Need List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    Permissions=TableData 11020521=r;
    CaptionML=ENU=Plant Need List;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11012579;
    PageType=List;
    OnOpenPage=BEGIN
                 IF CopyAllowed THEN
                   CurrPage.CAPTION := Text001;
                 IF MaintainAllowed THEN
                   CurrPage.CAPTION := Text002;
               END;

    OnAfterGetRecord=BEGIN
                       FinishedEditable := (CopyAllowed OR MaintainAllowed) AND ("Document No." = '');

                       QuantityToCopyEditable := (NOT Finished) AND (CopyAllowed OR MaintainAllowed) AND ("Document No." = '');

                       DeleteRemainderEditable := (Finished) OR ((NOT CopyAllowed) AND (NOT MaintainAllowed)) OR ("Document No." <> '') OR
                                                  ("Quantity To Copy" = 0) OR ("Quantity To Copy" >= (Quantity - "Copied Quantity"))
                     END;

    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::LookupOK THEN
                           LookupOKOnPush;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210190000;1;Group  ;
                GroupType=Repeater }

    { 1210190001;2;Field  ;
                SourceExpr=Location;
                Editable=FALSE }

    { 1210190003;2;Field  ;
                SourceExpr="Plant Type";
                Editable=FALSE }

    { 1210190019;2;Field  ;
                SourceExpr="Plant Type Description";
                Editable=FALSE }

    { 1210190005;2;Field  ;
                SourceExpr="Starting Date";
                Editable=FALSE }

    { 1210190007;2;Field  ;
                SourceExpr="Ending Date";
                Editable=FALSE }

    { 1210190009;2;Field  ;
                SourceExpr=Quantity;
                Editable=FALSE }

    { 1210190017;2;Field  ;
                SourceExpr="Unit of Measure";
                Editable=FALSE }

    { 1100525000;2;Field  ;
                CaptionML=ENU=Copied Quantity (Request);
                DecimalPlaces=0:5;
                SourceExpr=CopiedQuantityRequest() }

    { 1210190021;2;Field  ;
                SourceExpr="Copied Quantity";
                Editable=FALSE;
                DrillDownPageID=Plant Order Line List }

    { 1210190016;2;Field  ;
                SourceExpr="Quantity To Copy";
                Editable=QuantityToCopyEDITABLE;
                OnValidate=BEGIN
                             IF "Quantity To Copy" = 0 THEN BEGIN
                                 Finished := TRUE;
                                 "Delete Remainder" := FALSE;
                             END ELSE BEGIN
                               IF "Quantity To Copy" < (Quantity - "Copied Quantity") THEN BEGIN
                                 IF CONFIRM(Text003,FALSE) THEN
                                   "Delete Remainder" := TRUE
                                 ELSE
                                   "Delete Remainder" := FALSE;
                               END;
                               IF "Quantity To Copy" > (Quantity - "Copied Quantity") THEN BEGIN
                                 "Delete Remainder" := FALSE;
                                 MESSAGE(Text004);
                               END;
                             END;
                           END;
                            }

    { 1210190015;2;Field  ;
                SourceExpr="Delete Remainder";
                Editable=DeleteRemainderEditable }

    { 1210190024;2;Field  ;
                SourceExpr=Finished;
                Editable=FinishedEDITABLE;
                OnValidate=BEGIN
                             IF Finished THEN BEGIN
                               "Quantity To Copy" := 0;
                               "Delete Remainder" := FALSE;
                             END ELSE BEGIN
                               "Quantity To Copy" := Quantity - "Copied Quantity";
                               IF "Quantity To Copy" < 0 THEN
                                 "Quantity To Copy" := 0;
                               "Delete Remainder" := FALSE;
                             END;

                             QuantityToCopyEditable := (NOT Finished) AND (CopyAllowed OR MaintainAllowed) AND ("Document No." = '');

                             DeleteRemainderEditable := (Finished) OR ((NOT CopyAllowed) AND (NOT MaintainAllowed)) OR ("Document No." <> '') OR
                                                        ("Quantity To Copy" = 0) OR ("Quantity To Copy" >= (Quantity - "Copied Quantity"))
                           END;
                            }

  }
  CODE
  {
    VAR
      PlantOrderRec@1210190000 : Record 11012556;
      PlantRequestRec@1210190001 : Record 11020520;
      PlantReqLineRec@1100525002 : Record 11020521;
      PlantOrderNo@1210190002 : Code[20];
      PlantToLocation@1100525000 : Code[20];
      PlantRequestNo@1100525001 : Code[20];
      CopyAllowed@1210190003 : Boolean;
      Text001@1210190010 : TextConst 'ENU=Copy Plant Need';
      Text002@1210190011 : TextConst 'ENU=Finish Plant Need';
      Text003@1210190005 : TextConst 'ENU=Delete the remaining reservation?';
      Text004@1210190006 : TextConst 'ENU=Note, there will be copied more than is reserved';
      MaintainAllowed@1210190007 : Boolean;
      FinishedEditable@1210190004 : Boolean INDATASET;
      QuantityToCopyEditable@1210190008 : Boolean INDATASET;
      DeleteRemainderEditable@1210190009 : Boolean INDATASET;

    PROCEDURE InitCopyProcess@1210190001(IOrderNo@1210190002 : Code[20]);
    BEGIN
      IF PlantOrderRec.GET(IOrderNo) THEN BEGIN
        IF (NOT PlantOrderRec.Posted) AND (PlantOrderRec."To Location" <> '') THEN
          CopyAllowed := TRUE;
        PlantOrderNo := IOrderNo;
        PlantToLocation := PlantOrderRec."To Location";
      END;
    END;

    PROCEDURE InitCopyProcessFromRequest@1100525000(IRequestNo@1210190002 : Code[20]);
    BEGIN
      IF PlantRequestRec.GET(IRequestNo) THEN BEGIN
        IF (NOT PlantRequestRec.Posted) AND (PlantRequestRec.Status <= PlantRequestRec.Status::Requested) THEN
          CopyAllowed := TRUE;
        PlantRequestNo := IRequestNo;
        PlantToLocation := '';  //* Also another location is allowed (see call 17635)
      END;
    END;

    PROCEDURE InitMaintainProcess@1210190000();
    BEGIN
      MaintainAllowed := TRUE;
    END;

    PROCEDURE CopyLines@1210190002();
    VAR
      lvSelectedRec@1210190004 : Record 11012579;
    BEGIN
      // Copy the selected lines to the Plant Order
      CurrPage.SETSELECTIONFILTER(lvSelectedRec);

      IF PlantToLocation <> '' THEN
        lvSelectedRec.SETRANGE(Location, PlantToLocation);
      lvSelectedRec.SETRANGE(Finished, FALSE);
      lvSelectedRec.SETRANGE("Document No.", '');  //* Als vanuit verkoopofferte/order (verhuurcontract) dan overslaan
      IF NOT lvSelectedRec.FINDFIRST THEN
        EXIT;

      IF PlantOrderNo <> '' THEN
        CopyLinesToPlantOrder(lvSelectedRec, PlantOrderNo)
      ELSE BEGIN
        IF PlantRequestNo <> '' THEN
          CopyLinesToPlantRequest(lvSelectedRec, PlantRequestNo);
      END;
    END;

    PROCEDURE CopiedQuantityRequest@1100525001() : Decimal;
    BEGIN
      IF NOT PlantReqLineRec.READPERMISSION THEN
        EXIT(0);
      EXIT(PlantReqLineRec.NotPostedPlantNeedCopiedQuan(Location, "Line No.", ''));
    END;

    LOCAL PROCEDURE LookupOKOnPush@19031339();
    BEGIN
      IF CopyAllowed THEN
        CopyLines();
    END;

    BEGIN
    END.
  }
}

