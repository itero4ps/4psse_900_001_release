OBJECT Page 11012608 Plant Planning
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Plant Planning (available);
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table11012551;
    PageType=ListPlus;
    OnInit=BEGIN
             CountNotPosted := TRUE;
             CountPlantNeed := TRUE;
             CountExpectedReturn := TRUE;
             PlantNeedVisible := TRUE;
           END;

    OnOpenPage=BEGIN
                 PlantSetup.GET;
                 PlantSetup.TESTFIELD("Rental Depot");
                 DefRentalDepot := PlantSetup.GetRentalDepot();  //*DPA.n
                 IF DefRentalDepot = '' THEN;
                   PlantSetup.TESTFIELD("Rental Depot");
                 ValidateDepotFilter(FALSE);

                 MATRIX_MaximumSetLength := 12;
                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                 UpdateMatrixSubForm;
               END;

    ActionList=ACTIONS
    {
      { 1100528702;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100528730;1 ;ActionGroup;
                      CaptionML=ENU=Planning }
      { 1100528731;2 ;Action    ;
                      CaptionML=ENU=Plant Need;
                      RunObject=Page 11130066;
                      Visible=PlantNeedVisible;
                      Image=NewResource }
      { 1100528710;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528707;1 ;Action    ;
                      CaptionML=ENU=Previous Set;
                      ToolTipML=ENU=Previous Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MATRIX_Step@1001 : 'Initial,Previous,Same,Next';
                               BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Previous);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100528706;1 ;Action    ;
                      CaptionML=ENU=Previous Column;
                      ToolTipML=ENU=Previous Column;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::PreviousColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100528705;1 ;Action    ;
                      CaptionML=ENU=Next Column;
                      ToolTipML=ENU=Next Column;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::NextColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100528704;1 ;Action    ;
                      CaptionML=ENU=Next Set;
                      ToolTipML=ENU=Next Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MATRIX_Step@1001 : 'Initial,Previous,Same,Next';
                               BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Next);
                                 UpdateMatrixSubForm;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100528703;;Container;
                ContainerType=ContentArea }

    { 1100528729;1;Group  ;
                CaptionML=ENU=Options;
                GroupType=Group }

    { 1100528701;2;Field  ;
                CaptionML=ENU=Depot Filter;
                SourceExpr=DepotFilter;
                TableRelation="Plant Location" WHERE (Depot=CONST(Yes));
                LookupPageID=Plant Location List;
                OnValidate=BEGIN
                             ValidateDepotFilter(TRUE);
                             UpdateMatrixSubForm;
                           END;
                            }

    { 1100528727;2;Field  ;
                CaptionML=ENU=View by;
                OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                             UpdateMatrixSubForm;
                           END;
                            }

    { 1100528744;2;Field  ;
                CaptionML=ENU=Not posted orders;
                SourceExpr=CountNotPosted;
                OnValidate=BEGIN
                             UpdateMatrixSubForm;
                           END;
                            }

    { 1100528711;2;Field  ;
                CaptionML=ENU=Plant Need;
                SourceExpr=CountPlantNeed;
                OnValidate=BEGIN
                             UpdateMatrixSubForm;
                           END;
                            }

    { 1100528712;2;Field  ;
                CaptionML=ENU=Expected Returns;
                SourceExpr=CountExpectedReturn;
                OnValidate=BEGIN
                             UpdateMatrixSubForm;
                           END;
                            }

    { 1100528700;1;Part   ;
                Name=MATRIX;
                PagePartID=Page11130015;
                PartType=Page }

  }
  CODE
  {
    VAR
      MATRIX_MatrixRecord@1100528708 : Record 2000000007;
      MATRIX_MatrixRecords@1100528707 : ARRAY [32] OF Record 2000000007;
      MATRIX_MaximumSetLength@1100528706 : Integer;
      MATRIX_PrimKeyRecInCurrSet@1100528705 : Text[1024];
      MATRIX_CaptionSet@1100528704 : ARRAY [32] OF Text[80];
      MATRIX_CaptionRange@1100528703 : Text[250];
      MATRIX_CurrSetLength@1100528702 : Integer;
      MATRIX_Step@1100528701 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn,,,,,FirstRec,LastRec';
      PlantSetup@1100529000 : Record 11012550;
      CountNotPosted@1100529003 : Boolean;
      CountPlantNeed@1100529002 : Boolean;
      CountExpectedReturn@1100529001 : Boolean;
      PlantNeedVisible@1100525002 : Boolean INDATASET;
      PeriodType@1100528709 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      DefRentalDepot@1100529005 : Code[20];
      DepotFilter@1100529004 : Code[250];
      Text001@1100529006 : TextConst 'ENU=Only depots allowed. location ''%1'' is not a depot.';
      Text002@1100529007 : TextConst 'ENU=No depot selected.';
      gDepotFilter@1100525000 : Code[250];
      gCompany@1100525001 : Text[30];

    LOCAL PROCEDURE MATRIX_GenerateColumnCaptions@1152(MATRIX_SetWanted@1000 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn');
    VAR
      MatrixManagement@1002 : Codeunit 9200;
      I@1004 : Integer;
      RecRef@1006 : RecordRef;
      FieldRef@1011 : FieldRef;
    BEGIN
      CLEAR(MATRIX_CaptionSet);
      CLEAR(MATRIX_MatrixRecords);

      MatrixManagement.GeneratePeriodMatrixData(
        MATRIX_SetWanted,
        MATRIX_MaximumSetLength,
        FALSE, // UseNameForCaption
        PeriodType,
        '', // DateFilter
        MATRIX_PrimKeyRecInCurrSet,
        MATRIX_CaptionSet,
        MATRIX_CaptionRange,
        MATRIX_CurrSetLength,
        MATRIX_MatrixRecords);
    END;

    LOCAL PROCEDURE UpdateMatrixSubForm@7();
    BEGIN
      CurrPage.MATRIX.PAGE.Load(
        MATRIX_CaptionSet,
        MATRIX_MatrixRecords,
        MATRIX_CurrSetLength,
        DepotFilter,
        CountNotPosted,
        CountPlantNeed,
        CountExpectedReturn);
    END;

    PROCEDURE ValidateDepotFilter@1100485000(ErrorMode@1100485001 : Boolean) : Boolean;
    VAR
      PlantLocation@1100485000 : Record 11012554;
    BEGIN
      IF (gCompany <> '') THEN
        PlantLocation.CHANGECOMPANY(gCompany);

      IF DepotFilter = '' THEN  //* Filter empty not allowed, because this are all locations (not all depots)
        DepotFilter := DefRentalDepot;  //*DPA.c

      PlantLocation.SETFILTER(Code, DepotFilter);  //* Only depots allowed in depot filter!
      PlantLocation.SETRANGE(Depot, FALSE);
      IF PlantLocation.FINDFIRST THEN BEGIN
        IF ErrorMode THEN
          ERROR(Text001, PlantLocation.Code)
        ELSE
          DepotFilter := DefRentalDepot;  //*DPA.c
      END;

      PlantLocation.SETRANGE(Depot, TRUE);
      IF NOT PlantLocation.FINDFIRST THEN BEGIN
        IF ErrorMode THEN
          ERROR(Text002)
        ELSE
          DepotFilter := DefRentalDepot;  //*DPA.c
      END;
    END;

    PROCEDURE SetDepotFilter@1100485003(DepotFilter2@1100485000 : Code[250]);
    BEGIN
      gDepotFilter := DepotFilter2;
    END;

    PROCEDURE SetCompany@1100485001(Company2@1100485000 : Text[30]);
    BEGIN
      IF (Company2 = '') OR (Company2 = COMPANYNAME) THEN
        gCompany := ''
      ELSE BEGIN
        gCompany := Company2;
        PlantSetup.CHANGECOMPANY(gCompany);
        CurrPage.MATRIX.PAGE.SetCompany(gCompany);
      END;
      PlantNeedVisible := (gCompany = '');
    END;

    BEGIN
    END.
  }
}

