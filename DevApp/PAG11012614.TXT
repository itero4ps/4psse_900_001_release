OBJECT Page 11012614 Plant Question List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Plant Question List;
    SaveValues=No;
    SourceTable=Table11012581;
    DelayedInsert=Yes;
    PageType=Worksheet;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             SetEditable := TRUE;
             "Open QuestionEditable" := TRUE;
             "Multiple AnswersEditable" := TRUE;
             DescriptionEditable := TRUE;
             TypeEditable := TRUE;
             SetVisible := TRUE;
           END;

    OnOpenPage=BEGIN
                 IF (CurrentProfileCode = '') OR (NOT PlantProfileRec.GET(CurrentProfileCode)) THEN
                   CurrentProfileCode := PlantProfileMng.GetFirstPlantProfile;

                 PlantProfileMng.SetProfileFilter(CurrentProfileCode, Rec);

                 IF AnswerMode THEN BEGIN
                   CurrPage.CAPTION := CurrPage.CAPTION + Text000;
                   TypeEditable := FALSE;
                   DescriptionEditable := FALSE;
                   "Multiple AnswersEditable" := FALSE;
                   "Open QuestionEditable" := FALSE;
                   SetVisible := TRUE;
                 END ELSE BEGIN
                   CurrPage.CAPTION := CurrPage.CAPTION + Text001;
                   SetEditable := FALSE;
                   SetVisible := FALSE;
                 END;
               END;

    OnAfterGetRecord=BEGIN
                       IF AnswerMode THEN
                         Set := PlantProfileAnswerRec.GET(CurrentPlantType,CurrentPlantNo,"Profile Code","Line No.");
                       TypeOnFormat;
                     END;

    OnNewRecord=BEGIN
                  "Profile Code" := CurrentProfileCode;
                  Set := FALSE;
                  IF AnswerMode THEN
                    Type := -1;
                  TypeOnFormat;
                END;

    OnInsertRecord=BEGIN
                     IF AnswerMode THEN
                       ERROR('');
                   END;

    OnDeleteRecord=BEGIN
                     IF AnswerMode THEN
                       ERROR('');
                   END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 19  ;1   ;Field     ;
                CaptionML=ENU=Profile Code;
                SourceExpr=CurrentProfileCode;
                OnValidate=BEGIN
                             PlantProfileRec.GET(CurrentProfileCode);
                               CurrentProfileCodeOnAfterValid;
                           END;

                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           COMMIT;
                           IF PAGE.RUNMODAL(0, PlantProfileRec) = ACTION::LookupOK THEN BEGIN
                             IF PlantProfileRec.Code <> '' THEN BEGIN
                               CurrentProfileCode := PlantProfileRec.Code;
                               PlantProfileMng.SetProfileFilter(CurrentProfileCode,Rec);
                               CurrPage.UPDATE(FALSE);
                             END;
                           END;
                         END;
                          }

    { 1   ;1   ;Group     ;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                BlankNumbers=BlankNeg;
                SourceExpr=Type;
                Editable=TypeEditable;
                Style=Strong;
                StyleExpr=TypeEmphasize;
                OnValidate=BEGIN
                             TypeOnFormat;
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 4   ;2   ;Field     ;
                SourceExpr=Description;
                Editable=DescriptionEditable;
                Style=Strong;
                StyleExpr=DescriptionEmphasize }

    { 6   ;2   ;Field     ;
                SourceExpr="Multiple Answers";
                Editable="Multiple AnswersEditable" }

    { 1210190003;2;Field  ;
                SourceExpr="Open Question";
                Editable="Open QuestionEditable" }

    { 1210190001;2;Field  ;
                Name=Set;
                CaptionML=ENU=Set;
                SourceExpr=Set;
                Visible=SetVisible;
                Editable=SetEditable;
                OnValidate=BEGIN
                             IF NOT AnswerMode THEN
                               ERROR('');
                             TESTFIELD(Type,Type::Answer);

                             IF Set THEN BEGIN
                               IF (Description = '') THEN BEGIN
                                 IF NOT PlantProfileMng.CheckOpenQuestion(CurrentProfileCode, "Line No.") THEN
                                   ERROR(Text003);
                               END;
                               PlantProfileAnswerRec.INIT;
                               PlantProfileAnswerRec."Plant Type" := CurrentPlantType;
                               PlantProfileAnswerRec."Plant No." := CurrentPlantNo;
                               PlantProfileAnswerRec.VALIDATE("Profile Code",CurrentProfileCode);
                               PlantProfileAnswerRec.VALIDATE("Line No.","Line No.");
                               PlantProfileAnswerRec.Answer := Description;
                               PlantProfileAnswerRec.INSERT(TRUE);
                               PlantProfileMng.UpdateLineNoQuestion(CurrentPlantType, CurrentPlantNo, CurrentProfileCode);
                             END ELSE BEGIN
                               IF PlantProfileAnswerRec.GET(CurrentPlantType,CurrentPlantNo,CurrentProfileCode,"Line No.") THEN BEGIN
                                 IF (PlantProfileAnswerRec.Answer <> '') AND (PlantProfileAnswerRec.Answer <> Description) THEN BEGIN
                                   IF PlantProfileMng.CheckOpenQuestion(PlantProfileAnswerRec."Profile Code", PlantProfileAnswerRec."Line No.") THEN BEGIN
                                     IF NOT CONFIRM(Text002) THEN BEGIN
                                       Set := TRUE;
                                       ERROR('');
                                     END;
                                   END;
                                 END;
                                 PlantProfileAnswerRec.DELETE(TRUE);
                                 PlantProfileMng.UpdateLineNoQuestion(CurrentPlantType, CurrentPlantNo, CurrentProfileCode);
                               END;
                             END;
                           END;
                            }

  }
  CODE
  {
    VAR
      PlantProfileRec@1001 : Record 11012580;
      PlantProfileAnswerRec@1210190003 : Record 11012582;
      PlantProfileMng@1002 : Codeunit 11012577;
      CurrentProfileCode@1003 : Code[10];
      CurrentPlantType@1210190000 : Code[20];
      CurrentPlantNo@1210190007 : Code[10];
      AnswerMode@1210190001 : Boolean;
      Set@1210190002 : Boolean;
      Text000@1210190005 : TextConst 'ENU=" - Answers"';
      Text001@1210190004 : TextConst 'ENU=" - Setup"';
      Text002@1210190006 : TextConst 'ENU="The answer of this question is free, there is already an answer present at the plant. Are you sure that this answer may be deleted? "';
      Text003@1210190008 : TextConst 'ENU=Not allowed, the answer (description) is not filled in.';
      SetVisible@19057820 : Boolean INDATASET;
      TypeEditable@19028748 : Boolean INDATASET;
      DescriptionEditable@19061412 : Boolean INDATASET;
      "Multiple AnswersEditable"@19043532 : Boolean INDATASET;
      "Open QuestionEditable"@19049221 : Boolean INDATASET;
      SetEditable@19077151 : Boolean INDATASET;
      TypeEmphasize@19012868 : Boolean INDATASET;
      DescriptionEmphasize@19010547 : Boolean INDATASET;
      DescriptionIndent@19057867 : Integer INDATASET;

    PROCEDURE SetParameters@1(IPlantType@1000 : Code[20];IPlantNo@1210190001 : Code[10];IProfileCode@1001 : Code[10];IAnswerMode@1210190000 : Boolean);
    BEGIN
      CurrentPlantType := IPlantType;
      CurrentPlantNo := IPlantNo;
      CurrentProfileCode := IProfileCode;
      AnswerMode := IAnswerMode;
    END;

    LOCAL PROCEDURE CurrentProfileCodeOnAfterValid@19060881();
    BEGIN
      PlantProfileMng.SetProfileFilter(CurrentProfileCode,Rec);
    END;

    LOCAL PROCEDURE TypeOnFormat@19025827();
    BEGIN
      IF Type = Type::Question THEN BEGIN
        TypeEmphasize := TRUE;
        DescriptionEmphasize := TRUE;
        DescriptionIndent := 0;
      END ELSE BEGIN
        TypeEmphasize := FALSE;
        DescriptionEmphasize := FALSE;
        DescriptionIndent := 1;
      END;
    END;

    BEGIN
    END.
  }
}

