OBJECT Page 11012754 Contact Feature Type
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Contact Feature Type;
    SourceTable=Table11012753;
    DelayedInsert=Yes;
    DataCaptionFields=Relation Type,Code;
    PageType=List;
    AutoSplitKey=Yes;
    OnOpenPage=BEGIN
                 CurrPage.EDITABLE(ContactFeatureTypeIsEditable);

                 IF CurrPage.EDITABLE THEN
                   GenerateFeatureTypes;
               END;

    OnAfterGetRecord=BEGIN
                       CurrPage.EDITABLE(ContactFeatureTypeIsEditable);
                     END;

    OnInsertRecord=BEGIN
                     EXIT(ContactFeatureTypeIsEditable);
                   END;

    OnModifyRecord=BEGIN
                     EXIT(ContactFeatureTypeIsEditable);
                   END;

    OnDeleteRecord=BEGIN
                     EXIT(ContactFeatureTypeIsEditable);
                   END;

    OnQueryClosePage=VAR
                       lFeatGroupRec@1210190001 : Record 11012751;
                       lFeatTypeRec@1210190000 : Record 11012753;
                     BEGIN
                       lFeatTypeRec.COPY(Rec);
                       lFeatTypeRec.SETFILTER(Feature,'');

                       WITH lFeatTypeRec DO
                         IF FIND('-') THEN
                           REPEAT
                             IF lFeatGroupRec.GET("Feature Group") THEN BEGIN
                               IF (lFeatTypeRec.Feature = '') THEN
                                 IF ( ("Relation Type" = "Relation Type"::Company) AND lFeatGroupRec."Obligatory for Companies") OR
                                    ( ("Relation Type" = "Relation Type"::Contact) AND lFeatGroupRec."Obligatory for Contacts") OR
                                    ( ("Relation Type" = "Relation Type"::"Try-out") AND lFeatGroupRec."Obligatory for Try-outs") OR
                                    ( ("Relation Type" = "Relation Type"::"Try-out Quote") AND lFeatGroupRec."Obligatory for Try-out Quotes") OR
                                    ( ("Relation Type" = "Relation Type"::Parcel) AND lFeatGroupRec."Obligatory for Parcels") OR
                                    ( ("Relation Type" = "Relation Type"::Job) AND lFeatGroupRec."Obligatory for Jobs") OR
                                    ( ("Relation Type" = "Relation Type"::ServiceContract) AND lFeatGroupRec."Obligatory for Serv. Contracts") OR
                                    ( ("Relation Type" = "Relation Type"::Vessel) AND lFeatGroupRec."Obligatory for Vessels")
                                 THEN
                                   EXIT(CONFIRM(Text001, FALSE));

                               IF (lFeatTypeRec.Value = 0) THEN
                                 IF ( ("Relation Type" = "Relation Type"::Company) AND lFeatGroupRec."Value Obligatory for Companies") OR
                                    ( ("Relation Type" = "Relation Type"::Contact) AND lFeatGroupRec."Value Obligatory for Contacts") OR
                                    ( ("Relation Type" = "Relation Type"::"Try-out") AND lFeatGroupRec."Value Obligatory for Try-outs") OR
                                    ( ("Relation Type" = "Relation Type"::"Try-out Quote") AND lFeatGroupRec."Value Oblig for Try-out Quotes") OR
                                    ( ("Relation Type" = "Relation Type"::Parcel) AND lFeatGroupRec."Value Obligatory for Parcels") OR
                                    ( ("Relation Type" = "Relation Type"::Job) AND lFeatGroupRec."Value Obligatory for Jobs") OR
                                    ( ("Relation Type" = "Relation Type"::ServiceContract) AND lFeatGroupRec."Value Obl. for Serv. Contracts") OR
                                    ( ("Relation Type" = "Relation Type"::Vessel) AND lFeatGroupRec."Value Obligatory for Vessels")
                                 THEN
                                   EXIT(CONFIRM(Text002, FALSE));
                             END;
                           UNTIL NEXT = 0;
                     END;

    ActionList=ACTIONS
    {
      { 1100528400;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528401;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1100528402;2 ;Action    ;
                      CaptionML=ENU=Get Relevant Features;
                      Promoted=Yes;
                      Image=AddAction;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 GenerateRelevantFeatureTypes;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Feature Group" }

    { 4   ;2   ;Field     ;
                SourceExpr=Feature;
                OnValidate=BEGIN
                             FeatureOnAfterValidate;
                           END;

                OnLookup=VAR
                           NewLine@1210190002 : Boolean;
                         BEGIN
                           TESTFIELD("Feature Group");
                           IF "Line No." = 0 THEN BEGIN
                             CurrPage.UPDATE;
                             COMMIT;
                             NewLine := ("Line No." <> 0);
                           END;
                           IF OnLookupFeature(CurrPage.EDITABLE, NewLine) THEN
                             CurrPage.UPDATE;
                         END;
                          }

    { 6   ;2   ;Field     ;
                SourceExpr="Feature Description" }

    { 1100525000;2;Field  ;
                SourceExpr=Value;
                OnValidate=BEGIN
                             ValueOnAfterValidate;
                           END;
                            }

    { 1100525002;2;Field  ;
                SourceExpr=Date }

    { 1210190000;2;Field  ;
                SourceExpr=Comments }

    { 1100485004;2;Field  ;
                SourceExpr="Inherited from Company";
                Visible=FALSE }

    { 1100485002;2;Field  ;
                SourceExpr="Last Modified";
                Visible=FALSE;
                Editable=FALSE }

    { 1100485000;2;Field  ;
                SourceExpr="Modified By";
                Visible=FALSE;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      Text001@1210190000 : TextConst 'ENU=Not all of the obligatory Features are filled. Do you still want to exit?';
      Text002@1100525000 : TextConst 'ENU=Not all of the obligatory Values are filled. Do you still want to exit?';

    PROCEDURE GenerateFeatureTypes@1210190000();
    BEGIN
      IF NOT IsFilteredOnOneCode THEN
        EXIT;

      CreateFeatureTypes;   //db, 08-11-06: functie verplaatst naar tabel
    END;

    LOCAL PROCEDURE GenerateRelevantFeatureTypes@1100528401();
    BEGIN
      IF NOT IsFilteredOnOneCode THEN
        EXIT;

      CreateRelevantFeatureTypes;
    END;

    LOCAL PROCEDURE ContactFeatureTypeIsEditable@1100528400() : Boolean;
    VAR
      CompanyRelationsCentralMgt@1100528400 : Record 11012059;
      CentralDataMgt@1100528401 : Codeunit 11012010;
    BEGIN
      IF CompanyRelationsCentralMgt.READPERMISSION THEN
        EXIT(CentralDataMgt.ContactFeatureTypeIsEditable(Code, "Relation Type"));
    END;

    LOCAL PROCEDURE FeatureOnAfterValidate@19034481();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ValueOnAfterValidate@19056024();
    BEGIN
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

