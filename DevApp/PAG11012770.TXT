OBJECT Page 11012770 Try-out Successor
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Try-out - Successor;
    SourceTable=Table11012761;
    DataCaptionFields=Try-out No.;
    PageType=List;
    AutoSplitKey=Yes;
    RefreshOnActivate=Yes;
    OnOpenPage=BEGIN
                 FromTryOut := GETFILTER("Try-out No.");
                 FromQuote := GETFILTER("Try-out Quote");
                 IF FromQuote <> '' THEN
                   FromCode := FromQuote
                 ELSE
                   FromCode := FromTryOut;
               END;

    OnClosePage=VAR
                  TryOutSuccRec@1210190001 : Record 11012761;
                  EmptyLine@1210190000 : Record 11012761;
                BEGIN
                  IF (GETFILTER("Try-out No.") <> '') OR (GETFILTER("Try-out Quote") <> '') THEN BEGIN
                    //Delete Empty Lines
                    TryOutSuccRec.COPY(Rec);
                    IF TryOutSuccRec.FIND('-') THEN
                      REPEAT
                        EmptyLine := TryOutSuccRec;
                        EmptyLine.INIT;
                        IF (STRSUBSTNO('%1', TryOutSuccRec) = STRSUBSTNO('%1', EmptyLine)) THEN
                          TryOutSuccRec.DELETE;
                      UNTIL TryOutSuccRec.NEXT = 0;
                  END;
                END;

    OnNewRecord=BEGIN
                  IF FromQuote <> '' THEN
                    IF TryoutQuoteRec.GET(FromQuote) THEN
                      "Try-out No." := TryoutQuoteRec."Try-out No.";
                END;

    OnInsertRecord=VAR
                     TryOutSuccessor@1210190001 : Record 11012761;
                   BEGIN
                     // 32086.sn
                     IF TryOutSuccessor.GET("Try-out No.","Try-out Quote","Line No.") THEN BEGIN
                       TryOutSuccessor.SETRANGE("Try-out No.","Try-out No.");
                       TryOutSuccessor.SETRANGE("Try-out Quote","Try-out Quote");
                       TryOutSuccessor.FINDLAST;
                       "Line No." := TryOutSuccessor."Line No." + 10000;
                     END;
                     // 32086.en
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1210190014;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1100525003;2 ;ActionGroup;
                      CaptionML=ENU=Estimates;
                      Image=Calculate }
      { 1210190015;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Estimate;
                      Promoted=Yes;
                      Image=Calculate;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 StartProcess(10);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1210190037;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Estimate Project;
                      Image=CalculateRemainingUsage;
                      OnAction=BEGIN
                                 StartProcess(13);
                               END;
                                }
      { 1100525000;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create RAW-Estimate;
                      Image=CalculateSalesTax;
                      OnAction=BEGIN
                                 StartProcess(12);  //ISS
                               END;
                                }
      { 1210190004;3 ;Action    ;
                      CaptionML=ENU=Transfer Estimate to Project Budget;
                      Promoted=Yes;
                      Image=LedgerBudget;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 StartCopyProcess;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100525004;2 ;ActionGroup;
                      CaptionML=ENU=Projects;
                      Image=Prepayment }
      { 1210190016;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Project;
                      Promoted=Yes;
                      Image=Prepayment;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 StartProcess(20);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100485000;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Small Project;
                      Image=PrepaymentCreditMemo;
                      OnAction=BEGIN
                                 StartProcess(21);
                               END;
                                }
      { 1210190036;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Assembly Project;
                      Image=PrepaymentSimulation;
                      OnAction=BEGIN
                                 StartProcess(22); //kzwerver, 110527, n, #27456
                               END;
                                }
      { 1100525005;2 ;ActionGroup;
                      CaptionML=ENU=Service;
                      Image=MakeOrder }
      { 1210190035;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Service Order;
                      Promoted=Yes;
                      Image=MakeOrder;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 StartProcess(30);
                               END;
                                }
      { 1210190023;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Service Location;
                      Image=ServiceZones;
                      OnAction=BEGIN
                                 StartProcess(31);
                               END;
                                }
      { 1210190026;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Service Contract;
                      Image=ServiceAgreement;
                      OnAction=BEGIN
                                 StartProcess(32);
                               END;
                                }
      { 1100528604;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Service Survey;
                      Image=ServiceItemWorksheet;
                      OnAction=BEGIN
                                 StartProcess(33);
                               END;
                                }
      { 1210190006;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1210190028;1 ;Action    ;
                      CaptionML=ENU=Edit Estimate;
                      Promoted=Yes;
                      Image=Calculate;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 EstRec@1210190000 : Record 11012151;
                               BEGIN
                                 IF "Estimate No." <> '' THEN BEGIN
                                   EstRec.SETRANGE("No.","Estimate No.");
                                   IF EstRec.FINDFIRST THEN
                                     EstRec.OpenCard;  //db, 13-04-15: C022637
                                 END;
                               END;
                                }
      { 1210190018;1 ;Action    ;
                      CaptionML=ENU=Edit Project;
                      Promoted=Yes;
                      Image=Prepayment;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 JobRec@1210190000 : Record 11072003;
                               BEGIN
                                 IF "Project No." <> '' THEN BEGIN
                                   JobRec.SETRANGE("No.","Project No.");
                                   IF JobRec.FINDFIRST THEN
                                     JobRec.OpenCard;  //db, 13-04-15: C022637
                                 END;
                               END;
                                }
      { 1210190011;1 ;Action    ;
                      CaptionML=ENU=Edit Service Order;
                      RunObject=Page 11125209;
                      RunPageLink=No.=FIELD(Service Order No.);
                      Image=MakeOrder }
      { 1210190010;1 ;Action    ;
                      CaptionML=ENU=Edit Service Location;
                      RunObject=Page 11125143;
                      RunPageLink=No.=FIELD(Service Location No.);
                      Image=ServiceZones }
      { 1210190008;1 ;Action    ;
                      CaptionML=ENU=Edit Service Contract;
                      RunObject=Page 11125146;
                      RunPageLink=No.=FIELD(Service Contract No.);
                      Image=ServiceAgreement }
      { 1100525007;1 ;Action    ;
                      CaptionML=ENU=Edit Service Survey;
                      RunObject=Page 11126107;
                      RunPageLink=No.=FIELD(Service Survey No.);
                      Image=ServiceAgreement }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210190000;1;Group  ;
                GroupType=Repeater }

    { 1210190001;2;Field  ;
                SourceExpr="Try-out No.";
                Visible=FALSE }

    { 1210190024;2;Field  ;
                SourceExpr="Try-out Quote";
                Visible=FALSE }

    { 1210190003;2;Field  ;
                SourceExpr="Project No.";
                OnValidate=BEGIN
                             ProjectNoOnAfterValidate;
                           END;
                            }

    { 1210190005;2;Field  ;
                SourceExpr="Project Description";
                Visible=FALSE }

    { 1100485004;2;Field  ;
                SourceExpr="Extension Contract" }

    { 1210190007;2;Field  ;
                SourceExpr="Estimate No.";
                OnValidate=BEGIN
                             EstimateNoOnAfterValidate;
                           END;
                            }

    { 1210190009;2;Field  ;
                SourceExpr="Estimate Description";
                Visible=FALSE }

    { 1210190017;2;Field  ;
                SourceExpr="Estimate Finished";
                Visible=FALSE }

    { 1210190031;2;Field  ;
                SourceExpr="Service Order No." }

    { 1210190033;2;Field  ;
                SourceExpr="Service Order Description";
                Visible=FALSE }

    { 1210190027;2;Field  ;
                SourceExpr="Service Contract No.";
                OnValidate=BEGIN
                             ServiceContractNoOnAfterValida;
                           END;
                            }

    { 1210190029;2;Field  ;
                SourceExpr="Service Contract Description";
                Visible=FALSE }

    { 1210190019;2;Field  ;
                SourceExpr="Service Location No.";
                OnValidate=BEGIN
                             ServiceLocationNoOnAfterValida;
                           END;
                            }

    { 1210190021;2;Field  ;
                SourceExpr="Service Location Description";
                Visible=FALSE }

    { 1100525001;2;Field  ;
                SourceExpr="Leading Estimate";
                Visible=FALSE }

    { 1100528600;2;Field  ;
                SourceExpr="Service Survey No.";
                OnValidate=BEGIN
                             ServiceSurveyNoOnAfterValidate;
                           END;
                            }

    { 1100528602;2;Field  ;
                SourceExpr="Service Survey Description";
                Visible=FALSE }

    { 1100528605;2;Field  ;
                SourceExpr="Building Code" }

    { 1100528607;2;Field  ;
                SourceExpr="Building Description";
                Visible=FALSE }

    { 1100525002;2;Field  ;
                SourceExpr="Service Object No." }

    { 1100409001;2;Field  ;
                SourceExpr="Service Object Description";
                Visible=false;
                OnValidate=BEGIN
                             CALCFIELDS("Service Object Description");
                           END;

                OnLookup=VAR
                           ServiceObject@1100409000 : Record 11071691;
                           ServiceObjectList@1100409001 : Page 11125145;
                         BEGIN
                           ServiceObjectList.LOOKUPMODE(TRUE);
                           ServiceObjectList.DetermineInterface(DATABASE::"Contract Object", "Service Contract No.", '', 0);

                           IF ServiceObject.GET("Service Object No.") THEN
                             ServiceObjectList.SETRECORD(ServiceObject);
                           IF ServiceObjectList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             ServiceObjectList.GETRECORD(ServiceObject);
                             VALIDATE("Service Object No.", ServiceObject."No.");
                           END ELSE BEGIN
                             IF ServiceObjectList.CheckMultiCopy THEN
                               CurrPage.UPDATE;
                           END;
                         END;
                          }

  }
  CODE
  {
    VAR
      TryoutQuoteRec@1210190005 : Record 11012758;
      TryoutSuccessorRec@1100525000 : Record 11012761;
      FromQuote@1210190000 : Code[20];
      FromTryOut@1210190002 : Code[20];
      FromCode@1210190003 : Code[20];

    PROCEDURE InsertLine@1100485002();
    BEGIN
      IF "Line No." <> 0 THEN
        EXIT;

      IF FromCode = '' THEN
        EXIT;

      IF FromQuote <> '' THEN BEGIN
        TryoutQuoteRec.GET(FromQuote);
        TryoutSuccessorRec.SETRANGE("Try-out No.", TryoutQuoteRec."Try-out No.");
        TryoutSuccessorRec.SETRANGE("Try-out Quote", FromQuote);
      END ELSE BEGIN
        TryoutSuccessorRec.SETRANGE("Try-out No.", FromTryOut);
        TryoutSuccessorRec.SETRANGE("Try-out Quote", '');
      END;

      IF TryoutSuccessorRec.FINDLAST THEN
        "Line No." := TryoutSuccessorRec."Line No." + 10000
      ELSE
        "Line No." := 10000;

      CLEAR(TryoutSuccessorRec);
      IF FromQuote <> '' THEN BEGIN
        TryoutSuccessorRec."Try-out No." := TryoutQuoteRec."Try-out No.";
        TryoutSuccessorRec."Try-out Quote" := FromQuote;
      END ELSE
        TryoutSuccessorRec."Try-out No." := FromTryOut;
      TryoutSuccessorRec."Line No." := "Line No.";
      TryoutSuccessorRec.INSERT;

      COMMIT;
    END;

    PROCEDURE StartProcess@1100485000(lvAction@1100485000 : Integer);
    VAR
      SuccRep@1100485001 : Report 11012758;
      lvText001@1100485003 : TextConst 'ENU=%1 is already filled for %2 %3';
      lvText002@1100485002 : TextConst 'ENU=Add the Line first by pressing Tab on one of the fields';
      LineInserted@1210190000 : Boolean;
    BEGIN
      CASE lvAction OF
        10,12,13:
          IF "Estimate No." <> '' THEN
            ERROR(lvText001, FIELDCAPTION("Estimate No."), TABLECAPTION, FromCode);
        20,21,22:
          IF "Project No." <> '' THEN
            ERROR(lvText001, FIELDCAPTION("Project No."), TABLECAPTION, FromCode);
        30:
          IF "Service Order No." <> '' THEN
            ERROR(lvText001, FIELDCAPTION("Service Order No."), TABLECAPTION, FromCode);
        31:
          IF "Service Location No." <> '' THEN
            ERROR(lvText001, FIELDCAPTION("Service Location No."), TABLECAPTION, FromCode);
        32:
          IF "Service Contract No." <> '' THEN
            ERROR(lvText001, FIELDCAPTION("Service Contract No."), TABLECAPTION, FromCode);
        33:
          IF "Service Survey No." <> '' THEN
            ERROR(lvText001, FIELDCAPTION("Service Survey No."), TABLECAPTION, FromCode);
      END;

      IF "Line No." = 0 THEN BEGIN
        InsertLine;
        IF "Line No." = 0 THEN
          ERROR(lvText002);
        LineInserted := TRUE;
      END ELSE BEGIN
        TryoutSuccessorRec.COPY(Rec);
      END;

      //RTC.sn
      CLEAR(SuccRep);
      SuccRep.SetSelection(
        lvAction,TryoutSuccessorRec."Try-out No.",
        TryoutSuccessorRec."Try-out Quote",TryoutSuccessorRec."Line No.");
      SuccRep.RUNMODAL;
      //RTC.en

      CurrPage.UPDATE(NOT LineInserted);
      DeleteEmptyLine;
      CurrPage.UPDATE;
    END;

    PROCEDURE StartCopyProcess@1210190000();
    VAR
      CopyFrm@1100485001 : Page 11012187;
      lvText002@1100485002 : TextConst 'ENU=Add the Line first by pressing Tab on one of the fields';
      EstRec@1210190000 : Record 11012151;
      Jobrec@1210190001 : Record 11072003;
    BEGIN
      IF "Estimate No." = '' THEN
        EXIT;
      IF "Project No." = '' THEN
        EXIT;

      IF "Line No." = 0 THEN BEGIN
        InsertLine;
        IF "Line No." = 0 THEN
          ERROR(lvText002);
      END;

      EstRec.GET("Estimate No.");
      EstRec.SETRANGE("No.", "Estimate No.");
      Jobrec.GET("Project No.");

      CLEAR(CopyFrm);

      CopyFrm.SetSelection("Project No.");
      CopyFrm.SETTABLEVIEW(EstRec);
      CopyFrm.SETRECORD(EstRec);
      CopyFrm.LOOKUPMODE := FALSE;
      CopyFrm.RUNMODAL;
      CurrPage.UPDATE;
      DeleteEmptyLine;
      CurrPage.UPDATE;
    END;

    PROCEDURE DeleteEmptyLine@1100485003();
    VAR
      TryOutSuccRec@1100485001 : Record 11012761;
      EmptyLine@1100485000 : Record 11012761;
    BEGIN
      IF (GETFILTER("Try-out No.") <> '') OR (GETFILTER("Try-out Quote") <> '') THEN BEGIN
        //Delete Empty Lines
        TryOutSuccRec.COPY(Rec);
      IF TryOutSuccRec.FIND('-') THEN
        REPEAT
          EmptyLine := TryOutSuccRec;
          EmptyLine.INIT;
          IF (STRSUBSTNO('%1', TryOutSuccRec) = STRSUBSTNO('%1', EmptyLine)) THEN
            TryOutSuccRec.DELETE;
        UNTIL TryOutSuccRec.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE ProjectNoOnAfterValidate@19041008();
    BEGIN
      CALCFIELDS("Project Description");
    END;

    LOCAL PROCEDURE EstimateNoOnAfterValidate@19000898();
    BEGIN
      CALCFIELDS("Estimate Description","Estimate Finished");
    END;

    LOCAL PROCEDURE ServiceContractNoOnAfterValida@19025091();
    BEGIN
      CALCFIELDS("Service Contract Description");
    END;

    LOCAL PROCEDURE ServiceLocationNoOnAfterValida@19019562();
    BEGIN
      CALCFIELDS("Service Location Description");
    END;

    LOCAL PROCEDURE ServiceSurveyNoOnAfterValidate@19023251();
    BEGIN
      CALCFIELDS("Service Survey Description");
    END;

    BEGIN
    END.
  }
}

