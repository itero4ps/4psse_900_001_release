OBJECT Page 11012777 Prognosis Try-out Quote Matrix
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Prognosis Try-out Quote;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table11012758;
    PageType=ListPlus;
    OnInit=BEGIN
             PeriodType := PeriodType::Month;
           END;

    OnOpenPage=BEGIN
                 MATRIX_MaximumSetLength := 12;
                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                 UpdateMatrixSubForm;
               END;

    OnAfterGetRecord=BEGIN
                       UpdateMatrixSubForm;
                     END;

    ActionList=ACTIONS
    {
      { 1100528702;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100528709;1 ;ActionGroup;
                      CaptionML=ENU=Prognosis }
      { 1100528711;2 ;Action    ;
                      CaptionML=ENU=Overall Prognosis;
                      RunObject=Page 11012778;
                      Image=CalculateRemainingUsage }
      { 1100528710;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528707;1 ;Action    ;
                      CaptionML=ENU=Previous Set;
                      ToolTipML=ENU=Previous Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MATRIX_Step@1001 : 'Initial,Previous,Same,Next';
                               BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Previous);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100528706;1 ;Action    ;
                      CaptionML=ENU=Previous Column;
                      ToolTipML=ENU=Previous Column;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::PreviousColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100528705;1 ;Action    ;
                      CaptionML=ENU=Next Column;
                      ToolTipML=ENU=Next Column;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::NextColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100528704;1 ;Action    ;
                      CaptionML=ENU=Next Set;
                      ToolTipML=ENU=Next Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MATRIX_Step@1001 : 'Initial,Previous,Same,Next';
                               BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Next);
                                 UpdateMatrixSubForm;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100528703;;Container;
                ContainerType=ContentArea }

    { 1100528729;1;Group  ;
                CaptionML=ENU=General;
                GroupType=Group }

    { 1100528708;2;Field  ;
                CaptionML=ENU=Total Prognosis Hours Try-out Quote in Period;
                SourceExpr=GetTotalHoursForTryoutQuoteInPeriod }

    { 1100528700;1;Part   ;
                Name=MATRIX;
                PagePartID=Page11126077;
                PartType=Page }

  }
  CODE
  {
    VAR
      MATRIX_MatrixRecord@1100528708 : Record 2000000007;
      MATRIX_MatrixRecords@1100528707 : ARRAY [32] OF Record 2000000007;
      MATRIX_MaximumSetLength@1100528706 : Integer;
      MATRIX_PrimKeyRecInCurrSet@1100528705 : Text[1024];
      MATRIX_CaptionSet@1100528704 : ARRAY [32] OF Text[80];
      MATRIX_CaptionRange@1100528703 : Text[250];
      MATRIX_CurrSetLength@1100528702 : Integer;
      MATRIX_Step@1100528701 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn,,,,,FirstRec,LastRec';
      PeriodType@1100528709 : 'Day,Week,Month,Quarter,Year';

    LOCAL PROCEDURE MATRIX_GenerateColumnCaptions@1152(MATRIX_SetWanted@1000 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn');
    VAR
      MatrixManagement@1002 : Codeunit 9200;
      I@1004 : Integer;
      RecRef@1006 : RecordRef;
      FieldRef@1011 : FieldRef;
    BEGIN
      CLEAR(MATRIX_CaptionSet);
      CLEAR(MATRIX_MatrixRecords);

      MatrixManagement.GeneratePeriodMatrixData(
        MATRIX_SetWanted,
        MATRIX_MaximumSetLength,
        FALSE, // UseNameForCaption
        PeriodType,
        '', // DateFilter
        MATRIX_PrimKeyRecInCurrSet,
        MATRIX_CaptionSet,
        MATRIX_CaptionRange,
        MATRIX_CurrSetLength,
        MATRIX_MatrixRecords);
    END;

    LOCAL PROCEDURE UpdateMatrixSubForm@7();
    BEGIN
      CurrPage.MATRIX.PAGE.Load(
        MATRIX_CaptionSet,
        MATRIX_MatrixRecords,
        MATRIX_CurrSetLength,
        PeriodType,
        Code);

      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE GetTotalHoursForTryoutQuoteInPeriod@1100528702() : Decimal;
    VAR
      PrognosisDetail@1100528700 : Record 11012884;
      PeriodStart@1100528702 : Date;
      PeriodEnd@1100528703 : Date;
    BEGIN
      IF MATRIX_CurrSetLength > 0 THEN BEGIN
        PeriodStart := MATRIX_MatrixRecords[1]."Period Start";
        PeriodEnd := MATRIX_MatrixRecords[MATRIX_CurrSetLength]."Period End";

        PrognosisDetail.SETCURRENTKEY(Type, "Source Code");
        PrognosisDetail.SETRANGE(Type, PrognosisDetail.Type::Workload);
        PrognosisDetail.SETRANGE("Workload Type", PrognosisDetail."Workload Type"::TryoutQuote);
        PrognosisDetail.SETRANGE("Source Code", Code);
        PrognosisDetail.SETRANGE(Date, PeriodStart, PeriodEnd);
        PrognosisDetail.CALCSUMS(Hours);
        EXIT(PrognosisDetail.Hours);
      END;
    END;

    BEGIN
    END.
  }
}

