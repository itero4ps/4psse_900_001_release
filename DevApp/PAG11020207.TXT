OBJECT Page 11020207 Project/Cost Component Control
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Project/Cost Component Control;
    SaveValues=Yes;
    SourceTable=Table11020297;
    DataCaptionExpr=Caption;
    PageType=ListPlus;
    PromotedActionCategoriesML=ENU=New,Process,Report,Project Control;
    OnOpenPage=VAR
                 DetermineProductionDate@1210190001 : Codeunit 11012014;
                 DetermPrognosisDate@1210190000 : Codeunit 11012029;
               BEGIN
                 CODEUNIT.RUN(CODEUNIT::CreateControlLinesProjCostObj,gJobRec);
                 CostContrCreateCu.ControlCostComponent(gJobRec);
                 DetermineProductionDate.DetermineBothDates(gJobRec);
                 DetermPrognosisDate.DetermineBothDates(gJobRec);

                 IF gJobRec."No." <> '' THEN
                   SETRANGE("Project No.",gJobRec."No.");

                 PeriodFilter := gJobRec.GETFILTER("Period Filter");
                 PeriodType := gJobRec.GETRANGEMAX("Period Type Filter");
               END;

    OnAfterGetRecord=BEGIN
                       CalcAmounts;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1210190030;1 ;Action    ;
                      CaptionML=ENU=Previous Period;
                      ToolTipML=ENU=Previous Period;
                      Promoted=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('<=');
                                 PeriodTypeOnAfterValidate;

                                 //SearchPeriodCu.FindPeriod(gJobRec,PeriodType,'<=');
                                 //CurrPage.UPDATE;
                               END;
                                }
      { 1210190031;1 ;Action    ;
                      CaptionML=ENU=Next Period;
                      ToolTipML=ENU=Next Period;
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('>=');
                                 PeriodTypeOnAfterValidate;

                                 //SearchPeriodCu.FindPeriod(gJobRec,PeriodType,'>=');
                                 //CurrPage.UPDATE;
                               END;
                                }
      { 1210190021;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1210190017;1 ;Action    ;
                      Name=Cost Object Labor;
                      CaptionML=ENU=Cost Object Labor;
                      Promoted=Yes;
                      Image=ItemTrackingLedger;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CLEAR(CostObjectFormLAbor);
                                 CostObjectFormLAbor.SetDefaultCostComp(gJobRec, "Cost Component");
                                 CostObjectFormLAbor.RUNMODAL;
                               END;
                                }
      { 1210190015;1 ;Action    ;
                      Name=Cost Object Material;
                      CaptionML=ENU=Cost Object Material;
                      Promoted=Yes;
                      Image=ItemTrackingLedger;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CLEAR(CostObjectFormOther);
                                 CostObjectFormOther.SetDefaultCostComp(gJobRec, "Cost Component", 1);
                                 CostObjectFormOther.RUN;
                               END;
                                }
      { 1210190013;1 ;Action    ;
                      Name=Cost Object Subcontracting;
                      CaptionML=ENU=Cost Object Subcontracting;
                      Promoted=Yes;
                      Image=ItemTrackingLedger;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CLEAR(CostObjectFormOther);
                                 CostObjectFormOther.SetDefaultCostComp(gJobRec, "Cost Component", 2);
                                 CostObjectFormOther.RUN;
                               END;
                                }
      { 1210190011;1 ;Action    ;
                      Name=Cost Object Plant;
                      CaptionML=ENU=Cost Object Plant;
                      Promoted=Yes;
                      Image=ItemTrackingLedger;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CLEAR(CostObjectFormOther);
                                 CostObjectFormOther.SetDefaultCostComp(gJobRec, "Cost Component", 3);
                                 CostObjectFormOther.RUN;
                               END;
                                }
      { 1210190009;1 ;Action    ;
                      Name=Cost Object Sundry;
                      CaptionML=ENU=Cost Object Sundry;
                      Promoted=Yes;
                      Image=ItemTrackingLedger;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CLEAR(CostObjectFormOther);
                                 CostObjectFormOther.SetDefaultCostComp(gJobRec, "Cost Component", 4);
                                 CostObjectFormOther.RUN;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210190006;1;Group  ;
                CaptionML=ENU=Options }

    { 1210190005;2;Field  ;
                CaptionML=ENU=View by;
                OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             FindPeriod('');
                             PeriodTypeOnAfterValidate;
                           END;
                            }

    { 1210190004;2;Field  ;
                CaptionML=ENU=Date Filter;
                SourceExpr=PeriodFilter;
                OnValidate=VAR
                             ApplicationManagement@1001 : Codeunit 1;
                           BEGIN
                             IF ApplicationManagement.MakeDateFilter(PeriodFilter) = 0 THEN;
                             gJobRec.SETFILTER("Period Filter", PeriodFilter);
                             PeriodFilter := gJobRec.GETFILTER("Period Filter");

                             PeriodFilterOnAfterValidate;
                           END;
                            }

    { 1210190007;1;Group  ;
                Name=Cost Components;
                GroupType=Group }

    { 1210190000;2;Group  ;
                Editable=FALSE;
                GroupType=Repeater }

    { 1210190001;3;Field  ;
                SourceExpr="Cost Component" }

    { 1210190003;3;Field  ;
                SourceExpr=Description }

    { 1210190008;3;Field  ;
                Name=OriginalBudgetAmountDec;
                CaptionML=ENU=Original Budget;
                SourceExpr=OriginalBudgetAmountDec }

    { 1210190010;3;Field  ;
                Name=AdjustmentsDec;
                CaptionML=ENU=Adjustments;
                SourceExpr=AdjustmentsDec }

    { 1210190012;3;Field  ;
                Name=AdjustmentsHoursDec;
                CaptionML=ENU=Adjustments Hours;
                SourceExpr=AdjustmentsHoursDec;
                Visible=FALSE }

    { 1210190014;3;Field  ;
                Name=ExtensionDec;
                CaptionML=ENU=Extensions;
                SourceExpr=ExtensionDec }

    { 1210190016;3;Field  ;
                Name=ExtensionHoursDec;
                CaptionML=ENU=Extensions Hours;
                SourceExpr=ExtensionHoursDec;
                Visible=FALSE }

    { 1210190018;3;Field  ;
                Name=OptionsDec;
                CaptionML=ENU=Options;
                SourceExpr=OptionsDec }

    { 1210190022;3;Field  ;
                CaptionML=ENU=Total Budget;
                SourceExpr=[OriginalBudgetAmountDec + AdjustmentsDec + ExtensionDec + OptionsDec ] }

    { 1210190020;3;Field  ;
                Name=BudgetHoursDec;
                CaptionML=ENU=Buget Hours;
                SourceExpr=BudgetHoursDec }

    { 1210190058;3;Field  ;
                Name=PurchaseBudgetDec;
                CaptionML=ENU=Purchase Budget;
                SourceExpr=PurchaseBudgetDec;
                Visible=FALSE }

    { 1210190046;3;Field  ;
                Name=PurchaseDec;
                CaptionML=ENU=Purchase;
                SourceExpr=PurchaseDec;
                Visible=FALSE }

    { 1100485000;3;Field  ;
                CaptionML=ENU=Purchase Period;
                SourceExpr=PurchasePeriodDec;
                Visible=FALSE }

    { 1210190100;3;Field  ;
                Name=PurchasePurchActionDec;
                CaptionML=ENU=Purchase (Purchase Action);
                SourceExpr=PurchasePurchActionDec;
                Visible=FALSE }

    { 1210190104;3;Field  ;
                Name=OpenPurchDec;
                CaptionML=ENU=Open (Purchase);
                SourceExpr=OpenPurchDec;
                Visible=FALSE }

    { 1210190054;3;Field  ;
                Name=ReceivedNotInvoicedDec;
                CaptionML=ENU=Received/Not Invoiced;
                SourceExpr=ReceivedNotInvoicedDec;
                Visible=FALSE }

    { 1210190052;3;Field  ;
                Name=OpenOvhSurchPurchaseDec;
                CaptionML=ENU=Overhead Surcharge Open (Purchase);
                SourceExpr=OpenOvhSurchPurchaseDec;
                Visible=FALSE }

    { 1210190060;3;Field  ;
                Name=ReceivedNotInvoicedHoursDec;
                CaptionML=ENU=Received Not Invoiced Hours;
                SourceExpr=ReceivedNotInvoicedHoursDec;
                Visible=FALSE }

    { 1210190050;3;Field  ;
                Name=RiscCoverageDec;
                CaptionML=ENU=Risc Coverage;
                SourceExpr=RiscCoverageDec;
                Visible=FALSE }

    { 1210190048;3;Field  ;
                Name=RiscCoveragWithdrawDec;
                CaptionML=ENU=Risc Coverage Withdraw;
                SourceExpr=RiscCoveragWithdrawDec;
                Visible=FALSE }

    { 1210190107;3;Field  ;
                Name=WageCostsToPostDec;
                CaptionML=ENU=Open Amount (Hours);
                SourceExpr=OpenAmountHoursDec;
                Visible=FALSE }

    { 1210190109;3;Field  ;
                Name=OpenOvhSurchHoursDec;
                CaptionML=ENU=Open Ovh. Surch. (Hours);
                SourceExpr=OpenOvhSurchHoursDec;
                Visible=FALSE }

    { 1210190070;3;Field  ;
                Name=ActualcostsDec;
                CaptionML=ENU=Actual;
                SourceExpr=ActualCostsDec }

    { 1210190044;3;Field  ;
                Name=ActualHoursDec;
                CaptionML=ENU=Actual Hours;
                SourceExpr=ActualHoursDec }

    { 1100485004;3;Field  ;
                CaptionML=ENU=Available;
                SourceExpr=AvailableDec;
                Visible=FALSE }

    { 1210190074;3;Field  ;
                CaptionML=ENU=Total Costs;
                OptionCaptionML=ENU=Total Cost;
                SourceExpr=TotCostDec }

    { 1100485002;3;Field  ;
                CaptionML=ENU=Total Hours;
                SourceExpr=TotHoursDec;
                Visible=FALSE }

    { 1210190076;3;Field  ;
                Name=PurchaseCostDec;
                CaptionML=ENU=Total Costs (Purchase Action);
                SourceExpr=PurchaseCostDec;
                Visible=FALSE }

    { 1210190078;3;Field  ;
                Name=AllowedDec;
                CaptionML=ENU=Allowed;
                SourceExpr=AllowedDec;
                Visible=TRUE }

    { 1210190080;3;Field  ;
                Name=AllowedHoursDec;
                CaptionML=ENU=Allowed Hours;
                SourceExpr=AllowedHoursDec }

    { 1210190064;3;Field  ;
                Name=ResultDec;
                CaptionML=ENU=Result;
                SourceExpr=ResultDec }

    { 1210190102;3;Field  ;
                Name=Progosisdec;
                CaptionML=ENU=Prognose;
                SourceExpr=Prognosisdec;
                Visible=FALSE }

    { 1210190111;3;Field  ;
                CaptionML=ENU=Hours Prognosis;
                SourceExpr=PrognHoursDec;
                Visible=FALSE }

    { 1210190082;3;Field  ;
                Name=PrognosisTotalCost;
                CaptionML=ENU=Prognosis Total Cost;
                SourceExpr=PrognTotCostDec;
                Visible=FALSE }

    { 1210190084;3;Field  ;
                Name=PrognosisResult;
                CaptionML=ENU=Prognosis Result;
                SourceExpr=PrognResultDec;
                Visible=FALSE }

    { 1210190086;3;Field  ;
                Name=PrognEndResultDec;
                CaptionML=ENU=Prognosis End Result;
                SourceExpr=PrognEndResultDec;
                Visible=FALSE }

    { 1210190062;3;Field  ;
                Name=ActualsPeriodDec;
                CaptionML=ENU=Actual Cost Period;
                SourceExpr=ActualsPeriodDec;
                Visible=FALSE }

    { 1210190066;3;Field  ;
                Name=ActualHoursPeriodDec;
                CaptionML=ENU=Actual Hours Period;
                SourceExpr=ActualHoursPeriodDec;
                Visible=FALSE }

    { 1210190088;3;Field  ;
                Name=AllowedPeriod;
                CaptionML=ENU=Allowed Costs Period;
                SourceExpr=AllowedDec - PrevAllowedDec;
                Visible=FALSE }

    { 1210190068;3;Field  ;
                Name=AllowedHoursPeriod;
                CaptionML=ENU=Allowed Hours Period;
                SourceExpr=AllowedHoursDec-PrevAllowedHoursDec;
                Visible=FALSE }

    { 1210190090;3;Field  ;
                Name=PurchaseResult;
                CaptionML=ENU=Purchase Result;
                SourceExpr=PurchResultDec;
                Visible=FALSE }

    { 1210190092;3;Field  ;
                Name=EstimatedPurchResultdec;
                CaptionML=ENU=Estimated Purchase Result;
                SourceExpr=EstimPurchResultDec;
                Visible=FALSE }

    { 1210190094;3;Field  ;
                Name=ActualPurchResultDec;
                CaptionML=ENU=Actual Purchase Result;
                SourceExpr=ActualPurchResultDec;
                Visible=FALSE }

    { 1210190096;3;Field  ;
                Name=TotPurchResultDec;
                CaptionML=ENU=Total Result;
                SourceExpr=TotPurchResultDec;
                Visible=FALSE }

    { 1210190072;3;Field  ;
                Name=HoursResult;
                CaptionML=ENU=Hours Result;
                SourceExpr=AllowedHoursDec-ActualHoursDec }

    { 1210190098;3;Field  ;
                Name=PeriodResult;
                CaptionML=ENU=Result Period;
                SourceExpr=AllowedDec - PrevAllowedDec - ActualsPeriodDec;
                Visible=FALSE }

    { 1210190056;3;Field  ;
                Name=HoursResultPeriod;
                CaptionML=ENU=Result Hours Period;
                SourceExpr=AllowedHoursDec-PrevAllowedHoursDec-ActualHoursPeriodDec;
                Visible=FALSE }

  }
  CODE
  {
    VAR
      gJobRec@1210190043 : Record 11072003;
      SearchPeriodCu@1210190042 : Codeunit 11012013;
      CostContrCreateCu@1100485004 : Codeunit 11012011;
      CostContMgt@1210190041 : Codeunit 11012006;
      PeriodType@1210190040 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      TotCostDec@1210190008 : Decimal;
      TotHoursDec@1100485001 : Decimal;
      PrognTotCostDec@1210190009 : Decimal;
      PrognResultDec@1210190010 : Decimal;
      PurchResultDec@1210190039 : Decimal;
      OriginalBudgetAmountDec@1210190000 : Decimal;
      AdjustmentsDec@1210190001 : Decimal;
      AdjustmentsHoursDec@1210190002 : Decimal;
      ExtensionDec@1210190003 : Decimal;
      ExtensionHoursDec@1210190004 : Decimal;
      OptionsDec@1210190005 : Decimal;
      BudgetHoursDec@1210190007 : Decimal;
      ActualCostsDec@1210190011 : Decimal;
      ActualHoursDec@1210190012 : Decimal;
      AllowedHoursDec@1210190014 : Decimal;
      ActualsPeriodDec@1210190015 : Decimal;
      ActualHoursPeriodDec@1210190016 : Decimal;
      PurchaseBudgetDec@1210190017 : Decimal;
      OpenPurchDec@1210190018 : Decimal;
      ReceivedNotInvoicedDec@1210190019 : Decimal;
      OpenOvhSurchPurchaseDec@1210190020 : Decimal;
      RiscCoverageDec@1210190021 : Decimal;
      RiscCoveragWithdrawDec@1210190022 : Decimal;
      PurchaseDec@1210190023 : Decimal;
      PurchasePeriodDec@1100485000 : Decimal;
      PurchaseCostDec@1210190025 : Decimal;
      AllowedDec@1210190026 : Decimal;
      PrognEndResultDec@1210190027 : Decimal;
      PrevAllowedDec@1210190028 : Decimal;
      EstimPurchResultDec@1210190029 : Decimal;
      ActualPurchResultDec@1210190030 : Decimal;
      TotPurchResultDec@1210190031 : Decimal;
      PurchasePurchActionDec@1210190032 : Decimal;
      Prognosisdec@1210190033 : Decimal;
      PrevAllowedHoursDec@1210190034 : Decimal;
      ReceivedNotInvoicedHoursDec@1210190035 : Decimal;
      ResultDec@1210190036 : Decimal;
      OpenProdDec@1210190038 : Decimal;
      OpenOvhSurchProdDec@1210190037 : Decimal;
      OpenAmountHoursDec@1210190006 : Decimal;
      OpenOvhSurchHoursDec@1210190024 : Decimal;
      AvailableDec@1100485002 : Decimal;
      PrognHoursDec@1210190013 : Decimal;
      PeriodFilter@1100485003 : Text[50];
      CostObjectFormOther@1210190113 : Page 11012090;
      CostObjectFormLAbor@1210190044 : Page 11012091;

    PROCEDURE CalcAmounts@1210190001();
    VAR
      CostObjectControl@1210190000 : Record 11012047;
      lAllowedDec@1210190010 : Decimal;
      lAllowedHoursDec@1210190009 : Decimal;
      lPrevAllowedDec@1210190008 : Decimal;
      lPrevAllowedHoursDec@1210190007 : Decimal;
      lPurchaseDec@1210190006 : Decimal;
      lEstimPurchResultDec@1210190005 : Decimal;
      lPurchCostDec@1210190004 : Decimal;
      lActualPurchResultDec@1210190003 : Decimal;
      lTotPurchResultDec@1210190002 : Decimal;
    BEGIN
      ClearVariables;
      WITH CostObjectControl DO BEGIN
        SETCURRENTKEY("Project No.","Cost Component","Cost Object");
        SETRANGE("Project No.",gJobRec."No.");
        SETRANGE("Cost Component", Rec."Cost Component");
        IF FINDSET(FALSE, FALSE) THEN BEGIN
          REPEAT
            SETFILTER("Period Filter",gJobRec.GETFILTER("Period Filter"));
            SETFILTER("Cumulation Filter",gJobRec.GETFILTER("Cumulation Filter"));
            SETFILTER("Progress Filter",gJobRec.GETFILTER("Progress Filter"));
            SETFILTER(PrevProgressFilter,gJobRec.GETFILTER(PrevProgressFilter));
            SETFILTER("Prognosis Filter",gJobRec.GETFILTER("Prognosis Filter"));
            SETFILTER(PrevPrognosisFilter,gJobRec.GETFILTER(PrevPrognosisFilter));
            SETFILTER("Purchase Action Filter",gJobRec.GETFILTER("Purchase Action Filter"));

            CostContMgt.CalcFieldsCostObj(CostObjectControl);

            OriginalBudgetAmountDec := OriginalBudgetAmountDec + "Original Budget Amount";
            AdjustmentsDec := AdjustmentsDec + Adjustments;
            AdjustmentsHoursDec := AdjustmentsHoursDec + "Adjustments Hours";
            ExtensionDec := ExtensionDec + Extension;
            ExtensionHoursDec := ExtensionHoursDec + "Extension Hours";
            OptionsDec := OptionsDec + Options;
            BudgetHoursDec := BudgetHoursDec + "Budget Hours";
            PurchaseBudgetDec := PurchaseBudgetDec + "Purchase Budget";
            PurchaseDec := PurchaseDec + Purchase;
            PurchasePeriodDec := PurchasePeriodDec + "Purchase Period";
            PrognResultDec := PrognResultDec + Prognosis;

            OpenPurchDec := OpenPurchDec + CostContMgt.OutstandingCostObj(CostObjectControl,FALSE);
            ReceivedNotInvoicedDec := ReceivedNotInvoicedDec + CostContMgt.ReceivedNotInvoicedCostObj(CostObjectControl,FALSE);
            ReceivedNotInvoicedHoursDec :=
              ReceivedNotInvoicedHoursDec + CostContMgt.ReceivedNotInvHoursCostObj(CostObjectControl, FALSE);
            OpenOvhSurchPurchaseDec := OpenOvhSurchPurchaseDec + CostContMgt.OpenOvhPurchCostObj(CostObjectControl,FALSE);

            RiscCoverageDec := RiscCoverageDec + "Risc Coverage";
            RiscCoveragWithdrawDec := RiscCoveragWithdrawDec + "Risc Coverage Withdraw";
            ActualCostsDec := ActualCostsDec + "Actual Costs";
            ActualHoursDec := ActualHoursDec + "Actual Hours";
            ActualsPeriodDec := ActualsPeriodDec + "Actuals Period";
            ActualHoursPeriodDec := ActualHoursPeriodDec + "Actual Hours Period";
            OpenAmountHoursDec := OpenAmountHoursDec + "Open Amount (Hours)";
            OpenOvhSurchHoursDec := OpenOvhSurchHoursDec + "Open Ovh. Surch. (Hours)";
            OpenProdDec := OpenProdDec + "Open (Inventory)";
            OpenOvhSurchProdDec := OpenOvhSurchProdDec + "Open Ovh. Surch. (Inventory)";
            PrognHoursDec := PrognHoursDec + "Hours Prognosis";

            CostContMgt.AllowedAndPurchCostObj(
              CostObjectControl,
              lAllowedDec, lAllowedHoursDec, lPrevAllowedDec, lPrevAllowedHoursDec,
              lPurchaseDec, lEstimPurchResultDec, lPurchCostDec, lActualPurchResultDec, lTotPurchResultDec,TRUE);
            AllowedDec  := AllowedDec + lAllowedDec;
            AllowedHoursDec  := AllowedHoursDec +  lAllowedHoursDec;
            PrevAllowedDec  := PrevAllowedDec + lPrevAllowedDec;
            PrevAllowedHoursDec  := PrevAllowedHoursDec + lPrevAllowedHoursDec;
            PurchaseDec  := PurchaseDec + lPurchaseDec;
            EstimPurchResultDec  := EstimPurchResultDec + lEstimPurchResultDec;
            PurchaseCostDec  := PurchaseCostDec + lPurchCostDec;
            ActualPurchResultDec  := ActualPurchResultDec + lActualPurchResultDec;
            TotPurchResultDec  := TotPurchResultDec + lTotPurchResultDec;

            TotCostDec := TotCostDec + CostContMgt.TotCostCostObj(CostObjectControl,FALSE);
            TotHoursDec := TotHoursDec + CostContMgt.TotHoursCostObj(CostObjectControl,FALSE);
            ResultDec := ResultDec + CostContMgt.PurchResultCostObj(CostObjectControl,FALSE);
            PrognEndResultDec := PrognEndResultDec + CostContMgt.PrognEndResultCostObj(CostObjectControl,FALSE);
            PrognTotCostDec := PrognTotCostDec + CostContMgt.PrognTotCostCostObj(CostObjectControl,FALSE);
            PrognResultDec := PrognResultDec + CostContMgt.PrognResultCostObj(CostObjectControl,FALSE);
            PurchResultDec := PurchResultDec + CostContMgt.PurchResultCostObj(CostObjectControl,FALSE);

            AvailableDec := Budget - TotCostDec;
          UNTIL NEXT = 0;
        END;
      END;
    END;

    PROCEDURE ClearVariables@1210190002();
    BEGIN
      CLEAR(TotCostDec);
      CLEAR(TotHoursDec);
      CLEAR(ResultDec);
      CLEAR(PrognTotCostDec);
      CLEAR(PrognResultDec);
      CLEAR(PurchResultDec);
      CLEAR(OriginalBudgetAmountDec);
      CLEAR(AdjustmentsDec);
      CLEAR(AdjustmentsHoursDec);
      CLEAR(ExtensionDec);
      CLEAR(ExtensionHoursDec);
      CLEAR(OptionsDec);
      CLEAR(BudgetHoursDec);
      CLEAR(PurchaseBudgetDec);
      CLEAR(PurchaseDec);
      CLEAR(PurchasePurchActionDec);
      CLEAR(OpenPurchDec);
      CLEAR(ReceivedNotInvoicedDec);
      CLEAR(OpenOvhSurchPurchaseDec);
      CLEAR(ReceivedNotInvoicedHoursDec);
      CLEAR(RiscCoverageDec);
      CLEAR(RiscCoveragWithdrawDec);
      CLEAR(ActualCostsDec);
      CLEAR(ActualHoursDec);
      CLEAR(PurchaseCostDec);
      CLEAR(AllowedDec);
      CLEAR(AllowedHoursDec);
      CLEAR(Prognosisdec);
      CLEAR(PrognEndResultDec);
      CLEAR(PrognHoursDec);
      CLEAR(ActualsPeriodDec);
      CLEAR(ActualHoursPeriodDec);
      CLEAR(PrevAllowedDec);
      CLEAR(PrevAllowedHoursDec);
      CLEAR(EstimPurchResultDec);
      CLEAR(ActualPurchResultDec);
      CLEAR(TotPurchResultDec);
      CLEAR(OpenAmountHoursDec);
      CLEAR(OpenOvhSurchHoursDec);
    END;

    PROCEDURE SetDefault@1210190014(VAR lJobRec@1210190000 : Record 11072003);
    BEGIN
      gJobRec.COPY(lJobRec);
    END;

    PROCEDURE Caption@1210190000() Caption : Text[250];
    BEGIN
      EXIT(gJobRec."No." + ' ' + gJobRec.Description);
    END;

    LOCAL PROCEDURE gJobRecGETFILTERCumulationFilt@19043881(VAR Text@19043882 : Text[1024]);
    BEGIN
      PeriodFilter := Text;
    END;

    LOCAL PROCEDURE DayPeriodTypeOnPush@19008851();
    BEGIN
      SearchPeriodCu.FindPeriod(gJobRec,PeriodType,'');
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnPush@19046063();
    BEGIN
      SearchPeriodCu.FindPeriod(gJobRec,PeriodType,'');
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnPush@19047374();
    BEGIN
      SearchPeriodCu.FindPeriod(gJobRec,PeriodType,'');
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnPush@19018850();
    BEGIN
      SearchPeriodCu.FindPeriod(gJobRec,PeriodType,'');
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE YearPeriodTypeOnPush@19051042();
    BEGIN
      SearchPeriodCu.FindPeriod(gJobRec,PeriodType,'');
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE AccountingPerioPeriodTypOnPush@19038761();
    BEGIN
      SearchPeriodCu.FindPeriod(gJobRec,PeriodType,'');
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE DayPeriodTypeOnValidate@19012979();
    BEGIN
      DayPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnValidate@19058475();
    BEGIN
      WeekPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnValidate@19021027();
    BEGIN
      MonthPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnValidate@19015346();
    BEGIN
      QuarterPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE YearPeriodTypeOnValidate@19064743();
    BEGIN
      YearPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE AccountingPerioPeriodTypeOnVal@19058901();
    BEGIN
      AccountingPerioPeriodTypOnPush;
    END;

    LOCAL PROCEDURE PeriodTypeOnAfterValidate@1210190003();
    BEGIN
      PeriodFilter := gJobRec.GETFILTER("Period Filter");
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PeriodFilterOnAfterValidate@1210190007();
    BEGIN
      gJobRec.SETFILTER("Cumulation Filter", '..%1', gJobRec.GETRANGEMAX("Period Filter"));
      CurrPage.UPDATE;
    END;

    PROCEDURE FindPeriod@1210190006(SearchString@1210190000 : Text[3]);
    BEGIN
      SearchPeriodCu.FindPeriod(gJobRec,PeriodType,SearchString);
    END;

    BEGIN
    END.
  }
}

