OBJECT Page 11020263 Projects by Responsible Person
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Projects by Responsible Person;
    SourceTable=Table11072003;
    PageType=List;
    OnInit=BEGIN
             BuyerManagementEnable := TRUE;
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 IF UserSetup.GET(USERID) THEN
                   UserSetup.TESTFIELD("Employee No.")
                 ELSE
                   ERROR(STRSUBSTNO(Text000, UserSetup.TABLECAPTION, USERID));

                 JobsSetup.GET;
                 RespPersonRec.SETCURRENTKEY("Employee No.");
                 RespPersonRec.SETRANGE("Employee No.",UserSetup."Employee No.");
                 //RespPersonRec.SETRANGE(Responsibility,JobsSetup."Responsibility Site Manager"); //T003307: No limit to Site Manager anymore.
                 IF RespPersonRec.FINDSET THEN
                   REPEAT
                     IF NOT TempProjectRec.GET(RespPersonRec."Project No.") THEN BEGIN
                       ProjRec.GET(RespPersonRec."Project No.");
                       TempProjectRec := ProjRec;
                       TempProjectRec.INSERT;
                     END;
                   UNTIL RespPersonRec.NEXT = 0;

                 EnableControls; //mg, 15-12-10: M24552

                 SETFILTER("Project Status", '%1|%2|%3|%4|%5', "Project Status"::Estimation, "Project Status"::Preparation,
                   "Project Status"::Production, "Project Status"::"Technical Finished", "Project Status"::"Administrative Finished");
               END;

    OnFindRecord=BEGIN
                   TempProjectRec.COPY(Rec);
                   IF NOT TempProjectRec.FIND(Which) THEN
                     EXIT(FALSE);
                   Rec := TempProjectRec;
                   EXIT(TRUE);
                 END;

    OnNextRecord=VAR
                   CurrentSteps@1100485000 : Integer;
                 BEGIN
                   TempProjectRec.COPY(Rec);
                   CurrentSteps := TempProjectRec.NEXT(Steps);
                   IF CurrentSteps <> 0 THEN BEGIN
                     Rec := TempProjectRec;
                   END;
                   EXIT(CurrentSteps);
                 END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02

                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100485058;1 ;ActionGroup;
                      CaptionML=ENU=&Hours }
      { 1100485061;2 ;Action    ;
                      AccessByPermission=Page 11020241=X;
                      CaptionML=ENU=Hours Accounting Project;
                      Image=CalculateWIP;
                      OnAction=VAR
                                 HourAccProjFrm@1100485000 : Page 11020241;
                               BEGIN
                                 HourAccProjFrm.Setfilter("No.");
                                 HourAccProjFrm.RUN;
                               END;
                                }
      { 1100525004;2 ;Action    ;
                      AccessByPermission=Page 11072217=X;
                      CaptionML=ENU=Site Management Hour Accounting by Project;
                      Image=CalculateWIP;
                      OnAction=BEGIN
                                 TESTFIELD("No.");
                                 RunSiteMgtProjlHours("No.");
                               END;
                                }
      { 1100525003;1 ;ActionGroup;
                      CaptionML=ENU=S@les in Construct }
      { 1100525009;2 ;Action    ;
                      AccessByPermission=Page 11072653=X;
                      CaptionML=ENU=Dispatch Note;
                      Image=Bins;
                      OnAction=BEGIN
                                 RunSiB("No.", 1);  //DP00065
                               END;
                                }
      { 1100525010;2 ;Action    ;
                      AccessByPermission=Page 11072665=X;
                      CaptionML=ENU=Approved Dispatch Note;
                      Image=Approve;
                      OnAction=BEGIN
                                 RunSiB("No.", 2);  //DP00065
                               END;
                                }
      { 1100525012;2 ;Action    ;
                      AccessByPermission=Page 11072656=X;
                      CaptionML=ENU=Invoice;
                      Image=Invoice;
                      OnAction=BEGIN
                                 RunSiB("No.", 3);  //DP00065
                               END;
                                }
      { 1100525014;2 ;Action    ;
                      AccessByPermission=Page 11072656=X;
                      CaptionML=ENU=Approved Invoice;
                      Image=Confirm;
                      OnAction=BEGIN
                                 RunSiB("No.", 4);  //DP00065
                               END;
                                }
      { 1100485036;1 ;ActionGroup;
                      CaptionML=ENU=&Purchase }
      { 1100525111;2 ;Action    ;
                      CaptionML=ENU=Advice Orders;
                      RunObject=Page 11012102;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=OrderTracking }
      { 1100485039;2 ;Action    ;
                      CaptionML=ENU=Purchase Actions;
                      RunObject=Page 11012034;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=OrderTracking }
      { 1100525112;2 ;Action    ;
                      CaptionML=ENU=Budget &Adjustments;
                      RunObject=Page 11012012;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=Balance }
      { 1100525120;2 ;Action    ;
                      AccessByPermission=Page 11012071=X;
                      CaptionML=ENU=Purchase Orders;
                      Image=Document;
                      OnAction=BEGIN
                                 ShowPurchaseOrdersForProject;
                               END;
                                }
      { 1100525113;2 ;Action    ;
                      AccessByPermission=Page 53=X;
                      CaptionML=ENU=Purchase Quotes;
                      Image=Quote;
                      OnAction=BEGIN
                                 ShowPurchaseQuotesForProject;
                               END;
                                }
      { 1100485040;2 ;Action    ;
                      CaptionML=ENU=Receipts;
                      RunObject=Page 11130137;
                      RunPageLink=Job No.=FIELD(No.);
                      Image=PostedReceipts }
      { 1100525001;2 ;Action    ;
                      AccessByPermission=Page 11072651=X;
                      CaptionML=ENU=Dispatch Note (SiB);
                      Image=Bins;
                      OnAction=BEGIN
                                 RunDispatchNoteForm();
                               END;
                                }
      { 1100525016;1 ;ActionGroup;
                      CaptionML=ENU=Plant }
      { 1100525027;2 ;Action    ;
                      AccessByPermission=Page 11012559=X;
                      CaptionML=ENU=Current Plant Inventory;
                      Image=ResourcePlanning;
                      OnAction=VAR
                                 PlantInventory@1100409004 : Record 11012555;
                                 PlantMgtComp@1100409003 : Record 11020586;
                                 PlantInventoryPage@1100409002 : Page 11012559;
                                 PlantCompany@1100409001 : Text[30];
                                 PlantLocationFilter@1100409000 : Text[250];
                               BEGIN
                                 TESTFIELD("No.");
                                 IF NOT PlantMgtComp.PlantLocationFilterOfProject("No.", PlantLocationFilter, PlantCompany) THEN
                                   EXIT;
                                 PlantInventory.FILTERGROUP(9);
                                 PlantInventory.SETFILTER(Location, PlantLocationFilter);
                                 PlantInventory.FILTERGROUP(0);
                                 PlantInventoryPage.SETTABLEVIEW(PlantInventory);
                                 PlantInventoryPage.SetCompany(PlantCompany);
                                 PlantInventoryPage.RUNMODAL;
                               END;
                                }
      { 1100525025;2 ;Action    ;
                      AccessByPermission=Page 11012560=X;
                      CaptionML=ENU=Plant Inventory Course;
                      Image=ResourcePlanning;
                      OnAction=VAR
                                 PlantInventory@1100409004 : Record 11012555;
                                 PlantMgtComp@1100409003 : Record 11020586;
                                 PlantInventHistPage@1100409002 : Page 11012560;
                                 PlantCompany@1100409001 : Text[30];
                                 PlantLocationFilter@1100409000 : Text[250];
                               BEGIN
                                 TESTFIELD("No.");
                                 IF NOT PlantMgtComp.PlantLocationFilterOfProject("No.", PlantLocationFilter, PlantCompany) THEN
                                   EXIT;
                                 PlantInventory.FILTERGROUP(9);
                                 PlantInventory.SETFILTER(Location, PlantLocationFilter);
                                 PlantInventory.FILTERGROUP(0);
                                 PlantInventHistPage.SETTABLEVIEW(PlantInventory);
                                 PlantInventHistPage.SetCompany(PlantCompany);
                                 PlantInventHistPage.RUNMODAL;
                               END;
                                }
      { 1100525028;2 ;Action    ;
                      AccessByPermission=Page 11125533=X;
                      ShortCutKey=Return;
                      CaptionML=ENU=Plant Request (Site Manager Form);
                      Visible=PlantRequestSMFEnable;
                      Enabled=PlantRequestSMFEnable;
                      PromotedIsBig=Yes;
                      Image=NewResource;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 RunOtherFormsCU@1100409000 : Codeunit 11125525;
                               BEGIN
                                 TESTFIELD("No.");
                                 RunOtherFormsCU.RunPlantRequestByProject("No.");
                               END;
                                }
      { 1100525127;1 ;ActionGroup;
                      CaptionML=ENU=&Sales }
      { 1100525218;2 ;Action    ;
                      AccessByPermission=Page 11012025=X;
                      CaptionML=ENU=&Installments;
                      Image=AmountByPeriod;
                      OnAction=VAR
                                 ProjectInstallment@1100525000 : Record 11012018;
                                 ProjectInstallForm@1100525001 : Page 11012025;
                               BEGIN
                                 //mg, 10-05-11: C-028275
                                 ProjectInstallment.FILTERGROUP(4);
                                 ProjectInstallment.SETRANGE("Project No.", "No.");
                                 ProjectInstallment.FILTERGROUP(0);
                                 //ProjectInstallment.SETRANGE("Project No.", "No."); //call 30955.n  //*32118.o

                                 //PAGE.RUN(PAGE::"Project Installments", ProjectInstallment);  //*32118.o
                                 //*32118.sn
                                 ProjectInstallForm.SETTABLEVIEW(ProjectInstallment);
                                 ProjectInstallForm.SetProjectFilterGroup(4);
                                 ProjectInstallForm.RUN;
                                 //*32118.en
                               END;
                                }
      { 1100525219;2 ;Action    ;
                      AccessByPermission=Page 11012043=X;
                      CaptionML=ENU=&Cost Plus Entries;
                      Image=AdjustEntries;
                      OnAction=VAR
                                 ProjectCostPlusEntry@1100525000 : Record 11012019;
                               BEGIN
                                 //mg, 10-05-11: C-028275
                                 ProjectCostPlusEntry.FILTERGROUP(4);
                                 ProjectCostPlusEntry.SETRANGE("Project No.", "No.");
                                 ProjectCostPlusEntry.FILTERGROUP(0);
                                 ProjectCostPlusEntry.SETRANGE("Project No.", "No."); //call 30955
                                 PAGE.RUN(PAGE::"Project Cost Plus Entries", ProjectCostPlusEntry);
                               END;
                                }
      { 1100525130;2 ;Action    ;
                      AccessByPermission=Page 11012047=X;
                      CaptionML=ENU=Settlement Sheet;
                      Image=ApplyEntries;
                      OnAction=VAR
                                 ProjectInfoPaneMgt@1100525001 : Codeunit 11012066;
                               BEGIN
                                 ProjectInfoPaneMgt.LookUpSettlementSheetsWithFilt(Rec, TRUE); //mg.c, 10-05-11: C-028275
                               END;
                                }
      { 1100525129;2 ;Action    ;
                      AccessByPermission=Report 11012013=X;
                      CaptionML=ENU=Create Cost Plus;
                      Image=SelectEntries;
                      OnAction=VAR
                                 lvProjRec@1100525000 : Record 11072003;
                                 lvProjLedgEntryRec@1100525004 : Record 11072005;
                                 lvPostedHourLineRec@1100525003 : Record 11012085;
                                 lvHourAccLineRec@1100525002 : Record 11012039;
                                 lvCreateCostPlusRpt@1100525001 : Report 11012013;
                               BEGIN
                                 //**4PS
                                 lvProjRec.SETRANGE("No.", "No.");
                                 lvProjLedgEntryRec.SETRANGE("Cost Plus Entry Created", FALSE);
                                 lvPostedHourLineRec.SETRANGE("Cost Plus Entry Created", FALSE);
                                 lvHourAccLineRec.SETRANGE("Cost Plus Entry Created", FALSE);

                                 lvCreateCostPlusRpt.SETTABLEVIEW(lvProjRec);
                                 lvCreateCostPlusRpt.SETTABLEVIEW(lvProjLedgEntryRec);
                                 lvCreateCostPlusRpt.SETTABLEVIEW(lvPostedHourLineRec);
                                 lvCreateCostPlusRpt.SETTABLEVIEW(lvHourAccLineRec);
                                 lvCreateCostPlusRpt.SetDefault("No.");
                                 lvCreateCostPlusRpt.RUN;
                               END;
                                }
      { 1100525220;2 ;Action    ;
                      AccessByPermission=Page 143=X;
                      CaptionML=ENU=In&voices;
                      Image=Invoice;
                      OnAction=VAR
                                 lSalesInvHeader@1210190002 : Record 112;
                                 TmpSalesInvHeader@1100525001 : TEMPORARY Record 112;
                                 lSalesInvLine@1210190001 : Record 113;
                               BEGIN
                                 lSalesInvLine.SETCURRENTKEY("Job No.","Project Invoice","Installment Invoice","Sell-to Customer No.");
                                 lSalesInvLine.SETRANGE("Job No.","No.");
                                 IF lSalesInvLine.FINDSET THEN
                                   REPEAT
                                     IF lSalesInvHeader.GET(lSalesInvLine."Document No.") THEN BEGIN
                                       IF NOT TmpSalesInvHeader.GET(lSalesInvLine."Document No.") THEN BEGIN
                                         TmpSalesInvHeader := lSalesInvHeader;
                                         TmpSalesInvHeader.INSERT;
                                       END;
                                     END;
                                   UNTIL lSalesInvLine.NEXT = 0;
                                 PAGE.RUN(PAGE::"Posted Sales Invoices", TmpSalesInvHeader);
                               END;
                                }
      { 1100525221;2 ;Action    ;
                      AccessByPermission=Page 144=X;
                      CaptionML=ENU=Credit &Memos;
                      Image=CreditMemo;
                      OnAction=VAR
                                 lSalesCrMemoHeader@1210190015 : Record 114;
                                 lSalesCrMemoLine@1210190021 : Record 115;
                               BEGIN
                                 //**4PS
                                 lSalesCrMemoHeader.CLEARMARKS;
                                 lSalesCrMemoLine.SETRANGE("Job No.","No.");
                                 IF lSalesCrMemoLine.FINDSET THEN
                                   REPEAT
                                     IF lSalesCrMemoHeader.GET(lSalesCrMemoLine."Document No.") THEN
                                       lSalesCrMemoHeader.MARK(TRUE);
                                   UNTIL lSalesCrMemoLine.NEXT = 0;

                                 lSalesCrMemoHeader.MARKEDONLY(TRUE);

                                 PAGE.RUN(PAGE::"Posted Sales Credit Memos",lSalesCrMemoHeader);
                               END;
                                }
      { 1100485033;1 ;ActionGroup;
                      CaptionML=ENU=&Control }
      { 1100525122;2 ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Ledger E&ntries;
                      RunObject=Page 11072005;
                      RunPageLink=Job No.=FIELD(No.);
                      Image=GLRegisters }
      { 1100525017;2 ;Action    ;
                      AccessByPermission=Page 11124895=X;
                      CaptionML=ENU=Snapshot;
                      OnAction=VAR
                                 ControlProjectSnapshot@1100525000 : Record 11020609;
                               BEGIN
                                 ControlProjectSnapshot.FILTERGROUP(9);
                                 ControlProjectSnapshot.SETRANGE("Project No.", "No.");
                                 ControlProjectSnapshot.FILTERGROUP(0);
                                 ControlProjectSnapshot.SETCURRENTKEY("Project No.");
                                 PAGE.RUN(0, ControlProjectSnapshot);
                               END;
                                }
      { 1100525121;2 ;Action    ;
                      CaptionML=ENU=Project Control;
                      RunObject=Page 11012092;
                      RunPageLink=No.=FIELD(No.);
                      Image=PayrollStatistics }
      { 1100485034;2 ;Action    ;
                      CaptionML=ENU=Progress;
                      RunObject=Page 11012079;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=EditLines }
      { 1100525007;2 ;Action    ;
                      AccessByPermission=Page 11072436=X;
                      CaptionML=ENU=Project recording;
                      Image=GeneralPostingSetup;
                      OnAction=BEGIN
                                 ShowProjectRecording;
                               END;
                                }
      { 1100485035;2 ;Action    ;
                      AccessByPermission=Page 11012087=X;
                      CaptionML=ENU=Prognosis;
                      Image=CalculateRemainingUsage;
                      OnAction=BEGIN
                                 LaunchPrognosisList;
                               END;
                                }
      { 1100528800;2 ;Action    ;
                      AccessByPermission=TableData 11012034=I;
                      CaptionML=ENU=Generate Prognosis current Projects;
                      Image=CreateDocument;
                      OnAction=BEGIN
                                 // dp00029.n
                                 ProcessPrognosis;
                               END;
                                }
      { 1100525128;1 ;ActionGroup;
                      Name=BuyerManagement;
                      CaptionML=ENU=&Buyer management }
      { 1100525022;2 ;Action    ;
                      CaptionML=ENU=Project Buyer Management;
                      RunObject=Page 11012523;
                      RunPageLink=No.=FIELD(No.);
                      Image=CustomerList }
      { 1100525192;2 ;ActionGroup;
                      CaptionML=ENU=Option &Groups;
                      Image=CustomerGroup }
      { 1100525193;3 ;Action    ;
                      CaptionML=ENU=Main Groups;
                      RunObject=Page 11012543;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=CustomerGroup }
      { 1100525194;3 ;Action    ;
                      CaptionML=ENU=Groups;
                      RunObject=Page 11012518;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=CustomerGroup }
      { 1100525195;3 ;Action    ;
                      CaptionML=ENU=Sub Groups;
                      RunObject=Page 11012542;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=CustomerGroup }
      { 1100525196;2 ;Action    ;
                      CaptionML=ENU=House Types;
                      RunObject=Page 11012501;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=ApplyTemplate }
      { 1100525197;2 ;Action    ;
                      CaptionML=ENU=Plots;
                      RunObject=Page 11012506;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=AddToHome }
      { 1100525198;2 ;Action    ;
                      CaptionML=ENU=Option &Quotes;
                      RunObject=Page 11012546;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=Quote }
      { 1100525199;2 ;Action    ;
                      AccessByPermission=Page 11012510=X;
                      CaptionML=ENU=Option Budget;
                      Image=Job;
                      OnAction=BEGIN
                                 //**4PS
                                 OptionBudget();
                               END;
                                }
      { 1100525023;2 ;Action    ;
                      CaptionML=ENU=Option Cross List;
                      RunObject=Page 11012524;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=CheckList;
                      OnAction=VAR
                                 OptionCrossList@1100525000 : Record 11012515;
                               BEGIN
                                 //mg, 10-12-10: C-027185
                                 OptionCrossList.FILTERGROUP(9);
                                 OptionCrossList.SETRANGE("Project No.", "No.");
                                 OptionCrossList.FILTERGROUP(0);
                                 PAGE.RUN(PAGE::"Cross List of Options", OptionCrossList);
                               END;
                                }
      { 1100525200;2 ;Action    ;
                      CaptionML=ENU=Delivery;
                      RunObject=Page 11012528;
                      RunPageView=WHERE(Plot No.=FILTER(''));
                      RunPageLink=Project No.=FIELD(No.);
                      Image=ChangeTo }
      { 1100485022;1 ;ActionGroup;
                      CaptionML=ENU=&Job Setup }
      { 1100525123;2 ;Action    ;
                      AccessByPermission=Page 11072004=X;
                      CaptionML=ENU=Sub Projects;
                      Image=Splitlines;
                      OnAction=VAR
                                 JobRec@1100525000 : Record 11072003;
                               BEGIN
                                 JobRec.SETRANGE("Single/Main/Sub Project", "Single/Main/Sub Project"::"Sub Project");
                                 JobRec.SETRANGE("Main Project", "No.");
                                 IF JobRec.FINDFIRST THEN
                                   PAGE.RUN(PAGE::"Job List", JobRec)
                                 ELSE
                                   MESSAGE(Text11012000);
                               END;
                                }
      { 1100525124;2 ;Action    ;
                      CaptionML=ENU=Elements;
                      RunObject=Page 11012028;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=BOMVersions }
      { 1100485025;2 ;Action    ;
                      AccessByPermission=Page 11012003=X;
                      CaptionML=ENU=Project Budget;
                      Image=LedgerBudget;
                      OnAction=VAR
                                 ProjBudgetFrm@1100485000 : Page 11012003;
                               BEGIN
                                 ProjBudgetFrm.Setfilter("No.");
                                 ProjBudgetFrm.RUN;
                               END;
                                }
      { 1100485026;2 ;Action    ;
                      CaptionML=ENU=Budget Adjustments;
                      RunObject=Page 11012012;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=Balance }
      { 1100485032;2 ;Action    ;
                      AccessByPermission=Page 11012007=X;
                      CaptionML=ENU=Work Breakdown Structure;
                      Image=BOM;
                      OnAction=VAR
                                 WorkBreakdownFrm@1100485000 : Page 11012007;
                               BEGIN
                                 WorkBreakdownFrm.Setfilter("No.");
                                 WorkBreakdownFrm.RUN;
                               END;
                                }
      { 1100485028;2 ;Action    ;
                      CaptionML=ENU=Extensions;
                      RunObject=Page 11012014;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=TransferFunds }
      { 1100525125;2 ;Action    ;
                      AccessByPermission=Page 11012016=X;
                      CaptionML=ENU=Principals;
                      Image=TeamSales;
                      OnAction=VAR
                                 ProjPrincipRec@1100525000 : Record 11012005;
                               BEGIN
                                 //**4PS
                                 ProjPrincipRec.RESET;
                                 ProjPrincipRec.FILTERGROUP(4);
                                 ProjPrincipRec.SETRANGE("Project No.","No.");
                                 ProjPrincipRec.FILTERGROUP(0);
                                 ProjPrincipRec.SETRANGE("Project No.","No.");
                                 IF "Bill-to Customer No." <> '' THEN
                                   IF NOT ProjPrincipRec.GET("No.", "Bill-to Customer No.") THEN
                                     ProjPrincipRec.SETRANGE(Principal, "Bill-to Customer No.");
                                 PAGE.RUN(PAGE::"Project Principal List",ProjPrincipRec);
                               END;
                                }
      { 1100485031;2 ;Action    ;
                      AccessByPermission=Page 11012920=X;
                      CaptionML=ENU=Planning;
                      Image=Planning;
                      OnAction=VAR
                                 ProjPlanFrm@1100485000 : Page 11012920;
                               BEGIN
                                 ProjPlanFrm.Setfilter("No.");
                                 ProjPlanFrm.RUN;
                               END;
                                }
      { 1100525126;1 ;ActionGroup;
                      CaptionML=ENU=P&roject tables }
      { 1100525138;2 ;Action    ;
                      CaptionML=ENU=Co&mments;
                      RunObject=Page 124;
                      RunPageLink=Table Name=CONST(Job),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 1100525139;2 ;Action    ;
                      CaptionML=ENU=&Responsible Persons;
                      RunObject=Page 11012017;
                      RunPageView=SORTING(Project No.,Line No.);
                      RunPageLink=Project No.=FIELD(No.);
                      Image=Users }
      { 1100525140;2 ;Action    ;
                      CaptionML=ENU=Project &Authorities;
                      RunObject=Page 11020231;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=ContactPerson }
      { 1100525141;2 ;Action    ;
                      CaptionML=ENU=Project &Locations;
                      RunObject=Page 11012020;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=Job }
      { 1100525142;2 ;Action    ;
                      CaptionML=ENU=Job Preferred &Locations;
                      RunObject=Page 11072043;
                      RunPageView=SORTING(Priority);
                      RunPageLink=Type=CONST(Job),
                                  No.=FIELD(No.);
                      Image=Company }
      { 1100525143;2 ;Action    ;
                      CaptionML=ENU=Project Cost &Objects;
                      RunObject=Page 11012128;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=ItemTrackingLedger }
      { 1100525144;2 ;Action    ;
                      CaptionML=ENU=Project &Budget Rates;
                      RunObject=Page 11020264;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=LedgerBudget }
      { 1100525145;2 ;Action    ;
                      CaptionML=ENU=Project &Tender Paragraphs;
                      RunObject=Page 11020346;
                      RunPageLink=No.=FIELD(No.);
                      Image=BOMVersions }
      { 1100525161;2 ;Action    ;
                      AccessByPermission=Page 11012754=X;
                      CaptionML=ENU=&Features;
                      Image=BulletList;
                      OnAction=BEGIN
                                 ShowFeatures;
                               END;
                                }
      { 1100525019;2 ;Action    ;
                      CaptionML=ENU=Doc&uments;
                      Image=Documents;
                      OnAction=VAR
                                 RecRef@1100525000 : RecordRef;
                                 DocumentFilters@1100525001 : Codeunit 11012432;
                               BEGIN
                                 //mg.sn, 08-12-10: C-027183
                                 RecRef.GETTABLE(Rec);
                                 DocumentFilters.CreateTempFilterAndExecute1(RecRef, "Global Dimension 1 Code", FALSE, TRUE);
                                 //mg.en, 08-12-10: C-027183
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525005;1 ;Action    ;
                      AccessByPermission=Page 11072003=X;
                      ShortCutKey=Return;
                      CaptionML=ENU=Job Card;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Job;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 OpenCardWithRestrictions;
                                 UpdateTempProject; //mg, 18-07-11: M23254
                               END;
                                }
      { 1100525008;1 ;Action    ;
                      AccessByPermission=Page 11072634=X;
                      CaptionML=ENU=&Pages;
                      Promoted=Yes;
                      Image=AddAction;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 PageList@1100525000 : Record 11020589;
                               BEGIN
                                 WITH PageList DO
                                   ShowList(FIELDNO("Job Pages"));
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100485000;1;Group  ;
                Editable=FALSE;
                GroupType=Repeater }

    { 1100485001;2;Field  ;
                SourceExpr="No." }

    { 1100485003;2;Field  ;
                SourceExpr=Description }

    { 1100485009;2;Field  ;
                SourceExpr=Address;
                Visible=FALSE }

    { 1100485011;2;Field  ;
                SourceExpr="Address 2";
                Visible=FALSE }

    { 1100485013;2;Field  ;
                SourceExpr="Post Code";
                Visible=FALSE }

    { 1100485015;2;Field  ;
                SourceExpr=City;
                Visible=FALSE }

    { 1100525011;2;Field  ;
                SourceExpr="Name Project Manager" }

    { 1100525013;2;Field  ;
                SourceExpr="Name Project Engineer" }

    { 1100525015;2;Field  ;
                SourceExpr="Name Site Manager" }

    { 1100485017;2;Field  ;
                SourceExpr="Phone No.";
                Visible=FALSE }

    { 1100485029;2;Field  ;
                SourceExpr="Fax No.";
                Visible=FALSE }

    { 1100485044;2;Field  ;
                SourceExpr="Bill-to Customer No." }

    { 1100485042;2;Field  ;
                SourceExpr="Principal Name" }

    { 1100525000;2;Field  ;
                SourceExpr="Project Administrator" }

    { 1100525006;2;Field  ;
                SourceExpr="Name Project Administrator" }

    { 1100485046;2;Field  ;
                SourceExpr="Project Type" }

    { 1100485048;2;Field  ;
                SourceExpr=Type }

    { 1100485052;2;Field  ;
                SourceExpr="Search Description" }

    { 1100485050;2;Field  ;
                SourceExpr="Project Status" }

    { 1100485054;2;Field  ;
                SourceExpr="Small Project Status";
                Visible=FALSE }

    { 1100485056;2;Field  ;
                SourceExpr="Small Project";
                Visible=FALSE }

    { 1100485005;2;Field  ;
                SourceExpr="Starting Date";
                Visible=FALSE }

    { 1100485007;2;Field  ;
                SourceExpr="Ending Date";
                Visible=FALSE }

    { 1100525002;2;Field  ;
                CaptionML=ENU=No. of Dispatch Notes (SiB);
                BlankZero=Yes;
                SourceExpr=NoOfDispatchNotes();
                Visible=FALSE;
                OnDrillDown=BEGIN
                              RunDispatchNoteForm();
                            END;
                             }

    { 1100525024;2;Field  ;
                SourceExpr="Contract Amount";
                Visible=FALSE }

    { 1100525026;2;Field  ;
                SourceExpr="Invoiced Price";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      Text000@1100485001 : TextConst 'ENU=Enter %1 voor login code %2';
      UserSetup@1100485002 : Record 91;
      RespPersonRec@1100485004 : Record 11012040;
      ProjRec@1100485003 : Record 11072003;
      TempProjectRec@1100485000 : TEMPORARY Record 11072003;
      Text11012000@1100525004 : TextConst 'ENU=For this Project are no Sub Projects present';
      JobsSetup@1100409000 : Record 315;
      ProjectInfoPaneMgt@1100525007 : Codeunit 11012066;
      PrognosisManagement@1100528818 : Codeunit 11020217;
      BuyerManagementEnable@19020635 : Boolean INDATASET;
      PlantRequestSMFEnable@1100409001 : Boolean INDATASET;
      DPA_IsHardFilter@1100000999 : Boolean;
      AutomaticGeneratePrognosis@1100528816 : Report 11012668;
      CostTypes@1100528814 : 'Cost,Revenue,Both';
      StartProcess@1100528813 : Boolean;
      PrognosisDate@1100528812 : Date;
      CopyPrevCostPrognosis@1100528811 : Boolean;
      CopyPrevPrognosisEndResult@1100528810 : Boolean;
      CopyPrevRevenuePrognosis@1100528809 : Boolean;
      CopyPrevPrognosisTotalRev@1100528808 : Boolean;
      CopyCommentsPrevPrognosis@1100528807 : Boolean;
      FillProgWithAvailableCost@1100528806 : Boolean;
      FillProgWithExtrapolatedCosts@1100528805 : Boolean;
      FillProgFromProjPlanningAct@1100528804 : Boolean;
      FillProgFromRequestedActCap@1100528803 : Boolean;
      FillProgFromAssignedActCap@1100528802 : Boolean;
      FillProgRevenues@1100528801 : Boolean;
      CalcSurcharges@1100528800 : Boolean;
      CalcRiscCoverage@1100525000 : Boolean;

    PROCEDURE RunDispatchNoteForm@1100525000();
    VAR
      lvDispatchNoteFrm@1100528600 : Page 11072651;
    BEGIN
      lvDispatchNoteFrm.SetProjectFromRespPerson("No.");
      lvDispatchNoteFrm.RUN;
    END;

    PROCEDURE NoOfDispatchNotes@1100525001() : Integer;
    VAR
      lvDispatchNoteRec@1100525000 : Record 11072651;
    BEGIN
      IF lvDispatchNoteRec.READPERMISSION THEN BEGIN
        lvDispatchNoteRec.SETRANGE(Approved, FALSE);
        lvDispatchNoteRec.SETRANGE("Project No.", "No.");
        EXIT(lvDispatchNoteRec.COUNT);
      END;
      EXIT(0);
    END;

    PROCEDURE RunSiteMgtProjlHours@1100525002(IProjectNo@1100525004 : Code[20]);
    VAR
      lvSiteMgtProjObjRec@1100525005 : Record 11012359;
      lvSiteMgtProjHrsHeadRec@1100525001 : Record 11012362;
      lvSiteMgtProjHrsAccFrm@1100525000 : Page 11072217;
      lvText001@1100525006 : TextConst 'ENU="Project ''%1'' of Company ''%2'' is not created in ''%3'', it is not possible to enter hours for this project. "';
    BEGIN
      IF NOT lvSiteMgtProjObjRec.GET(COMPANYNAME, lvSiteMgtProjObjRec.Type::Project, IProjectNo) THEN
        ERROR(lvText001, IProjectNo, COMPANYNAME, lvSiteMgtProjObjRec.TABLECAPTION);

      lvSiteMgtProjHrsHeadRec.SETCURRENTKEY("Receiving Company", "Project No.", Year, Week);
      lvSiteMgtProjHrsHeadRec.FILTERGROUP(9);
      lvSiteMgtProjHrsHeadRec.SETRANGE("Receiving Company", COMPANYNAME);
      lvSiteMgtProjHrsHeadRec.SETRANGE("Project No.", IProjectNo);
      lvSiteMgtProjHrsHeadRec.FILTERGROUP(0);
      lvSiteMgtProjHrsAccFrm.SETTABLEVIEW(lvSiteMgtProjHrsHeadRec);
      lvSiteMgtProjHrsAccFrm.SetOnlyForCurrentProject();
      lvSiteMgtProjHrsAccFrm.RUN;
    END;

    PROCEDURE OptionBudget@1210190006();
    VAR
      lvOptionRec@1210190000 : Record 11012502;
    BEGIN
      //**4PS
      lvOptionRec.FILTERGROUP(9);
      lvOptionRec.SETRANGE("Project No.", "No.");
      lvOptionRec.FILTERGROUP(0);
      lvOptionRec.SETRANGE("Plot No.", '');

      PAGE.RUN(PAGE::"Project Option List", lvOptionRec);
    END;

    PROCEDURE ShowProjectRecording@1100525004();
    VAR
      ProjectRecordingList@1100525000 : Page 11072436;
      ProjectRecording@1100525001 : Record 11072020;
    BEGIN
      ProjectRecording.RESET;
      ProjectRecording.FILTERGROUP(2);
      ProjectRecording.SETRANGE("Project Manager", UserSetup."Employee No.");
      ProjectRecording.FILTERGROUP(0);
      CLEAR(ProjectRecordingList);
      ProjectRecordingList.SETTABLEVIEW(ProjectRecording);
      ProjectRecordingList.RUN;
    END;

    PROCEDURE EnableControls@1100525006();
    VAR
      PlantRequestSMF@1100409000 : Record 11125529;
      PlantRequest@1100409001 : Record 11020520;
    BEGIN
      IF "No." = '' THEN
        BuyerManagementEnable := FALSE
      ELSE
        BuyerManagementEnable := "Housebuilding Project";
      PlantRequestSMFEnable := (PlantRequestSMF.READPERMISSION AND PlantRequest.READPERMISSION);
    END;

    PROCEDURE UpdateTempProject@1210190000();
    VAR
      Job@1210190000 : Record 11072003;
    BEGIN
      //mg, 18-07-11: M23254
      IF TempProjectRec."No." <> '' THEN
        IF Job.GET(TempProjectRec."No.") THEN BEGIN
          TempProjectRec := Job;
          TempProjectRec.MODIFY;
        END;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      EnableControls; //mg, 08-12-10: C-027184
    END;

    PROCEDURE ProcessPrognosis@1100528800();
    VAR
      Prognosis@1100525000 : Record 11012034;
      ProjectPlanningActivity@1100528802 : Record 11012431;
      FillPrognosisFromProjAct@1100528801 : Report 11012272;
      RequestedActivityCapacity@1100528804 : Record 11125708;
      FillPrognosisFromReqCap@1100528803 : Report 11012271;
      AssignedActivCapRec@1100528806 : Record 11125710;
      FillPrognFromCapPlanningRpt@1100528805 : Report 11012270;
      includeFinishedJobs@1100285500 : Boolean;
    BEGIN
      // dp00029.n
      CLEAR(AutomaticGeneratePrognosis);
      AutomaticGeneratePrognosis.RUNMODAL;
      AutomaticGeneratePrognosis.GetSelections(StartProcess,PrognosisDate,
        CopyPrevCostPrognosis,CopyPrevPrognosisEndResult,CopyPrevRevenuePrognosis,CopyPrevPrognosisTotalRev,
        CopyCommentsPrevPrognosis,FillProgWithAvailableCost,FillProgWithExtrapolatedCosts,FillProgFromProjPlanningAct,
        FillProgFromRequestedActCap,FillProgFromAssignedActCap,FillProgRevenues,CalcSurcharges,CalcRiscCoverage,includeFinishedJobs);

      IF NOT StartProcess THEN
        EXIT;

      JobsSetup.GET;
      RespPersonRec.SETCURRENTKEY("Employee No.");
      RespPersonRec.SETRANGE("Employee No.",UserSetup."Employee No.");
      RespPersonRec.SETRANGE(Responsibility,JobsSetup."Responsibility Site Manager");
      IF RespPersonRec.FINDSET THEN
        REPEAT
          IF NOT Prognosis.GET(RespPersonRec."Project No.", PrognosisDate) THEN BEGIN
            Prognosis.INIT;
            Prognosis."Project No." := RespPersonRec."Project No.";
            Prognosis.VALIDATE("Prognosis Date",PrognosisDate);
            Prognosis.INSERT(TRUE);
          END;

          ProjRec.GET(RespPersonRec."Project No.");
          IF (NOT Prognosis.Fixed) AND (ProjRec."Project Status" < ProjRec."Project Status"::Finished) THEN BEGIN

            PrognosisManagement.CreatePrognosis(Prognosis, CostTypes::Both);

            IF CopyPrevCostPrognosis THEN
              PrognosisManagement.CopyPrevPrognosis(Prognosis, FALSE, CostTypes::Cost);
            IF CopyPrevPrognosisEndResult THEN
              PrognosisManagement.CopyPrevPrognosis(Prognosis, TRUE, CostTypes::Cost);
            IF CopyPrevRevenuePrognosis THEN
              PrognosisManagement.CopyPrevPrognosis(Prognosis, FALSE, CostTypes::Revenue);
            IF CopyPrevPrognosisTotalRev THEN
              PrognosisManagement.CopyPrevPrognosis(Prognosis, TRUE, CostTypes::Revenue);
            IF CopyCommentsPrevPrognosis THEN
              Prognosis.CopyPreviousComments;

            IF FillProgWithAvailableCost THEN
              PrognosisManagement.FillPrognosisWithAvailable(Prognosis);
            IF FillProgWithExtrapolatedCosts THEN
              PrognosisManagement.FillPrognosisWithXtraPolCost(Prognosis);
            IF FillProgFromProjPlanningAct THEN BEGIN
              ProjectPlanningActivity.SETRANGE("Project No.", Prognosis."Project No.");
              ProjectPlanningActivity.FINDFIRST;  //* There must be a project planning activity for the project.
              ProjRec.SETRANGE("No.", Prognosis."Project No.");
              FillPrognosisFromProjAct.SETTABLEVIEW(ProjRec);
              FillPrognosisFromProjAct.SetSelection(Prognosis."Project No.", Prognosis."Prognosis Date");
              FillPrognosisFromProjAct.RUNMODAL;
            END;
            IF FillProgFromRequestedActCap THEN BEGIN
              RequestedActivityCapacity.SETRANGE("Project No.", Prognosis."Project No.");
              RequestedActivityCapacity.FINDFIRST;  //* There must be a requested activity capacity for the project.
              ProjRec.SETRANGE("No.", Prognosis."Project No.");
              FillPrognosisFromReqCap.SETTABLEVIEW(ProjRec);
              FillPrognosisFromReqCap.SetSelection(Prognosis."Project No.", Prognosis."Prognosis Date");
              FillPrognosisFromReqCap.RUNMODAL;
            END;
            IF FillProgFromAssignedActCap THEN BEGIN
              AssignedActivCapRec.SETRANGE("Project No.", Prognosis."Project No.");
              AssignedActivCapRec.FINDFIRST;  //* There must be a capacity planning of the project
              ProjRec.SETRANGE("No.", Prognosis."Project No.");
              FillPrognFromCapPlanningRpt.SETTABLEVIEW(ProjRec);
              FillPrognFromCapPlanningRpt.SetSelection(Prognosis."Project No.", Prognosis."Prognosis Date");
              FillPrognFromCapPlanningRpt.RUNMODAL;
            END;
            IF FillProgRevenues THEN
              PrognosisManagement.FillPrognRevenues(Prognosis);
            IF CalcSurcharges THEN BEGIN
              IF "Prognosis Level" = "Prognosis Level"::Detailed THEN BEGIN
                Prognosis."Ovh. Surcharges Calculated" := TRUE;
                Prognosis."Altered After Calculation" := FALSE;
                Prognosis.MODIFY;

                PrognosisManagement.RemoveSurcharges(Prognosis);
                PrognosisManagement.CalculateSurcharges(Prognosis);
              END;
            END;
            //C012556
            IF CalcRiscCoverage THEN
              IF "Prognosis Level" = "Prognosis Level"::Detailed THEN
                PrognosisManagement.CalculateRiscCoverage(Prognosis);
            //
          END;
        UNTIL RespPersonRec.NEXT = 0;
    END;

    LOCAL PROCEDURE RunSiB@1100528900(IProjectNo@1100528900 : Code[20];IAction@1100528901 : Integer);
    VAR
      lvDispatchNoteRec@1100528902 : Record 11072651;
      lvInvoiceRec@1100528903 : Record 11072653;
    BEGIN
      //DP00065
      IF (IAction = 1) OR (IAction = 2) THEN BEGIN
        lvDispatchNoteRec.SETRANGE("Project No.", IProjectNo);
        lvDispatchNoteRec.SETRANGE(Approved, (IAction=2));
        IF (IAction = 1) THEN
          PAGE.RUNMODAL(PAGE::"Dispatch Note List (SiB)", lvDispatchNoteRec)
        ELSE
          PAGE.RUNMODAL(PAGE::"Approved Disp Note List (SiB)", lvDispatchNoteRec);
      END;

      IF (IAction = 3) OR (IAction = 4) THEN BEGIN
        lvInvoiceRec.CALCFIELDS("Project No.");
        lvInvoiceRec.SETRANGE("Project No.", IProjectNo);
        lvInvoiceRec.SETRANGE(Approved, (IAction=4));
        PAGE.RUNMODAL(PAGE::"Invoice List (SiB)", lvInvoiceRec)
      END
    END;

    BEGIN
    END.
  }
}

