OBJECT Page 11020276 Principal Financial Status
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Principal Financial Status;
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table18;
    PageType=Card;
    PromotedActionCategoriesML=ENU=New,Process,Report,Projects;
    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 SearchPeriodCu.FindPeriod(ProjectRec,PeriodType,'');
               END;

    OnAfterGetRecord=BEGIN
                       DetermineMainProjectAmounts;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100485043;1 ;ActionGroup;
                      CaptionML=ENU=&Customer }
      { 1100485045;2 ;Action    ;
                      CaptionML=ENU=Co&mments;
                      RunObject=Page 124;
                      RunPageLink=Table Name=CONST(Customer),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 1100485003;1 ;ActionGroup;
                      CaptionML=ENU=&Control }
      { 1100485004;2 ;Action    ;
                      CaptionML=ENU=Sub Projects;
                      Promoted=Yes;
                      Image=Prepayment;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 lProjRec@1100485000 : Record 11072003;
                                 ProjControlSmallPFrm@1100485002 : Page 11020275;
                               BEGIN
                                 lProjRec.SETCURRENTKEY("Bill-to Customer No.");
                                 lProjRec.SETRANGE("Bill-to Customer No.", "No.");
                                 ProjectRec.COPYFILTER("Period Filter", lProjRec."Period Filter");
                                 ProjectRec.COPYFILTER("Cumulation Filter",lProjRec."Cumulation Filter");
                                 ProjectRec.COPYFILTER("Period Type Filter", lProjRec."Period Type Filter");

                                 IF SubProjectStatus <> 0 THEN
                                   lProjRec.SETRANGE("Project Status",SubProjectStatus - 1)
                                 ELSE
                                   lProjRec.SETRANGE("Project Status");
                                 IF SubSmallProjectStatus <> 0 THEN
                                   lProjRec.SETRANGE("Small Project Status",SubSmallProjectStatus - 1)
                                 ELSE
                                   lProjRec.SETRANGE("Small Project Status");
                                 ProjControlSmallPFrm.SETTABLEVIEW(lProjRec);
                                 ProjControlSmallPFrm.RUNMODAL;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100485007;1 ;Action    ;
                      CaptionML=ENU=Previous Period;
                      ToolTipML=ENU=Previous Period;
                      Promoted=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SearchPeriodCu.FindPeriod(ProjectRec,PeriodType,'<=');
                               END;
                                }
      { 1100485006;1 ;Action    ;
                      CaptionML=ENU=Next Period;
                      ToolTipML=ENU=Next Period;
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SearchPeriodCu.FindPeriod(ProjectRec,PeriodType,'>=');
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1902923501;1;Group  ;
                CaptionML=ENU=Options;
                GroupType=Group }

    { 1100485018;2;Field  ;
                CaptionML=ENU=View by;
                ToolTipML=ENU=Day;
                OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             IF PeriodType = PeriodType::"Accounting Period" THEN
                               AccountingPerioPeriodTypeOnVal;
                             IF PeriodType = PeriodType::Year THEN
                               YearPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Quarter THEN
                               QuarterPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Month THEN
                               MonthPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Week THEN
                               WeekPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Day THEN
                               DayPeriodTypeOnValidate;
                           END;
                            }

    { 1100485009;2;Field  ;
                CaptionML=ENU=Cumulation Filter;
                SourceExpr=ProjectRec.GETFILTER("Cumulation Filter");
                OnValidate=BEGIN
                             IF STRLEN(PeriodFilter) > 3 THEN
                               PeriodFilter := '';
                             SearchPeriodCu.FindPeriod(ProjectRec,PeriodType,PeriodFilter);
                           END;
                            }

    { 1100485000;1;Group  ;
                CaptionML=ENU=General;
                GroupType=Group }

    { 1210190000;2;Group  ;
                CaptionML=ENU=General;
                GroupType=Group }

    { 1100485001;3;Field  ;
                SourceExpr="No.";
                Editable=FALSE }

    { 1100485005;3;Field  ;
                SourceExpr=Name;
                Editable=FALSE }

    { 1100485011;3;Field  ;
                SourceExpr=Contact;
                Editable=FALSE }

    { 1100485019;3;Field  ;
                CaptionML=ENU=Subproject Status Filter;
                OptionCaptionML=ENU=" ,Estimation,Preparation,Production,Technical Finished,Administrative Finished,Finished,Archive,Archived";
                SourceExpr=SubProjectStatus;
                OnValidate=BEGIN
                             SubProjectStatusOnAfterValidat;
                           END;
                            }

    { 1100485021;3;Field  ;
                CaptionML=ENU=Small Project Statusfilter;
                OptionCaptionML=ENU=" ,Not Printed,Printed,Finished,Concept,Invoice,Cancelled";
                SourceExpr=SubSmallProjectStatus;
                OnValidate=BEGIN
                             SubSmallProjectStatusOnAfterVa;
                           END;
                            }

    { 1100485025;2;Group  ;
                CaptionML=ENU=Posted }

    { 1100485023;3;Field  ;
                CaptionML=ENU=Actual Cost;
                SourceExpr=gActualCosts;
                Editable=FALSE }

    { 1100485026;3;Field  ;
                CaptionML=ENU=Revenues;
                SourceExpr=gRevenues;
                Editable=FALSE }

    { 1100485028;3;Field  ;
                CaptionML=ENU=WIP Position;
                SourceExpr=gWIPPosition;
                Editable=FALSE }

    { 1100485032;3;Field  ;
                CaptionML=ENU=Actual Hours;
                SourceExpr=gActualHours;
                Editable=FALSE }

    { 1100485042;2;Group  ;
                CaptionML=ENU=Commitments }

    { 1100485030;3;Field  ;
                CaptionML=ENU=Outstanding (Purch.);
                SourceExpr=gOpenPurch;
                Editable=FALSE }

    { 1100485040;3;Field  ;
                CaptionML=ENU=Open Amount (Hours);
                SourceExpr=gOpenAmountHours;
                Editable=FALSE }

    { 1100485036;3;Field  ;
                CaptionML=ENU=Received/Not invoiced;
                SourceExpr=gReceivedNotInv;
                Editable=FALSE }

    { 1100485038;3;Field  ;
                CaptionML=ENU=Open Hours;
                SourceExpr=gOpenHours;
                Editable=FALSE }

    { 1100485034;3;Field  ;
                CaptionML=ENU=Received/Not invoiced hours;
                SourceExpr=gReceivedNotInvHours;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      ProjectRec@1100485002 : Record 11072003;
      SearchPeriodCu@1100485000 : Codeunit 11012013;
      PeriodType@1100485001 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      gActualCosts@1100485003 : Decimal;
      gActualHours@1100485004 : Decimal;
      gRevenues@1100485011 : Decimal;
      gWIPPosition@1100485005 : Decimal;
      gOpenPurch@1100485006 : Decimal;
      gReceivedNotInv@1100485007 : Decimal;
      gReceivedNotInvHours@1100485008 : Decimal;
      gOpenAmountHours@1100485009 : Decimal;
      gOpenHours@1100485010 : Decimal;
      SubProjectStatus@1100485014 : ' ,Estimation,Preparation,Production,Technical Finished,Administrative Finished,Finished,Archive,Archived';
      SubSmallProjectStatus@1100485013 : ' ,Not Printed,Printed,Finished,Concept,Invoice,Cancelled';
      DepAuthRec@1100000997 : Record 11012466;
      PeriodFilter@1100485012 : Text[50];
      DPA_IsHardFilter@1100000999 : Boolean;

    PROCEDURE DetermineMainProjectAmounts@1100485000() rAmount : Decimal;
    VAR
      ProjectRec2@1100525000 : Record 11072003;
    BEGIN
      gActualCosts := 0;
      gActualHours := 0;
      gRevenues := 0;
      gWIPPosition := 0;
      gOpenPurch := 0;
      gReceivedNotInv := 0;
      gReceivedNotInvHours := 0;
      gOpenAmountHours := 0;
      gOpenHours := 0;

      WITH ProjectRec2 DO BEGIN
        RESET;
        SETCURRENTKEY("Bill-to Customer No.");
        SETRANGE("Bill-to Customer No.",Rec."No.");
        IF SubProjectStatus <> 0 THEN
          SETRANGE("Project Status",SubProjectStatus - 1)
        ELSE
          SETRANGE("Project Status");
        IF SubSmallProjectStatus <> 0 THEN
          SETRANGE("Small Project Status",SubSmallProjectStatus - 1)
        ELSE
          SETRANGE("Small Project Status");
        FILTERGROUP(2);
        SETRANGE("Single/Main/Sub Project");
        FILTERGROUP(0);
        IF FINDSET THEN
          REPEAT
            IF NOT "Cost Control Up to Date" THEN
              //Function BuildCostControl can not be used becasue transaction is not started here
              CODEUNIT.RUN(CODEUNIT::CreateControlLinesProjCostObj,ProjectRec2);

            SETRANGE("Project Filter","No.");
            CALCFIELDS("Actual Costs","Actual Hours",Revenues,"Open (Purchase)","Received/Not Invoiced",
                       "Received/Not Inv. Hours","Open Amount (Hours)","Open Hours");
            gActualCosts += "Actual Costs";
            gActualHours += "Actual Hours";
            gRevenues += Revenues;
            gOpenPurch += "Open (Purchase)";
            gReceivedNotInv += "Received/Not Invoiced";
            gReceivedNotInvHours += "Received/Not Inv. Hours";
            gOpenAmountHours += "Open Amount (Hours)";
            gOpenHours += "Open Hours";
          UNTIL NEXT = 0;
        gWIPPosition := gActualCosts - gRevenues;
      END;
    END;

    LOCAL PROCEDURE SubProjectStatusOnAfterValidat@19051943();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SubSmallProjectStatusOnAfterVa@19017655();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ProjectRecGETFILTERCumulationF@19025954(VAR Text@19025955 : Text[1024]);
    BEGIN
      PeriodFilter := Text;
    END;

    LOCAL PROCEDURE AccountingPerioPeriodTypOnPush@19038761();
    BEGIN
      SearchPeriodCu.FindPeriod(ProjectRec,PeriodType,'');
    END;

    LOCAL PROCEDURE YearPeriodTypeOnPush@19051042();
    BEGIN
      SearchPeriodCu.FindPeriod(ProjectRec,PeriodType,'');
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnPush@19018850();
    BEGIN
      SearchPeriodCu.FindPeriod(ProjectRec,PeriodType,'');
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnPush@19047374();
    BEGIN
      SearchPeriodCu.FindPeriod(ProjectRec,PeriodType,'');
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnPush@19046063();
    BEGIN
      SearchPeriodCu.FindPeriod(ProjectRec,PeriodType,'');
    END;

    LOCAL PROCEDURE DayPeriodTypeOnPush@19008851();
    BEGIN
      SearchPeriodCu.FindPeriod(ProjectRec,PeriodType,'');
    END;

    LOCAL PROCEDURE DayPeriodTypeOnValidate@19012979();
    BEGIN
      DayPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnValidate@19058475();
    BEGIN
      WeekPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnValidate@19021027();
    BEGIN
      MonthPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnValidate@19015346();
    BEGIN
      QuarterPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE YearPeriodTypeOnValidate@19064743();
    BEGIN
      YearPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE AccountingPerioPeriodTypeOnVal@19058901();
    BEGIN
      AccountingPerioPeriodTypOnPush;
    END;

    BEGIN
    END.
  }
}

