OBJECT Page 11020280 Job Reporting
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Job Reporting;
    SaveValues=Yes;
    SourceTable=Table11072003;
    PageType=ListPlus;
    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 PeriodType := PeriodType::Day;
                 SearchPeriodCu.FindPeriod(Rec,PeriodType,'');
                 PeriodFilter := GETFILTER("Period Filter");
                 CumulationFilter := GETFILTER("Cumulation Filter");

                 SETFILTER("Period Filter", PeriodFilter);

                 SETFILTER("Cumulation Filter", CumulationFilter);
               END;

    OnAfterGetRecord=BEGIN
                       SETRANGE("Project Filter","No.");
                       CALCFIELDS(
                       //  Comment,
                       //  "Budgeted Cost",
                       //  "Budgeted Price",
                       //  "Usage (Cost)",
                       //  "Usage (Price)",
                       //  "Invoiced Price",
                       //  "Budgeted Res. Qty.",
                       //  "Budgeted Res. Gr. Qty.",
                       //  "Name 2",
                         "Contract Amount",
                       //  "Total Budget",
                       //  "Hours Budget",
                       //  "Labor Budget",
                       //  "Material Budget",
                       //  "Subcontracting Budget",
                       //  "Plant Budget",
                       //  "Sundry Budget",
                       //  Budget,
                       //  "Budgetted Hours",
                         "Actual Costs",
                         "Actual Hours",
                       //  "Actuals Period",
                       //  "Actual Hours Period",
                         Revenues
                       //  "Revenues Period",
                       //  "Purchase Budget",
                       //  "Open (Purchase)",
                       //  "Received/Not Invoiced",
                       //  "Risc Coverage",
                       //  "Risc Coverage Withdraw"),
                       //  "Open (Inventory)",
                       //  "Open Ovh. Surch. (Purchase)",
                       //  "Open Ovh. Surch. (Hours)",
                       //  "Open Ovh. Surch. (Inventory)",
                       //  Prospect,
                       //  "Principal Name",
                       //  "Name Project Manager",
                       //  "Name Project Engineer",
                       //  "Name Site Manager",
                       //  "Name Estimator"),
                       //  "Name Buyer Contact",
                       //  Prognosis,
                       //  "Prognosis Previous Period",
                       //  "Budgetted Options in Order",
                       //  "Number of Options in Order",
                       //  "Number of Options Open",
                       //  "Extension Quoted Amount",
                       //  "Extension Contract Amount",
                       //  "Project Contract Amount",
                       //  Purchase,
                       //  "(Re)Print Option List",
                       //  "UAR Task Description",
                       //  "UAR Task Pause Allowed",
                       //  "UAR Task Travel Hours Allowed",
                       //  "Options Contract Amount",
                       //  "Name Purchaser",
                       //  "Open Amount (Hours)",
                       //  "Open Hours",
                       //  "Actual Preclosure Result",
                       //  "Act. Preclosure Result Period",
                       //  "Closed Costs",
                       //  "Closed Revenues",
                       //  "Closed Costs Period",
                       //  "Closed Revenues Period",
                       //  "Received/Not Inv. Hours",
                       //  "Plot Price",
                       //  "Project Plot Price",
                       //  "Estate Owner Name",
                       //  "Urgency Description",
                       //  "Response Time",
                       //  "Name Action By"
                         );
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100485002;1 ;Action    ;
                      CaptionML=ENU=Previous Period;
                      ToolTipML=ENU=Previous Period;
                      Promoted=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SearchPeriodCu.FindPeriod(Rec,PeriodType,'<=');
                                 PeriodFilter := GETFILTER("Period Filter");
                                 CumulationFilter := GETFILTER("Cumulation Filter");
                               END;
                                }
      { 1100485001;1 ;Action    ;
                      CaptionML=ENU=Next Period;
                      ToolTipML=ENU=Next Period;
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SearchPeriodCu.FindPeriod(Rec,PeriodType,'>=');
                                 PeriodFilter := GETFILTER("Period Filter");
                                 CumulationFilter := GETFILTER("Cumulation Filter");
                               END;
                                }
      { 1100485047;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1100485072;2 ;Action    ;
                      CaptionML=ENU=Save Filters;
                      Image=Save;
                      OnAction=VAR
                                 iRecordRef@1100485000 : RecordRef;
                               BEGIN
                                 ReportFilterRec.TESTFIELD(Code);
                                 iRecordRef.GETTABLE(Rec);
                                 ReportFilterRec.SaveFilter(iRecordRef,ReportFilterRec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100485000;1;Group  ;
                CaptionML=ENU=General;
                GroupType=Group }

    { 1100485049;2;Field  ;
                CaptionML=ENU=Reporting Layout;
                SourceExpr=ReportLayoutRec.Code;
                TableRelation="Reporting Layout".Code WHERE (Table No.=CONST(11072003));
                OnValidate=BEGIN
                             ReportLayoutRec.GET(ReportLayoutRec.Code);
                             IF ReportLayoutRec."Default Filter" <> '' THEN
                               ReportFilterRec.GET(ReportLayoutRec."Default Filter");
                             ValidateFilter;
                           END;
                            }

    { 1100485052;2;Field  ;
                Name=ReportFilter;
                CaptionML=ENU=Reporting Filter;
                SourceExpr=ReportFilterRec.Code;
                TableRelation="Reporting Filter Header".Code WHERE (Table No.=CONST(11072003));
                OnValidate=BEGIN
                             ValidateFilter;
                           END;
                            }

    { 1100485061;2;Field  ;
                CaptionML=ENU=View by;
                ToolTipML=ENU=Day;
                OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             AccountingPerioPeriodTypeOnVal;
                           END;
                            }

    { 1100485055;2;Field  ;
                CaptionML=ENU=Period Filter;
                SourceExpr=PeriodFilter;
                OnValidate=VAR
                             ApplicationManagement@1100525501 : Codeunit 1;
                           BEGIN
                             IF ApplicationManagement.MakeDateFilter(PeriodFilter) = 0 THEN;
                             SETFILTER("Period Filter", PeriodFilter);
                             PeriodFilter := GETFILTER("Period Filter");

                             SearchPeriodCu.FindPeriod(Rec,PeriodType,'');
                           END;
                            }

    { 1100485004;1;Group  ;
                Editable=FALSE;
                GroupType=Repeater }

    { 1100485005;2;Field  ;
                SourceExpr="No." }

    { 1100485007;2;Field  ;
                SourceExpr=Description }

    { 1100485009;2;Field  ;
                SourceExpr="Description 2" }

    { 1100485013;2;Field  ;
                SourceExpr="Main Project" }

    { 1100485011;2;Field  ;
                SourceExpr="Bill-to Customer No." }

    { 1100485015;2;Field  ;
                SourceExpr="Person Responsible" }

    { 1100485017;2;Field  ;
                SourceExpr="Version Date" }

    { 1100485019;2;Field  ;
                SourceExpr="Progress Filter" }

    { 1100485021;2;Field  ;
                SourceExpr=PrevProgressFilter }

    { 1100485023;2;Field  ;
                SourceExpr="Prognosis Filter" }

    { 1100485025;2;Field  ;
                SourceExpr=PrevPrognosisFilter }

    { 1100485027;2;Field  ;
                SourceExpr="Status Modification Date" }

    { 1100485029;2;Field  ;
                SourceExpr="Technical Finished Date" }

    { 1100485031;2;Field  ;
                SourceExpr="Urgency Code" }

    { 1100485033;2;Field  ;
                SourceExpr="Urgency Description" }

    { 1100485035;2;Field  ;
                SourceExpr="Response Time" }

    { 1100485037;2;Field  ;
                SourceExpr="Creation Time" }

    { 1100485039;2;Field  ;
                SourceExpr="Commision Date" }

    { 1100485062;2;Field  ;
                SourceExpr="Actual Costs" }

    { 1100485064;2;Field  ;
                SourceExpr="Actual Hours" }

    { 1100485066;2;Field  ;
                SourceExpr=Revenues }

    { 1100485068;2;Field  ;
                SourceExpr="Contract Amount" }

  }
  CODE
  {
    VAR
      ReportLayoutRec@1100485000 : Record 11020238;
      ReportFilterRec@1100485003 : Record 11020267;
      SearchPeriodCu@1100485001 : Codeunit 11012013;
      PeriodType@1100485002 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      PeriodFilter@1100485004 : Text[50];
      DPA_IsHardFilter@1100000999 : Boolean;
      CumulationFilter@1100525500 : Text[50];

    PROCEDURE ValidateFilter@1100485000();
    VAR
      lProjectRec@1100485001 : Record 11072003;
      lRecordRef@1100485000 : RecordRef;
    BEGIN
      IF NOT ReportFilterRec.GET(ReportFilterRec.Code) THEN
        EXIT;
      lRecordRef.GETTABLE(Rec);
      ReportFilterRec.SetFilter(lRecordRef,ReportFilterRec);
      SETVIEW(lRecordRef.GETVIEW);
      IF GETFILTER("Period Type Filter") <> '' THEN
        EVALUATE(lProjectRec."Period Type Filter",GETFILTER("Period Type Filter"))
      ELSE
        lProjectRec."Period Type Filter" := 0;
      PeriodType := lProjectRec."Period Type Filter";
    END;

    LOCAL PROCEDURE CumulationFilterOnAfterInput@19045865(VAR Text@19045866 : Text[1024]);
    BEGIN
      PeriodFilter := Text;
    END;

    LOCAL PROCEDURE AccountingPerioPeriodTypeOnVal@19058901();
    BEGIN
      SearchPeriodCu.FindPeriod(Rec,PeriodType,'');
      PeriodFilter := GETFILTER("Period Filter");
      CumulationFilter := GETFILTER("Cumulation Filter");
    END;

    BEGIN
    {
      NOTE: (flow)fields added in this form, should be added in CALCFIELDS below!!
    }
    END.
  }
}

