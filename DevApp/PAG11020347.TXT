OBJECT Page 11020347 Project/Cost Comp Control New
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Project/Cost Component Control;
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11020297;
    DataCaptionExpr=Caption;
    PageType=ListPlus;
    OnOpenPage=BEGIN
                 CostContrCreateCu.ControlCostComponent(gJobRec);

                 IF gJobRec."No." <> '' THEN
                   SETRANGE("Project No.",gJobRec."No.");

                 PeriodFilter := gJobRec.GETFILTER("Period Filter");
                 PeriodType := gJobRec.GETRANGEMAX("Period Type Filter");
               END;

    OnAfterGetRecord=BEGIN
                       CalcAmounts;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1210190030;1 ;Action    ;
                      CaptionML=ENU=Previous Period;
                      ToolTipML=ENU=Previous Period;
                      Promoted=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('<=');
                                 PeriodTypeOnAfterValidate;
                               END;
                                }
      { 1210190031;1 ;Action    ;
                      CaptionML=ENU=Next Period;
                      ToolTipML=ENU=Next Period;
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('>=');
                                 PeriodTypeOnAfterValidate;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210190005;1;Group  ;
                CaptionML=ENU=Options }

    { 1210190004;2;Field  ;
                CaptionML=ENU=View by;
                OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             FindPeriod('');
                             PeriodTypeOnAfterValidate;
                           END;
                            }

    { 1210190002;2;Field  ;
                CaptionML=ENU=Date Filter;
                SourceExpr=PeriodFilter;
                OnValidate=VAR
                             ApplicationManagement@1001 : Codeunit 1;
                           BEGIN
                             IF ApplicationManagement.MakeDateFilter(PeriodFilter) = 0 THEN;
                             gJobRec.SETFILTER("Period Filter", PeriodFilter);
                             PeriodFilter := gJobRec.GETFILTER("Period Filter");

                             PeriodFilterOnAfterValidate;
                           END;
                            }

    { 1210190006;1;Group  ;
                Name=Cost Component;
                GroupType=Group }

    { 1210190000;2;Group  ;
                Editable=FALSE;
                GroupType=Repeater }

    { 1210190001;3;Field  ;
                Name=CostComp;
                SourceExpr="Cost Component" }

    { 1210190003;3;Field  ;
                SourceExpr=Description }

    { 1210190008;3;Field  ;
                Name=OriginalBudgetAmountDec;
                SourceExpr=Budget }

    { 1210190020;3;Field  ;
                Name=BudgetHoursDec;
                SourceExpr="Budget Hours" }

    { 1210190058;3;Field  ;
                Name=PurchaseBudgetDec;
                SourceExpr="Purchase Budget";
                Visible=FALSE }

    { 1210190046;3;Field  ;
                Name=PurchaseDec;
                SourceExpr=Purchase;
                Visible=FALSE }

    { 1100485000;3;Field  ;
                SourceExpr="Purchase Period";
                Visible=FALSE }

    { 1210190104;3;Field  ;
                Name=OpenPurchDec;
                SourceExpr="Open (Purchase)";
                Visible=FALSE }

    { 1100525003;3;Field  ;
                SourceExpr="Open Ovh. Surch. Soft (Purch.)";
                Visible=FALSE }

    { 1210190054;3;Field  ;
                Name=ReceivedNotInvoicedDec;
                SourceExpr="Received/Not Invoiced";
                Visible=FALSE }

    { 1210190052;3;Field  ;
                Name=OpenOvhSurchPurchaseDec;
                SourceExpr="Open Ovh. Surch. Firm (Purch.)";
                Visible=FALSE }

    { 1210190109;3;Field  ;
                Name=OpenOvhSurchHoursDec;
                SourceExpr="Received/Not Inv. Hours";
                Visible=FALSE }

    { 1210190050;3;Field  ;
                Name=RiscCoverageDec;
                SourceExpr="Risc Coverage";
                Visible=FALSE }

    { 1210190048;3;Field  ;
                Name=RiscCoveragWithdrawDec;
                SourceExpr="Risc Coverage Withdraw";
                Visible=FALSE }

    { 1100525004;3;Field  ;
                SourceExpr="Open (Inventory)";
                Visible=FALSE }

    { 1100525006;3;Field  ;
                SourceExpr="Open Ovh. Surch. (Inventory)";
                Visible=FALSE }

    { 1210190107;3;Field  ;
                Name=WageCostsToPostDec;
                SourceExpr="Open Amount (Hours)";
                Visible=FALSE }

    { 1100485004;3;Field  ;
                SourceExpr="Open Ovh. Surch. (Hours)";
                Visible=FALSE }

    { 1210190070;3;Field  ;
                Name=ActualcostsDec;
                SourceExpr="Actual Costs" }

    { 1210190044;3;Field  ;
                Name=ActualHoursDec;
                SourceExpr="Actual Hours" }

    { 1210190074;3;Field  ;
                CaptionML=ENU=Total Costs;
                OptionCaptionML=ENU=Total Cost;
                SourceExpr=TotCostDec }

    { 1100485002;3;Field  ;
                CaptionML=ENU=Total Hours;
                SourceExpr=TotHoursDec;
                Visible=FALSE }

    { 1210190064;3;Field  ;
                Name=ResultDec;
                CaptionML=ENU=Available;
                SourceExpr=AvailableDec }

    { 1210190062;3;Field  ;
                Name=ActualsPeriodDec;
                SourceExpr="Actual Costs Period";
                Visible=FALSE }

    { 1210190066;3;Field  ;
                Name=ActualHoursPeriodDec;
                SourceExpr="Actual Hours Period";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      gJobRec@1210190043 : Record 11072003;
      SearchPeriodCu@1210190042 : Codeunit 11012013;
      CostContMgt@1210190041 : Codeunit 11012006;
      CostContrCreateCu@1100485003 : Codeunit 11012011;
      DetermineProductionDate@1100485004 : Codeunit 11012014;
      DeterminePrognosisDate@1100485002 : Codeunit 11012029;
      PeriodType@1210190040 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      TotCostDec@1210190008 : Decimal;
      TotHoursDec@1100485001 : Decimal;
      AvailableDec@1210190036 : Decimal;
      PeriodFilter@1100485000 : Text[50];

    PROCEDURE CalcAmounts@1210190001();
    BEGIN
      DetermineProductionDate.DetermineBothDates(gJobRec);
      DeterminePrognosisDate.DetermineBothDates(gJobRec);
      gJobRec.COPYFILTER("Period Filter", "Period Filter");
      gJobRec.COPYFILTER("Cumulation Filter", "Cumulation Filter");

      gJobRec.COPYFILTER("Progress Filter", "Progress Filter");
      gJobRec.COPYFILTER(PrevProgressFilter, PrevProgressFilter);
      gJobRec.COPYFILTER("Prognosis Filter", "Prognosis Filter");
      gJobRec.COPYFILTER(PrevPrognosisFilter, PrevPrognosisFilter);

      CostContMgt.CalcFieldsCostComp(Rec);
      TotCostDec := CostContMgt.TotCostCostComp(Rec,FALSE);
      TotHoursDec := CostContMgt.TotHoursCostComp(Rec,FALSE);
      AvailableDec := Budget - TotCostDec;
    END;

    PROCEDURE SetDefault@1210190014(VAR lJobRec@1210190000 : Record 11072003);
    BEGIN
      gJobRec.COPY(lJobRec);
    END;

    PROCEDURE Caption@1210190000() Caption : Text[250];
    BEGIN
      EXIT(gJobRec."No." + ' ' + gJobRec.Description);
    END;

    LOCAL PROCEDURE gJobRecGETFILTERCumulationFilt@19043881(VAR Text@19043882 : Text[1024]);
    BEGIN
      PeriodFilter := Text;
    END;

    LOCAL PROCEDURE PeriodTypeOnAfterValidate@1210190004();
    BEGIN
      PeriodFilter := gJobRec.GETFILTER("Period Filter");
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PeriodFilterOnAfterValidate@1210190003();
    BEGIN
      gJobRec.SETFILTER("Cumulation Filter", '..%1', gJobRec.GETRANGEMAX("Period Filter"));
      CurrPage.UPDATE;
    END;

    PROCEDURE FindPeriod@1210190002(SearchString@1210190000 : Text[3]);
    BEGIN
      SearchPeriodCu.FindPeriod(gJobRec,PeriodType,SearchString);
    END;

    BEGIN
    END.
  }
}

