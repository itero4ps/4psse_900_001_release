OBJECT Page 11020357 Consignment Roster
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Consignment Roster;
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11012863;
    PromotedActionCategoriesML=ENU=New,Process,Report,Period;
    OnOpenPage=BEGIN
                 MATRIX_MaximumSetLength := 12;
                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                 UpdateMatrixSubForm;
               END;

    OnAfterGetRecord=BEGIN
                       UpdateMatrixSubForm;  //db, 12-11-15: C026619 (evaluate filter watch/consignment)
                     END;

    ActionList=ACTIONS
    {
      { 1100525014;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100525013;1 ;Action    ;
                      CaptionML=ENU=First Set;
                      ToolTipML=ENU=First Set;
                      Promoted=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //IF (LineDimOption = LineDimOption::Period) OR (ColumnDimOption = ColumnDimOption::Period) THEN
                                 //  EXIT;
                                 //FindPeriod('>');
                                 //CurrPage.UPDATE;

                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::FirstRec);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100525012;1 ;Action    ;
                      CaptionML=ENU=Last Set;
                      ToolTipML=ENU=Last Set;
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //IF (LineDimOption = LineDimOption::Period) OR (ColumnDimOption = ColumnDimOption::Period) THEN
                                 //  EXIT;
                                 //FindPeriod('<');
                                 //CurrPage.UPDATE;

                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::LastRec);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100525011;1 ;Action    ;
                      CaptionML=ENU=Previous Set;
                      ToolTipML=ENU=Previous Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MATRIX_Step@1001 : 'Initial,Previous,Same,Next';
                               BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Previous);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100525010;1 ;Action    ;
                      CaptionML=ENU=Previous Column;
                      ToolTipML=ENU=Previous Column;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::PreviousColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100525009;1 ;Action    ;
                      CaptionML=ENU=Next Column;
                      ToolTipML=ENU=Next Column;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::NextColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100525008;1 ;Action    ;
                      CaptionML=ENU=Next Set;
                      ToolTipML=ENU=Next Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MATRIX_Step@1001 : 'Initial,Previous,Same,Next';
                               BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Next);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100525019;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525018;1 ;Action    ;
                      CaptionML=ENU=Previous Period;
                      ToolTipML=ENU=Previous Period;
                      Promoted=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 FindPeriod('<=');
                               END;
                                }
      { 1100525017;1 ;Action    ;
                      CaptionML=ENU=Next Period;
                      ToolTipML=ENU=Next Period;
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 FindPeriod('>=');
                               END;
                                }
      { 1100525020;1 ;Action    ;
                      CaptionML=ENU=Copy Consignment Roster;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ConsignmentTime@1100525000 : Record 11012864;
                               BEGIN
                                 ConsignmentTime.SETRANGE("Consignment Code", Code);
                                 REPORT.RUNMODAL(REPORT::"Copy Consignment Roster", TRUE, FALSE, ConsignmentTime);
                               END;
                                }
      { 1100525021;1 ;Action    ;
                      CaptionML=ENU=Copy Consignment Roster;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ConsignmentRoster@1100525000 : Record 11012865;
                               BEGIN
                                 ConsignmentRoster.SETRANGE("Consignment Code", Code);
                                 REPORT.RUNMODAL(REPORT::"Copy Consignment Roster 2", TRUE, FALSE, ConsignmentRoster);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100525000;;Container;
                ContainerType=ContentArea }

    { 1100525001;1;Group  ;
                GroupType=Group }

    { 1100525002;2;Field  ;
                SourceExpr=Code;
                Editable=false }

    { 1100525003;2;Field  ;
                SourceExpr=Description;
                Editable=false }

    { 1100525016;2;Field  ;
                CaptionML=ENU=View by;
                OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             FindPeriod('');
                           END;
                            }

    { 1100525004;2;Field  ;
                CaptionML=ENU=Period Filter;
                SourceExpr=PeriodFilter;
                OnValidate=BEGIN
                             PeriodFilterOnAfterValidate;
                           END;
                            }

    { 1100525005;2;Field  ;
                SourceExpr="Territory Filter";
                Editable=false }

    { 1100525006;2;Field  ;
                SourceExpr="Global Dimension 1 Filter";
                Editable=false }

    { 1100525007;2;Field  ;
                CaptionML=ENU=Display;
                OptionCaptionML=ENU=Code,Name;
                SourceExpr=DisplayType;
                OnValidate=BEGIN
                             UpdateMatrixSubForm;
                           END;
                            }

    { 1100525015;1;Part   ;
                Name=MATRIX;
                CaptionML=ENU=Structure;
                PagePartID=Page11020358;
                PartType=Page }

  }
  CODE
  {
    VAR
      DisplayType@1100525005 : 'Code,Name';
      PeriodFilter@1100525004 : Text[30];
      PeriodType@1100525003 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      FilterType@1100525002 : 'Period,Cumulative';
      SearchPeriodCu@1100525001 : Codeunit 11012013;
      ServContrRec@1100525000 : Record 11012812;
      MATRIX_MatrixRecord@1100525013 : Record 11012864;
      MATRIX_MatrixRecords@1100525012 : ARRAY [32] OF Record 11012864;
      MATRIX_MaximumSetLength@1100525011 : Integer;
      MATRIX_PrimKeyRecInCurrSet@1100525010 : Text[1024];
      MATRIX_CaptionSet@1100525009 : ARRAY [32] OF Text[120];
      MATRIX_CaptionRange@1100525008 : Text[250];
      MATRIX_CurrSetLength@1100525007 : Integer;
      MATRIX_Step@1100525006 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn,,,,,FirstRec,LastRec';
      Text000@1100525014 : TextConst 'ENU=Week No.: %1 Start Date/Time: %2 %3 Description: %4';

    PROCEDURE MATRIX_GenerateColumnCaptions@1152(MATRIX_SetWanted@1000 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn,,,,,FirstRec,LastRec');
    VAR
      CurrentMatrixRecordOrdinal@1001 : Integer;
      MatrixManagement@1002 : Codeunit 9200;
      i@1004 : Integer;
      RecRef@1006 : RecordRef;
      FieldRef@1011 : FieldRef;
      ServicePackage@1210190000 : Record 11012806;
      Found@1100525000 : Boolean;
    BEGIN
      CLEAR(MATRIX_CaptionSet);
      CLEAR(MATRIX_MatrixRecords);

      MATRIX_MatrixRecord.SETRANGE("Consignment Code", Code);
      MATRIX_MatrixRecord.SETFILTER("Start Date", PeriodFilter);

      IF MATRIX_SetWanted = MATRIX_SetWanted::Same THEN BEGIN
        MATRIX_MatrixRecord.SETPOSITION(MATRIX_PrimKeyRecInCurrSet);
        IF NOT MATRIX_MatrixRecord.FIND('=') THEN BEGIN
          IF MATRIX_MatrixRecord.FINDSET THEN
            MATRIX_PrimKeyRecInCurrSet := MATRIX_MatrixRecord.GETPOSITION
          ELSE
            MATRIX_PrimKeyRecInCurrSet := '';
        END;
      END;

      RecRef.GETTABLE(MATRIX_MatrixRecord);
      RecRef.SETTABLE(MATRIX_MatrixRecord);
      MatrixManagement.GenerateMatrixData(
        RecRef,
        MATRIX_SetWanted,
        MATRIX_MaximumSetLength,
        MATRIX_MatrixRecord.FIELDNO(MATRIX_MatrixRecord."Consignment Code"), // CaptionFieldNo
        MATRIX_PrimKeyRecInCurrSet,
        MATRIX_CaptionSet,
        MATRIX_CaptionRange,
        MATRIX_CurrSetLength);

      i := 1;
      IF MATRIX_PrimKeyRecInCurrSet <> '' THEN
        MATRIX_MatrixRecord.SETPOSITION(MATRIX_PrimKeyRecInCurrSet);
      Found := MATRIX_MatrixRecord.FIND('=');
      IF NOT Found THEN BEGIN
        Found := MATRIX_MatrixRecord.FINDSET;
        MATRIX_PrimKeyRecInCurrSet := MATRIX_MatrixRecord.GETPOSITION;
      END;
      IF Found THEN
        REPEAT
          MATRIX_MatrixRecords[i].COPY(MATRIX_MatrixRecord);
          MATRIX_CaptionSet[i] :=
            STRSUBSTNO(Text000,
              MATRIX_MatrixRecord."Start Week", MATRIX_MatrixRecord."Start Date",
              MATRIX_MatrixRecord."Start Time", MATRIX_MatrixRecord.Description);

          i := i + 1;
        UNTIL (i > MATRIX_CurrSetLength) OR (MATRIX_MatrixRecord.NEXT <> 1);

      FOR i := i TO MATRIX_MaximumSetLength DO
        MATRIX_CaptionSet[i] := ' '; // Fill unused captions with space char, otherwise rubbish is showed in the matrix
    END;

    LOCAL PROCEDURE UpdateMatrixSubForm@7();
    BEGIN
      CurrPage.MATRIX.PAGE.Load(
        MATRIX_CaptionSet,
        MATRIX_MatrixRecords,
        MATRIX_CurrSetLength,
        Code,
        DisplayType);
    END;

    PROCEDURE FindPeriod@1210190001(SearchString@1210190000 : Text[3]);
    BEGIN
      SearchPeriodCu.GetPeriodFilterText(PeriodType, SearchString, PeriodFilter);
      PeriodFilterOnAfterValidate;
    END;

    PROCEDURE PeriodFilterOnAfterValidate@1100525000();
    BEGIN
      MATRIX_GenerateColumnCaptions(MATRIX_Step::Same);
      UpdateMatrixSubForm;
      PeriodFilter := MATRIX_MatrixRecord.GETFILTER("Start Date");
    END;

    BEGIN
    END.
  }
}

