OBJECT Page 11020397 Copy Service Order
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Copy Service Order;
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table11012823;
    PageType=StandardDialog;
    OnOpenPage=BEGIN
                 CopyMethod := CopyMethod::Copy;
                 DetermineSettings;
               END;

    OnQueryClosePage=BEGIN
                       CloseActionOK := CloseAction IN [ACTION::OK, ACTION::LookupOK];
                     END;

  }
  CONTROLS
  {
    { 1100528600;0;Container;
                ContainerType=ContentArea }

    { 1100528603;1;Group  ;
                CaptionML=ENU=Copy From;
                GroupType=Group }

    { 1100528604;2;Field  ;
                SourceExpr="No." }

    { 1100528605;2;Field  ;
                SourceExpr=Description;
                Editable=FALSE }

    { 1100528623;2;Field  ;
                SourceExpr="Source Type";
                Enabled=FALSE }

    { 1100528606;1;Group  ;
                CaptionML=ENU=Copy To;
                GroupType=Group }

    { 1100528607;2;Field  ;
                CaptionML=ENU=Source Type;
                OptionCaptionML=ENU=Call,Contract,Direct,Estimate,,,Modification,Replacement;
                SourceExpr=SourceType;
                Enabled=FALSE }

    { 1100528608;2;Field  ;
                CaptionML=ENU=No. Series;
                SourceExpr=NoSeries;
                Enabled=FALSE }

    { 1100528609;2;Field  ;
                CaptionML=ENU=Order Kind;
                SourceExpr=OrderKind;
                TableRelation="Service Order Indication".Code WHERE (Indication=CONST(Kind)) }

    { 1100528610;2;Field  ;
                CaptionML=ENU=Copy Call Reference;
                SourceExpr=CopyCallReference }

    { 1100528611;2;Field  ;
                CaptionML=ENU=Link Service Order;
                SourceExpr=LinkServiceOrder }

    { 1100528622;2;Field  ;
                CaptionML=ENU=Copy Try-Out Successor;
                SourceExpr=CopyTryOutSuccessor }

    { 1100528612;2;Field  ;
                CaptionML=ENU=Copy Comment Lines;
                SourceExpr=CopyCommentLines }

    { 1100528613;2;Field  ;
                CaptionML=ENU=Copy Objects;
                SourceExpr=CopyObjects }

    { 1100528614;2;Field  ;
                CaptionML=ENU=Move Advice Order Lines;
                SourceExpr=MoveAdviceOrderLines;
                OnValidate=BEGIN
                             UpdateEnabled;
                           END;
                            }

    { 1100528615;2;Field  ;
                CaptionML=ENU=Advice Order Line Status;
                OptionCaptionML=ENU=Both,Open,Released;
                SourceExpr=AdviceOrderLineStatus;
                Enabled=AdviceOrderLineStatusEnabled }

    { 1100528616;2;Field  ;
                CaptionML=ENU=Move Open Budget Lines;
                SourceExpr=MoveOrderBudgetLines }

    { 1100528620;2;Field  ;
                CaptionML=ENU=Copy Documents;
                SourceExpr=CopyDocuments }

    { 1100528621;2;Field  ;
                CaptionML=ENU=Copy Unit Prices;
                SourceExpr=CopyUnitPrices }

    { 1100528617;2;Field  ;
                CaptionML=ENU=Copy Resolution Text;
                SourceExpr=CopySolutionText }

    { 1100528618;2;Field  ;
                CaptionML=ENU=Copy Cause Text;
                SourceExpr=CopyCauseText }

    { 1100528619;2;Field  ;
                CaptionML=ENU=Copy Resource;
                SourceExpr=CopyResource }

  }
  CODE
  {
    VAR
      CopyMethod@1100528600 : 'Copy,Unfinished,Additional';
      SourceType@1100528601 : 'Call,Contract,Direct,Estimate,,,Modification,Replacement';
      NoSeries@1100528602 : Code[20];
      OrderKind@1100528603 : Code[20];
      CopyCallReference@1100528604 : Boolean;
      LinkServiceOrder@1100528605 : Boolean;
      CopyTryOutSuccessor@1100528617 : Boolean;
      CopyCommentLines@1100528606 : Boolean;
      CopyObjects@1100528607 : Boolean;
      MoveAdviceOrderLines@1100528608 : Boolean;
      AdviceOrderLineStatus@1100528609 : 'Both,Open,Released';
      AdviceOrderLineStatusEnabled@1100528614 : Boolean;
      MoveOrderBudgetLines@1100528610 : Boolean;
      CopySolutionText@1100528611 : Boolean;
      CopyCauseText@1100528612 : Boolean;
      CopyResource@1100528613 : Boolean;
      CopyDocuments@1100528615 : Boolean;
      CopyUnitPrices@1100528616 : Boolean;
      CloseActionOK@1100528619 : Boolean;
      CreatedServiceOrder@1100528620 : Code[20];

    LOCAL PROCEDURE SetSourceServiceOrder@1100528607(IServiceOrderNo@1100528600 : Code[20]);
    BEGIN
      GET(IServiceOrderNo);
      SETRECFILTER;
    END;

    LOCAL PROCEDURE DetermineSettings@1100528603();
    VAR
      ServiceSetup@1100528600 : Record 11012800;
    BEGIN
      ServiceSetup.GET;

      DetermineNoSeries;
      SourceType := "Source Type";
      OrderKind := "Order Kind";
      CopyCallReference := TRUE;
      LinkServiceOrder := TRUE;
      CopyTryOutSuccessor := TRUE;
      CopyCommentLines := TRUE;
      CopyObjects := TRUE;
      MoveAdviceOrderLines := TRUE;
      MoveOrderBudgetLines := TRUE;
      CopyDocuments := ServiceSetup."Copy Docs to Next Order";
      CopyUnitPrices := ServiceSetup."Copy Unit Prices to Next Order";
      CopySolutionText := TRUE;
      CopyCauseText := TRUE;
      CopyResource := TRUE;
      IF "Source Type" = "Source Type"::Contract THEN
        SourceType := SourceType::Direct;
      LinkServiceOrder := FALSE;
      CopySolutionText := FALSE;
      CopyCauseText := FALSE;
      UpdateEnabled;
    END;

    LOCAL PROCEDURE DetermineNoSeries@1100528600();
    VAR
      ServiceSourceTypeSetup@1100528600 : Record 11071726;
    BEGIN
      ServiceSourceTypeSetup.GET(SourceType);
      ServiceSourceTypeSetup.TESTFIELD("No. Series");
      NoSeries := ServiceSourceTypeSetup."No. Series";
    END;

    LOCAL PROCEDURE UpdateEnabled@1100528606();
    BEGIN
      AdviceOrderLineStatusEnabled := MoveAdviceOrderLines;
    END;

    LOCAL PROCEDURE StdDialogConfirm@1100528400() : Boolean;
    BEGIN
      CurrPage.RUNMODAL;
      EXIT(CloseActionOK);
    END;

    LOCAL PROCEDURE StdDialogDoAction@1100528401(VAR OCreatedServiceOrderNo@1100528600 : Code[20]);
    BEGIN
      OCreatedServiceOrderNo := DoCopy();
    END;

    PROCEDURE StdDialogRunModal@1100528404(ISourceServiceOrderNo@1100528601 : Code[20];VAR OCreatedServiceOrderNo@1100528600 : Code[20]) : Boolean;
    BEGIN
      SetSourceServiceOrder(ISourceServiceOrderNo);
      IF StdDialogConfirm THEN BEGIN
        StdDialogDoAction(OCreatedServiceOrderNo);
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE DoCopy@1100528609() : Code[20];
    VAR
      CopyServiceOrderCall@1100528600 : Codeunit 11012851;
    BEGIN
      EXIT(CopyServiceOrderCall.CopyServiceOrder(
        "No.", CopyMethod, SourceType, NoSeries, OrderKind, CopyCallReference, LinkServiceOrder, CopyTryOutSuccessor, CopyCommentLines,
        CopyObjects, MoveAdviceOrderLines, AdviceOrderLineStatus, MoveOrderBudgetLines, CopyDocuments, CopyUnitPrices, CopySolutionText,
        CopyCauseText, CopyResource));
    END;

    PROCEDURE GetCreatedServiceOrder@1100528605() : Code[20];
    BEGIN
      EXIT(CreatedServiceOrder);
    END;

    BEGIN
    END.
  }
}

