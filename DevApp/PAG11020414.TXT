OBJECT Page 11020414 Copy Complaint
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Copy Complaint;
    PageType=StandardDialog;
    OnInit=BEGIN
             ComplaintToEditable := TRUE;
           END;

    OnOpenPage=BEGIN
                 JobSetup.GET('');
                 ComplaintNos := JobSetup."Complaint Nos.";
                 ComplaintTo := NoSeriesMgt.GetNextNo(ComplaintNos, 0D, FALSE);
                 ComplaintToOnBeforeInput;
               END;

    OnQueryClosePage=BEGIN
                       CloseActionOK := CloseAction IN [ACTION::OK,ACTION::LookupOK];
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100528400;1;Group  ;
                CaptionML=ENU=Copy from;
                GroupType=Group }

    { 1210190004;2;Field  ;
                Name=ComplaintFrom;
                CaptionML=ENU=Complaint No.;
                SourceExpr=ComplaintFrom;
                Editable=FALSE }

    { 1100528401;1;Group  ;
                CaptionML=ENU=Copy to;
                GroupType=Group }

    { 1210190000;2;Field  ;
                Name=ComplaintTo;
                CaptionML=ENU=First Complaint No.;
                SourceExpr=ComplaintTo;
                Editable=ComplaintToEditable;
                OnValidate=VAR
                             ComplaintNew@1210190000 : Code[20];
                           BEGIN
                             IF (ComplaintTo = '') THEN
                               ERROR('');
                             IF ComplaintRec.GET(ComplaintTo) THEN
                               ERROR(Text001);

                             NoSeriesMgt.TestManual(JobSetup."Complaint Nos.");
                             IF ComplaintNos <> '' THEN BEGIN
                               CLEAR(NoSeriesMgt);
                               ComplaintNew := NoSeriesMgt.GetNextNo(ComplaintNos, 0D, FALSE);
                               IF ComplaintNew <> ComplaintTo THEN
                                 ComplaintNos := '';
                             END;
                           END;

                OnAssistEdit=BEGIN
                               JobSetup.TESTFIELD("Complaint Nos.");
                               IF NoSeriesMgt.SelectSeries(JobSetup."Complaint Nos.", ComplaintRec."No. Series", ComplaintNos) THEN BEGIN
                                 CLEAR(NoSeriesMgt);
                                 ComplaintTo := NoSeriesMgt.GetNextNo(ComplaintNos, 0D, FALSE);
                               END;
                             END;
                              }

    { 1100528402;1;Group  ;
                CaptionML=ENU=Apply;
                GroupType=Group }

    { 1100485001;2;Field  ;
                CaptionML=ENU=Quantity;
                SourceExpr=Copies }

  }
  CODE
  {
    VAR
      JobSetup@1210190001 : Record 315;
      ComplaintRec@1210190004 : Record 11012450;
      ComplaintFrom@1210190000 : Code[20];
      ComplaintTo@1210190002 : Code[20];
      Copies@1100485000 : Integer;
      SaveComplaintSel@1100485002 : Code[10];
      Text000@1100485003 : TextConst 'ENU=Existing Complaint.';
      NoSeriesMgt@1210190003 : Codeunit 396;
      ComplaintNos@1210190005 : Code[20];
      Text001@1210190006 : TextConst 'ENU=Please, fill all fields';
      ComplaintToEditable@1210190007 : Boolean INDATASET;
      CloseActionOK@1100528400 : Boolean;

    PROCEDURE SetDefaults@1210190001(IComplaint@1210190005 : Code[20]);
    BEGIN
      ComplaintFrom := IComplaint;
      ComplaintTo := '';
      Copies := 1;
    END;

    LOCAL PROCEDURE ComplaintToOnBeforeInput@19031346();
    VAR
      lvNoSeriesRec@1210190000 : Record 308;
    BEGIN
      lvNoSeriesRec.GET(JobSetup."Complaint Nos.");
      ComplaintToEditable := lvNoSeriesRec."Manual Nos.";
    END;

    LOCAL PROCEDURE CopyComplaint@1100528405();
    VAR
      lComplaintRec@1100528403 : Record 11012450;
      LoopCount@1100528402 : Integer;
      lCopies@1100528401 : Integer;
      TestComplaintNo@1100528400 : Code[20];
    BEGIN
      IF (ComplaintFrom = '') OR (ComplaintTo = '') OR (Copies = 0) THEN
        ERROR(Text001);

      IF lComplaintRec.GET(ComplaintFrom) THEN BEGIN
        lCopies := 0;
        REPEAT
          IF (ComplaintNos <> '') THEN BEGIN
            CLEAR(NoSeriesMgt);
            ComplaintTo := NoSeriesMgt.GetNextNo(ComplaintNos, 0D, TRUE);
          END;
          lComplaintRec."No." := ComplaintTo;
          lComplaintRec.Status := lComplaintRec.Status::Received;
          lComplaintRec.INSERT(TRUE);
          lCopies += 1;
          IF (ComplaintNos = '') THEN
            ComplaintTo := INCSTR(ComplaintTo);
        UNTIL Copies = lCopies
      END;
    END;

    LOCAL PROCEDURE StdDialogConfirm@1100528400() : Boolean;
    BEGIN
      CurrPage.RUNMODAL;
      EXIT(CloseActionOK);
    END;

    LOCAL PROCEDURE StdDialogDoAction@1100528401();
    BEGIN
      CopyComplaint;
    END;

    PROCEDURE StdDialogRunModal@1100528404();
    BEGIN
      IF StdDialogConfirm THEN
        StdDialogDoAction;
    END;

    BEGIN
    END.
  }
}

