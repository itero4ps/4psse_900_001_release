OBJECT Page 11020420 Modify Item Vendor
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Modify Item Vendor;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    PageType=NavigatePage;
    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 3       ;1   ;Action    ;
                      CaptionML=ENU=&Process;
                      InFooterBar=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 AdviceCu@1100485000 : Codeunit 11012041;
                               BEGIN
                                 IF NewVendor <> '' THEN BEGIN
                                   CASE RecType OF
                                     RecType::AdviceOrder:
                                       AdviceCu.UpdateVendorTradeItem(gAdviceOrderRec, NewVendor, Final);
                                     RecType::EstimatePartLine:
                                       ChangeVendorEstimatePartLine;
                                     RecType::BudgetLine:
                                       ChangeVendorBudgetLine;
                                     RecType::ItemRelation:
                                       ChangeVendorItemRelation;
                                     RecType::PreferredVendor:
                                       ChangeVendorPreferredVendor;
                                     RecType::RequisitionLine:
                                       ChangeVendorRequisitionLine;
                                   END;
                                 END;
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100525000;1;Field  ;
                CaptionML=ENU=Modify Item Vendor;
                Style=Strong;
                StyleExpr=TRUE }

    { 1100485001;1;Field  ;
                Lookup=Yes;
                CaptionML=ENU=New Vendor;
                SourceExpr=NewVendor;
                TableRelation="ETIM Vendor (Central Mgt)" }

    { 1100485003;1;Field  ;
                CaptionML=ENU=Definite;
                OptionCaptionML=ENU=Yes,Only Report;
                SourceExpr=Final }

  }
  CODE
  {
    VAR
      gAdviceOrderRec@1100485001 : Record 11012055;
      gEstimatePartLineOLDRec@1100485002 : Record 11012187;
      gEstimatePartLineNEWRec@1100528900 : Record 11072076;
      gBudgetLineRec@1100485003 : Record 11012001;
      gItemRelationRec@1100485004 : Record 11012319;
      gPreferredVendorRec@1100485005 : Record 11012318;
      gRequisitionLineRec@1100485011 : Record 246;
      NewVendor@1100485000 : Code[20];
      NewTradeItem@1100485012 : Code[20];
      RecType@1100485006 : 'AdviceOrder,EstimatePartLine,BudgetLine,ItemRelation,PreferredVendor,RequisitionLine';
      Text002@1100485007 : TextConst 'ENU=Replace Vendor by %1';
      Text003@1100485009 : TextConst 'ENU=No Vendors modified within Selection.';
      Final@1100485013 : 'Yes,Only Report';
      Text004@1100525000 : TextConst 'ENU=No lines selected, first select line(s)';
      UpdateRep@1100528901 : Report 11012318;
      NewPartLine@1100528904 : Boolean;
      VendorRec@1100528903 : Record 11012304;
      TradeItemRec@1100528902 : Record 11012317;

    PROCEDURE SetAdviceOrderRec@1100485000(VAR lAdviceOrderRec@1100485000 : Record 11012055);
    BEGIN
      RecType := RecType::AdviceOrder;
      gAdviceOrderRec.COPY(lAdviceOrderRec);
    END;

    PROCEDURE SetEstimatePartLineOLDRec@1100485001(VAR lEstimatePartLineRec@1100485000 : Record 11012187);
    BEGIN
      RecType := RecType::EstimatePartLine;
      gEstimatePartLineOLDRec.COPY(lEstimatePartLineRec);
    END;

    PROCEDURE SetEstimatePartLineNEWRec@1100528900(VAR lEstimatePartLineRec@1100485000 : Record 11072076);
    BEGIN
      //DP00381
      RecType := RecType::EstimatePartLine;
      gEstimatePartLineNEWRec.COPY(lEstimatePartLineRec);
      NewPartLine := TRUE;
    END;

    PROCEDURE SetBudgetLineRec@1100485002(VAR lBudgetLineRec@1100485000 : Record 11012001);
    BEGIN
      RecType := RecType::BudgetLine;
      gBudgetLineRec.COPY(lBudgetLineRec);
    END;

    PROCEDURE SetItemRelationRec@1100485003(VAR lItemRelationRec@1100485000 : Record 11012319);
    BEGIN
      RecType := RecType::ItemRelation;
      gItemRelationRec.COPY(lItemRelationRec);
    END;

    PROCEDURE SetPreferredVendorRec@1100485004(VAR lPreferredVendorRec@1100485000 : Record 11012318);
    BEGIN
      RecType := RecType::PreferredVendor;
      gPreferredVendorRec.COPY(lPreferredVendorRec);
    END;

    PROCEDURE SetRequisitionLineRec@1100485009(VAR lRequisitionLineRec@1100485000 : Record 246);
    BEGIN
      RecType := RecType::RequisitionLine;
      gRequisitionLineRec.COPY(lRequisitionLineRec);
    END;

    PROCEDURE ChangeVendorEstimatePartLine@1100485005();
    VAR
      OLDEstimatePartLineRec@1100528903 : Record 11012187;
      OLDTempRec@1100528902 : TEMPORARY Record 11012187;
      NEWEstimatePartLineRec@1100528901 : Record 11072076;
      NEwTempRec@1100528900 : TEMPORARY Record 11072076;
    BEGIN
      //DP00381
      IF NewVendor = '' THEN
        EXIT;

      VendorRec.GET(NewVendor);

      IF NewPartLine = TRUE THEN BEGIN
        NEwTempRec.DELETEALL;
        NEWEstimatePartLineRec.COPY(gEstimatePartLineNEWRec);

        IF NEWEstimatePartLineRec.COUNT = 0 THEN
          ERROR(Text004);   //db, 06-01-14

        NEWEstimatePartLineRec.SETFILTER("Vendor (Trade Item)", '<>%1', NewVendor);
        IF NEWEstimatePartLineRec.FINDSET(TRUE, TRUE) THEN BEGIN
          IF CONFIRM(Text002,TRUE, VendorRec.Name ) THEN BEGIN
            REPEAT;
              IF TradeItemRec.CheckReplaceVendor(
                NEWEstimatePartLineRec."Vendor (Trade Item)",
                NEWEstimatePartLineRec."Trade Item",
                NewVendor, NewTradeItem) THEN
              BEGIN
                NEwTempRec := NEWEstimatePartLineRec;
                NEWEstimatePartLineRec."Trade Item" := '';
                NEWEstimatePartLineRec.VALIDATE("Vendor (Trade Item)", NewVendor);
                NEWEstimatePartLineRec.VALIDATE("Trade Item", NewTradeItem);
                IF (NEWEstimatePartLineRec."Item No." = NEwTempRec."Item No.") AND
                   (NEWEstimatePartLineRec."Vendor (Trade Item)" = NewVendor) AND
                   (NEWEstimatePartLineRec."Trade Item" = NewTradeItem) THEN
                BEGIN
                  IF Final = Final::Yes THEN BEGIN
                    NEWEstimatePartLineRec.MODIFY(TRUE);
                  END ELSE BEGIN
                    NEwTempRec := NEWEstimatePartLineRec;
                  END;
                  NEwTempRec.INSERT;
                END;
              END;
            UNTIL NEWEstimatePartLineRec.NEXT = 0;
          END;
        END;

        IF NEwTempRec.COUNT = 0 THEN
          MESSAGE(Text003)
        ELSE BEGIN
          COMMIT;
          UpdateRep.SetTempEstimatePartLineNEW(NEwTempRec, Final);
          NEWEstimatePartLineRec.SETRANGE("Vendor (Trade Item)");

          UpdateRep.SETTABLEVIEW(NEWEstimatePartLineRec);
          UpdateRep.RUNMODAL;
        END;
      END ELSE BEGIN
        OLDTempRec.DELETEALL;
        OLDEstimatePartLineRec.COPY(gEstimatePartLineOLDRec);

        IF OLDEstimatePartLineRec.COUNT = 0 THEN
          ERROR(Text004);  //db, 06-01-14

        OLDEstimatePartLineRec.SETFILTER("Vendor (Trade Item)", '<>%1', NewVendor);
        IF OLDEstimatePartLineRec.FINDSET(TRUE, TRUE) THEN BEGIN
          IF CONFIRM(Text002,TRUE, VendorRec.Name ) THEN BEGIN
            REPEAT;
              IF TradeItemRec.CheckReplaceVendor(
                OLDEstimatePartLineRec."Vendor (Trade Item)",
                OLDEstimatePartLineRec."Trade Item",
                NewVendor, NewTradeItem) THEN
              BEGIN
                OLDTempRec := OLDEstimatePartLineRec;
                OLDEstimatePartLineRec."Trade Item" := '';
                OLDEstimatePartLineRec.VALIDATE("Vendor (Trade Item)", NewVendor);
                OLDEstimatePartLineRec.VALIDATE("Trade Item", NewTradeItem);
                IF (OLDEstimatePartLineRec."Item No." = OLDTempRec."Item No.") AND
                   (OLDEstimatePartLineRec."Vendor (Trade Item)" = NewVendor) AND
                   (OLDEstimatePartLineRec."Trade Item" = NewTradeItem) THEN
                BEGIN
                  IF Final = Final::Yes THEN BEGIN
                    OLDEstimatePartLineRec.MODIFY(TRUE);
                  END ELSE BEGIN
                    OLDTempRec := OLDEstimatePartLineRec;
                  END;
                  OLDTempRec.INSERT;
                END;
              END;
            UNTIL OLDEstimatePartLineRec.NEXT = 0;
          END;
        END;

        IF OLDTempRec.COUNT = 0 THEN
          MESSAGE(Text003)
        ELSE BEGIN
          COMMIT;
          UpdateRep.SetTempEstimatePartLineOLD(OLDTempRec, Final);
          OLDEstimatePartLineRec.SETRANGE("Vendor (Trade Item)");

          UpdateRep.SETTABLEVIEW(OLDEstimatePartLineRec);
          UpdateRep.RUNMODAL;
        END;
      END;
    END;

    PROCEDURE ChangeVendorBudgetLine@1100485006();
    VAR
      lVendorRec@1100485002 : Record 11012304;
      lBudgetLineRec@1100485001 : Record 11012001;
      TempRec@1100485003 : TEMPORARY Record 11012001;
      lTradeItemRec@1100485004 : Record 11012317;
      ProjRec@1100525000 : Record 11072003;
    BEGIN
      IF NewVendor = '' THEN
        EXIT;

      TempRec.DELETEALL;
      lVendorRec.GET(NewVendor);

      lBudgetLineRec.COPY(gBudgetLineRec);

      IF lBudgetLineRec.COUNT = 0 THEN
        ERROR(Text004);

      ProjRec.GET(lBudgetLineRec."Project No.");
      ProjRec.TESTFIELD("Budget Fixed", FALSE);  //db, 18-08-09

      lTradeItemRec.SETCURRENTKEY("Product Code", Manufacturer, "Item Code", Vendor);

      lBudgetLineRec.SETFILTER("Vendor (Trade Item)", '<>%1', NewVendor);

      IF lBudgetLineRec.FINDSET(TRUE, TRUE) THEN
        IF CONFIRM(Text002,TRUE, lVendorRec.Name ) THEN BEGIN
          REPEAT;
            IF lTradeItemRec.CheckReplaceVendor(
              lBudgetLineRec."Vendor (Trade Item)",
              lBudgetLineRec."Trade Item",
              NewVendor, NewTradeItem) THEN
            BEGIN
              TempRec := lBudgetLineRec;
              lBudgetLineRec."Trade Item" := '';
              lBudgetLineRec.VALIDATE("Vendor (Trade Item)", NewVendor);
              lBudgetLineRec.VALIDATE("Trade Item", NewTradeItem);
              IF (lBudgetLineRec."Item No." = TempRec."Item No.") AND
                 (lBudgetLineRec."Vendor (Trade Item)" = NewVendor) AND
                 (lBudgetLineRec."Trade Item" = NewTradeItem) THEN
              BEGIN
                IF Final = Final::Yes THEN BEGIN
                  lBudgetLineRec.MODIFY(TRUE);
                END ELSE BEGIN
                  TempRec := lBudgetLineRec;
                END;
                TempRec.INSERT;
              END;
            END;
          UNTIL lBudgetLineRec.NEXT = 0;
        END;

      IF TempRec.COUNT = 0 THEN
        MESSAGE(Text003)
      ELSE BEGIN
        COMMIT;
        UpdateRep.SetTempBudgetLine(TempRec, Final);
        lBudgetLineRec.SETRANGE("Vendor (Trade Item)");
        UpdateRep.SETTABLEVIEW(lBudgetLineRec);
        UpdateRep.RUNMODAL;
      END;
    END;

    PROCEDURE ChangeVendorItemRelation@1100485007();
    VAR
      lVendorRec@1100485002 : Record 11012304;
      lItemRelationRec@1100485001 : Record 11012319;
      lTradeItemRec@1100485003 : Record 11012317;
      TempRec@1100485004 : TEMPORARY Record 11012319;
    BEGIN
      IF NewVendor = '' THEN
        EXIT;

      TempRec.DELETEALL;
      lVendorRec.GET(NewVendor);

      lTradeItemRec.SETCURRENTKEY("Product Code", Manufacturer, "Item Code", Vendor);

      lItemRelationRec.COPY(gItemRelationRec);

      lItemRelationRec.SETRANGE("Source Type", lItemRelationRec."Source Type"::"Trade Item");

      IF lItemRelationRec.COUNT = 0 THEN
        ERROR(Text004);

      lItemRelationRec.SETFILTER(Vendor, '<>%1', NewVendor);

      IF lItemRelationRec.FINDSET(TRUE, TRUE) THEN
        IF CONFIRM(Text002,TRUE, lVendorRec.Name ) THEN BEGIN
          REPEAT;

            IF lTradeItemRec.CheckReplaceVendor(
              lItemRelationRec.Vendor,
              lItemRelationRec."Trade Item",
              NewVendor, NewTradeItem) THEN
            BEGIN
              TempRec := lItemRelationRec;
              lItemRelationRec."Trade Item" := '';
              lItemRelationRec.VALIDATE(Vendor, NewVendor);
              lItemRelationRec.VALIDATE("Trade Item", NewTradeItem);

              IF Final = Final::Yes THEN BEGIN
                lItemRelationRec.MODIFY(TRUE);
              END ELSE BEGIN
                TempRec := lItemRelationRec;
              END;
              TempRec.INSERT;
            END;

          UNTIL lItemRelationRec.NEXT = 0;
        END;

      IF TempRec.COUNT = 0 THEN
        MESSAGE(Text003)
      ELSE BEGIN
        COMMIT;
        UpdateRep.SetTempItemRelation(TempRec, Final);
        lItemRelationRec.SETRANGE(Vendor);
        UpdateRep.SETTABLEVIEW(lItemRelationRec);
        UpdateRep.RUNMODAL;
      END;
    END;

    PROCEDURE ChangeVendorPreferredVendor@1100485008();
    VAR
      lVendorRec@1100485002 : Record 11012304;
      lPreferredVendorRec@1100485001 : Record 11012318;
      lTradeItemRec@1100485003 : Record 11012317;
      TempRec@1100485004 : TEMPORARY Record 11012318;
    BEGIN
      IF NewVendor = '' THEN
        EXIT;

      TempRec.DELETEALL;

      lVendorRec.GET(NewVendor);
      lTradeItemRec.SETCURRENTKEY("Product Code", Manufacturer, "Item Code", Vendor);

      lPreferredVendorRec.COPY(gPreferredVendorRec);

      IF lPreferredVendorRec.COUNT = 0 THEN
        ERROR(Text004);

      lPreferredVendorRec.SETFILTER(Vendor, '<>%1', NewVendor);

      IF lPreferredVendorRec.FINDSET(TRUE, TRUE) THEN
        IF CONFIRM(Text002,TRUE, lVendorRec.Name ) THEN BEGIN
          REPEAT;
            IF lTradeItemRec.CheckReplaceVendor(
              lPreferredVendorRec.Vendor,
              lPreferredVendorRec."Trade Item",
              NewVendor, NewTradeItem) THEN
            BEGIN
              TempRec := lPreferredVendorRec;
              lPreferredVendorRec."Trade Item" := '';
              lPreferredVendorRec.VALIDATE(Vendor, NewVendor);
              lPreferredVendorRec.VALIDATE("Trade Item", NewTradeItem);
              IF Final = Final::Yes THEN BEGIN
                lPreferredVendorRec.MODIFY(TRUE);
              END ELSE BEGIN
                TempRec := lPreferredVendorRec;
              END;
              TempRec.INSERT;
            END;
          UNTIL lPreferredVendorRec.NEXT = 0;
        END;

      IF TempRec.COUNT = 0 THEN
        MESSAGE(Text003)
      ELSE BEGIN
        COMMIT;
        UpdateRep.SetTempPreferredVendor(TempRec, Final);
        lPreferredVendorRec.SETRANGE(Vendor);
        UpdateRep.SETTABLEVIEW(lPreferredVendorRec);
        UpdateRep.RUNMODAL;
      END;
    END;

    PROCEDURE ChangeVendorRequisitionLine@1100485010();
    VAR
      lVendorRec@1100485002 : Record 11012304;
      lRequisitionLineRec@1100485001 : Record 246;
      lTradeItemRec@1100485003 : Record 11012317;
      TempRec@1100485004 : TEMPORARY Record 246;
    BEGIN
      IF NewVendor = '' THEN
        EXIT;

      TempRec.DELETEALL;

      lVendorRec.GET(NewVendor);
      lTradeItemRec.SETCURRENTKEY("Product Code", Manufacturer, "Item Code", Vendor);

      lRequisitionLineRec.COPY(gRequisitionLineRec);

      IF lRequisitionLineRec.COUNT = 0 THEN
        ERROR(Text004);

      lRequisitionLineRec.SETFILTER("Vendor (Trade Item)", '<>%1', NewVendor);

      IF lRequisitionLineRec.FINDSET(TRUE, TRUE) THEN
        IF CONFIRM(Text002,TRUE, lVendorRec.Name ) THEN BEGIN
          REPEAT;

            IF lTradeItemRec.CheckReplaceVendor(
              lRequisitionLineRec."Vendor (Trade Item)",
              lRequisitionLineRec."Trade Item",
              NewVendor, NewTradeItem) THEN
            BEGIN
              TempRec := lRequisitionLineRec;
              lRequisitionLineRec."Trade Item" := '';
              lRequisitionLineRec.VALIDATE("Vendor (Trade Item)", NewVendor);
              lRequisitionLineRec.VALIDATE("Trade Item", NewTradeItem);
              IF Final = Final::Yes THEN BEGIN
                lRequisitionLineRec.MODIFY(TRUE);
              END ELSE BEGIN
                TempRec := lRequisitionLineRec;
              END;
              TempRec.INSERT;
            END;
          UNTIL lRequisitionLineRec.NEXT = 0;
        END;

      IF TempRec.COUNT = 0 THEN
        MESSAGE(Text003)
      ELSE BEGIN
        COMMIT;
        UpdateRep.SetTempRequisitionLine(TempRec, Final);
        lRequisitionLineRec.SETRANGE("Vendor (Trade Item)");
        UpdateRep.SETTABLEVIEW(lRequisitionLineRec);
        UpdateRep.RUNMODAL;
      END;
    END;

    BEGIN
    END.
  }
}

