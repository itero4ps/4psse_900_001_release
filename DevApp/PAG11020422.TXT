OBJECT Page 11020422 Import Item Data
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Import Item Data;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table11012301;
    PageType=NavigatePage;
    OnOpenPage=BEGIN
                 IF NOT FIND('-') THEN BEGIN
                   INIT;
                   INSERT;
                 END;

                 GetImportName;
                 WizardStep := 1;
                 ShowStep(TRUE);

                 FegItemsActive := "Feg Items"
               END;

    OnAfterGetRecord=BEGIN
                       FegItemsActive := "Feg Items"
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100485002;1 ;Action    ;
                      Name=Back;
                      CaptionML=ENU=&Back;
                      Promoted=Yes;
                      Enabled=BackEnable;
                      InFooterBar=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowStep(FALSE);
                                 IF WizardStep > 1 THEN
                                   WizardStep -= 1;
                                 ShowStep(TRUE);
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100485020;1 ;Action    ;
                      Name=Next;
                      CaptionML=ENU=&Next;
                      Promoted=Yes;
                      Enabled=NextEnable;
                      InFooterBar=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowStep(FALSE);
                                 IF WizardStep < 5 THEN
                                 WizardStep += 1;
                                 ShowStep(TRUE);
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100485030;1 ;Action    ;
                      Name=ShowResults;
                      CaptionML=ENU=Result;
                      RunObject=Page 11020418;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=View;
                      PromotedCategory=Process }
      { 1100409000;1 ;Action    ;
                      CaptionML=ENU=Execute;
                      Promoted=Yes;
                      Enabled=ExecuteEnable;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 HandleSingleStep;
                               END;
                                }
      { 1100525015;1 ;Action    ;
                      CaptionML=ENU=Execute All;
                      Promoted=Yes;
                      Enabled=ExecuteAllEnable;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 WizardStep := 5;
                                 HandleSingleStep;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=ENU=Step 1 - Import General Data;
                Visible=Step1Visible }

    { 1100525003;2;Field  ;
                CaptionML=ENU=Step 1 - Import General Data;
                Style=Strong;
                StyleExpr=TRUE }

    { 1100485044;2;Group  ;
                GroupType=Group }

    { 1210190019;3;Field  ;
                CaptionML=ENU=Common;
                Style=Strong;
                StyleExpr=TRUE }

    { 1210190008;3;Field  ;
                SourceExpr=Publications }

    { 16  ;3   ;Field     ;
                SourceExpr=Units }

    { 18  ;3   ;Field     ;
                SourceExpr=Packaging }

    { 20  ;3   ;Field     ;
                SourceExpr=Vendors }

    { 1100485032;2;Group  ;
                GroupType=Group }

    { 1100525001;3;Field  ;
                CaptionML=ENU=Product Classification;
                Style=Strong;
                StyleExpr=TRUE }

    { 2   ;3   ;Field     ;
                SourceExpr="Product Groups" }

    { 4   ;3   ;Field     ;
                SourceExpr="Product Classes" }

    { 6   ;3   ;Field     ;
                SourceExpr="Product Class Synonyms" }

    { 1100485040;2;Group  ;
                GroupType=Group }

    { 1210190013;3;Field  ;
                CaptionML=ENU=Features;
                Style=Strong;
                StyleExpr=TRUE }

    { 1100485012;3;Field  ;
                SourceExpr=Features }

    { 1100485010;3;Field  ;
                SourceExpr="Product Class Features" }

    { 1100485008;3;Field  ;
                SourceExpr=Limits }

    { 1100485006;3;Field  ;
                SourceExpr="Product Class Feature Limits" }

    { 1900092601;1;Group  ;
                CaptionML=ENU=Step 2 - Import Items;
                Visible=Step2Visible }

    { 1210190020;2;Field  ;
                CaptionML=ENU=Step 2 - Import Items;
                Style=Strong;
                StyleExpr=TRUE }

    { 1210190009;2;Group   }

    { 1100525005;3;Field  ;
                CaptionML=ENU=Common;
                Style=Strong;
                StyleExpr=TRUE }

    { 1210190007;3;Field  ;
                SourceExpr="Delete Existing Import Data" }

    { 1210190003;3;Field  ;
                CaptionML=ENU=Import Name;
                SourceExpr=ImportName;
                Editable=FALSE }

    { 1100525002;2;Group  ;
                GroupType=Group }

    { 1210190015;3;Field  ;
                CaptionML=ENU=Basic Items;
                Style=Strong;
                StyleExpr=TRUE }

    { 1210190004;3;Field  ;
                SourceExpr="Basic Items";
                OnValidate=BEGIN
                             GetImportName;
                           END;
                            }

    { 1100525000;3;Field  ;
                SourceExpr="Product Specifications" }

    { 1100525106;2;Group  ;
                GroupType=Group }

    { 1210190017;3;Field  ;
                CaptionML=ENU=Trade Items;
                Style=Strong;
                StyleExpr=TRUE }

    { 1210190005;3;Field  ;
                SourceExpr="Trade Items" }

    { 1100485004;3;Field  ;
                SourceExpr="Charge Trade Items" }

    { 1100525004;3;Field  ;
                SourceExpr="Price History Trade Items" }

    { 1100485031;2;Group   }

    { 1210190018;3;Field  ;
                CaptionML=ENU=Other Items;
                Style=Strong;
                StyleExpr=TRUE }

    { 1100485141;3;Field  ;
                CaptionML=ENU=Trade Items (FEG-format);
                SourceExpr="Feg Items";
                OnValidate=BEGIN
                             GetImportName;
                             IF NOT "Feg Items" THEN BEGIN
                               FullImport := FALSE;
                               GetInfoExpired;
                             END;

                             FegItemsActive := "Feg Items"
                           END;
                            }

    { 1100485054;3;Field  ;
                CaptionML=ENU=File Type;
                OptionCaptionML=ENU=CSV-format,Fixed Length;
                SourceExpr=RequestFileType;
                Editable=FegItemsActive }

    { 1100485051;3;Field  ;
                AssistEdit=Yes;
                CaptionML=ENU=File Name;
                SourceExpr=RequestFileName;
                Editable=FegItemsActive;
                OnAssistEdit=VAR
                               FileMgt@1100525000 : Codeunit 419;
                               DirectoryName@1100525001 : Text;
                               ShortFileName@1100525002 : Text;
                             BEGIN
                               IF RequestFileType = RequestFileType::CSV THEN
                                 FileMgt.SelectFile('csv', DirectoryName, ShortFileName, RequestFileName)
                               ELSE
                                 FileMgt.SelectFile('txt', DirectoryName, ShortFileName, RequestFileName);
                             END;
                              }

    { 1100485045;3;Field  ;
                CaptionML=ENU=Vendor;
                SourceExpr=VendorCode;
                TableRelation="ETIM Vendor (Central Mgt)".Code;
                Editable=FegItemsActive;
                OnValidate=BEGIN
                             ValidateVendor;
                           END;
                            }

    { 1100485046;3;Field  ;
                CaptionML=ENU=Description;
                SourceExpr=VendorName;
                Editable=FALSE }

    { 1100485048;3;Field  ;
                CaptionML=ENU=Currency;
                SourceExpr=CurrCode;
                TableRelation=Currency.Code;
                Editable=FegItemsActive;
                OnValidate=VAR
                             CurrRec@1100485001 : Record 4;
                           BEGIN
                             IF CurrCode <> '' THEN
                               CurrRec.GET(CurrCode);
                           END;
                            }

    { 1100525007;3;Field  ;
                CaptionML=ENU=Full Import;
                SourceExpr=FullImport;
                OnValidate=BEGIN
                             GetInfoExpired;
                           END;
                            }

    { 1100525009;3;Field  ;
                CaptionML=ENU=Info;
                SourceExpr=MessExpired;
                Editable=FALSE }

    { 1907636701;1;Group  ;
                CaptionML=ENU=Step 3 - Check Items;
                Visible=Step3Visible }

    { 1210190021;2;Field  ;
                CaptionML=ENU=Step 3 - Check Items;
                Style=Strong;
                StyleExpr=TRUE }

    { 1100485050;2;Group   }

    { 1210190022;3;Field  ;
                CaptionML=ENU=Basic Items;
                Style=Strong;
                StyleExpr=TRUE }

    { 1100485014;3;Field  ;
                CaptionML=ENU=Basic Items;
                SourceExpr="Check Basic Items" }

    { 1100525008;2;Group   }

    { 1100525006;3;Field  ;
                CaptionML=ENU=Trade Items;
                Style=Strong;
                StyleExpr=TRUE }

    { 1100485016;3;Field  ;
                CaptionML=ENU=Trade Items;
                SourceExpr="Check Trade Items" }

    { 1906851101;1;Group  ;
                CaptionML=ENU=Step 4 - Update Items;
                Visible=Step4Visible }

    { 1210190023;2;Field  ;
                CaptionML=ENU=Step 4 - Update Items;
                Style=Strong;
                StyleExpr=TRUE }

    { 1100525010;2;Group  ;
                GroupType=Group }

    { 1210190024;3;Field  ;
                CaptionML=ENU=Basic Items;
                Style=Strong;
                StyleExpr=TRUE }

    { 1100485021;3;Field  ;
                CaptionML=ENU=Basic Items;
                SourceExpr="Update Basic Items" }

    { 1100525011;2;Group   }

    { 1210190025;3;Field  ;
                CaptionML=ENU=Trade Items;
                Style=Strong;
                StyleExpr=TRUE }

    { 1100485023;3;Field  ;
                CaptionML=ENU=Trade Items;
                SourceExpr="Update Trade Items" }

    { 1100525013;2;Group  ;
                GroupType=Group }

    { 1210190026;3;Field  ;
                CaptionML=ENU=Periodic Activities;
                Style=Strong;
                StyleExpr=TRUE }

    { 1100485033;3;Field  ;
                CaptionML=ENU=Navision Items;
                SourceExpr="Update Navision Items" }

    { 1100485027;3;Field  ;
                CaptionML=ENU=Item Data;
                SourceExpr="Update Item Data" }

    { 1100485025;3;Field  ;
                SourceExpr="Create Search Index" }

    { 1210190001;2;Group   }

    { 1100525012;3;Field  ;
                CaptionML=ENU=Common;
                Style=Strong;
                StyleExpr=TRUE }

    { 1210190000;3;Field  ;
                SourceExpr="Export Message to Excel" }

    { 1907692201;1;Group  ;
                CaptionML=ENU=Complete;
                Visible=Step5Visible }

    { 1210190027;2;Field  ;
                CaptionML=ENU=Complete;
                Style=Strong;
                StyleExpr=TRUE }

    { 1100485053;2;Group   }

    { 1210190028;3;Field  ;
                CaptionML=ENU=Common;
                Style=Strong;
                StyleExpr=TRUE }

    { 1100485042;3;Field  ;
                CaptionClass=Text19077482;
                MultiLine=Yes }

    { 1210190016;2;Group   }

    { 1100525014;3;Field  ;
                CaptionML=ENU=Batch;
                Style=Strong;
                StyleExpr=TRUE }

    { 1210190002;3;Field  ;
                SourceExpr="Start Import Date-Time" }

    { 1210190006;3;Field  ;
                SourceExpr="Import Interval" }

    { 1210190010;3;Field  ;
                SourceExpr="Start Batch (Import)" }

    { 1210190012;3;Field  ;
                SourceExpr="Start Batch (Check)" }

    { 1210190014;3;Field  ;
                SourceExpr="Start Batch (Update)" }

  }
  CODE
  {
    VAR
      ItemSetup@1100485000 : Record 11012300;
      ApplVersion@1100485003 : Integer;
      VendorCode@1100485008 : Code[20];
      VendorName@1100485007 : Text[50];
      CurrCode@1100485006 : Code[10];
      RequestFileName@1100485005 : Text[250];
      RequestFileType@1100485004 : 'CSV,Fixed';
      ImportItemDataCU@1100485001 : Codeunit 11012300;
      ImportName@1100525001 : Text[100];
      FullImport@1100525000 : Boolean;
      Text000@1100525002 : TextConst 'ENU=Not Imported Items Expired';
      MessExpired@1100525003 : Text[250];
      Text19077482@19041929 : TextConst 'ENU=Select Options on Previous Tabs. Choose Execute All. All Selections will be executed.';
      Step1Visible@1210190000 : Boolean INDATASET;
      Step2Visible@1210190001 : Boolean INDATASET;
      Step3Visible@1210190002 : Boolean INDATASET;
      Step4Visible@1210190003 : Boolean INDATASET;
      Step5Visible@1210190004 : Boolean INDATASET;
      WizardStep@1210190005 : Integer;
      BackEnable@1210190007 : Boolean INDATASET;
      NextEnable@1210190008 : Boolean INDATASET;
      Text001@1210190010 : TextConst 'ENU=Step 1 - Import General Data';
      Text002@1210190011 : TextConst 'ENU=Step 2 - Import Items';
      Text003@1210190012 : TextConst 'ENU=Step 3 - Check Items';
      Text004@1210190013 : TextConst 'ENU=Step 4 - Update Items';
      Text005@1210190014 : TextConst 'ENU=Complete';
      ExecuteEnable@1100409000 : Boolean INDATASET;
      ExecuteAllEnable@1100525004 : Boolean INDATASET;
      FegItemsActive@1210190015 : Boolean INDATASET;

    PROCEDURE HandleSingleStep@1210190004();
    BEGIN
      CASE WizardStep OF
        1:
          BEGIN
            ExecuteStep1;
          END;
        2:
          BEGIN
            ExecuteStep2;
          END;
        3:
          BEGIN
            ExecuteStep3;
          END;
        4:
          BEGIN
            ExecuteStep4;
          END;
        5:
          BEGIN
            ExecuteStep1;
            ExecuteStep2;
            ExecuteStep3;
            ExecuteStep4;
          END;
      END;
    END;

    LOCAL PROCEDURE ShowStep@2(Visible@1001 : Boolean);
    BEGIN
      CASE WizardStep OF
        1:
          BEGIN
            Step1Visible := Visible;
            IF Visible THEN BEGIN
              BackEnable := FALSE;
              NextEnable := TRUE;
              ExecuteEnable := TRUE;
              ExecuteAllEnable := FALSE;
            END;
          END;
        2:
          BEGIN
            Step2Visible := Visible;
            IF Visible THEN BEGIN
              BackEnable := TRUE;
              NextEnable := TRUE;
              ExecuteEnable := TRUE;
              ExecuteAllEnable := FALSE;
            END;
          END;
        3:
          BEGIN
            Step3Visible := Visible;
            IF Visible THEN BEGIN
              BackEnable := TRUE;
              NextEnable := TRUE;
              ExecuteEnable := TRUE;
              ExecuteAllEnable := FALSE;
            END;
          END;
        4:
          BEGIN
            Step4Visible := Visible;
            IF Visible THEN BEGIN
              BackEnable := TRUE;
              NextEnable := TRUE;
              ExecuteEnable := TRUE;
              ExecuteAllEnable := FALSE;
            END;
          END;
        5:
          BEGIN
            Step5Visible := Visible;
            IF Visible THEN BEGIN
              BackEnable := TRUE;
              NextEnable := FALSE;
              ExecuteEnable := FALSE;
              ExecuteAllEnable := TRUE;
            END;
          END;
      END;
    END;

    PROCEDURE ImportFegItems@1100485000();
    VAR
      TempBlob@1100525000 : Record 99008535;
      FEGItemsV10@1100485001 : XMLport 11012354;
      FEGItemsCSVV10@1100485000 : XMLport 11012355;
      FileMgt@1100525001 : Codeunit 419;
      IStream@1100525002 : InStream;
    BEGIN
      IF NOT "Feg Items" THEN EXIT;
      IF RequestFileName = '' THEN EXIT;

      FileMgt.BLOBImport4PS(TempBlob, RequestFileName, FALSE);
      TempBlob.Blob.CREATEINSTREAM(IStream);

      IF RequestFileType = RequestFileType::CSV THEN BEGIN
        FEGItemsCSVV10.DetermineSelection(VendorCode, CurrCode);
        FEGItemsCSVV10.SETSOURCE(IStream);
        FEGItemsCSVV10.IMPORT;
      END;

      IF RequestFileType = RequestFileType::Fixed THEN BEGIN
        FEGItemsV10.DetermineSelection(VendorCode, CurrCode);
        FEGItemsV10.SETSOURCE(IStream);
        FEGItemsV10.IMPORT;
      END;
    END;

    PROCEDURE ValidateVendor@1100485001();
    VAR
      VendorRec@1100485000 : Record 11012304;
    BEGIN
      VendorRec.GET(VendorCode);
      VendorName := VendorRec.Name;
    END;

    PROCEDURE GetImportName@1100525000();
    VAR
      ImportTradeItemRec@1100525001 : Record 11012333;
      ImportBasicItemRec@1100525000 : Record 11012334;
    BEGIN
      ImportName := '';
      IF "Trade Items" OR "Feg Items" THEN BEGIN
        IF ImportTradeItemRec.FINDFIRST THEN BEGIN
          ImportTradeItemRec.CALCFIELDS("Vendor Name");
          ImportName := ImportTradeItemRec."Vendor Name";
          IF ImportTradeItemRec.FINDLAST THEN BEGIN
            ImportTradeItemRec.CALCFIELDS("Vendor Name");
            IF ImportName <> ImportTradeItemRec."Vendor Name" THEN
              ImportName := ImportName + '>>';
          END;
        END;
      END;
      IF "Basic Items" THEN BEGIN
        IF ImportBasicItemRec.FINDFIRST THEN BEGIN
          ImportBasicItemRec.CALCFIELDS("Manufacturer Name");
          ImportName := ImportBasicItemRec."Manufacturer Name";
          IF ImportBasicItemRec.FINDLAST THEN BEGIN
            ImportBasicItemRec.CALCFIELDS("Manufacturer Name");
            IF ImportName <> ImportBasicItemRec."Manufacturer Name" THEN
              ImportName := ImportName + '>>';
          END;
        END;
      END;
    END;

    PROCEDURE CheckFullImport@1100525002();
    BEGIN
      IF FullImport THEN BEGIN
        TESTFIELD("Basic Items", FALSE);
        TESTFIELD("Trade Items", FALSE);
        TESTFIELD("Feg Items", TRUE);
        ValidateVendor;
      END;
    END;

    PROCEDURE GetInfoExpired@1100525001();
    BEGIN
      IF FullImport THEN
        MessExpired := Text000
      ELSE
        MessExpired := '';
    END;

    PROCEDURE ExecuteStep1@1100525003();
    BEGIN
      ExecStep1ImportCommonData;
      GetImportName;
    END;

    PROCEDURE ExecuteStep2@1100525004();
    BEGIN
      ExecStep2ImportItemData;

      ImportFegItems;
      GetImportName;
    END;

    PROCEDURE ExecuteStep3@1100525005();
    BEGIN
      ExecStep3Check;
      GetImportName;
    END;

    PROCEDURE ExecuteStep4@1100525006();
    BEGIN
      CheckFullImport;
      IF FullImport THEN
        ExecStep4Process(VendorCode)
      ELSE
        ExecStep4Process('');
      GetImportName;
    END;

    BEGIN
    {
      db, 08-07-11: activate ExecuteStep 1-4 from codeunit 11012305
    }
    END.
  }
}

