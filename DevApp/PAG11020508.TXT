OBJECT Page 11020508 Plant Transport Order
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Plant Transport Order;
    SourceTable=Table11020505;
    PageType=Document;
    PromotedActionCategoriesML=ENU=New,Process,Report,Order,Functions;
    OnInit=BEGIN
             LinkedTOSubFrmEditable := TRUE;
             CostLineSubFrmEditable := TRUE;
             PlantOrderSubFrmEditable := TRUE;
             "Status DeliveryVisible" := TRUE;
             "Status ArrivalVisible" := TRUE;
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 PlantSetupRec.GET;
                 PlantSetupRec.TESTFIELD("Transport Orders");

                 IF (NOT PlantSetupRec."PO-Picking Bar Code Scanner") THEN BEGIN
                   "Status ArrivalVisible" := FALSE;
                   "Status DeliveryVisible" := FALSE;
                 END;
               END;

    OnAfterGetRecord=BEGIN
                       GetOrderContactFrom();
                       GetOrderContactTo();

                       OnAfterGetCurrRecord;
                       GetTotalPercentageOnFormat;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                  InitRecord();
                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100485010;1 ;ActionGroup;
                      CaptionML=ENU=Order }
      { 1210190000;2 ;Action    ;
                      CaptionML=ENU=Transport Cost;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Costs;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 lPlantTransportCostLineRec@1210190001 : Record 11020506;
                                 lPlantTransportOrderCostPage@1210190002 : Page 11020510;
                               BEGIN
                                 IF ("No." = '') THEN EXIT;

                                 lPlantTransportCostLineRec.FILTERGROUP(2);
                                 lPlantTransportCostLineRec.SETRANGE("Transport Order No.", "No.");
                                 lPlantTransportCostLineRec.FILTERGROUP(0);
                                 lPlantTransportOrderCostPage.SETTABLEVIEW(lPlantTransportCostLineRec);
                                 lPlantTransportOrderCostPage.EDITABLE(CostLineSubFrmEditable);
                                 lPlantTransportOrderCostPage.RUNMODAL;
                               END;
                                }
      { 1100525001;2 ;Action    ;
                      CaptionML=ENU=Linked Transport Orders;
                      Image=Link;
                      OnAction=VAR
                                 lLinkedPlantTransportOrderRec@1210190002 : Record 11020514;
                                 lLinkedPlTransportOrderPage@1210190001 : Page 11020518;
                               BEGIN
                                 IF ("No." = '') THEN EXIT;

                                 lLinkedPlantTransportOrderRec.FILTERGROUP(2);
                                 lLinkedPlantTransportOrderRec.SETRANGE("Transport Order No.", "No.");
                                 lLinkedPlantTransportOrderRec.FILTERGROUP(0);
                                 lLinkedPlTransportOrderPage.SETTABLEVIEW(lLinkedPlantTransportOrderRec);
                                 lLinkedPlTransportOrderPage.EDITABLE(PlantOrderSubFrmEditable);
                                 lLinkedPlTransportOrderPage.RUNMODAL;
                               END;
                                }
      { 1210190009;2 ;Action    ;
                      CaptionML=ENU=Contacts - From Location;
                      Visible=FALSE;
                      Image=TeamSales;
                      OnAction=VAR
                                 lvOrderContRec@1100485000 : Record 11012536;
                                 lvOrderContFrm@1100485001 : Page 11020589;
                               BEGIN
                                 IF ("No." = '') OR ("From Location" = '') THEN
                                   EXIT;

                                 lvOrderContRec.FILTERGROUP(9);
                                 lvOrderContRec.SETRANGE(Type, lvOrderContRec.Type::"TO From");
                                 lvOrderContRec.SETRANGE("Order No.", "No.");
                                 lvOrderContRec.FILTERGROUP(0);
                                 lvOrderContFrm.SETTABLEVIEW(lvOrderContRec);
                                 lvOrderContFrm.RUNMODAL;
                                 GetOrderContactFrom();
                               END;
                                }
      { 1210190008;2 ;Action    ;
                      CaptionML=ENU=Contacts - To Location;
                      Visible=FALSE;
                      Image=TeamSales;
                      OnAction=VAR
                                 lvOrderContRec@1100485000 : Record 11012536;
                                 lvOrderContFrm@1100485001 : Page 11020589;
                               BEGIN
                                 IF ("No." = '') OR ("To Location" = '') THEN
                                   EXIT;

                                 lvOrderContRec.FILTERGROUP(9);
                                 lvOrderContRec.SETRANGE(Type, lvOrderContRec.Type::"TO To");
                                 lvOrderContRec.SETRANGE("Order No.", "No.");
                                 lvOrderContRec.FILTERGROUP(0);
                                 lvOrderContFrm.SETTABLEVIEW(lvOrderContRec);
                                 lvOrderContFrm.RUNMODAL;
                                 GetOrderContactTo();
                               END;
                                }
      { 1100525003;2 ;Action    ;
                      CaptionML=ENU=Documents;
                      Visible=FALSE;
                      Image=Documents;
                      OnAction=BEGIN
                                 ShowDocuments();  //DP00183.c
                               END;
                                }
      { 1100529000;2 ;Action    ;
                      CaptionML=ENU=Comments;
                      Visible=FALSE;
                      Image=ViewComments;
                      OnAction=BEGIN
                                 CommentSheet(TRUE);  //DP00183
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100485011;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1100485012;2 ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=ENU=Create Transport Cost;
                      Promoted=Yes;
                      Image=ShipmentLines;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 CreateTransportCost();
                               END;
                                }
      { 1100485096;2 ;Action    ;
                      CaptionML=ENU=Delete Zero Lines Transport Cost;
                      Image=CollapseDepositLines;
                      OnAction=BEGIN
                                 DeleteZeroQuantityCostLines(TRUE);
                               END;
                                }
      { 1100525012;2 ;Action    ;
                      CaptionML=ENU=Create Transport Ride;
                      Image=Delivery;
                      OnAction=BEGIN
                                 TESTFIELD("No.");
                                 CreateTransportRide();
                               END;
                                }
      { 1100485103;2 ;Action    ;
                      CaptionML=ENU=Creat Purchase Order;
                      Promoted=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 lvTransOrderFuncCU@1100485001 : Codeunit 11020504;
                               BEGIN
                                 TESTFIELD("No.");
                                 TESTFIELD("Transport Date");
                                 TESTFIELD("Shipping Agent");
                                 TESTFIELD("Means of Transport");
                                 TESTFIELD("Purchase Order", '');

                                 lvTransOrderFuncCU.RunCreateTransportPurchOrder("No.", "Ride No.", "Shipping Agent", "Transport Date", 1);  //* 1=TO-Cost
                               END;
                                }
      { 1100525013;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Email;
                      Promoted=Yes;
                      Image=Email;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 PlantTransportOrder@1100525001 : Record 11020505;
                               BEGIN
                                 TESTFIELD("No.");
                                 TESTFIELD("To Location");

                                 //**4PS.sn [evdb]
                                 PlantTransportOrder := Rec;
                                 PlantTransportOrder.SETRECFILTER;
                                 REPORT.RUNMODAL(REPORT::"E-mail Transport Order", TRUE, FALSE, PlantTransportOrder);
                                 //**4PS.en
                               END;
                                }
      { 1100485014;1 ;ActionGroup;
                      CaptionML=ENU=Posting }
      { 1100485091;2 ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=ENU=Release;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lvPostTransportOrderCU@1100485000 : Codeunit 11020501;
                                 lvMaxDateDifferenceTOPO@1100485002 : Integer;
                               BEGIN
                                 TESTFIELD("No.");
                                 IF NOT CONFIRM(Text000,FALSE,TABLECAPTION) THEN
                                   EXIT;

                                 lvPostTransportOrderCU.RunReleaseTransportOrder(Rec, lvMaxDateDifferenceTOPO);
                                 IF (Status = Status::Released) AND (lvMaxDateDifferenceTOPO > 0) THEN BEGIN
                                   IF NOT CONFIRM(Text006, FALSE, "Transport Date", lvMaxDateDifferenceTOPO) THEN
                                     ERROR('');
                                 END;
                               END;
                                }
      { 1100485092;2 ;Action    ;
                      CaptionML=ENU=R&eset Release;
                      Image=ResetStatus;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lvPostTransportOrderCU@1100485000 : Codeunit 11020501;
                                 lvPOPosted@1100525001 : Boolean;
                               BEGIN
                                 IF Status = Status::"PO Posted" THEN BEGIN
                                   IF Rec.PlantOrdersPresent() THEN
                                     lvPOPosted := TRUE;
                                 END;

                                 IF NOT lvPOPosted THEN BEGIN
                                   IF NOT CONFIRM(Text001,FALSE) THEN
                                     EXIT;
                                 END ELSE BEGIN
                                   IF NOT CONFIRM(Text001b,FALSE, Status) THEN
                                     EXIT;
                                 END;

                                 lvPostTransportOrderCU.RunResetReleaseTransportOrder(Rec);
                               END;
                                }
      { 1100485134;2 ;Action    ;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=ENU=Post Plant Orders;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lvTransPlantOrderRec@1100485002 : Record 11020509;
                                 lvPostTransportOrderCU@1100485001 : Codeunit 11020501;
                               BEGIN
                                 TESTFIELD("No.");
                                 lvTransPlantOrderRec.SETRANGE("Transport Order No.", "No.");
                                 lvTransPlantOrderRec.SETRANGE(Posted , FALSE);
                                 lvTransPlantOrderRec.SETFILTER("Transfer Date", '<>%1', "Transport Date");
                                 IF NOT lvTransPlantOrderRec.FIND('-') THEN BEGIN
                                   IF NOT CONFIRM(Text010,FALSE) THEN
                                     EXIT;
                                 END ELSE BEGIN
                                   IF NOT CONFIRM(Text011 + '\ \' + Text010, FALSE) THEN
                                     EXIT;
                                 END;

                                 lvPostTransportOrderCU.RunPostTransportPlantOrders(Rec, FALSE);
                               END;
                                }
      { 1100485015;2 ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=ENU=Post &Transport Cost;
                      RunObject=Codeunit 11020502;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Process }
      { 1210190011;0 ;ActionContainer;
                      ActionContainerType=Reports }
      { 1210190012;1 ;Action    ;
                      CaptionML=ENU=Transport Order;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Print;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 PlantTransportOrderFunctions@1100525000 : Codeunit 11020504;
                               BEGIN
                                 //lvPrintDocumentCU.PrintPlantTransportOrder(Rec, FALSE);
                                 PlantTransportOrderFunctions.PrintTransportOrder(Rec)   //DP00485 C009628
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100485000;1;Group  ;
                CaptionML=ENU=General }

    { 1100485001;2;Field  ;
                SourceExpr="No.";
                Importance=Promoted;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1100485080;2;Field  ;
                SourceExpr=Type;
                Importance=Promoted;
                Editable=TypeEDITABLE;
                OnValidate=BEGIN
                             TypeOnAfterValidate;
                           END;
                            }

    { 1100485003;2;Field  ;
                SourceExpr="Transport Date";
                Editable="Transport DateEDITABLE";
                OnValidate=BEGIN
                             TransportDateOnAfterValidate;
                           END;
                            }

    { 1100485018;2;Field  ;
                SourceExpr="From Location";
                Editable="From LocationEDITABLE";
                OnValidate=BEGIN
                             FromLocationC1100485018OnAfter;
                           END;
                            }

    { 1100485020;2;Field  ;
                SourceExpr="To Location";
                Editable=ToLocationFldEDITABLE;
                OnValidate=BEGIN
                             ToLocationC1100485020OnAfterVa;
                           END;
                            }

    { 1100485031;2;Field  ;
                SourceExpr="Internal Customer No.";
                OnValidate=BEGIN
                             InternalCustomerNoOnAfterValid;
                           END;
                            }

    { 1100525005;2;Field  ;
                SourceExpr="Customer Name";
                Importance=Additional }

    { 1100485033;2;Field  ;
                SourceExpr="Project No.";
                OnValidate=BEGIN
                             ProjectNoOnAfterValidate;
                           END;
                            }

    { 1100525007;2;Field  ;
                SourceExpr="Project Description";
                Importance=Additional }

    { 1100485005;2;Field  ;
                SourceExpr="Shipping Agent";
                Editable=["Shipping AgentEDITABLE" ];
                OnValidate=BEGIN
                             ShippingAgentOnAfterValidate;
                           END;
                            }

    { 1100525009;2;Field  ;
                SourceExpr="Shipping Agent Name";
                Importance=Additional }

    { 1100485007;2;Field  ;
                SourceExpr="Means of Transport";
                Editable="Means of TransportEDITABLE";
                OnValidate=BEGIN
                             MeansofTransportOnAfterValidat;
                           END;
                            }

    { 1100525011;2;Field  ;
                SourceExpr="Means of Transport Description";
                Importance=Additional }

    { 1100485537;2;Field  ;
                SourceExpr="Status Arrival";
                Visible="Status ArrivalVisible" }

    { 1100485535;2;Field  ;
                SourceExpr="Status Delivery";
                Visible="Status DeliveryVisible" }

    { 1100409000;2;Field  ;
                CaptionML=ENU=Documents;
                SourceExpr=HasDocumentLinks();
                Visible=FALSE;
                OnDrillDown=BEGIN
                              ShowDocuments();  //*DP00183
                            END;
                             }

    { 1100526000;2;Field  ;
                SourceExpr="Department Code";
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                           END;
                            }

    { 1100485022;2;Field  ;
                SourceExpr="Perc. From Location";
                Editable="Perc. From LocationEDITABLE";
                OnValidate=BEGIN
                             PercFromLocationOnAfterValidat;
                           END;
                            }

    { 1100485024;2;Field  ;
                SourceExpr="Perc. To Location";
                Importance=Additional;
                Editable=["Perc. To LocationEDITABLE" ];
                OnValidate=BEGIN
                             PercToLocationOnAfterValidate;
                           END;
                            }

    { 1100485026;2;Field  ;
                SourceExpr="Perc. Internal";
                Importance=Additional;
                Editable=["Perc. InternalEDITABLE" ];
                OnValidate=BEGIN
                             PercInternalOnAfterValidate;
                           END;
                            }

    { 1100485028;2;Field  ;
                SourceExpr="Perc. Project";
                Importance=Additional;
                Editable="Perc. ProjectEDITABLE";
                OnValidate=BEGIN
                             PercProjectOnAfterValidate;
                           END;
                            }

    { 1100485050;2;Field  ;
                Name=TotalPercentage;
                CaptionML=ENU=Total Percentage;
                SourceExpr=GetTotalPercentage();
                Importance=Additional }

    { 1100485009;1;Part   ;
                Name=PlantOrderSubFrm;
                SubPageLink=Transport Order No.=FIELD(No.);
                PagePartID=Page11020509;
                Editable=PlantOrderSubFrmEditable }

    { 1900609401;1;Group  ;
                CaptionML=ENU=From Location }

    { 1100485063;2;Field  ;
                Name=FromLocationFld;
                SourceExpr="From Location";
                Importance=Promoted;
                Editable=FromLocationFldEDITABLE;
                OnValidate=BEGIN
                             FromLocationC1100485063OnAfter;
                           END;
                            }

    { 1100485062;2;Field  ;
                CaptionML=ENU=Address Code;
                SourceExpr="From Location Address Code" }

    { 1100485052;2;Field  ;
                Lookup=No;
                DrillDown=No;
                CaptionML=ENU=Name;
                SourceExpr="From Location Description" }

    { 1100485058;2;Field  ;
                CaptionML=ENU=Address;
                SourceExpr="From Location Address";
                Importance=Promoted }

    { 1100485059;2;Field  ;
                CaptionML=ENU=Address 2;
                SourceExpr="From Location Address 2" }

    { 1100485060;2;Field  ;
                CaptionML=ENU=Post Code;
                SourceExpr="From Location Post Code" }

    { 1100485065;2;Field  ;
                CaptionML=ENU=City;
                SourceExpr="From Location City" }

    { 1100485144;2;Field  ;
                CaptionML=ENU=Country;
                SourceExpr="From Location Country/Region" }

    { 1100485061;2;Field  ;
                CaptionML=ENU=Contact;
                SourceExpr="From Location Contact" }

    { 1100409001;2;Field  ;
                CaptionML=ENU=Contact Phone No.;
                SourceExpr="From Location Contact Phone No" }

    { 1100485106;2;Field  ;
                CaptionML=ENU=Name;
                SourceExpr=OrderContFromRec.Name;
                Editable=FALSE }

    { 1100485109;2;Field  ;
                CaptionML=ENU=Address;
                SourceExpr=OrderContFromRec.Address;
                Editable=FALSE }

    { 1100485111;2;Field  ;
                CaptionML=ENU=City;
                SourceExpr=OrderContFromRec.City;
                Editable=FALSE }

    { 1100485112;2;Field  ;
                CaptionML=ENU=Phone No.;
                SourceExpr=OrderContFromRec."Phone No." + ' / ' + OrderContFromRec."Phone No. 2";
                Editable=FALSE }

    { 1100485114;2;Field  ;
                CaptionML=ENU=Mobile Phone No.;
                SourceExpr=OrderContFromRec."Mobile Phone No." + ' / ' + OrderContFromRec."Mobile Phone No. 2";
                Editable=FALSE }

    { 1100485116;2;Field  ;
                CaptionML=ENU=Phone No. Work;
                SourceExpr=OrderContFromRec."Phone No. Work" + ' / ' + OrderContFromRec."Phone No. Work 2";
                Editable=FALSE }

    { 1906983801;1;Group  ;
                CaptionML=ENU=To Location }

    { 1100485076;2;Field  ;
                Name=ToLocationFld;
                SourceExpr="To Location";
                Importance=Promoted;
                Editable=ToLocationFldEDITABLE;
                OnValidate=BEGIN
                             ToLocationC1100485076OnAfterVa;
                           END;
                            }

    { 1100485075;2;Field  ;
                CaptionML=ENU=Address Code;
                SourceExpr="To Location Address Code" }

    { 1100485078;2;Field  ;
                Lookup=No;
                DrillDown=No;
                CaptionML=ENU=Name;
                SourceExpr="To Location Description" }

    { 1100485071;2;Field  ;
                CaptionML=ENU=Address;
                SourceExpr="To Location Address";
                Importance=Promoted }

    { 1100485072;2;Field  ;
                CaptionML=ENU=Address 2;
                SourceExpr="To Location Address 2" }

    { 1100485073;2;Field  ;
                CaptionML=ENU=Post Code;
                SourceExpr="To Location Post Code" }

    { 1100485079;2;Field  ;
                CaptionML=ENU=City;
                SourceExpr="To Location City" }

    { 1100485085;2;Field  ;
                CaptionML=ENU=Country;
                SourceExpr="To Location Country/Region" }

    { 1100485074;2;Field  ;
                CaptionML=ENU=Contact;
                SourceExpr="To Location Contact" }

    { 1100409002;2;Field  ;
                CaptionML=ENU=Contact Phone No.;
                SourceExpr="To Location Contact Phone No" }

    { 1100525000;2;Field  ;
                SourceExpr="Shipment Method Code" }

    { 1100485125;2;Field  ;
                CaptionML=ENU=Name;
                SourceExpr=OrderContToRec.Name;
                Editable=FALSE }

    { 1100485126;2;Field  ;
                CaptionML=ENU=Address;
                SourceExpr=OrderContToRec.Address;
                Editable=FALSE }

    { 1100485127;2;Field  ;
                CaptionML=ENU=City;
                SourceExpr=OrderContToRec.City;
                Editable=FALSE }

    { 1100485128;2;Field  ;
                CaptionML=ENU=Phone No.;
                SourceExpr=OrderContToRec."Phone No." + ' / ' + OrderContToRec."Phone No. 2";
                Editable=FALSE }

    { 1100485129;2;Field  ;
                CaptionML=ENU=Mobile Phone No.;
                SourceExpr=OrderContToRec."Mobile Phone No." + ' / ' + OrderContToRec."Mobile Phone No. 2";
                Editable=FALSE }

    { 1100485130;2;Field  ;
                CaptionML=ENU=Phone No. Work;
                SourceExpr=OrderContToRec."Phone No. Work" + ' / ' + OrderContToRec."Phone No. Work 2";
                Editable=FALSE }

    { 1904583601;1;Group  ;
                CaptionML=ENU=Transport Cost }

    { 1100485049;2;Group  ;
                CaptionML=ENU=Defaults;
                GroupType=Group }

    { 1100485047;2;Field  ;
                SourceExpr="Create Transport Cost by";
                Importance=Promoted;
                OnValidate=BEGIN
                             CreateTransportCostbyOnAfterVa;
                           END;
                            }

    { 1100485094;2;Field  ;
                SourceExpr="Create Load/Unload Cost by";
                Importance=Promoted;
                OnValidate=BEGIN
                             CreateLoadUnloadCostbyOnAfterV;
                           END;
                            }

    { 1900729601;1;Group  ;
                CaptionML=ENU=Appointment }

    { 1100525002;2;Field  ;
                SourceExpr="Appointment Fixed Date" }

    { 1100525004;2;Field  ;
                SourceExpr="Appointment Time";
                Importance=Promoted }

    { 1100525006;2;Field  ;
                SourceExpr="Appointment Code" }

    { 1100525008;2;Field  ;
                DrillDown=No;
                SourceExpr="Appointment Description";
                Importance=Promoted }

    { 1100525010;2;Field  ;
                SourceExpr="Appointment Comment" }

    { 1210190002;0;Container;
                ContainerType=FactBoxArea }

    { 1100529900;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                PartType=Page }

    { 1210190003;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page11130017;
                PartType=Page }

    { 1210190004;1;Part   ;
                SubPageLink=Transport Order No.=FIELD(Transport Order No.),
                            Plant Order No.=FIELD(Plant Order No.);
                PagePartID=Page11130016;
                ProviderID=1100485009;
                PartType=Page }

    { 1100525015;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1100525014;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      PlantSetupRec@1100485000 : Record 11012550;
      Text000@1100485001 : TextConst 'ENU=Do you want to release the %1?';
      Text001@1100485002 : TextConst 'ENU=Do you want to reset released?';
      Text001b@1100525000 : TextConst 'ENU=Status is already ''%1''. Do you want to reset released?';
      Text002@1100485003 : TextConst 'ENU=Do you want to create de transport cost for %1 ''%2''?';
      Text003@1100485004 : TextConst 'ENU=Do you want to create de load/unload cost for %1 ''%2''?';
      Text004@1100485005 : TextConst 'ENU=Create Transport Cost,Create Load-/Unload Cost,Both';
      Text005@1100485006 : TextConst 'ENU=Delete Cost Lines with Quantity not filled?';
      Text006@1100485007 : TextConst 'ENU="Note: Transfer Date of one or more Plant Orders is not equal to the Transport Date ''%1''. The biggest difference is%2 day(s).\ \Accept difference? "';
      Text007@1100485008 : TextConst 'ENU=Create Transport Costs not allowed, order is linked to Transport Order ''%1''';
      OrderContFromRec@1100485011 : Record 11012536;
      OrderContToRec@1100485012 : Record 11012536;
      Text010@1100485013 : TextConst 'ENU=Do you want to post the Plant Order(s)?';
      Text011@1100485016 : TextConst 'ENU=Plant Order(s) with Transfer Date unequal  to Transport Date present. The Transfer Date will be adjusted during posting.';
      DPA_IsHardFilter@1100000999 : Boolean;
      "Status ArrivalVisible"@19028046 : Boolean INDATASET;
      "Status DeliveryVisible"@19021753 : Boolean INDATASET;
      TotalPercentageEmphasize@19071270 : Boolean INDATASET;
      PlantOrderSubFrmEditable@19010944 : Boolean INDATASET;
      CostLineSubFrmEditable@19051010 : Boolean INDATASET;
      LinkedTOSubFrmEditable@19072581 : Boolean INDATASET;
      "Perc. From LocationEDITABLE"@1210190000 : Boolean INDATASET;
      "Perc. To LocationEDITABLE"@1210190001 : Boolean INDATASET;
      "Perc. InternalEDITABLE"@1210190002 : Boolean INDATASET;
      "Perc. ProjectEDITABLE"@1210190003 : Boolean INDATASET;
      TypeEDITABLE@1210190004 : Boolean INDATASET;
      "Transport DateEDITABLE"@1210190005 : Boolean INDATASET;
      "From LocationEDITABLE"@1210190006 : Boolean INDATASET;
      "To LocationEDITABLE"@1210190007 : Boolean INDATASET;
      FromLocationFldEDITABLE@1210190008 : Boolean INDATASET;
      ToLocationFldEDITABLE@1210190009 : Boolean INDATASET;
      "Shipping AgentEDITABLE"@1210190010 : Boolean INDATASET;
      "Means of TransportEDITABLE"@1210190011 : Boolean INDATASET;

    PROCEDURE SetEditable@1100485001();
    VAR
      lvLinked@1100485000 : Boolean;
    BEGIN
      lvLinked := TransOrderHasLinkedOrIsLinked();

      TypeEDITABLE := ((Status < Status::Released) AND (NOT lvLinked));
      "Transport DateEDITABLE" := ((Status < Status::Released) AND (NOT lvLinked));
      "From LocationEDITABLE" := ((Status < Status::Released) AND (NOT lvLinked));
      "To LocationEDITABLE" := ((Status < Status::Released) AND (NOT lvLinked));
      FromLocationFldEDITABLE := ((Status < Status::Released) AND (NOT lvLinked));
      ToLocationFldEDITABLE := ((Status < Status::Released) AND (NOT lvLinked));
      "Shipping AgentEDITABLE" := ((NOT lvLinked));
      "Means of TransportEDITABLE" := ((NOT lvLinked));

      SetPercentagesEditable();

      PlantOrderSubFrmEditable := (Status < Status::Released);
      CostLineSubFrmEditable := ("Invoice with Transport Order" = '');
      LinkedTOSubFrmEditable := ("Invoice with Transport Order" = '');

      IF PlantSetupRec."PO-Picking Bar Code Scanner" THEN BEGIN
        IF Type = Type::Arrival THEN BEGIN
          "Status ArrivalVisible" := (FALSE);
          "Status DeliveryVisible" := (TRUE);
        END;
        IF Type = Type::Removal THEN BEGIN
          "Status DeliveryVisible" := (FALSE);
          "Status ArrivalVisible" := (TRUE);
        END;
        IF (Type <> Type::Arrival) AND (Type <> Type::Removal) THEN BEGIN
          "Status ArrivalVisible" := (FALSE);
          "Status DeliveryVisible" := (FALSE);
        END;
      END;
    END;

    PROCEDURE SetPercentagesEditable@1100485002();
    BEGIN
      CALCFIELDS("From Depot", "To Depot");
      "Perc. From LocationEDITABLE" := ((Type <> Type::Arrival) AND (NOT "From Depot"));
      "Perc. To LocationEDITABLE" := ((Type <> Type::Removal) AND (NOT "To Depot"));
      "Perc. InternalEDITABLE" := ((("Internal Customer No." <> '') OR ("Perc. Internal" <> 0)));
      "Perc. ProjectEDITABLE" := ((("Project No." <> '') OR ("Perc. Project" <> 0)));
    END;

    PROCEDURE GetOrderContactFrom@1100485003();
    BEGIN
      OrderContFromRec.RESET;
      OrderContFromRec.SETRANGE(Type, OrderContFromRec.Type::"TO From");
      OrderContFromRec.SETRANGE("Order No.", "No.");
      IF OrderContFromRec.FIND('-') THEN
        OrderContFromRec.CALCFIELDS(
          Name,  "Name 2",  Address,  "Address 2",  "Post Code",  City, "Fax No.", "E-Mail", "E-Mail 2",
          "Phone No.", "Phone No. 2", "Mobile Phone No.", "Mobile Phone No. 2", "Phone No. Work", "Phone No. Work 2")
      ELSE
        OrderContFromRec.INIT;
    END;

    PROCEDURE GetOrderContactTo@1100485004();
    BEGIN
      OrderContToRec.RESET;
      OrderContToRec.SETRANGE(Type, OrderContFromRec.Type::"TO To");
      OrderContToRec.SETRANGE("Order No.", "No.");
      IF OrderContToRec.FIND('-') THEN
        OrderContToRec.CALCFIELDS(
          Name,  "Name 2",  Address,  "Address 2",  "Post Code",  City, "Fax No.", "E-Mail", "E-Mail 2",
          "Phone No.", "Phone No. 2", "Mobile Phone No.", "Mobile Phone No. 2", "Phone No. Work", "Phone No. Work 2")
      ELSE
        OrderContToRec.INIT;
    END;

    PROCEDURE CreateTransportCost@1100485000();
    VAR
      lvTransFuncCU@1100485000 : Codeunit 11020504;
      lvCreateTransCost@1100485001 : Boolean;
      lvCreateLoadCost@1100485002 : Boolean;
      DefOptionNo@1210190000 : Integer;
    BEGIN
      TESTFIELD("No.");
      TESTFIELD("Transport Date");
      TESTFIELD("Shipping Agent");     //22057.n
      TESTFIELD("Means of Transport"); //22057.n

      CALCFIELDS("Invoice with Transport Order");
      IF ("Invoice with Transport Order" <> '') THEN
        ERROR(Text007, "Invoice with Transport Order");

      IF ("Create Transport Cost by" <> "Create Transport Cost by"::" ") THEN
        lvCreateTransCost := TRUE;

      IF ("Create Load/Unload Cost by" <> "Create Load/Unload Cost by"::" ") AND
         ((PlantSetupRec."Create Load/Unload Cost for" = PlantSetupRec."Create Load/Unload Cost for"::Both) OR
          ((PlantSetupRec."Create Load/Unload Cost for" = PlantSetupRec."Create Load/Unload Cost for"::Arrival) AND
           (Type = Type::Arrival)) OR
          ((PlantSetupRec."Create Load/Unload Cost for" = PlantSetupRec."Create Load/Unload Cost for"::Removal) AND
           (Type = Type::Removal)))
      THEN
        lvCreateLoadCost := TRUE;

      IF (NOT lvCreateTransCost) AND (NOT lvCreateLoadCost) THEN
        EXIT;

      IF lvCreateTransCost AND lvCreateLoadCost THEN BEGIN
        //Fill 'DefOptionNo' with value of that are not done automatically
        CASE PlantSetupRec."Create TO Cost Autom." OF
          PlantSetupRec."Create TO Cost Autom."::None:
            DefOptionNo := 3;
          PlantSetupRec."Create TO Cost Autom."::"Transport Cost":
            DefOptionNo := 2;
          PlantSetupRec."Create TO Cost Autom."::"Load/Unload Cost":
            DefOptionNo := 1;
          PlantSetupRec."Create TO Cost Autom."::Both:
            DefOptionNo := 0;
        END;
        CASE STRMENU(Text004, DefOptionNo) OF
          0: EXIT;
          1: lvCreateLoadCost := FALSE;
          2: lvCreateTransCost := FALSE;
        END;
      END ELSE BEGIN
        IF lvCreateTransCost THEN
          lvCreateTransCost := CONFIRM(Text002, FALSE, TABLECAPTION, "No.");
        IF lvCreateLoadCost THEN
          lvCreateLoadCost := CONFIRM(Text003, FALSE, TABLECAPTION, "No.");
      END;

      IF lvCreateTransCost OR lvCreateLoadCost THEN
        lvTransFuncCU.RunCreateTransportCost(Rec, '', lvCreateTransCost, lvCreateLoadCost, TRUE);
    END;

    PROCEDURE DeleteZeroQuantityCostLines@1100485005(IWithConfirm@1100485001 : Boolean);
    VAR
      lvTransCostLineRec@1100485000 : Record 11020506;
    BEGIN
      IF IWithConfirm THEN BEGIN
        IF NOT CONFIRM(Text005, FALSE) THEN
          EXIT;
      END;

      lvTransCostLineRec.SETRANGE("Transport Order No.", "No.");
      lvTransCostLineRec.SETFILTER(Type, '<>%1', lvTransCostLineRec.Type::Text);
      lvTransCostLineRec.SETRANGE(Quantity, 0);
      lvTransCostLineRec.DELETEALL;
    END;

    PROCEDURE TransOrderHasLinkedOrIsLinked@1100485008() : Boolean;
    VAR
      lvLinkedTransOrderRec@1100485000 : Record 11020514;
    BEGIN
      WITH lvLinkedTransOrderRec DO BEGIN
        SETRANGE("Transport Order No.", "No.");
        IF FIND('-') THEN
          EXIT(TRUE);

        RESET;
        SETCURRENTKEY("Linked Transport Order No.");
        SETRANGE("Linked Transport Order No.", "No.");
        IF FIND('-') THEN
          EXIT(TRUE);

        EXIT(FALSE);
      END;
    END;

    PROCEDURE CreateTransportRide@1100485006();
    VAR
      lvText000@1100485000 : TextConst 'ENU=Transport Order is not yet linked to a Ride, do you want to create a new Ride No.?';
      lvTransRideRec@1100485001 : Record 11020517;
      lvTransRideLineRec@1100485002 : Record 11020518;
    BEGIN
      TESTFIELD("Ride No.", '');
      IF CONFIRM(lvText000, FALSE) THEN BEGIN
        TESTFIELD("No.");
        TESTFIELD("Transport Date");
        TESTFIELD("Shipping Agent");
        TESTFIELD("Means of Transport");
        lvTransRideRec.INIT;
        lvTransRideRec."No." := '';
        lvTransRideRec.INSERT(TRUE);
        lvTransRideRec.TESTFIELD("No.");
        lvTransRideRec.Date := "Transport Date";
        lvTransRideRec."Shipping Agent" := "Shipping Agent";
        lvTransRideRec."Means of Transport" := "Means of Transport";
        lvTransRideRec.GetDefaultPurchasePrice();
        lvTransRideRec.MODIFY;

        lvTransRideLineRec.INIT;
        lvTransRideLineRec.VALIDATE("Ride No.", lvTransRideRec."No.");
        lvTransRideLineRec.VALIDATE("Transport Order No.", "No.");
        lvTransRideLineRec.INSERT(TRUE);  //* "Ride No." van TO wordt dan ook bijgewerkt, hierna niet nog een keer (ivm SQL)

        IF "Ride No." <> '' THEN BEGIN
          COMMIT;
          lvTransRideRec.SETRANGE("No.", "Ride No.");
          PAGE.RUNMODAL(PAGE::"Plant Transport Ride", lvTransRideRec);
        END;
      END;
    END;

    LOCAL PROCEDURE TransportDateOnAfterValidate@19010293();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShippingAgentOnAfterValidate@19000096();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE MeansofTransportOnAfterValidat@19045766();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE FromLocationC1100485018OnAfter@19054049();
    BEGIN
      SetPercentagesEditable();
    END;

    LOCAL PROCEDURE ToLocationC1100485020OnAfterVa@19064392();
    BEGIN
      SetPercentagesEditable();
    END;

    LOCAL PROCEDURE PercFromLocationOnAfterValidat@19056025();
    BEGIN
      SetPercentagesEditable();
    END;

    LOCAL PROCEDURE PercToLocationOnAfterValidate@19063989();
    BEGIN
      SetPercentagesEditable();
    END;

    LOCAL PROCEDURE PercInternalOnAfterValidate@19029893();
    BEGIN
      SetPercentagesEditable();
    END;

    LOCAL PROCEDURE PercProjectOnAfterValidate@19001678();
    BEGIN
      SetPercentagesEditable();
    END;

    LOCAL PROCEDURE InternalCustomerNoOnAfterValid@19069458();
    BEGIN
      SetPercentagesEditable();
    END;

    LOCAL PROCEDURE ProjectNoOnAfterValidate@19041008();
    BEGIN
      SetPercentagesEditable();
    END;

    LOCAL PROCEDURE TypeOnAfterValidate@19069045();
    BEGIN
      SetPercentagesEditable();
    END;

    LOCAL PROCEDURE FromLocationC1100485063OnAfter@19041514();
    BEGIN
      SetPercentagesEditable();
    END;

    LOCAL PROCEDURE ToLocationC1100485076OnAfterVa@19018789();
    BEGIN
      SetPercentagesEditable();
    END;

    LOCAL PROCEDURE CreateTransportCostbyOnAfterVa@19008766();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CreateLoadUnloadCostbyOnAfterV@19004016();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    VAR
      RecRef@1100529900 : RecordRef;
    BEGIN
      xRec := Rec;
      CALCFIELDS("From Depot", "To Depot", "Invoice with Transport Order");
      GetOrderContactFrom();
      GetOrderContactTo();

      SetEditable();
      RecRef.GETTABLE(Rec);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(TRUE);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode("Department Code");
    END;

    LOCAL PROCEDURE GetTotalPercentageOnFormat@19051009();
    BEGIN
      TotalPercentageEmphasize := (GetTotalPercentage() <> 100);
    END;

    BEGIN
    END.
  }
}

