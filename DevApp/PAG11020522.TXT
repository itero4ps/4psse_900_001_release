OBJECT Page 11020522 Project/Plant (iMOS-Material)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Project/Plant (iMOS-Material);
    PageType=Card;
    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::LookupCancel THEN
                         LookupCancelOnPush;
                       IF CloseAction = ACTION::LookupOK THEN
                           LookupOKOnPush;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100485000;1;Group  ;
                CaptionML=ENU=General;
                GroupType=Group }

    { 1120522;2;Field     ;
                CaptionML=ENU=Posting Type;
                OptionCaptionML=ENU=Project,Plant;
                SourceExpr=PostingType;
                Importance=Promoted }

    { 1100485002;2;Field  ;
                Name=PostToCntrl;
                CaptionML=ENU=Number;
                SourceExpr=PostTo;
                Importance=Promoted;
                OnValidate=BEGIN
                             ValidatePostTo;
                           END;

                OnLookup=BEGIN
                           CASE PostingType OF
                             PostingType::Plant:
                               LookupPlantInventory;
                             PostingType::Project:
                               LookupJobNo;
                           END;
                         END;
                          }

  }
  CODE
  {
    VAR
      JobNoticeRec@1100485002 : Record 11020536;
      PostingType@1100485000 : 'Project,Plant';
      PostTo@1100485001 : Code[30];
      PostToPlantType@1100485003 : Code[20];
      PostToPlantNo@1100485004 : Code[20];
      PostToJobNo@1100485005 : Code[20];
      Text001@1100485006 : TextConst 'ENU=No Project.';
      Text002@1100485007 : TextConst 'ENU=Not a Small Project.';
      Text003@1100485008 : TextConst 'ENU=Project Status is not Production';
      Text004@1100485009 : TextConst 'ENU=Enter a valid Materialtype or Materialnumber (7 or 11 chacters).';
      Text005@1100485010 : TextConst 'ENU=Plant Type not found.';
      Text006@1100485011 : TextConst 'ENU=Plant Type not on location %1.';
      Text007@1100485012 : TextConst 'ENU=Plant Type not found.';

    PROCEDURE SetRecord@1100485001(lvJobNoticeRec@1100485000 : Record 11020536);
    BEGIN
      JobNoticeRec := lvJobNoticeRec;
    END;

    PROCEDURE GetInput@1100485004(VAR ioJobNo@1100485000 : Code[20];VAR ioPlantType@1100485001 : Code[20];VAR ioPlantNo@1100485002 : Code[20]);
    BEGIN
      ioJobNo := PostToJobNo;
      ioPlantType := PostToPlantType;
      ioPlantNo  := PostToPlantNo;
    END;

    PROCEDURE LookupPlantInventory@1100485000();
    VAR
      lvInventoryRec@1100485001 : Record 11012555;
      lvInventoryPage@1100485000 : Page 11012559;
      lvDetails@1100485002 : 'InventEntry,PlantType,PlantNo,RateCode';
    BEGIN
      lvInventoryRec.SETRANGE(Removed,FALSE);
      lvInventoryRec.SETRANGE(Location,JobNoticeRec."Plant Location");
      lvInventoryRec.Removed := FALSE;
      lvInventoryRec.Location := JobNoticeRec."Plant Location";
      lvInventoryRec."Plant Type" := '';
      lvInventoryRec."Plant No." := '';
      lvInventoryPage.SetDetailSelection(lvDetails::PlantNo);

      PostToPlantType := '';
      PostToPlantNo := '';
      PostToJobNo := '';

      lvInventoryPage.SETTABLEVIEW(lvInventoryRec);
      lvInventoryPage.SETRECORD(lvInventoryRec);
      lvInventoryPage.LOOKUPMODE := TRUE;
      IF lvInventoryPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
        lvInventoryPage.GETRECORD(lvInventoryRec);
        lvInventoryRec.CALCFIELDS(Bulk);
        lvInventoryPage.GetDetailSelection(lvDetails);
        PostToPlantType := lvInventoryRec."Plant Type";
        IF (lvDetails <> lvDetails::PlantType) AND (NOT lvInventoryRec.Bulk) THEN
          PostToPlantNo := lvInventoryRec."Plant No.";
        PostTo := PostToPlantType + PostToPlantNo;
      END;
    END;

    PROCEDURE LookupJobNo@1100485002();
    VAR
      lJobRec@1100485000 : Record 11072003;
      lJobList@1100485001 : Page 11072004;
    BEGIN
      lJobRec.SETRANGE("Small Project", TRUE);
      lJobRec.SETRANGE("Project Status", lJobRec."Project Status"::Production);

      lJobList.SETTABLEVIEW(lJobRec);
      lJobList.SETRECORD(lJobRec);
      lJobList.LOOKUPMODE := TRUE;

      PostToJobNo := '';
      PostToPlantType := '';
      PostToPlantNo := '';

      IF lJobList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        lJobList.GETRECORD(lJobRec);
        PostToJobNo := lJobRec."No.";
        PostTo := PostToJobNo;
      END;
    END;

    PROCEDURE ValidatePostTo@1100485003();
    VAR
      lvJobRec@1100485004 : Record 11072003;
      lvPlantTypeRec@1100485003 : Record 11012551;
      lvPlantNoRec@1100485002 : Record 11012552;
      lvPlantInventoryRec@1100485001 : Record 11012555;
      TestLen@1100485000 : Integer;
    BEGIN
      PostToJobNo := '';
      PostToPlantType := '';
      PostToPlantNo := '';

      CASE PostingType OF
        PostingType::Plant:
          BEGIN
            TestLen := STRLEN(PostTo);
            IF (TestLen <> 7) AND (TestLen <> 11) THEN
              ERROR(Text004);
            IF TestLen = 7 THEN BEGIN
              IF NOT lvPlantTypeRec.GET(PostTo) THEN
                ERROR(Text005);
              lvPlantInventoryRec.SETRANGE(Removed, FALSE);
              lvPlantInventoryRec.SETRANGE(Location, JobNoticeRec."Plant Location");
              lvPlantInventoryRec.SETRANGE("Plant Type", PostTo);
              lvPlantInventoryRec.SETRANGE("Plant No.");
              IF NOT lvPlantInventoryRec.FIND('-') THEN
                ERROR(Text006, JobNoticeRec."Plant Location");

            END ELSE BEGIN
              IF NOT lvPlantTypeRec.GET(COPYSTR(PostTo, 1, 7)) THEN
                ERROR(Text005);

              IF NOT lvPlantNoRec.GET(COPYSTR(PostTo, 1, 7), COPYSTR(PostTo, 8, 4)) THEN
                ERROR(Text007);

              lvPlantInventoryRec.SETRANGE(Removed, FALSE);
              lvPlantInventoryRec.SETRANGE(Location, JobNoticeRec."Plant Location");
              lvPlantInventoryRec.SETRANGE("Plant Type", COPYSTR(PostTo, 1, 7));
              lvPlantInventoryRec.SETRANGE("Plant No.", COPYSTR(PostTo, 8, 4));
              IF NOT lvPlantInventoryRec.FIND('-') THEN
                ERROR(Text006, JobNoticeRec."Plant Location");
            END;

            PostToPlantType := COPYSTR(PostTo, 1, 7);
            IF TestLen = 11 THEN
              PostToPlantNo := COPYSTR(PostTo, 8, 4);

          END;
        PostingType::Project:
          BEGIN
            IF NOT lvJobRec.GET(PostTo) THEN
              ERROR(Text001)
            ELSE BEGIN
              IF NOT lvJobRec."Small Project" THEN
                ERROR(Text002);
              IF lvJobRec."Project Status" <> lvJobRec."Project Status"::Production THEN
                ERROR(Text003);
            END;
            PostToJobNo := PostTo;
          END;
      END;
    END;

    LOCAL PROCEDURE LookupOKOnPush@19031339();
    BEGIN
      ValidatePostTo;
    END;

    LOCAL PROCEDURE LookupCancelOnPush@19011887();
    BEGIN
      PostTo := '';
      PostToPlantType := '';
      PostToPlantNo := '';
      PostToJobNo := '';
    END;

    BEGIN
    END.
  }
}

