OBJECT Page 11020529 Plant Transport Ride SF
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Transport Ride Transport Order;
    SaveValues=Yes;
    SourceTable=Table11020518;
    PageType=List;
    OnOpenPage=BEGIN
                 IF DefaultResetOptionNo = 0 THEN
                   DefaultResetOptionNo := 3;  //* Geen
               END;

    OnAfterGetRecord=BEGIN
                       TransportDateTOOnFormat(FORMAT("Transport Date (TO)"));
                       TypeTOOnFormat(FORMAT("Type (TO)"));
                       StatusTOOnFormat(FORMAT("Status (TO)"));
                       FromLocationTOOnFormat(FORMAT("From Location (TO)"));
                       GetPLantLocationDescriptionFro(FORMAT(GetPLantLocationDescription("From Location (TO)")));
                       FromLocationAddressTOOnFormat(FORMAT("From Location Address (TO)"));
                       FromLocationAddress2TOOnFormat(FORMAT("From Location Address 2 (TO)"));
                       FromLocationPostCodeTOOnFormat(FORMAT("From Location Post Code (TO)"));
                       FromLocationCityTOOnFormat(FORMAT("From Location City (TO)"));
                       ToLocationTOOnFormat(FORMAT("To Location (TO)"));
                       GetPLantLocationDescriptionToL(FORMAT(GetPLantLocationDescription("To Location (TO)")));
                       ToLocationAddressTOOnFormat(FORMAT("To Location Address (TO)"));
                       ToLocationAddress2TOOnFormat(FORMAT("To Location Address 2 (TO)"));
                       ToLocationPostCodeTOOnFormat(FORMAT("To Location Post Code (TO)"));
                       ToLocationCityTOOnFormat(FORMAT("To Location City (TO)"));
                     END;

    OnDeleteRecord=VAR
                     lvMsec@1100485000 : BigInteger;
                     lvOptionNo@1100485001 : Integer;
                   BEGIN
                     PlantSetupRec.GET;
                     IF PlantSetupRec."Reset Transport Order" = PlantSetupRec."Reset Transport Order"::Interactive THEN BEGIN
                       lvMsec := CURRENTDATETIME - LastDeleteDateTime;
                       IF (lvMsec > 200) THEN BEGIN  //* Als meerdere records gelijk verwijderd worden dan niet bij elke deze vraag
                         lvOptionNo := STRMENU(Text001, DefaultResetOptionNo);
                         IF lvOptionNo = 0 THEN
                           ERROR('');
                         FILTERGROUP(9);
                         CASE lvOptionNo OF
                           1: SETRANGE("Reset TO Info (Interactive)", PlantSetupRec."Reset Transport Order"::MeansOfTrans);
                           2: SETRANGE("Reset TO Info (Interactive)", PlantSetupRec."Reset Transport Order"::ShippingAgent);
                           ELSE SETRANGE("Reset TO Info (Interactive)");  //* Reset filter
                         END;
                         DefaultResetOptionNo := lvOptionNo;
                         FILTERGROUP(0);
                       END;
                       LastDeleteDateTime := CURRENTDATETIME;
                     END;

                     IF "Posted (TO)" THEN BEGIN
                       IF NOT CONFIRM(Text002, FALSE, FIELDCAPTION("Transport Order No."), "Transport Order No.") THEN
                         ERROR('');
                       IF LastDeleteDateTime <> 0DT THEN
                         LastDeleteDateTime := CURRENTDATETIME;
                     END;
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=ENU=Line }
      { 1907796704;2 ;Action    ;
                      CaptionML=ENU=Text Block;
                      Image=Text;
                      OnAction=BEGIN
                                 //This functionality was copied from page #11020528. Unsupported part was commented. Please check it.
                                 {CurrPage.RideLineSubfrm.PAGE.}
                                 EditText;
                               END;
                                }
      { 1100525001;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525003;1 ;ActionGroup;
                      CaptionML=ENU=Posting }
      { 1100525002;2 ;Action    ;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=ENU=Post Arival Plant Orders;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lRideRec@1100525000 : Record 11020517;
                               BEGIN
                                 IF lRideRec.GET("Ride No.") THEN
                                   PostPlantOrdersOfTransOrders(lRideRec, 1);  //* 1=Aanvoer
                               END;
                                }
      { 1100525004;2 ;Action    ;
                      ShortCutKey=Shift+F9;
                      CaptionML=ENU=Post &Removal Plant Orders;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lRideRec@1100525000 : Record 11020517;
                               BEGIN
                                 IF lRideRec.GET("Ride No.") THEN
                                   PostPlantOrdersOfTransOrders(lRideRec, 2);  //* 2=Afvoer
                               END;
                                }
      { 1100525005;  ;ActionContainer;
                      ActionContainerType=Reports }
      { 1100525006;1 ;Action    ;
                      CaptionML=ENU=Transport Orders;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Print;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 lRideRec@1100525000 : Record 11020517;
                               BEGIN
                                 IF lRideRec.GET("Ride No.") THEN BEGIN
                                   PrintTransportOrders("Ride No.", 1);  //* 1=Transport Orders
                                   PrintTransportOrders("Ride No.", 2);  //* 2=Posted Transport Orders
                                   DoClearMarks();
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100485000;1;Group  ;
                GroupType=Repeater }

    { 1100485001;2;Field  ;
                SourceExpr="Transport Order No.";
                OnLookup=BEGIN
                           LookupTransportOrderNo();
                         END;
                          }

    { 1100485003;2;Field  ;
                SourceExpr="Sequence No.";
                OnValidate=BEGIN
                             SequenceNoOnAfterValidate;
                           END;
                            }

    { 1100485012;2;Field  ;
                CaptionML=ENU=Transport Date;
                SourceExpr="Transport Date (TO)";
                OnDrillDown=BEGIN
                              DrilldownTransportOrderCard();
                            END;
                             }

    { 1100485016;2;Field  ;
                DrillDown=No;
                CaptionML=ENU=Type;
                SourceExpr="Type (TO)" }

    { 1100485018;2;Field  ;
                DrillDown=No;
                CaptionML=ENU=Status;
                SourceExpr="Status (TO)" }

    { 1100529000;2;Field  ;
                DrillDown=No;
                SourceExpr="Invoice with Transport Order";
                Visible=FALSE }

    { 1100485020;2;Field  ;
                DrillDown=No;
                CaptionML=ENU=From Location;
                SourceExpr="From Location (TO)" }

    { 1100485040;2;Field  ;
                CaptionML=ENU=From Location Description;
                SourceExpr=GetPLantLocationDescription("From Location (TO)") }

    { 1100485022;2;Field  ;
                DrillDown=No;
                CaptionML=ENU=From Location Address;
                SourceExpr="From Location Address (TO)" }

    { 1100485024;2;Field  ;
                DrillDown=No;
                CaptionML=ENU=From Location Address 2;
                SourceExpr="From Location Address 2 (TO)";
                Visible=FALSE }

    { 1100485026;2;Field  ;
                DrillDown=No;
                CaptionML=ENU=From Location Post Code;
                SourceExpr="From Location Post Code (TO)";
                Visible=FALSE }

    { 1100485028;2;Field  ;
                DrillDown=No;
                CaptionML=ENU=From Location City;
                SourceExpr="From Location City (TO)" }

    { 1100485030;2;Field  ;
                DrillDown=No;
                CaptionML=ENU=To Location;
                SourceExpr="To Location (TO)" }

    { 1100485042;2;Field  ;
                CaptionML=ENU=To Location Description;
                SourceExpr=GetPLantLocationDescription("To Location (TO)") }

    { 1100485032;2;Field  ;
                DrillDown=No;
                CaptionML=ENU=To Location Address;
                SourceExpr="To Location Address (TO)" }

    { 1100485034;2;Field  ;
                DrillDown=No;
                CaptionML=ENU=To Location Address 2;
                SourceExpr="To Location Address 2 (TO)";
                Visible=FALSE }

    { 1100485036;2;Field  ;
                DrillDown=No;
                CaptionML=ENU=To Location Post Code;
                SourceExpr="To Location Post Code (TO)";
                Visible=FALSE }

    { 1100485038;2;Field  ;
                DrillDown=No;
                CaptionML=ENU=To Location City;
                SourceExpr="To Location City (TO)" }

    { 1100485005;2;Field  ;
                CaptionML=ENU=Transport;
                SourceExpr=GetTransportOrderCost("Transport Order No.",1);
                OnDrillDown=BEGIN
                              DrilldownTransportOrderCard();
                            END;
                             }

    { 1100485007;2;Field  ;
                CaptionML=ENU=Load/Unload;
                SourceExpr=GetTransportOrderCost("Transport Order No.",2);
                OnDrillDown=BEGIN
                              DrilldownTransportOrderCard();
                            END;
                             }

    { 1100485044;2;Field  ;
                SourceExpr=Comment }

    { 1100485046;2;Field  ;
                SourceExpr="Comment 2" }

    { 1100525000;2;Field  ;
                CaptionML=ENU=Text;
                SourceExpr=(Memo<>'');
                OnValidate=BEGIN
                             Memo60623939OnPush;
                           END;
                            }

  }
  CODE
  {
    VAR
      PlantSetupRec@1100485000 : Record 11012550;
      RideHeadRec@1100485001 : Record 11020517;
      LastDeleteDateTime@1100485002 : DateTime;
      Text001@1100485003 : TextConst 'ENU=Reset Meauns of Transport on TO,Reset Shipping Agent and Meauns of Transport on TO,No reset';
      DefaultResetOptionNo@1100485004 : Integer;
      Text002@1100525000 : TextConst 'ENU="%1 ''%2'' is already posted, it is not possible to link this order to a ride again.\ \Delete, are you sure? "';

    PROCEDURE LookupTransportOrderNo@1100485000();
    VAR
      lvTransOrderRec@1100485002 : Record 11020505;
      lvPostedTransOrderRec@1100525000 : Record 11020507;
      lvRideLineRec@1100485001 : Record 11020518;
      lvTransOrderListFrm@1100485000 : Page 11020511;
    BEGIN
      IF ("Transport Order No." <> '') AND "Posted (TO)" THEN BEGIN
        lvPostedTransOrderRec."No." := "Transport Order No.";
        PAGE.RUNMODAL(0, lvPostedTransOrderRec);
        EXIT;
      END;

      //* Selecteren TO's die nog niet aan een rit zijn gekoppeld.
      RideHeadRec.GET("Ride No.");
      RideHeadRec.TESTFIELD("Shipping Agent");
      RideHeadRec.TESTFIELD("Means of Transport");

      lvTransOrderRec.SETCURRENTKEY("Shipping Agent", "Means of Transport", "Transport Date");
      lvTransOrderRec.FILTERGROUP(6);
      lvTransOrderRec.SETFILTER("Shipping Agent", '%1|%2', RideHeadRec."Shipping Agent", '');
      lvTransOrderRec.SETFILTER("Means of Transport", '%1|%2', RideHeadRec."Means of Transport", '');
      IF "Transport Order No." = '' THEN
        lvTransOrderRec.SETRANGE("Ride No.", '')
      ELSE
        lvTransOrderRec.SETFILTER("Ride No.", '%1|%2', '', "Ride No.");
      lvTransOrderRec.FILTERGROUP(0);
      IF RideHeadRec.Date <> 0D THEN
        lvTransOrderRec.SETRANGE("Transport Date", RideHeadRec.Date - 7, RideHeadRec.Date + 7);
      lvTransOrderRec."Shipping Agent" := RideHeadRec."Shipping Agent";
      lvTransOrderRec."Means of Transport" := RideHeadRec."Means of Transport";
      lvTransOrderRec."Transport Date" := RideHeadRec.Date;
      lvTransOrderRec."No." := "Transport Order No.";

      lvTransOrderListFrm.SetCopyAllowed();
      lvTransOrderListFrm.LOOKUPMODE(TRUE);
      lvTransOrderListFrm.SETTABLEVIEW(lvTransOrderRec);
      lvTransOrderListFrm.SETRECORD(lvTransOrderRec);
      IF lvTransOrderListFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
        lvTransOrderListFrm.GETRECORD(lvTransOrderRec);
        IF lvTransOrderRec."No." <> '' THEN BEGIN
          VALIDATE("Transport Order No.", lvTransOrderRec."No.");
        END;
      END ELSE BEGIN
        lvTransOrderListFrm.GetCopyButtonPushed(lvTransOrderRec);
        IF lvTransOrderRec.FINDFIRST THEN BEGIN
          REPEAT
            IF NOT lvRideLineRec.GET("Ride No.", lvTransOrderRec."No.") THEN BEGIN
              lvRideLineRec.VALIDATE("Ride No.", "Ride No.");
              lvRideLineRec.VALIDATE("Transport Order No.", lvTransOrderRec."No.");
              lvRideLineRec.INSERT(TRUE);
            END;
          UNTIL lvTransOrderRec.NEXT = 0;
          CurrPage.UPDATE(TRUE);
        END;
      END;
    END;

    PROCEDURE DrilldownTransportOrderCard@1100525001();
    BEGIN
      IF "Transport Order No." = '' THEN
        EXIT;
      CurrPage.UPDATE(TRUE);
      COMMIT;
      TransportOrderCard();
      CurrPage.UPDATE(TRUE);
      COMMIT;
    END;

    PROCEDURE PostPlantOrdersOfTransOrders@1100485001(IRideRec@1100485000 : Record 11020517;IModeTypeOrder@1100485005 : Integer);
    VAR
      lvRideLineRec@1100485001 : Record 11020518;
      lvPostTransportOrderCU@1100485002 : Codeunit 11020501;
      lvText000@1100485003 : TextConst 'ENU=Do you want to post the %1Plant Order(s) of the released Transport Order(s)?';
      lvText001@1100485004 : TextConst 'ENU="ARRIVAL "';
      lvText002@1100485006 : TextConst 'ENU="REMOVAL "';
      lvOrderTypeTxt@1100485007 : Text[30];
    BEGIN
      //* Selectie soort orders (IModeTypeOrder): 0=Alle, 1=Aanvoer+Overige verplaatsingen, 3=Afvoer

      IRideRec.TESTFIELD("No.");

      lvOrderTypeTxt := '';
      IF IModeTypeOrder = 1 THEN
        lvOrderTypeTxt := lvText001;
      IF IModeTypeOrder = 2 THEN
        lvOrderTypeTxt := lvText002;
      IF NOT CONFIRM(lvText000,FALSE,lvOrderTypeTxt) THEN
        EXIT;

      lvRideLineRec.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(lvRideLineRec);

      lvRideLineRec.SETRANGE("Ride No.", IRideRec."No.");
      IF IModeTypeOrder IN [1, 2] THEN BEGIN
        lvRideLineRec.FILTERGROUP(6);  //* In andere filter groep want op scherm kan al een (ander) filter op dit veld gezet zijn
        IF IModeTypeOrder = 1 THEN
          lvRideLineRec.SETFILTER("Type (TO)", '%1|%2',
            lvRideLineRec."Type (TO)"::Arrival, lvRideLineRec."Type (TO)"::"Other Transfers")
        ELSE
          lvRideLineRec.SETRANGE("Type (TO)", lvRideLineRec."Type (TO)"::Removal);
        lvRideLineRec.FILTERGROUP(0);
      END;

      lvPostTransportOrderCU.RunPostTransRidePlantOrders(lvRideLineRec, TRUE);
    END;

    PROCEDURE EditText@1210190001();
    VAR
      lvTextFrm@11012001 : Page 11012120;
    BEGIN
      TESTFIELD("Ride No.");
      TESTFIELD("Transport Order No.");

      lvTextFrm.SetSelection(DATABASE::"Plant Transport Ride Line","Ride No.","Transport Order No.",'','','','',0,0);
      lvTextFrm.RUNMODAL;
    END;

    PROCEDURE PrintTransportOrders@1100525000(RideNo@1100525004 : Code[20];TOListType@1100525005 : Integer);
    VAR
      lvTransOrderRec@1100525003 : Record 11020505;
      lvPostedTransOrderRec@1100525007 : Record 11020507;
      lvRideTORec@1100525002 : Record 11020518;
      lvPrintDocumentCU@1100525001 : Codeunit 229;
      lvTransOrderNo@1100525000 : Code[20];
      lvFilter@1100525006 : Text[1024];
    BEGIN
      //* POListType: 1=Transport Order, 2=Posted Transport Order
      lvRideTORec.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(lvRideTORec);
      lvRideTORec.SETRANGE("Ride No.", RideNo);
      lvRideTORec.SETFILTER("Transport Order No.", '<>%1', '');

      IF lvRideTORec.FINDSET THEN BEGIN
        REPEAT
          lvTransOrderNo := lvRideTORec."Transport Order No.";
          CASE TOListType OF
            1:
              IF NOT lvTransOrderRec.GET(lvTransOrderNo) THEN
                lvTransOrderNo := '';
            2:
              IF NOT lvPostedTransOrderRec.GET(lvTransOrderNo) THEN
                lvTransOrderNo := '';
            ELSE
              lvTransOrderNo := '';
          END;
          IF lvTransOrderNo <> '' THEN BEGIN
            IF lvFilter = '' THEN
              lvFilter := lvTransOrderNo
            ELSE
              lvFilter := lvFilter + '|' + lvTransOrderNo;
          END;
        UNTIL lvRideTORec.NEXT = 0;
        IF lvFilter = '' THEN
          EXIT;

        CASE TOListType OF
          1:
            BEGIN
              lvTransOrderRec.SETFILTER("No.", lvFilter);
              IF lvTransOrderRec.FINDFIRST THEN
                lvPrintDocumentCU.PrintPlantTransportOrder(lvTransOrderRec, TRUE);
            END;
          2:
            BEGIN
              lvPostedTransOrderRec.SETFILTER("No.", lvFilter);
              IF lvPostedTransOrderRec.FINDFIRST THEN
                lvPrintDocumentCU.PrintPostedPlantTransportOrder(lvPostedTransOrderRec, TRUE);
            END;
        END;
      END;
    END;

    PROCEDURE DoClearMarks@1100525002();
    BEGIN
      CLEARMARKS;
    END;

    LOCAL PROCEDURE SequenceNoOnAfterValidate@19074841();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE Memo60623939OnPush@19009931();
    BEGIN
      EditText();
    END;

    LOCAL PROCEDURE TransportDateTOOnFormat@19063316(Text@19034243 : Text[1024]);
    BEGIN
      IF "Posted (TO)" THEN BEGIN
        CALCFIELDS("Transport Date (PTO)");
        Text := FORMAT("Transport Date (PTO)");
      END;
    END;

    LOCAL PROCEDURE TypeTOOnFormat@19014195(Text@19011248 : Text[1024]);
    BEGIN
      IF "Posted (TO)" THEN BEGIN
        CALCFIELDS("Type (PTO)");
        Text := FORMAT("Type (PTO)");
      END;
    END;

    LOCAL PROCEDURE StatusTOOnFormat@19022749(Text@19061877 : Text[1024]);
    BEGIN
      IF "Posted (TO)" THEN BEGIN
        CALCFIELDS("Status (PTO)");
        Text := FORMAT("Status (PTO)");
      END;
    END;

    LOCAL PROCEDURE FromLocationTOOnFormat@19056582(Text@19063395 : Text[1024]);
    BEGIN
      IF "Posted (TO)" THEN BEGIN
        CALCFIELDS("From Location (PTO)");
        Text := "From Location (PTO)";
      END;
    END;

    LOCAL PROCEDURE GetPLantLocationDescriptionFro@19053847(Text@19021367 : Text[1024]);
    BEGIN
      IF "Posted (TO)" THEN BEGIN
        CALCFIELDS("From Location (PTO)");
        Text := GetPLantLocationDescription("From Location (PTO)");
      END;
    END;

    LOCAL PROCEDURE FromLocationAddressTOOnFormat@19044704(Text@19054283 : Text[1024]);
    BEGIN
      IF "Posted (TO)" THEN BEGIN
        CALCFIELDS("From Location Address (PTO)");
        Text := "From Location Address (PTO)";
      END;
    END;

    LOCAL PROCEDURE FromLocationAddress2TOOnFormat@19045613(Text@19072447 : Text[1024]);
    BEGIN
      IF "Posted (TO)" THEN BEGIN
        CALCFIELDS("From Location Address 2 (PTO)");
        Text := "From Location Address 2 (PTO)";
      END;
    END;

    LOCAL PROCEDURE FromLocationPostCodeTOOnFormat@19072618(Text@19047083 : Text[1024]);
    BEGIN
      IF "Posted (TO)" THEN BEGIN
        CALCFIELDS("From Location Post Code (PTO)");
        Text := "From Location Post Code (PTO)";
      END;
    END;

    LOCAL PROCEDURE FromLocationCityTOOnFormat@19049874(Text@19064452 : Text[1024]);
    BEGIN
      IF "Posted (TO)" THEN BEGIN
        CALCFIELDS("From Location City (PTO)");
        Text := "From Location City (PTO)";
      END;
    END;

    LOCAL PROCEDURE ToLocationTOOnFormat@19028815(Text@19029701 : Text[1024]);
    BEGIN
      IF "Posted (TO)" THEN BEGIN
        CALCFIELDS("To Location (PTO)");
        Text := "To Location (PTO)";
      END;
    END;

    LOCAL PROCEDURE GetPLantLocationDescriptionToL@19071199(Text@19011300 : Text[1024]);
    BEGIN
      IF "Posted (TO)" THEN BEGIN
        CALCFIELDS("To Location (PTO)");
        Text := GetPLantLocationDescription("To Location (PTO)");
      END;
    END;

    LOCAL PROCEDURE ToLocationAddressTOOnFormat@19069248(Text@19028067 : Text[1024]);
    BEGIN
      IF "Posted (TO)" THEN BEGIN
        CALCFIELDS("To Location Address (PTO)");
        Text := "To Location Address (PTO)";
      END;
    END;

    LOCAL PROCEDURE ToLocationAddress2TOOnFormat@19069858(Text@19027244 : Text[1024]);
    BEGIN
      IF "Posted (TO)" THEN BEGIN
        CALCFIELDS("To Location Address 2 (PTO)");
        Text := "To Location Address 2 (PTO)";
      END;
    END;

    LOCAL PROCEDURE ToLocationPostCodeTOOnFormat@19076225(Text@19067911 : Text[1024]);
    BEGIN
      IF "Posted (TO)" THEN BEGIN
        CALCFIELDS("To Location Post Code (PTO)");
        Text := "To Location Post Code (PTO)";
      END;
    END;

    LOCAL PROCEDURE ToLocationCityTOOnFormat@19000940(Text@19030757 : Text[1024]);
    BEGIN
      IF "Posted (TO)" THEN BEGIN
        CALCFIELDS("To Location City (PTO)");
        Text := "To Location City (PTO)";
      END;
    END;

    BEGIN
    END.
  }
}

