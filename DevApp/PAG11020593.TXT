OBJECT Page 11020593 Cur.State Ext.Rent Invoiced to
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Current State External Rent Invoiced to;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11012552;
    SourceTableView=WHERE(External=CONST(Yes));
    PageType=Worksheet;
    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
               END;

    OnNextRecord=VAR
                   lvCurrentSteps@1100485003 : Integer;
                   lvStep@1100485002 : Integer;
                   lvNumberOfSteps@1100485001 : Integer;
                   lvEof@1100485000 : Boolean;
                 BEGIN
                   Rec2.COPY(Rec);

                   IF (DateFrom = 0D) THEN BEGIN
                     lvCurrentSteps := Rec2.NEXT(Steps);
                     IF lvCurrentSteps <> 0 THEN
                       Rec := Rec2;
                     EXIT(lvCurrentSteps);
                   END;

                   IF Steps < 0 THEN
                     lvStep := -1
                   ELSE
                     lvStep := 1;

                   lvCurrentSteps := 0;
                   lvEof := Rec2.NEXT(lvStep) = 0;
                   IF NOT lvEof THEN
                     FOR lvNumberOfSteps := 1 TO ABS(Steps) DO BEGIN
                       WHILE SkipPlantNo AND NOT lvEof DO
                         lvEof := Rec2.NEXT(lvStep) = 0;
                       IF NOT lvEof THEN BEGIN
                         Rec := Rec2;
                         lvCurrentSteps := lvCurrentSteps + lvStep;
                       END;
                     END;

                   EXIT(lvCurrentSteps);
                 END;

    OnAfterGetRecord=BEGIN
                       RentEntryRec.GetExtRentPeriod(Vendor, "Plant Type", "No.", StartingDate, EndingDate);
                       ExtRentedInvoicedToEmphasize := ((EndingDate <> 0D) AND ("Ext. Rented Invoiced to" <> EndingDate));
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100485013;1;Group   }

    { 1100485014;2;Field  ;
                CaptionML=ENU=From Date;
                SourceExpr=DateFrom }

    { 1100485000;1;Group  ;
                GroupType=Repeater }

    { 1100485001;2;Field  ;
                SourceExpr="Plant Type";
                Editable=FALSE }

    { 1100485003;2;Field  ;
                SourceExpr="No.";
                Editable=FALSE }

    { 1100485005;2;Field  ;
                SourceExpr=Description;
                Editable=FALSE }

    { 1100485018;2;Field  ;
                SourceExpr=Vendor;
                Editable=FALSE }

    { 1100485007;2;Field  ;
                SourceExpr="Quantity External Rented" }

    { 1100485009;2;Field  ;
                CaptionML=ENU=Starting Date;
                SourceExpr=StartingDate;
                Editable=FALSE }

    { 1100485016;2;Field  ;
                Name=EndingDate;
                CaptionML=ENU=Ending Date;
                SourceExpr=EndingDate;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=ExtRentedInvoicedToEmphasize }

    { 1100485011;2;Field  ;
                SourceExpr="Ext. Rented Invoiced to";
                Style=Strong;
                StyleExpr=ExtRentedInvoicedToEmphasize }

  }
  CODE
  {
    VAR
      Rec2@1100485002 : Record 11012552;
      RentEntryRec@1100525000 : Record 11012535;
      StartingDate@1100485001 : Date;
      EndingDate@1100485000 : Date;
      DateFrom@1100485003 : Date;
      DPA_IsHardFilter@1100000999 : Boolean;
      ExtRentedInvoicedToEmphasize@19065765 : Boolean INDATASET;

    PROCEDURE SkipPlantNo@1100485003() : Boolean;
    BEGIN
      RentEntryRec.GetExtRentPeriod(Rec2.Vendor, Rec2."Plant Type", Rec2."No.", StartingDate, EndingDate);
      IF (EndingDate <> 0D) AND (EndingDate < DateFrom) THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

