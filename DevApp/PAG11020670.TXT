OBJECT Page 11020670 Reference Periods Service
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Reference Periods Service;
    SourceTable=Table11020272;
    DelayedInsert=Yes;
    PageType=List;
    OnOpenPage=BEGIN
                 IF ServiceOrderNo <> '' THEN
                   MarkLinesForServiceOrder();
                 IF ServiceCallNo <> '' THEN
                   MarkLinesForServiceCall();
               END;

    OnAfterGetRecord=BEGIN
                       GetNorm(Rec);
                       RefLimit := RefPeriod.CheckRefPeriod(1,Type,"Document No.",Code,0);
                       DocumentNoOnFormat;
                       UpdateEditable;
                     END;

    OnNewRecord=BEGIN
                  IF ServiceOrderNo <> '' THEN BEGIN
                    Type := Type::ServOrder;
                    "Document No." := ServiceOrderNo;
                    MARK(TRUE);
                  END;
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525002;1 ;Action    ;
                      CaptionML=ENU=Copy;
                      Promoted=Yes;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ProgressPhaseRec@1100525000 : Record 11020251;
                               BEGIN
                                 ProgressPhaseRec.CopyRefPeriod(Type, '', "Document No.");  //db, 25-02-11
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100485000;1;Group  ;
                GroupType=Repeater }

    { 1100485001;2;Field  ;
                SourceExpr=Type;
                Visible=TypeVisible;
                Editable=FALSE }

    { 1100485003;2;Field  ;
                SourceExpr=Code;
                OnLookup=VAR
                           RefPeriodRec@1100485002 : Record 11020272;
                         BEGIN
                           RefPeriodRec.SETRANGE(Type, Type::Common);
                           IF Type = Type::PurchQuote THEN
                             RefPeriodRec.SETRANGE(Apply, RefPeriodRec.Apply::PurchQuote);
                           IF Type = Type::PurchOrder THEN
                             RefPeriodRec.SETRANGE(Apply, RefPeriodRec.Apply::PurchOrder);
                           IF Type = Type::ServCall THEN
                             RefPeriodRec.SETRANGE(Apply, RefPeriodRec.Apply::ServCall);
                           IF Type = Type::ServOrder THEN
                             RefPeriodRec.SETRANGE(Apply, RefPeriodRec.Apply::ServOrder);
                           IF PAGE.RUNMODAL(PAGE::"Reference Periods", RefPeriodRec) = ACTION::LookupOK THEN BEGIN
                             RefPeriodRec.TESTFIELD(Type, Type::Common);
                             VALIDATE(Code, RefPeriodRec.Code);
                           END;
                         END;
                          }

    { 1100485005;2;Field  ;
                SourceExpr=Description }

    { 1100485007;2;Field  ;
                BlankNumbers=BlankZero;
                SourceExpr="Reference Point Start";
                Visible=FALSE }

    { 1100485014;2;Field  ;
                SourceExpr="Description Ref. Point Start" }

    { 1100485012;2;Field  ;
                BlankNumbers=BlankZero;
                SourceExpr="Reference Point End";
                Visible=FALSE }

    { 1100485016;2;Field  ;
                SourceExpr="Description Ref. Point End" }

    { 1100485018;2;Field  ;
                SourceExpr="Document No.";
                Editable=DocumentNoEditable }

    { 1100525000;2;Field  ;
                SourceExpr="Type Hours" }

    { 1100485020;2;Field  ;
                SourceExpr=Norm }

    { 1100485022;2;Field  ;
                SourceExpr=Result }

    { 1100525001;2;Field  ;
                CaptionML=ENU=Margin;
                DecimalPlaces=0:5;
                SourceExpr=Result - Norm }

    { 1100485024;2;Field  ;
                SourceExpr="Starting Date";
                OnValidate=BEGIN
                             StartingDateOnAfterValidate;
                           END;
                            }

    { 1100485028;2;Field  ;
                SourceExpr="Starting Time";
                OnValidate=BEGIN
                             StartingTimeOnAfterValidate;
                           END;
                            }

    { 1100485026;2;Field  ;
                SourceExpr="Ending Date";
                OnValidate=BEGIN
                             EndingDateOnAfterValidate;
                           END;
                            }

    { 1100485030;2;Field  ;
                SourceExpr="Ending Time";
                OnValidate=BEGIN
                             EndingTimeOnAfterValidate;
                           END;
                            }

    { 1100485034;2;Field  ;
                Name=RefLimit;
                CaptionML=ENU=Limit Reference;
                SourceExpr=RefLimit;
                Editable=FALSE }

    { 1210190000;2;Field  ;
                SourceExpr=Source;
                Visible=FALSE }

  }
  CODE
  {
    VAR
      RefLimit@1100485000 : Text[250];
      RefPeriod@1100485001 : Record 11020272;
      ServiceOrderNo@1100528600 : Code[20];
      ServiceCallNo@1100528601 : Code[20];
      "Document No.Emphasize"@19037394 : Boolean INDATASET;
      TypeVisible@19063733 : Boolean INDATASET;
      DocumentNoEditable@1100525000 : Boolean INDATASET;

    PROCEDURE UpdateNextDeadline@1100525000();
    VAR
      ServCallRec@1100525000 : Record 11012822;
      ServOrderRec@1100525001 : Record 11012823;
    BEGIN
      //db, 01-06-10: M19302
      IF Type = Type::ServCall THEN BEGIN
        ServCallRec.GET("Document No.");
        ServCallRec.UpdateNextDeadline;
        ServCallRec.MODIFY;
      END;
      IF Type = Type::ServOrder THEN BEGIN
        ServOrderRec.GET("Document No.");
        ServOrderRec.UpdateNextDeadline;
        ServOrderRec.MODIFY;
      END;
    END;

    PROCEDURE SetServiceOrderNo@1100528600(IServiceOrderNo@1100528600 : Code[20]);
    BEGIN
      ServiceOrderNo := IServiceOrderNo;
    END;

    PROCEDURE MarkLinesForServiceOrder@1100528601();
    VAR
      ReferencePeriod@1100528601 : Record 11020272;
      ServiceOrder@1100528600 : Record 11012823;
    BEGIN
      IF ServiceOrder.GET(ServiceOrderNo) THEN BEGIN
        MARKEDONLY(TRUE);
        SETCURRENTKEY(Type, "Document No.");
        IF ServiceOrder."Call No." <> '' THEN BEGIN
          ReferencePeriod.SETCURRENTKEY(Type, "Document No.");
          ReferencePeriod.SETRANGE(Type, ReferencePeriod.Type::ServCall);
          ReferencePeriod.SETRANGE("Document No.", ServiceOrder."Call No.");
          IF ReferencePeriod.FINDSET THEN BEGIN
            REPEAT
              Rec := ReferencePeriod;
              MARK(TRUE);
            UNTIL ReferencePeriod.NEXT = 0;
            TypeVisible := (TRUE);
          END;
        END;

        ServiceOrder.RESET;
        ServiceOrder.SETCURRENTKEY("Base Service Order No.");
        IF ServiceOrder."Base Service Order No." <> ServiceOrder."No." THEN
          ServiceOrder.SETRANGE("Base Service Order No.", ServiceOrder."Base Service Order No.")
        ELSE
          ServiceOrder.SETRANGE("Base Service Order No.", ServiceOrderNo);

        IF ServiceOrder.FINDSET THEN
          REPEAT
            ReferencePeriod.SETCURRENTKEY(Type, "Document No.");
            ReferencePeriod.SETRANGE(Type, ReferencePeriod.Type::ServOrder);
            ReferencePeriod.SETRANGE("Document No.", ServiceOrder."No.");
            IF ReferencePeriod.FINDSET THEN
              REPEAT
                Rec := ReferencePeriod;
                MARK(TRUE);
              UNTIL ReferencePeriod.NEXT = 0;
          UNTIL ServiceOrder.NEXT = 0;
      END;

      MARKEDONLY(TRUE);
      //SETRANGE(Actual, TRUE);
      IF FINDLAST THEN; //db, 15-09-14: C014484
      //SETRANGE(Actual);
    END;

    PROCEDURE SetServiceCallNo@1100528603(IServiceCallNo@1100528600 : Code[20]);
    BEGIN
      ServiceCallNo := IServiceCallNo;
    END;

    PROCEDURE MarkLinesForServiceCall@1100528604();
    VAR
      ReferencePeriod@1100528601 : Record 11020272;
      ServiceOrder@1100528600 : Record 11012823;
      ServiceCall@1100528602 : Record 11012822;
    BEGIN
      IF ServiceCall.GET(ServiceCallNo) THEN BEGIN
        RESET;
        ReferencePeriod.SETRANGE(Type, ReferencePeriod.Type::ServCall);
        ReferencePeriod.SETRANGE("Document No.", ServiceCallNo);
        IF ReferencePeriod.FINDSET THEN BEGIN
          REPEAT
            Rec := ReferencePeriod;
            MARK(TRUE);
          UNTIL ReferencePeriod.NEXT = 0;
          TypeVisible := (TRUE);
        END;

        ServiceOrder.RESET;
        ServiceOrder.SETCURRENTKEY("Call No.");
        ServiceOrder.SETRANGE("Call No.", ServiceCallNo);

        IF ServiceOrder.FINDSET THEN
          REPEAT
            ReferencePeriod.SETRANGE(Type, ReferencePeriod.Type::ServOrder);
            ReferencePeriod.SETRANGE("Document No.", ServiceOrder."No.");
            IF ReferencePeriod.FINDSET THEN
              REPEAT
                Rec := ReferencePeriod;
                MARK(TRUE);
              UNTIL ReferencePeriod.NEXT = 0;
          UNTIL ServiceOrder.NEXT = 0;
      END;

      MARKEDONLY(TRUE);
      //SETRANGE(Actual, TRUE);
      IF FINDLAST THEN; //db, 15-09-14: C014484
      //SETRANGE(Actual);
    END;

    LOCAL PROCEDURE StartingDateOnAfterValidate@19020273();
    BEGIN
      CurrPage.UPDATE;
      UpdateNextDeadline;  //db, 01-06-10: M19302
    END;

    LOCAL PROCEDURE StartingTimeOnAfterValidate@19008557();
    BEGIN
      CurrPage.UPDATE;
      UpdateNextDeadline;  //db, 01-06-10: M19302
    END;

    LOCAL PROCEDURE EndingDateOnAfterValidate@19076447();
    BEGIN
      CurrPage.UPDATE;
      UpdateNextDeadline;  //db, 01-06-10: M19302
    END;

    LOCAL PROCEDURE EndingTimeOnAfterValidate@19075483();
    BEGIN
      CurrPage.UPDATE;
      UpdateNextDeadline;  //db, 01-06-10: M19302
    END;

    LOCAL PROCEDURE DocumentNoOnFormat@19001080();
    VAR
      ServiceOrder@1100528600 : Record 11012823;
    BEGIN
      IF (ServiceOrderNo + ServiceCallNo <> '') THEN BEGIN
        //  IF ServiceOrder."Base Service Order" THEN
        IF ("Document No." = ServiceOrderNo) OR ("Document No." = ServiceCallNo) THEN
          "Document No.Emphasize" := TRUE;
      //  ELSE
        IF ServiceOrder.GET("Document No.") THEN
          IF ServiceOrder."No." <> ServiceOrder."Base Service Order No." THEN;
      END;
    END;

    PROCEDURE UpdateEditable@1100525001();
    BEGIN
      DocumentNoEditable := Type <> Type::Common;
    END;

    BEGIN
    END.
  }
}

