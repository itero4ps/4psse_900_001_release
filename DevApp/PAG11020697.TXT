OBJECT Page 11020697 Occ. Prognosis / Level
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Occupation Prognosis / Level;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    OnInit=BEGIN
             InitYearNo(0);
           END;

    OnOpenPage=BEGIN
                 MATRIX_MaximumSetLength := 12;
                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                 UpdateMatrixSubForm;
               END;

    ActionList=ACTIONS
    {
      { 1100528608;  ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100528609;1 ;Action    ;
                      CaptionML=ENU=Overall Occupation Prognosis;
                      RunObject=Page 11020683;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CalculateRemainingUsage;
                      PromotedCategory=Process }
      { 1100528610;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528611;1 ;Action    ;
                      CaptionML=ENU=&Copy;
                      Image=Copy;
                      OnAction=VAR
                                 PrognosisDetails@1100528600 : Record 11012884;
                                 CopyPrognosisDetailsREP@1100528601 : Report 11072018;
                               BEGIN
                                 PrognosisDetails.SETRANGE(Type, PrognosisDetails.Type::Occupation);
                                 CASE OccupationType OF
                                   OccupationType::Employee:
                                     BEGIN
                                       PrognosisDetails.SETRANGE("Source Code", OccupationSourceCode);
                                       PrognosisDetails."Source Code" := OccupationSourceCode;
                                     END;
                                   OccupationType::Department:
                                     BEGIN
                                       PrognosisDetails.SETRANGE("Source Code", '');
                                       PrognosisDetails.SETRANGE("Global Dimension 1 Code", OccupationSourceCode);
                                       PrognosisDetails.SETRANGE("Territory Code", '');
                                     END;
                                   OccupationType::Territory:
                                     BEGIN
                                       PrognosisDetails.SETRANGE("Source Code", '');
                                       PrognosisDetails.SETRANGE("Global Dimension 1 Code", '');
                                       PrognosisDetails.SETRANGE("Territory Code", OccupationSourceCode);
                                     END;
                                 END;
                                 CopyPrognosisDetailsREP.SETTABLEVIEW(PrognosisDetails);
                                 CopyPrognosisDetailsREP.SetType(PrognosisDetails.Type::Occupation);
                                 CopyPrognosisDetailsREP.SetToYear(YearNo);
                                 CopyPrognosisDetailsREP.SetOccupationType(OccupationType);
                                 CopyPrognosisDetailsREP.RUNMODAL;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100528600;;Container;
                ContainerType=ContentArea }

    { 1100528601;1;Group  ;
                CaptionML=ENU=General;
                GroupType=Group }

    { 1100528612;2;Field  ;
                CaptionML=ENU=Level;
                OptionCaptionML=ENU=Employee,Global Dimension 1,Territory;
                SourceExpr=OccupationType;
                OnValidate=BEGIN
                             OccupationSourceCode := '';
                             OccupationSourceDescription := '';
                             ValidateOccupationSourceCode;
                           END;
                            }

    { 1100528602;2;Field  ;
                SourceExpr=OccupationSourceCode;
                CaptionClass=GetOccupationSourceCodeCaption;
                OnValidate=BEGIN
                             ValidateOccupationSourceCode;
                           END;

                OnLookup=VAR
                           Employee@1100528600 : Record 5200;
                           Territory@1100528602 : Record 286;
                           DimensionValue@1100528603 : Record 349;
                         BEGIN
                           CASE OccupationType OF
                             OccupationType::Employee:
                               BEGIN
                                 IF OccupationSourceCode <> '' THEN
                                   IF NOT Employee.GET(OccupationSourceCode) THEN
                                     Employee.INIT;
                                 IF PAGE.RUNMODAL(0, Employee) = ACTION::LookupOK THEN
                                   OccupationSourceCode := Employee."No.";
                               END;
                             OccupationType::Department:
                               BEGIN
                                 DimensionValue.SETRANGE("Global Dimension No.", 1);
                                 DimensionValue.SETRANGE(Code, OccupationSourceCode);
                                 IF DimensionValue.FINDFIRST THEN;
                                 DimensionValue.SETRANGE(Code);
                                 IF PAGE.RUNMODAL(0, DimensionValue) = ACTION::LookupOK THEN
                                   OccupationSourceCode := DimensionValue.Code;
                               END;
                             OccupationType::Territory:
                               BEGIN
                                 IF OccupationSourceCode <> '' THEN
                                   IF NOT Territory.GET(OccupationSourceCode) THEN
                                     Territory.INIT;
                                 IF PAGE.RUNMODAL(0, Territory) = ACTION::LookupOK THEN
                                   OccupationSourceCode := Territory.Code;
                               END;
                           END;
                           ValidateOccupationSourceCode;
                         END;
                          }

    { 1100528603;2;Field  ;
                SourceExpr=OccupationSourceDescription;
                CaptionClass=GetOccupationSourceDescriptionCaption;
                Editable=FALSE }

    { 1100528604;2;Field  ;
                CaptionML=ENU=Year;
                SourceExpr=YearNo;
                OnValidate=BEGIN
                             SetPeriodFilter(YearNo);
                             MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                             UpdateMatrixSubForm;
                           END;
                            }

    { 1100528605;1;Part   ;
                Name=MATRIX;
                CaptionML=ENU=Occupation Prognosis;
                PagePartID=Page11229227;
                PartType=Page }

    { 1100528606;;Container;
                ContainerType=FactBoxArea }

    { 1100528607;1;Part   ;
                Name=EmplOccupationFB;
                CaptionML=ENU=Total;
                SubPageLink=No.=FIELD(Employee Filter);
                PagePartID=Page11229229;
                ProviderID=1100528605;
                PartType=Page }

  }
  CODE
  {
    VAR
      MATRIX_MatrixRecord@1100528610 : Record 2000000007;
      MATRIX_MatrixRecords@1100528609 : ARRAY [32] OF Record 2000000007;
      MATRIX_MaximumSetLength@1100528608 : Integer;
      MATRIX_PrimKeyRecInCurrSet@1100528607 : Text[1024];
      MATRIX_CaptionSet@1100528606 : ARRAY [32] OF Text[80];
      MATRIX_CaptionRange@1100528605 : Text[250];
      MATRIX_CurrSetLength@1100528604 : Integer;
      MATRIX_Step@1100528603 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn,,,,,FirstRec,LastRec';
      PeriodType@1100528602 : 'Day,Week,Month,Quarter,Year';
      YearNo@1100528601 : Integer;
      DateFilter@1100528611 : Text;
      OccupationType@1100528612 : 'Employee,Department,Territory';
      OccupationSourceCode@1100528613 : Code[20];
      Text000@1100528614 : TextConst 'ENU=Department';
      OccupationSourceDescription@1100528615 : Text;
      Text001@1100528616 : TextConst 'ENU=Employee Name';
      Text002@1100528617 : TextConst 'ENU=Department Description';
      Text003@1100528618 : TextConst 'ENU=Territory Description';

    PROCEDURE SetPeriodFilter@1100485000(YearNo@1100485000 : Integer);
    BEGIN
      PeriodType := PeriodType::Month;
      DateFilter := STRSUBSTNO('%1..%2', DMY2DATE(1, 1, YearNo), DMY2DATE(31, 12, YearNo));
      CurrPage.EmplOccupationFB.PAGE.SetPeriodFilter(DateFilter);
    END;

    PROCEDURE InitYearNo@1100485001(IYearNo@1100528600 : Integer);
    BEGIN
      IF IYearNo = 0 THEN
        IYearNo := DATE2DMY(WORKDATE,3);
      YearNo := IYearNo;
      SetPeriodFilter(YearNo);
    END;

    PROCEDURE SetOccupationFilter@1100528600(IOccupationType@1100528600 : 'Employee,Department,Territory';IOccupationSourceCode@1100528601 : Code[20]);
    BEGIN
      OccupationType := IOccupationType;
      OccupationSourceCode := IOccupationSourceCode;
      ValidateOccupationSourceCode;
    END;

    PROCEDURE MATRIX_GenerateColumnCaptions@1152(MATRIX_SetWanted@1000 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn,,,,,FirstRec,LastRec');
    VAR
      MatrixManagement@1002 : Codeunit 9200;
    BEGIN
      CLEAR(MATRIX_CaptionSet);
      CLEAR(MATRIX_MatrixRecords);

      MatrixManagement.GeneratePeriodMatrixData(
        MATRIX_SetWanted,
        MATRIX_MaximumSetLength,
        FALSE, // UseNameForCaption
        PeriodType,
        DateFilter,
        MATRIX_PrimKeyRecInCurrSet,
        MATRIX_CaptionSet,
        MATRIX_CaptionRange,
        MATRIX_CurrSetLength,
        MATRIX_MatrixRecords);
    END;

    LOCAL PROCEDURE UpdateMatrixSubForm@7();
    BEGIN
      CurrPage.MATRIX.PAGE.Load(
        MATRIX_CaptionSet, MATRIX_MatrixRecords, MATRIX_CurrSetLength, OccupationType, OccupationSourceCode);
    END;

    LOCAL PROCEDURE GetOccupationSourceCodeCaption@1100528601() : Text;
    VAR
      Employee@1100528600 : Record 5200;
      Territory@1100528601 : Record 286;
    BEGIN
      CASE OccupationType OF
        OccupationType::Employee:
          EXIT(Employee.TABLECAPTION);
        OccupationType::Department:
          EXIT(Text000);
        OccupationType::Territory:
          EXIT(Territory.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE GetOccupationSourceDescriptionCaption@1100528603() : Text;
    BEGIN
      CASE OccupationType OF
        OccupationType::Employee:
          EXIT(Text001);
        OccupationType::Department:
          EXIT(Text002);
        OccupationType::Territory:
          EXIT(Text003);
      END;
    END;

    LOCAL PROCEDURE ValidateOccupationSourceCode@1100528602();
    VAR
      Employee@1100528602 : Record 5200;
      DimensionValue@1100528601 : Record 349;
      Territory@1100528600 : Record 286;
    BEGIN
      CASE OccupationType OF
        OccupationType::Employee:
          BEGIN
            IF OccupationSourceCode <> '' THEN
              Employee.GET(OccupationSourceCode);
            OccupationSourceDescription := Employee."Full Name";
          END;
        OccupationType::Department:
          BEGIN
            IF OccupationSourceCode <> '' THEN BEGIN
              DimensionValue.SETRANGE("Global Dimension No.", 1);
              DimensionValue.SETRANGE(Code, OccupationSourceCode);
              DimensionValue.FINDFIRST;
            END;
            OccupationSourceDescription := DimensionValue.Name;
          END;
        OccupationType::Territory:
          BEGIN
            IF OccupationSourceCode <> '' THEN
              Territory.GET(OccupationSourceCode);
            OccupationSourceDescription := Territory.Name;
          END;
      END;
      CurrPage.EmplOccupationFB.PAGE.SetOccupationFilter(OccupationType, OccupationSourceCode);
      UpdateMatrixSubForm;
    END;

    BEGIN
    END.
  }
}

