OBJECT Page 11071827 Copy Item
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Copy Item;
    SourceTable=Table27;
    PageType=StandardDialog;
    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01

                 IF NOT GET(gvItem) THEN INIT;
                 IF (NewSeries = '') THEN
                   NewSeries := "No. Series";
               END;

    OnAfterGetRecord=BEGIN
                       IF (NewDesc = '') AND (NewItem = '') AND (NewSeries = '') THEN
                         DetermineNewItem("No.");
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    OnQueryClosePage=BEGIN
                       CloseActionOK := CloseAction IN [ACTION::OK,ACTION::LookupOK];
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 5   ;1   ;Group     ;
                CaptionML=ENU=Copy from;
                GroupType=Group }

    { 1   ;2   ;Field     ;
                CaptionML=ENU=Item No.;
                SourceExpr="No.";
                Editable=FALSE;
                OnValidate=BEGIN
                             NoOnAfterValidate;
                           END;
                            }

    { 7   ;2   ;Field     ;
                SourceExpr=Description;
                Editable=FALSE }

    { 1100485008;1;Group  ;
                CaptionML=ENU=Copy to;
                GroupType=Group }

    { 1100485002;2;Field  ;
                CaptionML=ENU=Item No.;
                SourceExpr=NewItem;
                TableRelation=Item;
                OnValidate=BEGIN
                             NewItemOnAfterValidate;
                           END;
                            }

    { 1100485006;2;Field  ;
                CaptionML=ENU=Description;
                SourceExpr=NewDesc }

    { 1100525000;1;Group  ;
                CaptionML=ENU=Apply;
                GroupType=Group }

    { 1100485000;2;Field  ;
                CaptionML=ENU=Store Link to Source Item;
                SourceExpr=StoreLink }

    { 1100525007;2;Field  ;
                CaptionML=ENU=Copy Purchase Data;
                SourceExpr=CopyPurchase }

    { 1100525006;2;Field  ;
                CaptionML=ENU=Copy Sales Data;
                SourceExpr=CopySales }

  }
  CODE
  {
    VAR
      DepAuthRec@1100000997 : Record 11012466;
      CopiedItem@1100525007 : Record 27;
      CopyCu@1100485000 : Codeunit 11012017;
      StoreLink@1100485002 : Boolean;
      NewSeries@1100485003 : Code[20];
      NewItem@1100485005 : Code[20];
      NewDesc@1100485004 : Text[50];
      gvItem@1100485001 : Code[20];
      ItemRec@1100485006 : Record 27;
      Text001@1100485007 : TextConst 'ENU=%1 %2 already exists';
      DPA_IsHardFilter@1100000999 : Boolean;
      Text19043260@19053807 : TextConst 'ENU=Copy From';
      Text19058907@19032364 : TextConst 'ENU=Copy To';
      CopyPurchase@1100525009 : Boolean;
      CopySales@1100525008 : Boolean;
      CloseActionOK@1100528400 : Boolean;

    PROCEDURE FillDefaults@1(lvItem@11012000 : Code[20]);
    BEGIN
      gvItem := lvItem;
      DetermineNewItem(gvItem);
    END;

    PROCEDURE DetermineNewItem@1000000000(lvItem@1100485006 : Code[20]);
    VAR
      InventSetup@1100485004 : Record 313;
      SerRec@1100485005 : Record 308;
      SerLineRec@1100485003 : Record 309;
      SerRelRec@1100485002 : Record 310;
      NoSeriesMgt@1100485001 : Codeunit 396;
      ItemNos@1100485000 : Code[20];
    BEGIN
      ItemRec.GET(lvItem);
      NewDesc := ItemRec.Description;

      IF ItemRec."No. Series" <> '' THEN BEGIN
        ItemNos := ItemRec."No. Series";
      END ELSE BEGIN
        InventSetup.GET;
        ItemNos := InventSetup."Item Nos.";
      END;

      IF NOT SerRec.GET(ItemNos) THEN BEGIN
        ItemNos := '';
        NewItem := '';
      END;

      SerRelRec.SETRANGE(Code, ItemNos);
      IF SerRelRec.FINDSET THEN BEGIN
        REPEAT
          SerLineRec.SETRANGE("Series Code", SerRelRec."Series Code");
          IF SerLineRec.FINDSET(FALSE, FALSE) THEN BEGIN
            REPEAT
              IF (SerLineRec.Open = TRUE) AND
                 (lvItem >= SerLineRec."Starting No.") AND
                 ((lvItem < SerLineRec."Ending No.") OR (SerLineRec."Ending No." = '')) THEN
                ItemNos := SerLineRec."Series Code";
            UNTIL SerLineRec.NEXT = 0;
          END;
        UNTIL SerRelRec.NEXT = 0;
      END;

      NewSeries := ItemNos;
      IF ItemNos <> '' THEN
        NewItem := NoSeriesMgt.GetNextNo(ItemNos,0D,FALSE);
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      DetermineNewItem("No.");
    END;

    LOCAL PROCEDURE NewItemOnAfterValidate@19046559();
    BEGIN
      IF ItemRec.GET(NewItem) THEN
        MESSAGE(Text001, ItemRec.TABLECAPTION, NewItem);
    END;

    PROCEDURE GetCopiedItem@1100525000(VAR Item@1100525000 : Record 27);
    BEGIN
      //T002048
      //GETRECORD does not work when page has been closed with CurrPage.CLOSE.
      Item := CopiedItem;
    END;

    LOCAL PROCEDURE StdDialogConfirm@1100528400() : Boolean;
    BEGIN
      CurrPage.RUNMODAL;
      EXIT(CloseActionOK);
    END;

    LOCAL PROCEDURE StdDialogDoAction@1100528401();
    BEGIN
      CopyCu.CopyItem(Rec, NewSeries, NewItem, NewDesc, StoreLink, CopySales, CopyPurchase);
    END;

    PROCEDURE StdDialogRunModal@1100528404();
    BEGIN
      IF StdDialogConfirm THEN
        StdDialogDoAction;
    END;

    BEGIN
    END.
  }
}

