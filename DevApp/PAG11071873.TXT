OBJECT Page 11071873 Consent (Compressed)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Consent (Compressed);
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11012226;
    DataCaptionFields=User ID;
    PageType=List;
    OnOpenPage=BEGIN
                 SETRANGE("Ignore Temporary",FALSE);
                 UpdateEditableVisible;
               END;

    OnClosePage=BEGIN
                  CurrPage.CLOSE; //To prevent error "Server page is not open..."
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100485023;1 ;ActionGroup;
                      CaptionML=ENU=&Consent }
      { 1100485024;2 ;Action    ;
                      CaptionML=ENU=Document Card;
                      Promoted=Yes;
                      Image=EditLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowDocument;
                               END;
                                }
      { 1100525013;2 ;Action    ;
                      CaptionML=ENU=Scanned Document;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lvPurchSetupRec@1100525003 : Record 312;
                                 lvPurchHeader@1100525002 : Record 38;
                                 lvPurchInv@1100525001 : Record 122;
                                 lvExtDocNo@1100525000 : Text[30];
                               BEGIN

                                 lvPurchSetupRec.GET;
                                 CASE "Document Type" OF
                                 "Document Type" :: Invoice :
                                    BEGIN
                                      IF lvPurchHeader.GET(lvPurchHeader."Document Type" :: Invoice,"Document No.") THEN
                                        lvExtDocNo := lvPurchHeader."Ext. Document ID";
                                      lvPurchSetupRec.ShowScannedDocument(0,"Document No.","Vendor No.",lvExtDocNo);
                                    END;
                                 "Document Type" :: "Posted Invoice" :
                                    BEGIN
                                      IF lvPurchInv.GET("Document No.") THEN
                                        lvExtDocNo := lvPurchInv."Ext. Document ID";
                                      lvPurchSetupRec.ShowScannedDocument(1,"Document No.","Vendor No.",lvExtDocNo);
                                      END;
                                 ELSE
                                   MESSAGE(Text11128030);
                                 END;
                               END;
                                }
      { 1100525009;2 ;Separator  }
      { 1100485025;2 ;Action    ;
                      CaptionML=ENU=Consent Lines Document;
                      Promoted=Yes;
                      Image=ViewPage;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowConsentLinesOfDocument;
                               END;
                                }
      { 1100485040;2 ;Action    ;
                      CaptionML=ENU=Consent Rule;
                      Image=CapacityLedger;
                      OnAction=BEGIN
                                 ShowConsentRule;
                               END;
                                }
      { 1100528401;2 ;Action    ;
                      CaptionML=ENU=Consent (Detailed);
                      Promoted=Yes;
                      Image=ViewPage;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ConsentDetailedForCompressedLine(ConsentLinesOfAllConsentersAreShown);
                               END;
                                }
      { 1100528406;2 ;Action    ;
                      CaptionML=ENU=All Detailed Consent Lines;
                      Image=ViewPage;
                      OnAction=BEGIN
                                 ShowAllDetailedConsentLinesFromCompressedConsentPage(ConsentLinesOfAllConsentersAreShown);
                               END;
                                }
      { 1100525007;1 ;Action    ;
                      ShortCutKey=Ctrl+T;
                      CaptionML=ENU=Comment;
                      Image=Comment;
                      OnAction=BEGIN
                                 ShowComment;  //C011113
                               END;
                                }
      { 1100525005;1 ;Action    ;
                      ShortCutKey=Shift+Ctrl+S;
                      CaptionML=ENU=Scanned Document;
                      Promoted=Yes;
                      Image=Document;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowScannedDocument; //C011113
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100485030;1 ;Action    ;
                      CaptionML=ENU=&Process;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ProcessConsentLines;
                                 AddTempCompressedConsentLines(ConsentLinesOfAllConsentersAreShown);
                               END;
                                }
      { 1100525010;1 ;Action    ;
                      Name=ShowLinesOfAllConsenters;
                      CaptionML=ENU=&Show Lines of all Consenters;
                      Promoted=Yes;
                      Visible=ShowLinesOfAllConsntrsVisible;
                      Image=ViewPage;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowConsentLinesOfAllConsenters;
                               END;
                                }
      { 1100528403;1 ;Action    ;
                      CaptionML=ENU=Consent All Lines;
                      Promoted=Yes;
                      Image=Confirm;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FillInputConsentOfAllTempConsentLines;
                               END;
                                }
      { 1100528404;1 ;Action    ;
                      CaptionML=ENU=Clear All Lines;
                      Promoted=Yes;
                      Image=ReOpen;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ClearAllTempConsentLines;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100485000;1;Group  ;
                GroupType=Repeater }

    { 1100525011;2;Field  ;
                SourceExpr="User ID";
                Visible="UserIDEditable";
                Editable="UserIDEditable" }

    { 1100528400;2;Field  ;
                SourceExpr="Consenter Group Code" }

    { 1100485001;2;Field  ;
                SourceExpr="Ignore Temporary";
                OnValidate=BEGIN
                             ValidateIgnoreTemporary;
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100485003;2;Field  ;
                SourceExpr="Document Type";
                Editable=FALSE }

    { 1100485005;2;Field  ;
                SourceExpr="Document No.";
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               ShowDocument;
                             END;
                              }

    { 1100528402;2;Field  ;
                CaptionML=ENU=No. of Detail Lines;
                SourceExpr=GetNoOfDetailLines }

    { 1100485033;2;Field  ;
                SourceExpr="Vendor No." }

    { 1100485035;2;Field  ;
                CaptionML=ENU=Vendor Name;
                SourceExpr="Vendor Name" }

    { 1100525001;2;Field  ;
                SourceExpr=Amount }

    { 1100528405;2;Field  ;
                Name=Comment;
                CaptionML=ENU=Comment;
                SourceExpr=HasCommentLines;
                Editable=False }

    { 1100485007;2;Field  ;
                SourceExpr="Input Consent" }

    { 1100485009;2;Field  ;
                SourceExpr="Input Return to Previous" }

    { 1100525003;2;Field  ;
                SourceExpr="Input Deny" }

    { 1100525000;2;Field  ;
                SourceExpr="Temporary Line";
                Editable=FALSE }

    { 1100525004;2;Field  ;
                SourceExpr="Date Denied" }

    { 1100525002;2;Field  ;
                SourceExpr="Date Return to Previous" }

  }
  CODE
  {
    VAR
      PurchasesPayablesSetup@1100525001 : Record 312;
      ShowLinesOfAllConsntrsVisible@19073284 : Boolean INDATASET;
      UserIDEditable@19038101 : Boolean INDATASET;
      ConsentLinesOfAllConsentersAreShown@1100528401 : Boolean;
      Text11128030@1100525004 : TextConst 'ENU=Option is only available for Invoices or Posted Invoices';

    PROCEDURE UpdateEditableVisible@1100525005();
    VAR
      Consenter@1100525000 : Record 11012229;
    BEGIN
      PurchasesPayablesSetup.GET;
      IF NOT PurchasesPayablesSetup.ConsentIsUsed THEN
        EXIT;

      Consenter.GET(USERID);
      IF Consenter."Super Consenter" AND
         IsTemporary
      THEN BEGIN
        ShowLinesOfAllConsntrsVisible := TRUE;
        UserIDEditable := TRUE;
      END;
    END;

    PROCEDURE ShowConsentLinesOfAllConsenters@1100525003();
    VAR
      Consenter@1100525000 : Record 11012229;
    BEGIN
      Consenter.GET(USERID);
      IF NOT Consenter."Super Consenter" THEN
        EXIT;

      IF NOT IsTemporary THEN
        EXIT;

      IF ConsentLinesOfAllConsentersAreShown THEN
        EXIT;

      ConsentLinesOfAllConsentersAreShown := TRUE;

      AddTempCompressedConsentLines(ConsentLinesOfAllConsentersAreShown);
    END;

    BEGIN
    END.
  }
}

