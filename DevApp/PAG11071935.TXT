OBJECT Page 11071935 Sales Rental Order Subform
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    MultipleNewLines=Yes;
    SourceTable=Table37;
    DelayedInsert=Yes;
    SourceTableView=WHERE(Document Type=FILTER(Order));
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             "Unit of Measure CodeEditable" := TRUE;
             QuantityEditable := TRUE;
             "Rental Starting DateEditable" := TRUE;
             "Arrival DateEditable" := TRUE;
             TypeEditable := TRUE;
             "Plant No.Editable" := TRUE;
             "Plant TypeEditable" := TRUE;
             "Variant CodeEditable" := TRUE;
             "Trade ItemEditable" := TRUE;
             "Vendor (Trade Item)Editable" := TRUE;
             "Basic ItemEditable" := TRUE;
             ManufacturerEditable := TRUE;
             "Item No.Editable" := TRUE;
             ItemPanelVisible := TRUE;
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
               END;

    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                  Type := xRec.Type;
                  CLEAR(ShortcutDimCode);
                  InitRecord();
                  ShowShortcutDimCode(ShortcutDimCode);
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=ENU=&Line }
      { 1900580804;2 ;ActionGroup;
                      CaptionML=ENU=Item Availability by }
      { 1904522204;3 ;Action    ;
                      CaptionML=ENU=Period;
                      Image=ItemAvailabilitybyPeriod;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByPeriod);
                               END;
                                }
      { 1902056104;3 ;Action    ;
                      CaptionML=ENU=Variant;
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByVariant);
                               END;
                                }
      { 1900639404;3 ;Action    ;
                      CaptionML=ENU=Location;
                      Image=ItemAvailbyLoc;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByLocation);
                               END;
                                }
      { 1900186704;2 ;Action    ;
                      CaptionML=ENU=Reservation Entries;
                      Visible=false;
                      Image=ReservationLedger;
                      OnAction=BEGIN
                                 ShowReservationEntries(TRUE);
                               END;
                                }
      { 1905987604;2 ;Action    ;
                      CaptionML=ENU=Item &Tracking Lines;
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
      { 1901633104;2 ;Action    ;
                      CaptionML=ENU=Select Item Substitution;
                      Image=SelectItemSubstitution;
                      OnAction=BEGIN
                                 ShowItemSub;
                               END;
                                }
      { 1907335004;2 ;Action    ;
                      CaptionML=ENU=Text Block;
                      Image=Text;
                      OnAction=BEGIN
                                 //**4PS
                                 EditText;
                               END;
                                }
      { 1902085804;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1907184504;2 ;Action    ;
                      CaptionML=ENU=Item Charge &Assignment;
                      Image=ItemCosts;
                      OnAction=BEGIN
                                 ShowItemChargeAssgnt;
                               END;
                                }
      { 1905403704;2 ;Action    ;
                      CaptionML=ENU=Order &Promising;
                      Image=ViewOrder;
                      OnAction=BEGIN
                                 OrderPromisingLine;
                               END;
                                }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1901991404;2 ;Action    ;
                      CaptionML=ENU=Calculate &Invoice Discount;
                      Image=CalculateInvoiceDiscount;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                               END;
                                }
      { 1905623604;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Get Price;
                      Image=SuggestSalesPrice;
                      OnAction=BEGIN
                                 ShowPrices;
                               END;
                                }
      { 1901770504;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Get Li&ne Discount;
                      Image=SalesLineDisc;
                      OnAction=BEGIN
                                 ShowLineDisc;
                               END;
                                }
      { 1901741804;2 ;Action    ;
                      CaptionML=ENU=E&xplode BOM;
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeBOM;
                               END;
                                }
      { 1903099004;2 ;Action    ;
                      CaptionML=ENU=Insert &Ext. Texts;
                      Image=SNInfo;
                      OnAction=BEGIN
                                 InsertExtendedText(TRUE);
                               END;
                                }
      { 1905427504;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=&Reserve;
                      Visible=FALSE;
                      Image=Reserve;
                      OnAction=BEGIN
                                 ShowReservation;
                               END;
                                }
      { 1903502504;2 ;Action    ;
                      CaptionML=ENU=Order &Tracking;
                      Visible=FALSE;
                      Image=Trace;
                      OnAction=BEGIN
                                 ShowTracking;
                               END;
                                }
      { 1905926804;1 ;ActionGroup;
                      CaptionML=ENU=O&rder }
      { 1903645604;2 ;ActionGroup;
                      CaptionML=ENU=Dr&op Shipment;
                      Visible=FALSE }
      { 1907981104;3 ;Action    ;
                      CaptionML=ENU=Purchase &Order;
                      Visible=FALSE;
                      Image=Document;
                      OnAction=BEGIN
                                 OpenPurchOrderForm;
                               END;
                                }
      { 1903587004;2 ;ActionGroup;
                      CaptionML=ENU=Speci&al Order;
                      Visible=FALSE }
      { 1903192904;3 ;Action    ;
                      CaptionML=ENU=Purchase &Order;
                      Visible=FALSE;
                      Image=Document;
                      OnAction=BEGIN
                                 OpenSpecialPurchOrderForm;
                               END;
                                }
      { 125     ;1   ;Action    ;
                      CaptionML=ENU=Sales Line &Discounts;
                      Promoted=Yes;
                      Image=SalesLineDisc;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowLineDisc;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 123     ;1   ;Action    ;
                      CaptionML=ENU=&Sales Prices;
                      Promoted=Yes;
                      Image=SalesPrices;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowPrices;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 121     ;1   ;Action    ;
                      CaptionML=ENU=Substitutio&ns;
                      Promoted=Yes;
                      Image=ItemSubstitution;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowItemSub;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 127     ;1   ;Action    ;
                      CaptionML=ENU=Ite&m Card;
                      Promoted=Yes;
                      Image=EditLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SalesInfoPaneMgt.LookupItem(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 1210190016;2;Field  ;
                SourceExpr="Item No.";
                Editable="Item No.Editable";
                OnValidate=BEGIN
                             ItemNoOnAfterValidate;
                           END;
                            }

    { 1100485020;2;Field  ;
                CaptionML=ENU=Removal Item;
                SourceExpr=ItemIsRemovalOnly;
                Visible=FALSE;
                Editable=FALSE }

    { 1210190018;2;Field  ;
                SourceExpr=Manufacturer;
                Visible=FALSE;
                Editable=ManufacturerEditable }

    { 1210190020;2;Field  ;
                SourceExpr="Basic Item";
                Visible=FALSE;
                Editable="Basic ItemEditable" }

    { 1210190022;2;Field  ;
                SourceExpr="Vendor (Trade Item)";
                Visible=FALSE;
                Editable="Vendor (Trade Item)Editable" }

    { 1210190024;2;Field  ;
                SourceExpr="Trade Item";
                Visible=FALSE;
                Editable="Trade ItemEditable" }

    { 30  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE;
                Editable="Variant CodeEditable" }

    { 1100485002;2;Field  ;
                SourceExpr="Plant Type";
                Editable="Plant TypeEditable";
                OnLookup=BEGIN
                           //**4PS
                           SalesHeader.GET("Document Type","Document No.");
                           LookupPlantType(SalesHeader.Status = SalesHeader.Status::Open);
                         END;

                OnAssistEdit=VAR
                               lvPlantTypeRec@1100485001 : Record 11012551;
                               lvPlantPlanningFrm@1100485000 : Page 11012608;
                             BEGIN
                               //**4PS
                               SalesHeader.GET("Document Type","Document No.");
                               lvPlantPlanningFrm.SetCompany(PlantMgtCompRec.GetPlantCompanySalesRental(TRUE));
                               lvPlantPlanningFrm.SetDepotFilter(SalesHeader."Plant Depot Logistics");
                               lvPlantTypeRec.Code := "Plant Type";
                               lvPlantPlanningFrm.SETRECORD(lvPlantTypeRec);
                               lvPlantPlanningFrm.RUNMODAL;
                             END;
                              }

    { 1100485004;2;Field  ;
                SourceExpr="Plant No.";
                Visible=FALSE;
                Editable="Plant No.Editable";
                OnLookup=BEGIN
                           //**4PS
                           SalesHeader.GET("Document Type","Document No.");
                           LookupPlantNo(SalesHeader.Status = SalesHeader.Status::Open);
                         END;
                          }

    { 1100485029;2;Field  ;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 2   ;2   ;Field     ;
                SourceExpr=Type;
                Visible=FALSE;
                Editable=TypeEditable;
                OnValidate=BEGIN
                             TypeOnAfterValidate;
                           END;
                            }

    { 6   ;2   ;Field     ;
                SourceExpr=Description }

    { 1100485000;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 1210190000;2;Field  ;
                SourceExpr="Text Block";
                Visible=FALSE }

    { 1100485014;2;Field  ;
                SourceExpr="Arrival Date";
                Editable="Arrival DateEditable" }

    { 1100485008;2;Field  ;
                SourceExpr="Rental Starting Date";
                Editable="Rental Starting DateEditable" }

    { 1100485006;2;Field  ;
                SourceExpr="Removal Date" }

    { 1100485010;2;Field  ;
                SourceExpr="Rental Ending Date" }

    { 8   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=Quantity;
                Editable=QuantityEditable;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;
                            }

    { 44  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code";
                Editable="Unit of Measure CodeEditable";
                OnValidate=BEGIN
                             UnitofMeasureCodeOnAfterValida;
                           END;
                            }

    { 10  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Visible=FALSE }

    { 1100485018;2;Field  ;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE;
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Unit Price" }

    { 76  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Amount" }

    { 16  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Discount %" }

    { 52  ;2   ;Field     ;
                SourceExpr="Line Discount Amount";
                Visible=FALSE }

    { 54  ;2   ;Field     ;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE }

    { 78  ;2   ;Field     ;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE }

    { 1100485023;2;Field  ;
                SourceExpr="Plant Location Address Code" }

    { 1100485012;2;Field  ;
                Lookup=No;
                SourceExpr="Arrival Order";
                Editable=FALSE }

    { 1100485016;2;Field  ;
                CaptionML=ENU=Status Arrival Order;
                SourceExpr=GetArrivalOrderStatus() }

    { 1100485027;2;Field  ;
                SourceExpr="Quantity Shipped" }

    { 1100485025;2;Field  ;
                SourceExpr="Blocked for Invoicing" }

    { 118 ;1   ;Group     ;
                Name=ItemPanel;
                CaptionML=ENU=Item Information;
                Visible=ItemPanelVisible }

    { 120 ;2   ;Field     ;
                SourceExpr=STRSUBSTNO('(%1)',SalesInfoPaneMgt.CalcAvailabilityLogistics(Rec,GetCompanyLogistics));
                Editable=FALSE }

    { 122 ;2   ;Field     ;
                SourceExpr=STRSUBSTNO('(%1)',SalesInfoPaneMgt.CalcNoOfSubstitutions(Rec));
                Editable=FALSE }

    { 124 ;2   ;Field     ;
                SourceExpr=STRSUBSTNO('(%1)',SalesInfoPaneMgt.CalcNoOfSalesPrices(Rec));
                Editable=FALSE }

    { 126 ;2   ;Field     ;
                SourceExpr=STRSUBSTNO('(%1)',SalesInfoPaneMgt.CalcNoOfSalesLineDisc(Rec));
                Editable=FALSE }

  }
  CODE
  {
    VAR
      SalesHeader@1000 : Record 36;
      SalesPriceCalcMgt@1006 : Codeunit 7000;
      TransferExtendedText@1002 : Codeunit 378;
      ItemAvailFormsMgt@1100525001 : Codeunit 353;
      SalesInfoPaneMgt@1001 : Codeunit 7171;
      ShortcutDimCode@1003 : ARRAY [8] OF Code[20];
      Text11012001@1210190001 : TextConst 'ENU=Before editing text enter the line first';
      PlantMgtCompRec@1100525000 : Record 11020586;
      DPA_IsHardFilter@1100000999 : Boolean;
      ItemPanelVisible@19014573 : Boolean INDATASET;
      "Item No.Editable"@19055681 : Boolean INDATASET;
      ManufacturerEditable@19042322 : Boolean INDATASET;
      "Basic ItemEditable"@19063333 : Boolean INDATASET;
      "Vendor (Trade Item)Editable"@19034316 : Boolean INDATASET;
      "Trade ItemEditable"@19000132 : Boolean INDATASET;
      "Variant CodeEditable"@19003611 : Boolean INDATASET;
      "Plant TypeEditable"@19005558 : Boolean INDATASET;
      "Plant No.Editable"@19002985 : Boolean INDATASET;
      TypeEditable@19028748 : Boolean INDATASET;
      "Arrival DateEditable"@19034601 : Boolean INDATASET;
      "Rental Starting DateEditable"@19033675 : Boolean INDATASET;
      QuantityEditable@19013162 : Boolean INDATASET;
      "Unit of Measure CodeEditable"@19052748 : Boolean INDATASET;

    PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Disc. (Yes/No)",Rec);
    END;

    PROCEDURE CalcInvDisc@6();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Calc. Discount",Rec);
    END;

    PROCEDURE ExplodeBOM@3();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Explode BOM",Rec);
    END;

    PROCEDURE OpenPurchOrderForm@4();
    VAR
      PurchHeader@1000 : Record 38;
      PurchOrder@1001 : Page 50;
    BEGIN
      TESTFIELD("Purchase Order No.");
      PurchHeader.SETRANGE("No.","Purchase Order No.");
      PurchOrder.SETTABLEVIEW(PurchHeader);
      PurchOrder.EDITABLE := FALSE;
      PurchOrder.RUN;
    END;

    PROCEDURE OpenSpecialPurchOrderForm@14();
    VAR
      PurchHeader@1001 : Record 38;
      PurchOrder@1000 : Page 50;
    BEGIN
      TESTFIELD("Special Order Purchase No.");
      PurchHeader.SETRANGE("No.","Special Order Purchase No.");
      PurchOrder.SETTABLEVIEW(PurchHeader);
      PurchOrder.EDITABLE := FALSE;
      PurchOrder.RUN;
    END;

    PROCEDURE InsertExtendedText@5(Unconditionally@1000 : Boolean);
    BEGIN
      IF TransferExtendedText.SalesCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        TransferExtendedText.InsertSalesExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        UpdateForm(TRUE);
    END;

    PROCEDURE ShowReservation@2();
    BEGIN
      FIND;
      Rec.ShowReservation;
    END;

    PROCEDURE ShowTracking@13();
    VAR
      TrackingForm@1000 : Page 99000822;
    BEGIN
      TrackingForm.SetSalesLine(Rec);
      TrackingForm.RUNMODAL;
    END;

    PROCEDURE UpdateForm@12(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    PROCEDURE ShowPrices@15();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLinePrice(SalesHeader,Rec);
    END;

    PROCEDURE EditText@1210190001();
    VAR
      TextFrm@11012001 : Page 11012120;
    BEGIN
      //**4PS
      IF "Line No." = 0 THEN
        ERROR(Text11012001);

      TextFrm.SetSelection(DATABASE::"Sales Line","Document No.",
        '','','','','',"Line No.","Document Type");

      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    PROCEDURE ShowLineDisc@16();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLineLineDisc(SalesHeader,Rec);
    END;

    PROCEDURE OrderPromisingLine@17();
    VAR
      OrderPromisingLine@1000 : TEMPORARY Record 99000880;
    BEGIN
      OrderPromisingLine.SETRANGE("Source Type","Document Type");
      OrderPromisingLine.SETRANGE("Source ID","Document No.");
      OrderPromisingLine.SETRANGE("Source Line No.","Line No.");
      PAGE.RUNMODAL(PAGE::"Order Promising Lines",OrderPromisingLine);
    END;

    PROCEDURE GetArrivalOrderStatus@1100485000() RetStatusTxt : Text[30];
    VAR
      lvPlantOrderRec@1100485000 : Record 11012556;
      lvText000@1100485001 : TextConst 'ENU=Deleted';
    BEGIN
      RetStatusTxt := '';
      PlantMgtCompRec."Plant Company" := PlantMgtCompRec.GetPlantCompanySalesRental(FALSE);
      IF (PlantMgtCompRec."Plant Company" = '') OR
         ("Arrival Order" = '') OR ("Arrival Order Type" <> "Arrival Order Type"::"Plant Order")
      THEN
        EXIT;

      lvPlantOrderRec.CHANGECOMPANY(PlantMgtCompRec."Plant Company");
      IF lvPlantOrderRec.GET("Arrival Order") THEN
        RetStatusTxt := FORMAT(lvPlantOrderRec.Status)
      ELSE
        RetStatusTxt := lvText000;
    END;

    PROCEDURE UpdateFieldsEditable@1100485001();
    VAR
      lPlantOrderProcessed@1100485001 : Boolean;
    BEGIN
      lPlantOrderProcessed := PlantOrderIsProcessed(FALSE);

      "Item No.Editable" := (NOT lPlantOrderProcessed);
      ManufacturerEditable := (NOT lPlantOrderProcessed);
      "Basic ItemEditable" := (NOT lPlantOrderProcessed);
      "Vendor (Trade Item)Editable" := (NOT lPlantOrderProcessed);
      "Trade ItemEditable" := (NOT lPlantOrderProcessed);
      "Variant CodeEditable" := (NOT lPlantOrderProcessed);
      "Plant TypeEditable" := (NOT lPlantOrderProcessed);
      "Plant No.Editable" := (NOT lPlantOrderProcessed);
      TypeEditable := (NOT lPlantOrderProcessed);
      "Arrival DateEditable" := (NOT lPlantOrderProcessed);
      "Rental Starting DateEditable" := (NOT lPlantOrderProcessed);
      QuantityEditable := (NOT lPlantOrderProcessed);
      "Unit of Measure CodeEditable" := (NOT lPlantOrderProcessed);
    END;

    LOCAL PROCEDURE ItemNoOnAfterValidate@19061248();
    BEGIN
      ItemPanelVisible := ("Item No." <> '');
    END;

    LOCAL PROCEDURE TypeOnAfterValidate@19069045();
    BEGIN
      //CurrPage.ItemPanel.VISIBLE := Type = Type::Item; //**4PS.o
      ItemPanelVisible := ("Item No." <> '');  //**4PS.n
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    VAR
      UpdateIsDone@1001 : Boolean;
    BEGIN
      IF Type = Type::Item THEN
        CASE Reserve OF
          Reserve::Always:
            BEGIN
              CurrPage.SAVERECORD;
              AutoReserve;
              CurrPage.UPDATE(FALSE);
              UpdateIsDone := TRUE;
            END;
          Reserve::Optional:
            IF (Quantity < xRec.Quantity) AND (xRec.Quantity > 0) THEN BEGIN
              CurrPage.SAVERECORD;
              CurrPage.UPDATE(FALSE);
              UpdateIsDone := TRUE;
            END;
        END;

      IF (Type = Type::Item) AND
         (Quantity <> xRec.Quantity) AND
         NOT UpdateIsDone
      THEN
        CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE UnitofMeasureCodeOnAfterValida@19057939();
    BEGIN
      IF Reserve = Reserve::Always THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      ItemPanelVisible := ("Item No." <> '');
      UpdateFieldsEditable;
    END;

    LOCAL PROCEDURE ItemNoOnBeforeInput@19042763();
    BEGIN
      //**4PS.n
      IF "Item No.Editable" THEN  //* 13098
        UpdateFieldsEditable;

      IF "Relate to" = "Relate to"::Transport THEN
        "Item No.Editable" := (FALSE);
    END;

    LOCAL PROCEDURE ManufacturerOnBeforeInput@19026272();
    BEGIN
      //**4PS.n
      IF ManufacturerEditable THEN  //* 13098
        UpdateFieldsEditable;
    END;

    LOCAL PROCEDURE BasicItemOnBeforeInput@19013249();
    BEGIN
      //**4PS.n
      IF "Basic ItemEditable" THEN  //* 13098
        UpdateFieldsEditable;
    END;

    LOCAL PROCEDURE VendorTradeItemOnBeforeInput@19009574();
    BEGIN
      //**4PS.n
      IF "Vendor (Trade Item)Editable" THEN  //* 13098
        UpdateFieldsEditable;
    END;

    LOCAL PROCEDURE TradeItemOnBeforeInput@19017892();
    BEGIN
      //**4PS.n
      IF "Trade ItemEditable" THEN  //* 13098
        UpdateFieldsEditable;
    END;

    LOCAL PROCEDURE VariantCodeOnBeforeInput@19026151();
    BEGIN
      //**4PS.n
      IF "Variant CodeEditable" THEN  //* 13098
        UpdateFieldsEditable;
    END;

    LOCAL PROCEDURE PlantTypeOnBeforeInput@19048251();
    BEGIN
      //**4PS.n
      IF "Plant TypeEditable" THEN  //* 13098
        UpdateFieldsEditable;

      IF "Relate to" = "Relate to"::Transport THEN
        "Plant TypeEditable" := (FALSE);
    END;

    LOCAL PROCEDURE PlantNoOnBeforeInput@19052532();
    BEGIN
      //**4PS.n
      IF "Plant No.Editable" THEN  //* 13098
        UpdateFieldsEditable;
    END;

    LOCAL PROCEDURE TypeOnBeforeInput@19031429();
    BEGIN
      //**4PS.n
      IF TypeEditable THEN  //* 13098
        UpdateFieldsEditable;

      TypeEditable := (TypeEditable AND
        ("Job No." = '') AND ("Service Order No." = '') AND ("Plant Type" = '') AND ("Item No." = ''));  //**4PS.n
    END;

    LOCAL PROCEDURE ArrivalDateOnBeforeInput@19058598();
    BEGIN
      //**4PS.n
      IF "Arrival DateEditable" THEN  //* 13098
        UpdateFieldsEditable;
    END;

    LOCAL PROCEDURE RentalStartingDateOnBeforeInpu@19039858();
    BEGIN
      //**4PS.n
      IF "Rental Starting DateEditable" THEN  //* 13098
        UpdateFieldsEditable;
    END;

    LOCAL PROCEDURE QuantityOnBeforeInput@19028302();
    BEGIN
      //**4PS.n
      IF QuantityEditable THEN  //* 13098
        UpdateFieldsEditable;
    END;

    LOCAL PROCEDURE UnitofMeasureCodeOnBeforeInput@19075518();
    BEGIN
      //**4PS.n
      IF "Unit of Measure CodeEditable" THEN  //* 13098
        UpdateFieldsEditable;
    END;

    BEGIN
    END.
  }
}

