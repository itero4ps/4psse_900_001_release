OBJECT Page 11072003 Job Card
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,4PS9.00 (88);
  }
  PROPERTIES
  {
    CaptionML=ENU=Project Card;
    SourceTable=Table11072003;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=ENU=New,Process,Report,Commission,Budget,Control,Purchase,Documents;
    OnInit=BEGIN
             CurrencyCodeEditable := TRUE;
             InvoiceCurrencyCodeEditable := TRUE;
             //**4PS.sn
             RentalUnitInvoiceByEnabled := TRUE;
             JobInventoryByStockReleaseEnab := TRUE;
             JobInventoryLocationShelfEnabl := TRUE;
             VATIndicatorPurchaseEditable := TRUE;
             "Joint CompanyEditable" := TRUE;
             DisableExportLosaCOBRAVisible := TRUE;
             MapPointVisible := TRUE;
             "Main ProjectEditable" := TRUE;
             "Affiliation No.Editable" := TRUE;
             CalculateBAmountsbasedonEditab := TRUE;
             "% to B AccountEditable" := TRUE;
             "% LaborEditable" := TRUE;
             "Revision RuleEditable" := TRUE;
             "Progress RegistryEditable" := TRUE;
             ProgressRegistryPTEEditable := TRUE;
             "Technical Finished DateEditabl"  := TRUE;
             FillShowMandatoryVariables;
             //**4PS.en
           END;

    OnOpenPage=BEGIN
                 //CurrencyCheck; //**4PS.o
                   MapPointVisible := (FALSE);
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 //**4PS.sn
                 ProjSetUp.GET;
                 "Joint CompanyEditable" := (ProjSetUp."Company Type" = ProjSetUp."Company Type"::"Development Company");
                 DisableExportLosaCOBRAVisible :=
                   (ProjSetUp."Exchange Salary Application" AND (ProjSetUp."Salary Application" = ProjSetUp."Salary Application"::"LOSA-Cobra"));
                 RentalUnitInvoiceByEnabled := ProjSetUp."Rental Units active";
                 IF PurchSetup.GET THEN BEGIN
                   VATIndicatorPurchaseEditable := (PurchSetup."VAT Indicator (Purchase)" =
                   PurchSetup."VAT Indicator (Purchase)"::"No VAT");
                   //CurrPage."VAT Indicator (Purchase)".VISIBLE(GLSetup."VAT Indicator (Purchase)" = GLSetup."VAT Indicator (Purchase)"::"No VAT")
                 END;

                 RentalUnitInvoiceByEnabled := ProjSetUp."Rental Units active";

                 InventSetupRec.GET;
                 IF InventSetupRec."Level Job Inventory Loc./Shelf" <> InventSetupRec."Level Job Inventory Loc./Shelf"::Project THEN
                   JobInventoryLocationShelfEnabl := FALSE;
                 IF InventSetupRec."Level Job Inventory Stock Rel." <> InventSetupRec."Level Job Inventory Stock Rel."::Project THEN
                   JobInventoryByStockReleaseEnab := FALSE;
                 //**4PS.en
               END;

    OnAfterGetRecord=BEGIN
                       //CurrencyCheck; //**4PS.o

                       //**4PS.sn
                       CALCFIELDS(Prospect);
                       "Progress RegistryEditable" := (NOT "Progress on base of Tender");
                       ProgressRegistryPTEEditable := ("Progress on base of Tender");

                       OnAfterGetCurrRecord;
                       //**4PS.en
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                  OnAfterGetCurrRecord; //**4PS.n
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    OnQueryClosePage=BEGIN
                       //>>SC003600
                       IF "Single/Main/Sub Project" = "Single/Main/Sub Project"::"Sub Project" THEN
                         IF "Main Project" = '' THEN
                           ERROR(Text11128000);
                       //<<SC003600
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100525035;1 ;ActionGroup;
                      CaptionML=ENU=Invoicing;
                      Image=Transactions }
      { 1100525097;2 ;ActionGroup;
                      CaptionML=ENU=Invoicing;
                      Image=Invoice }
      { 1100525095;3 ;ActionGroup;
                      CaptionML=ENU=Principals;
                      Image=TeamSales }
      { 1000000012;4 ;Action    ;
                      ShortCutKey=Shift+Ctrl+P;
                      CaptionML=ENU=Principals;
                      RunObject=Page 11012016;
                      RunPageView=SORTING(Project No.,Principal);
                      RunPageLink=Project No.=FIELD(No.);
                      Promoted=Yes;
                      Image=TeamSales;
                      PromotedCategory=Category4 }
      { 1000000006;4 ;Action    ;
                      ShortCutKey=Ctrl+M;
                      CaptionML=ENU=E&xtensions;
                      RunObject=Page 11012014;
                      RunPageLink=Project No.=FIELD(No.);
                      Promoted=Yes;
                      Image=TransferFunds;
                      PromotedCategory=Category4 }
      { 1210190008;4 ;Action    ;
                      AccessByPermission=Page 11012941=X;
                      CaptionML=ENU=&Rental Units;
                      Image=BlanketOrder;
                      OnAction=BEGIN
                                 //**4PS
                                 ProjSetUp.TESTFIELD("Rental Units active");
                                 RentalUnitRec.SETRANGE("Project No.","No.");
                                 PAGE.RUNMODAL(PAGE::"Rental Unit List",RentalUnitRec);
                               END;
                                }
      { 1100525041;3 ;ActionGroup;
                      CaptionML=ENU=Invoicing;
                      Image=Invoice }
      { 1101200084;4 ;Action    ;
                      CaptionML=ENU=&Installments;
                      RunObject=Page 11012025;
                      RunPageLink=Project No.=FIELD(No.);
                      Promoted=Yes;
                      Image=AmountByPeriod;
                      PromotedCategory=Category4 }
      { 1100409002;4 ;Action    ;
                      CaptionML=ENU=Settlement Sheet;
                      Image=Calculate;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 SettlementSheet@1100409000 : Record 11012021;
                                 Counter@1100409001 : Integer;
                               BEGIN
                                 //**4PS
                                 TESTFIELD("Bill-to Customer No.");

                                 SettlementSheet.RESET;
                                 SettlementSheet.SETRANGE("Project No.", "No.");
                                 Counter := SettlementSheet.COUNT;
                                 IF Counter > 0 THEN BEGIN
                                   PAGE.RUNMODAL(PAGE::"Settlement Sheet List", SettlementSheet);
                                 END ELSE BEGIN
                                   IF Counter = 0 THEN BEGIN
                                     IF CONFIRM(Text11012007,TRUE) THEN BEGIN
                                       InsertSettlementSheet("Bill-to Customer No.");
                                       COMMIT;
                                       IF SettlementSheet.FINDFIRST THEN
                                         PAGE.RUNMODAL(PAGE::"Settlement Sheet List", SettlementSheet);
                                     END;
                                   END;
                                 END;
                               END;
                                }
      { 1100285500;4 ;Action    ;
                      Name=<Action1100285000>;
                      CaptionML=ENU=ROT Reduction;
                      Promoted=Yes;
                      Image=AmountByPeriod;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ROTInformation@1100285000 : Record 11128101;
                                 ROTInformationPage@1100285001 : Page 11128101;
                               BEGIN
                                 // Check if there is any ROT related to the current record
                                 ROTInformation.RESET();
                                 ROTInformation.SETRANGE(Type, ROTInformation.Type::Project);
                                 ROTInformation.SETRANGE("Document No.", "No.");

                                 // Set the page view and open ROT Information page.
                                 ROTInformationPage.SETTABLEVIEW(ROTInformation);
                                 ROTInformationPage.RUN;
                               END;
                                }
      { 1000000007;4 ;Action    ;
                      CaptionML=ENU=&Cost Plus Entries;
                      RunObject=Page 11012043;
                      RunPageLink=Project No.=FIELD(No.);
                      Promoted=No;
                      Image=ApplyEntries }
      { 1100485142;4 ;Action    ;
                      CaptionML=ENU=Production Motivation;
                      Image=Production;
                      OnAction=VAR
                                 ProdMot@1210190000 : Record 11020425;
                               BEGIN
                                 ProdMot.RunUnitPriceProdMotList("No.", '', 0);  //* Level 0=Project
                               END;
                                }
      { 1100485140;4 ;Action    ;
                      CaptionML=ENU=Project &Unit Prices;
                      RunObject=Page 11072519;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=CostCenter }
      { 1000000008;4 ;Action    ;
                      CaptionML=ENU=In&voices;
                      Promoted=Yes;
                      Image=Invoice;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 //**4PS
                                 ShowPostedInvoices;
                               END;
                                }
      { 1000000004;4 ;Action    ;
                      CaptionML=ENU=Credit &Memos;
                      Promoted=No;
                      Image=CreditMemo;
                      OnAction=BEGIN
                                 //**4PS
                                 ShowPostedCreditMemos;
                               END;
                                }
      { 1100525144;3 ;ActionGroup;
                      CaptionML=ENU=Sales Rates;
                      Image=SalesPrices }
      { 1100485148;4 ;Action    ;
                      CaptionML=ENU=Project - &Employee Sales Prices;
                      RunObject=Page 11072469;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=SalesPrices }
      { 1100485149;4 ;Action    ;
                      CaptionML=ENU=Project - Employee - &Cost Object Sales Prices;
                      RunObject=Page 11072497;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=SalesPrices }
      { 1100485150;4 ;Action    ;
                      CaptionML=ENU=Project - Employee - Cost Object - &Wage Component Sales Prices;
                      RunObject=Page 11072498;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=SalesPrices }
      { 1100485151;4 ;Action    ;
                      CaptionML=ENU=Project - Cost &Object Sales Prices;
                      RunObject=Page 11072467;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=SalesPrices }
      { 1100485152;4 ;Action    ;
                      CaptionML=ENU=Project - Cost Object - Wage Co&mponent Sales Prices;
                      RunObject=Page 11072468;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=SalesPrices }
      { 1100525155;2 ;ActionGroup;
                      CaptionML=ENU=Budget;
                      Image=LedgerBudget }
      { 1100525057;3 ;ActionGroup;
                      CaptionML=ENU=Budget;
                      Image=LedgerBudget }
      { 61      ;4   ;Action    ;
                      CaptionML=ENU=Elements;
                      RunObject=Page 11012028;
                      RunPageView=SORTING(Project No.,Element);
                      RunPageLink=Project No.=FIELD(No.);
                      Promoted=Yes;
                      Image=BOMVersions;
                      PromotedCategory=Category5 }
      { 1210190014;4 ;Action    ;
                      CaptionML=ENU=Sub Projects;
                      Promoted=Yes;
                      Image=Splitlines;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 JobRec@1210190000 : Record 11072003;
                               BEGIN
                                 //**4PS
                                 JobRec.SETRANGE("Single/Main/Sub Project", "Single/Main/Sub Project"::"Sub Project");
                                 JobRec.SETRANGE("Main Project", "No.");
                                 IF JobRec.FINDFIRST THEN
                                   PAGE.RUNMODAL(PAGE::"Job List", JobRec)
                                 ELSE
                                   MESSAGE(Text11012000);
                               END;
                                }
      { 1210190015;4 ;Action    ;
                      CaptionML=ENU=Project Cost &Objects;
                      RunObject=Page 11012128;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=Dimensions }
      { 1101200079;4 ;Action    ;
                      ShortCutKey=Ctrl+B;
                      CaptionML=ENU=Budget;
                      RunObject=Page 11012003;
                      RunPageLink=No.=FIELD(No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=LedgerBudget;
                      PromotedCategory=Category5 }
      { 1101200080;4 ;Action    ;
                      CaptionML=ENU=Budget &Adjustments;
                      Promoted=Yes;
                      Image=Balance;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 BudgetAdjustment@1100525000 : Record 11012003;
                               BEGIN
                                 BudgetAdjustment.SETRANGE("Project No.", "No.");
                                 IF BudgetAdjustment.FINDLAST THEN;
                                 PAGE.RUNMODAL(PAGE::"Budget Adjustment List", BudgetAdjustment);
                               END;
                                }
      { 1100525055;4 ;Action    ;
                      ShortCutKey=Shift+Ctrl+T;
                      CaptionML=ENU=Total Budget;
                      RunObject=Page 11012005;
                      RunPageView=SORTING(Project No.,Element,Line No.);
                      RunPageLink=Project No.=FIELD(No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=LedgerBudget;
                      PromotedCategory=Category5 }
      { 1100525060;3 ;ActionGroup;
                      CaptionML=ENU=Rates Cost Price;
                      Image=AdjustItemCost }
      { 1100485011;4 ;Action    ;
                      CaptionML=ENU=Project &Budget Rates;
                      RunObject=Page 11020264;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=AdjustItemCost }
      { 1100485123;4 ;Action    ;
                      CaptionML=ENU=Project - &Employee Cost Prices;
                      RunObject=Page 11020300;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=AdjustItemCost }
      { 1100485026;4 ;Action    ;
                      CaptionML=ENU=Project - Employee - &Wage Component Cost Prices;
                      RunObject=Page 11072435;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=AdjustItemCost }
      { 1100485126;4 ;Action    ;
                      CaptionML=ENU=Project - &Cost Object Cost Prices;
                      RunObject=Page 11072434;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=AdjustItemCost }
      { 1100485124;4 ;Action    ;
                      CaptionML=ENU=Project - &Trade Association Cost Prices;
                      RunObject=Page 11072432;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=AdjustItemCost }
      { 1100485125;4 ;Action    ;
                      CaptionML=ENU=Project - Trade Association - Wage Co&mponent Cost Prices;
                      RunObject=Page 11072433;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=AdjustItemCost }
      { 1100525062;1 ;ActionGroup;
                      CaptionML=ENU=Project Control;
                      Image=PayrollStatistics }
      { 58      ;2   ;ActionGroup;
                      CaptionML=ENU=Project Control;
                      Image=PayrollStatistics }
      { 1100525047;3 ;Action    ;
                      CaptionML=ENU=Project Control;
                      Promoted=Yes;
                      Image=PayrollStatistics;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 Project@1100525001 : Record 11072003;
                               BEGIN
                                 OpenProjectControl;
                               END;
                                }
      { 1100285501;3 ;Action    ;
                      CaptionML=ENU=Project Control Overview;
                      Image=PayrollStatistics;
                      OnAction=VAR
                                 Project@1100285500 : Record 11072003;
                               BEGIN
                                 OpenProjectControlOverview;
                               END;
                                }
      { 1100285502;3 ;Action    ;
                      CaptionML=ENU=Project Control Summarized;
                      Image=PayrollStatistics;
                      OnAction=VAR
                                 Project@1100285500 : Record 11072003;
                               BEGIN
                                 OpenProjectControlSummarized;
                               END;
                                }
      { 60      ;3   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Ledger E&ntries;
                      RunObject=Page 11072005;
                      RunPageView=SORTING(Job No.,Posting Date);
                      RunPageLink=Job No.=FIELD(No.);
                      Promoted=Yes;
                      PromotedIsBig=No;
                      Image=LedgerEntries;
                      PromotedCategory=Category6 }
      { 1100525077;3 ;Action    ;
                      CaptionML=ENU=Snapshot;
                      RunObject=Page 11124895;
                      RunPageView=SORTING(Project No.,Snapshot Date);
                      RunPageLink=Project No.=FIELD(No.);
                      Image=SuggestCapacity }
      { 1210190036;3 ;Action    ;
                      CaptionML=ENU=&Retention Ledger Entries;
                      RunObject=Page 11124953;
                      RunPageView=SORTING(Job No.);
                      RunPageLink=Job No.=FIELD(No.);
                      Image=LedgerEntries }
      { 1210190022;3 ;Action    ;
                      CaptionML=ENU=Origin Internal Charge (Project);
                      Image=JobJournal;
                      OnAction=BEGIN
                                 InternalChargeMgt.ShowSourceTypeInternalCharge(1, "No.");
                               END;
                                }
      { 1210190025;3 ;Action    ;
                      CaptionML=ENU=Origin Internal Charge (Service Order);
                      Image=ServiceLedger;
                      OnAction=BEGIN
                                 InternalChargeMgt.ShowSourceTypeInternalCharge(3, "No.");
                               END;
                                }
      { 1100528801;3 ;Action    ;
                      CaptionML=ENU=Risks & Opportunities;
                      RunObject=Page 11126567;
                      RunPageLink=Source=CONST(Project),
                                  Source Code=FIELD(No.);
                      Image=OpportunitiesList }
      { 1100525063;2 ;ActionGroup;
                      CaptionML=ENU=Prognosis;
                      Image=CalculateRemainingUsage }
      { 1100525048;3 ;Action    ;
                      CaptionML=ENU=P&rogress;
                      RunObject=Page 11012079;
                      RunPageView=SORTING(Project No.);
                      RunPageLink=Project No.=FIELD(No.);
                      Promoted=Yes;
                      Image=EditLines;
                      PromotedCategory=Category6 }
      { 1100525049;3 ;Action    ;
                      CaptionML=ENU=Pr&ognosis;
                      Promoted=Yes;
                      Image=CalculateRemainingUsage;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 LaunchPrognosisList;
                               END;
                                }
      { 1100525065;3 ;Action    ;
                      CaptionML=ENU=Liquidity Prognosis;
                      Image=PaymentForecast;
                      OnAction=VAR
                                 LiqProgProjHead@1100525000 : Record 11020603;
                               BEGIN
                                 TESTFIELD("Liquidity Prognosis", "Liquidity Prognosis"::"Specific Division");

                                 LiqProgProjHead.SETRANGE("Project No.", "No.");
                                 PAGE.RUNMODAL(PAGE::"Liquidity Prognosis Proj Head", LiqProgProjHead);
                               END;
                                }
      { 1100528701;3 ;Action    ;
                      CaptionML=ENU=&Forecast;
                      RunObject=Page 11124951;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=Forecast }
      { 1100485134;1 ;ActionGroup;
                      CaptionML=ENU=Engineering & Purchase;
                      Image=Purchasing }
      { 1100525098;2 ;ActionGroup;
                      CaptionML=ENU=Purchase;
                      Image=Document }
      { 11012000;3   ;Action    ;
                      CaptionML=ENU=Purchase Orders;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Document;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 ShowPurchaseOrdersForProject;
                               END;
                                }
      { 1100485032;3 ;Action    ;
                      CaptionML=ENU=Advice Orders;
                      RunObject=Page 11012102;
                      RunPageLink=Project No.=FIELD(No.),
                                  Record Type=CONST(Project);
                      Promoted=Yes;
                      Image=OrderReminder;
                      PromotedCategory=Category7 }
      { 1101200082;3 ;Action    ;
                      CaptionML=ENU=Purchase A&ctions;
                      RunObject=Page 11012034;
                      RunPageLink=Project No.=FIELD(No.);
                      Promoted=Yes;
                      Image=OrderTracking;
                      PromotedCategory=Category7 }
      { 1100485092;3 ;Action    ;
                      CaptionML=ENU=Purchase Quotes;
                      Image=Purchase;
                      OnAction=BEGIN
                                 ShowPurchaseQuotesForProject;
                               END;
                                }
      { 1100485081;3 ;Action    ;
                      CaptionML=ENU=Matrix Purchase Actions &Document Relations;
                      Image=Document;
                      OnAction=VAR
                                 lvMatrixDocRelFrm@1100525000 : Page 11071829;
                               BEGIN
                                 TESTFIELD("No.");
                                 lvMatrixDocRelFrm.SetProjectNo("No.");
                                 lvMatrixDocRelFrm.RUNMODAL;
                               END;
                                }
      { 1100525015;3 ;Action    ;
                      CaptionML=ENU=Purchase Invoices;
                      Image=Invoice;
                      OnAction=BEGIN
                                 TESTFIELD("No.");
                                 ShowPostedPurchaseInvoices("No.");
                               END;
                                }
      { 1100525017;3 ;Action    ;
                      CaptionML=ENU=Purchase Credit Memos;
                      Image=CreditMemo;
                      OnAction=BEGIN
                                 TESTFIELD("No.");
                                 ShowPostedPurchaseCredMemos("No.");
                               END;
                                }
      { 1100409003;3 ;Action    ;
                      CaptionML=ENU=Purchase Text;
                      RunObject=Page 11012126;
                      RunPageLink=Line Type=CONST(Project),
                                  No.=FIELD(No.);
                      Image=Text }
      { 1100525067;2 ;ActionGroup;
                      CaptionML=ENU=Engineering;
                      Image=MachineCenterCalendar }
      { 1100525080;3 ;Action    ;
                      AccessByPermission=Page 11124841=X;
                      CaptionML=ENU=Material Monitor;
                      Image=MachineCenterCalendar;
                      OnAction=BEGIN
                                 StartMatMonFromCard;
                               END;
                                }
      { 1100485111;3 ;Action    ;
                      CaptionML=ENU=Project &Inventory;
                      RunObject=Page 11012673;
                      RunPageView=SORTING(Project No.);
                      RunPageLink=Project No.=FIELD(No.);
                      Image=LedgerBook }
      { 1100526102;3 ;Action    ;
                      CaptionML=ENU=&Project Material Req. Lines;
                      RunObject=Page 11072352;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=LedgerEntries }
      { 1100525020;3 ;Action    ;
                      CaptionML=ENU=&Planning Activities;
                      RunObject=Page 11072310;
                      RunPageView=SORTING(No.);
                      RunPageLink=No.=FIELD(No.);
                      Promoted=No;
                      Image=JobTimeSheet;
                      PromotedCategory=Category7 }
      { 1210190005;3 ;Action    ;
                      CaptionML=ENU=Project Planning;
                      RunObject=Page 11012920;
                      Image=GanttChart }
      { 1100485090;3 ;Action    ;
                      CaptionML=ENU=To-dos;
                      Image=Task;
                      OnAction=BEGIN
                                 //**4PS
                                 ShowTodos;
                               END;
                                }
      { 1100525099;1 ;ActionGroup;
                      CaptionML=ENU=Additional Activity }
      { 1210190013;2 ;ActionGroup;
                      CaptionML=ENU=Buyer Management;
                      Enabled=BuyerManagementEnabled;
                      Image=AddToHome }
      { 1000000002;3 ;Action    ;
                      CaptionML=ENU=Plots;
                      RunObject=Page 11012506;
                      RunPageLink=Project No.=FIELD(No.);
                      Promoted=No;
                      Image=AddToHome }
      { 1100485039;3 ;Action    ;
                      CaptionML=ENU=Option &Quotes;
                      RunObject=Page 11012546;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=Quote }
      { 1100525038;3 ;Action    ;
                      AccessByPermission=Page 11012513=X;
                      CaptionML=ENU=Option Budget;
                      Image=CustomerList;
                      OnAction=BEGIN
                                 //**4PS
                                 TESTFIELD("Housebuilding Project", TRUE);
                                 OptionBudget();
                               END;
                                }
      { 1000000001;3 ;Action    ;
                      CaptionML=ENU=House Types;
                      RunObject=Page 11012501;
                      RunPageLink=Project No.=FIELD(No.);
                      Promoted=No;
                      Image=CustomerList }
      { 1100485001;3 ;Action    ;
                      CaptionML=ENU=Delivery;
                      RunObject=Page 11012528;
                      RunPageView=WHERE(Plot No.=FILTER(''));
                      RunPageLink=Project No.=FIELD(No.);
                      Image=CustomerList }
      { 1210190080;3 ;Action    ;
                      CaptionML=ENU=Main Groups;
                      RunObject=Page 11012543;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=CustomerList }
      { 1210190016;3 ;Action    ;
                      CaptionML=ENU=Groups;
                      RunObject=Page 11012518;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=CustomerList }
      { 1210190081;3 ;Action    ;
                      CaptionML=ENU=Sub Groups;
                      RunObject=Page 11012542;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=CustomerList }
      { 1100485027;2 ;ActionGroup;
                      CaptionML=ENU=&Civil Engineering;
                      Image=ServiceMan }
      { 1100485063;3 ;Action    ;
                      CaptionML=ENU=Project &Tender Paragraphs;
                      RunObject=Page 11020346;
                      RunPageLink=No.=FIELD(No.);
                      Image=RoutingVersions }
      { 1100485028;3 ;Action    ;
                      CaptionML=ENU=Tender Paragraphs;
                      RunObject=Page 11020553;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=Payment }
      { 1100485029;3 ;Action    ;
                      CaptionML=ENU=Tender Paragraph &Parts;
                      RunObject=Page 11020554;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=Payment }
      { 1100525052;3 ;Action    ;
                      CaptionML=ENU=Project Inspections;
                      RunObject=Page 11125538;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=CheckRulesSyntax }
      { 1100525072;2 ;ActionGroup;
                      CaptionML=ENU=Site Manager;
                      Image=Employee }
      { 1100525053;3 ;Action    ;
                      CaptionML=ENU=Project Data Site Manager Form;
                      RunObject=Page 11125541;
                      RunPageLink=No.=FIELD(No.);
                      Image=Employee }
      { 1100525050;3 ;Action    ;
                      CaptionML=ENU=Project Inspections (Site Mgt.);
                      RunObject=Page 11125538;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=CheckRulesSyntax }
      { 1100525075;2 ;ActionGroup;
                      CaptionML=ENU=QA;
                      Image=Alerts }
      { 1100525074;3 ;Action    ;
                      CaptionML=ENU=Deviations;
                      RunObject=Page 11125987;
                      RunPageLink=Source Type=CONST(Project),
                                  Source No.=FIELD(No.);
                      Image=CalculateDepreciation }
      { 1100525076;3 ;Action    ;
                      CaptionML=ENU=Accidents;
                      RunObject=Page 11126006;
                      RunPageLink=Source Type=CONST(Project),
                                  Source No.=FIELD(No.);
                      Image=Alerts }
      { 1100485050;3 ;Action    ;
                      CaptionML=ENU=Complaint Management;
                      RunObject=Page 11012468;
                      RunPageView=SORTING(Project No.)
                                  ORDER(Ascending);
                      RunPageLink=Project No.=FIELD(No.);
                      Promoted=No;
                      Image=EditReminder }
      { 1100525071;2 ;ActionGroup;
                      CaptionML=ENU=Locations;
                      Image=Addresses }
      { 1210190017;3 ;Action    ;
                      CaptionML=ENU=Project &Locations;
                      RunObject=Page 11012020;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=Job }
      { 1100530000;3 ;Action    ;
                      AccessByPermission=Page 11125906=X;
                      CaptionML=ENU=Plant Locations;
                      Image=MachineCenter;
                      OnAction=VAR
                                 TmpLinkedPlantLoc@1100530000 : TEMPORARY Record 11012657;
                               BEGIN
                                 TESTFIELD("No.");
                                 TmpLinkedPlantLoc.SETRANGE("Link Type", TmpLinkedPlantLoc."Link Type"::Project);
                                 TmpLinkedPlantLoc."Link Type" := TmpLinkedPlantLoc."Link Type"::Project;
                                 TmpLinkedPlantLoc."Project No." := "No.";
                                 PAGE.RUNMODAL(PAGE::"Linked Plant Location List", TmpLinkedPlantLoc);
                               END;
                                }
      { 1100528600;3 ;Action    ;
                      CaptionML=ENU=Project-Building Relations;
                      RunObject=Page 11126278;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=Hierarchy }
      { 1100525004;3 ;Action    ;
                      CaptionML=ENU=Job Preferred &Locations;
                      RunObject=Page 11072043;
                      RunPageView=SORTING(Priority);
                      RunPageLink=Type=CONST(Job),
                                  No.=FIELD(No.);
                      Image=Company }
      { 1100525079;2 ;ActionGroup;
                      CaptionML=ENU=Additional Data;
                      Image=Navigate }
      { 62      ;3   ;Action    ;
                      CaptionML=ENU=Co&mments;
                      RunObject=Page 124;
                      RunPageLink=Table Name=CONST(Job),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 1000000010;3 ;Action    ;
                      CaptionML=ENU=&Responsible Persons;
                      RunObject=Page 11012017;
                      RunPageView=SORTING(Project No.,Line No.);
                      RunPageLink=Project No.=FIELD(No.);
                      Image=PersonInCharge }
      { 1210190065;3 ;Action    ;
                      CaptionML=ENU=Project &Authorities;
                      RunObject=Page 11020231;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=IndustryGroups }
      { 84      ;3   ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      RunObject=Page 540;
                      RunPageLink=Table ID=CONST(11072003),
                                  No.=FIELD(No.);
                      Image=Dimensions }
      { 1100525006;3 ;Action    ;
                      CaptionML=ENU=&Features;
                      Image=QualificationOverview;
                      OnAction=BEGIN
                                 ShowFeatures;
                               END;
                                }
      { 1000000013;3 ;Action    ;
                      CaptionML=ENU=Pic&ture;
                      RunObject=Page 11012030;
                      RunPageLink=No.=FIELD(No.);
                      Image=Picture }
      { 1100525088;3 ;Action    ;
                      CaptionML=ENU=Exchange Rates;
                      RunObject=Page 11124939;
                      RunPageLink=Project Filter=FIELD(No.);
                      Image=AdjustExchangeRates }
      { 1100528300;2 ;ActionGroup;
                      CaptionML=ENU=Document Portal;
                      Image=Web }
      { 1100528301;3 ;Action    ;
                      CaptionML=ENU=Responsible Person Permissions;
                      Image=Permission;
                      OnAction=VAR
                                 RespPersPermPPT@1100528300 : Record 11229812;
                               BEGIN
                                 RespPersPermPPT.SETRANGE("Subsite Type", RespPersPermPPT."Subsite Type"::Project);
                                 RespPersPermPPT.SETRANGE("Project No.", "No.");
                                 PAGE.RUNMODAL(PAGE::"Resp Pers Permissions (PPT)", RespPersPermPPT);
                               END;
                                }
      { 1100528302;3 ;Action    ;
                      CaptionML=ENU=Responsible Person Filters;
                      Image=Filter;
                      OnAction=VAR
                                 RespPersPermPPT@1100528300 : Record 11229812;
                               BEGIN
                                 RespPersPermPPT.SETRANGE("Subsite Type", RespPersPermPPT."Subsite Type"::Project);
                                 RespPersPermPPT.SETRANGE("Project No.", "No.");
                                 PAGE.RUNMODAL(PAGE::"Resp Pers Filters (PPT)", RespPersPermPPT);
                               END;
                                }
      { 1100528303;3 ;Action    ;
                      CaptionML=ENU=Authority Permissions;
                      Image=Permission;
                      OnAction=VAR
                                 AuthorityPermPPT@1100528300 : Record 11229813;
                               BEGIN
                                 AuthorityPermPPT.SETRANGE("Subsite Type", AuthorityPermPPT."Subsite Type"::Project);
                                 AuthorityPermPPT.SETRANGE("Project No.", "No.");
                                 PAGE.RUNMODAL(PAGE::"Authority Permissions (PPT)", AuthorityPermPPT);
                               END;
                                }
      { 1100528304;3 ;Action    ;
                      CaptionML=ENU=Authority Filters;
                      Image=Filter;
                      OnAction=VAR
                                 AuthorityPermPPT@1100528300 : Record 11229813;
                               BEGIN
                                 AuthorityPermPPT.SETRANGE("Subsite Type", AuthorityPermPPT."Subsite Type"::Project);
                                 AuthorityPermPPT.SETRANGE("Project No.", "No.");
                                 PAGE.RUNMODAL(PAGE::"Authority Filters (PPT)", AuthorityPermPPT);
                               END;
                                }
      { 1100528305;3 ;Action    ;
                      CaptionML=ENU=Document Versions;
                      RunObject=Page 11229185;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=Versions }
      { 1100528306;3 ;Action    ;
                      CaptionML=ENU=Document Updates;
                      RunObject=Page 11229181;
                      RunPageLink=Project No.=FIELD(No.);
                      Image=CreateLinesFromJob }
      { 1100485132;1 ;ActionGroup;
                      CaptionML=ENU=Additional Data;
                      Image=Worksheets }
      { 1210190007;2 ;Action    ;
                      CaptionML=ENU=Doc&uments;
                      Promoted=Yes;
                      Image=Documents;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 DocumentFilters@1100525001 : Codeunit 11012432;
                                 RecRef@1100525002 : RecordRef;
                               BEGIN
                                 RecRef.GETTABLE(Rec);
                                 // ByCompany changed to FALSE, otherwise documents are not showed in the archive company
                                 DocumentFilters.CreateTempFilterAndExecute1(RecRef, "Global Dimension 1 Code", FALSE, FALSE);
                               END;
                                }
      { 1100527000;2 ;Action    ;
                      AccessByPermission=Page 11229284=X;
                      CaptionML=ENU=Work Orders;
                      Image=HRSetup;
                      OnAction=VAR
                                 Proj@1100529000 : Record 11072003;
                               BEGIN
                                 Proj.ShowWorkOrders("No.", '');
                               END;
                                }
      { 1100525046;2 ;ActionGroup;
                      Name=D3DMS;
                      CaptionML=ENU=DMS;
                      Image=MapAccounts }
      { 1100525044;3 ;Action    ;
                      CaptionML=ENU=Folderbrowser;
                      Image=MapAccounts;
                      OnAction=VAR
                                 JobsSetup@1100409002 : Record 315;
                                 D3DocumentManagement@1100409001 : Codeunit 11012409;
                               BEGIN
                                 //**4PS
                                 JobsSetup.GET;
                                 D3DocumentManagement.OpenD3FolderBrowser("No.", JobsSetup."D3 Folder Code", JobsSetup."D3 Field No.");
                               END;
                                }
      { 1100485136;1 ;ActionGroup;
                      CaptionML=ENU=Sales & &Marketing;
                      Visible=false }
      { 1210190033;2 ;Action    ;
                      CaptionML=ENU=Try-out;
                      OnAction=BEGIN
                                 //**4PS
                                 ShowTryOut(1);
                               END;
                                }
      { 1210190034;2 ;Action    ;
                      CaptionML=ENU=Try-out &Quote;
                      OnAction=BEGIN
                                 //**4PS
                                 ShowTryOut(2);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525094;1 ;ActionGroup }
      { 1100525051;2 ;ActionGroup;
                      CaptionML=ENU=Invoicing;
                      Image=Invoice }
      { 1000000015;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Invoices;
                      Image=Invoice;
                      OnAction=VAR
                                 Job@1210190001 : Record 11072003;
                               BEGIN
                                 // jhoek.270611.begin: call 16372
                                 // ProjPrincipRec.SETRANGE("Project No.","No.");
                                 // REPORT.RUN(REPORT::"Create Project Invoices",TRUE,FALSE,ProjPrincipRec);
                                 Job := Rec;
                                 Job.SETRECFILTER;
                                 REPORT.RUN(REPORT::"Create Project Invoices", TRUE, FALSE, Job);
                                 // jhoek.270611.end
                               END;
                                }
      { 1100525081;3 ;ActionGroup;
                      CaptionML=ENU=Installments;
                      Image=AmountByPeriod }
      { 1101200088;4 ;Action    ;
                      CaptionML=ENU=Generate Installments;
                      Promoted=No;
                      Image=AmountByPeriod;
                      OnAction=BEGIN
                                 //**4PS
                                 CLEAR(GenerateProjInstallm);
                                 GenerateProjInstallm.FromProject("No.");
                               END;
                                }
      { 1101200089;4 ;Action    ;
                      CaptionML=ENU=Set Installm. to be Invoiced;
                      Image=BankAccountRec;
                      OnAction=BEGIN
                                 //**4PS
                                 ProjInstalmRec.SETRANGE("Project No.","No.");
                                 REPORT.RUN(REPORT::"Set Installm. to be Invoiced",TRUE,FALSE,ProjInstalmRec);
                               END;
                                }
      { 1100525078;4 ;Action    ;
                      CaptionML=ENU=Recalculate Contract Amount (LCY);
                      Image=Recalculate;
                      OnAction=BEGIN
                                 ProjInstalmRec.RESET;
                                 ProjInstalmRec.SETRANGE("Project No.", "No.");
                                 IF ProjInstalmRec.FINDSET THEN BEGIN
                                   REPEAT
                                     ProjInstalmRec.CALCFIELDS("Invoice in Process","Invoiced Price");
                                     IF (ProjInstalmRec."Installment Amount" <> 0) AND (ProjInstalmRec."Invoice in Process" = 0) AND
                                        (ProjInstalmRec."Invoiced Price" = 0) THEN
                                     ProjInstalmRec.VALIDATE("Installment Amount");
                                     ProjInstalmRec.MODIFY;
                                   UNTIL ProjInstalmRec.NEXT = 0;
                                 END;

                                 ProjPrincipRec.RESET;
                                 ProjPrincipRec.SETRANGE("Project No.", "No.");
                                 IF ProjPrincipRec.FINDSET THEN BEGIN
                                   REPEAT
                                     ProjPrincipRec.VALIDATE("Contract Amount");
                                     ProjPrincipRec.MODIFY;
                                   UNTIL ProjPrincipRec.NEXT = 0;
                                 END;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100294000;4 ;Action    ;
                      CaptionML=ENU=Calculate Final Installment;
                      Promoted=Yes;
                      Image=AmountByPeriod;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 // SESB.I022 KD 18.07.2013 >>
                                 CLEAR(GenerateProjInstallm);
                                 GenerateProjInstallm.CalcFinalInstalmentProject("No.");
                                 // SESB.I022 KD 18.07.2013 <<
                               END;
                                }
      { 1100525082;3 ;ActionGroup;
                      CaptionML=ENU=Cost Plus;
                      Image=CostAccounting }
      { 1100528700;4 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Print Project Cost Plus Entries to Create;
                      Image=PrintChecklistReport;
                      OnAction=VAR
                                 Job@1100528704 : Record 11072003;
                                 JobLedgerEntry@1100528703 : Record 11072005;
                                 PostedHourLine@1100528702 : Record 11012085;
                                 HourAccountingLine@1100528701 : Record 11012039;
                                 ProjectCostPlustoCreate@1100528700 : Report 11012137;
                               BEGIN
                                 //**4PS
                                 Job.SETRANGE("No.", "No.");
                                 JobLedgerEntry.SETRANGE("Cost Plus Entry Created", FALSE);
                                 PostedHourLine.SETRANGE("Cost Plus Entry Created", FALSE);
                                 HourAccountingLine.SETRANGE("Cost Plus Entry Created", FALSE);

                                 ProjectCostPlustoCreate.SETTABLEVIEW(Job);
                                 ProjectCostPlustoCreate.SETTABLEVIEW(JobLedgerEntry);
                                 ProjectCostPlustoCreate.SETTABLEVIEW(PostedHourLine);
                                 ProjectCostPlustoCreate.SETTABLEVIEW(HourAccountingLine);
                                 ProjectCostPlustoCreate.SetDefault("No.");
                                 ProjectCostPlustoCreate.RUN;
                               END;
                                }
      { 1000000014;4 ;Action    ;
                      ShortCutKey=Shift+Ctrl+A;
                      Ellipsis=Yes;
                      CaptionML=ENU=Generate Cost Plus Entries;
                      Promoted=No;
                      Image=ApplyEntries;
                      OnAction=VAR
                                 lvProjRec@1210190026 : Record 11072003;
                                 lvProjLedgEntryRec@1210190019 : Record 11072005;
                                 lvPostedHourLineRec@1210190015 : Record 11012085;
                                 lvHourAccLineRec@1210190002 : Record 11012039;
                                 lvCreateCostPlusRpt@1210190001 : Report 11012013;
                               BEGIN
                                 //**4PS
                                 lvProjRec.SETRANGE("No.", "No.");
                                 lvProjLedgEntryRec.SETRANGE("Cost Plus Entry Created", FALSE);
                                 lvPostedHourLineRec.SETRANGE("Cost Plus Entry Created", FALSE);
                                 lvHourAccLineRec.SETRANGE("Cost Plus Entry Created", FALSE);

                                 lvCreateCostPlusRpt.SETTABLEVIEW(lvProjRec);
                                 lvCreateCostPlusRpt.SETTABLEVIEW(lvProjLedgEntryRec);
                                 lvCreateCostPlusRpt.SETTABLEVIEW(lvPostedHourLineRec);
                                 lvCreateCostPlusRpt.SETTABLEVIEW(lvHourAccLineRec);
                                 lvCreateCostPlusRpt.SetDefault("No.");
                                 lvCreateCostPlusRpt.RUN;
                               END;
                                }
      { 1100525083;2 ;ActionGroup;
                      CaptionML=ENU=Processing;
                      Image=Start }
      { 1100525084;3 ;ActionGroup;
                      CaptionML=ENU=Copy;
                      Image=Copy }
      { 1101200087;4 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy Project;
                      Image=Copy;
                      OnAction=BEGIN
                                 //**4PS
                                 CopyProject; //C012513
                               END;
                                }
      { 1101200086;4 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy &General Data;
                      Promoted=No;
                      Image=Copy;
                      OnAction=VAR
                                 CopyGeneralData@1100528400 : Page 11012110;
                               BEGIN
                                 //**4PS
                                 CopyGeneralData.SetProject("No.");
                                 CopyGeneralData.StdDialogRunModal;
                               END;
                                }
      { 1100485000;4 ;Action    ;
                      CaptionML=ENU=Copy Standard Delivery;
                      Image=Copy;
                      OnAction=VAR
                                 lStandDeliveryRec@1100485001 : Record 11012507;
                                 lProjPlotDeliveryRec@1100485000 : Record 11012507;
                               BEGIN
                                 //**4PS
                                 lStandDeliveryRec.SETFILTER("Project No.",'%1','');
                                 lStandDeliveryRec.SETFILTER("Plot No.",'%1','');
                                 IF lStandDeliveryRec.FIND('-') THEN
                                   REPEAT
                                     IF NOT lProjPlotDeliveryRec.GET("No.",'', lStandDeliveryRec."Delivery No.") THEN BEGIN
                                       lProjPlotDeliveryRec.INIT;
                                       lProjPlotDeliveryRec."Project No." := "No.";
                                       lProjPlotDeliveryRec."Plot No." := '';
                                       lProjPlotDeliveryRec."Delivery No." := lStandDeliveryRec."Delivery No.";
                                       lProjPlotDeliveryRec.TRANSFERFIELDS(lStandDeliveryRec,FALSE);
                                       lProjPlotDeliveryRec.INSERT;
                                     END;
                                   UNTIL lStandDeliveryRec.NEXT = 0;
                               END;
                                }
      { 1100525034;4 ;Action    ;
                      Name=CreateSubProject;
                      ShortCutKey=Ctrl+U;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Sub Project;
                      Image=Splitlines;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 //**4PS
                                 CreateSubProject;  //DP00792-RFC07
                               END;
                                }
      { 1100525085;3 ;ActionGroup;
                      CaptionML=ENU=Creating;
                      Image=AddAction }
      { 1100485091;4 ;Action    ;
                      AccessByPermission=TableData 11012554=I;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Plant &Location;
                      Image=CreateSKU;
                      OnAction=BEGIN
                                 //**4PS
                                 TESTFIELD("No.");
                                 Rec.RunCreatePlantLocation(Rec);
                               END;
                                }
      { 1210190064;4 ;Action    ;
                      CaptionML=ENU=Generate Delivered Objects...;
                      Image=ServiceItem;
                      OnAction=VAR
                                 PlotRec@1100485001 : Record 11012500;
                                 GenerateDelObjectsRep@1100485002 : Report 11020224;
                               BEGIN
                                 PlotRec.SETRANGE("Project No.","No.");
                                 GenerateDelObjectsRep.SETTABLEVIEW(PlotRec);
                                 GenerateDelObjectsRep.RUNMODAL;
                               END;
                                }
      { 1100528401;4 ;Action    ;
                      CaptionML=ENU=Generate &Proj. Plann. Activities;
                      Image=Planning;
                      OnAction=VAR
                                 ProjPlanningActivityMgt@1100528400 : Codeunit 11125711;
                               BEGIN
                                 TESTFIELD("Starting Date");
                                 ProjPlanningActivityMgt.GenProjPlanActivities(Rec);
                               END;
                                }
      { 1100525092;3 ;ActionGroup;
                      CaptionML=ENU=Document Portal;
                      Image=Web }
      { 1100485066;4 ;Action    ;
                      CaptionML=ENU=Create Project Site;
                      Image=CreateForm;
                      OnAction=VAR
                                 CRMSetup@1100485000 : Record 5079;
                                 SharePointSetup4PS@1100525000 : Record 11012730;
                                 DocumentPortalProject@1100525001 : Codeunit 11012948;
                                 ProjectSiteMgt@1100409001 : Codeunit 11012282;
                                 ProjectSiteHeader@1100409000 : Record 11071872;
                                 ProjectSiteLine@1100409002 : Record 11071873;
                                 ProjectSiteSeqNo@1100409004 : Integer;
                                 ProjectSiteLineNo@1100409003 : Integer;
                               BEGIN
                                 IF "SharePoint Site URL" <>'' THEN
                                   ERROR(Text11012006)
                                 ELSE BEGIN
                                   //C018523.sn
                                   IF (ProjectSiteMgt.IsInLicense(FALSE)) AND (ProjectSiteMgt.ProjectSiteIsCreated(1, "No.")) THEN BEGIN
                                     IF (NOT ProjectSiteLine.GetProjectSiteLine(1, "No.", COMPANYNAME, ProjectSiteSeqNo, ProjectSiteLineNo)) THEN
                                       ERROR(Text11012008, ProjectSiteLine.TABLECAPTION, TABLECAPTION, "No.");
                                     IF (NOT "SharePoint Site Generated") AND ("SharePoint Site URL" = '') THEN BEGIN
                                       ProjectSiteHeader.GET(ProjectSiteSeqNo);
                                       ProjectSiteLine.GET(ProjectSiteSeqNo, ProjectSiteLineNo);
                                       ProjectSiteHeader.CreateSiteLine(ProjectSiteLine);
                                       "SharePoint Site Generated" := TRUE;
                                       "SharePoint Site URL" := ProjectSiteHeader.GetSiteURL;
                                       MODIFY;
                                     END;
                                   END ELSE BEGIN
                                   //C018523.en
                                     IF (NOT SharePointSetup4PS.GET) THEN  //#DP000319.sn
                                       SharePointSetup4PS.INIT;
                                     IF (SharePointSetup4PS."Use Project Portal") THEN BEGIN
                                       DocumentPortalProject.CreateProjectSite(Rec);
                                     END ELSE BEGIN //#DP000319.en
                                       IF "Make SharePoint Site" AND NOT "SharePoint Site Generated" THEN BEGIN
                                         SharepSetup.GET;
                                         IF (SharepSetup."Path Sitecollection SharePoint" <>'') AND (SharepSetup."SharePoint Template" <> '') THEN
                                           GenerateSharePointSite;
                                       END ELSE BEGIN
                                         CRMSetup.GET;
                                         IF (CRMSetup."Dir. Sharepoint XML Out"<>'') AND (CRMSetup."Codeunit No. Export Sharepoint" <> 0) THEN BEGIN
                                           IF "SharePoint Phase" = "SharePoint Phase"::" " THEN
                                             ERROR(Text11012003);
                                           IF "SharePoint Status" = "SharePoint Status"::New THEN
                                             "SharePoint Status" := "SharePoint Status"::Add;
                                           MODIFY;
                                         END;
                                       END;
                                     END;
                                   END;
                                 END;
                               END;
                                }
      { 1100528307;4 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Check Portal Web Service;
                      Image=Check;
                      OnAction=BEGIN
                                 //**4PS
                                 CheckWebServiceProjectPortal;
                               END;
                                }
      { 1100528309;4 ;Action    ;
                      CaptionML=ENU=Create Quote Subsite;
                      Image=CreateForm;
                      OnAction=VAR
                                 DocumentPortalProject@1100525001 : Codeunit 11012948;
                               BEGIN
                                 //**4PS
                                 DocumentPortalProject.CreateQuoteSubsite(Rec);
                               END;
                                }
      { 1100525069;4 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Project Authorities;
                      Image=ContactPerson;
                      OnAction=VAR
                                 Job@1100525000 : Record 11072003;
                                 CreateProjectAuthorities@1100525001 : Report 11012368;
                               BEGIN
                                 //**4PS
                                 Job.SETRANGE("No.", "No.");
                                 CreateProjectAuthorities.SETTABLEVIEW(Job);
                                 CreateProjectAuthorities.RUNMODAL;
                               END;
                                }
      { 1100285001;4 ;Action    ;
                      CaptionML=ENU=Create Sub Project;
                      OnAction=VAR
                                 Job@1100285002 : Record 11072003;
                                 CreateSubProjFrm@1100285001 : Page 11128005;
                                 CreatedProjNo@1100285000 : Code[20];
                               BEGIN
                                 //**4PSSE
                                 IF CONFIRM(STRSUBSTNO(Text50000,"No.")) THEN BEGIN
                                   CreateSubProjFrm.FillDefaults("No.");
                                   CreateSubProjFrm.CopyProject();
                                   CreateSubProjFrm.GetCreatedProjectNo(CreatedProjNo);
                                 //>>150809
                                   //Job.GET(CreatedProjNo);
                                   //PAGE.RUN(11072003,Job);
                                   MODIFY;
                                   GET(CreatedProjNo);
                                   CurrPage.UPDATE(FALSE);
                                 //<<150809
                                   CLEAR(CreateSubProjFrm);
                                 END;
                               END;
                                }
      { 1100525089;4 ;Action    ;
                      CaptionML=ENU=Update Site Content;
                      Image=Web;
                      OnAction=VAR
                                 Job@1100409000 : Record 11072003;
                               BEGIN
                                 //**4PS
                                 Job.SETRANGE("No.", "No.");
                                 REPORT.RUNMODAL(REPORT::"Update Project Portal Data", TRUE, FALSE, Job);
                               END;
                                }
      { 1100525096;1 ;ActionGroup }
      { 1100485002;2 ;ActionGroup;
                      CaptionML=ENU=Documents;
                      Image=Documents }
      { 1100485052;3 ;Action    ;
                      CaptionML=ENU=&Print Worksheet;
                      Promoted=No;
                      Image=Print;
                      PromotedCategory=Category8;
                      OnAction=BEGIN
                                 //**4PS
                                 CurrPage.SETSELECTIONFILTER(ProjRec);
                                 PrintDoc.PrintProjWorksheet(ProjRec);
                               END;
                                }
      { 1100485003;3 ;Action    ;
                      CaptionML=ENU=Delivery Form;
                      Promoted=No;
                      Image=DocumentEdit;
                      OnAction=VAR
                                 Contact@1210190002 : Record 5050;
                                 DocumentTemplate@1100485000 : Record 11012401;
                               BEGIN
                                 //**4PS
                                 TESTFIELD("Bill-to Customer No.");
                                 IF Contact.GetContactByCustomer("Bill-to Customer No.", Contact, TRUE) THEN
                                   EditDocuments(STRSUBSTNO('%1', DocumentTemplate.Type::"Delivery Form"), Contact."No.", '', FALSE, '');
                               END;
                                }
      { 1100525003;3 ;Action    ;
                      CaptionML=ENU=Project Documents;
                      Promoted=Yes;
                      Image=Word;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 Contact@1210190002 : Record 5050;
                                 DocumentTemplate@1210190001 : Record 11012401;
                               BEGIN
                                 //**4PS
                                 TESTFIELD("Bill-to Customer No.");
                                 IF Contact.GetContactByCustomer("Bill-to Customer No.", Contact, TRUE) THEN
                                   EditDocuments(STRSUBSTNO('%1', DocumentTemplate.Type::Job), Contact."No.", '', FALSE, '');
                               END;
                                }
      { 1100525000;3 ;ActionGroup;
                      CaptionML=ENU=Mail Documents;
                      ActionContainerType=NewDocumentItems;
                      Image=MailAttachment }
      { 1100525001;4 ;Action    ;
                      CaptionML=ENU=Estimator;
                      Promoted=No;
                      Image=MailAttachment;
                      OnAction=VAR
                                 Contact@1100525000 : Record 5050;
                                 Employee@1100525001 : Record 5200;
                                 DocumentTemplate@1100525002 : Record 11012401;
                               BEGIN
                                 TESTFIELD("Bill-to Customer No.");
                                 TESTFIELD(Estimator);
                                 IF Contact.GetContactByCustomer("Bill-to Customer No.", Contact, TRUE) THEN BEGIN
                                   IF Employee.GET(Estimator) THEN
                                     EditDocuments(
                                       STRSUBSTNO('%1|%2', DocumentTemplate.Type::Job, DocumentTemplate.Type::"Delivery Form"),
                                       Contact."No.", '', TRUE, Employee."E-Mail");
                                 END;
                               END;
                                }
      { 1100525002;4 ;Action    ;
                      CaptionML=ENU=Site Manager;
                      Promoted=No;
                      Image=MailAttachment;
                      OnAction=VAR
                                 Contact@1100525001 : Record 5050;
                                 Employee@1100525000 : Record 5200;
                                 DocumentTemplate@1100525002 : Record 11012401;
                               BEGIN
                                 TESTFIELD("Bill-to Customer No.");
                                 TESTFIELD("Site Manager");
                                 IF Contact.GetContactByCustomer("Bill-to Customer No.", Contact, TRUE) THEN BEGIN
                                   IF Employee.GET("Site Manager") THEN
                                     EditDocuments(
                                       STRSUBSTNO('%1|%2', DocumentTemplate.Type::Job, DocumentTemplate.Type::"Delivery Form"),
                                       Contact."No.", '', TRUE, Employee."E-Mail");
                                 END;
                               END;
                                }
      { 1100525005;4 ;Action    ;
                      CaptionML=ENU=Project Manager;
                      Promoted=No;
                      Image=MailAttachment;
                      OnAction=VAR
                                 Contact@1100525001 : Record 5050;
                                 Employee@1100525000 : Record 5200;
                                 DocumentTemplate@1100525002 : Record 11012401;
                               BEGIN
                                 TESTFIELD("Bill-to Customer No.");
                                 TESTFIELD("Project Manager");
                                 IF Contact.GetContactByCustomer("Bill-to Customer No.", Contact, TRUE) THEN BEGIN
                                   IF Employee.GET("Project Manager") THEN
                                     EditDocuments(
                                       STRSUBSTNO('%1|%2', DocumentTemplate.Type::Job, DocumentTemplate.Type::"Delivery Form"),
                                       Contact."No.", '', TRUE, Employee."E-Mail");
                                 END;
                               END;
                                }
      { 1100525011;4 ;Action    ;
                      CaptionML=ENU=Project Engineer;
                      Promoted=No;
                      Image=MailAttachment;
                      OnAction=VAR
                                 Contact@1100525001 : Record 5050;
                                 Employee@1100525000 : Record 5200;
                                 DocumentTemplate@1100525002 : Record 11012401;
                               BEGIN
                                 TESTFIELD("Bill-to Customer No.");
                                 TESTFIELD("Project Engineer");
                                 IF Contact.GetContactByCustomer("Bill-to Customer No.", Contact, TRUE) THEN BEGIN
                                   IF Employee.GET("Project Engineer") THEN
                                     EditDocuments(
                                       STRSUBSTNO('%1|%2', DocumentTemplate.Type::Job, DocumentTemplate.Type::"Delivery Form"),
                                       Contact."No.", '', TRUE, Employee."E-Mail");
                                 END;
                               END;
                                }
      { 1100525013;4 ;Action    ;
                      CaptionML=ENU=Supervisor;
                      Promoted=No;
                      Image=MailAttachment;
                      OnAction=VAR
                                 Contact@1100525001 : Record 5050;
                                 DocumentTemplate@1100525000 : Record 11012401;
                               BEGIN
                                 TESTFIELD(Supervisor);
                                 IF Contact.GET(Supervisor) THEN BEGIN
                                   IF Contact.IsContactPerson THEN
                                     EditDocuments(
                                       STRSUBSTNO('%1|%2', DocumentTemplate.Type::Job, DocumentTemplate.Type::"Delivery Form"),
                                       Contact."Company No.", Contact."No.", TRUE, Contact."E-Mail")
                                   ELSE
                                     EditDocuments(
                                       STRSUBSTNO('%1|%2', DocumentTemplate.Type::Job, DocumentTemplate.Type::"Delivery Form"),
                                       Contact."No.", '', TRUE, Contact."E-Mail");
                                 END;
                               END;
                                }
      { 1100525030;4 ;Action    ;
                      CaptionML=ENU=Buyercontact;
                      Promoted=No;
                      Image=MailAttachment;
                      OnAction=VAR
                                 Contact@1100525001 : Record 5050;
                                 Employee@1100525000 : Record 5200;
                                 DocumentTemplate@1100525002 : Record 11012401;
                               BEGIN
                                 TESTFIELD("Bill-to Customer No.");
                                 TESTFIELD(Buyercontact);
                                 IF Contact.GetContactByCustomer("Bill-to Customer No.", Contact, TRUE) THEN BEGIN
                                   IF Employee.GET(Buyercontact) THEN
                                     EditDocuments(
                                       STRSUBSTNO('%1|%2', DocumentTemplate.Type::Job, DocumentTemplate.Type::"Delivery Form"),
                                       Contact."No.", '', TRUE, Employee."E-Mail");
                                 END;
                               END;
                                }
      { 1100525032;4 ;Action    ;
                      CaptionML=ENU=Purchaser;
                      Promoted=No;
                      Image=MailAttachment;
                      OnAction=VAR
                                 Contact@1100525001 : Record 5050;
                                 SalespersonPurchaser@1100525000 : Record 13;
                                 DocumentTemplate@1100525002 : Record 11012401;
                               BEGIN
                                 TESTFIELD("Bill-to Customer No.");
                                 TESTFIELD("Purchaser Code");
                                 IF Contact.GetContactByCustomer("Bill-to Customer No.", Contact, TRUE) THEN BEGIN
                                   IF SalespersonPurchaser.GET("Purchaser Code") THEN
                                     EditDocuments(
                                       STRSUBSTNO('%1|%2', DocumentTemplate.Type::Job, DocumentTemplate.Type::"Delivery Form"),
                                       Contact."No.", '', TRUE, SalespersonPurchaser."E-Mail");
                                 END;
                               END;
                                }
      { 1100525036;4 ;Action    ;
                      CaptionML=ENU=Expediter;
                      Promoted=No;
                      Image=MailAttachment;
                      OnAction=VAR
                                 Contact@1100525001 : Record 5050;
                                 SalespersonPurchaser@1100525000 : Record 13;
                                 DocumentTemplate@1100525002 : Record 11012401;
                               BEGIN
                                 TESTFIELD("Bill-to Customer No.");
                                 TESTFIELD(Expediter);
                                 IF Contact.GetContactByCustomer("Bill-to Customer No.", Contact, TRUE) THEN BEGIN
                                   IF SalespersonPurchaser.GET(Expediter) THEN
                                     EditDocuments(
                                       STRSUBSTNO('%1|%2', DocumentTemplate.Type::Job, DocumentTemplate.Type::"Delivery Form"),
                                       Contact."No.", '', TRUE, SalespersonPurchaser."E-Mail");
                                 END;
                               END;
                                }
      { 1100525040;4 ;Action    ;
                      CaptionML=ENU=Adviser;
                      Promoted=No;
                      Image=MailAttachment;
                      OnAction=VAR
                                 Contact@1100525002 : Record 5050;
                                 DocumentTemplate@1100525000 : Record 11012401;
                               BEGIN
                                 TESTFIELD(Adviser);
                                 IF Contact.GET(Adviser) THEN BEGIN
                                   IF Contact.IsContactPerson THEN
                                     EditDocuments(
                                       STRSUBSTNO('%1|%2', DocumentTemplate.Type::Job, DocumentTemplate.Type::"Delivery Form"),
                                       Contact."Company No.", Contact."No.", TRUE, Contact."E-Mail")
                                   ELSE
                                     EditDocuments(
                                       STRSUBSTNO('%1|%2', DocumentTemplate.Type::Job, DocumentTemplate.Type::"Delivery Form"),
                                       Contact."No.", '', TRUE, Contact."E-Mail");
                                 END;
                               END;
                                }
      { 1100525042;4 ;Action    ;
                      CaptionML=ENU=Salesperson;
                      Promoted=No;
                      Image=MailAttachment;
                      OnAction=VAR
                                 Contact@1100525002 : Record 5050;
                                 SalespersonPurchaser@1100525001 : Record 13;
                                 DocumentTemplate@1100525000 : Record 11012401;
                               BEGIN
                                 TESTFIELD("Bill-to Customer No.");
                                 TESTFIELD("Salesperson Code");
                                 IF Contact.GetContactByCustomer("Bill-to Customer No.", Contact, TRUE) THEN BEGIN
                                   IF SalespersonPurchaser.GET("Salesperson Code") THEN
                                     EditDocuments(
                                       STRSUBSTNO('%1|%2', DocumentTemplate.Type::Job, DocumentTemplate.Type::"Delivery Form"),
                                       Contact."No.", '', TRUE, SalespersonPurchaser."E-Mail");
                                 END;
                               END;
                                }
      { 1100525086;2 ;ActionGroup;
                      CaptionML=ENU=Display;
                      Image=ShowMatrix }
      { 1100525073;3 ;Action    ;
                      ShortCutKey=Ctrl+K;
                      CaptionML=ENU=Completeness Check;
                      Image=CheckList;
                      OnAction=VAR
                                 CheckRecordCompletion@1100525000 : Codeunit 11012252;
                                 RecRef@1100525001 : RecordRef;
                               BEGIN
                                 RecRef.GETTABLE(Rec);
                                 CheckRecordCompletion.ShowIncompleteFields(RecRef);
                               END;
                                }
      { 1100525009;3 ;Action    ;
                      CaptionML=ENU=&Filter on Feature;
                      Image=Filter;
                      OnAction=VAR
                                 lvFeatureRec@1100525001 : Record 11012752;
                                 lvFeatureFilterFrm@1100525000 : Page 11012757;
                                 lvRelTypeOpt@1100525002 : 'Prospect,Contact,Try-out,Quote,General,Job';
                               BEGIN
                                 lvFeatureFilterFrm.SetJobFilter(Rec);
                                 lvFeatureFilterFrm.SETTABLEVIEW(lvFeatureRec);
                                 lvFeatureFilterFrm.RUNMODAL;
                                 CLEAR(lvFeatureFilterFrm);
                               END;
                                }
      { 1100525087;1 ;ActionGroup;
                      CaptionML=ENU=Display;
                      Image=Alerts }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=ENU=General }

    { 2   ;2   ;Field     ;
                SourceExpr="No.";
                Importance=Standard;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;

                ShowMandatory=TRUE }

    { 4   ;2   ;Field     ;
                SourceExpr=Description;
                Importance=Standard;
                ShowMandatory=TRUE }

    { 1100528800;2;Field  ;
                SourceExpr="Description 2";
                Importance=Additional;
                ShowMandatory=Description2Mandatory }

    { 1210190101;2;Field  ;
                SourceExpr="Settlement Method";
                OnValidate=BEGIN
                             SettlementMethodOnAfterValidat;
                           END;
                            }

    { 1210190100;2;Field  ;
                SourceExpr="Contract Type";
                Visible=TRUE;
                OnValidate=BEGIN
                             ContractTypeOnAfterValidate;
                           END;
                            }

    { 32  ;2   ;Field     ;
                AssistEdit=Yes;
                SourceExpr="Bill-to Customer No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             //**4PS
                             CALCFIELDS("Principal Name",Prospect);
                             //**4PSSE
                             BilltoCustomerNoOnAfterValidat;
                           END;

                OnLookup=VAR
                           lCustRec@1100285001 : Record 18;
                           lCustFrm@1100285000 : Page 22;
                         BEGIN
                           //**4PS
                           CurrPage.SAVERECORD;
                           COMMIT;
                           LookupProjectPrincipal; //DP00790-RFC41
                           CurrPage.UPDATE;
                         END;

                OnAssistEdit=BEGIN
                               //**4PS
                               CurrPage.SAVERECORD;
                               COMMIT;
                               AssistEditProjectPrincipal; //DP00790-RFC41
                               CurrPage.UPDATE;
                             END;

                ShowMandatory=TRUE }

    { 1101200030;2;Field  ;
                DrillDown=No;
                SourceExpr="Principal Name";
                Importance=Promoted;
                Editable=FALSE }

    { 1100525019;2;Field  ;
                SourceExpr="Principal Contact Person";
                Importance=Additional }

    { 1100525018;2;Field  ;
                SourceExpr="Principal Contact Person Name";
                Importance=Additional }

    { 1101200004;2;Field  ;
                SourceExpr="Project Address Code";
                Importance=Additional;
                ShowMandatory=ProjectAddressCodeMandatory }

    { 1100485068;2;Field  ;
                CaptionML=ENU=Number of Addresses;
                SourceExpr=NumAdrs;
                Importance=Additional;
                Editable=FALSE }

    { 45  ;2   ;Field     ;
                SourceExpr=Address;
                Editable=TRUE;
                ShowMandatory=AddressMandatory }

    { 47  ;2   ;Field     ;
                SourceExpr="Address 2";
                Importance=Additional;
                ShowMandatory=Address2Mandatory }

    { 55  ;2   ;Field     ;
                SourceExpr="Post Code";
                Editable=TRUE;
                ShowMandatory=PostCodeMandatory }

    { 49  ;2   ;Field     ;
                SourceExpr=City;
                Editable=TRUE;
                ShowMandatory=CityMandatory }

    { 1210190041;2;Field  ;
                SourceExpr="Country/Region Code";
                Importance=Additional;
                ShowMandatory=CountryRegionCodeMandatory }

    { 8   ;2   ;Field     ;
                SourceExpr="Phone No.";
                ShowMandatory=PhoneNoMandatory }

    { 12  ;2   ;Field     ;
                SourceExpr="Fax No.";
                Importance=Additional;
                ShowMandatory=FaxNoMandatory }

    { 1100485040;2;Field  ;
                SourceExpr="Home Page";
                Importance=Additional;
                ShowMandatory=HomePageMandatory }

    { 1101200002;2;Field  ;
                SourceExpr="Project Status";
                Importance=Promoted;
                OnValidate=BEGIN
                             TechnicalFinishedDateOnBeforeI;
                           END;
                            }

    { 10  ;2   ;Field     ;
                SourceExpr="Search Description";
                Importance=Additional;
                ShowMandatory=SearchDescriptionMandatory }

    { 1100485033;2;Field  ;
                SourceExpr="Civil Engineering Project";
                Importance=Additional }

    { 1100485072;2;Field  ;
                SourceExpr=RAW;
                Importance=Additional }

    { 1101200000;2;Field  ;
                SourceExpr="Project Type";
                OnValidate=BEGIN
                             ProjectTypeOnAfterValidate;
                             CurrPage.UPDATE;
                           END;

                ShowMandatory=TRUE }

    { 1210190012;2;Field  ;
                SourceExpr="Allow Precl. R./Prov. Loss" }

    { 1210190050;2;Field  ;
                SourceExpr="Preclosure Result";
                Importance=Additional }

    { 1100525007;2;Field  ;
                SourceExpr="Provision Loss";
                Importance=Additional }

    { 1100485127;2;Field  ;
                SourceExpr="Blocking Code";
                Importance=Additional;
                ShowMandatory=BlockingCodeMandatory }

    { 1101200009;2;Field  ;
                SourceExpr="Territory Code";
                Importance=Additional;
                ShowMandatory=TerritoryCodeMandatory }

    { 1101200011;2;Field  ;
                SourceExpr=Type;
                Importance=Additional;
                ShowMandatory=TypeMandatory }

    { 1100525058;2;Field  ;
                SourceExpr=Discipline;
                Importance=Additional;
                ShowMandatory=DisciplineMandatory }

    { 1101200013;2;Field  ;
                SourceExpr="Global Dimension 1 Code";
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                           END;

                ShowMandatory=GlobalDimension1CodeMandatory }

    { 1101200021;2;Field  ;
                SourceExpr="Single/Main/Sub Project";
                OnValidate=BEGIN
                             //>> 160311 ITERO.SB RFC-044 Check if modify Single/Main/Sub-field is ok
                             CheckSingleMainSub;
                             //<<
                             SingleMainSubProjectOnAfterVal;
                           END;
                            }

    { 1101200023;2;Field  ;
                SourceExpr="Main Project";
                Editable="Main ProjectEditable";
                ShowMandatory=MainProjectMandatory }

    { 1210190000;2;Field  ;
                SourceExpr="Interest WIP Cost";
                Importance=Additional }

    { 1101200025;2;Field  ;
                SourceExpr="Project Supplier";
                Importance=Additional;
                ShowMandatory=ProjectSupplierMandatory }

    { 1100485095;2;Field  ;
                SourceExpr="VAT Indicator (Purchase)";
                Importance=Additional;
                Editable=VATIndicatorPurchaseEditable }

    { 1903705201;1;Group  ;
                CaptionML=ENU=Personnel }

    { 1210190174;2;Field  ;
                SourceExpr=Estimator;
                Importance=Standard;
                OnValidate=BEGIN
                             EstimatorOnAfterValidate;
                           END;

                ShowMandatory=EstimatorMandatory }

    { 1210190179;2;Field  ;
                SourceExpr="Name Estimator";
                Importance=Standard;
                Editable=FALSE }

    { 1210190173;2;Field  ;
                SourceExpr="Site Manager";
                OnValidate=BEGIN
                             SiteManagerOnAfterValidate;
                           END;

                ShowMandatory=SiteManagerMandatory }

    { 1210190177;2;Field  ;
                SourceExpr="Name Site Manager";
                Importance=Standard;
                Editable=FALSE }

    { 1210190175;2;Field  ;
                SourceExpr="Project Manager";
                Importance=Promoted;
                OnValidate=BEGIN
                             ProjectManagerOnAfterValidate;
                           END;

                ShowMandatory=ProjectManagerMandatory }

    { 1210190178;2;Field  ;
                SourceExpr="Name Project Manager";
                Importance=Promoted;
                Editable=FALSE }

    { 1210190180;2;Field  ;
                SourceExpr="Project Engineer";
                OnValidate=BEGIN
                             ProjectEngineerOnAfterValidate;
                           END;

                ShowMandatory=ProjectEngineerMandatory }

    { 1210190182;2;Field  ;
                SourceExpr="Name Project Engineer";
                Importance=Standard;
                Editable=FALSE }

    { 1100528001;2;Field  ;
                SourceExpr="Project Administrator";
                Importance=Standard;
                OnValidate=BEGIN
                             EstimatorOnAfterValidate;
                           END;

                ShowMandatory=ProjectAdministratorMandatory }

    { 1100528000;2;Field  ;
                SourceExpr="Name Project Administrator";
                Importance=Standard;
                Editable=FALSE }

    { 1210190183;2;Field  ;
                SourceExpr=Supervisor;
                Importance=Additional;
                ShowMandatory=SupervisorMandatory }

    { 1210190185;2;Field  ;
                SourceExpr="Name Supervisor";
                Importance=Additional;
                Editable=FALSE }

    { 1210190187;2;Field  ;
                SourceExpr=Buyercontact;
                Importance=Additional;
                OnValidate=BEGIN
                             BuyercontactOnAfterValidate;
                           END;

                ShowMandatory=BuyercontactMandatory }

    { 1210190186;2;Field  ;
                SourceExpr="Name Buyer Contact";
                Importance=Additional;
                Editable=FALSE }

    { 1210190189;2;Field  ;
                SourceExpr="Purchaser Code";
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                           END;

                ShowMandatory=PurchaserCodeMandatory }

    { 1210190191;2;Field  ;
                SourceExpr="Name Purchaser";
                Importance=Standard;
                Editable=FALSE }

    { 1100485082;2;Field  ;
                SourceExpr=Expediter;
                Importance=Additional;
                OnValidate=BEGIN
                             ExpediterOnAfterValidate;
                           END;

                ShowMandatory=ExpediterMandatory }

    { 1100485084;2;Field  ;
                SourceExpr="Name Expediter";
                Importance=Additional;
                Editable=FALSE }

    { 1100485087;2;Field  ;
                SourceExpr=Adviser;
                Importance=Additional;
                OnValidate=BEGIN
                             AdviserOnAfterValidate;
                           END;

                ShowMandatory=AdviserMandatory }

    { 1100485089;2;Field  ;
                SourceExpr="Name Adviser";
                Importance=Additional;
                Editable=FALSE }

    { 1100525054;2;Field  ;
                SourceExpr="Salesperson Code";
                Importance=Additional;
                ShowMandatory=SalespersonCodeMandatory }

    { 1100525056;2;Field  ;
                SourceExpr="Salesperson Name";
                Importance=Additional;
                Editable=FALSE }

    { 1905601301;1;Group  ;
                CaptionML=ENU=Budget }

    { 1210190137;2;Field  ;
                SourceExpr="Budget Fixed";
                Importance=Standard }

    { 1210190136;2;Field  ;
                SourceExpr="Version Date";
                Importance=Standard;
                ShowMandatory=VersionDateMandatory }

    { 1100525014;2;Field  ;
                SourceExpr="Prognosis Level";
                Importance=Additional }

    { 1100485086;2;Field  ;
                SourceExpr="Prognosis per Element";
                Importance=Additional }

    { 1100525010;2;Field  ;
                SourceExpr="Progress on base of Tender";
                Importance=Additional;
                OnValidate=BEGIN
                             ProgressonbaseofTenderOnAfterV;
                           END;
                            }

    { 1100525012;2;Field  ;
                SourceExpr="Progress Registry (PTE)";
                Importance=Additional;
                Editable=ProgressRegistryPTEEditable }

    { 1210190139;2;Field  ;
                SourceExpr="Progress Method";
                Importance=Additional }

    { 1210190138;2;Field  ;
                SourceExpr="Progress Registry";
                Importance=Additional;
                Editable="Progress RegistryEditable" }

    { 1210190004;2;Field  ;
                SourceExpr="Progress from Instal. Progress";
                Importance=Additional }

    { 1210190140;2;Field  ;
                SourceExpr="Default Rate Code";
                Importance=Additional;
                ShowMandatory=DefaultRateCodeMandatory }

    { 1100525023;2;Field  ;
                SourceExpr="Element per Installment";
                Importance=Additional }

    { 1100485047;2;Field  ;
                SourceExpr="Summary Sheet Project";
                Importance=Additional;
                ShowMandatory=SummarySheetProjectMandatory }

    { 1100485049;2;Field  ;
                SourceExpr="Summary Sheet Contract";
                Importance=Additional;
                ShowMandatory=SummarySheetContractMandatory }

    { 1100525103;2;Field  ;
                SourceExpr="Summary Sheet Contract 2";
                Importance=Additional;
                ShowMandatory=SummarySheetContract2Mandatory }

    { 1100485053;2;Field  ;
                SourceExpr="Summary Sheet Option";
                Importance=Additional;
                ShowMandatory=SummarySheetOptionMandatory }

    { 1100485109;2;Field  ;
                SourceExpr="Excl. from Project Control";
                Importance=Additional }

    { 1100525021;2;Field  ;
                SourceExpr="Created from Service Loc. No.";
                Importance=Additional;
                ShowMandatory=CreatedfromServiceLocNoMandatory }

    { 1100525022;2;Field  ;
                SourceExpr="Forecast Level";
                Importance=Additional }

    { 1905223301;1;Group  ;
                CaptionML=ENU=Dates }

    { 1210190151;2;Field  ;
                SourceExpr="Creation Date";
                Importance=Standard;
                Editable=FALSE;
                ShowMandatory=CreationDateMandatory }

    { 1210190150;2;Field  ;
                SourceExpr="Last Date Modified";
                Importance=Standard;
                Editable=FALSE;
                ShowMandatory=LastDateModifiedMandatory }

    { 1210190152;2;Field  ;
                SourceExpr="Modified by";
                Importance=Standard;
                ShowMandatory=ModifiedbyMandatory }

    { 1210190153;2;Field  ;
                SourceExpr="Status Modification Date";
                ShowMandatory=StatusModificationDateMandatory }

    { 1210190155;2;Field  ;
                SourceExpr="Starting Date";
                ShowMandatory=StartingDateMandatory }

    { 1210190157;2;Field  ;
                SourceExpr="Ending Date";
                ShowMandatory=EndingDateMandatory }

    { 1210190161;2;Field  ;
                SourceExpr="Technical Finished Date";
                Editable="Technical Finished DateEDITABL";
                ShowMandatory=TechnicalFinishedDateMandatory }

    { 1100485010;2;Field  ;
                SourceExpr="Posting Date Closing";
                ShowMandatory=PostingDateClosingMandatory }

    { 1100485137;2;Field  ;
                SourceExpr="Archive Location Documents";
                Importance=Additional;
                OnAssistEdit=BEGIN
                               AssistEditProjFolder;
                             END;

                ShowMandatory=ArchiveLocationDocumentsMandatory }

    { 1100525045;2;Field  ;
                SourceExpr="Archive Location";
                Importance=Additional;
                ShowMandatory=ArchiveLocationMandatory }

    { 1100525064;2;Field  ;
                CaptionML=ENU=Liquidity Prognosis;
                SourceExpr="Liquidity Prognosis";
                Importance=Additional }

    { 1210190039;2;Field  ;
                SourceExpr="Language Code";
                ShowMandatory=LanguageCodeMandatory }

    { 1100525043;2;Field  ;
                SourceExpr=Blocked;
                Importance=Standard }

    { 1210190018;2;Field  ;
                SourceExpr="End Date Guarantee";
                ShowMandatory=EndDateGuaranteeMandatory }

    { 1100525066;2;Field  ;
                SourceExpr="Element Fixed" }

    { 1100485073;2;Field  ;
                SourceExpr="Posting Element Mandatory";
                Importance=Standard }

    { 1100525016;2;Field  ;
                SourceExpr="Project Planning Activities";
                Importance=Additional }

    { 1210190026;2;Field  ;
                SourceExpr="Available as Reference" }

    { 1100529000;2;Field  ;
                SourceExpr="FSC Type Code";
                ShowMandatory=FSCTypeCodeMandatory }

    { 1100409004;2;Field  ;
                SourceExpr="Change Request No.";
                ShowMandatory=ChangeRequestNoMandatory }

    { 1100409005;2;Field  ;
                SourceExpr="Change Request Description";
                Importance=Additional }

    { 1100485023;2;Group  ;
                CaptionML=ENU=Default Data Purchase Action }

    { 1100485019;3;Field  ;
                SourceExpr="Requested Quote Receipt Date";
                Importance=Additional;
                ShowMandatory=RequestedQuoteReceiptDateMandatory }

    { 1100485021;3;Field  ;
                SourceExpr="Vendors React before";
                Importance=Additional;
                ShowMandatory=VendorsReactbeforeMandatory }

    { 1900189601;1;Group  ;
                CaptionML=ENU=Receipt }

    { 1100485009;2;Field  ;
                SourceExpr=Deliver;
                Importance=Promoted }

    { 1100485016;2;Field  ;
                SourceExpr="Ship To Location";
                Importance=Promoted;
                ShowMandatory=ShipToLocationMandatory }

    { 1100409001;2;Field  ;
                SourceExpr="Use Starting Date ProjectElem" }

    { 1100485153;2;Field  ;
                SourceExpr="Job Inventory Location/Shelf";
                Importance=Additional;
                Enabled=JobInventoryLocationShelfEnabl }

    { 1100485155;2;Field  ;
                SourceExpr="Job Inventory By Stock Release";
                Importance=Additional;
                Enabled=JobInventoryByStockReleaseEnab }

    { 1100528500;2;Field  ;
                SourceExpr="Service Warranty Code";
                Importance=Additional;
                ShowMandatory=ServiceWarrantyCodeMandatory }

    { 1905885101;1;Group  ;
                CaptionML=ENU=Invoicing }

    { 1210190102;2;Field  ;
                SourceExpr="Contract Amount";
                Importance=Promoted }

    { 1100485007;2;Field  ;
                SourceExpr="Plot Price";
                Importance=Additional }

    { 1210190103;2;Field  ;
                SourceExpr="VAT Bus. Posting Group";
                Importance=Additional;
                ShowMandatory=VATBusPostingGroupMandatory }

    { 1100485110;2;Field  ;
                SourceExpr="Calculate B Amounts based on";
                Importance=Additional;
                Editable=CalculateBAmountsbasedonEditab }

    { 1210190105;2;Field  ;
                SourceExpr="% Labor";
                Importance=Additional;
                Editable="% LaborEditable";
                ShowMandatory=LaborMandatory }

    { 1210190107;2;Field  ;
                SourceExpr="% to B Account";
                Importance=Additional;
                Editable="% to B AccountEditable";
                ShowMandatory=ToBAccountMandatory }

    { 1210190109;2;Field  ;
                SourceExpr="Affiliation No.";
                Importance=Additional;
                Editable="Affiliation No.Editable";
                ShowMandatory=AffiliationNoMandatory }

    { 1210190111;2;Field  ;
                SourceExpr="SFB Code";
                Importance=Additional;
                ShowMandatory=SFBCodeMandatory }

    { 1210190113;2;Field  ;
                SourceExpr="Location Type 1";
                Importance=Additional }

    { 1210190115;2;Field  ;
                SourceExpr="Location Type 2";
                Importance=Additional }

    { 1210190003;2;Field  ;
                SourceExpr="Print Manday Register" }

    { 1100485043;2;Field  ;
                SourceExpr="Invoice Layout Code";
                Importance=Additional;
                ShowMandatory=InvoiceLayoutCodeMandatory }

    { 1100525008;2;Field  ;
                SourceExpr="Rental Unit Invoice by";
                Importance=Additional;
                Enabled=RentalUnitInvoiceByEnabled }

    { 1100485145;2;Field  ;
                SourceExpr="Price List";
                Importance=Additional;
                ShowMandatory=PriceListMandatory }

    { 1100485146;2;Field  ;
                SourceExpr="Ref. Date Unit Price";
                Importance=Additional;
                ShowMandatory=RefDateUnitPriceMandatory }

    { 1100485055;2;Field  ;
                SourceExpr=Revision;
                Importance=Additional;
                OnValidate=BEGIN
                             RevisionOnAfterValidate;
                           END;
                            }

    { 1100485057;2;Field  ;
                SourceExpr="Revision Rule";
                Importance=Additional;
                Editable="Revision RuleEditable";
                ShowMandatory=RevisionRuleMandatory }

    { 1100485059;2;Field  ;
                SourceExpr="Reference Date Revision";
                Importance=Additional;
                ShowMandatory=ReferenceDateRevisionMandatory }

    { 1100485093;2;Field  ;
                SourceExpr="Long Lease";
                Importance=Additional }

    { 1100525059;2;Field  ;
                SourceExpr="Internal Project";
                Importance=Additional }

    { 1100529001;2;Field  ;
                SourceExpr="Master Company";
                Importance=Additional;
                ShowMandatory=MasterCompanyMandatory }

    { 1100525061;2;Field  ;
                SourceExpr="Master Project";
                Importance=Additional;
                ShowMandatory=MasterProjectMandatory }

    { 1210190020;2;Field  ;
                SourceExpr="Master Element";
                Importance=Additional;
                ShowMandatory=MasterElementMandatory }

    { 1100525068;2;Field  ;
                SourceExpr="Cost Object Inter Project Cost";
                Importance=Additional;
                ShowMandatory=CostObjectInterProjectCostMandatory }

    { 1100525070;2;Field  ;
                SourceExpr="Cost Object Inter Project Rev";
                Importance=Additional;
                ShowMandatory=CostObjectInterProjectRevMandatory }

    { 1210190167;2;Field  ;
                SourceExpr=Text;
                MultiLine=Yes;
                ShowMandatory=TextMandatory }

    { 1100285100;2;Field  ;
                SourceExpr="Invoiced (ready)" }

    { 1907613601;1;Group  ;
                CaptionML=ENU=Buyer Management }

    { 1210190058;2;Field  ;
                SourceExpr="Housebuilding Project";
                Importance=Promoted;
                OnValidate=BEGIN
                             BuyerManagementEnabled := "Housebuilding Project";
                           END;
                            }

    { 1210190055;2;Field  ;
                SourceExpr="Due Date Plot";
                Importance=Additional;
                ShowMandatory=DueDatePlotMandatory }

    { 1210190056;2;Field  ;
                SourceExpr="Interest Before Contract Date";
                Importance=Additional;
                ShowMandatory=InterestBeforeContractDateMandatory }

    { 1210190057;2;Field  ;
                SourceExpr="Interest Before Transfer Date";
                Importance=Additional;
                ShowMandatory=InterestBeforeTransferDateMandatory }

    { 1210190059;2;Field  ;
                SourceExpr="Payment Terms Code";
                Importance=Standard;
                ShowMandatory=PaymentTermsCodeMandatory }

    { 1210190061;2;Field  ;
                SourceExpr="VAT Prod. P. Group Inst. Int.";
                Importance=Standard;
                ShowMandatory=VATProdPGroupInstIntMandatory }

    { 1210190078;2;Field  ;
                SourceExpr="Public notary";
                Importance=Additional;
                ShowMandatory=PublicnotaryMandatory }

    { 1100485045;2;Field  ;
                SourceExpr="Method Last Installment" }

    { 1210190083;2;Field  ;
                SourceExpr="Withhold %";
                ShowMandatory=WithholdMandatory }

    { 1210190095;2;Field  ;
                SourceExpr="Budget Level for Options";
                Importance=Standard;
                OnValidate=BEGIN
                             BudgetLevelforOptionsOnAfterVa;
                           END;
                            }

    { 1210190085;2;Field  ;
                SourceExpr="Days Notify Buyer";
                Importance=Additional;
                ShowMandatory=DaysNotifyBuyerMandatory }

    { 1210190087;2;Field  ;
                SourceExpr="Days Repair Before";
                Importance=Additional;
                ShowMandatory=DaysRepairBeforeMandatory }

    { 1210190089;2;Field  ;
                SourceExpr="Days Delayed Repair";
                Importance=Additional;
                ShowMandatory=DaysDelayedRepairMandatory }

    { 1210190091;2;Field  ;
                SourceExpr="Days Notify Guarantee Fund";
                Importance=Additional;
                ShowMandatory=DaysNotifyGuaranteeFundMandatory }

    { 1210190093;2;Field  ;
                SourceExpr="Days End Service Period";
                Importance=Additional;
                ShowMandatory=DaysEndServicePeriodMandatory }

    { 1210190009;2;Field  ;
                SourceExpr="Guarantee Period";
                ShowMandatory=GuaranteePeriodMandatory }

    { 1100485035;2;Field  ;
                SourceExpr="Conveyance Tax";
                Importance=Additional }

    { 1100485037;2;Field  ;
                SourceExpr="Ready for Building Date";
                ShowMandatory=ReadyforBuildingDateMandatory }

    { 1100525091;1;Group  ;
                CaptionML=ENU=Major Maintenance and Renovation }

    { 1100525102;2;Field  ;
                SourceExpr="Maintenance And Renovation" }

    { 1100525101;2;Field  ;
                SourceExpr="Summary Sheet MMR";
                ShowMandatory=SummarySheetMMRMandatory }

    { 1100525100;2;Field  ;
                SourceExpr="Budget Level for Settl. Q." }

    { 1905052801;1;Group  ;
                CaptionML=ENU=Integration }

    { 1210190047;2;Field  ;
                SourceExpr="Joint Company";
                Editable="Joint CompanyEditable";
                ShowMandatory=JointCompanyMandatory }

    { 1210190046;2;Field  ;
                SourceExpr="Joint Job No.";
                ShowMandatory=JointJobNoMandatory }

    { 1100485030;2;Field  ;
                SourceExpr="Options Sold By" }

    { 1100485061;2;Field  ;
                SourceExpr="Disable Export Losa (COBRA)";
                Visible=DisableExportLosaCOBRAVisible }

    { 1100485064;2;Field  ;
                SourceExpr="SharePoint Phase";
                Importance=Additional }

    { 1100485069;2;Field  ;
                SourceExpr="SharePoint Status";
                Importance=Additional;
                Editable=FALSE }

    { 1100485098;2;Field  ;
                SourceExpr="Phase 1 Company";
                Importance=Additional;
                ShowMandatory=Phase1CompanyMandatory }

    { 1100485100;2;Field  ;
                SourceExpr="Phase 2 Company";
                Importance=Additional;
                ShowMandatory=Phase2CompanyMandatory }

    { 1100485102;2;Field  ;
                SourceExpr="Phase 3 Company";
                Importance=Additional;
                ShowMandatory=Phase3CompanyMandatory }

    { 1100485104;2;Field  ;
                SourceExpr="Make SharePoint Site";
                Importance=Promoted }

    { 1100485106;2;Field  ;
                SourceExpr="SharePoint Site Generated";
                Importance=Promoted }

    { 1100485108;2;Field  ;
                SourceExpr="SharePoint Site URL";
                ShowMandatory=SharePointSiteURLMandatory }

    { 1100528308;2;Field  ;
                SourceExpr="Quote Subsite Generated";
                Importance=Promoted }

    { 1100485113;2;Field  ;
                SourceExpr="Save Int. Doc In SharePoint";
                Importance=Additional }

    { 1906901101;1;Group  ;
                CaptionML=ENU=Price and Discount }

    { 1100525090;2;Field  ;
                SourceExpr="Currency Code";
                OnValidate=BEGIN
                             //DP00883
                             CurrPage.SAVERECORD;
                             UpdateBudgetRate;
                           END;

                ShowMandatory=CurrencyCodeMandatory }

    { 1100525093;2;Field  ;
                SourceExpr="Reference Date (Currency)";
                OnValidate=BEGIN
                             //DP00883
                             CurrPage.SAVERECORD;
                             UpdateBudgetRate;
                           END;

                ShowMandatory=ReferenceDateCurrencyMandatory }

    { 1100485115;2;Field  ;
                SourceExpr="Reference Date (Item)";
                ShowMandatory=ReferenceDateItemMandatory }

    { 1100485130;2;Field  ;
                SourceExpr="Reference Date (Customer)";
                Importance=Additional }

    { 1100485117;2;Field  ;
                SourceExpr="Reference Date (Company)";
                Importance=Additional }

    { 1100525028;2;Field  ;
                SourceExpr="Priority Purch Disc Term Grp 0";
                ShowMandatory=PriorityPurchDiscTermGrp0Mandatory }

    { 1100525039;2;Field  ;
                SourceExpr="Purch Discount Term Group 1";
                ShowMandatory=PurchDiscountTermGroup1Mandatory }

    { 1100525027;2;Field  ;
                SourceExpr="Priority Purch Disc Term Grp 1";
                ShowMandatory=PriorityPurchDiscTermGrp1Mandatory }

    { 1100525037;2;Field  ;
                SourceExpr="Purch Discount Term Group 2";
                ShowMandatory=PurchDiscountTermGroup2Mandatory }

    { 1100525026;2;Field  ;
                SourceExpr="Priority Purch Disc Term Grp 2";
                ShowMandatory=PriorityPurchDiscTermGrp2Mandatory }

    { 1100525025;2;Field  ;
                SourceExpr="Priority Sales Disc Term Grp 0";
                Importance=Additional;
                ShowMandatory=PrioritySalesDiscTermGrp0Mandatory }

    { 1100525033;2;Field  ;
                SourceExpr="Sales Discount Term Group 1";
                Importance=Additional;
                OnValidate=BEGIN
                             //>>ENH-007 140122 DJ ITERO
                             IF "Sales Discount Term Group 1" <> '' THEN
                               IF CustPriceList.GET("Price List Code") THEN
                                 IF CustPriceList."Net Price List" THEN
                                   ERROR(Text50001);
                             //<<
                           END;

                OnLookup=VAR
                           lvVendorCode@1100409000 : Code[15];
                           lvDiscTermGroupPage@1100409001 : Page 11071923;
                           lvDiscTermGroupRec@1100409002 : Record 11012338;
                           lvDiscTermHistory@1100409004 : Record 11012312;
                           lvPriceHistoryTradeItemRec@1100409003 : Record 11012315;
                           lvCustPriceList@1100409006 : Record 11128273;
                         BEGIN
                           //>> 160304 ITERO.AC RFC084 Filter Discount Term Groups based on selected customer Pricelist

                           IF "Price List Code" <> '' THEN BEGIN
                             // Check if the Customer Pricelist is a Net Price List
                             IF lvCustPriceList.GET("Price List Code") THEN BEGIN
                               IF lvCustPriceList."Net Price List" THEN
                                 EXIT(FALSE);
                             END;

                             // Get Vendor Code from selected Customer Pricelist
                             lvPriceHistoryTradeItemRec.SETCURRENTKEY( "Price List Code","Item Code","Starting Date" );
                             lvPriceHistoryTradeItemRec.SETRANGE("Price List Code", "Price List Code");
                             IF lvPriceHistoryTradeItemRec.FINDFIRST THEN
                               lvVendorCode := lvPriceHistoryTradeItemRec.Vendor
                             ELSE
                               EXIT(FALSE);

                             lvDiscTermGroupRec.SETRANGE("Price List Code", "Price List Code");

                             // This check is done in order to get records even if there is no data entered in "Price List Code"
                             // The system will still use Vendor filtering
                             IF lvDiscTermGroupRec.ISEMPTY THEN
                               lvDiscTermGroupRec.SETRANGE("Price List Code");

                             // For each Discount Term Group, check if Discount Term History exists (for current Vendor)
                             IF (lvVendorCode <> '') AND (lvDiscTermGroupRec.FINDSET(FALSE)) THEN BEGIN
                               REPEAT
                                 lvDiscTermHistory.SETRANGE(Vendor,lvVendorCode);
                                 lvDiscTermHistory.SETRANGE("Discount Level", lvDiscTermGroupRec.Level);
                                 lvDiscTermHistory.SETRANGE("Discount Reference", lvDiscTermGroupRec.Code);
                                 IF NOT lvDiscTermHistory.ISEMPTY THEN
                                   lvDiscTermGroupRec.MARK(TRUE);
                               UNTIL lvDiscTermGroupRec.NEXT = 0;

                               lvDiscTermGroupRec.MARKEDONLY(TRUE);

                             END ELSE BEGIN
                               EXIT(FALSE);
                             END;

                             IF PAGE.RUNMODAL(0, lvDiscTermGroupRec) = ACTION::LookupOK THEN BEGIN
                               Text := FORMAT(lvDiscTermGroupRec.Code);
                               EXIT(TRUE);
                             END;

                           END ELSE BEGIN  // No Customer Pricelist selected
                             EXIT(FALSE);
                           END;
                           //<< 160304 ITERO.AC RFC084
                         END;

                ShowMandatory=SalesDiscountTermGroup1Mandatory }

    { 1100525024;2;Field  ;
                SourceExpr="Priority Sales Disc Term Grp 1";
                Importance=Additional;
                ShowMandatory=PrioritySalesDiscTermGrp1Mandatory }

    { 1100525031;2;Field  ;
                SourceExpr="Sales Discount Term Group 2";
                Importance=Additional;
                OnValidate=BEGIN
                             //>>ENH-007 140122 DJ ITERO
                             IF "Sales Discount Term Group 2" <> '' THEN
                               IF CustPriceList.GET("Price List Code") THEN
                                 IF CustPriceList."Net Price List" THEN
                                   ERROR(Text50001);
                             //<<
                           END;

                ShowMandatory=SalesDiscountTermGroup2Mandatory }

    { 1100525029;2;Field  ;
                SourceExpr="Priority Sales Disc Term Grp 2";
                Importance=Additional;
                ShowMandatory=PrioritySalesDiscTermGrp2Mandatory }

    { 1100285003;2;Field  ;
                SourceExpr="Price List Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             //>>ENH-007 140122 DJ ITERO
                             IF ("Sales Discount Term Group 1" <> '') OR ("Sales Discount Term Group 2" <> '') THEN
                               IF CustPriceList.GET("Price List Code") THEN
                                 IF CustPriceList."Net Price List" THEN
                                   ERROR(Text50001);
                             //<<
                           END;
                            }

    { 1210190001;0;Container;
                ContainerType=FactBoxArea }

    { 1100409000;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                PartType=Page }

    { 1210190019;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page11130124;
                PartType=Page }

    { 1210190002;1;Part   ;
                SubPageLink=Project No.=FIELD(No.);
                PagePartID=Page11130001;
                PartType=Page }

    { 1210190011;1;Part   ;
                SubPageLink=Project No.=FIELD(No.),
                            Principal=FIELD(Bill-to Customer No.);
                PagePartID=Page11130104;
                PartType=Page }

    { 1100288000;1;Part   ;
                SubPageLink=Project No.=FIELD(No.);
                PagePartID=Page11128026;
                PartType=Page }

    { 1100528601;1;Part   ;
                AccessByPermission=Page 11130542=X;
                CaptionML=ENU=Service Orders;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page11130241;
                PartType=Page }

  }
  CODE
  {
    VAR
      InvoiceCurrencyCodeEditable@19003397 : Boolean INDATASET;
      CurrencyCodeEditable@19053147 : Boolean INDATASET;
      Text11012000@11012008 : TextConst 'ENU=For this Project are no Sub Projects present';
      ProjSetUp@1210190002 : Record 315;
      InventSetupRec@1100485011 : Record 313;
      ProjPrincipRec@11012002 : Record 11012005;
      ProjRec@11012004 : Record 11072003;
      RentalUnitRec@1210190004 : Record 11012940;
      ProjInstalmRec@1210190020 : Record 11012018;
      PurchSetup@1100485003 : Record 312;
      GenerateProjInstallm@1210190025 : Codeunit 11012007;
      Text11012002@1210190016 : TextConst 'ENU=There are already Budget Lines of Options present. Build Budget for Options again ?';
      PrintDoc@1210190027 : Codeunit 229;
      Text11012003@1100485000 : TextConst 'ENU=Field SharePoint Project Phase is empty.';
      AdrsRec@1100485001 : Record 222;
      NumAdrs@1100485002 : Text[30];
      Text11012006@1100485009 : TextConst 'ENU=A Sharepoint Site is alread made';
      SharepointCU@1100485010 : Codeunit 11020210;
      SharepSetup@1100485006 : Record 11012730;
      Text11012007@1100525001 : TextConst 'ENU=Add Settlement Sheet ?';
      DPA_IsHardFilter@1100000999 : Boolean;
      InternalChargeMgt@1210190003 : Codeunit 11012265;
      "Progress RegistryEditable"@19006260 : Boolean INDATASET;
      ProgressRegistryPTEEditable@19042199 : Boolean INDATASET;
      "Revision RuleEditable"@19048109 : Boolean INDATASET;
      VATIndicatorPurchaseEditable@19077423 : Boolean INDATASET;
      "% LaborEditable"@19078728 : Boolean INDATASET;
      "% to B AccountEditable"@19001286 : Boolean INDATASET;
      CalculateBAmountsbasedonEditab@19056189 : Boolean INDATASET;
      "Affiliation No.Editable"@19034247 : Boolean INDATASET;
      "Main ProjectEditable"@19070977 : Boolean INDATASET;
      MapPointVisible@19022708 : Boolean INDATASET;
      DisableExportLosaCOBRAVisible@19015054 : Boolean INDATASET;
      "Joint CompanyEditable"@19026032 : Boolean INDATASET;
      JobInventoryLocationShelfEnabl@19017758 : Boolean INDATASET;
      JobInventoryByStockReleaseEnab@19029955 : Boolean INDATASET;
      "Technical Finished DateEditabl"@1100525101 : Boolean INDATASET;
      RentalUnitInvoiceByEnabled@1100525002 : Boolean INDATASET;
      Text11012008@1100409000 : TextConst 'ENU=%1 for %2 %3 not found.';
      "*** 4PSSE"@1100285001 : TextConst;
      Text50000@1100285000 : TextConst 'ENU=Do you want create a sub project to project %1?';
      CustPriceList@1100285500 : Record 11128273;
      Text50001@1100285501 : TextConst 'ENU=Net price list cannot be combined with sales discount letter';
      Text11128000@1100285502 : TextConst 'ENU=A sub project must have a main project, please select the main project.';
      BuyerManagementEnabled@1100525000 : Boolean INDATASET;
      Description2Mandatory@1100528400 : Boolean;
      ProjectAddressCodeMandatory@1100528401 : Boolean;
      AddressMandatory@1100528402 : Boolean;
      Address2Mandatory@1100528403 : Boolean;
      PostCodeMandatory@1100528404 : Boolean;
      CityMandatory@1100528405 : Boolean;
      CountryRegionCodeMandatory@1100528406 : Boolean;
      PhoneNoMandatory@1100528407 : Boolean;
      FaxNoMandatory@1100528408 : Boolean;
      HomePageMandatory@1100528409 : Boolean;
      SearchDescriptionMandatory@1100528410 : Boolean;
      BlockingCodeMandatory@1100528411 : Boolean;
      TerritoryCodeMandatory@1100528412 : Boolean;
      TypeMandatory@1100528413 : Boolean;
      DisciplineMandatory@1100528414 : Boolean;
      GlobalDimension1CodeMandatory@1100528415 : Boolean;
      MainProjectMandatory@1100528416 : Boolean;
      ProjectSupplierMandatory@1100528417 : Boolean;
      EstimatorMandatory@1100528418 : Boolean;
      SiteManagerMandatory@1100528419 : Boolean;
      ProjectManagerMandatory@1100528420 : Boolean;
      ProjectEngineerMandatory@1100528421 : Boolean;
      ProjectAdministratorMandatory@1100528422 : Boolean;
      SupervisorMandatory@1100528423 : Boolean;
      BuyercontactMandatory@1100528424 : Boolean;
      PurchaserCodeMandatory@1100528425 : Boolean;
      ExpediterMandatory@1100528426 : Boolean;
      AdviserMandatory@1100528427 : Boolean;
      SalespersonCodeMandatory@1100528428 : Boolean;
      VersionDateMandatory@1100528429 : Boolean;
      DefaultRateCodeMandatory@1100528430 : Boolean;
      SummarySheetProjectMandatory@1100528431 : Boolean;
      SummarySheetContractMandatory@1100528432 : Boolean;
      SummarySheetContract2Mandatory@1100528433 : Boolean;
      SummarySheetOptionMandatory@1100528434 : Boolean;
      CreatedfromServiceLocNoMandatory@1100528435 : Boolean;
      CreationDateMandatory@1100528436 : Boolean;
      LastDateModifiedMandatory@1100528437 : Boolean;
      ModifiedbyMandatory@1100528438 : Boolean;
      StatusModificationDateMandatory@1100528439 : Boolean;
      StartingDateMandatory@1100528440 : Boolean;
      EndingDateMandatory@1100528441 : Boolean;
      TechnicalFinishedDateMandatory@1100528442 : Boolean;
      PostingDateClosingMandatory@1100528443 : Boolean;
      ArchiveLocationDocumentsMandatory@1100528444 : Boolean;
      ArchiveLocationMandatory@1100528445 : Boolean;
      LanguageCodeMandatory@1100528446 : Boolean;
      EndDateGuaranteeMandatory@1100528447 : Boolean;
      FSCTypeCodeMandatory@1100528448 : Boolean;
      ChangeRequestNoMandatory@1100528449 : Boolean;
      RequestedQuoteReceiptDateMandatory@1100528450 : Boolean;
      VendorsReactbeforeMandatory@1100528451 : Boolean;
      ShipToLocationMandatory@1100528452 : Boolean;
      ServiceWarrantyCodeMandatory@1100528453 : Boolean;
      VATBusPostingGroupMandatory@1100528454 : Boolean;
      LaborMandatory@1100528455 : Boolean;
      ToBAccountMandatory@1100528456 : Boolean;
      AffiliationNoMandatory@1100528457 : Boolean;
      SFBCodeMandatory@1100528458 : Boolean;
      InvoiceLayoutCodeMandatory@1100528459 : Boolean;
      PriceListMandatory@1100528460 : Boolean;
      RefDateUnitPriceMandatory@1100528461 : Boolean;
      RevisionRuleMandatory@1100528462 : Boolean;
      ReferenceDateRevisionMandatory@1100528463 : Boolean;
      MasterCompanyMandatory@1100528464 : Boolean;
      MasterProjectMandatory@1100528465 : Boolean;
      MasterElementMandatory@1100528466 : Boolean;
      CostObjectInterProjectCostMandatory@1100528467 : Boolean;
      CostObjectInterProjectRevMandatory@1100528468 : Boolean;
      TextMandatory@1100528469 : Boolean;
      DueDatePlotMandatory@1100528470 : Boolean;
      InterestBeforeContractDateMandatory@1100528471 : Boolean;
      InterestBeforeTransferDateMandatory@1100528472 : Boolean;
      PaymentTermsCodeMandatory@1100528473 : Boolean;
      VATProdPGroupInstIntMandatory@1100528474 : Boolean;
      PublicnotaryMandatory@1100528475 : Boolean;
      WithholdMandatory@1100528476 : Boolean;
      DaysNotifyBuyerMandatory@1100528477 : Boolean;
      DaysRepairBeforeMandatory@1100528478 : Boolean;
      DaysDelayedRepairMandatory@1100528479 : Boolean;
      DaysNotifyGuaranteeFundMandatory@1100528480 : Boolean;
      DaysEndServicePeriodMandatory@1100528481 : Boolean;
      GuaranteePeriodMandatory@1100528482 : Boolean;
      ReadyforBuildingDateMandatory@1100528483 : Boolean;
      SummarySheetMMRMandatory@1100528484 : Boolean;
      JointCompanyMandatory@1100528485 : Boolean;
      JointJobNoMandatory@1100528486 : Boolean;
      Phase1CompanyMandatory@1100528487 : Boolean;
      Phase2CompanyMandatory@1100528488 : Boolean;
      Phase3CompanyMandatory@1100528489 : Boolean;
      SharePointSiteURLMandatory@1100528490 : Boolean;
      CurrencyCodeMandatory@1100528491 : Boolean;
      ReferenceDateCurrencyMandatory@1100528492 : Boolean;
      ReferenceDateItemMandatory@1100528493 : Boolean;
      PriorityPurchDiscTermGrp0Mandatory@1100528494 : Boolean;
      PurchDiscountTermGroup1Mandatory@1100528495 : Boolean;
      PriorityPurchDiscTermGrp1Mandatory@1100528496 : Boolean;
      PurchDiscountTermGroup2Mandatory@1100528497 : Boolean;
      PriorityPurchDiscTermGrp2Mandatory@1100528498 : Boolean;
      PrioritySalesDiscTermGrp0Mandatory@1100528499 : Boolean;
      SalesDiscountTermGroup1Mandatory@1100528500 : Boolean;
      PrioritySalesDiscTermGrp1Mandatory@1100528501 : Boolean;
      SalesDiscountTermGroup2Mandatory@1100528502 : Boolean;
      PrioritySalesDiscTermGrp2Mandatory@1100528503 : Boolean;

    LOCAL PROCEDURE CurrencyCheck@3();
    BEGIN
      IF "Currency Code" <> ''THEN
        InvoiceCurrencyCodeEditable := FALSE
      ELSE
        InvoiceCurrencyCodeEditable := TRUE;

      IF "Invoice Currency Code" <> ''THEN
        CurrencyCodeEditable := FALSE
      ELSE
        CurrencyCodeEditable := TRUE;
    END;

    LOCAL PROCEDURE BilltoCustomerNoOnAfterValidat@19044114();
    BEGIN
      CurrPage.UPDATE;
    END;

    PROCEDURE OptionBudget@1210190006();
    VAR
      OptionBudget@1210190000 : Record 11012503;
    BEGIN
      //**4PS
      OptionBudget.FILTERGROUP(2);
      OptionBudget.SETRANGE("Project No.", "No.");
      OptionBudget.FILTERGROUP(0);
      OptionBudget.SETRANGE("Plot No.", '');

      PAGE.RUNMODAL(PAGE::"Option Budget", OptionBudget);
    END;

    PROCEDURE Setfilter@1210190000(lProjCde@1210190000 : Code[20]);
    BEGIN
      //**4PS
      FILTERGROUP(2);
      SETRANGE("No.",lProjCde);
      FILTERGROUP(0);
    END;

    PROCEDURE GenerateSharePointSite@1100485002();
    BEGIN
      //**4PS
      SharepointCU.GenerateSharePointSite(Rec);
    END;

    LOCAL PROCEDURE UpdChangedActCapacityByDay@1100528400();
    VAR
      RequestedActivCapbyDay@1100409000 : Record 11125709;
      RequestActivityCapacityMgt@1100528400 : Codeunit 11125707;
      AssignActivityCapacityMgt@1100528401 : Codeunit 11125708;
    BEGIN
      //**4PS
      IF NOT RequestedActivCapbyDay.READPERMISSION THEN //call T000465
        EXIT;

      RequestActivityCapacityMgt.UpdAllReqActCapChangedByGPP;
      AssignActivityCapacityMgt.UpdAllAssActCapChangedByGPP;
    END;

    LOCAL PROCEDURE ProjectTypeOnAfterValidate@19063423();
    BEGIN
      //**4PS
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SingleMainSubProjectOnAfterVal@19021142();
    BEGIN
      //**4PS
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE SettlementMethodOnAfterValidat@19029111();
    BEGIN
      //**4PS
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE ContractTypeOnAfterValidate@19077313();
    BEGIN
      //**4PS
      CurrPage.UPDATE(TRUE);
      IF "Contract Type" = "Contract Type"::Maincontracting THEN BEGIN
        "% Labor" := 0;
        "% to B Account" := 0;
        "Affiliation No." := '';
      END;
    END;

    LOCAL PROCEDURE SiteManagerOnAfterValidate@19074057();
    BEGIN
      //**4PS
      CALCFIELDS("Name Site Manager");
      CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE EstimatorOnAfterValidate@19077849();
    BEGIN
      //**4PS
      CALCFIELDS("Name Estimator");
      CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE ProjectManagerOnAfterValidate@19053768();
    BEGIN
      //**4PS
      CALCFIELDS("Name Project Manager");
      CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE ProjectEngineerOnAfterValidate@19046031();
    BEGIN
      //**4PS
      CALCFIELDS("Name Project Engineer");
      CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE BuyercontactOnAfterValidate@19022691();
    BEGIN
      //**4PS
      CALCFIELDS("Name Buyer Contact");
      CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE ExpediterOnAfterValidate@19017853();
    BEGIN
      //**4PS
      CALCFIELDS("Name Expediter");
    END;

    LOCAL PROCEDURE AdviserOnAfterValidate@19071762();
    BEGIN
      //**4PS
      CALCFIELDS("Name Adviser");
    END;

    LOCAL PROCEDURE ProgressonbaseofTenderOnAfterV@19067467();
    BEGIN
      //**4PS.sn
      "Progress RegistryEditable" := (NOT "Progress on base of Tender");
      ProgressRegistryPTEEditable := ("Progress on base of Tender");
      //**4PS.en
    END;

    LOCAL PROCEDURE RevisionOnAfterValidate@19054813();
    BEGIN
      //**4PS
      "Revision RuleEditable" := (Revision);
    END;

    LOCAL PROCEDURE BudgetLevelforOptionsOnAfterVa@19031539();
    VAR
      lvBudgetLineRec@1210190000 : Record 11012001;
      lvProjRec@1210190002 : Record 11072003;
      lvCopyOptBudgToBudgetRpt@1210190003 : Report 11012500;
    BEGIN
      //**4PS
      IF "Budget Level for Options" <> xRec."Budget Level for Options" THEN BEGIN
        lvBudgetLineRec.SETRANGE("Project No.", "No.");
        lvBudgetLineRec.SETRANGE(Adjustment, '');
        lvBudgetLineRec.SETRANGE("Extension Contract", '');
        lvBudgetLineRec.SETFILTER(Option, '<>%1', '');
        IF lvBudgetLineRec.FINDFIRST THEN BEGIN
          CurrPage.UPDATE(TRUE);
          COMMIT;
          IF CONFIRM(Text11012002, TRUE) THEN BEGIN
            lvProjRec.SETRANGE("No.", "No.");
            lvCopyOptBudgToBudgetRpt.SETTABLEVIEW(lvProjRec);
            lvCopyOptBudgToBudgetRpt.USEREQUESTPAGE(FALSE);
            lvCopyOptBudgToBudgetRpt.RUNMODAL;
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    VAR
      RecRef@1100528700 : RecordRef;
    BEGIN
      //**4PS
      xRec := Rec;

      NumAdrs := AdrsRec.CheckAvailableAddress("Bill-to Customer No.", 2);  //db, 21-12-06

      "% LaborEditable" := ("Contract Type" = "Contract Type"::Subcontracting);
      "% to B AccountEditable" := ("Contract Type" = "Contract Type"::Subcontracting);
      CalculateBAmountsbasedonEditab := ("Contract Type" = "Contract Type"::Subcontracting);
      "Affiliation No.Editable" := ("Contract Type" = "Contract Type"::Subcontracting);
      "Main ProjectEditable" := ("Single/Main/Sub Project" = "Single/Main/Sub Project"::"Sub Project");

      "Revision RuleEditable" := (Revision);
      BuyerManagementEnabled := "Housebuilding Project";

      RecRef.GETTABLE(Rec);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(FALSE);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode("Global Dimension 1 Code");

      TechnicalFinishedDateOnBeforeI;
      CALCFIELDS(Prospect);
    END;

    LOCAL PROCEDURE AdviserOnAfterInput@19037857(VAR Text@19037858 : Text[1024]);
    BEGIN
      //**4PS
      CALCFIELDS("Name Adviser");
    END;

    LOCAL PROCEDURE TechnicalFinishedDateOnBeforeI@19050996();
    BEGIN
      //**4PS
      "Technical Finished DateEditabl" := (
        ("Project Status" = "Project Status"::"Technical Finished") OR
        ("Project Status" = "Project Status"::"Administrative Finished"));
    END;

    PROCEDURE CheckSingleMainSub@1100285100();
    VAR
      JobLedgerEntry@1100285100 : Record 11072005;
      Text0001@1100285101 : TextConst 'ENU=Not possible to modify field when project (or subproject) has transactions';
      UserSetup@1100285102 : Record 91;
    BEGIN
      //>>160311 ITERO.SB RFC-044 Check if modify Single/Main/Sub-field is ok
      IF UserSetup.GET(USERID) THEN
        IF UserSetup."Project Authoriz. Active" THEN
          EXIT;

      JobLedgerEntry.SETRANGE("Job No.","No.");
      IF NOT JobLedgerEntry.ISEMPTY THEN
        ERROR(Text0001);

      CLEAR(JobLedgerEntry);
      JobLedgerEntry.SETRANGE("Main Project No.","No.");
      IF NOT JobLedgerEntry.ISEMPTY THEN
        ERROR(Text0001);
      //<<
    END;

    LOCAL PROCEDURE FillShowMandatoryVariables@1100528410();
    BEGIN
      //**4PS
      Description2Mandatory := FieldInCompletionControl(FIELDNO("Description 2"));
      ProjectAddressCodeMandatory := FieldInCompletionControl(FIELDNO("Project Address Code"));
      AddressMandatory := FieldInCompletionControl(FIELDNO(Address));
      Address2Mandatory := FieldInCompletionControl(FIELDNO("Address 2"));
      PostCodeMandatory := FieldInCompletionControl(FIELDNO("Post Code"));
      CityMandatory := FieldInCompletionControl(FIELDNO(City));
      CountryRegionCodeMandatory := FieldInCompletionControl(FIELDNO("Country/Region Code"));
      PhoneNoMandatory := FieldInCompletionControl(FIELDNO("Phone No."));
      FaxNoMandatory := FieldInCompletionControl(FIELDNO("Fax No."));
      HomePageMandatory := FieldInCompletionControl(FIELDNO("Home Page"));
      SearchDescriptionMandatory := FieldInCompletionControl(FIELDNO("Search Description"));
      BlockingCodeMandatory := FieldInCompletionControl(FIELDNO("Blocking Code"));
      TerritoryCodeMandatory := FieldInCompletionControl(FIELDNO("Territory Code"));
      TypeMandatory := FieldInCompletionControl(FIELDNO(Type));
      DisciplineMandatory := FieldInCompletionControl(FIELDNO(Discipline));
      GlobalDimension1CodeMandatory := FieldInCompletionControl(FIELDNO("Global Dimension 1 Code"));
      MainProjectMandatory := FieldInCompletionControl(FIELDNO("Main Project"));
      ProjectSupplierMandatory := FieldInCompletionControl(FIELDNO("Project Supplier"));
      EstimatorMandatory := FieldInCompletionControl(FIELDNO(Estimator));
      SiteManagerMandatory := FieldInCompletionControl(FIELDNO("Site Manager"));
      ProjectManagerMandatory := FieldInCompletionControl(FIELDNO("Project Manager"));
      ProjectEngineerMandatory := FieldInCompletionControl(FIELDNO("Project Engineer"));
      ProjectAdministratorMandatory := FieldInCompletionControl(FIELDNO("Project Administrator"));
      SupervisorMandatory := FieldInCompletionControl(FIELDNO(Supervisor));
      BuyercontactMandatory := FieldInCompletionControl(FIELDNO(Buyercontact));
      PurchaserCodeMandatory := FieldInCompletionControl(FIELDNO("Purchaser Code"));
      ExpediterMandatory := FieldInCompletionControl(FIELDNO(Expediter));
      AdviserMandatory := FieldInCompletionControl(FIELDNO(Adviser));
      SalespersonCodeMandatory := FieldInCompletionControl(FIELDNO("Salesperson Code"));
      VersionDateMandatory := FieldInCompletionControl(FIELDNO("Version Date"));
      DefaultRateCodeMandatory := FieldInCompletionControl(FIELDNO("Default Rate Code"));
      SummarySheetProjectMandatory := FieldInCompletionControl(FIELDNO("Summary Sheet Project"));
      SummarySheetContractMandatory := FieldInCompletionControl(FIELDNO("Summary Sheet Contract"));
      SummarySheetContract2Mandatory := FieldInCompletionControl(FIELDNO("Summary Sheet Contract 2"));
      SummarySheetOptionMandatory := FieldInCompletionControl(FIELDNO("Summary Sheet Option"));
      CreatedfromServiceLocNoMandatory := FieldInCompletionControl(FIELDNO("Created from Service Loc. No."));
      CreationDateMandatory := FieldInCompletionControl(FIELDNO("Creation Date"));
      LastDateModifiedMandatory := FieldInCompletionControl(FIELDNO("Last Date Modified"));
      ModifiedbyMandatory := FieldInCompletionControl(FIELDNO("Modified by"));
      StatusModificationDateMandatory := FieldInCompletionControl(FIELDNO("Status Modification Date"));
      StartingDateMandatory := FieldInCompletionControl(FIELDNO("Starting Date"));
      EndingDateMandatory := FieldInCompletionControl(FIELDNO("Ending Date"));
      TechnicalFinishedDateMandatory := FieldInCompletionControl(FIELDNO("Technical Finished Date"));
      PostingDateClosingMandatory := FieldInCompletionControl(FIELDNO("Posting Date Closing"));
      ArchiveLocationDocumentsMandatory := FieldInCompletionControl(FIELDNO("Archive Location Documents"));
      ArchiveLocationMandatory := FieldInCompletionControl(FIELDNO("Archive Location"));
      LanguageCodeMandatory := FieldInCompletionControl(FIELDNO("Language Code"));
      EndDateGuaranteeMandatory := FieldInCompletionControl(FIELDNO("End Date Guarantee"));
      FSCTypeCodeMandatory := FieldInCompletionControl(FIELDNO("FSC Type Code"));
      ChangeRequestNoMandatory := FieldInCompletionControl(FIELDNO("Change Request No."));
      RequestedQuoteReceiptDateMandatory := FieldInCompletionControl(FIELDNO("Requested Quote Receipt Date"));
      VendorsReactbeforeMandatory := FieldInCompletionControl(FIELDNO("Vendors React before"));
      ShipToLocationMandatory := FieldInCompletionControl(FIELDNO("Ship To Location"));
      ServiceWarrantyCodeMandatory := FieldInCompletionControl(FIELDNO("Service Warranty Code"));
      VATBusPostingGroupMandatory := FieldInCompletionControl(FIELDNO("VAT Bus. Posting Group"));
      LaborMandatory := FieldInCompletionControl(FIELDNO("% Labor"));
      ToBAccountMandatory := FieldInCompletionControl(FIELDNO("% to B Account"));
      AffiliationNoMandatory := FieldInCompletionControl(FIELDNO("Affiliation No."));
      SFBCodeMandatory := FieldInCompletionControl(FIELDNO("SFB Code"));
      InvoiceLayoutCodeMandatory := FieldInCompletionControl(FIELDNO("Invoice Layout Code"));
      PriceListMandatory := FieldInCompletionControl(FIELDNO("Price List"));
      RefDateUnitPriceMandatory := FieldInCompletionControl(FIELDNO("Ref. Date Unit Price"));
      RevisionRuleMandatory := FieldInCompletionControl(FIELDNO("Revision Rule"));
      ReferenceDateRevisionMandatory := FieldInCompletionControl(FIELDNO("Reference Date Revision"));
      MasterCompanyMandatory := FieldInCompletionControl(FIELDNO("Master Company"));
      MasterProjectMandatory := FieldInCompletionControl(FIELDNO("Master Project"));
      MasterElementMandatory := FieldInCompletionControl(FIELDNO("Master Element"));
      CostObjectInterProjectCostMandatory := FieldInCompletionControl(FIELDNO("Cost Object Inter Project Cost"));
      CostObjectInterProjectRevMandatory := FieldInCompletionControl(FIELDNO("Cost Object Inter Project Rev"));
      TextMandatory := FieldInCompletionControl(FIELDNO(Text));
      DueDatePlotMandatory := FieldInCompletionControl(FIELDNO("Due Date Plot"));
      InterestBeforeContractDateMandatory := FieldInCompletionControl(FIELDNO("Interest Before Contract Date"));
      InterestBeforeTransferDateMandatory := FieldInCompletionControl(FIELDNO("Interest Before Transfer Date"));
      PaymentTermsCodeMandatory := FieldInCompletionControl(FIELDNO("Payment Terms Code"));
      VATProdPGroupInstIntMandatory := FieldInCompletionControl(FIELDNO("VAT Prod. P. Group Inst. Int."));
      PublicnotaryMandatory := FieldInCompletionControl(FIELDNO("Public notary"));
      WithholdMandatory := FieldInCompletionControl(FIELDNO("Withhold %"));
      DaysNotifyBuyerMandatory := FieldInCompletionControl(FIELDNO("Days Notify Buyer"));
      DaysRepairBeforeMandatory := FieldInCompletionControl(FIELDNO("Days Repair Before"));
      DaysDelayedRepairMandatory := FieldInCompletionControl(FIELDNO("Days Delayed Repair"));
      DaysNotifyGuaranteeFundMandatory := FieldInCompletionControl(FIELDNO("Days Notify Guarantee Fund"));
      DaysEndServicePeriodMandatory := FieldInCompletionControl(FIELDNO("Days End Service Period"));
      GuaranteePeriodMandatory := FieldInCompletionControl(FIELDNO("Guarantee Period"));
      ReadyforBuildingDateMandatory := FieldInCompletionControl(FIELDNO("Ready for Building Date"));
      SummarySheetMMRMandatory := FieldInCompletionControl(FIELDNO("Summary Sheet MMR"));
      JointCompanyMandatory := FieldInCompletionControl(FIELDNO("Joint Company"));
      JointJobNoMandatory := FieldInCompletionControl(FIELDNO("Joint Job No."));
      Phase1CompanyMandatory := FieldInCompletionControl(FIELDNO("Phase 1 Company"));
      Phase2CompanyMandatory := FieldInCompletionControl(FIELDNO("Phase 2 Company"));
      Phase3CompanyMandatory := FieldInCompletionControl(FIELDNO("Phase 3 Company"));
      SharePointSiteURLMandatory := FieldInCompletionControl(FIELDNO("SharePoint Site URL"));
      CurrencyCodeMandatory := FieldInCompletionControl(FIELDNO("Currency Code"));
      ReferenceDateCurrencyMandatory := FieldInCompletionControl(FIELDNO("Reference Date (Currency)"));
      ReferenceDateItemMandatory := FieldInCompletionControl(FIELDNO("Reference Date (Item)"));
      PriorityPurchDiscTermGrp0Mandatory := FieldInCompletionControl(FIELDNO("Priority Purch Disc Term Grp 0"));
      PurchDiscountTermGroup1Mandatory := FieldInCompletionControl(FIELDNO("Purch Discount Term Group 1"));
      PriorityPurchDiscTermGrp1Mandatory := FieldInCompletionControl(FIELDNO("Priority Purch Disc Term Grp 1"));
      PurchDiscountTermGroup2Mandatory := FieldInCompletionControl(FIELDNO("Purch Discount Term Group 2"));
      PriorityPurchDiscTermGrp2Mandatory := FieldInCompletionControl(FIELDNO("Priority Purch Disc Term Grp 2"));
      PrioritySalesDiscTermGrp0Mandatory := FieldInCompletionControl(FIELDNO("Priority Sales Disc Term Grp 0"));
      SalesDiscountTermGroup1Mandatory := FieldInCompletionControl(FIELDNO("Sales Discount Term Group 1"));
      PrioritySalesDiscTermGrp1Mandatory := FieldInCompletionControl(FIELDNO("Priority Sales Disc Term Grp 1"));
      SalesDiscountTermGroup2Mandatory := FieldInCompletionControl(FIELDNO("Sales Discount Term Group 2"));
      PrioritySalesDiscTermGrp2Mandatory := FieldInCompletionControl(FIELDNO("Priority Sales Disc Term Grp 2"));
    END;

    LOCAL PROCEDURE FieldInCompletionControl@1100528402(FieldNo@1100528400 : Integer) : Boolean;
    VAR
      ExtendedFieldProperty@1100528402 : Record 11020567;
      TableNo@1100528401 : Integer;
    BEGIN
      //**4PS
      TableNo := DATABASE::Job;
      EXIT(ExtendedFieldProperty.FieldInCompletionControl(TableNo, FieldNo));
    END;

    BEGIN
    {
      db, 03-04-15: due to performanceproblem, functions GetEstimate, GetServiceLocation and GetTryOut removed on page: available in factbox

      IMSE-041
      LP 130702 Added new action for "Create Sub Project".
      LP 130704 New functionality for drilldown on field "Bill-to Customer No." (Principal)

      SESB.I022 Final Instalment
         KD 18.07.2013 Action "Calculate Final Instalment" added

      *** 4PSSE.I012 ***
      130827 Added Action "Edit ROT INformation"
      130830 I008 added <Project Controle Fact Box>

      4PS-001, moved OpenPrognosisCardList() to the table

      IME-060 131113 GH ITERO - Price List Code change by opening Assist Edit
      ENH-007 140122 DJ ITERO - added check for net price list when trying to add discount letter
      IME-118 140324, added Imgaes to some actions
      ITERO.DJ 140325 ENH020 removed field ROT fixed amount moved it to Pricipal card
      ITERO.DL 140512 IME144 Project record is locked from assistedit

      ITERO.WG 4PS-042 140711 Added page acion OpenProjectControlSummarized and OpenProjectControlOverview
      150518 ITERO.WG SC003600 Added message on close page when no main project is selected
      160304 ITERO.AC RFC084 Filter Discount Term Groups based on selected customer Pricelist
      160311 ITERO.SB RFC-106 New field, Invoiced (ready)
      160311 ITERO.SB RFC-044 Check if modify Single/Main/Sub-field is ok
    }
    END.
  }
}

