OBJECT Page 11072130 Total Value Insured per FA
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,4PS9.00 (5622);
  }
  PROPERTIES
  {
    CaptionML=ENU=Total Value Insured per FA;
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table5600;
    DataCaptionExpr='';
    DataCaptionFields=No.,Description;
    PageType=Card;
    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 PeriodType := PeriodType::Year;
                 AmountType := AmountType::"Balance at Date";
                 NoOfColumns := GetMatrixDimension;
                 SetStartFilter(' ');
                 MATRIX_GenerateColumnCaptions(SetWanted::Initial);
               END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 77      ;1   ;Action    ;
                      Name=ShowMatrix;
                      CaptionML=ENU=&Show Matrix;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ShowMatrix;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MatrixForm@1097 : Page 9275;
                               BEGIN
                                 CLEAR(MatrixForm);
                                 MatrixForm.Load(MATRIX_CaptionSet,MatrixRecords,NoOfColumns,GETFILTER("FA Posting Date Filter"),RoundingFactor,
                                   PeriodType,AmountType);
                                 MatrixForm.RUNMODAL;
                               END;
                                }
      { 1111    ;1   ;Action    ;
                      CaptionML=ENU=Next Set;
                      ToolTipML=ENU=Next Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(SetWanted::Next);
                               END;
                                }
      { 1109    ;1   ;Action    ;
                      CaptionML=ENU=Previous Set;
                      ToolTipML=ENU=Previous Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(SetWanted::Previous);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 14  ;1   ;Group     ;
                CaptionML=ENU=Options }

    { 19  ;2   ;Field     ;
                CaptionML=ENU=Rounding Factor;
                OptionCaptionML=ENU=None,1,1000,1000000;
                SourceExpr=RoundingFactor;
                AutoFormatType=1 }

    { 1906098301;1;Group  ;
                CaptionML=ENU=Matrix Options }

    { 1106;2   ;Field     ;
                CaptionML=ENU=View by;
                OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                SourceExpr=PeriodType }

    { 1107;2   ;Field     ;
                CaptionML=ENU=View as;
                OptionCaptionML=ENU=Net Change,Balance at Date;
                SourceExpr=AmountType;
                OnValidate=BEGIN
                             SetStartFilter(' ');
                           END;
                            }

    { 1108;2   ;Field     ;
                CaptionML=ENU=Column Set;
                SourceExpr=MATRIX_CaptionRange;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      Calendar@1010 : Record 2000000007;
      MatrixRecord@1005 : Record 11072087;
      MatrixRecords@1098 : ARRAY [32] OF Record 11072087;
      MATRIX_CaptionSet@1099 : ARRAY [32] OF Text[1024];
      MATRIX_CaptionRange@1100 : Text[1024];
      MATRIX_PKFirstRecInCurrSet@1104 : Text[1024];
      MATRIX_CurrentNoOfColumns@1105 : Integer;
      PeriodType@1002 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      RoundingFactor@1003 : 'None,1,1000,1000000';
      AmountType@1004 : 'Net Change,Balance at Date';
      NoOfColumns@1006 : Integer;
      SetWanted@1011 : 'Initial,Previous,Same,Next';
      DPA_IsHardFilter@1100000999 : Boolean;

    PROCEDURE SetStartFilter@1(SearchString@1001 : Code[10]);
    VAR
      PeriodFormMgt@1000 : Codeunit 359;
    BEGIN
      IF GETFILTER("FA Posting Date Filter") <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",GETFILTER("FA Posting Date Filter"));
        IF NOT PeriodFormMgt.FindDate('+',Calendar,PeriodType) THEN
          PeriodFormMgt.FindDate('+',Calendar,PeriodType::Day);
        Calendar.SETRANGE("Period Start");
      END;
      PeriodFormMgt.FindDate(SearchString,Calendar,PeriodType);
      IF AmountType = AmountType::"Net Change" THEN BEGIN
        SETRANGE("FA Posting Date Filter",Calendar."Period Start",Calendar."Period End");
        IF GETRANGEMIN("FA Posting Date Filter") = GETRANGEMAX("FA Posting Date Filter") THEN
          SETRANGE("FA Posting Date Filter",GETRANGEMIN("FA Posting Date Filter"));
      END ELSE
        SETRANGE("FA Posting Date Filter",0D,Calendar."Period End");
    END;

    LOCAL PROCEDURE MATRIX_GenerateColumnCaptions@1107(SetWanted@1001 : 'First,Previous,Same,Next');
    VAR
      CurrentMatrixRecordOrdinal@1000 : Integer;
      RecRef@1002 : RecordRef;
      MatrixMgt@1003 : Codeunit 9200;
    BEGIN
      CLEAR(MATRIX_CaptionSet);
      CLEAR(MatrixRecords);
      CurrentMatrixRecordOrdinal := 1;

      RecRef.GETTABLE(MatrixRecord);
      RecRef.SETTABLE(MatrixRecord);

      MatrixMgt.GenerateMatrixData(RecRef,SetWanted,ARRAYLEN(MatrixRecords),1,MATRIX_PKFirstRecInCurrSet,
        MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);

      IF MATRIX_CurrentNoOfColumns > 0 THEN BEGIN
        MatrixRecord.SETPOSITION(MATRIX_PKFirstRecInCurrSet);
        MatrixRecord.FIND;
        REPEAT
          MatrixRecords[CurrentMatrixRecordOrdinal].COPY(MatrixRecord);
          CurrentMatrixRecordOrdinal := CurrentMatrixRecordOrdinal + 1;
        UNTIL (CurrentMatrixRecordOrdinal > MATRIX_CurrentNoOfColumns) OR (MatrixRecord.NEXT <> 1);
      END;
    END;

    LOCAL PROCEDURE GetMatrixDimension@2() : Integer;
    BEGIN
      EXIT(ARRAYLEN(MATRIX_CaptionSet));
    END;

    BEGIN
    END.
  }
}

