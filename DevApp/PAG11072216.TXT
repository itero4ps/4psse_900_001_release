OBJECT Page 11072216 Site Mngmnt Hour Accounting SF
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    SourceTable=Table11012361;
    DelayedInsert=Yes;
    PopulateAllFields=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    RefreshOnActivate=Yes;
    OnOpenPage=BEGIN
                 LineEditable := TRUE;

                 ElementEditable := TRUE;
                 ExtensionContractEditable := TRUE;
                 PlantCompanyEditable := TRUE;
                 PlantLocationEditable := TRUE;
                 PlantTypeNoEditable := TRUE;
                 CostComponentPlantEditable := TRUE;
                 NotUnmannedPlant := TRUE;

                 SiteMngmntHoursSetup.GET;
               END;

    OnAfterGetRecord=BEGIN
                       CALCFIELDS("Total Hours","Norm Hours");

                       OvertimeFormat;

                       SetEditable;
                     END;

    OnNewRecord=BEGIN
                  IF "Receiving Company" ='' THEN
                    "Receiving Company" := COMPANYNAME;

                  IF "Employee No." <> '' THEN
                    VALIDATE(Type, xRec.Type);

                  SetEditable;
                END;

    OnDeleteRecord=VAR
                     lvText001@1100525000 : TextConst 'ENU=Plant hours of the unmanned plant are already posted, these can not be deleted.\Are you sure that you want to delete this hour accounting line?';
                   BEGIN
                     IF NOT Rec.CheckUnmannedPlantHourLineOpen() THEN BEGIN
                       IF NOT CONFIRM(lvText001, FALSE) THEN
                         EXIT(FALSE);
                     END;
                   END;

    ActionList=ACTIONS
    {
      { 1100528400;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528406;1 ;ActionGroup;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1100528405;2 ;Action    ;
                      CaptionML=ENU=Hours Consent Lines;
                      RunObject=Page 11072564;
                      RunPageLink=Year=FIELD(Year),
                                  Week=FIELD(Week),
                                  Supplying Company=FIELD(Supplying Company),
                                  Employee=FIELD(Employee No.),
                                  Line No.=FIELD(Line No.);
                      Image=Confirm;
                      RunPageMode=View }
      { 1100528407;2 ;Action    ;
                      CaptionML=ENU=Rejected Hours Consent Lines;
                      RunObject=Page 11072639;
                      RunPageLink=Year=FIELD(Year),
                                  Week=FIELD(Week),
                                  Supplying Company=FIELD(Supplying Company),
                                  Employee=FIELD(Employee No.),
                                  Line No.=FIELD(Line No.),
                                  Rejected=CONST(Yes);
                      Image=Confirm;
                      RunPageMode=View }
      { 1100528401;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 1100528402;2 ;Action    ;
                      Name=Release;
                      CaptionML=ENU=Re&lease;
                      Image=ReleaseDoc;
                      OnAction=VAR
                                 SiteMngmntHoursLine@1100528300 : Record 11012361;
                               BEGIN
                                 SiteMngmntHoursLine.COPY(Rec);
                                 CurrPage.SETSELECTIONFILTER(SiteMngmntHoursLine);
                                 SiteMngmntHoursLine.Release;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100528404;2 ;Action    ;
                      Name=Reopen;
                      CaptionML=ENU=Re&open;
                      Image=ReOpen;
                      OnAction=VAR
                                 SiteMngmntHoursLine@1100528300 : Record 11012361;
                               BEGIN
                                 SiteMngmntHoursLine.COPY(Rec);
                                 CurrPage.SETSELECTIONFILTER(SiteMngmntHoursLine);
                                 SiteMngmntHoursLine.Reopen;
                                 CurrPage.UPDATE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100485000;1;Group  ;
                GroupType=Repeater }

    { 1100485001;2;Field  ;
                SourceExpr="Receiving Company";
                Visible=FALSE;
                Editable=LineEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1100528300;2;Field  ;
                SourceExpr="Line Template Code" }

    { 1100485003;2;Field  ;
                SourceExpr=Type;
                Editable=LineEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1100485005;2;Field  ;
                SourceExpr="Object No.";
                Editable=LineEditable;
                OnValidate=BEGIN
                             //VALIDATE("Object No.","Object No.");  //*27119.o;
                             ObjectNoOnAfterValidate;
                           END;
                            }

    { 1100485076;2;Field  ;
                SourceExpr="Object Name";
                Visible=FALSE;
                Editable=FALSE }

    { 1210190002;2;Field  ;
                SourceExpr="Shift Code";
                Visible=FALSE }

    { 1100485009;2;Field  ;
                SourceExpr=Element;
                Editable=ElementEditable }

    { 1100525012;2;Field  ;
                DrillDown=No;
                SourceExpr="Element Description";
                Visible=FALSE }

    { 1100525016;2;Field  ;
                SourceExpr="Extension Contract";
                Editable=ExtensionContractEditable }

    { 1100525018;2;Field  ;
                SourceExpr="Plant Company";
                Editable=PlantCompanyEditable }

    { 1100525014;2;Field  ;
                SourceExpr="Plant Location";
                Editable=PlantLocationEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1100525004;2;Field  ;
                SourceExpr="Plant Type";
                Editable=PlantTypeNoEditable }

    { 1100525006;2;Field  ;
                SourceExpr="Plant No.";
                Editable=PlantTypeNoEditable }

    { 1100525010;2;Field  ;
                CaptionML=ENU=Plant Description;
                SourceExpr=GetPlantDescription();
                Visible=FALSE }

    { 1100525008;2;Field  ;
                SourceExpr="Cost Component Plant";
                Editable=CostComponentPlantEditable }

    { 1100409000;2;Field  ;
                SourceExpr="Department Code" }

    { 1100525000;2;Field  ;
                SourceExpr="Cost Object";
                Editable=NotUnmannedPlant;
                OnValidate=BEGIN
                             CostObjectOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           GetCostObjectWithLookup;
                           CurrPage.UPDATE;
                         END;
                          }

    { 1100485074;2;Field  ;
                SourceExpr="Cost Object Description";
                Visible=FALSE;
                Editable=FALSE }

    { 1100485030;2;Field  ;
                SourceExpr="Wage Component";
                Editable=NotUnmannedPlant;
                OnValidate=BEGIN
                             WageComponentOnAfterValidate;
                           END;
                            }

    { 1100525002;2;Field  ;
                SourceExpr="Start Kilometer";
                Editable=KMEditable;
                OnValidate=BEGIN
                             ValidateKilometers;
                           END;
                            }

    { 1100525001;2;Field  ;
                SourceExpr="End Kilometer";
                Editable=KMEditable;
                OnValidate=BEGIN
                             ValidateKilometers;
                           END;
                            }

    { 1100485011;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr=Monday;
                Enabled=LineEditable;
                Style=Strong;
                StyleExpr=OvertimeComponentMonday;
                OnValidate=BEGIN
                             IF "Component Type" = "Component Type"::Kilometers THEN
                               Monday := ROUND(Monday,1);
                               MondayOnAfterValidate;
                           END;

                OnAssistEdit=VAR
                               OldTravelHoursMonday@1210190001 : Option;
                             BEGIN
                               IF NOT CheckLineEditable THEN
                                 EXIT;
                               IF ("Wage Component" ='') OR ("Component Type" = "Component Type"::Kilometers) AND
                                  (NOT ("Component Type" = "Component Type"::Expenses))
                               THEN BEGIN
                                 OldTravelHoursMonday := "Travel Hours Monday";
                                 SiteManHoursManCU.StartAssistEdit("Receiving Company",
                                                                   "Component Type",
                                                                   Overtime,
                                                                   "Overtime Comp. Monday",
                                                                   "Overtime Hours Monday",
                                                                   Monday,
                                                                   "Travel Hours Monday");
                                 VALIDATE(Monday);
                                 IF ("Travel Hours Monday" <> OldTravelHoursMonday) AND
                                    ("Travel Hours Monday" <> "Travel Hours Monday"::"Work to Work")
                                 THEN BEGIN
                                   IF "Travel Hours Tuesday" = OldTravelHoursMonday THEN
                                     "Travel Hours Tuesday" := "Travel Hours Monday";
                                   IF "Travel Hours Wednesday" = OldTravelHoursMonday THEN
                                     "Travel Hours Wednesday" := "Travel Hours Monday";
                                   IF "Travel Hours Thursday" = OldTravelHoursMonday THEN
                                     "Travel Hours Thursday" := "Travel Hours Monday";
                                   IF "Travel Hours Friday" = OldTravelHoursMonday THEN
                                     "Travel Hours Friday" := "Travel Hours Monday";
                                   IF "Travel Hours Saturday" = OldTravelHoursMonday THEN
                                     "Travel Hours Saturday" := "Travel Hours Monday";
                                   IF "Travel Hours Sunday" = OldTravelHoursMonday THEN
                                     "Travel Hours Sunday" := "Travel Hours Monday";
                                 END;
                                 CurrPage.UPDATE(TRUE);
                               END;
                             END;
                              }

    { 1100485013;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr=Tuesday;
                Editable=LineEditable;
                Style=Strong;
                StyleExpr=OvertimeComponentTuesday;
                OnValidate=BEGIN
                             IF "Component Type" = "Component Type"::Kilometers THEN
                               Tuesday := ROUND(Tuesday,1);
                               TuesdayOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               IF NOT CheckLineEditable THEN
                                 EXIT;

                               IF ("Wage Component" ='') OR ("Component Type" = "Component Type"::Kilometers) AND NOT
                               ("Component Type" = "Component Type"::Expenses) THEN BEGIN
                                 SiteManHoursManCU.StartAssistEdit("Receiving Company",
                                                                 "Component Type",
                                                                 Overtime,
                                                                 "Overtime Comp.Tuesday",
                                                                 "Overtime Hours Tuesday",
                                                                 Tuesday,
                                                                 "Travel Hours Tuesday");
                                 VALIDATE(Tuesday);
                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 1100485015;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr=Wednesday;
                Editable=LineEditable;
                Style=Strong;
                StyleExpr=OvertimeComponentWednesday;
                OnValidate=BEGIN
                             IF "Component Type" = "Component Type"::Kilometers THEN
                               Wednesday := ROUND(Wednesday,1);
                               WednesdayOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               IF NOT CheckLineEditable THEN
                                 EXIT;

                               IF ("Wage Component" ='') OR ("Component Type" = "Component Type"::Kilometers) AND NOT
                               ("Component Type" = "Component Type"::Expenses) THEN BEGIN
                                 SiteManHoursManCU.StartAssistEdit("Receiving Company",
                                                                 "Component Type",
                                                                 Overtime,
                                                                 "Overtime Comp.Wednesday",
                                                                 "Overtime Hours Wednesday",
                                                                 Wednesday,
                                                                 "Travel Hours Wednesday");
                                 VALIDATE(Wednesday);
                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 1100485017;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr=Thursday;
                Editable=LineEditable;
                Style=Strong;
                StyleExpr=OvertimeComponentThursday;
                OnValidate=BEGIN
                             IF "Component Type" = "Component Type"::Kilometers THEN
                               Thursday := ROUND(Thursday,1);
                               ThursdayOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               IF NOT CheckLineEditable THEN
                                 EXIT;

                               IF ("Wage Component" ='') OR ("Component Type" = "Component Type"::Kilometers) AND NOT
                               ("Component Type" = "Component Type"::Expenses) THEN BEGIN
                                 SiteManHoursManCU.StartAssistEdit("Receiving Company",
                                                                 "Component Type",
                                                                 Overtime,
                                                                 "Overtime Comp.Thursday",
                                                                 "Overtime Hours Thursday",
                                                                 Thursday,
                                                                 "Travel Hours Thursday");
                                 VALIDATE(Thursday);
                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 1100485019;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr=Friday;
                Editable=LineEditable;
                Style=Strong;
                StyleExpr=OvertimeComponentFriday;
                OnValidate=BEGIN
                             IF "Component Type" = "Component Type"::Kilometers THEN
                               Friday := ROUND(Friday,1);
                               FridayOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               IF NOT CheckLineEditable THEN
                                 EXIT;

                               IF ("Wage Component" ='') OR ("Component Type" = "Component Type"::Kilometers) AND NOT
                               ("Component Type" = "Component Type"::Expenses) THEN BEGIN
                                 SiteManHoursManCU.StartAssistEdit("Receiving Company",
                                                                 "Component Type",
                                                                 Overtime,
                                                                 "Overtime Comp.Friday",
                                                                 "Overtime Hours Friday",
                                                                 Friday,
                                                                 "Travel Hours Friday");
                                 VALIDATE(Friday);
                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 1100485021;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr=Saturday;
                Editable=LineEditable;
                Style=Strong;
                StyleExpr=OvertimeComponentSaturday;
                OnValidate=BEGIN
                             IF "Component Type" = "Component Type"::Kilometers THEN
                               Saturday := ROUND(Saturday,1);
                               SaturdayOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               IF NOT CheckLineEditable THEN
                                 EXIT;

                               IF ("Wage Component" ='') OR ("Component Type" = "Component Type"::Kilometers) AND NOT
                               ("Component Type" = "Component Type"::Expenses) THEN BEGIN
                                 SiteManHoursManCU.StartAssistEdit("Receiving Company",
                                                                 "Component Type",
                                                                 Overtime,
                                                                 "Overtime Comp.Saturday",
                                                                 "Overtime Hours Saturday",
                                                                 Saturday,
                                                                 "Travel Hours Saturday");
                                 VALIDATE(Saturday);
                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 1100485023;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr=Sunday;
                Editable=LineEditable;
                Style=Strong;
                StyleExpr=OvertimeComponentSunday;
                OnValidate=BEGIN
                             IF "Component Type" = "Component Type"::Kilometers THEN
                               Sunday := ROUND(Sunday,1);
                               SundayOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               IF NOT CheckLineEditable THEN
                                 EXIT;

                               IF ("Wage Component" ='') OR ("Component Type" = "Component Type"::Kilometers) AND NOT
                               ("Component Type" = "Component Type"::Expenses) THEN BEGIN
                                 SiteManHoursManCU.StartAssistEdit("Receiving Company",
                                                                 "Component Type",
                                                                 Overtime,
                                                                 "Overtime Comp.Sunday",
                                                                 "Overtime Hours Sunday",
                                                                 Sunday,
                                                                 "Travel Hours Sunday");
                                 VALIDATE(Sunday);
                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 1100528301;2;Field  ;
                SourceExpr="Start Time";
                Visible=false }

    { 1100528302;2;Field  ;
                SourceExpr="End Time";
                Visible=false }

    { 1100485025;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr="Total Line";
                Editable=FALSE }

    { 1210190000;2;Field  ;
                SourceExpr=Quantity }

    { 1100485080;2;Field  ;
                SourceExpr=Amount;
                Editable=NotUnmannedPlant }

    { 1210190004;2;Field  ;
                SourceExpr="Posting Date" }

    { 1100485072;2;Field  ;
                SourceExpr=Comment;
                Editable=LineEditable }

    { 1100528403;2;Field  ;
                SourceExpr=Status }

    { 1100409001;2;Field  ;
                SourceExpr="Reject Text";
                Visible=false }

  }
  CODE
  {
    VAR
      SiteMngmntHoursEmployeesRec@1100485050 : Record 11012357;
      SiteMngmntHoursCodesRec@1100485049 : Record 11012358;
      JobRec@1100485037 : Record 11072003;
      CostCodes@1100485011 : Record 11012083;
      SiteMngmntHoursSetup@1100485010 : Record 11012355;
      ProjectCostObjectRec@1100485009 : Record 11012065;
      DimensionValueRec@1100485005 : Record 349;
      SiteManHoursManCU@1100485001 : Codeunit 11012178;
      OvertimeComponentMonday@1100525006 : Boolean INDATASET;
      OvertimeComponentTuesday@1100525007 : Boolean INDATASET;
      OvertimeComponentWednesday@1100525008 : Boolean INDATASET;
      OvertimeComponentThursday@1100525009 : Boolean INDATASET;
      OvertimeComponentFriday@1100525010 : Boolean INDATASET;
      OvertimeComponentSaturday@1100525011 : Boolean INDATASET;
      OvertimeComponentSunday@1100525012 : Boolean INDATASET;
      LineEditable@1100525013 : Boolean INDATASET;
      ElementEditable@1100525000 : Boolean INDATASET;
      ExtensionContractEditable@1100525001 : Boolean INDATASET;
      PlantCompanyEditable@1100525014 : Boolean INDATASET;
      PlantLocationEditable@1100525015 : Boolean INDATASET;
      PlantTypeNoEditable@1100525016 : Boolean INDATASET;
      CostComponentPlantEditable@1100525017 : Boolean INDATASET;
      NotUnmannedPlant@1100525018 : Boolean INDATASET;
      KMEditable@1100525002 : Boolean INDATASET;

    PROCEDURE CheckLineEditable@1100525003() : Boolean;
    BEGIN
      IF NOT Rec.CheckUnmannedPlantHourLineOpen() THEN
        EXIT(FALSE);
      IF (Status <> Status::Open) AND (Status <> Status::Rejected) THEN
        EXIT(FALSE);
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE ObjectNoOnAfterValidate@19042349();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CostObjectOnAfterValidate@19061648();
    VAR
      lvEmployeeRec@1100525001 : Record 5200;
    BEGIN
      IF "Component Type" = "Component Type"::Kilometers THEN BEGIN
        IF "Supplying Company" <> COMPANYNAME THEN
          lvEmployeeRec.CHANGECOMPANY("Supplying Company");
        lvEmployeeRec.GET("Employee No.");
        SetDefaultDriverType(lvEmployeeRec."Driver Type");
      END;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE WageComponentOnAfterValidate@19034041();
    VAR
      lvEmployeeRec@1100525001 : Record 5200;
    BEGIN
      IF "Component Type" = "Component Type"::Kilometers THEN BEGIN
        IF "Supplying Company" <> COMPANYNAME THEN
          lvEmployeeRec.CHANGECOMPANY("Supplying Company");
        lvEmployeeRec.GET("Employee No.");
        SetDefaultDriverType(lvEmployeeRec."Driver Type");
      END;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE MondayOnAfterValidate@19007363();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE TuesdayOnAfterValidate@19056583();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE WednesdayOnAfterValidate@19034974();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ThursdayOnAfterValidate@19015500();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE FridayOnAfterValidate@19048746();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SaturdayOnAfterValidate@19044351();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SundayOnAfterValidate@19007756();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OvertimeFormat@19016860();
    BEGIN
      OvertimeComponentMonday := ("Overtime Comp. Monday" <> '');
      OvertimeComponentTuesday := ("Overtime Comp.Tuesday" <> '');
      OvertimeComponentWednesday := ("Overtime Comp.Wednesday" <> '');
      OvertimeComponentThursday := ("Overtime Comp.Thursday" <> '');
      OvertimeComponentFriday := ("Overtime Comp.Friday" <> '');
      OvertimeComponentSaturday := ("Overtime Comp.Saturday" <> '');
      OvertimeComponentSunday := ("Overtime Comp.Sunday" <> '');
    END;

    PROCEDURE SetEditable@1100525005();
    BEGIN
      KMEditable := ("Component Type" = "Component Type"::Kilometers);

      LineEditable := CheckLineEditable;

      ElementEditable := (LineEditable AND (Type <> Type::Indirect));
      ExtensionContractEditable := (LineEditable AND (Type = Type::Project));

      PlantCompanyEditable := (LineEditable AND
        (Type = Type::Plant) AND ("Receiving Company" <> ''));  //* Not for Unmanned Plant!

      PlantLocationEditable := (LineEditable AND
        (Type IN [Type::Plant,Type::UnmannedPlant]) AND ("Object No."<>'') AND ("Plant Company" <> ''));

      PlantTypeNoEditable := (LineEditable AND
        (Type IN [Type::Plant, Type::UnmannedPlant]) AND ("Plant Company" <> ''));

      CostComponentPlantEditable := (LineEditable AND
        (Type = Type::Plant) AND ("Plant Company" <> ''));

      NotUnmannedPlant := (LineEditable AND (Type <> Type::UnmannedPlant));
    END;

    LOCAL PROCEDURE ValidateKilometers@1100525001();
    VAR
      Result@1100525000 : Integer;
    BEGIN
      Result := "End Kilometer" - "Start Kilometer";
      IF Result <0 THEN
         Result := 0;

      IF (Monday <> 0) THEN VALIDATE(Monday, Result) ELSE
        IF (Tuesday <> 0) THEN VALIDATE(Tuesday, Result) ELSE
          IF (Wednesday <> 0) THEN VALIDATE(Wednesday, Result) ELSE
            IF (Thursday <> 0) THEN VALIDATE(Thursday, Result) ELSE
              IF (Friday <> 0) THEN VALIDATE(Friday, Result) ELSE
                IF (Saturday <> 0) THEN VALIDATE(Saturday, Result) ELSE
                  IF (Sunday <> 0) THEN VALIDATE(Sunday, Result) ELSE
                    VALIDATE(Friday, Result);
    END;

    BEGIN
    END.
  }
}

