OBJECT Page 11072218 Site Mngmnt Proj Hour Acc. SF
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    SourceTable=Table11012363;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    RefreshOnActivate=Yes;
    OnOpenPage=BEGIN
                 "Shift CodeEditable" := TRUE;
                 CostCodeEditable := TRUE;
                 LineEditable := TRUE;
                 ElementEditable := TRUE;
                 ExtensionContractEditable := TRUE;
                 PlantCompanyEditable := TRUE;
                 PlantTypeNoEditable := TRUE;
                 NotUnmannedPlant := TRUE;
                 CostCodeEditable := TRUE;
                 CostComponentPlantEditable := TRUE;
               END;

    OnAfterGetRecord=BEGIN
                       CALCFIELDS("Total Hours");
                       OvertimeFormat;
                       SetEditable;
                     END;

    OnNewRecord=VAR
                  lvHourLine@1100525001 : Record 11012363;
                BEGIN
                  IF "Line No." = 0 THEN BEGIN
                    lvHourLine.SETRANGE(Year,Year);
                    lvHourLine.SETRANGE(Week,Week);
                    lvHourLine.SETRANGE("Receiving Company","Receiving Company");
                    lvHourLine.SETRANGE("Project No.","Project No.");
                    IF lvHourLine.FINDLAST THEN
                      "Line No." := lvHourLine."Line No." + 10000
                    ELSE
                       "Line No." := 10000;
                  END;
                  IF "Project No." <> '' THEN BEGIN
                    IF (xRec.Type IN [Type::Plant, Type::UnmannedPlant]) AND (xRec."Plant Company" <> '') THEN BEGIN
                      "Plant Company" := xRec."Plant Company";
                      IF xRec.Type = Type::UnmannedPlant THEN
                        "Supplying Company" := "Plant Company";
                    END;
                    VALIDATE(Type, xRec.Type);
                  END;

                  IF gShiftCode <> '' THEN  //*DP00033
                    "Shift Code" := gShiftCode;
                END;

    OnDeleteRecord=VAR
                     lvText001@1100525000 : TextConst 'ENU=Plant hours of the unmanned plant are already posted, these can not be deleted.\Are you sure that you want to delete this hour accounting line?';
                   BEGIN
                     IF NOT Rec.CheckUnmannedPlantHourLineOpen() THEN BEGIN
                       IF NOT CONFIRM(lvText001, FALSE) THEN
                         EXIT(FALSE);
                     END;
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1907540104;1 ;ActionGroup;
                      CaptionML=ENU=P&osting }
      { 1907796604;2 ;Action    ;
                      CaptionML=ENU=Check Hours Accounting;
                      Image=PreviewChecks;
                      OnAction=BEGIN
                                 //This functionality was copied from page #11072217. Unsupported part was commented. Please check it.
                                 {CurrPage.SUB.PAGE.}
                                 Generatelines;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100485000;1;Group  ;
                Name=TableBox;
                GroupType=Repeater }

    { 1100485025;2;Field  ;
                SourceExpr=Type;
                Visible=TRUE;
                Editable=LineEditable }

    { 1100485001;2;Field  ;
                SourceExpr="Supplying Company";
                Editable=NotUnmannedPlant }

    { 1100485003;2;Field  ;
                SourceExpr="Employee No.";
                Editable=NotUnmannedPlant;
                OnValidate=BEGIN
                             EmployeeNoOnAfterValidate;
                           END;
                            }

    { 1100485094;2;Field  ;
                SourceExpr="Name Employee";
                Visible=FALSE }

    { 1210190004;2;Field  ;
                SourceExpr="Shift Code";
                Visible=FALSE;
                Editable="Shift CodeEditable";
                OnLookup=BEGIN
                           LookupShiftCode("Shift CodeEditable");
                         END;
                          }

    { 1100485062;2;Field  ;
                SourceExpr="Cost Code";
                Visible=TRUE;
                Editable=CostCodeEditable }

    { 1100485100;2;Field  ;
                SourceExpr="Cost Code Description";
                Visible=FALSE }

    { 1100485007;2;Field  ;
                SourceExpr=Element;
                Editable=ElementEditable;
                OnValidate=BEGIN
                             CALCFIELDS("Element Description");
                           END;
                            }

    { 1100525010;2;Field  ;
                DrillDown=No;
                SourceExpr="Element Description";
                Visible=FALSE }

    { 1100525016;2;Field  ;
                SourceExpr="Extension Contract";
                Editable=ExtensionContractEditable }

    { 1100525018;2;Field  ;
                SourceExpr="Plant Company";
                Editable=PlantCompanyEditable }

    { 1100525012;2;Field  ;
                SourceExpr="Plant Location";
                Editable=PlantTypeNoEditable }

    { 1100525002;2;Field  ;
                SourceExpr="Plant Type";
                Editable=PlantTypeNoEditable }

    { 1100525004;2;Field  ;
                SourceExpr="Plant No.";
                Editable=PlantTypeNoEditable }

    { 1100525008;2;Field  ;
                CaptionML=ENU=Plant Description;
                SourceExpr=GetPlantDescription();
                Visible=FALSE }

    { 1100525006;2;Field  ;
                SourceExpr="Cost Component Plant";
                Editable=CostComponentPlantEditable }

    { 1100485005;2;Field  ;
                SourceExpr="Cost Object";
                Editable=NotUnmannedPlant;
                OnValidate=BEGIN
                             CALCFIELDS("Total Hours");
                             CostObjectOnAfterValidate;
                           END;
                            }

    { 1100485098;2;Field  ;
                SourceExpr="Description Cost Object";
                Visible=FALSE }

    { 1100485027;2;Field  ;
                SourceExpr="Wage Component";
                Editable=NotUnmannedPlant;
                OnValidate=BEGIN
                             WageComponentOnAfterValidate;
                           END;
                            }

    { 1100485009;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr=Monday;
                Editable=LineEditable;
                OnValidate=BEGIN
                             IF Monday = 0 THEN BEGIN
                               "Overtime Hours Monday" := 0;
                               "Overtime Comp. Monday" := '';
                             END;

                             IF "Component Type" = "Component Type"::Kilometers THEN
                               Monday := ROUND(Monday,1);
                               MondayOnAfterValidate;
                           END;

                OnAssistEdit=VAR
                               OldTravelHoursMonday@1210190001 : Option;
                             BEGIN
                               IF NOT CheckLineEditable THEN
                                 EXIT;
                               IF ("Wage Component" ='') OR ("Component Type" = "Component Type"::Kilometers) AND
                                  (NOT ("Component Type" = "Component Type"::Expenses))
                               THEN BEGIN
                                 OldTravelHoursMonday := "Travel Hours Monday";
                                 SiteManHoursManCU.StartAssistEdit("Receiving Company",
                                                                 "Component Type",
                                                                 Overtime,
                                                                 "Overtime Comp. Monday",
                                                                 "Overtime Hours Monday",
                                                                 Monday,
                                                                 "Travel Hours Monday");
                                 VALIDATE(Monday);
                                 IF ("Travel Hours Monday" <> OldTravelHoursMonday) AND
                                    ("Travel Hours Monday" <> "Travel Hours Monday"::"Work to Work")
                                 THEN BEGIN
                                   IF "Travel Hours Tuesday" = OldTravelHoursMonday THEN
                                     "Travel Hours Tuesday" := "Travel Hours Monday";
                                   IF "Travel Hours Wednesday" = OldTravelHoursMonday THEN
                                     "Travel Hours Wednesday" := "Travel Hours Monday";
                                   IF "Travel Hours Thursday" = OldTravelHoursMonday THEN
                                     "Travel Hours Thursday" := "Travel Hours Monday";
                                   IF "Travel Hours Friday" = OldTravelHoursMonday THEN
                                     "Travel Hours Friday" := "Travel Hours Monday";
                                   IF "Travel Hours Saturday" = OldTravelHoursMonday THEN
                                     "Travel Hours Saturday" := "Travel Hours Monday";
                                   IF "Travel Hours Sunday" = OldTravelHoursMonday THEN
                                     "Travel Hours Sunday" := "Travel Hours Monday";
                                 END;
                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 1100485011;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr=Tuesday;
                Editable=LineEditable;
                OnValidate=BEGIN
                             IF Tuesday = 0 THEN BEGIN
                               "Overtime Hours Tuesday" := 0;
                               "Overtime Comp.Tuesday" := '';
                             END;
                             IF "Component Type" = "Component Type"::Kilometers THEN
                               Tuesday := ROUND(Tuesday,1);
                               TuesdayOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               IF NOT CheckLineEditable THEN
                                 EXIT;
                               IF ("Wage Component" ='') OR ("Component Type" = "Component Type"::Kilometers) AND
                                  (NOT ("Component Type" = "Component Type"::Expenses))
                               THEN BEGIN
                                 SiteManHoursManCU.StartAssistEdit("Receiving Company",
                                                                 "Component Type",
                                                                 Overtime,
                                                                 "Overtime Comp.Tuesday",
                                                                 "Overtime Hours Tuesday",
                                                                 Tuesday,
                                                                 "Travel Hours Tuesday");
                                 VALIDATE(Tuesday);
                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 1100485013;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr=Wednesday;
                Editable=LineEditable;
                OnValidate=BEGIN
                             IF Wednesday = 0 THEN BEGIN
                               "Overtime Hours Wednesday" := 0;
                               "Overtime Comp.Wednesday" := '';
                             END;
                             IF "Component Type" = "Component Type"::Kilometers THEN
                               Wednesday := ROUND(Wednesday,1);
                               WednesdayOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               IF NOT CheckLineEditable THEN
                                 EXIT;
                               IF ("Wage Component" ='') OR ("Component Type" = "Component Type"::Kilometers) AND
                                  (NOT ("Component Type" = "Component Type"::Expenses))
                               THEN BEGIN
                                 SiteManHoursManCU.StartAssistEdit("Receiving Company",
                                                                 "Component Type",
                                                                 Overtime,
                                                                 "Overtime Comp.Wednesday",
                                                                 "Overtime Hours Wednesday",
                                                                 Wednesday,
                                                                 "Travel Hours Wednesday");
                                 VALIDATE(Wednesday);
                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 1100485015;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr=Thursday;
                Editable=LineEditable;
                OnValidate=BEGIN
                             IF Thursday = 0 THEN BEGIN
                               "Overtime Hours Thursday" := 0;
                               "Overtime Comp.Thursday" := '';
                             END;
                             IF "Component Type" = "Component Type"::Kilometers THEN
                               Thursday := ROUND(Thursday,1);
                               ThursdayOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               IF NOT CheckLineEditable THEN
                                 EXIT;
                               IF ("Wage Component" ='') OR ("Component Type" = "Component Type"::Kilometers) AND
                                  (NOT ("Component Type" = "Component Type"::Expenses))
                               THEN BEGIN
                                 SiteManHoursManCU.StartAssistEdit("Receiving Company",
                                                                 "Component Type",
                                                                 Overtime,
                                                                 "Overtime Comp.Thursday",
                                                                 "Overtime Hours Thursday",
                                                                 Thursday,
                                                                 "Travel Hours Thursday");
                                 VALIDATE(Thursday);
                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 1100485017;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr=Friday;
                Editable=LineEditable;
                OnValidate=BEGIN
                             IF Friday = 0 THEN BEGIN
                               "Overtime Hours Friday" := 0;
                               "Overtime Comp.Friday" := '';
                             END;
                             IF "Component Type" = "Component Type"::Kilometers THEN
                               Friday := ROUND(Friday,1);
                               FridayOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               IF NOT CheckLineEditable THEN
                                 EXIT;
                               IF ("Wage Component" ='') OR ("Component Type" = "Component Type"::Kilometers) AND
                                  (NOT ("Component Type" = "Component Type"::Expenses))
                               THEN BEGIN
                                 SiteManHoursManCU.StartAssistEdit("Receiving Company",
                                                                 "Component Type" ,
                                                                 Overtime,
                                                                 "Overtime Comp.Friday",
                                                                 "Overtime Hours Friday",
                                                                 Friday,
                                                                 "Travel Hours Friday");
                                 VALIDATE(Friday);
                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 1100485019;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr=Saturday;
                Editable=LineEditable;
                OnValidate=BEGIN
                             IF Saturday = 0 THEN BEGIN
                               "Overtime Hours Saturday" := 0;
                               "Overtime Comp.Saturday" := '';
                             END;
                             IF "Component Type" = "Component Type"::Kilometers THEN
                               Saturday := ROUND(Saturday,1);
                               SaturdayOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               IF NOT CheckLineEditable THEN
                                 EXIT;
                               IF ("Wage Component" ='') OR ("Component Type" = "Component Type"::Kilometers) AND
                                  (NOT ("Component Type" = "Component Type"::Expenses))
                               THEN BEGIN
                                 SiteManHoursManCU.StartAssistEdit("Receiving Company",
                                                                 "Component Type",
                                                                 Overtime,
                                                                 "Overtime Comp.Saturday",
                                                                 "Overtime Hours Saturday",
                                                                 Saturday,
                                                                 "Travel Hours Saturday");
                                 VALIDATE(Saturday);
                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 1100485021;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr=Sunday;
                Editable=LineEditable;
                OnValidate=BEGIN
                             IF Sunday = 0 THEN BEGIN
                               "Overtime Hours Sunday" := 0;
                               "Overtime Comp.Sunday" := '';
                             END;
                             IF "Component Type" = "Component Type"::Kilometers THEN
                               Sunday := ROUND(Sunday,1);
                               SundayOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               IF NOT CheckLineEditable THEN
                                 EXIT;
                               IF ("Wage Component" ='') OR ("Component Type" = "Component Type"::Kilometers) AND
                                  (NOT ("Component Type" = "Component Type"::Expenses))
                               THEN BEGIN
                                 SiteManHoursManCU.StartAssistEdit("Receiving Company",
                                                                 "Component Type",
                                                                 Overtime,
                                                                 "Overtime Comp.Sunday",
                                                                 "Overtime Hours Sunday",
                                                                 Sunday,
                                                                 "Travel Hours Sunday");
                                 VALIDATE(Sunday);
                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 1100485023;2;Field  ;
                DecimalPlaces=2:2;
                SourceExpr="Total Line";
                Editable=FALSE }

    { 1210190000;2;Field  ;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             IF ("Component Type" = "Component Type"::Expenses) AND
                                ("Posting Date" = 0D) AND (gWorkDate <> 0D) AND
                                (Quantity <> 0) AND (xRec.Quantity = 0)
                             THEN
                                "Posting Date" := gWorkDate;
                           END;
                            }

    { 1100485092;2;Field  ;
                SourceExpr=Amount;
                Visible=FALSE;
                Editable=NotUnmannedPlant }

    { 1210190002;2;Field  ;
                SourceExpr="Posting Date" }

    { 1100485072;2;Field  ;
                SourceExpr=Comment;
                Visible=TRUE;
                Editable=LineEditable }

  }
  CODE
  {
    VAR
      HourProjHeader@1100485029 : Record 11012362;
      SiteMngmntHoursCodesRec@1100485009 : Record 11012358;
      SiteMngmntHoursEmployeesRec@1100485002 : Record 11012357;
      SiteManHoursManCU@1100485000 : Codeunit 11012178;
      SiteMngmntHoursSetup@1100485064 : Record 11012355;
      DimensionValueRec@1100485065 : Record 349;
      ProjectCostObjectRec@1100485066 : Record 11012065;
      OvertimeComponentMonday@1100525013 : Boolean INDATASET;
      OvertimeComponentTuesday@1100525012 : Boolean INDATASET;
      OvertimeComponentWednesday@1100525011 : Boolean INDATASET;
      OvertimeComponentThursday@1100525010 : Boolean INDATASET;
      OvertimeComponentFriday@1100525009 : Boolean INDATASET;
      OvertimeComponentSaturday@1100525008 : Boolean INDATASET;
      OvertimeComponentSunday@1100525007 : Boolean INDATASET;
      CostCodeEditable@19043335 : Boolean INDATASET;
      LineEditable@1100525014 : Boolean INDATASET;
      ElementEditable@1100525015 : Boolean INDATASET;
      ExtensionContractEditable@1100525000 : Boolean INDATASET;
      PlantCompanyEditable@1100525001 : Boolean INDATASET;
      PlantTypeNoEditable@1100525002 : Boolean INDATASET;
      NotUnmannedPlant@1100525003 : Boolean INDATASET;
      CostComponentPlantEditable@1100525004 : Boolean INDATASET;
      gShiftCode@1210190001 : Code[10];
      "Shift CodeEditable"@19069016 : Boolean INDATASET;
      gWorkDate@1210190000 : Date;

    PROCEDURE SetSelections@1210190000(WorkDate@1210190000 : Date;ShiftCode@1210190001 : Code[10]);
    BEGIN
      gWorkDate := WorkDate;
      //*DP00033.sn
      gShiftCode := ShiftCode;
      IF gShiftCode <> '' THEN BEGIN
        FILTERGROUP(9);
        SETRANGE("Shift Code", gShiftCode);
        FILTERGROUP(0);
        "Shift CodeEditable" := FALSE;
      END;
      //*DP00033.en
    END;

    PROCEDURE Generatelines@1100525000();
    VAR
      lvHoursRec@1100525001 : Record 11012360;
      lvCreateHoursCU@1100525000 : Codeunit 11012178;
    BEGIN
      IF lvHoursRec.GET(Year,Week,"Supplying Company","Employee No.") THEN
        lvCreateHoursCU.CreateLines(lvHoursRec,TRUE,FALSE,'',FALSE,FALSE);
    END;

    PROCEDURE CheckLineEditable@1100525003() : Boolean;
    BEGIN
      IF NOT Rec.CheckUnmannedPlantHourLineOpen() THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE EmployeeNoOnAfterValidate@19040646();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CostObjectOnAfterValidate@19061648();
    VAR
      lvEmployeeRec@1100525000 : Record 5200;
    BEGIN
      IF "Component Type" = "Component Type"::Kilometers THEN BEGIN
        IF "Supplying Company" <> COMPANYNAME THEN
          lvEmployeeRec.CHANGECOMPANY("Supplying Company");
        lvEmployeeRec.GET("Employee No.");
        SetDefaultDriverType(lvEmployeeRec."Driver Type");
      END;
    END;

    LOCAL PROCEDURE WageComponentOnAfterValidate@19034041();
    VAR
      lvEmployeeRec@1100525000 : Record 5200;
    BEGIN
      IF "Component Type" = "Component Type"::Kilometers THEN BEGIN
        IF "Supplying Company" <> COMPANYNAME THEN
          lvEmployeeRec.CHANGECOMPANY("Supplying Company");
        lvEmployeeRec.GET("Employee No.");
        SetDefaultDriverType(lvEmployeeRec."Driver Type");
      END;
    END;

    LOCAL PROCEDURE MondayOnAfterValidate@19007363();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE TuesdayOnAfterValidate@19056583();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE WednesdayOnAfterValidate@19034974();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ThursdayOnAfterValidate@19015500();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE FridayOnAfterValidate@19048746();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SaturdayOnAfterValidate@19044351();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SundayOnAfterValidate@19007756();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OvertimeFormat@19016860();
    BEGIN
      OvertimeComponentMonday := ("Overtime Comp. Monday" <> '');
      OvertimeComponentTuesday := ("Overtime Comp.Tuesday" <> '');
      OvertimeComponentWednesday := ("Overtime Comp.Wednesday" <> '');
      OvertimeComponentThursday := ("Overtime Comp.Thursday" <> '');
      OvertimeComponentFriday := ("Overtime Comp.Friday" <> '');
      OvertimeComponentSaturday := ("Overtime Comp.Saturday" <> '');
      OvertimeComponentSunday := ("Overtime Comp.Sunday" <> '');
    END;

    PROCEDURE SetEditable@1100525005();
    BEGIN
      LineEditable := CheckLineEditable;

      ElementEditable := (LineEditable AND (Type <> Type::Indirect));
      ExtensionContractEditable := (LineEditable AND (Type = Type::Project));
      PlantCompanyEditable := (LineEditable AND
        (Type = Type::Plant) AND ("Receiving Company" <> ''));
      PlantTypeNoEditable := (LineEditable AND
        (Type IN [Type::Plant, Type::UnmannedPlant]) AND ("Plant Company" <> ''));
      NotUnmannedPlant := (LineEditable AND (Type <> Type::UnmannedPlant));
      CostCodeEditable := (LineEditable AND (Type = Type::Indirect));
      CostComponentPlantEditable := (LineEditable AND
        (Type = Type::Plant) AND ("Plant Company" <> ''));
    END;

    BEGIN
    END.
  }
}

