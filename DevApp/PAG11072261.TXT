OBJECT Page 11072261 Estimate Construct Subform
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Estimate Construct Subform;
    SourceTable=Table11012154;
    DelayedInsert=No;
    PageType=ListPart;
    AutoSplitKey=Yes;
    RefreshOnActivate=Yes;
    OnInit=BEGIN
             "Scheme CodeEditable" := TRUE;
             "Trade ExpertiseEditable" := TRUE;
             "Trade SpecialityEditable" := TRUE;
             DisciplineEditable := TRUE;
             VendorEditable := TRUE;
             "Price AgreementEditable" := TRUE;
             "Ask for QuoteEditable" := TRUE;
             "Document No.Editable" := TRUE;
             CodeEditable := TRUE;
             CostObjectEditable := TRUE;
             "Discount %Editable" := TRUE;
             "Gross PriceEditable" := TRUE;
             "Plant PriceEditable" := TRUE;
             "Subcontracting PriceEditable" := TRUE;
             "Material PriceEditable" := TRUE;
             "Rate CodeEditable" := TRUE;
             NormEditable := TRUE;
             "Sub Operation CodeEditable" := TRUE;
             "Line StatusEditable" := TRUE;
             "Unit of MeasureEditable" := TRUE;
             QuantityEditable := TRUE;
             "Unit of TimeEditable" := TRUE;
             "Time QuantityEditable" := TRUE;
             "Item No.Editable" := TRUE;
             "Trade ItemEditable" := TRUE;
             "Vendor (Trade Item)Editable" := TRUE;
             "Basic ItemEditable" := TRUE;
             ManufacturerEditable := TRUE;
             RecipeEditable := TRUE;
             "Recipe GroupEditable" := TRUE;
             "Norm GroupEditable" := TRUE;
             DescriptionEditable := TRUE;
           END;

    OnOpenPage=BEGIN
                 GetFilterZeroLines(FALSE);
                 IF ServSetup.READPERMISSION THEN
                   ServSetup.GET;
               END;

    OnAfterGetRecord=BEGIN
                       DetermineCostObject(1);
                       RefQuote := RouteRefMgtCU.GetQuoteOfReference("Purchase Route Reference");
                       GetItemSpecifications;

                       IF gFromReference THEN BEGIN
                         gFromReference := FALSE;
                         SETRANGE("Line No.");
                       END;

                       GetEstTotals();
                       OnAfterGetCurrRecord;
                       Surcharge37OnFormat;
                       NormOnFormat;
                       GrossPriceOnFormat;
                       MaterialPriceOnFormat;
                       SubcontractingPriceOnFormat;
                       PlantPriceOnFormat;
                     END;

    OnNewRecord=BEGIN
                  CostObject := '';
                  RefQuote := '';
                  IF EstRec.GET("Estimate No.") THEN
                    "Recipe Group" := EstRec."Recipe Group";
                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=VAR
                     lvSubEstRec@1100485002 : Record 11012152;
                     lvPartRec@1100485001 : Record 11012153;
                   BEGIN
                     CheckEstEditable;
                     IF NOT Fixed THEN BEGIN
                     //CurrPage.UPDATE(FALSE);  //db, 23-02-04
                       ERROR(Text000);
                     END;
                     CheckHideZeroLines;  //C025240

                     IF NOT lvSubEstRec.GET("Estimate No.", "Sub-Estimate No.") THEN BEGIN
                       lvSubEstRec.VALIDATE("Estimate No.", "Estimate No.");
                       lvSubEstRec.VALIDATE("Sub-Estimate No.", "Sub-Estimate No.");
                       lvSubEstRec.INSERT(TRUE);
                     END;

                     IF NOT lvPartRec.GET("Estimate No.", "Sub-Estimate No.", "Part Group", Part) THEN BEGIN
                        lvPartRec.VALIDATE("Estimate No.", "Estimate No.");
                        lvPartRec.VALIDATE("Sub-Estimate No.", "Sub-Estimate No.");
                        lvPartRec.VALIDATE("Part Group", "Part Group");
                        lvPartRec.VALIDATE(Part, Part);
                        lvPartRec.INSERT(TRUE);
                     END;

                     ValidateRecipe(0);
                   END;

    OnModifyRecord=BEGIN
                     CheckEstEditable;
                     IF NOT Fixed THEN BEGIN
                       CurrPage.UPDATE(FALSE);
                       ERROR(Text001);
                     END;
                     ValidateRecipe(1);
                   END;

    OnDeleteRecord=BEGIN
                     CheckEstEditable;
                     IF NOT Fixed THEN BEGIN
                       CurrPage.UPDATE(FALSE);
                       ERROR(Text002);
                     END;

                     RouteRefMgtCU.CheckDeleteEstLineHasQuoteOLD(Rec, TRUE);
                   END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 1100485058;2;Field  ;
                SourceExpr="Sub-Estimate No.";
                OnValidate=VAR
                             SubEstRec@1100485000 : Record 11012152;
                           BEGIN
                             IF NOT SubEstRec.GET("Estimate No.", "Sub-Estimate No.") THEN BEGIN
                               SubEstRec."Estimate No." := "Estimate No.";
                               SubEstRec."Sub-Estimate No." := "Sub-Estimate No." ;
                               SubEstRec.INSERT(TRUE);
                             END;

                             "Part Group" := SubEstRec."Part Group";
                           END;

                OnAssistEdit=VAR
                               EstRec@1100485001 : Record 11012151;
                               EstFrm@1100485000 : Page 11072266;
                               lvSubestRec@1100485003 : Record 11012152;
                             BEGIN
                               EstRec.SETRANGE("No.","Estimate No.");
                               EstFrm.SETTABLEVIEW(EstRec);
                               EstFrm.LOOKUPMODE(TRUE);
                               IF EstFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                               //  EstFrm.SetSubEstimateLine(lvSubestRec);
                               //  "Sub-Estimate No." := lvSubestRec."Sub-Estimate No.";
                               END;
                             END;
                              }

    { 1100485060;2;Field  ;
                SourceExpr=Part;
                OnAssistEdit=VAR
                               SubEstRec@1100485001 : Record 11012152;
                               lvSubestPartRec@1100485003 : Record 11012153;
                             BEGIN
                             END;
                              }

    { 2   ;2   ;Field     ;
                SourceExpr="Recipe Group";
                Visible=FALSE;
                Editable="Recipe GroupEditable" }

    { 4   ;2   ;Field     ;
                SourceExpr=Recipe;
                Visible=FALSE;
                Editable=RecipeEditable;
                OnValidate=BEGIN
                             RecipeOnAfterValidate;
                           END;

                OnLookup=VAR
                           RecipeFrm@11012002 : Page 11012164;
                           RecipeRec@11012003 : Record 11012155;
                           PartLineRec@1210190003 : Record 11012187;
                           ShowPartLines@1210190002 : Boolean;
                         BEGIN
                           IF ("Item No." <> '') OR ("Basic Item" <> '') OR ("Trade Item" <> '') THEN EXIT;

                           CLEAR(RecipeFrm);
                           RecipeFrm.LOOKUPMODE(TRUE);
                           RecipeFrm.SetSelection(DATABASE::"Estimate Line OLD","Estimate No.","Sub-Estimate No.","Part Group",Part,'','','','','',TRUE);

                           RecipeRec.RESET;
                           ShowPartLines := FALSE;
                           EstRec.GET("Estimate No.");
                           IF EstRec."Copy Part Lines" = FALSE THEN BEGIN
                             PartLineRec.SETRANGE(Part, Part);
                             PartLineRec.SETRANGE("Part Group", "Part Group");
                             PartLineRec.SETFILTER(Recipe, '<>%1', '');
                             IF PartLineRec.FIND('-') THEN BEGIN
                               ShowPartLines := TRUE;
                               REPEAT
                                 RecipeRec.GET(PartLineRec."Recipe Group", PartLineRec.Recipe);
                                 RecipeRec.MARK(TRUE);
                               UNTIL PartLineRec.NEXT = 0;
                               RecipeRec.MARKEDONLY(TRUE);
                             END;
                           END;

                           IF EstRec.Condition <> '' THEN
                             RecipeRec.SETRANGE(Condition, EstRec.Condition);
                           RecipeRec.SETRANGE("Recipe Group","Recipe Group");
                           IF RecipeRec.GET("Recipe Group",Recipe) THEN
                             RecipeFrm.SETRECORD(RecipeRec);
                           RecipeFrm.SETTABLEVIEW(RecipeRec);
                           IF RecipeFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             RecipeFrm.GETRECORD(RecipeRec);
                             "Recipe Group" := RecipeRec."Recipe Group";
                             VALIDATE(Recipe, RecipeRec."No.");
                             CurrPage.SAVERECORD;  //Copy-action for recipe moved to insert-trigger of form
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 1210190006;2;Field  ;
                SourceExpr="Project No.";
                Visible=FALSE }

    { 1210190022;2;Field  ;
                SourceExpr=Element;
                Visible=FALSE }

    { 1100528400;2;Field  ;
                SourceExpr="Project Planning Activity Code";
                Visible=FALSE }

    { 1100485050;2;Field  ;
                SourceExpr="Plant Type";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr="Item No.";
                Visible=FALSE;
                Editable="Item No.Editable";
                OnLookup=BEGIN
                           IF HandleLookupItem(FIELDNO("Item No.")) THEN
                             CurrPage.UPDATE(TRUE);  //db, 09-03-07 (call 8283)
                         END;
                          }

    { 8   ;2   ;Field     ;
                SourceExpr=Manufacturer;
                Visible=FALSE;
                Editable=ManufacturerEditable;
                OnLookup=BEGIN
                           GabiVendorRec.HandleVendorLookup(1, Manufacturer);
                         END;
                          }

    { 10  ;2   ;Field     ;
                SourceExpr="Basic Item";
                Visible=FALSE;
                Editable="Basic ItemEditable";
                OnLookup=BEGIN
                           IF HandleLookupItem(FIELDNO("Basic Item")) THEN
                             CurrPage.UPDATE(TRUE);  //db, 09-03-07 (call 8283)
                         END;
                          }

    { 12  ;2   ;Field     ;
                SourceExpr="Vendor (Trade Item)";
                Visible=FALSE;
                Editable="Vendor (Trade Item)Editable";
                OnLookup=VAR
                           lvItem@1100485000 : Code[20];
                         BEGIN
                           lvItem := "Vendor (Trade Item)";
                           GabiVendorRec.HandleVendorLookup(2, lvItem);
                           VALIDATE("Vendor (Trade Item)", lvItem);
                         END;
                          }

    { 14  ;2   ;Field     ;
                SourceExpr="Trade Item";
                Visible=FALSE;
                Editable="Trade ItemEditable";
                OnLookup=BEGIN
                           IF HandleLookupItem(FIELDNO("Trade Item")) THEN
                             CurrPage.UPDATE(TRUE);  //db, 09-03-07 (call 8283)
                         END;
                          }

    { 18  ;2   ;Field     ;
                SourceExpr="Item Brand";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr="Item Type";
                Visible=FALSE }

    { 1100485016;2;Field  ;
                SourceExpr="Item Series";
                Visible=FALSE }

    { 1100485062;2;Field  ;
                SourceExpr=Admicode }

    { 11012000;2;Field    ;
                Name=CostObject;
                CaptionML=ENU=Cost Object;
                SourceExpr=CostObject;
                Visible=FALSE;
                Editable=CostObjectEditable;
                OnValidate=BEGIN
                             ProcessCostObject(1);  //db, 18-11-04
                               CostObjectOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           IF Recipe <> '' THEN EXIT;
                           ProcessCostObject(2);  //db, 18-11-04
                         END;
                          }

    { 1100485044;2;Field  ;
                SourceExpr="Cost Component";
                Visible=FALSE }

    { 1210190016;2;Field  ;
                SourceExpr=Code;
                Visible=FALSE;
                Editable=CodeEditable }

    { 22  ;2   ;Field     ;
                SourceExpr=Description;
                Editable=DescriptionEditable }

    { 1210190002;2;Field  ;
                SourceExpr="Internal Text Block";
                Visible=FALSE }

    { 24  ;2   ;Field     ;
                SourceExpr="External Text Block";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                SourceExpr="Time Quantity";
                Visible=FALSE;
                Editable="Time QuantityEditable";
                OnValidate=BEGIN
                             TimeQuantityOnAfterValidate;
                           END;
                            }

    { 28  ;2   ;Field     ;
                SourceExpr="Unit of Time";
                Visible=FALSE;
                Editable="Unit of TimeEditable" }

    { 11012002;2;Field    ;
                BlankZero=Yes;
                SourceExpr=Length;
                Visible=FALSE;
                OnValidate=BEGIN
                             LengthOnAfterValidate;
                           END;
                            }

    { 11012004;2;Field    ;
                BlankZero=Yes;
                SourceExpr=Width;
                Visible=FALSE;
                OnValidate=BEGIN
                             WidthOnAfterValidate;
                           END;
                            }

    { 1210190000;2;Field  ;
                BlankZero=Yes;
                SourceExpr=Height;
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                SourceExpr=Quantity;
                Editable=QuantityEditable;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;
                            }

    { 32  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Editable="Unit of MeasureEditable" }

    { 34  ;2   ;Field     ;
                SourceExpr="Line Status";
                Editable="Line StatusEditable" }

    { 36  ;2   ;Field     ;
                SourceExpr="Surcharge Type" }

    { 38  ;2   ;Field     ;
                SourceExpr="Surcharge %";
                OnDrillDown=VAR
                              ChrgFrm@1100485001 : Page 11012219;
                            BEGIN
                              ChrgRec.RESET;
                              ChrgRec.SETRANGE("Estimate No.", "Estimate No.");
                              ChrgRec.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
                              ChrgRec.SETRANGE("Part Group", "Part Group");
                              ChrgRec.SETRANGE(Part, Part);
                              ChrgRec.SETRANGE("Recipe Line", 0);
                              ChrgRec.SETRANGE("Recipe Group", '');
                              ChrgRec.SETRANGE(Recipe, '');
                              ChrgRec.SETRANGE("Surcharge Line", "Line No.");
                              ChrgFrm.SETTABLEVIEW(ChrgRec);
                              ChrgFrm.SetSelection(2);
                              ChrgFrm.RUNMODAL;

                              RecalcTotals;
                              CurrPage.UPDATE(TRUE);
                            END;
                             }

    { 40  ;2   ;Field     ;
                SourceExpr="Norm Group";
                Visible=FALSE;
                Editable="Norm GroupEditable";
                OnValidate=BEGIN
                             NormGroupOnAfterValidate;
                           END;
                            }

    { 42  ;2   ;Field     ;
                SourceExpr="Sub Operation Code";
                Visible=FALSE;
                Editable="Sub Operation CodeEditable";
                OnValidate=BEGIN
                             ProcessSubOperation;  //db, 21-12-04
                               SubOperationCodeOnAfterValidat;
                           END;

                OnLookup=VAR
                           OperFrm@1100485001 : Page 11012178;
                           OperRec@1100485000 : Record 11012166;
                         BEGIN
                           CLEAR(OperFrm);
                           OperFrm.LOOKUPMODE(TRUE);
                           OperFrm.SetSelection(DATABASE::"Estimate Line OLD","Estimate No.","Sub-Estimate No.",
                             "Part Group",Part,0,'','');

                           OperRec.Code := "Sub Operation Code";
                           OperFrm.SETRECORD(OperRec);

                           IF OperFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             OperFrm.GETRECORD(OperRec);
                             VALIDATE("Sub Operation Code", OperRec.Code);
                             RecalcTotals;
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 44  ;2   ;Field     ;
                SourceExpr=Norm;
                Editable=NormEditable;
                OnValidate=BEGIN
                             NormOnAfterValidate;
                           END;

                OnLookup=VAR
                           NormGroupFrm@11012002 : Page 11012174;
                         BEGIN
                           //DP00381
                           IF HandleLookupOperationNorm THEN
                             CurrPage.UPDATE(TRUE)
                           ELSE
                             RecalcTotals;
                         END;
                          }

    { 1100485052;2;Field  ;
                CaptionML=ENU=Norm (Minuts);
                SourceExpr=GetMinuts(0);
                Visible=FALSE;
                Editable=FALSE }

    { 46  ;2   ;Field     ;
                SourceExpr="Rate Code";
                Editable="Rate CodeEditable";
                OnValidate=BEGIN
                             RateCodeOnAfterValidate;
                           END;
                            }

    { 48  ;2   ;Field     ;
                SourceExpr=Rate }

    { 54  ;2   ;Field     ;
                SourceExpr="Gross Price";
                Visible=FALSE;
                Editable="Gross PriceEditable";
                OnValidate=BEGIN
                             GrossPriceOnAfterValidate;
                           END;
                            }

    { 52  ;2   ;Field     ;
                SourceExpr="Discount %";
                Visible=FALSE;
                Editable="Discount %Editable";
                OnValidate=BEGIN
                             Discount37OnAfterValidate;
                           END;
                            }

    { 50  ;2   ;Field     ;
                SourceExpr="Material Price";
                Editable="Material PriceEditable";
                OnValidate=BEGIN
                             MaterialPriceOnAfterValidate;
                           END;
                            }

    { 56  ;2   ;Field     ;
                SourceExpr="Subcontracting Price";
                Editable="Subcontracting PriceEditable";
                OnValidate=BEGIN
                             SubcontractingPriceOnAfterVali;
                           END;
                            }

    { 58  ;2   ;Field     ;
                SourceExpr="Plant Price";
                Editable="Plant PriceEditable";
                OnValidate=BEGIN
                             PlantPriceOnAfterValidate;
                           END;
                            }

    { 1210190004;2;Field  ;
                SourceExpr="Total Recipe";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              EstLineRec := Rec;
                              StartRecipe(EstLineRec);   //db, 01-11-04
                            END;
                             }

    { 1100485008;2;Field  ;
                DecimalPlaces=2:3;
                SourceExpr=Hours;
                Visible=FALSE }

    { 1100485000;2;Field  ;
                SourceExpr="Labor Amount";
                Visible=FALSE }

    { 1100485002;2;Field  ;
                SourceExpr="Gross Amount";
                Visible=FALSE }

    { 1100485006;2;Field  ;
                SourceExpr="Material Amount";
                Visible=FALSE }

    { 1100485004;2;Field  ;
                SourceExpr="Subcontracting Amount";
                Visible=FALSE }

    { 1100485010;2;Field  ;
                SourceExpr="Plant Amount";
                Visible=FALSE }

    { 1100485012;2;Field  ;
                SourceExpr=Amount;
                Visible=FALSE }

    { 60  ;2   ;Field     ;
                SourceExpr="Price Reference Date";
                Visible=FALSE }

    { 1100485032;2;Field  ;
                SourceExpr="Norm Agreement";
                Visible=FALSE }

    { 1210190018;2;Field  ;
                SourceExpr="Price Agreement";
                Visible=FALSE;
                Editable="Price AgreementEditable" }

    { 1100485054;2;Field  ;
                SourceExpr="Subcontracting Agreement";
                Visible=FALSE }

    { 1100485056;2;Field  ;
                SourceExpr="Plant Agreement";
                Visible=FALSE }

    { 1210190008;2;Field  ;
                SourceExpr="Ask for Quote";
                Visible=FALSE;
                Editable="Ask for QuoteEditable" }

    { 1210190012;2;Field  ;
                CaptionML=ENU=Quote No.;
                SourceExpr=RefQuote;
                Visible=FALSE;
                Editable=FALSE;
                OnLookup=VAR
                           lvPurchHeadRec@1210190002 : Record 38;
                         BEGIN
                           IF (RefQuote = '') THEN
                             EXIT;

                           IF (COPYSTR(RefQuote, 1, 1) = '<') THEN  // IF Quote No. is '<Nr.>', then more than one quote present
                             RouteRefMgtCU.ShowReferenceQuoteList("Purchase Route Reference")
                           ELSE BEGIN
                             lvPurchHeadRec.SETRANGE("Document Type", lvPurchHeadRec."Document Type"::Quote);
                             lvPurchHeadRec.SETRANGE("No.", RefQuote);
                             PAGE.RUNMODAL(PAGE::"Purchase Quote", lvPurchHeadRec);
                           END;
                         END;
                          }

    { 1210190010;2;Field  ;
                SourceExpr="Purchase Route Reference";
                Visible=FALSE }

    { 1210190014;2;Field  ;
                SourceExpr="Document No.";
                Visible=FALSE;
                Editable="Document No.Editable" }

    { 1100485046;2;Field  ;
                SourceExpr="Object No.";
                Visible=FALSE }

    { 1100485048;2;Field  ;
                SourceExpr="Object Customer";
                Visible=FALSE }

    { 1100485018;2;Field  ;
                SourceExpr=Discipline;
                Visible=FALSE;
                Editable=DisciplineEditable }

    { 1100485020;2;Field  ;
                SourceExpr="Trade Speciality";
                Visible=FALSE;
                Editable="Trade SpecialityEditable" }

    { 1100485022;2;Field  ;
                SourceExpr="Trade Expertise";
                Visible=FALSE;
                Editable="Trade ExpertiseEditable" }

    { 1100485028;2;Field  ;
                SourceExpr=Subcontractor;
                Visible=FALSE;
                OnValidate=BEGIN
                             SubcontractorOnAfterValidate;
                           END;
                            }

    { 1100485030;2;Field  ;
                SourceExpr="Subcontractor Name";
                Visible=FALSE }

    { 1210190020;2;Field  ;
                SourceExpr=Vendor;
                Visible=FALSE;
                Editable=VendorEditable;
                OnValidate=BEGIN
                             VendorOnAfterValidate;
                           END;
                            }

    { 1100485014;2;Field  ;
                SourceExpr="Vendor Name";
                Visible=FALSE }

    { 1100485042;2;Field  ;
                SourceExpr="Scheme Code";
                Visible=FALSE;
                Editable="Scheme CodeEditable" }

    { 1100485036;2;Field  ;
                SourceExpr=Comments;
                Visible=FALSE }

    { 1100485040;2;Field  ;
                SourceExpr="Comments for Logistics";
                Visible=FALSE }

    { 1100485038;2;Field  ;
                SourceExpr=Supply;
                Visible=FALSE }

    { 1100485034;2;Field  ;
                SourceExpr="Material Sheet";
                Visible=FALSE }

    { 62  ;1   ;Group     ;
                Name=Totals;
                CaptionML=ENU=Totals }

    { 69  ;2   ;Field     ;
                Name=LabBal;
                CaptionML=ENU=Labor;
                SourceExpr=EstRec."Labor OLD";
                Editable=FALSE }

    { 71  ;2   ;Field     ;
                Name=MaSld;
                CaptionML=ENU=Material;
                SourceExpr=EstRec."Material OLD";
                Editable=FALSE }

    { 67  ;2   ;Field     ;
                Name=MeSld;
                CaptionML=ENU=Plant;
                SourceExpr=EstRec."Plant OLD";
                Editable=FALSE }

    { 73  ;2   ;Field     ;
                Name=OnSld;
                CaptionML=ENU=Subcontracting;
                SourceExpr=EstRec."Subcontracting OLD";
                Editable=FALSE }

    { 65  ;2   ;Field     ;
                Name=UrSld;
                CaptionML=ENU=Hours;
                SourceExpr=EstRec."Hours OLD";
                Editable=FALSE }

    { 63  ;2   ;Field     ;
                Name=TotBal;
                CaptionML=ENU=Total;
                SourceExpr=EstRec."Total OLD";
                Editable=FALSE }

  }
  CODE
  {
    VAR
      Text000@11012016 : TextConst 'ENU=Adding not allowed, Estimate is fixed.';
      Text001@11012017 : TextConst 'ENU=Changing not allowed, Estimate is fixed.';
      Text002@11012018 : TextConst 'ENU=Deleting not allowed, Estimate is fixed.';
      Text003@11012019 : TextConst 'ENU=Line is no Recipe Line';
      ServSetup@1100485004 : Record 11012800;
      GabiVendorRec@1100485001 : Record 11012304;
      EstRec@1210190002 : Record 11012151;
      ChrgRec@1210190004 : Record 11012175;
      EstLineRec@1210190003 : Record 11012154;
      RcpLineRec@1100485000 : Record 11012156;
      RecipeRec@1210190005 : Record 11012155;
      PartLineRec@1100485002 : Record 11012187;
      DimValRec@1210190008 : Record 349;
      OldDimValRec@1210190013 : Record 349;
      Fixed@11012007 : Boolean;
      RouteRefMgtCU@1210190011 : Codeunit 11012045;
      chrg0@11012009 : Boolean;
      chrg1@11012010 : Boolean;
      chrg2@11012011 : Boolean;
      chrg3@11012012 : Boolean;
      chrg4@11012013 : Boolean;
      Text009@1210190007 : TextConst 'ENU=Add Line first.';
      gFromReference@1210190012 : Boolean;
      CostObject@1210190000 : Code[20];
      RefQuote@1210190010 : Code[20];
      BufferMgt@1100485003 : Codeunit 11012150;
      DescriptionEditable@19061412 : Boolean INDATASET;
      "Norm GroupEditable"@19020879 : Boolean INDATASET;
      "Recipe GroupEditable"@19061145 : Boolean INDATASET;
      RecipeEditable@19037157 : Boolean INDATASET;
      ManufacturerEditable@19042322 : Boolean INDATASET;
      "Basic ItemEditable"@19063333 : Boolean INDATASET;
      "Vendor (Trade Item)Editable"@19034316 : Boolean INDATASET;
      "Trade ItemEditable"@19000132 : Boolean INDATASET;
      "Item No.Editable"@19055681 : Boolean INDATASET;
      "Time QuantityEditable"@19056128 : Boolean INDATASET;
      "Unit of TimeEditable"@19032307 : Boolean INDATASET;
      QuantityEditable@19013162 : Boolean INDATASET;
      "Unit of MeasureEditable"@19007173 : Boolean INDATASET;
      "Line StatusEditable"@19051744 : Boolean INDATASET;
      "Sub Operation CodeEditable"@19047583 : Boolean INDATASET;
      NormEditable@19001717 : Boolean INDATASET;
      "Rate CodeEditable"@19068793 : Boolean INDATASET;
      "Material PriceEditable"@19041798 : Boolean INDATASET;
      "Subcontracting PriceEditable"@19058522 : Boolean INDATASET;
      "Plant PriceEditable"@19002219 : Boolean INDATASET;
      "Gross PriceEditable"@19075252 : Boolean INDATASET;
      "Discount %Editable"@19004717 : Boolean INDATASET;
      CostObjectEditable@19039205 : Boolean INDATASET;
      CodeEditable@19001698 : Boolean INDATASET;
      "Document No.Editable"@19064841 : Boolean INDATASET;
      "Ask for QuoteEditable"@19065696 : Boolean INDATASET;
      "Price AgreementEditable"@19020391 : Boolean INDATASET;
      VendorEditable@19059821 : Boolean INDATASET;
      DisciplineEditable@19028222 : Boolean INDATASET;
      "Trade SpecialityEditable"@19063570 : Boolean INDATASET;
      "Trade ExpertiseEditable"@19008865 : Boolean INDATASET;
      "Scheme CodeEditable"@19006379 : Boolean INDATASET;
      "Surcharge %Emphasize"@19034906 : Boolean INDATASET;
      NormEmphasize@19010576 : Boolean INDATASET;
      "Gross PriceEmphasize"@19074771 : Boolean INDATASET;
      "Material PriceEmphasize"@19051745 : Boolean INDATASET;
      "Subcontracting PriceEmphasize"@19001766 : Boolean INDATASET;
      "Plant PriceEmphasize"@19034801 : Boolean INDATASET;

    PROCEDURE StartRecipe@1(VAR EstLineRec@1210190000 : Record 11012154);
    VAR
      RcpFrm@11012001 : Page 11072277;
    BEGIN
      IF Recipe = '' THEN
        ERROR(Text003);
      EstLineRec.SETRANGE("Estimate No.","Estimate No.");
      EstLineRec.SETRANGE("Sub-Estimate No.","Sub-Estimate No.");
      EstLineRec.SETRANGE(Part,Part);
      EstLineRec.SETRANGE("Line No.","Line No.");
      RcpFrm.SETTABLEVIEW(EstLineRec);

      //**Return result to mainprocess for correct display of parents if keyfields switched by F5.
      IF RcpFrm.RUNMODAL = ACTION::LookupOK THEN
        RcpFrm.GETRECORD(EstLineRec);
      CLEAR(RcpFrm);
    END;

    PROCEDURE CopyRecipe@2();
    VAR
      CopyFrm@11012000 : Page 11012213;
    BEGIN
      CopyFrm.FillDefaults("Estimate No.","Sub-Estimate No.","Part Group",Part,"Line No.","Recipe Group",Recipe);
      CopyFrm.StdDialogRunModal;
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE SelectEntry@1100485001();
    BEGIN
      CopyEntry;
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE SelectPartLines@1100485002();
    VAR
      CopyFrm@1100485000 : Page 11012242;
    BEGIN
      CopyFrm.FillDefaults("Estimate No.","Sub-Estimate No.","Part Group",Part,"Line No.");
      PartLineRec.SETRANGE("Part Group","Part Group");
      PartLineRec.SETRANGE(Part,Part);
      CopyFrm.SETTABLEVIEW(PartLineRec);
      CopyFrm.EDITABLE(FALSE);
      CopyFrm.RUNMODAL;

      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE CopyToBuffer@1210190005();
    VAR
      EstimateLine@1100525000 : Record 11012154;
    BEGIN
      EstimateLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(EstimateLine);
      BufferMgt.CopyToBuffer(0,EstimateLine,RcpLineRec,PartLineRec);
    END;

    PROCEDURE CopyFromBuffer@1210190006(EstimateLine@1100525000 : Record 11012154);
    BEGIN
      BufferMgt.CopyFromBuffer(0,Rec,RcpLineRec,PartLineRec);
    END;

    PROCEDURE ShowBuffer@1210190007();
    BEGIN
      BufferMgt.ShowBuffer(0,Rec,RcpLineRec,PartLineRec);
    END;

    PROCEDURE CheckEstEditable@3();
    VAR
      EstRec@11012000 : Record 11012151;
    BEGIN
      IF EstRec.GET("Estimate No.") THEN
        Fixed := NOT EstRec.Fixed;
    END;

    PROCEDURE GenerateCharge@4();
    VAR
      EstimateLine@1100525000 : Record 11012154;
    BEGIN
      EstimateLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(EstimateLine);
      EstimateLine.CreateCharge;
      RecalcTotals;
    END;

    PROCEDURE RecalcTotals@5();
    BEGIN
      CurrPage.SAVERECORD;
      CalculateTotals;
      CheckEstimateCharge;
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE ChargePresent@7();
    BEGIN
      chrg0 := FALSE;
      chrg1 := FALSE;
      chrg2 := FALSE;
      chrg3 := FALSE;
      chrg4 := FALSE;

      ChrgRec.RESET;
      ChrgRec.SETRANGE("Estimate No.", "Estimate No.");
      ChrgRec.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
      ChrgRec.SETRANGE("Part Group", "Part Group");
      ChrgRec.SETRANGE(Part, Part);
      ChrgRec.SETRANGE("Recipe Line", 0);
      ChrgRec.SETRANGE("Recipe Group", '');
      ChrgRec.SETRANGE(Recipe, '');
      ChrgRec.SETRANGE("Basic Line", "Line No.");
      ChrgRec.SETRANGE("Surcharge Line");
      IF ChrgRec.FINDSET THEN BEGIN
        REPEAT
          IF EstLineRec.GET("Estimate No.", "Sub-Estimate No.", "Part Group", Part, ChrgRec."Surcharge Line") THEN BEGIN
            CASE EstLineRec."Surcharge Type" OF
              EstLineRec."Surcharge Type"::Labor:
                chrg1 := TRUE;
              EstLineRec."Surcharge Type"::Material:
                chrg2 := TRUE;
              EstLineRec."Surcharge Type"::Subcontracting:
                chrg3 := TRUE;
              EstLineRec."Surcharge Type"::Plant:
                chrg4 := TRUE;
            END;
          END;
        UNTIL ChrgRec.NEXT = 0;
      END;

      ChrgRec.SETRANGE("Basic Line");
      ChrgRec.SETRANGE("Surcharge Line", "Line No.");
      IF ChrgRec.FINDFIRST THEN
        chrg0 := TRUE;
    END;

    PROCEDURE ValidateRecipe@6(lvAct@11012000 : Integer);
    VAR
      RecipeLineRec@11012001 : Record 11012156;
    BEGIN
      IF Recipe = '' THEN EXIT;

      IF lvAct = 1 THEN BEGIN
        RecipeLineRec.SETRANGE("Estimate No.", "Estimate No.");
        RecipeLineRec.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
        RecipeLineRec.SETRANGE("Part Group", "Part Group");
        RecipeLineRec.SETRANGE(Part, Part);
        RecipeLineRec.SETRANGE("Estimate Line", "Line No.");
        IF RecipeLineRec.FINDFIRST THEN EXIT;
      END;

      IF RecipeRec.GET("Recipe Group",Recipe) THEN BEGIN
        Description := RecipeRec.Description;
        "Unit of Measure" := RecipeRec."Unit of Measure";
        Manufacturer := RecipeRec.Manufacturer;
        CopyRecipe;
      END;
    END;

    PROCEDURE EditText@8(lvType@1210190000 : 'intern,extern');
    VAR
      TextFrm@11012001 : Page 11012120;
    BEGIN
      IF "Line No." = 0 THEN
        ERROR(Text009);

      TextFrm.TextType(lvType);
      TextFrm.SetSelection(DATABASE::"Estimate Line OLD","Estimate No.","Sub-Estimate No.",
        "Part Group",Part,'','',"Line No.",0);

      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    PROCEDURE ProcessCostObject@1210190000(lvAction@1210190000 : Integer);
    BEGIN
      IF lvAction = 0 THEN BEGIN   //before input
        IF CostObject <> '' THEN BEGIN
          OldDimValRec.RESET;
          OldDimValRec.SETRANGE("Global Dimension No.",2);
          OldDimValRec.SETRANGE(Code, CostObject);
          OldDimValRec.FINDFIRST;
        END ELSE BEGIN
          CLEAR(OldDimValRec);
        END;
      END;

      IF lvAction = 1 THEN BEGIN   //validate
        IF CostObject <> '' THEN BEGIN
          DimValRec.RESET;
          DimValRec.SETRANGE("Global Dimension No.",2);
            DimValRec.SETRANGE(Code, CostObject);
          IF OldDimValRec.Code <> '' THEN
            DimValRec.SETRANGE("Cost Type", OldDimValRec."Cost Type");
          DimValRec.FINDFIRST;
        END ELSE BEGIN
          IF "Item No." + "Basic Item" + "Trade Item" <> '' THEN
            DimValRec.TESTFIELD("Cost Type", DimValRec."Cost Type"::Material);
        END;
        DetermineCostObject(2);
      END;

      IF lvAction = 2 THEN BEGIN   //lookup
        DimValRec.RESET;
        DimValRec.Code := CostObject;
        DimValRec.SETRANGE("Global Dimension No.",2);
        IF OldDimValRec.Code <> '' THEN
          DimValRec.SETRANGE("Cost Type", OldDimValRec."Cost Type");
        IF PAGE.RUNMODAL(PAGE::"Cost Object List", DimValRec) = ACTION::LookupOK THEN BEGIN
          CostObject := DimValRec.Code;
          ProcessCostObject(1);
        END;
      END;
    END;

    PROCEDURE DetermineCostObject@1210190001(lvAction@1210190000 : Integer);
    BEGIN
      IF lvAction = 1 THEN BEGIN
        CostObject := '';
        IF "Item No." + "Basic Item" + "Trade Item" <> '' THEN
          CostObject := "Cost Object Material";
        IF CostObject = '' THEN
          CostObject := "Cost Object Labor";
        IF CostObject = '' THEN
          CostObject := "Cost Object Material";
        IF CostObject = '' THEN
          CostObject := "Cost Object Subcontracting";
        IF CostObject = '' THEN
          CostObject := "Cost Object Plant";
      END ELSE BEGIN
        "Cost Object Labor" := '';
        "Cost Object Material" := '';
        "Cost Object Subcontracting" := '';
        "Cost Object Plant" := '';
        IF DimValRec."Cost Type" = DimValRec."Cost Type"::Labor THEN
          VALIDATE("Cost Object Labor", DimValRec.Code);
        IF DimValRec."Cost Type" = DimValRec."Cost Type"::Material THEN
          VALIDATE("Cost Object Material", DimValRec.Code);
        IF DimValRec."Cost Type" = DimValRec."Cost Type"::Subcontracting THEN
          VALIDATE("Cost Object Subcontracting", DimValRec.Code);
        IF DimValRec."Cost Type" = DimValRec."Cost Type"::Plant THEN
          VALIDATE("Cost Object Plant", DimValRec.Code);

        CheckCostObject(CostObject,TRUE);  //function deleted in table validation
        IF "Item No." + "Basic Item" + "Trade Item" = '' THEN BEGIN
          IF "Sub Operation Code" <> '' THEN
            ProcessSubOperation
          ELSE
            Description := DimValRec.Name;
        END;
      END;
    END;

    PROCEDURE HandleZeroLines@1210190002();
    BEGIN
      SetFilterZeroLinesByUser(Rec);  //C025240
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE GetFilterZeroLines@1210190003(lvRefresh@1210190000 : Boolean);
    BEGIN
      GetFilterZeroLinesByUser(Rec);  //C025240
      IF lvRefresh = TRUE THEN
        CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE ShowPurchRouteRef@1210190004();
    BEGIN
      RouteRefMgtCU.ShowReferenceList("Purchase Route Reference");
    END;

    PROCEDURE InitSelectionFromReference@1210190008(IEstLineNo@1210190000 : Integer);
    BEGIN
      gFromReference := TRUE;
      SETRANGE("Line No.", IEstLineNo);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE CopyModelQuan@1100485000();
    VAR
      CopyFrm@11012000 : Page 11012259;
    BEGIN
      CopyFrm.FillDefaults("Estimate No.","Sub-Estimate No.","Part Group",Part,'');
      CopyFrm.StdDialogRunModal;
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE GetEstTotals@1100485005();
    BEGIN
      EstRec.GET("Estimate No.");
      EstRec.CALCFIELDS("Hours OLD", "Labor OLD", "Material OLD", "Subcontracting OLD", "Plant OLD", "Total OLD");
    END;

    PROCEDURE CopySubEstimate@1100485003();
    BEGIN
      //This may need to be filled from form: 11012151
    END;

    PROCEDURE StartTakeOffSheet@1100485004();
    BEGIN
      //This may need to be filled from form: 11012151
    END;

    LOCAL PROCEDURE RecipeOnAfterValidate@19052770();
    BEGIN
      CurrPage.SAVERECORD();  //copy-action for recipe moved to insert-trigger of form
      CurrPage.UPDATE(TRUE);  //db, 01-12-05
    END;

    LOCAL PROCEDURE CostObjectOnAfterValidate@19061648();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE TimeQuantityOnAfterValidate@19030511();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE LengthOnAfterValidate@19043825();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE WidthOnAfterValidate@19005050();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE NormGroupOnAfterValidate@19073036();
    BEGIN
      RecalcTotals;  //db, 13-06-05
    END;

    LOCAL PROCEDURE SubOperationCodeOnAfterValidat@19058750();
    BEGIN
      RecalcTotals;  //db, 13-06-05
      IF "Sub Operation Code" <> '' THEN
        "Norm Agreement" := FALSE; //db, 28-08-07
    END;

    LOCAL PROCEDURE NormOnAfterValidate@19051466();
    BEGIN
      "Norm Agreement" := TRUE; //db, 14-06-07
      RecalcTotals;
    END;

    LOCAL PROCEDURE RateCodeOnAfterValidate@19043554();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE GrossPriceOnAfterValidate@19036441();
    BEGIN
      "Price Agreement" := TRUE; //db, 14-06-06
      RecalcTotals;
    END;

    LOCAL PROCEDURE Discount37OnAfterValidate@19039847();
    BEGIN
      "Price Agreement" := TRUE; //db, 14-06-06
      RecalcTotals;
    END;

    LOCAL PROCEDURE MaterialPriceOnAfterValidate@19066096();
    BEGIN
      "Price Agreement" := TRUE; //db, 14-06-06
      RecalcTotals;
    END;

    LOCAL PROCEDURE SubcontractingPriceOnAfterVali@19026415();
    BEGIN
      "Subcontracting Agreement" := TRUE; //db, 16-01-08
      RecalcTotals;
    END;

    LOCAL PROCEDURE PlantPriceOnAfterValidate@19075011();
    BEGIN
      "Plant Agreement" := TRUE; //db, 16-01-08
      RecalcTotals;
    END;

    LOCAL PROCEDURE SubcontractorOnAfterValidate@19029042();
    BEGIN
      CALCFIELDS("Subcontractor Name");
    END;

    LOCAL PROCEDURE VendorOnAfterValidate@19052966();
    BEGIN
      CALCFIELDS("Vendor Name");
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      CheckEstEditable;
      DescriptionEditable := (Fixed);
      "Norm GroupEditable" := (Fixed);
      "Recipe GroupEditable" := (Fixed);
      RecipeEditable := (Fixed);
      ManufacturerEditable := (Fixed);
      "Basic ItemEditable" := (Fixed);
      "Vendor (Trade Item)Editable" := (Fixed);
      "Trade ItemEditable" := (Fixed);
      "Item No.Editable" := (Fixed);
      "Time QuantityEditable" := (Fixed);
      "Unit of TimeEditable" := (Fixed);
      QuantityEditable := (Fixed);
      "Unit of MeasureEditable" := (Fixed);
      "Line StatusEditable" := (Fixed);
      "Sub Operation CodeEditable" := (Fixed);
      NormEditable := (Fixed);
      "Rate CodeEditable" := (Fixed);
      "Material PriceEditable" := (Fixed);
      "Subcontracting PriceEditable" := (Fixed);
      "Plant PriceEditable" := (Fixed);
      "Gross PriceEditable" := (Fixed);
      "Discount %Editable" := (Fixed);
      CostObjectEditable := (Fixed);
      CodeEditable := (Fixed);
      "Document No.Editable" := (Fixed);
      "Ask for QuoteEditable" := (Fixed);
      "Price AgreementEditable" := (Fixed);
      VendorEditable := (Fixed);
      DisciplineEditable := (Fixed);
      "Trade SpecialityEditable" := (Fixed);
      "Trade ExpertiseEditable" := (Fixed);
      "Scheme CodeEditable" := (Fixed);

      GetEstTotals();
    END;

    LOCAL PROCEDURE NormOnActivate@19077738();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE RecipeOnBeforeInput@19018250();
    BEGIN
      //CurrPage.Recipe.UPDATEEDITABLE(("Basic Item" = '') AND ("Trade Item" = '') AND ("Item No." = '')
      //                               AND ("Surcharge Type" = "Surcharge Type"::" "));
    END;

    LOCAL PROCEDURE PlantTypeOnBeforeInput@19048251();
    BEGIN
      //CurrPage."Plant Type".UPDATEEDITABLE(
      //  (Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" ") AND
      //  ("Item No." + "Basic Item" + "Trade Item" = ''));
    END;

    LOCAL PROCEDURE ItemNoOnBeforeInput@19042763();
    BEGIN
      //CurrPage."Item No.".UPDATEEDITABLE((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
    END;

    LOCAL PROCEDURE ManufacturerOnBeforeInput@19026272();
    BEGIN
      //CurrPage.Manufacturer.UPDATEEDITABLE((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
    END;

    LOCAL PROCEDURE BasicItemOnBeforeInput@19013249();
    BEGIN
      //CurrPage."Basic Item".UPDATEEDITABLE((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
    END;

    LOCAL PROCEDURE VendorTradeItemOnBeforeInput@19009574();
    BEGIN
      //CurrPage."Vendor (Trade Item)".UPDATEEDITABLE((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
    END;

    LOCAL PROCEDURE TradeItemOnBeforeInput@19017892();
    BEGIN
      //CurrPage."Trade Item".UPDATEEDITABLE((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
    END;

    LOCAL PROCEDURE CostObjectOnBeforeInput@19037399();
    BEGIN
      //CurrPage.CostObject.UPDATEEDITABLE((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
      //ProcessCostObject(0);  //db, 18-11-04
    END;

    LOCAL PROCEDURE CodeOnBeforeInput@19071561();
    BEGIN
      //CurrPage.Code.UPDATEEDITABLE(Recipe='');
    END;

    LOCAL PROCEDURE LengthOnBeforeInput@19000600();
    BEGIN
      //CurrPage.Length.UPDATEEDITABLE(EnterQuantity(1));
    END;

    LOCAL PROCEDURE WidthOnBeforeInput@19072338();
    BEGIN
      //CurrPage.Width.UPDATEEDITABLE(EnterQuantity(1));
    END;

    LOCAL PROCEDURE HeightOnBeforeInput@19062623();
    BEGIN
      //CurrPage.Height.UPDATEEDITABLE(EnterQuantity(1));
    END;

    LOCAL PROCEDURE QuantityOnBeforeInput@19028302();
    BEGIN
      //CurrPage.Quantity.UPDATEEDITABLE(EnterQuantity(2));
    END;

    LOCAL PROCEDURE SurchargeTypeOnBeforeInput@19035901();
    BEGIN
      //CurrPage."Surcharge Type".UPDATEEDITABLE(Recipe + "Item No." + "Basic Item" + "Trade Item" = '');  //db, 27-05-04
    END;

    LOCAL PROCEDURE Surcharge37OnBeforeInput@19009333();
    BEGIN
      //CurrPage."Surcharge %".UPDATEEDITABLE("Surcharge Type" <> "Surcharge Type"::" ");
    END;

    LOCAL PROCEDURE NormGroupOnBeforeInput@19065525();
    BEGIN
      //CurrPage."Norm Group".UPDATEEDITABLE((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
    END;

    LOCAL PROCEDURE SubOperationCodeOnBeforeInput@19021524();
    BEGIN
      //CurrPage."Sub Operation Code".UPDATEEDITABLE((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
    END;

    LOCAL PROCEDURE NormOnBeforeInput@19075911();
    BEGIN
      //CurrPage.Norm.UPDATEEDITABLE(
      //  (Recipe = '') AND ("Sub Operation Code" = '') AND
      //  ("Surcharge Type" = "Surcharge Type"::" ") AND ("Rate Code" <> ''));
    END;

    LOCAL PROCEDURE RateCodeOnBeforeInput@19040536();
    BEGIN
      ///CurrPage."Rate Code".UPDATEEDITABLE(Recipe='');
    END;

    LOCAL PROCEDURE GrossPriceOnBeforeInput@19037854();
    BEGIN
      //CurrPage."Gross Price".UPDATEEDITABLE((Recipe='') AND ("Surcharge Type" = "Surcharge Type"::" "));
    END;

    LOCAL PROCEDURE Discount37OnBeforeInput@19001415();
    BEGIN
      //CurrPage."Discount %".UPDATEEDITABLE((Recipe='') AND ("Surcharge Type" = "Surcharge Type"::" "));
    END;

    LOCAL PROCEDURE MaterialPriceOnBeforeInput@19047824();
    BEGIN
      //CurrPage."Material Price".UPDATEEDITABLE((Recipe='') AND ("Surcharge Type" = "Surcharge Type"::" "));
    END;

    LOCAL PROCEDURE SubcontractingPriceOnBeforeInp@19030151();
    BEGIN
      //CurrPage."Subcontracting Price".UPDATEEDITABLE((Recipe='') AND ("Surcharge Type" = "Surcharge Type"::" "));
    END;

    LOCAL PROCEDURE PlantPriceOnBeforeInput@19033340();
    BEGIN
      //CurrPage."Plant Price".UPDATEEDITABLE((Recipe='') AND ("Surcharge Type" = "Surcharge Type"::" "));
    END;

    LOCAL PROCEDURE ObjectNoOnBeforeInput@19059534();
    BEGIN
      //IF NOT ServSetup.READPERMISSION THEN
      //  CurrPage."Object No.".UPDATEEDITABLE(FALSE)
      //ELSE
      //  CurrPage."Object No.".UPDATEEDITABLE(
      //    (ServSetup."Object Coding Method" = ServSetup."Object Coding Method"::Manual) AND
      //    (ServSetup."Object Coding Level" = ServSetup."Object Coding Level"::Line));
      //IF "Line No." = 0 THEN
      //  CurrPage."Object No.".UPDATEEDITABLE(FALSE);
    END;

    LOCAL PROCEDURE ObjectCustomerOnBeforeInput@19058508();
    BEGIN
      //CurrPage."Object Customer".UPDATEEDITABLE("Object No." <> '');
    END;

    LOCAL PROCEDURE MaintenanceIntervalOnBeforeInp@19059999();
    BEGIN
      //CurrPage."Maintenance Interval".UPDATEEDITABLE((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
    END;

    LOCAL PROCEDURE MaintenanceRelationOnBeforeInp@19027176();
    BEGIN
      //CurrPage."Maintenance Relation".UPDATEEDITABLE((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
    END;

    LOCAL PROCEDURE DisciplineOnBeforeInput@19062392();
    BEGIN
      //CurrPage.Discipline.UPDATEEDITABLE((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
    END;

    LOCAL PROCEDURE TradeSpecialityOnBeforeInput@19063220();
    BEGIN
      //CurrPage."Trade Speciality".UPDATEEDITABLE((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
    END;

    LOCAL PROCEDURE TradeExpertiseOnBeforeInput@19042842();
    BEGIN
      //CurrPage."Trade Expertise".UPDATEEDITABLE((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
    END;

    LOCAL PROCEDURE Surcharge37OnFormat@19065939();
    BEGIN
      ChargePresent;
      "Surcharge %Emphasize" := chrg0;
    END;

    LOCAL PROCEDURE NormOnFormat@19030294();
    BEGIN
      ChargePresent;
      NormEmphasize := chrg1;
    END;

    LOCAL PROCEDURE GrossPriceOnFormat@19047934();
    BEGIN
      ChargePresent;
      "Gross PriceEmphasize" := chrg2;
    END;

    LOCAL PROCEDURE MaterialPriceOnFormat@19076555();
    BEGIN
      ChargePresent;
      "Material PriceEmphasize" := chrg2;
    END;

    LOCAL PROCEDURE SubcontractingPriceOnFormat@19007903();
    BEGIN
      ChargePresent;
      "Subcontracting PriceEmphasize" := chrg3;
    END;

    LOCAL PROCEDURE PlantPriceOnFormat@19035767();
    BEGIN
      ChargePresent;
      "Plant PriceEmphasize" := chrg4;
    END;

    BEGIN
    END.
  }
}

