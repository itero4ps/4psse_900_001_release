OBJECT Page 11072278 Recipe Lines Construction SF
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Recipe Lines Subform;
    SourceTable=Table11012156;
    DelayedInsert=No;
    PageType=ListPart;
    TimerUpdate=1;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             "Rental Time UnitsEditable" := TRUE;
             "Rental Period FormulaEditable" := TRUE;
             "End Rental PeriodEditable" := TRUE;
             "Start Rental PeriodEditable" := TRUE;
             "Total WeightEditable" := TRUE;
             WeightEditable := TRUE;
             "Buy Back %Editable" := TRUE;
             "Buy Back PriceEditable" := TRUE;
             "Set CodeEditable" := TRUE;
             "Trade ExpertiseEditable" := TRUE;
             "Trade SpecialityEditable" := TRUE;
             DisciplineEditable := TRUE;
             "Maintenance RelationEditable" := TRUE;
             "Maintenance IntervalEditable" := TRUE;
             "Additional CostEditable" := TRUE;
             VendorEditable := TRUE;
             "Price AgreementEditable" := TRUE;
             "Ask for QuoteEditable" := TRUE;
             "Document No.Editable" := TRUE;
             CodeEditable := TRUE;
             CostObjectEditable := TRUE;
             "Discount %Editable" := TRUE;
             "Gross PriceEditable" := TRUE;
             "Plant PriceEditable" := TRUE;
             "Subcontracting PriceEditable" := TRUE;
             "Material PriceEditable" := TRUE;
             "Rate CodeEditable" := TRUE;
             NormEditable := TRUE;
             "Sub Operation CodeEditable" := TRUE;
             "Surcharge TypeEditable" := TRUE;
             "Line StatusEditable" := TRUE;
             "Unit of MeasureEditable" := TRUE;
             "Item No.Editable" := TRUE;
             "Trade ItemEditable" := TRUE;
             "Vendor (Trade Item)Editable" := TRUE;
             "Basic ItemEditable" := TRUE;
             ManufacturerEditable := TRUE;
             "Norm GroupEditable" := TRUE;
             QuantityEditable := TRUE;
             DescriptionEditable := TRUE;
           END;

    OnOpenPage=VAR
                 CompRel@11012000 : Record 11012059;
                 CentrManagementCU@11012001 : Codeunit 11012010;
                 NavBln@11012002 : Boolean;
                 DiscBln@1100485000 : Boolean;
                 DiscGrpBln@1100528300 : Boolean;
                 RcpBln@11012005 : Boolean;
               BEGIN
                 IF "Estimate No." = '' THEN BEGIN
                   CumEstFldVisible := (FALSE);
                   CumRcpFldVisible := (FALSE);
                   IF CompRel.READPERMISSION THEN BEGIN
                     CentrManagementCU.ItemFormEditable(NavBln,DiscBln,DiscGrpBln,RcpBln);
                     IF RcpBln THEN
                       CurrPage.EDITABLE(FALSE);
                   END;
                   "Ask for QuoteEditable" := (FALSE);
                 END ELSE BEGIN
                   GetFilterZeroLines;
                 END;
               END;

    OnAfterGetRecord=BEGIN
                       DescriptionIndent := 0;
                       CALCFIELDS("Estimate Quantity","Estimate Part Quantity");
                       DetermineCostObject(1);
                       RefQuote := RouteRefMgtCU.GetQuoteOfReference("Purchase Route Reference");
                       GetItemSpecifications;

                       IF gFromReference THEN BEGIN
                         gFromReference := FALSE;
                         SETRANGE("Line No.");
                       END;
                       OnAfterGetCurrRecord;
                       DescriptionOnFormat;
                       Surcharge37OnFormat;
                       NormOnFormat;
                       GrossPriceOnFormat;
                       MaterialPriceOnFormat;
                       SubcontractingPriceOnFormat;
                       PlantPriceOnFormat;
                     END;

    OnNewRecord=BEGIN
                  CostObject := '';
                  RefQuote := '';
                  IF "Estimate No." = '' THEN BEGIN
                    IF RecipeRec.GET("Recipe Group",Recipe) THEN BEGIN
                      "Norm Group" := RecipeRec."Norm Group";
                    END;
                  END;
                  "Recipe Group (Child)" := "Recipe Group";  //db, 01-08-05
                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=BEGIN
                     CheckEstEditable;
                     IF NOT Fixed THEN BEGIN
                       IF "Estimate No." = '' THEN
                         ERROR(Text000, FIELDCAPTION(Recipe))
                       ELSE
                         ERROR(Text000, FIELDCAPTION("Estimate No."));
                     END;
                     CheckHideZeroLines;  //C025240
                   END;

    OnModifyRecord=BEGIN
                     CheckEstEditable;
                     IF NOT Fixed THEN BEGIN
                       CurrPage.UPDATE(FALSE);
                       IF "Estimate No." = '' THEN
                         ERROR(Text001, FIELDCAPTION(Recipe))
                       ELSE
                         ERROR(Text001, FIELDCAPTION("Estimate No."));
                     END;

                     IF "Recipe (Child)" = '' THEN "Recipe Group (Child)" := '';  //db, 01-08-05
                   END;

    OnDeleteRecord=BEGIN
                     CheckEstEditable;
                     IF NOT Fixed THEN BEGIN
                       CurrPage.UPDATE(FALSE);
                       IF "Estimate No." = '' THEN
                         ERROR(Text002, FIELDCAPTION(Recipe))
                       ELSE
                         ERROR(Text002, FIELDCAPTION("Estimate No."));
                     END;

                     RouteRefMgtCU.CheckDeleteRcpLineHasQuoteOLD(Rec, TRUE);
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1905064604;1 ;ActionGroup;
                      CaptionML=ENU=&Copy }
      { 1900004504;2 ;Action    ;
                      CaptionML=ENU=Show Buffer;
                      Image=ListPage;
                      OnAction=BEGIN
                                 ShowBuffer;
                               END;
                                }
      { 1900772504;2 ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=ENU=Copy &to Buffer;
                      Image=Copy;
                      OnAction=BEGIN
                                 CopyToBuffer;
                               END;
                                }
      { 1903326104;2 ;Action    ;
                      ShortCutKey=Shift+F11;
                      CaptionML=ENU=Copy &from Buffer;
                      Image=Copy;
                      OnAction=BEGIN
                                 CopyFromBuffer;
                               END;
                                }
      { 1907460704;1 ;ActionGroup;
                      CaptionML=ENU=&Recipe }
      { 1904103004;2 ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=ENU=Zero Lines;
                      Image=GetLines;
                      OnAction=BEGIN
                                 HandleZeroLines;
                               END;
                                }
      { 1904871004;2 ;Action    ;
                      CaptionML=ENU=Purchase Route References;
                      Image=ContactReference;
                      OnAction=BEGIN
                                 ShowPurchRouteRef;
                               END;
                                }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1904903804;2 ;Action    ;
                      CaptionML=ENU=&Explode Sets;
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeSetLines;
                               END;
                                }
      { 1907028604;2 ;Action    ;
                      CaptionML=ENU=Add Std. P&lant Costs and Items;
                      Image=RollUpCosts;
                      OnAction=BEGIN
                                 InsertPltCostItmLines;
                               END;
                                }
      { 1907335004;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=&Internal Text;
                      Image=Text;
                      OnAction=BEGIN
                                 EditText(0);
                               END;
                                }
      { 1905888604;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+E;
                      CaptionML=ENU=&External Text;
                      Image=Text;
                      OnAction=BEGIN
                                 EditText(1);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                GroupType=Repeater }

    { 1210190012;2;Field  ;
                SourceExpr="Project No.";
                Visible=FALSE }

    { 1210190020;2;Field  ;
                SourceExpr=Element;
                Visible=FALSE }

    { 1210190044;2;Field  ;
                SourceExpr="Project Planning Activity Code";
                Visible=FALSE }

    { 1210190022;2;Field  ;
                SourceExpr="Recipe Group (Child)";
                Visible=FALSE }

    { 1210190042;2;Field  ;
                SourceExpr="Recipe (Child)";
                Visible=FALSE;
                OnValidate=BEGIN
                             RecipeChildOnAfterValidate;
                           END;

                OnDrillDown=VAR
                              RcpFrm@1100485001 : Page 11012217;
                            BEGIN
                              IF "Recipe (Child)" = '' THEN EXIT;
                              RecipeRec.RESET;
                              RecipeRec.SETRANGE("Recipe Group", "Recipe Group (Child)");
                              RecipeRec.SETRANGE("No.", "Recipe (Child)");
                              RcpFrm.SETTABLEVIEW(RecipeRec);
                              RcpFrm.RUNMODAL;
                            END;
                             }

    { 1100525004;2;Field  ;
                SourceExpr="Set Code";
                Visible=FALSE;
                Editable="Set CodeEditable";
                OnValidate=BEGIN
                             SetCodeOnAfterValidate;
                           END;
                            }

    { 1100485046;2;Field  ;
                SourceExpr="Plant Type";
                Visible=FALSE;
                OnValidate=BEGIN
                             PlantTypeOnAfterValidate;
                           END;
                            }

    { 4   ;2   ;Field     ;
                SourceExpr="Item No.";
                Editable="Item No.Editable";
                OnValidate=BEGIN
                             ItemNoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           IF HandleLookupItem(FIELDNO("Item No.")) THEN
                             CurrPage.UPDATE(TRUE)  //db, 09-03-07 (call 8283)
                           ELSE
                             IF ("Item No." <> xRec."Item No.") AND
                                (Quantity <> 0)
                             THEN
                               RecalcTotals;
                         END;
                          }

    { 6   ;2   ;Field     ;
                SourceExpr=Manufacturer;
                Visible=FALSE;
                Editable=ManufacturerEditable;
                OnLookup=BEGIN
                           GabiVendorRec.HandleVendorLookup(1, Manufacturer);
                         END;
                          }

    { 8   ;2   ;Field     ;
                SourceExpr="Basic Item";
                Visible=FALSE;
                Editable="Basic ItemEditable";
                OnValidate=BEGIN
                             BasicItemOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           IF HandleLookupItem(FIELDNO("Basic Item")) THEN
                             CurrPage.UPDATE(TRUE)  //db, 09-03-07 (call 8283)
                           ELSE
                             IF ("Basic Item" <> xRec."Basic Item") AND
                                (Quantity <> 0)
                             THEN
                               RecalcTotals;
                         END;
                          }

    { 10  ;2   ;Field     ;
                SourceExpr="Vendor (Trade Item)";
                Visible=FALSE;
                Editable="Vendor (Trade Item)Editable";
                OnLookup=VAR
                           lvItem@1100485000 : Code[20];
                         BEGIN
                           lvItem := "Vendor (Trade Item)";
                           GabiVendorRec.HandleVendorLookup(2, lvItem);
                           VALIDATE("Vendor (Trade Item)", lvItem);
                         END;
                          }

    { 12  ;2   ;Field     ;
                SourceExpr="Trade Item";
                Visible=FALSE;
                Editable="Trade ItemEditable";
                OnValidate=BEGIN
                             TradeItemOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           IF HandleLookupItem(FIELDNO("Trade Item")) THEN
                             CurrPage.UPDATE(TRUE)  //db, 09-03-07 (call 8283)
                           ELSE
                             IF ("Trade Item" <> xRec."Trade Item") AND
                                (Quantity <> 0)
                             THEN
                               RecalcTotals;
                         END;
                          }

    { 16  ;2   ;Field     ;
                SourceExpr="Item Brand";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr="Item Type";
                Visible=FALSE }

    { 1100485020;2;Field  ;
                SourceExpr="Item Series";
                Visible=FALSE }

    { 1100485052;2;Field  ;
                SourceExpr=Admicode }

    { 1210190026;2;Field  ;
                Name=CostObject;
                CaptionML=ENU=Cost Object;
                SourceExpr=CostObject;
                Visible=FALSE;
                Editable=CostObjectEditable;
                OnValidate=BEGIN
                             ProcessCostObject(1);  //db, 18-11-04
                           END;

                OnLookup=BEGIN
                           IF "Recipe (Child)" <> '' THEN EXIT;
                           ProcessCostObject(2);  //db, 18-11-04
                         END;
                          }

    { 1100485042;2;Field  ;
                SourceExpr="Cost Component";
                Visible=FALSE }

    { 1210190036;2;Field  ;
                SourceExpr=Code;
                Visible=FALSE;
                Editable=CodeEditable }

    { 20  ;2   ;Field     ;
                SourceExpr=Description;
                Editable=DescriptionEditable }

    { 1210190016;2;Field  ;
                SourceExpr="Internal Text Block";
                Visible=FALSE;
                OnValidate=BEGIN
                             InternalTextBlockOnPush;
                           END;
                            }

    { 1210190018;2;Field  ;
                SourceExpr="External Text Block";
                Visible=FALSE;
                OnValidate=BEGIN
                             ExternalTextBlockOnPush;
                           END;
                            }

    { 22  ;2   ;Field     ;
                SourceExpr="Time Quantity";
                Visible=FALSE;
                OnValidate=BEGIN
                             TimeQuantityOnAfterValidate;
                           END;
                            }

    { 24  ;2   ;Field     ;
                SourceExpr="Unit of Time";
                Visible=FALSE }

    { 1210190006;2;Field  ;
                BlankZero=Yes;
                SourceExpr=Length;
                Visible=FALSE }

    { 1210190008;2;Field  ;
                BlankZero=Yes;
                SourceExpr=Width;
                Visible=FALSE }

    { 1210190010;2;Field  ;
                BlankZero=Yes;
                SourceExpr=Height;
                Visible=FALSE }

    { 1100525006;2;Field  ;
                SourceExpr=Weight;
                Visible=FALSE;
                Editable=WeightEditable }

    { 1100525008;2;Field  ;
                SourceExpr="Total Weight";
                Visible=FALSE;
                Editable="Total WeightEditable" }

    { 26  ;2   ;Field     ;
                SourceExpr=Quantity;
                Editable=QuantityEditable;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;
                            }

    { 1210190014;2;Field  ;
                Name=CumRcpFld;
                CaptionML=ENU=Total Quantity Recipe;
                SourceExpr=ROUND(Quantity * "Estimate Part Quantity");
                Visible=CumRcpFldVisible }

    { 28  ;2   ;Field     ;
                Name=CumEstFld;
                CaptionML=ENU=Total Quantity Estimate;
                BlankZero=Yes;
                SourceExpr=ROUND("Estimate Quantity" * Quantity * "Estimate Part Quantity");
                Visible=CumEstFldVisible }

    { 30  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Editable="Unit of MeasureEditable" }

    { 1210190024;2;Field  ;
                SourceExpr="Ignore Recipe Quantity";
                OnValidate=BEGIN
                             IgnoreRecipeQuantityOnAfterVal;
                           END;
                            }

    { 1210190004;2;Field  ;
                SourceExpr="Line Status";
                Editable="Line StatusEditable" }

    { 1210190002;2;Field  ;
                SourceExpr="Surcharge Type";
                Editable="Surcharge TypeEditable" }

    { 1210190000;2;Field  ;
                SourceExpr="Surcharge %";
                OnValidate=BEGIN
                             Surcharge37OnAfterValidate;
                           END;

                OnDrillDown=VAR
                              ChrgFrm@1100485001 : Page 11012219;
                            BEGIN
                              ChrgRec.RESET;
                              ChrgRec.SETRANGE("Estimate No.", "Estimate No.");
                              ChrgRec.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
                              ChrgRec.SETRANGE("Part Group", "Part Group");
                              ChrgRec.SETRANGE(Part, Part);
                              ChrgRec.SETRANGE("Recipe Line", "Estimate Line");
                              ChrgRec.SETRANGE("Recipe Group", "Recipe Group");
                              ChrgRec.SETRANGE(Recipe, Recipe);
                              ChrgRec.SETRANGE("Surcharge Line", "Line No.");
                              ChrgFrm.SETTABLEVIEW(ChrgRec);
                              ChrgFrm.SetSelection(3);
                              ChrgFrm.RUNMODAL;

                              RecalcTotals;
                              CurrPage.UPDATE(TRUE);
                            END;
                             }

    { 32  ;2   ;Field     ;
                SourceExpr="Norm Group";
                Visible=FALSE;
                Editable="Norm GroupEditable";
                OnValidate=BEGIN
                             NormGroupOnAfterValidate;
                           END;
                            }

    { 34  ;2   ;Field     ;
                SourceExpr="Sub Operation Code";
                Visible=FALSE;
                Editable="Sub Operation CodeEditable";
                OnValidate=BEGIN
                             ProcessSubOperation;
                               SubOperationCodeOnAfterValidat;
                           END;

                OnLookup=VAR
                           OperFrm@1100485000 : Page 11012178;
                           OperRec@1100485001 : Record 11012166;
                         BEGIN
                           IF "Recipe (Child)" <> '' THEN EXIT;

                           CLEAR(OperFrm);
                           OperFrm.LOOKUPMODE(TRUE);
                           OperFrm.SetSelection(DATABASE::"Recipe Line OLD","Estimate No.","Sub-Estimate No.",
                             Part,"Part Group","Estimate Line","Recipe Group",Recipe);

                           OperRec.Code := "Sub Operation Code";
                           OperFrm.SETRECORD(OperRec);

                           IF OperFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             OperFrm.GETRECORD(OperRec);
                             VALIDATE("Sub Operation Code", OperRec.Code);
                             ProcessSubOperation;  //db, 09-02-12: M32143
                             RecalcTotals;
                             UpdateEstLines;
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 36  ;2   ;Field     ;
                SourceExpr=Norm;
                Editable=NormEditable;
                OnValidate=BEGIN
                             NormOnAfterValidate;
                           END;

                OnLookup=VAR
                           NormGroupFrm@11012002 : Page 11012174;
                         BEGIN
                           //DP00381
                           IF HandleLookupOperationNorm THEN
                             CurrPage.UPDATE(TRUE)
                           ELSE
                             RecalcTotals;
                         END;
                          }

    { 1100485060;2;Field  ;
                SourceExpr="Production Rate" }

    { 38  ;2   ;Field     ;
                SourceExpr="Rate Code";
                Editable="Rate CodeEditable";
                OnValidate=BEGIN
                             RateCodeOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           IF "Estimate No." = '' THEN BEGIN
                             EstSetup.GET;
                             IF EstSetup."Rates Based On" = EstSetup."Rates Based On"::"Budget Rate" THEN BEGIN
                               IF PAGE.RUNMODAL(0, BudgetRateRec) = ACTION::LookupOK THEN
                                 VALIDATE("Rate Code", BudgetRateRec.Code);
                             END ELSE BEGIN
                               RecipeRec.GET("Recipe Group", Recipe);
                               RateGroupRec.SETRANGE("Rate Group", RecipeRec."Rate Group");
                               IF PAGE.RUNMODAL(0, RateGroupRec) = ACTION::LookupOK THEN
                                 VALIDATE("Rate Code", RateGroupRec."Rate Code");
                             END;
                           END ELSE BEGIN
                             EstRateRec.SETRANGE("Estimate No.", "Estimate No.");
                             IF PAGE.RUNMODAL(0, EstRateRec) = ACTION::LookupOK THEN
                               VALIDATE("Rate Code", EstRateRec."Rate Code");
                           END;
                           RecalcTotals;  //db, 12-07-06
                         END;
                          }

    { 40  ;2   ;Field     ;
                SourceExpr=Rate }

    { 46  ;2   ;Field     ;
                SourceExpr="Gross Price";
                Visible=FALSE;
                Editable="Gross PriceEditable";
                OnValidate=BEGIN
                             GrossPriceOnAfterValidate;
                           END;
                            }

    { 44  ;2   ;Field     ;
                SourceExpr="Discount %";
                Visible=FALSE;
                Editable="Discount %Editable";
                OnValidate=BEGIN
                             Discount37OnAfterValidate;
                           END;
                            }

    { 42  ;2   ;Field     ;
                SourceExpr="Material Price";
                Editable="Material PriceEditable";
                OnValidate=BEGIN
                             MaterialPriceOnAfterValidate;
                           END;
                            }

    { 48  ;2   ;Field     ;
                SourceExpr="Subcontracting Price";
                Editable="Subcontracting PriceEditable";
                OnValidate=BEGIN
                             SubcontractingPriceOnAfterVali;
                           END;
                            }

    { 50  ;2   ;Field     ;
                SourceExpr="Plant Price";
                Editable="Plant PriceEditable";
                OnValidate=BEGIN
                             PlantPriceOnAfterValidate;
                           END;
                            }

    { 1100525000;2;Field  ;
                SourceExpr="Buy Back Price";
                Visible=FALSE;
                Editable="Buy Back PriceEditable" }

    { 1100525002;2;Field  ;
                SourceExpr="Buy Back %";
                Visible=FALSE;
                Editable="Buy Back %Editable" }

    { 1100485000;2;Field  ;
                DecimalPlaces=2:3;
                SourceExpr=Hours;
                Visible=FALSE }

    { 1100485002;2;Field  ;
                SourceExpr="Labor Amount";
                Visible=FALSE }

    { 1100485006;2;Field  ;
                SourceExpr="Material Amount";
                Visible=FALSE }

    { 1100485004;2;Field  ;
                SourceExpr="Gross Amount";
                Visible=FALSE }

    { 1100485008;2;Field  ;
                SourceExpr="Subcontracting Amount";
                Visible=FALSE }

    { 1100485010;2;Field  ;
                SourceExpr="Plant Amount";
                Visible=FALSE }

    { 1000000000;2;Field  ;
                SourceExpr=Amount }

    { 52  ;2   ;Field     ;
                SourceExpr="Price Reference Date";
                Visible=FALSE }

    { 1100525010;2;Field  ;
                SourceExpr="Plant Price Type";
                Visible=FALSE }

    { 1100525012;2;Field  ;
                SourceExpr="Start Rental Period";
                Visible=FALSE;
                Editable="Start Rental PeriodEditable";
                OnValidate=BEGIN
                             StartRentalPeriodOnAfterValida;
                           END;
                            }

    { 1100525014;2;Field  ;
                SourceExpr="End Rental Period";
                Visible=FALSE;
                Editable="End Rental PeriodEditable";
                OnValidate=BEGIN
                             EndRentalPeriodOnAfterValidate;
                           END;
                            }

    { 1100525016;2;Field  ;
                SourceExpr="Rental Period Formula";
                Visible=FALSE;
                Editable="Rental Period FormulaEditable";
                OnValidate=BEGIN
                             RentalPeriodFormulaOnAfterVali;
                           END;
                            }

    { 1100525018;2;Field  ;
                SourceExpr="Rental Time Units";
                Visible=FALSE;
                Editable="Rental Time UnitsEditable";
                OnValidate=BEGIN
                             RentalTimeUnitsOnAfterValidate;
                           END;
                            }

    { 1100485044;2;Field  ;
                SourceExpr="Norm Agreement";
                Visible=FALSE }

    { 1210190038;2;Field  ;
                SourceExpr="Price Agreement";
                Visible=FALSE;
                Editable="Price AgreementEditable" }

    { 1100485048;2;Field  ;
                SourceExpr="Subcontracting Agreement";
                Visible=FALSE }

    { 1100485050;2;Field  ;
                SourceExpr="Plant Agreement";
                Visible=FALSE }

    { 1210190028;2;Field  ;
                SourceExpr="Ask for Quote";
                Visible=FALSE;
                Editable="Ask for QuoteEditable" }

    { 1210190032;2;Field  ;
                CaptionML=ENU=Quote No.;
                SourceExpr=RefQuote;
                Visible=FALSE;
                Editable=FALSE;
                OnLookup=VAR
                           lvPurchHeadRec@1210190000 : Record 38;
                         BEGIN
                           IF (RefQuote = '') OR ("Estimate No." = '') THEN
                             EXIT;

                           IF (COPYSTR(RefQuote, 1, 1) = '<') THEN  // IF Quote No. is '<Nr.>', then more than one quote present
                             RouteRefMgtCU.ShowReferenceQuoteList("Purchase Route Reference")
                           ELSE BEGIN
                             lvPurchHeadRec.SETRANGE("Document Type", lvPurchHeadRec."Document Type"::Quote);
                             lvPurchHeadRec.SETRANGE("No.", RefQuote);
                             PAGE.RUNMODAL(PAGE::"Purchase Quote", lvPurchHeadRec);
                           END;
                         END;
                          }

    { 1210190030;2;Field  ;
                SourceExpr="Purchase Route Reference";
                Visible=FALSE }

    { 1210190034;2;Field  ;
                SourceExpr="Document No.";
                Visible=FALSE;
                Editable="Document No.Editable" }

    { 1100485012;2;Field  ;
                SourceExpr="Additional Cost";
                Visible=FALSE;
                Editable="Additional CostEditable" }

    { 1100485022;2;Field  ;
                SourceExpr=Discipline;
                Visible=FALSE;
                Editable=DisciplineEditable }

    { 1100485024;2;Field  ;
                SourceExpr="Trade Speciality";
                Visible=FALSE;
                Editable="Trade SpecialityEditable" }

    { 1100485026;2;Field  ;
                SourceExpr="Trade Expertise";
                Visible=FALSE;
                Editable="Trade ExpertiseEditable" }

    { 1100485028;2;Field  ;
                SourceExpr=Subcontractor;
                Visible=FALSE;
                OnValidate=BEGIN
                             SubcontractorOnAfterValidate;
                           END;
                            }

    { 1100485030;2;Field  ;
                SourceExpr="Subcontractor Name";
                Visible=FALSE }

    { 1210190040;2;Field  ;
                SourceExpr=Vendor;
                Visible=FALSE;
                Editable=VendorEditable;
                OnValidate=BEGIN
                             VendorOnAfterValidate;
                           END;
                            }

    { 1100485014;2;Field  ;
                SourceExpr="Vendor Name";
                Visible=FALSE }

    { 1100485032;2;Field  ;
                SourceExpr="Scheme Code";
                Visible=FALSE }

    { 1100485034;2;Field  ;
                SourceExpr=Comments;
                Visible=FALSE }

    { 1100485038;2;Field  ;
                SourceExpr="Comments for Logistics";
                Visible=FALSE }

    { 1100485040;2;Field  ;
                SourceExpr="Material Sheet";
                Visible=FALSE }

    { 1100485036;2;Field  ;
                SourceExpr=Supply;
                Visible=FALSE }

    { 1100485054;2;Field  ;
                SourceExpr="Purchase Action Mat.";
                Visible=FALSE }

    { 1100485056;2;Field  ;
                SourceExpr="Purchase Action Subc.";
                Visible=FALSE }

    { 1100485058;2;Field  ;
                SourceExpr="Purchase Action Plant";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      Text000@11012013 : TextConst 'ENU=Adding not allowed: %1 is fixed.';
      Text001@11012014 : TextConst 'ENU=Changing not allowed: %1 is fixed.';
      Text002@11012015 : TextConst 'ENU=Deleting not allowed: %1 is fixed.';
      EstSetup@1210190018 : Record 11012150;
      EstRec@1210190022 : Record 11012151;
      EstLineRec@11012006 : Record 11012154;
      RecipeRec@11012007 : Record 11012155;
      RcpLineRec@1210190009 : Record 11012156;
      PartLineRec@1100485001 : Record 11012187;
      RateGroupRec@11012009 : Record 11012162;
      EstRateRec@11012011 : Record 11012160;
      BudgetRateRec@1210190019 : Record 11012000;
      ChrgRec@1210190005 : Record 11012175;
      GabiVendorRec@1100485002 : Record 11012304;
      DimValRec@1210190021 : Record 349;
      OldDimValRec@1210190027 : Record 349;
      RouteRefMgtCU@1210190025 : Codeunit 11012045;
      EstMgmt@1100525001 : Codeunit 11012153;
      EstMgmtFrm@1100525000 : Codeunit 11012157;
      chrg0@1210190000 : Boolean;
      chrg1@1210190001 : Boolean;
      chrg2@1210190002 : Boolean;
      chrg3@1210190003 : Boolean;
      chrg4@1210190004 : Boolean;
      Fixed@1210190011 : Boolean;
      gFromReference@1210190026 : Boolean;
      CostObject@1210190020 : Code[20];
      RefQuote@1210190024 : Code[20];
      Text009@1100485000 : TextConst 'ENU=Add Line first.';
      BufferMgt@1100485003 : Codeunit 11012150;
      DescriptionEditable@19061412 : Boolean INDATASET;
      QuantityEditable@19013162 : Boolean INDATASET;
      "Norm GroupEditable"@19020879 : Boolean INDATASET;
      ManufacturerEditable@19042322 : Boolean INDATASET;
      "Basic ItemEditable"@19063333 : Boolean INDATASET;
      "Vendor (Trade Item)Editable"@19034316 : Boolean INDATASET;
      "Trade ItemEditable"@19000132 : Boolean INDATASET;
      "Item No.Editable"@19055681 : Boolean INDATASET;
      "Unit of MeasureEditable"@19007173 : Boolean INDATASET;
      "Line StatusEditable"@19051744 : Boolean INDATASET;
      "Surcharge TypeEditable"@19054876 : Boolean INDATASET;
      "Sub Operation CodeEditable"@19047583 : Boolean INDATASET;
      NormEditable@19001717 : Boolean INDATASET;
      "Rate CodeEditable"@19068793 : Boolean INDATASET;
      "Material PriceEditable"@19041798 : Boolean INDATASET;
      "Subcontracting PriceEditable"@19058522 : Boolean INDATASET;
      "Plant PriceEditable"@19002219 : Boolean INDATASET;
      "Gross PriceEditable"@19075252 : Boolean INDATASET;
      "Discount %Editable"@19004717 : Boolean INDATASET;
      CostObjectEditable@19039205 : Boolean INDATASET;
      CodeEditable@19001698 : Boolean INDATASET;
      "Document No.Editable"@19064841 : Boolean INDATASET;
      "Ask for QuoteEditable"@19065696 : Boolean INDATASET;
      "Price AgreementEditable"@19020391 : Boolean INDATASET;
      VendorEditable@19059821 : Boolean INDATASET;
      "Additional CostEditable"@19064947 : Boolean INDATASET;
      "Maintenance IntervalEditable"@19000204 : Boolean INDATASET;
      "Maintenance RelationEditable"@19062109 : Boolean INDATASET;
      DisciplineEditable@19028222 : Boolean INDATASET;
      "Trade SpecialityEditable"@19063570 : Boolean INDATASET;
      "Trade ExpertiseEditable"@19008865 : Boolean INDATASET;
      "Set CodeEditable"@19038326 : Boolean INDATASET;
      "Buy Back PriceEditable"@19076617 : Boolean INDATASET;
      "Buy Back %Editable"@19053677 : Boolean INDATASET;
      WeightEditable@19052480 : Boolean INDATASET;
      "Total WeightEditable"@19061051 : Boolean INDATASET;
      "Start Rental PeriodEditable"@19069275 : Boolean INDATASET;
      "End Rental PeriodEditable"@19037625 : Boolean INDATASET;
      "Rental Period FormulaEditable"@19050536 : Boolean INDATASET;
      "Rental Time UnitsEditable"@19002305 : Boolean INDATASET;
      CumEstFldVisible@19073827 : Boolean INDATASET;
      CumRcpFldVisible@19074581 : Boolean INDATASET;
      DescriptionIndent@19057867 : Integer INDATASET;
      "Surcharge %Emphasize"@19034906 : Boolean INDATASET;
      NormEmphasize@19010576 : Boolean INDATASET;
      "Gross PriceEmphasize"@19074771 : Boolean INDATASET;
      "Material PriceEmphasize"@19051745 : Boolean INDATASET;
      "Subcontracting PriceEmphasize"@19001766 : Boolean INDATASET;
      "Plant PriceEmphasize"@19034801 : Boolean INDATASET;

    PROCEDURE CheckEstEditable@3();
    VAR
      EstRec@11012000 : Record 11012151;
    BEGIN
      Fixed := TRUE;
      IF "Estimate No." = '' THEN BEGIN
        IF RecipeRec.GET("Recipe Group", Recipe) THEN
          Fixed := NOT RecipeRec.Fixed;
      END ELSE BEGIN
        IF EstRec.GET("Estimate No.") THEN
          Fixed := NOT EstRec.Fixed;
      END;
    END;

    PROCEDURE ChargePresent@7();
    BEGIN
      chrg0 := FALSE;
      chrg1 := FALSE;
      chrg2 := FALSE;
      chrg3 := FALSE;
      chrg4 := FALSE;

      ChrgRec.RESET;
      ChrgRec.SETRANGE("Estimate No.", "Estimate No.");
      ChrgRec.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
      ChrgRec.SETRANGE("Part Group", "Part Group");
      ChrgRec.SETRANGE(Part, Part);
      ChrgRec.SETRANGE("Recipe Line", "Estimate Line");
      ChrgRec.SETRANGE("Recipe Group", "Recipe Group");
      ChrgRec.SETRANGE(Recipe, Recipe);
      ChrgRec.SETRANGE("Basic Line", "Line No.");
      ChrgRec.SETRANGE("Surcharge Line");
      IF ChrgRec.FIND('-') THEN BEGIN
        REPEAT
          IF RcpLineRec.GET("Estimate No.", "Sub-Estimate No.", "Part Group", Part, "Estimate Line",
                            "Recipe Group", Recipe, ChrgRec."Surcharge Line") THEN BEGIN
            CASE RcpLineRec."Surcharge Type" OF
              RcpLineRec."Surcharge Type"::Labor:
                chrg1 := TRUE;
              RcpLineRec."Surcharge Type"::Material:
                chrg2 := TRUE;
              RcpLineRec."Surcharge Type"::Subcontracting:
                chrg3 := TRUE;
              RcpLineRec."Surcharge Type"::Plant:
                chrg4 := TRUE;
            END;
          END;
        UNTIL ChrgRec.NEXT = 0;
      END;

      ChrgRec.SETRANGE("Basic Line");
      ChrgRec.SETRANGE("Surcharge Line", "Line No.");
      IF ChrgRec.FIND('-') THEN
        chrg0 := TRUE;
    END;

    PROCEDURE GenerateCharge@4();
    BEGIN
      CreateCharge;
      RecalcTotals;
    END;

    PROCEDURE RecalcTotals@1();
    BEGIN
      CurrPage.SAVERECORD;
      CalculateTotals;
      CheckRecipeCharge;
      CurrPage.UPDATE(TRUE);

      UpdateEstLines;
      UpdateRelatedRecipe("Recipe Group", Recipe);  //db, 01-08-05
    END;

    PROCEDURE CheckTimer@1210190000();
    BEGIN
      IF EstLineRec.GET("Estimate No.", "Sub-Estimate No.", "Part Group", Part, "Estimate Line") THEN BEGIN
        IF (EstLineRec.Norm * EstLineRec.Rate) + EstLineRec."Material Price" +
           EstLineRec."Subcontracting Price" + EstLineRec."Plant Price" <> "Total Recipe" THEN BEGIN
          UpdateEstLines;
        END;
      END;
    END;

    PROCEDURE EnterQuantity@1210190003() : Boolean;
    BEGIN
      IF "Surcharge Type" <> "Surcharge Type"::" " THEN EXIT(FALSE);
      IF Length <> 0 THEN EXIT(FALSE);
      IF Width <> 0 THEN EXIT(FALSE);
      IF Height <> 0 THEN EXIT(FALSE);
      EXIT(TRUE);
    END;

    PROCEDURE EditText@8(lvType@1210190000 : 'intern,extern');
    VAR
      TextFrm@11012001 : Page 11012120;
    BEGIN
      IF "Line No." = 0 THEN
        ERROR(Text009);

      TextFrm.TextType(lvType);
      TextFrm.SetSelection(DATABASE::"Recipe Line OLD","Estimate No.","Sub-Estimate No.",
        "Part Group",Part,"Recipe Group",Recipe,"Estimate Line","Line No.");

      TextFrm.RUNMODAL;
    END;

    PROCEDURE ProcessCostObject@1210190007(lvAction@1210190000 : Integer);
    BEGIN
      IF lvAction = 0 THEN BEGIN   //before input
        IF CostObject <> '' THEN BEGIN
          OldDimValRec.RESET;
          OldDimValRec.SETRANGE("Global Dimension No.",2);
          OldDimValRec.SETRANGE(Code, CostObject);
          OldDimValRec.FIND('-');
        END ELSE BEGIN
          CLEAR(OldDimValRec);
        END;
      END;

      IF lvAction = 1 THEN BEGIN   //validate
        IF CostObject <> '' THEN BEGIN
          DimValRec.RESET;
          DimValRec.SETRANGE("Global Dimension No.",2);
            DimValRec.SETRANGE(Code, CostObject);
          IF OldDimValRec.Code <> '' THEN
            DimValRec.SETRANGE("Cost Type", OldDimValRec."Cost Type");
          DimValRec.FIND('-');
        END ELSE BEGIN
          IF "Item No." + "Basic Item" + "Trade Item" <> '' THEN
            DimValRec.TESTFIELD("Cost Type", DimValRec."Cost Type"::Material);
        END;
        DetermineCostObject(2);
      END;

      IF lvAction = 2 THEN BEGIN   //lookup
        DimValRec.RESET;
        DimValRec.Code := CostObject;
        DimValRec.SETRANGE("Global Dimension No.",2);
        IF OldDimValRec.Code <> '' THEN
          DimValRec.SETRANGE("Cost Type", OldDimValRec."Cost Type");
        IF PAGE.RUNMODAL(PAGE::"Cost Object List", DimValRec) = ACTION::LookupOK THEN BEGIN
          CostObject := DimValRec.Code;
          ProcessCostObject(1);
        END;
      END;
    END;

    PROCEDURE DetermineCostObject@1210190002(lvAction@1210190000 : Integer);
    BEGIN
      IF lvAction = 1 THEN BEGIN
        CostObject := '';
        IF "Item No." + "Basic Item" + "Trade Item" <> '' THEN
          CostObject := "Cost Object Material";
        IF CostObject = '' THEN
          CostObject := "Cost Object Labor";
        IF CostObject = '' THEN
          CostObject := "Cost Object Material";
        IF CostObject = '' THEN
          CostObject := "Cost Object Subcontracting";
        IF CostObject = '' THEN
          CostObject := "Cost Object Plant";
      END ELSE BEGIN
        "Cost Object Labor" := '';
        "Cost Object Material" := '';
        "Cost Object Subcontracting" := '';
        "Cost Object Plant" := '';
        IF DimValRec."Cost Type" = DimValRec."Cost Type"::Labor THEN
          VALIDATE("Cost Object Labor", DimValRec.Code);
        IF DimValRec."Cost Type" = DimValRec."Cost Type"::Material THEN
          VALIDATE("Cost Object Material", DimValRec.Code);
        IF DimValRec."Cost Type" = DimValRec."Cost Type"::Subcontracting THEN
          VALIDATE("Cost Object Subcontracting", DimValRec.Code);
        IF DimValRec."Cost Type" = DimValRec."Cost Type"::Plant THEN
          VALIDATE("Cost Object Plant", DimValRec.Code);

        CheckCostObject(CostObject,TRUE);  //function deleted from tablevalidation
        IF "Item No." + "Basic Item" + "Trade Item" = '' THEN BEGIN
          IF "Sub Operation Code" <> '' THEN
            ProcessSubOperation
          ELSE
            Description := DimValRec.Name;
        END;
      END;
    END;

    PROCEDURE HandleZeroLines@1210190005();
    BEGIN
      HandleZeroLinesByUser(Rec);  //C025240
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE GetFilterZeroLines@1210190004();
    BEGIN
      GetFilterZeroLinesByUser(Rec);  //C025240
    END;

    PROCEDURE ShowPurchRouteRef@1210190006();
    BEGIN
      RouteRefMgtCU.ShowReferenceList("Purchase Route Reference");
    END;

    PROCEDURE InitSelectionFromReference@1210190008(IRcpLineNo@1210190000 : Integer);
    BEGIN
      gFromReference := TRUE;
      SETRANGE("Line No.", IRcpLineNo);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE CopyToBuffer@1100485003();
    VAR
      RecipeLine@1100525000 : Record 11012156;
    BEGIN
      RecipeLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(RecipeLine);
      BufferMgt.CopyToBuffer(1,EstLineRec,RecipeLine,PartLineRec);
    END;

    PROCEDURE CopyFromBuffer@1100485002();
    BEGIN
      BufferMgt.CopyFromBuffer(1,EstLineRec,Rec,PartLineRec);
    END;

    PROCEDURE ShowBuffer@1100485001();
    BEGIN
      BufferMgt.ShowBuffer(1,EstLineRec,Rec,PartLineRec);
    END;

    PROCEDURE InsertPltCostItmLines@1100525001();
    VAR
      Rec2@1100525000 : Record 11012156;
    BEGIN
      Rec2.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(Rec2);
      Rec2.SETFILTER(Rec2."Plant Type",'<>%1','');

      IF EstMgmt.InsPltCostItmLinesToRcpLine(Rec2) THEN
        CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE ExplodeSetLines@1100525002();
    VAR
      Rec2@1100525000 : Record 11012156;
    BEGIN
      Rec2.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(Rec2);
      Rec2.SETFILTER(Rec2."Set Code",'<>%1','');

      IF EstMgmt.ExplodeSetLinesToRcpLine(Rec2) THEN
        CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE FieldIsEditable@1100525008(FieldNo2@1100525000 : Integer) : Boolean;
    BEGIN
      EXIT(EstMgmtFrm.RcpFieldIsEditable(FieldNo2,Rec));
    END;

    LOCAL PROCEDURE RecipeChildOnAfterValidate@19032467();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE SetCodeOnAfterValidate@19013329();
    BEGIN
      CurrPage.SAVERECORD;
      IF "Set Code" <> '' THEN
        ExplodeSetLines
      ELSE
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PlantTypeOnAfterValidate@19013868();
    BEGIN
      CurrPage.SAVERECORD;
      InsertPltCostItmLines;
    END;

    LOCAL PROCEDURE ItemNoOnAfterValidate@19061248();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE BasicItemOnAfterValidate@19054956();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE TradeItemOnAfterValidate@19075338();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE TimeQuantityOnAfterValidate@19030511();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE IgnoreRecipeQuantityOnAfterVal@19058719();
    BEGIN
      RecalcTotals;  //db, 15-09-11: M27731
    END;

    LOCAL PROCEDURE Surcharge37OnAfterValidate@19035353();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE NormGroupOnAfterValidate@19073036();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE SubOperationCodeOnAfterValidat@19058750();
    BEGIN
      RecalcTotals;  //db, 13-06-05
    END;

    LOCAL PROCEDURE NormOnAfterValidate@19051466();
    BEGIN
      "Norm Agreement" := TRUE; //db, 14-06-07
      RecalcTotals;
    END;

    LOCAL PROCEDURE RateCodeOnAfterValidate@19043554();
    BEGIN
      RecalcTotals;
    END;

    LOCAL PROCEDURE GrossPriceOnAfterValidate@19036441();
    BEGIN
      "Price Agreement" := TRUE; //db, 14-06-06
      RecalcTotals;
    END;

    LOCAL PROCEDURE Discount37OnAfterValidate@19039847();
    BEGIN
      "Price Agreement" := TRUE; //db, 14-06-06
      RecalcTotals;
    END;

    LOCAL PROCEDURE MaterialPriceOnAfterValidate@19066096();
    BEGIN
      "Price Agreement" := TRUE; //db, 14-06-06
      RecalcTotals;
    END;

    LOCAL PROCEDURE SubcontractingPriceOnAfterVali@19026415();
    BEGIN
      "Subcontracting Agreement" := TRUE; //db, 16-01-08
      RecalcTotals;
    END;

    LOCAL PROCEDURE PlantPriceOnAfterValidate@19075011();
    BEGIN
      "Plant Agreement" := TRUE; //db, 16-01-08
      RecalcTotals;
    END;

    LOCAL PROCEDURE StartRentalPeriodOnAfterValida@19050934();
    BEGIN
      RecalcTotals;//**4PS.n
    END;

    LOCAL PROCEDURE EndRentalPeriodOnAfterValidate@19045507();
    BEGIN
      RecalcTotals;//**4PS.n
    END;

    LOCAL PROCEDURE RentalPeriodFormulaOnAfterVali@19006419();
    BEGIN
      RecalcTotals;//**4PS.n
    END;

    LOCAL PROCEDURE RentalTimeUnitsOnAfterValidate@19053577();
    BEGIN
      RecalcTotals;//**4PS.n
    END;

    LOCAL PROCEDURE SubcontractorOnAfterValidate@19029042();
    BEGIN
      CALCFIELDS("Subcontractor Name");
    END;

    LOCAL PROCEDURE VendorOnAfterValidate@19052966();
    BEGIN
      CALCFIELDS("Vendor Name");
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      CheckEstEditable;
      DescriptionEditable := (Fixed);
      QuantityEditable := (Fixed);
      //db.sn, 01-08-05
      "Norm GroupEditable" := (Fixed AND ("Recipe (Child)" = ''));
      ManufacturerEditable := (Fixed AND ("Recipe (Child)" = ''));
      "Basic ItemEditable" := (Fixed AND ("Recipe (Child)" = ''));
      "Vendor (Trade Item)Editable" := (Fixed AND ("Recipe (Child)" = ''));
      "Trade ItemEditable" := (Fixed AND ("Recipe (Child)" = ''));
      "Item No.Editable" := (Fixed AND ("Recipe (Child)" = ''));
      "Unit of MeasureEditable" := (Fixed AND ("Recipe (Child)" = ''));
      "Line StatusEditable" := (Fixed AND ("Recipe (Child)" = ''));
      "Surcharge TypeEditable" := (Fixed AND ("Recipe (Child)" = ''));
      "Sub Operation CodeEditable" := (Fixed AND ("Recipe (Child)" = ''));
      NormEditable := (Fixed AND ("Recipe (Child)" = ''));
      "Rate CodeEditable" := (Fixed); //db, 06-10-05 (no check on Recipe)
      "Material PriceEditable" := (Fixed AND ("Recipe (Child)" = ''));
      "Subcontracting PriceEditable" := (Fixed AND ("Recipe (Child)" = ''));
      "Plant PriceEditable" := (Fixed AND ("Recipe (Child)" = ''));
      "Gross PriceEditable" := (Fixed AND ("Recipe (Child)" = ''));
      "Discount %Editable" := (Fixed AND ("Recipe (Child)" = ''));
      CostObjectEditable := (Fixed AND ("Recipe (Child)" = ''));
      CodeEditable := (Fixed AND ("Recipe (Child)" = ''));
      "Document No.Editable" := (Fixed AND ("Recipe (Child)" = ''));
      "Ask for QuoteEditable" := (Fixed AND ("Recipe (Child)" = ''));
      "Price AgreementEditable" := (Fixed AND ("Recipe (Child)" = ''));
      VendorEditable := (Fixed AND ("Recipe (Child)" = ''));
      "Additional CostEditable" := (Fixed AND ("Recipe (Child)" = ''));
      "Maintenance IntervalEditable" := (Fixed AND ("Recipe (Child)" = ''));
      "Maintenance RelationEditable" := (Fixed AND ("Recipe (Child)" = ''));
      DisciplineEditable := (Fixed AND ("Recipe (Child)" = ''));
      "Trade SpecialityEditable" := (Fixed AND ("Recipe (Child)" = ''));
      "Trade ExpertiseEditable" := (Fixed AND ("Recipe (Child)" = ''));
      //db.en, 01-08-05

      //dbeekman.sn,05-08-09: PlantCalc
      "Set CodeEditable" := (Fixed);
      "Buy Back PriceEditable" := (Fixed);
      "Buy Back %Editable" := (Fixed);
      WeightEditable := (Fixed);
      "Total WeightEditable" := (Fixed);
      "Start Rental PeriodEditable" := (Fixed);
      "End Rental PeriodEditable" := (Fixed);
      "Rental Period FormulaEditable" := (Fixed);
      "Rental Time UnitsEditable" := (Fixed);
      //dbeekman.en,05-08-09: PlantCalc


      CALCFIELDS("Labor Recipe", "Hours Recipe", "Material Recipe", "Gross Price Recipe",
                 "Subcontracting Recipe", "Plant Recipe", "Total Recipe");
    END;

    LOCAL PROCEDURE RecipeGroupChildOnBeforeInput@19010731();
    BEGIN
      //CurrPage."Recipe Group (Child)".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Recipe Group (Child)")));
    END;

    LOCAL PROCEDURE RecipeChildOnBeforeInput@19064669();
    BEGIN
      //CurrPage."Recipe (Child)".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Recipe (Child)")));
    END;

    LOCAL PROCEDURE SetCodeOnBeforeInput@19018272();
    BEGIN
      //CurrPage."Set Code".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Set Code")));
    END;

    LOCAL PROCEDURE PlantTypeOnBeforeInput@19048251();
    BEGIN
      //CurrPage."Plant Type".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Plant Type")));
    END;

    LOCAL PROCEDURE ItemNoOnBeforeInput@19042763();
    BEGIN
      //CurrPage."Item No.".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Item No.")));
    END;

    LOCAL PROCEDURE ManufacturerOnBeforeInput@19026272();
    BEGIN
      //CurrPage.Manufacturer.UPDATEEDITABLE(FieldIsEditable(FIELDNO(Manufacturer)));
    END;

    LOCAL PROCEDURE BasicItemOnBeforeInput@19013249();
    BEGIN
      //CurrPage."Basic Item".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Basic Item")));
    END;

    LOCAL PROCEDURE VendorTradeItemOnBeforeInput@19009574();
    BEGIN
      //CurrPage."Vendor (Trade Item)".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Vendor (Trade Item)")));
    END;

    LOCAL PROCEDURE TradeItemOnBeforeInput@19017892();
    BEGIN
      //CurrPage."Trade Item".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Trade Item")));
    END;

    LOCAL PROCEDURE CostObjectOnBeforeInput@19037399();
    BEGIN
      //CurrPage.CostObject.UPDATEEDITABLE(("Recipe (Child)" = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
      //ProcessCostObject(0);  //db, 18-11-04
    END;

    LOCAL PROCEDURE CodeOnBeforeInput@19071561();
    BEGIN
      //CurrPage.Code.UPDATEEDITABLE(FieldIsEditable(FIELDNO(Code)));
    END;

    LOCAL PROCEDURE TimeQuantityOnBeforeInput@19009880();
    BEGIN
      //CurrPage."Time Quantity".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Time Quantity")));
    END;

    LOCAL PROCEDURE UnitofTimeOnBeforeInput@19036274();
    BEGIN
      //CurrPage."Unit of Time".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Unit of Time")));
    END;

    LOCAL PROCEDURE LengthOnBeforeInput@19000600();
    BEGIN
      //CurrPage.Length.UPDATEEDITABLE(EnterQuantity(1));
    END;

    LOCAL PROCEDURE WidthOnBeforeInput@19072338();
    BEGIN
      //CurrPage.Width.UPDATEEDITABLE(EnterQuantity(1));
    END;

    LOCAL PROCEDURE HeightOnBeforeInput@19062623();
    BEGIN
      //CurrPage.Height.UPDATEEDITABLE(EnterQuantity(1));
    END;

    LOCAL PROCEDURE QuantityOnBeforeInput@19028302();
    BEGIN
      //CurrPage.Quantity.UPDATEEDITABLE(EnterQuantity(2));
    END;

    LOCAL PROCEDURE SurchargeTypeOnBeforeInput@19035901();
    BEGIN
      //CurrPage."Surcharge Type".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Surcharge Type")));
    END;

    LOCAL PROCEDURE Surcharge37OnBeforeInput@19009333();
    BEGIN
      //CurrPage."Surcharge %".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Surcharge %")));
    END;

    LOCAL PROCEDURE NormGroupOnBeforeInput@19065525();
    BEGIN
      //CurrPage."Norm Group".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Norm Group")));
    END;

    LOCAL PROCEDURE SubOperationCodeOnBeforeInput@19021524();
    BEGIN
      //CurrPage."Sub Operation Code".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Sub Operation Code")));
    END;

    LOCAL PROCEDURE NormOnBeforeInput@19075911();
    BEGIN
      //CurrPage.Norm.UPDATEEDITABLE(FieldIsEditable(FIELDNO(Norm)));
    END;

    LOCAL PROCEDURE RateCodeOnBeforeInput@19040536();
    BEGIN
      //CurrPage."Rate Code".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Rate Code")));
    END;

    LOCAL PROCEDURE GrossPriceOnBeforeInput@19037854();
    BEGIN
      //CurrPage."Gross Price".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Gross Price")));
    END;

    LOCAL PROCEDURE Discount37OnBeforeInput@19001415();
    BEGIN
      //CurrPage."Discount %".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Discount %")));
    END;

    LOCAL PROCEDURE MaterialPriceOnBeforeInput@19047824();
    BEGIN
      //CurrPage."Material Price".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Material Price")));
    END;

    LOCAL PROCEDURE SubcontractingPriceOnBeforeInp@19030151();
    BEGIN
      //CurrPage."Subcontracting Price".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Subcontracting Price")));
    END;

    LOCAL PROCEDURE PlantPriceOnBeforeInput@19033340();
    BEGIN
      //CurrPage."Plant Price".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Plant Price")));
    END;

    LOCAL PROCEDURE BuyBackPriceOnBeforeInput@19009236();
    BEGIN
      //"Buy Back PriceEditable" := (FieldIsEditable(FIELDNO("Buy Back Price")));
    END;

    LOCAL PROCEDURE BuyBack37OnBeforeInput@19046301();
    BEGIN
      //"Buy Back %Editable" := (FieldIsEditable(FIELDNO("Buy Back %")));
    END;

    LOCAL PROCEDURE StartRentalPeriodOnBeforeInput@19015467();
    BEGIN
      //CurrPage."Start Rental Period".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Start Rental Period"))); //**4PS.n
    END;

    LOCAL PROCEDURE EndRentalPeriodOnBeforeInput@19039993();
    BEGIN
      //CurrPage."End Rental Period".UPDATEEDITABLE(FieldIsEditable(FIELDNO("End Rental Period"))); //**4PS.n
    END;

    LOCAL PROCEDURE RentalPeriodFormulaOnBeforeInp@19072247();
    BEGIN
      //CurrPage."Rental Period Formula".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Rental Period Formula"))); //**4PS.n
    END;

    LOCAL PROCEDURE RentalTimeUnitsOnBeforeInput@19035803();
    BEGIN
      //CurrPage."Rental Time Units".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Rental Time Units"))); //**4PS.n
    END;

    LOCAL PROCEDURE DisciplineOnBeforeInput@19062392();
    BEGIN
      //CurrPage.Discipline.UPDATEEDITABLE(FieldIsEditable(FIELDNO(Discipline)));
    END;

    LOCAL PROCEDURE TradeSpecialityOnBeforeInput@19063220();
    BEGIN
      //CurrPage."Trade Speciality".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Trade Speciality")));
    END;

    LOCAL PROCEDURE TradeExpertiseOnBeforeInput@19042842();
    BEGIN
      //CurrPage."Trade Expertise".UPDATEEDITABLE(FieldIsEditable(FIELDNO("Trade Expertise")));
    END;

    LOCAL PROCEDURE OnTimer@19019642();
    BEGIN
      //for insert of records with copy/paste without validate of field which updates totals of related estimateline.
      CheckTimer;
    END;

    LOCAL PROCEDURE InternalTextBlockOnPush@19008801();
    BEGIN
      EditText(0);  //db, 12-11-09
    END;

    LOCAL PROCEDURE ExternalTextBlockOnPush@19064562();
    BEGIN
      EditText(1);  //db, 12-11-09
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      IF ("Attached to Line No." <> 0) THEN
        DescriptionIndent := "Set Level";
    END;

    LOCAL PROCEDURE Surcharge37OnFormat@19065939();
    BEGIN
      ChargePresent;
      "Surcharge %Emphasize" := chrg0;
    END;

    LOCAL PROCEDURE NormOnFormat@19030294();
    BEGIN
      ChargePresent;
      NormEmphasize := chrg1;
    END;

    LOCAL PROCEDURE GrossPriceOnFormat@19047934();
    BEGIN
      ChargePresent;
      "Gross PriceEmphasize" := chrg2;
    END;

    LOCAL PROCEDURE MaterialPriceOnFormat@19076555();
    BEGIN
      ChargePresent;
      "Material PriceEmphasize" := chrg2;
    END;

    LOCAL PROCEDURE SubcontractingPriceOnFormat@19007903();
    BEGIN
      ChargePresent;
      "Subcontracting PriceEmphasize" := chrg3;
    END;

    LOCAL PROCEDURE PlantPriceOnFormat@19035767();
    BEGIN
      ChargePresent;
      "Plant PriceEmphasize" := chrg2;
    END;

    BEGIN
    END.
  }
}

