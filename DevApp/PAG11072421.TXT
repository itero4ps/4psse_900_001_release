OBJECT Page 11072421 Inward Processing Confirm
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Inward Processing Confirm;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11020350;
    SourceTableView=SORTING(Posted,Job No.,Element,Receipt No.,Receipt Line)
                    ORDER(Ascending)
                    WHERE(Posted=CONST(Yes));
    PageType=List;
    OnOpenPage=BEGIN
                 SETRANGE(Finished, FALSE);
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100485018;1 ;ActionGroup;
                      Name=FunctionButton;
                      CaptionML=ENU=F&unctions }
      { 1100485022;2 ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=ENU=Posting;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lvInwardRec@1100485002 : Record 11020350;
                                 lvInwardRec2@1100485005 : Record 11020350;
                                 lvCounter@1100485001 : Integer;
                                 lvPosted@1100485000 : Integer;
                                 lvText001@1100485011 : TextConst 'ENU=%1 of %2 debrief lines posted';
                                 lvText002@1100485006 : TextConst 'ENU=%1 of %2 debrief lines posted';
                               BEGIN
                                 //First Boeken

                                 lvInwardRec.COPY(Rec);
                                 lvInwardRec.SETRANGE(Posted, TRUE);
                                 lvInwardRec.SETRANGE(Ready, TRUE);
                                 lvInwardRec.SETRANGE(Finished, FALSE);

                                 lvPosted := 0;
                                 lvCounter := lvInwardRec.COUNT;

                                 IF lvCounter <> 0 THEN BEGIN
                                   IF lvInwardRec.FINDSET(TRUE, TRUE) THEN
                                     REPEAT
                                         lvInwardRec2 := lvInwardRec;
                                         lvInwardRec2.Finished := lvInwardRec.Ready;
                                         lvInwardRec2."Date Finished" := lvInwardRec."Date Ready";
                                         lvInwardRec2.MODIFY;
                                         lvPosted += 1;
                                     UNTIL lvInwardRec.NEXT = 0;
                                     CurrPage.UPDATE;
                                 END;
                                 MESSAGE(lvText001, lvPosted, lvCounter);

                                 //Second Terugzetten
                                 lvInwardRec.COPY(Rec);
                                 lvInwardRec.SETRANGE(Posted, TRUE);
                                 lvInwardRec.SETRANGE(Ready, FALSE);
                                 lvInwardRec.SETRANGE(Finished, TRUE);

                                 lvPosted := 0;
                                 lvCounter := lvInwardRec.COUNT;

                                 IF lvCounter <> 0 THEN BEGIN
                                   IF lvInwardRec.FINDSET(TRUE, TRUE) THEN
                                     REPEAT
                                         lvInwardRec2 := lvInwardRec;
                                         lvInwardRec2.Finished := lvInwardRec.Ready;
                                         lvInwardRec2."Date Finished" := lvInwardRec."Date Ready";
                                         lvInwardRec2.MODIFY;
                                         lvPosted += 1;
                                     UNTIL lvInwardRec.NEXT = 0;
                                     CurrPage.UPDATE;
                                 END;
                                 MESSAGE(lvText002, lvPosted, lvCounter);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100485000;1;Group  ;
                GroupType=Repeater }

    { 1100485001;2;Field  ;
                SourceExpr="Job No." }

    { 1100485010;2;Field  ;
                SourceExpr="Job Description" }

    { 1100485014;2;Field  ;
                DrillDown=No;
                SourceExpr="Project Status" }

    { 1100485003;2;Field  ;
                SourceExpr=Element }

    { 1100485012;2;Field  ;
                SourceExpr="Element Description";
                Visible=FALSE }

    { 1100485016;2;Field  ;
                SourceExpr=Ready;
                OnValidate=VAR
                             lvPurchLineRec@1100485001 : Record 39;
                             lvInwardRec@1100485002 : Record 11020350;
                             lvErrorfound@1100485003 : Boolean;
                           BEGIN
                             IF Ready THEN BEGIN
                               IF CheckNonPostedLines THEN
                                 ERROR(Text003);

                               lvInwardRec.SETRANGE("Job No.","Job No.");
                               lvInwardRec.SETRANGE(Element, Element);
                               lvErrorfound := FALSE;
                               IF lvInwardRec.FINDSET THEN
                                 REPEAT

                                   lvInwardRec.CALCFIELDS("Serial Nos");
                                   IF (lvInwardRec."License No." = '') OR
                                      (lvInwardRec."Document No." = '') OR
                                      (lvInwardRec."Tariff Code" = '') OR
                                      (lvInwardRec."Serial Nos" = FALSE) THEN
                                   BEGIN
                                     ERROR(Text005);
                                   END;

                                   IF lvPurchLineRec.GET(lvPurchLineRec."Document Type"::Order,
                                                         lvInwardRec."Purchase Order No.",
                                                         lvInwardRec."Order Line No.") THEN
                                   BEGIN
                                     IF lvPurchLineRec."Outstanding Quantity" <> 0 THEN
                                      MESSAGE(Text004);
                                      lvErrorfound := TRUE;
                                   END;

                                 UNTIL (lvInwardRec.NEXT = 0) OR (lvErrorfound);
                             END;

                             IF Ready THEN BEGIN
                               IF "Date Finished" = 0D THEN
                                 "Date Ready" := TODAY
                               ELSE
                                 "Date Ready" := "Date Finished";
                             END ELSE BEGIN
                               "Date Ready" := 0D;
                             END;
                               ReadyOnAfterValidate;
                           END;
                            }

    { 1100485023;2;Field  ;
                SourceExpr="Date Ready" }

    { 1100485005;2;Field  ;
                SourceExpr=Finished;
                Editable=FALSE;
                OnValidate=BEGIN
                             IF CheckNonPostedLines THEN
                               ERROR(Text003);

                             IF Finished THEN
                               "Date Finished" := TODAY
                             ELSE
                               "Date Finished" := 0D;
                               FinishedOnAfterValidate;
                           END;
                            }

    { 1100485007;2;Field  ;
                SourceExpr="Date Finished";
                Editable=FALSE;
                OnValidate=BEGIN
                             IF Finished AND ("Date Finished" = 0D) THEN
                               ERROR(Text001);

                             IF (NOT Finished) AND ("Date Finished" <> 0D) THEN
                               ERROR(Text002);
                               DateFinishedOnAfterValidate;
                           END;
                            }

  }
  CODE
  {
    VAR
      Text001@1100485000 : TextConst 'ENU=Date is compulsory when finished';
      Text002@1100485001 : TextConst 'ENU=Date must remain empty';
      Text003@1100485002 : TextConst 'ENU="There are stil not booked lines "';
      Text004@1100485003 : TextConst 'ENU=Purchase Order not completely delivered';
      Text005@1100485004 : TextConst 'ENU=Inward processing data incomplete';

    PROCEDURE UpdateLines@1100485003();
    VAR
      lvInwardRec@1100485000 : Record 11020350;
    BEGIN
      lvInwardRec.SETRANGE("Job No.","Job No.");
      lvInwardRec.SETRANGE(Element, Element);
      IF lvInwardRec.FINDSET THEN
        REPEAT
          lvInwardRec.Ready := Ready;
          lvInwardRec."Date Ready" := "Date Ready";
          lvInwardRec.MODIFY;
        UNTIL lvInwardRec.NEXT = 0;
    END;

    LOCAL PROCEDURE ReadyOnAfterValidate@19070497();
    BEGIN
      UpdateLines;
    END;

    LOCAL PROCEDURE FinishedOnAfterValidate@19006777();
    BEGIN
      UpdateLines;
    END;

    LOCAL PROCEDURE DateFinishedOnAfterValidate@19071883();
    BEGIN
      UpdateLines;
    END;

    BEGIN
    END.
  }
}

