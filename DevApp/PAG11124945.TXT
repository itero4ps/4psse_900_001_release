OBJECT Page 11124945 Project Forecast
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Project Forecast;
    SaveValues=Yes;
    SourceTable=Table11020630;
    PageType=ListPlus;
    PromotedActionCategoriesML=ENU=New,Manage,Process,Forecast;
    OnInit=BEGIN
             PeriodType := PeriodType::Year;
           END;

    OnOpenPage=BEGIN
                 MATRIX_MaximumSetLength := 12;
                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                 UpdateMatrixSubForm;
               END;

    OnDeleteRecord=BEGIN
                     TESTFIELD(Fixed, FALSE);
                   END;

    OnAfterGetCurrRecord=BEGIN
                           SETRANGE("Period Type Filter", PeriodType);
                         END;

    ActionList=ACTIONS
    {
      { 1100528716;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528707;1 ;Action    ;
                      CaptionML=ENU=Previous Set;
                      ToolTipML=ENU=Previous Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MATRIX_Step@1001 : 'Initial,Previous,Same,Next';
                               BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Previous);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100528706;1 ;Action    ;
                      CaptionML=ENU=Previous Column;
                      ToolTipML=ENU=Previous Column;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::PreviousColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100528705;1 ;Action    ;
                      CaptionML=ENU=Next Column;
                      ToolTipML=ENU=Next Column;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::NextColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100528704;1 ;Action    ;
                      CaptionML=ENU=Next Set;
                      ToolTipML=ENU=Next Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MATRIX_Step@1001 : 'Initial,Previous,Same,Next';
                               BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Next);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100528736;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1100528737;2 ;Action    ;
                      CaptionML=ENU=&Create;
                      Image=CreateLinesFromJob;
                      OnAction=BEGIN
                                 ProjectForecastMgt.CreateForecastLines(Rec);
                               END;
                                }
      { 1100528735;2 ;Action    ;
                      CaptionML=ENU=Copy &Previous Forecast;
                      Image=Copy;
                      OnAction=BEGIN
                                 ProjectForecastMgt.CopyPreviousForecast(Rec, FALSE);
                               END;
                                }
      { 1100525000;2 ;Action    ;
                      CaptionML=ENU=Copy Previous Forecast minus Actuals;
                      Image=Copy;
                      OnAction=BEGIN
                                 ProjectForecastMgt.CopyPreviousForecast(Rec, TRUE);
                               END;
                                }
      { 1100528734;2 ;Action    ;
                      CaptionML=ENU=Fill Forecast with &Available;
                      Image=PaymentForecast;
                      OnAction=BEGIN
                                 ProjectForecastMgt.FillForecastWithAvailable(Rec);
                               END;
                                }
      { 1100528733;2 ;Action    ;
                      CaptionML=ENU=Fill Forecast with &Allowed;
                      Image=PaymentForecast;
                      OnAction=BEGIN
                                 ProjectForecastMgt.FillForecastWithAllowed(Rec);
                               END;
                                }
      { 1100528732;2 ;Action    ;
                      CaptionML=ENU=Fill Forecast with &Prognosis;
                      Image=PaymentForecast;
                      OnAction=BEGIN
                                 ProjectForecastMgt.FillForecastWithPrognosis(Rec);
                               END;
                                }
      { 1100528730;2 ;Action    ;
                      CaptionML=ENU=Calculate Surcharges;
                      Image=Calculate;
                      OnAction=VAR
                                 ProjectForecastManagement@1210190000 : Codeunit 11012256;
                               BEGIN
                                 CurrPage.UPDATE(TRUE);

                                 "Ovh. Surcharges Calculated" := TRUE;
                                 "Altered After Calculation" := FALSE;
                                 MODIFY;

                                 ProjectForecastMgt.CalculateSurcharges(Rec);

                                 "Ovh. Surcharges Calculated" := TRUE; //M28187
                                 "Altered After Calculation" := FALSE; //M28187
                                 MODIFY;                               //M28187
                               END;
                                }
      { 1100528728;2 ;Action    ;
                      CaptionML=ENU=Delete Surcharges;
                      Image=Delete;
                      OnAction=VAR
                                 ProjectForecastMgt@1210190000 : Codeunit 11012256;
                               BEGIN
                                 CurrPage.UPDATE(TRUE);

                                 "Ovh. Surcharges Calculated" := FALSE;
                                 "Altered After Calculation" := FALSE;
                                 MODIFY;

                                 ProjectForecastMgt.RemoveSurcharges(Rec);

                                 "Ovh. Surcharges Calculated" := FALSE;//M28187
                                 "Altered After Calculation" := FALSE; //M28187
                                 MODIFY;                               //M28187
                               END;
                                }
      { 1100528726;2 ;Action    ;
                      CaptionML=ENU=Create Prognosis;
                      Image=Planning;
                      OnAction=VAR
                                 GenPrognosisFromForecast@1100528800 : Report 11020304;
                                 StartProcess@1100528815 : Boolean;
                                 PrognosisDate@1100528814 : Date;
                                 CopyPrevCostPrognosis@1100528813 : Boolean;
                                 CopyPrevPrognosisEndResult@1100528812 : Boolean;
                                 CopyPrevRevenuePrognosis@1100528811 : Boolean;
                                 CopyPrevPrognosisTotalRev@1100528810 : Boolean;
                                 CopyCommentsPrevPrognosis@1100528809 : Boolean;
                                 FillProgWithAvailableCost@1100528808 : Boolean;
                                 FillProgWithExtrapolatedCosts@1100528807 : Boolean;
                                 FillProgFromProjPlanningAct@1100528806 : Boolean;
                                 FillProgFromRequestedActCap@1100528805 : Boolean;
                                 FillProgFromAssignedActCap@1100528804 : Boolean;
                                 FillProgRevenues@1100528803 : Boolean;
                                 CalcSurcharges@1100528802 : Boolean;
                                 CalcRiscCoverage@1100528801 : Boolean;
                               BEGIN
                                 ProjectForecastMgt.CreatePrognosis(Rec);
                               END;
                                }
      { 1100528702;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100528724;1 ;Action    ;
                      CaptionML=ENU=Purchase Orders;
                      Image=List;
                      OnAction=VAR
                                 Job@1100528400 : Record 11072003;
                               BEGIN
                                 IF Job.GET("Project No.") THEN
                                   Job.ShowPurchaseOrdersForProject;
                               END;
                                }
      { 1100528723;1 ;Action    ;
                      CaptionML=ENU=Documents;
                      Image=Documents;
                      OnAction=VAR
                                 RecRef@1100528701 : RecordRef;
                                 DocumentFilters@1100528702 : Codeunit 11012432;
                               BEGIN
                                 RecRef.GETTABLE(Rec);
                                 DocumentFilters.CreateTempFilterAndExecute1(RecRef, "Department Code", FALSE, TRUE);
                               END;
                                }
      { 1100528725;1 ;ActionGroup;
                      CaptionML=ENU=&Forecast }
      { 1100528717;2 ;Action    ;
                      CaptionML=ENU=Labor;
                      Promoted=Yes;
                      Image=Forecast;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowProjectForecastPerCostType("Cost Type Filter"::Labor);
                               END;
                                }
      { 1100528718;2 ;Action    ;
                      CaptionML=ENU=Material;
                      Promoted=Yes;
                      Image=Forecast;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowProjectForecastPerCostType("Cost Type Filter"::Material);
                               END;
                                }
      { 1100528719;2 ;Action    ;
                      CaptionML=ENU=Subcontracting;
                      Promoted=Yes;
                      Image=Forecast;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowProjectForecastPerCostType("Cost Type Filter"::Subcontracting);
                               END;
                                }
      { 1100528720;2 ;Action    ;
                      CaptionML=ENU=Plant;
                      Promoted=Yes;
                      Image=Forecast;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowProjectForecastPerCostType("Cost Type Filter"::Plant);
                               END;
                                }
      { 1100528721;2 ;Action    ;
                      CaptionML=ENU=Sundry;
                      Promoted=Yes;
                      Image=Forecast;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowProjectForecastPerCostType("Cost Type Filter"::Sundry);
                               END;
                                }
      { 1100528722;2 ;Action    ;
                      CaptionML=ENU=Revenue;
                      Promoted=Yes;
                      Image=Revenue;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowProjectForecastPerCostType("Cost Type Filter"::Revenue);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100528703;;Container;
                ContainerType=ContentArea }

    { 1100528708;1;Group  ;
                CaptionML=ENU=General;
                GroupType=Group }

    { 1100528715;2;Field  ;
                SourceExpr="Project No." }

    { 1100528714;2;Field  ;
                SourceExpr="Project Description" }

    { 1100528713;2;Field  ;
                SourceExpr="Forecast Date";
                OnValidate=BEGIN
                             MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                             UpdateMatrixSubForm;
                           END;
                            }

    { 1100528712;2;Field  ;
                SourceExpr=Fixed }

    { 1100528711;2;Field  ;
                SourceExpr="Ovh. Surcharges Calculated" }

    { 1100528710;2;Field  ;
                SourceExpr="Altered After Calculation" }

    { 1100528709;2;Field  ;
                SourceExpr="Modified by" }

    { 1100528701;2;Field  ;
                SourceExpr="Last Date Modified" }

    { 1100528729;1;Group  ;
                CaptionML=ENU=Matrix Options;
                GroupType=Group }

    { 1100528727;2;Field  ;
                CaptionML=ENU=View by;
                OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                             UpdateMatrixSubForm;
                           END;
                            }

    { 1100528700;1;Part   ;
                Name=MATRIX;
                SubPageLink=Project No.=FIELD(Project No.),
                            Forecast Date=FIELD(Forecast Date);
                PagePartID=Page11124949;
                PartType=Page }

  }
  CODE
  {
    VAR
      MATRIX_MatrixRecord@1100528708 : Record 2000000007;
      MATRIX_MatrixRecords@1100528707 : ARRAY [32] OF Record 2000000007;
      MATRIX_MaximumSetLength@1100528706 : Integer;
      MATRIX_PrimKeyRecInCurrSet@1100528705 : Text[1024];
      MATRIX_CaptionSet@1100528704 : ARRAY [32] OF Text[80];
      MATRIX_CaptionRange@1100528703 : Text[250];
      MATRIX_CurrSetLength@1100528702 : Integer;
      MATRIX_Step@1100528701 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn,,,,,FirstRec,LastRec';
      PeriodType@1100528709 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      ProjectForecastMgt@1100528700 : Codeunit 11012256;

    LOCAL PROCEDURE MATRIX_GenerateColumnCaptions@1152(MATRIX_SetWanted@1000 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn');
    VAR
      MatrixManagement@1002 : Codeunit 9200;
      DateUntil@1100525000 : Date;
      DateFilter@1100528700 : Text;
      AccountingPeriod@1100525001 : Record 50;
    BEGIN
      CLEAR(MATRIX_CaptionSet);
      CLEAR(MATRIX_MatrixRecords);

      // Do not work since rollup 10
      //IF "Forecast Date" <> 0D THEN
      //  DateFilter := STRSUBSTNO('%1..', GetPeriodStartDate("Forecast Date", PeriodType));
      DateFilter := GetDateFilterMatrix("Forecast Date",PeriodType);

      MatrixManagement.GeneratePeriodMatrixData(
        MATRIX_SetWanted,
        MATRIX_MaximumSetLength,
        FALSE, // UseNameForCaption
        PeriodType,
        DateFilter, // DateFilter
        MATRIX_PrimKeyRecInCurrSet,
        MATRIX_CaptionSet,
        MATRIX_CaptionRange,
        MATRIX_CurrSetLength,
        MATRIX_MatrixRecords);
    END;

    LOCAL PROCEDURE UpdateMatrixSubForm@7();
    BEGIN
      CurrPage.MATRIX.PAGE.Load(
        MATRIX_CaptionSet,
        MATRIX_MatrixRecords,
        MATRIX_CurrSetLength,
        PeriodType
      );

      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE ShowProjectForecastPerCostType@1100528700(CostType@1100528704 : Option);
    VAR
      ProjectForecastHeader@1100528701 : Record 11020630;
      ProjectForecastMatrix@1100528700 : Page 11126523;
      ProjectForecastLaborMatrix@1100528702 : Page 11126524;
      ProjectForecastRevMatrix@1100528703 : Page 11126525;
    BEGIN
      ProjectForecastHeader.TRANSFERFIELDS(Rec);
      ProjectForecastHeader.SETRANGE("Cost Type Filter", CostType); // used for caption
      ProjectForecastHeader.FILTERGROUP(4);
      ProjectForecastHeader.SETRANGE("Cost Type Filter", CostType);
      ProjectForecastHeader.SETRECFILTER;
      ProjectForecastHeader.FILTERGROUP(0);
      CASE CostType OF
        "Cost Type Filter"::Labor:
          BEGIN
            ProjectForecastLaborMatrix.SetPeriodType(PeriodType);
            ProjectForecastLaborMatrix.EDITABLE(NOT Fixed);
            ProjectForecastLaborMatrix.SETRECORD(ProjectForecastHeader);
            ProjectForecastLaborMatrix.SETTABLEVIEW(ProjectForecastHeader);
            ProjectForecastLaborMatrix.RUNMODAL;
          END;
        "Cost Type Filter"::Revenue:
          BEGIN
            ProjectForecastRevMatrix.SetPeriodType(PeriodType);
            ProjectForecastRevMatrix.EDITABLE(NOT Fixed);
            ProjectForecastRevMatrix.SETRECORD(ProjectForecastHeader);
            ProjectForecastRevMatrix.SETTABLEVIEW(ProjectForecastHeader);
            ProjectForecastRevMatrix.RUNMODAL;
          END;
        ELSE
          BEGIN
            ProjectForecastMatrix.SetPeriodType(PeriodType);
            ProjectForecastMatrix.EDITABLE(NOT Fixed);
            ProjectForecastMatrix.SETRECORD(ProjectForecastHeader);
            ProjectForecastMatrix.SETTABLEVIEW(ProjectForecastHeader);
            ProjectForecastMatrix.RUNMODAL;
          END;
      END;
    END;

    BEGIN
    END.
  }
}

