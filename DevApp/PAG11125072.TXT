OBJECT Page 11125072 Base Recipe Lines Subform
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Recipe Lines;
    SourceTable=Table11020582;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnOpenPage=VAR
                 CompRel@1100525005 : Record 11012059;
                 CentrManagementCU@1100525004 : Codeunit 11012010;
                 NavBln@1100525003 : Boolean;
                 DiscBln@1100525002 : Boolean;
                 DiscGrpBln@1100525001 : Boolean;
                 RcpBln@1100525000 : Boolean;
               BEGIN
                 IF CompRel.READPERMISSION THEN BEGIN  //db, 28-03-14
                   CentrManagementCU.ItemFormEditable(NavBln,DiscBln,DiscGrpBln,RcpBln);
                   IF RcpBln THEN
                     CurrPage.EDITABLE(FALSE);
                 END;
               END;

    OnAfterGetRecord=BEGIN
                       //IF NOT BaseRecipe.GET("Recipe Group",Recipe) THEN BaseRecipe.INIT;  //db, 13-10-15: C026465
                       FieldIsEditable;
                       CALCFIELDS("Rates Based On");  //DP00686 (reuired for lookup RateCode)
                     END;

    OnInsertRecord=BEGIN
                     IF IsFixed THEN BEGIN  //db, 04-08-14
                       ERROR(Text000, FIELDCAPTION(Recipe));
                     END;
                   END;

    OnModifyRecord=BEGIN
                     IF IsFixed THEN BEGIN  //db, 04-08-14
                       CurrPage.UPDATE(FALSE);
                       ERROR(Text001, FIELDCAPTION(Recipe));
                     END;
                   END;

    OnDeleteRecord=BEGIN
                     IF IsFixed THEN BEGIN  //db, 04-08-14
                       CurrPage.UPDATE(FALSE);
                       ERROR(Text002, FIELDCAPTION(Recipe));
                     END;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           //IF NOT BaseRecipe.GET("Recipe Group",Recipe) THEN BaseRecipe.INIT;  //db, 13-10-15: C026465
                           FieldIsEditable;
                         END;

    ActionList=ACTIONS
    {
      { 1100525064;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525077;1 ;ActionGroup;
                      CaptionML=ENU=&Recipe Line }
      { 1100525063;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Details;
                      RunObject=Page 11125075;
                      RunPageLink=Recipe=FIELD(Recipe),
                                  Recipe Group=FIELD(Recipe Group),
                                  Line No.=FIELD(Line No.);
                      Promoted=Yes;
                      Image=ItemTrackingLines;
                      PromotedCategory=Process }
      { 1100525076;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=&Internal Text;
                      Image=SNInfo;
                      OnAction=BEGIN
                                 EditText(0);
                               END;
                                }
      { 1100525075;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+E;
                      CaptionML=ENU=&External Text;
                      Image=SNInfo;
                      OnAction=BEGIN
                                 EditText(1);
                               END;
                                }
      { 1100409005;2 ;Action    ;
                      Name=CommentRecipeLine;
                      CaptionML=ENU=Comment (Recipe Line);
                      RunObject=Page 11124914;
                      RunPageLink=Table Name=CONST(Estimate),
                                  Group=FIELD(Recipe Group),
                                  No.=FIELD(Recipe),
                                  Recipe Line No.=FIELD(Line No.),
                                  Estimate No.=FILTER('');
                      Image=ViewComments }
      { 1100409003;2 ;Action    ;
                      Name=Quantity Sheet;
                      CaptionML=ENU=Quantity Sheet;
                      RunObject=Page 11229786;
                      RunPageLink=Recipe Group=FIELD(Recipe Group),
                                  Recipe=FIELD(Recipe);
                      Image=Worksheet }
      { 1100525073;1 ;ActionGroup;
                      CaptionML=ENU=Buffer }
      { 1100525072;2 ;Action    ;
                      CaptionML=ENU=Show Buffer;
                      Image=ListPage;
                      OnAction=BEGIN
                                 ShowBuffer;
                               END;
                                }
      { 1100525071;2 ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=ENU=Copy &to Buffer;
                      Image=Copy;
                      OnAction=BEGIN
                                 CopyToBuffer;
                               END;
                                }
      { 1100525070;2 ;Action    ;
                      ShortCutKey=Shift+F11;
                      CaptionML=ENU=Copy from Buffer;
                      Image=CopyWorksheet;
                      OnAction=BEGIN
                                 CopyFromBuffer;
                               END;
                                }
      { 1100525069;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1100525068;2 ;Action    ;
                      Name=ChrgButton;
                      CaptionML=ENU=&Surcharge;
                      Image=InsertStartingFee;
                      OnAction=BEGIN
                                 GenerateCharge;
                               END;
                                }
      { 1100525067;2 ;Action    ;
                      CaptionML=ENU=&Explode Sets;
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeSetLines;
                               END;
                                }
      { 1100525066;2 ;Action    ;
                      CaptionML=ENU=Add Std. P&lant Costs and Items;
                      Image=Costs;
                      OnAction=BEGIN
                                 InsertPlantCostLines;
                               END;
                                }
      { 1100525074;2 ;Action    ;
                      CaptionML=ENU=Update Recipies;
                      Image=RefreshText;
                      OnAction=VAR
                                 BaseRecipeLine@1100409000 : Record 11020582;
                               BEGIN
                                 //db, 18-01-13: DP00258
                                 BaseRecipeLine.SETRANGE("Recipe Group", "Recipe Group");
                                 BaseRecipeLine.SETRANGE(Recipe, Recipe);
                                 REPORT.RUNMODAL(REPORT::"Update Recipe NEW",TRUE,TRUE, BaseRecipeLine);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100525000;0;Container;
                ContainerType=ContentArea }

    { 1100525001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100525002;2;Field  ;
                SourceExpr="Cost Type (Price)";
                Editable=CostTypePriceEditable }

    { 1100525031;2;Field  ;
                SourceExpr="Cost Type (Hours)";
                Visible=FALSE;
                Editable=CostTypePriceEditable }

    { 1100525003;2;Field  ;
                SourceExpr="Recipe Group (Child)";
                Editable=RecipeGroupChildEditable }

    { 1100525004;2;Field  ;
                SourceExpr="Recipe (Child)";
                Editable=RecipeChildEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;

                OnLookup=BEGIN
                           IF HandleLookupRecipe THEN
                             CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 1100525005;2;Field  ;
                SourceExpr="Set Code";
                Importance=Additional;
                Editable=SetCodeEditable;
                OnValidate=BEGIN
                             IF Quantity = 0 THEN Quantity := 1;  //db, 29-12-14: init quantity before explode to fill cumulative quantity on related lines
                             CurrPage.SAVERECORD;
                             ExplodeSetLines;
                           END;
                            }

    { 1100525006;2;Field  ;
                SourceExpr="Plant Type";
                Importance=Additional;
                Editable=PlantTypeEditable;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             InsertPlantCostLines;
                           END;
                            }

    { 1100525007;2;Field  ;
                SourceExpr="Item No.";
                Editable=ItemNoEditable;
                OnValidate=BEGIN
                             CheckItemText;  //DP00686
                             RecalcTotals;
                           END;

                OnLookup=BEGIN
                           IF HandleLookupItem(FIELDNO("Item No.")) THEN BEGIN
                             CurrPage.UPDATE(TRUE);
                           END ELSE BEGIN
                             IF ("Item No." <> xRec."Item No.") THEN BEGIN
                               CheckItemText;  //DP00686
                               RecalcTotals;
                             END;
                           END;
                         END;
                          }

    { 1100525008;2;Field  ;
                SourceExpr=Manufacturer;
                Importance=Additional;
                Visible=FALSE;
                Editable=ManufacturerEditable;
                OnLookup=BEGIN
                           GabiVendorRec.HandleVendorLookup(1, Manufacturer);
                         END;
                          }

    { 1100525009;2;Field  ;
                SourceExpr="Basic Item";
                Importance=Additional;
                Visible=FALSE;
                Editable=BasicItemEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;

                OnLookup=BEGIN
                           IF HandleLookupItem(FIELDNO("Basic Item")) THEN
                             CurrPage.UPDATE(TRUE)
                           ELSE
                             IF ("Basic Item" <> xRec."Basic Item") THEN
                               RecalcTotals;
                         END;
                          }

    { 1100525010;2;Field  ;
                SourceExpr="Vendor (Trade Item)";
                Editable=VendorTradeItemEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;

                OnLookup=VAR
                           lvItem@1100525000 : Code[20];
                         BEGIN
                           lvItem := "Vendor (Trade Item)";
                           GabiVendorRec.HandleVendorLookup(2, lvItem);
                           VALIDATE("Vendor (Trade Item)", lvItem);
                         END;
                          }

    { 1100525011;2;Field  ;
                SourceExpr="Trade Item";
                Editable=TradeItemEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;

                OnLookup=BEGIN
                           IF HandleLookupItem(FIELDNO("Trade Item")) THEN
                             CurrPage.UPDATE(TRUE)
                           ELSE
                             IF ("Trade Item" <> xRec."Trade Item") THEN
                               RecalcTotals;
                         END;

                OnAssistEdit=BEGIN
                               //db, 12-05-15
                               IF (HandleAssistEditItem(FIELDNO("Trade Item"))) THEN
                                 CurrPage.UPDATE(TRUE);
                             END;
                              }

    { 1100525012;2;Field  ;
                SourceExpr="Cost Object Labor";
                Editable=CostObjectLaborEditable;
                OnValidate=BEGIN
                             ProcessCostObject(1,0,"Cost Object Labor");
                             RecalcTotals;
                           END;

                OnLookup=BEGIN
                           IF "Recipe (Child)" <> '' THEN EXIT;
                           ProcessCostObject(2,0,"Cost Object Labor");
                           RecalcTotals;
                         END;
                          }

    { 1100525013;2;Field  ;
                SourceExpr="Cost Object Price";
                Editable=CostObjectPriceEditable;
                OnValidate=BEGIN
                             ProcessCostObject(1,"Cost Type (Price)","Cost Object Price");
                             RecalcTotals;
                           END;

                OnLookup=BEGIN
                           IF "Recipe (Child)" <> '' THEN EXIT;
                           ProcessCostObject(2,"Cost Type (Price)","Cost Object Price");
                           RecalcTotals;
                         END;
                          }

    { 1100525065;2;Field  ;
                SourceExpr="Cost Component";
                Editable=CostComponentEditable }

    { 1100525014;2;Field  ;
                SourceExpr=Code;
                Editable=CodeEditable }

    { 1100525015;2;Field  ;
                SourceExpr=Description;
                Style=Attention;
                StyleExpr=PriceAgreement }

    { 1100525016;2;Field  ;
                SourceExpr="Time Quantity";
                Importance=Additional;
                Visible=FALSE;
                Editable=TimeQuantityEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100525017;2;Field  ;
                SourceExpr="Unit of Time";
                Importance=Additional;
                Visible=FALSE;
                Editable=UnitofTimeEditable }

    { 1100525018;2;Field  ;
                SourceExpr=Length;
                Importance=Additional;
                Visible=FALSE;
                Editable=LengthEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100525019;2;Field  ;
                SourceExpr=Width;
                Importance=Additional;
                Visible=FALSE;
                Editable=WidthEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100525020;2;Field  ;
                SourceExpr=Height;
                Importance=Additional;
                Visible=FALSE;
                Editable=HeightEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100525021;2;Field  ;
                SourceExpr=Quantity;
                Editable=QuantityEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100525022;2;Field  ;
                SourceExpr="Unit of Measure" }

    { 1100525023;2;Field  ;
                SourceExpr="Ignore Recipe Quantity";
                Importance=Additional;
                Visible=FALSE }

    { 1100525024;2;Field  ;
                SourceExpr="Line Status" }

    { 1100525025;2;Field  ;
                SourceExpr="Surcharge Type";
                Visible=FALSE;
                Editable=SurchargeTypeEditable;
                OnValidate=BEGIN
                             FieldIsEditable;
                           END;
                            }

    { 1100525026;2;Field  ;
                DrillDown=Yes;
                SourceExpr="Surcharge %";
                Visible=FALSE;
                Editable=SurchargePercEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;

                OnDrillDown=VAR
                              ChrgFrm@1100525000 : Page 11229327;
                            BEGIN
                              ChrgRec.RESET;
                              ChrgRec.SETFILTER("Estimate No.", '%1', '');
                              ChrgRec.SETFILTER("Sub-Estimate No.", '%1', '');
                              ChrgRec.SETFILTER("Part Group", '%1', '');
                              ChrgRec.SETFILTER(Part, '%1', '');
                              ChrgRec.SETRANGE("Recipe Line", 0);
                              ChrgRec.SETFILTER("Sales Document No.", '%1', '');  //DP00481
                              ChrgRec.SETRANGE("Recipe Group", "Recipe Group");
                              ChrgRec.SETRANGE(Recipe, Recipe);
                              ChrgRec.SETRANGE("Surcharge Line", "Line No.");
                              ChrgFrm.SETTABLEVIEW(ChrgRec);
                              ChrgFrm.SetSelection(3);
                              ChrgFrm.RUNMODAL;

                              RecalcTotals;
                              CurrPage.UPDATE(TRUE);
                            END;
                             }

    { 1100525027;2;Field  ;
                SourceExpr="Norm Group";
                Editable=NormGroupEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100525028;2;Field  ;
                SourceExpr="Sub Operation Code";
                Editable=SubOperationCodeEditable;
                OnValidate=BEGIN
                             ProcessSubOperation;
                             RecalcTotals;
                           END;

                OnLookup=VAR
                           OperFrm@1100525001 : Page 11012178;
                           OperRec@1100525000 : Record 11012166;
                         BEGIN
                           IF NOT EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Sub Operation Code"),Rec) THEN EXIT;

                           CLEAR(OperFrm);
                           OperFrm.LOOKUPMODE(TRUE);

                           OperFrm.SetSelection(DATABASE::"Base Recipe Line",'','','','',0,"Recipe Group",Recipe);

                           OperRec.Code := "Sub Operation Code";
                           OperFrm.SETRECORD(OperRec);

                           IF OperFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             OperFrm.GETRECORD(OperRec);
                             VALIDATE("Sub Operation Code", OperRec.Code);

                             ProcessSubOperation;

                             RecalcTotals;
                             //UpdateEstLines;
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 1100525029;2;Field  ;
                SourceExpr=Norm;
                Editable=NormEditable;
                OnValidate=BEGIN
                             "Norm Agreement" := TRUE;
                             RecalcTotals;
                           END;

                OnLookup=VAR
                           NormGroupFrm@1100525000 : Page 11012174;
                         BEGIN
                           //DP00381
                           IF HandleLookupOperationNorm THEN
                             CurrPage.UPDATE(TRUE)
                           ELSE
                             RecalcTotals;
                         END;
                          }

    { 1100528900;2;Field  ;
                CaptionML=ENU=Norm (minuts);
                SourceExpr=GetMinuts(0,0);
                Visible=FALSE;
                Editable=FALSE }

    { 1100525030;2;Field  ;
                SourceExpr="Production Rate";
                Importance=Additional }

    { 1100525034;2;Field  ;
                SourceExpr="Rate Code";
                Editable=RateCodeEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;

                OnLookup=BEGIN
                           HandleLookupRateCode;  //db, 02-02-15
                           RecalcTotals;
                         END;
                          }

    { 1100525035;2;Field  ;
                SourceExpr="Cost Rate" }

    { 1100525036;2;Field  ;
                SourceExpr="Sales Rate" }

    { 1100525037;2;Field  ;
                SourceExpr="Wage Component";
                Visible=FALSE;
                Editable=WageComponentEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100525038;2;Field  ;
                SourceExpr="Gross Price";
                Editable=GrossPriceEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100525039;2;Field  ;
                SourceExpr="Purchase Discount %";
                Editable=PurchDiscountEditable }

    { 1100525040;2;Field  ;
                SourceExpr="Nett Cost Price";
                Editable=NettCostPriceEditable;
                OnValidate=BEGIN
                             "Price Agreement" := TRUE;  //db, 22-12-14
                             RecalcTotals;
                           END;
                            }

    { 1100525041;2;Field  ;
                SourceExpr="Sales Discount %";
                Editable=SalesDiscountEditable }

    { 1100525042;2;Field  ;
                SourceExpr="Nett Sales Price";
                Editable=NettSalesPriceEditable;
                OnValidate=BEGIN
                             "Price Agreement (Sales)" := TRUE;  //db, 14-04-14: DP00594
                             RecalcTotals;
                           END;
                            }

    { 1100525043;2;Field  ;
                SourceExpr="Buy Back Price";
                Importance=Additional;
                Visible=FALSE;
                Editable=BuyBackPriceEditable }

    { 1100525044;2;Field  ;
                SourceExpr="Buy Back %";
                Importance=Additional;
                Visible=FALSE;
                Editable=BuyBackPercEditable }

    { 1100525078;2;Field  ;
                SourceExpr="Surcharge % Labor";
                OnValidate=BEGIN
                             RecalcTotals;  //db, 19-06-14
                           END;
                            }

    { 1100525079;2;Field  ;
                SourceExpr="Surcharge % Price";
                OnValidate=BEGIN
                             RecalcTotals;  //db, 19-06-14
                           END;
                            }

    { 1100409000;2;Field  ;
                SourceExpr="Adjustment Factor Hours";
                Importance=Additional;
                Visible=FALSE }

    { 1100409001;2;Field  ;
                SourceExpr="Adjustment Factor Price";
                Importance=Additional;
                Visible=FALSE }

    { 1100409002;2;Field  ;
                SourceExpr="Adj. Factor Hours (Sales)";
                Importance=Additional;
                Visible=FALSE }

    { 1100525045;2;Field  ;
                SourceExpr="VAT Prod. Posting Group";
                Importance=Additional;
                Visible=FALSE }

    { 1100525046;2;Field  ;
                SourceExpr=Hours }

    { 1100528901;2;Field  ;
                CaptionML=ENU=Minuts;
                SourceExpr=GetMinuts(1,0);
                Visible=FALSE;
                Editable=FALSE }

    { 1100525047;2;Field  ;
                SourceExpr="Labor Amount" }

    { 1100525048;2;Field  ;
                SourceExpr="Nett Cost Amount" }

    { 1100525049;2;Field  ;
                SourceExpr="Cost Amount" }

    { 1100525050;2;Field  ;
                SourceExpr="Labor Sales Amount" }

    { 1100525051;2;Field  ;
                SourceExpr="Nett Sales Amount" }

    { 1100525052;2;Field  ;
                SourceExpr="Sales Amount" }

    { 1100525053;2;Field  ;
                SourceExpr="Price Reference Date";
                Importance=Additional;
                Visible=FALSE }

    { 1100525054;2;Field  ;
                SourceExpr="Norm Agreement" }

    { 1100525055;2;Field  ;
                SourceExpr="Price Agreement" }

    { 1100525080;2;Field  ;
                SourceExpr="Price Agreement (Sales)";
                Visible=FALSE }

    { 1100525056;2;Field  ;
                SourceExpr="Additional Cost";
                Visible=FALSE }

    { 1100525057;2;Field  ;
                SourceExpr=Vendor }

    { 1100525058;2;Field  ;
                SourceExpr="Vendor Name";
                Visible=FALSE }

    { 1100525059;2;Field  ;
                SourceExpr=Subcontractor }

    { 1100525060;2;Field  ;
                SourceExpr="Subcontractor Name";
                Visible=FALSE }

    { 1100525061;2;Field  ;
                SourceExpr=Element }

    { 1100525062;2;Field  ;
                SourceExpr="Project Planning Activity Code" }

    { 1100528600;2;Field  ;
                SourceExpr="Price History 0 Exists";
                Visible=FALSE }

    { 1100409004;2;Field  ;
                SourceExpr="Quantity Sheet Feature" }

  }
  CODE
  {
    VAR
      GabiVendorRec@1100525033 : Record 11012304;
      BudgetRateRec@1100525034 : Record 11012000;
      BufferMgt@1100525030 : Codeunit 11012230;
      EstMgmt@1100525032 : Codeunit 11012232;
      BaseRecipe@1100525036 : Record 11020581;
      ChrgRec@1100525037 : Record 11229771;
      RecipeGroupChildEditable@1100525000 : Boolean INDATASET;
      RecipeChildEditable@1100525001 : Boolean INDATASET;
      SetCodeEditable@1100525002 : Boolean INDATASET;
      PlantTypeEditable@1100525003 : Boolean INDATASET;
      ItemNoEditable@1100525004 : Boolean INDATASET;
      ManufacturerEditable@1100525005 : Boolean INDATASET;
      BasicItemEditable@1100525006 : Boolean INDATASET;
      VendorTradeItemEditable@1100525007 : Boolean INDATASET;
      TradeItemEditable@1100525008 : Boolean INDATASET;
      CodeEditable@1100525009 : Boolean INDATASET;
      TimeQuantityEditable@1100525010 : Boolean INDATASET;
      UnitofTimeEditable@1100525011 : Boolean INDATASET;
      SurchargeTypeEditable@1100525012 : Boolean INDATASET;
      SurchargePercEditable@1100525013 : Boolean INDATASET;
      NormGroupEditable@1100525014 : Boolean INDATASET;
      SubOperationCodeEditable@1100525015 : Boolean INDATASET;
      NormEditable@1100525016 : Boolean INDATASET;
      RateCodeEditable@1100525017 : Boolean INDATASET;
      WageComponentEditable@1100525018 : Boolean INDATASET;
      GrossPriceEditable@1100525019 : Boolean INDATASET;
      NettCostPriceEditable@1100525020 : Boolean INDATASET;
      NettSalesPriceEditable@1100528900 : Boolean INDATASET;
      PurchDiscountEditable@1100528901 : Boolean INDATASET;
      SalesDiscountEditable@1100528902 : Boolean INDATASET;
      BuyBackPriceEditable@1100525021 : Boolean INDATASET;
      BuyBackPercEditable@1100525022 : Boolean INDATASET;
      CostObjectLaborEditable@1100525023 : Boolean INDATASET;
      CostObjectPriceEditable@1100525024 : Boolean INDATASET;
      CostComponentEditable@1100528903 : Boolean INDATASET;
      CostTypePriceEditable@1100528904 : Boolean INDATASET;
      LengthEditable@1100525025 : Boolean INDATASET;
      WidthEditable@1100525026 : Boolean INDATASET;
      HeightEditable@1100525027 : Boolean INDATASET;
      QuantityEditable@1100525028 : Boolean INDATASET;
      Text000@1100409002 : TextConst 'ENU=Adding not allowed: %1 is fixed.';
      Text001@1100409001 : TextConst 'ENU=Changing not allowed: %1 is fixed.';
      Text002@1100409000 : TextConst 'ENU=Deleting not allowed: %1 is fixed.';
      Text009@1100525029 : TextConst 'ENU=Add Line first.';
      PriceAgreement@1100525035 : Boolean INDATASET;

    PROCEDURE RecalcTotals@1();
    BEGIN
      CurrPage.SAVERECORD;
      CalculateTotals;
      CheckRecipeCharge;
      UpdateRelatedRecipe("Recipe Group", Recipe);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE ExplodeSetLines@1100525002();
    VAR
      Rec2@1100525000 : Record 11020582;
    BEGIN
      Rec2.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(Rec2);
      Rec2.SETFILTER(Rec2."Set Code",'<>%1','');

      IF EstMgmt.ExplodeSetLinesToBaseRcpLine(Rec2) THEN
        CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE InsertPlantCostLines@1100525001();
    VAR
      Rec2@1100525000 : Record 11020582;
    BEGIN
      Rec2.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(Rec2);
      Rec2.SETFILTER(Rec2."Plant Type",'<>%1','');

      IF EstMgmt.InsPltCostItmLinesToBasRcpLine(Rec2) THEN
        CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE FieldIsEditable@1100525008() : Boolean;
    VAR
      EstMgmt@1100525001 : Codeunit 11012232;
      Fixed@1100409000 : Boolean;
    BEGIN
      //db, 04-08-14:  (synchronized with page 11012158)
      Fixed := IsFixed;

      RecipeGroupChildEditable := NOT Fixed;
      RecipeChildEditable := NOT Fixed;
      SetCodeEditable := NOT Fixed;
      PlantTypeEditable := NOT Fixed;
      ItemNoEditable := NOT Fixed;
      BasicItemEditable := NOT Fixed;
      ManufacturerEditable := NOT Fixed;
      VendorTradeItemEditable := NOT Fixed;
      TradeItemEditable := NOT Fixed;
      CodeEditable := NOT Fixed;
      TimeQuantityEditable := NOT Fixed;
      UnitofTimeEditable := NOT Fixed;
      SurchargeTypeEditable := NOT Fixed;
      SurchargePercEditable := NOT Fixed;
      SubOperationCodeEditable := NOT Fixed;
      NormGroupEditable := NOT Fixed;
      NormEditable := NOT Fixed;

      RateCodeEditable := NOT Fixed;
      GrossPriceEditable := NOT Fixed;
      NettCostPriceEditable := NOT Fixed;
      NettSalesPriceEditable := NOT Fixed;
      PurchDiscountEditable := NOT Fixed;
      SalesDiscountEditable := NOT Fixed;
      BuyBackPriceEditable := NOT Fixed;
      BuyBackPercEditable := NOT Fixed;

      CostObjectLaborEditable := NOT Fixed;
      CostObjectPriceEditable := NOT Fixed;
      CostComponentEditable := NOT Fixed;
      CostTypePriceEditable := NOT Fixed;

      QuantityEditable := NOT Fixed;
      LengthEditable := NOT Fixed;
      WidthEditable := NOT Fixed;
      HeightEditable := NOT Fixed;

      //AdditionalCostEditable := NOT Fixed;
      //VendorEditable := NOT Fixed;
      //PriceAgreementEditable := NOT Fixed;
      //AskForQuoteEditable := NOT Fixed;
      //DocumentNoEditable := NOT Fixed;
      //LineStatusEditable := NOT Fixed;
      //UnitOfMeasureEditable := NOT Fixed;
      //DescriptionEditable := NOT Fixed;

      IF NOT Fixed THEN BEGIN
        RecipeGroupChildEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Recipe Group (Child)"),Rec);
        RecipeChildEditable := EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Recipe (Child)"),Rec);
        SetCodeEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Set Code"),Rec);
        PlantTypeEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Plant Type"),Rec);
        ItemNoEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Item No."),Rec);
        ManufacturerEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO(Manufacturer),Rec);
        BasicItemEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Basic Item"),Rec);
        VendorTradeItemEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Vendor (Trade Item)"),Rec);
        TradeItemEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Trade Item"),Rec);
        CodeEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO(Code),Rec);
        TimeQuantityEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Time Quantity"),Rec);
        UnitofTimeEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Unit of Time"),Rec);
        SurchargeTypeEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Surcharge Type"),Rec);
        SurchargePercEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Surcharge %"),Rec);
        NormGroupEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Norm Group"),Rec);
        SubOperationCodeEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Sub Operation Code"),Rec);
        NormEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO(Norm),Rec);
        RateCodeEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Rate Code"),Rec);
        WageComponentEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Wage Component"),Rec);
        GrossPriceEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Gross Price"),Rec);
        NettCostPriceEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Nett Cost Price"),Rec);
        //db.sn, 21-01-14
        NettSalesPriceEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Nett Sales Price"),Rec);
        PurchDiscountEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Purchase Discount %"),Rec);
        SalesDiscountEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Sales Discount %"),Rec);
        //db.en, 21-01-14
        BuyBackPriceEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Buy Back Price"),Rec);
        BuyBackPercEditable :=  EstMgmt.BaseRcpFieldIsEditable(FIELDNO("Buy Back %"),Rec);

        CostObjectLaborEditable := ("Recipe (Child)" = '') AND ("Surcharge Type" = "Surcharge Type"::" ");
        CostObjectPriceEditable := ("Recipe (Child)" = '') AND ("Surcharge Type" = "Surcharge Type"::" ");
        CostComponentEditable :=  ("Recipe (Child)" = '') AND ("Surcharge Type" = "Surcharge Type"::" ");  //db, 21-01-14
        CostTypePriceEditable :=  ("Recipe (Child)" = '');  //db, 21-01-14

        LengthEditable := EnterQuantity(1);
        WidthEditable := EnterQuantity(1);
        HeightEditable := EnterQuantity(1);
        QuantityEditable := EnterQuantity(2);

        PriceAgreement := ("Price Agreement" OR  "Norm Agreement");
      END;
    END;

    PROCEDURE EditText@8(lvType@1210190000 : 'intern,extern');
    VAR
      TextFrm@11012001 : Page 11012120;
    BEGIN
      IF "Line No." = 0 THEN
        ERROR(Text009);

      TextFrm.TextType(lvType);
      TextFrm.SetSelection(DATABASE::"Base Recipe Line","Recipe Group", Recipe, '', '', '', '',  "Line No.", 0);

      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    PROCEDURE CopyToBuffer@1100485003();
    VAR
      BaseRecipeLine@1100525000 : Record 11020582;
      EstLineRec@1100525003 : Record 11072072;
      EstRcpLineRec@1100525002 : Record 11072075;
      PartLineRec@1100525001 : Record 11072076;
      SalesRecipeLineRec@1100525004 : Record 11229789;
    BEGIN
      BaseRecipeLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(BaseRecipeLine);
      BufferMgt.CopyToBuffer(3,EstLineRec,EstRcpLineRec,PartLineRec,BaseRecipeLine, SalesRecipeLineRec);
    END;

    PROCEDURE CopyFromBuffer@1100485002();
    VAR
      EstLineRec@1100525002 : Record 11072072;
      EstRcpLineRec@1100525001 : Record 11072075;
      PartLineRec@1100525000 : Record 11072076;
      SalesRecipeLineRec@1100525003 : Record 11229789;
    BEGIN
      BufferMgt.CopyFromBuffer(3,EstLineRec,EstRcpLineRec,PartLineRec,Rec, SalesRecipeLineRec);
    END;

    PROCEDURE ShowBuffer@1100485001();
    VAR
      EstLineRec@1100525002 : Record 11072072;
      EstRcpLineRec@1100525001 : Record 11072075;
      PartLineRec@1100525000 : Record 11072076;
      SalesRecipeLineRec@1100525003 : Record 11229789;
    BEGIN
      BufferMgt.ShowBuffer(3,EstLineRec,EstRcpLineRec,PartLineRec,Rec, SalesRecipeLineRec);
    END;

    PROCEDURE GenerateCharge@4();
    BEGIN
      CreateCharge;
      RecalcTotals;
    END;

    PROCEDURE EditDetailRecipeLine@1100528901();
    BEGIN
      //DP00381
      PAGE.RUNMODAL(PAGE::"Base Recipe Line Card", Rec);
    END;

    PROCEDURE ActivateChildRecipe@1100525000();
    VAR
      RecipeRec@1100525000 : Record 11020581;
      RcpFrm@1100525001 : Page 11125071;
    BEGIN
      //db, 24-06-14
      IF "Recipe (Child)" = '' THEN EXIT;
      RecipeRec.RESET;
      RecipeRec.SETRANGE("Recipe Group", "Recipe Group (Child)");
      RecipeRec.SETRANGE("No.", "Recipe (Child)");
      RcpFrm.EDITABLE(FALSE);
      RcpFrm.SETTABLEVIEW(RecipeRec);
      RcpFrm.RUNMODAL;
    END;

    PROCEDURE EditCommentLines@1100525015();
    VAR
      UpdateMgt@1100528900 : Codeunit 11012229;
    BEGIN
    END;

    PROCEDURE CheckItemText@1100409000();
    BEGIN
      //DP00686
      CurrPage.SAVERECORD;
      CopyItemText;
    END;

    PROCEDURE HandleLookupRateCode@1100409001();
    VAR
      EstSetup@1100409000 : Record 11012150;
      RecipeRec@1100409001 : Record 11020581;
      RateGroupRec@1100409002 : Record 11012162;
      BudgetRateRec@1100409003 : Record 11012000;
    BEGIN
      //db, 02-02-15
      EstSetup.GET;
      IF EstSetup."Rates Based On" = EstSetup."Rates Based On"::"Budget Rate" THEN BEGIN
        IF PAGE.RUNMODAL(0, BudgetRateRec) = ACTION::LookupOK THEN
          VALIDATE("Rate Code", BudgetRateRec.Code);
      END ELSE BEGIN
        RecipeRec.GET("Recipe Group", Recipe);
        RateGroupRec.SETRANGE("Rate Group", RecipeRec."Rate Group");
        IF PAGE.RUNMODAL(0, RateGroupRec) = ACTION::LookupOK THEN
          VALIDATE("Rate Code", RateGroupRec."Rate Code");
      END;
    END;

    BEGIN
    {
      //db, 02-12-14: lookup RateCode removed; use lookup tablefield (based on EstSetup)
    }
    END.
  }
}

