OBJECT Page 11125162 Copy Service Price Book
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Copy Service Price Book;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table11071768;
    PageType=StandardDialog;
    OnQueryClosePage=BEGIN
                       CloseActionOK := CloseAction IN [ACTION::OK,ACTION::LookupOK];
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100525004;1;Group  ;
                CaptionML=ENU=Copy from;
                GroupType=Group }

    { 1100528601;2;Field  ;
                CaptionML=ENU=Type;
                OptionCaptionML=ENU=" ,Internal,Customer";
                SourceExpr=FromType;
                Editable=FALSE }

    { 1100528603;2;Field  ;
                CaptionML=ENU=Code;
                SourceExpr=FromCode;
                Editable=FALSE }

    { 1100528605;2;Field  ;
                CaptionML=ENU=Index Date;
                SourceExpr=FromIndexDate;
                Editable=FALSE }

    { 1100528607;2;Field  ;
                CaptionML=ENU=Description;
                SourceExpr=FromDescription;
                Editable=FALSE }

    { 1100525001;1;Group  ;
                CaptionML=ENU=Copy to;
                GroupType=Group }

    { 1210190002;2;Field  ;
                CaptionML=ENU=Type;
                OptionCaptionML=ENU=" ,Internal,Customer";
                SourceExpr=ToType;
                Editable=FALSE }

    { 1210190003;2;Field  ;
                CaptionML=ENU=Code;
                SourceExpr=ToCode;
                OnLookup=VAR
                           ServiceUnitPrice@1100528300 : Record 11071768;
                           Customer@1100528301 : Record 18;
                         BEGIN
                           IF ToType = ToType::Internal THEN BEGIN
                             ServiceUnitPrice.SETRANGE(Type, Type);
                             IF (PAGE.RUNMODAL(0, ServiceUnitPrice) = ACTION::LookupOK) THEN BEGIN
                               ToCode := ServiceUnitPrice.Code;
                             END;
                           END;
                           IF ToType = ToType::Customer THEN BEGIN
                             IF (PAGE.RUNMODAL(0, Customer) = ACTION::LookupOK) THEN
                               ToCode := Customer."No.";
                           END;
                         END;
                          }

    { 1210190004;2;Field  ;
                CaptionML=ENU=Index Date;
                SourceExpr=ToIndexDate }

    { 1210190005;2;Field  ;
                CaptionML=ENU=Description;
                SourceExpr=ToDescription }

  }
  CODE
  {
    VAR
      FromType@1210190007 : ',Internal,Customer';
      FromCode@1210190006 : Code[20];
      FromIndexDate@1210190005 : Date;
      FromDescription@1210190004 : Text[50];
      ToType@1210190000 : ',Internal,Customer';
      ToCode@1210190001 : Code[20];
      ToIndexDate@1210190002 : Date;
      ToDescription@1210190003 : Text[50];
      Text000@1210190008 : TextConst 'ENU=%1 must be filled.';
      Text001@1100528300 : TextConst 'ENU=%1 or %2 must differ from the ''From'' Value.';
      Text002@1210190014 : TextConst 'ENU=%1 must be the same as the ''From'' Value.';
      Text003@1210190016 : TextConst 'ENU=%1 already exists.';
      ToTypeMess@1210190009 : TextConst 'ENU=To Type';
      ToCodeMess@1210190010 : TextConst 'ENU=To Code';
      ToIndexDateMess@1210190011 : TextConst 'ENU=To Index Date';
      ToDescriptionMess@1210190012 : TextConst 'ENU=To Desctiption';
      CloseActionOK@1100528400 : Boolean;

    PROCEDURE SetStartValues@1210190000(ServiceUnitPrice@1210190000 : Record 11071768);
    BEGIN
      FromType := ServiceUnitPrice.Type;
      FromCode := ServiceUnitPrice.Code;
      FromIndexDate := ServiceUnitPrice."Index Date";
      FromDescription := ServiceUnitPrice.Description;
      ToType := ServiceUnitPrice.Type;
      ToIndexDate := WORKDATE;
      ToDescription := ServiceUnitPrice.Description;
    END;

    PROCEDURE CheckAndCopy@1210190001();
    VAR
      ServiceUnitPrice@1210190001 : Record 11071768;
      ServiceUnitPriceManagement@1210190000 : Codeunit 11012846;
    BEGIN
      IF (ToType < 1) THEN
        ERROR(Text000, ToTypeMess);
      IF (ToCode = '') THEN
        ERROR(Text000, ToCodeMess);
      IF (ToIndexDate = 0D) THEN
        ERROR(Text000, ToIndexDateMess);
      IF (ToDescription = '') THEN
        ERROR(Text000, ToDescriptionMess);

      IF (ToType <> FromType) THEN
        ERROR(Text002, ToTypeMess);
      IF (ToIndexDate = FromIndexDate) AND (ToCode = FromCode) THEN
        ERROR(Text001, ToCodeMess, ToIndexDateMess);

      IF (ServiceUnitPrice.GET(ToCode, ToIndexDate)) THEN
        ERROR(Text003, ServiceUnitPrice.TABLECAPTION);

      ServiceUnitPriceManagement.CopyUnitPrice(
        FromType, FromCode, FromIndexDate, FromDescription,
        ToType, ToCode, ToIndexDate, ToDescription, FALSE);
    END;

    LOCAL PROCEDURE StdDialogConfirm@1100528400() : Boolean;
    BEGIN
      CurrPage.RUNMODAL;
      EXIT(CloseActionOK);
    END;

    LOCAL PROCEDURE StdDialogDoAction@1100528401();
    BEGIN
      CheckAndCopy;
    END;

    PROCEDURE StdDialogRunModal@1100528404();
    BEGIN
      IF StdDialogConfirm THEN
        StdDialogDoAction;
    END;

    BEGIN
    END.
  }
}

