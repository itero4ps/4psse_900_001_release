OBJECT Page 11125194 Service Loc.Structure SF
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Service Location Structure;
    SourceTable=Table11071720;
    DelayedInsert=Yes;
    PageType=ListPart;
    OnOpenPage=BEGIN
                 UpdateEditable;
               END;

    OnAfterGetRecord=VAR
                       ServiceObjectInfoMgt@1100525000 : Codeunit 11012840;
                     BEGIN
                       IF NOT "Object Line" THEN BEGIN
                         LineDescription := Description;
                         LineDescription2 := '';
                         MeasurementDate := 0D;
                       //  ConditionScore := NEN2767Management.GetLocStructConditionScore("Service Location No.", "Structure No.", "No.");
                         ConditionScore := 0;
                         NoOfLTMPTasks := 0;
                       END ELSE BEGIN
                         CALCFIELDS("Object Description", "Object Description 2");
                         CALCFIELDS("Brand Code", "Type Code", "Model Code");
                         LineDescription := "Object Description";
                         LineDescription2 := "Object Description 2";
                         MeasurementDate := TODAY;
                         ConditionScore := NEN2767Management.GetObjectConditionScore("Service Object No.", MeasurementDate);
                         IF NEN2767Management.IsNEN2767Licensed THEN
                           NoOfLTMPTasks := NEN2767Management.GetNoOfTasks("Service Object No.");
                       END;

                       ActualContractNo := MaintenanceManagementCU.GetActualContractsForObject("Service Object No.",TODAY);
                       ServiceObjectInfoMgt.GetStdSpecValues("Service Object No.", SerialNo, YearOfManufacture);
                       LineDescriptionOnFormat;
                       UpdateEditable;
                     END;

    OnNewRecord=BEGIN
                  LineDescription := '';
                  NoOfLTMPTasks := 0;
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525001;1 ;ActionGroup;
                      CaptionML=ENU=Object }
      { 1100525002;2 ;Action    ;
                      CaptionML=ENU=All Related Objects;
                      Image=SuggestCapacity;
                      OnAction=VAR
                                 ServiceObjectManagement@1100525000 : Codeunit 11012808;
                               BEGIN
                                 ServiceObjectManagement.ShowRelatedObjects("Service Object No.");
                               END;
                                }
      { 1100528606;2 ;Action    ;
                      CaptionML=ENU=Condition Measurement (NEN2767);
                      Image=DocumentEdit;
                      OnAction=BEGIN
                                 ShowConditionScore;
                               END;
                                }
      { 1100528607;2 ;Action    ;
                      CaptionML=ENU=LT. Maint. Plan Tasks;
                      OnAction=BEGIN
                                 ShowLTMaintPlanTasks;
                               END;
                                }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1210190000;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Select Standard Objects;
                      Image=ServiceItem;
                      OnAction=BEGIN
                                 SelectStandardObjects;
                               END;
                                }
      { 1902236704;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Select Objects;
                      Image=ServiceItem;
                      OnAction=BEGIN
                                 SelectObjects;
                               END;
                                }
      { 1902575904;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Attach to Service Contract;
                      Image=CopyBudget;
                      OnAction=VAR
                                 ServiceLocStructureLine@1100525001 : Record 11071720;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ServiceLocStructureLine);
                                 CreateContractForSelObjects(ServiceLocStructureLine);
                               END;
                                }
      { 1100528608;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+T;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create New LTMP Task;
                      Visible=UseForLTMP;
                      Image=BreakpointsList;
                      OnAction=BEGIN
                                 CreateNewLTMPTask;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100526200;1;Group  ;
                IndentationColumnName=DescriptionIndentationValue;
                IndentationControls=Description;
                GroupType=Repeater }

    { 1100526201;2;Field  ;
                SourceExpr="No.";
                Editable=NoEditable;
                OnValidate=BEGIN
                             LineDescriptionOnFormat;
                           END;

                OnAssistEdit=BEGIN
                               SelectObjects;
                             END;
                              }

    { 1100526203;2;Field  ;
                Name=Description;
                CaptionML=ENU=Description;
                SourceExpr=LineDescription;
                Editable=DescriptionEditable;
                Style=Strong;
                StyleExpr=DescriptionEmphasize;
                OnValidate=BEGIN
                             Description := LineDescription;
                           END;
                            }

    { 1100528604;2;Field  ;
                Name=Description2;
                CaptionML=ENU=Description 2;
                SourceExpr=LineDescription2;
                Editable=DescriptionEditable;
                Style=Strong;
                StyleExpr=DescriptionEmphasize;
                OnValidate=BEGIN
                             "Description 2" := LineDescription2;
                           END;
                            }

    { 1100526205;2;Field  ;
                Lookup=No;
                SourceExpr="Service Object No.";
                Editable=FALSE;
                OnAssistEdit=VAR
                               ServiceObject@1100528600 : Record 11071691;
                             BEGIN
                               IF "Service Object No." = '' THEN EXIT;
                               ServiceObject.GET("Service Object No.");
                               PAGE.RUNMODAL(PAGE::"Service Object", ServiceObject);
                             END;
                              }

    { 1100528609;2;Field  ;
                SourceExpr="Brand Code" }

    { 1100528612;2;Field  ;
                SourceExpr="Brand Description";
                Visible=FALSE }

    { 1100528611;2;Field  ;
                SourceExpr="Model Code" }

    { 1100528614;2;Field  ;
                SourceExpr="Model Description";
                Visible=FALSE }

    { 1100528610;2;Field  ;
                SourceExpr="Type Code" }

    { 1100528613;2;Field  ;
                SourceExpr="Type Description";
                Visible=FALSE }

    { 1100528600;2;Field  ;
                CaptionML=ENU=Actual Contract No.;
                SourceExpr=ActualContractNo;
                TableRelation=Service-Contract;
                Editable=FALSE;
                OnLookup=BEGIN
                           MaintenanceManagementCU.ShowActualContractsForObject("Service Object No.", '', TODAY, TRUE, '');
                           CurrPage.UPDATE;
                         END;
                          }

    { 1100526207;2;Field  ;
                SourceExpr="Standard Object No." }

    { 1100525000;2;Field  ;
                CaptionML=ENU=Serial No.;
                SourceExpr=SerialNo;
                Editable=false }

    { 1100525003;2;Field  ;
                CaptionML=ENU=Year of Manufacture;
                SourceExpr=YearOfManufacture;
                Editable=false }

    { 1100528601;2;Field  ;
                SourceExpr=Blocked }

    { 1100528702;2;Field  ;
                SourceExpr="Customer Feature" }

    { 1100528703;2;Field  ;
                SourceExpr="Object Customer" }

    { 1100528602;2;Field  ;
                CaptionML=ENU=Measurement Date;
                SourceExpr=MeasurementDate;
                Visible=false;
                Editable=false;
                OnDrillDown=BEGIN
                              ShowConditionScore;
                            END;
                             }

    { 1100528603;2;Field  ;
                CaptionML=ENU=Condition Score;
                BlankZero=Yes;
                SourceExpr=ConditionScore;
                Visible=false;
                Editable=false }

    { 1100528605;2;Field  ;
                CaptionML=ENU=No. of Long Term Maint. Plan Tasks;
                BlankZero=Yes;
                SourceExpr=NoOfLTMPTasks;
                Visible=UseForLTMP;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              TESTFIELD("Object Line");
                              NEN2767Management.ShowLTMaintTaskList("Service Object No.");
                            END;
                             }

  }
  CODE
  {
    VAR
      MaintenanceManagementCU@1100528601 : Codeunit 11012829;
      NEN2767Management@1100528605 : Codeunit 11012863;
      LineDescription@1100526200 : Text[50];
      Text000@1100528600 : TextConst 'ENU=First Select a Stucture Line';
      LineDescription2@1100528610 : Text[50];
      ActualContractNo@1100528602 : Code[20];
      DescriptionEmphasize@19010547 : Boolean INDATASET;
      DescriptionIndentationValue@19057867 : Integer INDATASET;
      NoEditable@1210190000 : Boolean INDATASET;
      DescriptionEditable@1210190001 : Boolean INDATASET;
      SerialNo@1100525000 : Text[80];
      YearOfManufacture@1100525001 : Text[80];
      ConditionScore@1100528604 : ',1,2,3,4,5,6';
      MeasurementDate@1100528603 : Date;
      Text001@1100528606 : TextConst 'ENU=First Select an Object Line';
      NoOfLTMPTasks@1100528608 : Integer;
      UseForLTMP@1100528607 : Boolean INDATASET;
      Text002@1100528609 : TextConst 'ENU=Open Long Term Maintenance Summary?';

    PROCEDURE SelectObjects@1100528600();
    VAR
      lvElementObjectFrm@1100528601 : Page 11125195;
      lvElementObjectRec@1100528600 : Record 11071720;
    BEGIN
      IF NOT "Object Line" THEN BEGIN
        lvElementObjectRec.SETRANGE("Service Location No.","Service Location No.");
        lvElementObjectRec.SETRANGE("Structure No.","Structure No.");
        lvElementObjectRec.SETRANGE("No.","No.");
        lvElementObjectRec.SETRANGE("Object Line",TRUE);
        lvElementObjectFrm.LOOKUPMODE(TRUE);
        lvElementObjectFrm.SETTABLEVIEW(lvElementObjectRec);
        lvElementObjectFrm.SetDefaults("Service Location No.","No.","Structure No.");
        IF lvElementObjectFrm.RUNMODAL = ACTION::LookupOK THEN
          CurrPage.UPDATE;
      END ELSE
        ERROR(Text000);
    END;

    PROCEDURE CreateObject@1100528601();
    VAR
      ServiceLocStructureLine@1100528600 : Record 11071720;
      ServiceObject@1100528601 : Record 11071691;
    BEGIN
      IF NOT "Object Line" THEN BEGIN
        ServiceObject.INIT;
        ServiceObject.INSERT(TRUE);
        ServiceObject.VALIDATE("Service Location No.", "Service Location No.");
        ServiceObject.MODIFY(TRUE);

        ServiceLocStructureLine.INIT;
        ServiceLocStructureLine.VALIDATE("Service Location No.", "Service Location No.");
        ServiceLocStructureLine.VALIDATE("Structure No.", "Structure No.");
        ServiceLocStructureLine.VALIDATE("No.", "No.");
        ServiceLocStructureLine.VALIDATE("Object Line", TRUE);
        ServiceLocStructureLine.VALIDATE("Service Object No.", ServiceObject."No.");
        ServiceLocStructureLine.INSERT(TRUE);
        CurrPage.UPDATE;
      END ELSE
        ERROR(Text000);
    END;

    PROCEDURE SelectStandardObjects@1100528603();
    VAR
      TmpContractConsObjWizardLine@1100528600 : TEMPORARY Record 11071698;
    BEGIN
      IF NOT "Object Line" THEN BEGIN
        IF PAGE.RUNMODAL(PAGE::"Select Standard Objects", TmpContractConsObjWizardLine) = ACTION::LookupOK THEN
          CreateObjectsWithinStructure(TmpContractConsObjWizardLine);
      END ELSE
        ERROR(Text000);
    END;

    PROCEDURE CreateContractForSelObjects@1100528602();
    VAR
      ServiceLocStructureLine@1100525000 : Record 11071720;
    BEGIN
      CurrPage.SETSELECTIONFILTER(ServiceLocStructureLine);
      Rec.CreateContractForSelObjects(ServiceLocStructureLine);
    END;

    LOCAL PROCEDURE LineDescriptionOnFormat@19076134();
    BEGIN
      DescriptionEmphasize := FALSE;
      IF "Object Line" THEN
        DescriptionIndentationValue := Level + 1
      ELSE BEGIN
        DescriptionIndentationValue := Level;
        DescriptionEmphasize := TRUE;
      END;
    END;

    PROCEDURE UpdateEditable@1210190000();
    BEGIN
      NoEditable := NOT "Object Line";
      DescriptionEditable := NOT "Object Line";
    END;

    PROCEDURE ShowConditionScore@1100528604();
    BEGIN
      IF NOT "Object Line" THEN
        ERROR(Text001);
      NEN2767Management.ShowObjectConditionScoreList("Service Object No.", MeasurementDate);
    END;

    PROCEDURE ShowLTMaintPlanTasks@1100528605();
    VAR
      NEN2767Management@1100528600 : Codeunit 11012863;
    BEGIN
      NEN2767Management.ShowLTMaintTaskList("Service Object No.");
    END;

    PROCEDURE ShowObject@1100528607();
    VAR
      ServiceObject@1100528600 : Record 11071691;
    BEGIN
      TESTFIELD("Object Line");
      ServiceObject.GET("Service Object No.");
      PAGE.RUN(PAGE::"Service Object", ServiceObject);
    END;

    PROCEDURE CreateNewLTMPTask@1100528606();
    VAR
      LongTermMaintPlanMgt@1100528600 : Codeunit 11128770;
    BEGIN
      TESTFIELD("Object Line");
      TESTFIELD("Service Object No.");
      LongTermMaintPlanMgt.CreateAndShowNewLTMPTask("Service Object No.");
    END;

    PROCEDURE SetUseForLTMP@1100528608(IUseForLTMP@1100528600 : Boolean);
    BEGIN
      UseForLTMP := IUseForLTMP;
    END;

    BEGIN
    END.
  }
}

