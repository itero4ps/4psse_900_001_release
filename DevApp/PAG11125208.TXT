OBJECT Page 11125208 Service Call
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    Permissions=TableData 36=im,
                TableData 11012823=i,
                TableData 11012824=i,
                TableData 11012826=i;
    CaptionML=ENU=Service Call;
    SourceTable=Table11012822;
    PageType=Document;
    PromotedActionCategoriesML=ENU=New,Process,Report,Texts,Mail Documents;
    OnInit=BEGIN
             FillShowMandatoryVariables;
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
               END;

    OnAfterGetRecord=VAR
                       Source@1100528800 : 'ServiceLocation,ServiceObject';
                     BEGIN
                       IF "Object No." <> '' THEN
                         CurrPage.PurchaseLineServiceObjectFactbox.PAGE.SetSource(Source::ServiceObject, "Object No.")
                       ELSE
                         CurrPage.PurchaseLineServiceObjectFactbox.PAGE.SetSource(Source::ServiceLocation, "Service Location No.");

                       UpdateSignalRulesSF;
                     END;

    OnNewRecord=VAR
                  PlantLocationAddress@1100529301 : Record 11012590;
                BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                  UpdateSignalRulesSF;
                  PlantLocationAddress.SETRANGE(Location,"Plant Location");
                  PlantLocationAddresses := '[' + FORMAT(PlantLocationAddress.COUNT) + ']';
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    OnModifyRecord=BEGIN
                     UpdateSignalRulesSF
                   END;

    OnAfterGetCurrRecord=VAR
                           MaintenanceManagementCU@1100525003 : Codeunit 11012829;
                           CurrServiceContractNo@1100525002 : Code[20];
                           RecRef@1100525001 : RecordRef;
                           ServiceObjectInfoMgt@1100525000 : Codeunit 11012840;
                         BEGIN
                           NextCall := ShowNextCall(0);


                           NumWatch := CheckAvailableWatches;
                           NumContract :=
                             STRSUBSTNO('[%1]', MaintenanceManagementCU.GetNoOfActualContractsForObj("Object No.", TODAY, CurrServiceContractNo));
                           NumDim1 := CheckAvailableDim1;

                           ServiceObjectInfoMgt.GetBuildingInfo("Object No.", BuildingCode, BuildingDescription);

                           RecRef.GETTABLE(Rec);
                           CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
                           CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(TRUE);
                           CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode("Global Dimension 1 Code");
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1210190029;1 ;ActionGroup;
                      CaptionML=ENU=&Service Call }
      { 1210190114;2 ;Action    ;
                      CaptionML=ENU=Co&mments;
                      RunObject=Page 124;
                      RunPageLink=Table Name=CONST(Service Call),
                                  No.=FIELD(No.);
                      Visible=false;
                      Image=ViewComments }
      { 1100485054;2 ;Action    ;
                      CaptionML=ENU=Report &Procedure;
                      Visible=false;
                      Image=Report;
                      OnAction=VAR
                                 TextRec@1100485001 : Record 11012882;
                                 TextPage@1100485000 : Page 11020691;
                               BEGIN
                                 TextRec.SETRANGE("Table Name", TextRec."Table Name"::"Service Location");
                                 TextRec.SETRANGE("No.", "Service Location No.");
                                 TextPage.SETTABLEVIEW(TextRec);
                                 TextPage.EDITABLE(FALSE);
                                 TextPage.RUNMODAL;
                               END;
                                }
      { 1100485055;2 ;Action    ;
                      CaptionML=ENU=Contract &Agreements;
                      Visible=false;
                      Image=ServiceAgreement;
                      OnAction=VAR
                                 TextRec@1100485001 : Record 11012882;
                                 TextPage@1100485000 : Page 11020691;
                               BEGIN
                                 TextRec.SETRANGE("Table Name", TextRec."Table Name"::"Service Contract");
                                 TextRec.SETRANGE("No.", "Service Contract No.");
                                 TextRec.SETRANGE("Table Field", 0);  //db, 27-05-10: M13735
                                 TextPage.SETTABLEVIEW(TextRec);
                                 TextPage.EDITABLE(FALSE);
                                 TextPage.RUNMODAL;
                               END;
                                }
      { 1100525037;2 ;Action    ;
                      CaptionML=ENU=Invoice Agreements;
                      Visible=false;
                      Image=Agreement;
                      OnAction=VAR
                                 TextRec@1100525001 : Record 11012882;
                                 TextPage@1100525000 : Page 11020691;
                               BEGIN
                                 TextRec.SETRANGE("Table Name", TextRec."Table Name"::"Service Contract");
                                 TextRec.SETRANGE("No.", "Service Contract No.");
                                 TextRec.SETRANGE("Table Field", 630);  //db, 27-05-10: M13735
                                 TextPage.SETTABLEVIEW(TextRec);
                                 TextPage.EDITABLE(FALSE);
                                 TextPage.RUNMODAL;
                               END;
                                }
      { 1100485039;2 ;Action    ;
                      CaptionML=ENU=Reference Periods;
                      Promoted=Yes;
                      Image=CalculateWIP;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReferencePeriodsServicePAGE@1100528600 : Page 11020670;
                               BEGIN
                                 ReferencePeriodsServicePAGE.SetServiceCallNo("No.");
                                 ReferencePeriodsServicePAGE.RUN;
                               END;
                                }
      { 1100485065;2 ;Action    ;
                      CaptionML=ENU=Do&cuments;
                      Visible=false;
                      Image=Documents;
                      OnAction=BEGIN
                                 ShowDocuments;  //db, 21-05-10
                               END;
                                }
      { 1100485010;2 ;Action    ;
                      CaptionML=ENU=History Call;
                      Visible=false;
                      Image=History;
                      OnAction=BEGIN
                                 GetHistory(Rec);
                               END;
                                }
      { 1100485031;2 ;Action    ;
                      CaptionML=ENU=Open Service Orders;
                      Visible=false;
                      Image=ViewDocumentLine;
                      OnAction=BEGIN
                                 GetOpenServiceOrder(Rec);
                               END;
                                }
      { 1100525014;2 ;Action    ;
                      CaptionML=ENU=Active &Watches;
                      Image=Union;
                      OnAction=BEGIN
                                 ShowConsignmentRoster;
                               END;
                                }
      { 1100528619;1 ;ActionGroup;
                      CaptionML=ENU=Dispatch }
      { 1100528620;2 ;Action    ;
                      CaptionML=ENU=File Card;
                      Image=Card;
                      OnAction=VAR
                                 DispatchInterface@1100528600 : Codeunit 11071685;
                               BEGIN
                                 DispatchInterface.ShowDispatchFileCardByServiceCall(Rec);
                               END;
                                }
      { 1100528622;2 ;Action    ;
                      CaptionML=ENU=Open File;
                      Image=LinkWeb;
                      OnAction=VAR
                                 DispatchInterface@1100528600 : Codeunit 11071685;
                               BEGIN
                                 DispatchInterface.ShowDispatchFileByServiceCall(Rec);
                               END;
                                }
      { 1100528621;2 ;Action    ;
                      CaptionML=ENU=Open Order;
                      Image=LinkWeb;
                      OnAction=VAR
                                 DispatchInterface@1100528600 : Codeunit 11071685;
                               BEGIN
                                 DispatchInterface.ShowDispatchOrderByServiceCall(Rec);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1210190075;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1100485015;2 ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=ENU=Create &Next Call;
                      Promoted=Yes;
                      Visible=false;
                      Image=CreateDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CopyServCall;  //db, 18-12-09
                               END;
                                }
      { 1210190076;2 ;Action    ;
                      ShortCutKey=Shift+F11;
                      CaptionML=ENU=Create &Service Order;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 OriginalServiceCall@1100528604 : Record 11012822;
                                 ServiceOrder@1100528602 : Record 11012823;
                                 CreateServiceOrderfromCallFRM@1100528601 : Page 11125229;
                                 ReplanServiceOrder@1100528603 : Page 11126465;
                                 NextStep@1100528600 : ' ,Service Order Card,Plan Service Order';
                               BEGIN
                                 IF "Service Order No." <> '' THEN
                                   IF CONFIRM(Text002, FALSE) = FALSE THEN EXIT;

                                 VALIDATE("Next Step", "Next Step"::ServiceOrder);  //db, 07-12-07
                                 IF Status = Status::Cancelled THEN
                                   ERROR(Text003);

                                 OriginalServiceCall := Rec;
                                 CreateServiceOrderfromCallFRM.SetDefaults("No.");
                                 CreateServiceOrderfromCallFRM.RUNMODAL;
                                 CreateServiceOrderfromCallFRM.GetNextStep(NextStep);
                                 OriginalServiceCall.FIND('=');

                                 IF OriginalServiceCall."Service Order No." <> '' THEN BEGIN
                                   COMMIT;
                                   ServiceOrder.GET(OriginalServiceCall."Service Order No.");
                                   ServiceOrder.SETRECFILTER;
                                   CASE NextStep OF
                                     NextStep::"Service Order Card":
                                       ServiceOrder.ShowServiceOrderCard;
                                     NextStep::"Plan Service Order":
                                       BEGIN
                                         ServiceOrder.SETRECFILTER;
                                         ReplanServiceOrder.SetReplanData(ServiceOrder, TODAY, 1, 0, FALSE, FALSE, TRUE, TRUE);
                                         ReplanServiceOrder.RUNMODAL;
                                       END;
                                   END;
                                 END;

                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100485035;2 ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=ENU=Link to open Service Order;
                      Visible=false;
                      Image=Link;
                      OnAction=VAR
                                 CreateServiceOrderfromCallFRM@1210190001 : Page 11125229;
                                 lvServOrder@1100485001 : Code[20];
                               BEGIN
                                 IF "Service Order No." <> '' THEN
                                   IF CONFIRM(Text002, FALSE) = FALSE THEN EXIT;

                                 VALIDATE("Next Step", "Next Step"::ServiceOrder);  //db, 07-12-07
                                 IF Status = Status::Cancelled THEN
                                   ERROR(Text003);

                                 lvServOrder := GetOpenServiceOrder(Rec);
                                 IF lvServOrder <> '' THEN BEGIN
                                   CreateServiceOrderfromCallFRM.SetDefaults("No.");
                                   CreateServiceOrderfromCallFRM.RUNMODAL;

                                   ServCallRec.GET("No.");
                                   IF ServOrderRec.GET(ServCallRec."Service Order No.") THEN BEGIN
                                     ServOrderRec."Previous Service Order No." := lvServOrder;
                                     ServOrderRec.MODIFY(TRUE);
                                   END;
                                 END;
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1210190077;2 ;Action    ;
                      CaptionML=ENU=Create Sales &Quote;
                      Visible=false;
                      Image=Quote;
                      OnAction=BEGIN
                                 IF "Sales Document No." = '' THEN BEGIN
                                   TESTFIELD("Next Step", "Next Step"::SalesQuote);
                                   IF Status = Status::Cancelled THEN
                                     ERROR(Text003);

                                   DocType := DocType::Quote;
                                   InsertSalesHeader(DocType);
                                   CurrPage.UPDATE(TRUE);
                                 END;
                               END;
                                }
      { 1210190078;2 ;Action    ;
                      ShortCutKey=Ctrl+F10;
                      CaptionML=ENU=Create Sales &Order;
                      Visible=false;
                      Image=MakeOrder;
                      OnAction=BEGIN
                                 IF "Sales Document No." = '' THEN BEGIN
                                   TESTFIELD("Next Step", "Next Step"::SalesOrder);
                                   IF Status = Status::Cancelled THEN
                                     ERROR(Text003);

                                   DocType := DocType::Order;
                                   InsertSalesHeader(DocType);
                                   CurrPage.UPDATE(TRUE);
                                 END;
                               END;
                                }
      { 1100485008;2 ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=ENU=Create &Project;
                      Visible=false;
                      Image=Job;
                      OnAction=BEGIN
                                 IF "Project (Dest)" = '' THEN BEGIN
                                   TESTFIELD("Next Step", "Next Step"::Project);
                                   IF Status = Status::Cancelled THEN
                                     ERROR(Text003);

                                   CreateProject;
                                   CurrPage.UPDATE(TRUE);
                                 END;
                               END;
                                }
      { 1100485009;2 ;Action    ;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=ENU=Create &Small Project;
                      Visible=false;
                      Image=Job;
                      OnAction=BEGIN
                                 IF "Project (Dest)" = '' THEN BEGIN
                                   TESTFIELD("Next Step", "Next Step"::SmallProject);
                                   IF Status = Status::Cancelled THEN
                                     ERROR(Text003);

                                   CreateProject;
                                   CurrPage.UPDATE(TRUE);
                                 END;
                               END;
                                }
      { 1100485081;2 ;Action    ;
                      CaptionML=ENU=Print;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 PrintDoc@1100485000 : Codeunit 229;
                               BEGIN
                                 PrintDoc.PrintServCall(Rec);
                               END;
                                }
      { 1210190012;2 ;Action    ;
                      ShortCutKey=Ctrl+K;
                      CaptionML=ENU=Completeness Check;
                      Image=CheckList;
                      OnAction=VAR
                                 CompletionCheckManagement@1210190001 : Codeunit 11012252;
                                 ServiceCallRecordRef@1210190000 : RecordRef;
                               BEGIN
                                 ServiceCallRecordRef.GETTABLE(Rec);
                                 CompletionCheckManagement.ShowIncompleteFields(ServiceCallRecordRef);
                               END;
                                }
      { 1100529300;2 ;Action    ;
                      CaptionML=ENU=Search Plant Location;
                      Promoted=Yes;
                      Image=Find;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF SearchPlantLocation() THEN
                                   CurrPage.UPDATE;
                               END;
                                }
      { 1100528615;2 ;Action    ;
                      CaptionML=ENU=Search Service Location;
                      Promoted=Yes;
                      Image=Find;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF SearchServiceLocation() THEN
                                   CurrPage.UPDATE;
                               END;
                                }
      { 1100528605;2 ;Action    ;
                      CaptionML=ENU=Copy Service Call;
                      Image=Copy;
                      OnAction=VAR
                                 ServiceCall@1100528602 : Record 11012822;
                                 CopyServiceOrderCall@1100528601 : Codeunit 11012851;
                                 ServiceCallNo@1100528600 : Code[20];
                               BEGIN
                                 ServiceCallNo := CopyServiceOrderCall.CopyServiceCall("No.");
                                 COMMIT;
                                 ServiceCall.GET(ServiceCallNo);
                                 ServiceCall.ActivateServCallCard;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210190000;1;Group  ;
                CaptionML=ENU=General }

    { 1210190001;2;Field  ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;

                ShowMandatory=TRUE }

    { 1210190063;2;Field  ;
                SourceExpr="Calling Contact";
                ShowMandatory=CallingContactMandatory }

    { 1210190066;2;Field  ;
                SourceExpr="Calling Account";
                ShowMandatory=CallingAccountMandatory }

    { 1100485006;2;Field  ;
                SourceExpr="Calling Phone No.";
                ShowMandatory=CallingPhoneNoMandatory }

    { 1100528609;2;Field  ;
                SourceExpr=Description;
                ShowMandatory=TRUE }

    { 1100485037;2;Field  ;
                SourceExpr="Service Location No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             ServiceLocationNoOnAfterValida;
                             CurrPage.UPDATE;
                           END;

                OnLookup=BEGIN
                           LookupServiceLocation;
                           CurrPage.UPDATE;
                         END;

                ShowMandatory=TRUE }

    { 1100528625;2;Field  ;
                SourceExpr="Service Location Type";
                Importance=Additional }

    { 1210190005;2;Field  ;
                SourceExpr=Name;
                Importance=Promoted;
                OnValidate=BEGIN
                             NameOnAfterValidate;
                           END;

                ShowMandatory=NameMandatory }

    { 1100528616;2;Field  ;
                SourceExpr="Name 2";
                Importance=Additional;
                ShowMandatory=Name2Mandatory }

    { 1210190007;2;Field  ;
                SourceExpr=Address;
                OnValidate=BEGIN
                             AddressOnAfterValidate;
                           END;

                ShowMandatory=AddressMandatory }

    { 1100528617;2;Field  ;
                SourceExpr="Address 2";
                Importance=Additional;
                ShowMandatory=Address2Mandatory }

    { 1210190040;2;Field  ;
                SourceExpr="Post Code";
                OnValidate=BEGIN
                             PostCodeOnAfterValidate;
                           END;

                ShowMandatory=PostCodeMandatory }

    { 1210190009;2;Field  ;
                SourceExpr=City;
                OnValidate=BEGIN
                             CityOnAfterValidate;
                           END;

                ShowMandatory=CityMandatory }

    { 1100485020;2;Field  ;
                SourceExpr="Territory Code";
                OnValidate=BEGIN
                             TerritoryCodeOnAfterValidate;
                           END;

                ShowMandatory=TerritoryCodeMandatory }

    { 1100525023;2;Field  ;
                SourceExpr="Country/Region Code";
                ShowMandatory=CountryRegionCodeMandatory }

    { 1210190004;2;Field  ;
                SourceExpr="Customer No.";
                Importance=Standard;
                OnValidate=BEGIN
                             CustomerNoOnAfterValidate;
                             CurrPage.UPDATE;
                           END;

                ShowMandatory=CustomerNoMandatory }

    { 1210190106;2;Field  ;
                SourceExpr="Customer Name";
                Importance=Additional }

    { 1210190013;2;Field  ;
                SourceExpr="Contact Name";
                OnLookup=BEGIN
                           ShowContact("Customer No.");
                         END;

                ShowMandatory=ContactNameMandatory }

    { 1100528623;2;Field  ;
                SourceExpr="Room (SUP)";
                Importance=Additional }

    { 1100528626;2;Field  ;
                CaptionML=ENU=Room Description;
                SourceExpr=GetRoomDescription;
                Importance=Additional }

    { 1100528624;2;Field  ;
                SourceExpr="Part (SUP)";
                Importance=Additional }

    { 1100528627;2;Field  ;
                CaptionML=ENU=Part Description;
                SourceExpr=GetPartDescription;
                Importance=Additional }

    { 1210190107;2;Field  ;
                SourceExpr="Object No.";
                OnValidate=BEGIN
                             ObjectNoOnAfterValidate;
                             CurrPage.UPDATE;
                           END;

                OnLookup=VAR
                           ServiceObject@1100528600 : Record 11071691;
                           ContractObject@1100528603 : Record 11071702;
                         BEGIN
                           IF "Service Location No." <> '' THEN BEGIN
                             ServiceObject.SETCURRENTKEY("Service Location No.");
                             ServiceObject.SETRANGE("Service Location No.", "Service Location No.");
                           END;

                           IF "Service Contract No." <> '' THEN BEGIN
                             ContractObject.SETRANGE("Service Contract No.", "Service Contract No.");
                             IF ContractObject.FINDSET THEN
                               REPEAT
                                 IF ServiceObject.GET(ContractObject."Service Object No.") THEN
                                   IF ("Service Location No." = '') OR (ServiceObject."Service Location No." = "Service Location No.") THEN
                                     ServiceObject.MARK(TRUE);
                               UNTIL ContractObject.NEXT = 0;
                             ServiceObject.MARKEDONLY(TRUE);
                           END;

                           IF "Object No." <> '' THEN
                             ServiceObject.GET("Object No.");
                           IF PAGE.RUNMODAL(PAGE::"Service Object List", ServiceObject) = ACTION::LookupOK THEN
                             VALIDATE("Object No.", ServiceObject."No.");
                           CurrPage.UPDATE;
                         END;

                ShowMandatory=ObjectNoMandatory }

    { 1100525026;2;Field  ;
                SourceExpr="Object Description" }

    { 1100528919;2;Field  ;
                SourceExpr="Object Description 2" }

    { 1210190036;2;Field  ;
                SourceExpr="Your Reference";
                ShowMandatory=YourReferenceMandatory }

    { 1100485062;2;Field  ;
                SourceExpr="Order No. Customer";
                OnValidate=BEGIN
                             OrderNoCustomerOnAfterValidate;
                           END;

                ShowMandatory=OrderNoCustomerMandatory }

    { 1100525002;2;Field  ;
                SourceExpr="Call Kind";
                ShowMandatory=CallKindMandatory }

    { 1100525004;2;Field  ;
                SourceExpr="Call Type";
                ShowMandatory=CallTypeMandatory }

    { 1100409002;2;Field  ;
                SourceExpr="Order Kind";
                ShowMandatory=OrderKindMandatory }

    { 1100409003;2;Field  ;
                SourceExpr="Order Type";
                ShowMandatory=OrderTypeMandatory }

    { 1210190017;2;Field  ;
                Lookup=No;
                SourceExpr=Priority;
                OnValidate=BEGIN
                             PriorityOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               AssistEditPriority;  //db, 16-04-07
                               CurrPage.UPDATE;  //db, 12-10-09: M16190
                             END;

                ShowMandatory=PriorityMandatory }

    { 1210190034;2;Field  ;
                SourceExpr=Status;
                Importance=Promoted }

    { 1100485078;2;Field  ;
                CaptionML=ENU=No. of Contracts;
                SourceExpr=NumContract;
                Importance=Additional;
                Editable=FALSE }

    { 1100485060;2;Field  ;
                SourceExpr="Service Contract No.";
                OnValidate=BEGIN
                             ServiceContractNoOnAfterValida;
                             CurrPage.UPDATE;
                           END;

                OnLookup=VAR
                           MaintenanceManagementCU@1100528602 : Codeunit 11012829;
                           ServiceContractNo@1100528603 : Code[20];
                         BEGIN
                           IF "Object No." = '' THEN
                             LookupServiceContract
                           ELSE BEGIN
                             ServiceContractNo := MaintenanceManagementCU.ShowActualContractsForObject("Object No.", "Customer No.", TODAY, TRUE, "Service Contract No.");
                             IF ServiceContractNo <> '' THEN
                               VALIDATE("Service Contract No.", ServiceContractNo);
                           END;
                           CurrPage.UPDATE;
                         END;

                ShowMandatory=ServiceContractNoMandatory }

    { 1100485079;2;Field  ;
                CaptionML=ENU=No. of Dimensions;
                SourceExpr=NumDim1;
                Importance=Additional;
                Editable=FALSE }

    { 1100485057;2;Field  ;
                Lookup=No;
                SourceExpr="Global Dimension 1 Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                               GlobalDimension1CodeOnAfterVal;
                           END;

                OnAssistEdit=BEGIN
                               AssistEditDimension1;  //db, 12-11-07
                               CurrPage.UPDATE;  //db,12-05-09: M14956
                             END;

                ShowMandatory=GlobalDimension1CodeMandatory }

    { 1100525024;2;Field  ;
                SourceExpr="Order Manager" }

    { 1100525022;2;Field  ;
                DrillDown=No;
                SourceExpr="Order Manager Name";
                Importance=Additional;
                Editable=FALSE }

    { 1210190038;2;Field  ;
                SourceExpr="Assigned to";
                OnValidate=BEGIN
                             AssignedtoOnAfterValidate;
                           END;

                ShowMandatory=AssignedtoMandatory }

    { 1210190105;2;Field  ;
                DrillDown=No;
                SourceExpr="Name Assigned to";
                Importance=Additional;
                Editable=FALSE }

    { 1210190019;2;Field  ;
                SourceExpr=Problem;
                ShowMandatory=ProblemMandatory }

    { 1210190021;2;Field  ;
                SourceExpr="Customer Problem";
                Importance=Additional;
                ShowMandatory=CustomerProblemMandatory }

    { 1100525019;2;Field  ;
                CaptionML=ENU=Building Code;
                SourceExpr=BuildingCode;
                Editable=FALSE;
                OnDrillDown=VAR
                              ServiceObject@1100525000 : Record 11071691;
                            BEGIN
                              IF ServiceObject.GET("Object No.") THEN
                                ServiceObject.ShowBuildingRelations;
                            END;
                             }

    { 1100525018;2;Field  ;
                CaptionML=ENU=Building Description;
                SourceExpr=BuildingDescription;
                Importance=Additional;
                Editable=FALSE }

    { 1100525025;2;Field  ;
                SourceExpr="Do not show on Service Portal" }

    { 1100528632;2;Field  ;
                SourceExpr=Origin;
                Importance=Additional }

    { 1100525001;1;Part   ;
                CaptionML=ENU=Problem Text;
                SubPageLink=Table Name=CONST(Service Call),
                            No.=FIELD(No.),
                            Table Field=CONST(60);
                PagePartID=Page11125227;
                PartType=Page }

    { 1100528603;1;Group  ;
                CaptionML=ENU=Invoicing;
                GroupType=Group }

    { 1100528604;2;Field  ;
                SourceExpr="Bill-to Customer No.";
                ShowMandatory=BilltoCustomerNoMandatory }

    { 1100528606;2;Field  ;
                SourceExpr="Alternative Bill-to Address";
                ShowMandatory=AlternativeBilltoAddressMandatory }

    { 1100528608;2;Field  ;
                SourceExpr="Bill-to Name";
                ShowMandatory=BilltoNameMandatory }

    { 1100528610;2;Field  ;
                SourceExpr="Bill-to Name 2";
                ShowMandatory=BilltoName2Mandatory }

    { 1100528611;2;Field  ;
                SourceExpr="Bill-to Address";
                ShowMandatory=BilltoAddressMandatory }

    { 1100528612;2;Field  ;
                SourceExpr="Bill-to Address 2";
                ShowMandatory=BilltoAddress2Mandatory }

    { 1100528613;2;Field  ;
                SourceExpr="Bill-to Post Code";
                ShowMandatory=BilltoPostCodeMandatory }

    { 1100528614;2;Field  ;
                SourceExpr="Bill-to City";
                ShowMandatory=BilltoCityMandatory }

    { 1100528628;2;Field  ;
                SourceExpr="Master Project" }

    { 1100528629;2;Field  ;
                SourceExpr="Master Element" }

    { 1902768601;1;Group  ;
                CaptionML=ENU=Communication }

    { 1100526200;2;Field  ;
                SourceExpr="Phone No.";
                Importance=Promoted;
                ShowMandatory=PhoneNoMandatory }

    { 1100528618;2;Field  ;
                SourceExpr="Phone No. 2";
                ShowMandatory=PhoneNo2Mandatory }

    { 1210190025;2;Field  ;
                SourceExpr="Mobile Phone No.";
                ShowMandatory=MobilePhoneNoMandatory }

    { 1210190097;2;Field  ;
                SourceExpr="E-Mail";
                Importance=Promoted;
                ShowMandatory=EMailMandatory }

    { 1100528601;2;Field  ;
                SourceExpr="Fax No.";
                ShowMandatory=FaxNoMandatory }

    { 1100525008;1;Group  ;
                CaptionML=ENU=Agreements;
                GroupType=Group }

    { 1100525010;2;Field  ;
                SourceExpr="Limit Budget Hours";
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;

                ShowMandatory=LimitBudgetHoursMandatory }

    { 1100525009;2;Field  ;
                SourceExpr="Limit Budget Labor";
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;

                ShowMandatory=LimitBudgetLaborMandatory }

    { 1100525011;2;Field  ;
                SourceExpr="Limit Budget Material";
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;

                ShowMandatory=LimitBudgetMaterialMandatory }

    { 1100525013;2;Field  ;
                SourceExpr="Limit Budget Total";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;

                ShowMandatory=LimitBudgetTotalMandatory }

    { 1100528631;2;Field  ;
                SourceExpr="Limit Budget Exceedance" }

    { 1901343701;1;Group  ;
                CaptionML=ENU=Planning }

    { 1100525012;2;Field  ;
                SourceExpr="Planning Agreement Code";
                Importance=Standard;
                ShowMandatory=PlanningAgreementCodeMandatory }

    { 1210190130;2;Field  ;
                SourceExpr="Expected Date";
                Importance=Promoted;
                ShowMandatory=ExpectedDateMandatory }

    { 1210190131;2;Field  ;
                SourceExpr="Expected Time";
                Importance=Standard;
                ShowMandatory=ExpectedTimeMandatory }

    { 1210190132;2;Field  ;
                SourceExpr="Expected Hours";
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;

                ShowMandatory=ExpectedHoursMandatory }

    { 1100528602;2;Field  ;
                SourceExpr="Firm Planned" }

    { 1100485052;2;Field  ;
                SourceExpr="Preferred Employee No.";
                ShowMandatory=PreferredEmployeeNoMandatory }

    { 1100485051;2;Field  ;
                DrillDown=No;
                SourceExpr="Preferred Employee Name";
                Importance=Additional;
                Editable=FALSE }

    { 1210190024;2;Field  ;
                CaptionML=ENU=No. of Watches;
                SourceExpr=NumWatch;
                Importance=Additional;
                Editable=FALSE }

    { 1210190031;2;Field  ;
                Lookup=No;
                SourceExpr=Watch;
                OnAssistEdit=BEGIN
                               AssistEditWatch(TRUE);  //db, 16-04-07
                             END;

                ShowMandatory=WatchMandatory }

    { 1210190032;2;Field  ;
                SourceExpr="Watch Description";
                Importance=Additional;
                Editable=FALSE }

    { 1210190044;2;Field  ;
                SourceExpr="Employee No.";
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;

                ShowMandatory=EmployeeNoMandatory }

    { 1210190045;2;Field  ;
                DrillDown=No;
                SourceExpr="Employee Name";
                Importance=Additional;
                Editable=FALSE }

    { 1100525020;2;Field  ;
                SourceExpr=Subcontractor;
                ShowMandatory=SubcontractorMandatory }

    { 1100525021;2;Field  ;
                DrillDown=No;
                SourceExpr="Subcontractor Name";
                Importance=Additional;
                Editable=FALSE }

    { 1100409000;2;Field  ;
                Lookup=No;
                SourceExpr=Discipline;
                OnValidate=BEGIN
                             UpdateReferenceNorm;
                           END;

                OnAssistEdit=BEGIN
                               AssistEditDiscipline;
                               UpdateReferenceNorm;
                             END;

                ShowMandatory=DisciplineMandatory }

    { 1100409001;2;Field  ;
                Lookup=No;
                SourceExpr="Trade Speciality";
                OnValidate=BEGIN
                             UpdateReferenceNorm;
                           END;

                OnAssistEdit=BEGIN
                               AssistEditTradeSpeciality;
                               UpdateReferenceNorm;
                             END;

                ShowMandatory=TradeSpecialityMandatory }

    { 1210190041;2;Field  ;
                SourceExpr="Plan during Clock Time" }

    { 1210190046;2;Field  ;
                SourceExpr="Export to FSA" }

    { 1100525017;2;Field  ;
                SourceExpr="Decentral Created" }

    { 1100409004;2;Field  ;
                SourceExpr="Publish on Subcontr. Portal" }

    { 1210190122;2;Field  ;
                SourceExpr="Receiving Date";
                Importance=Additional;
                ShowMandatory=ReceivingDateMandatory }

    { 1210190123;2;Field  ;
                Lookup=No;
                SourceExpr="Received by";
                Importance=Additional;
                ShowMandatory=ReceivedbyMandatory }

    { 1210190124;2;Field  ;
                SourceExpr="Modified on";
                Importance=Additional;
                ShowMandatory=ModifiedonMandatory }

    { 1210190126;2;Field  ;
                SourceExpr="Receiving Time";
                Importance=Additional;
                ShowMandatory=ReceivingTimeMandatory }

    { 1210190125;2;Field  ;
                Lookup=No;
                SourceExpr="Modified by";
                Importance=Additional;
                ShowMandatory=ModifiedbyMandatory }

    { 1100528607;2;Field  ;
                SourceExpr="Actual Reference Point";
                OnDrillDown=BEGIN
                              DrillDownActualRefPoint;  //db, 29-09-08
                            END;
                             }

    { 1100525007;2;Field  ;
                SourceExpr="Remote Control" }

    { 1100529308;1;Group  ;
                Name=Plant;
                CaptionML=ENU=Plant;
                GroupType=Group }

    { 1100529305;2;Field  ;
                SourceExpr="Plant Location";
                OnValidate=VAR
                             PlantLocationAddress@1100529900 : Record 11012590;
                           BEGIN
                             PlantLocationAddress.SETRANGE(Location,"Plant Location");
                             PlantLocationAddresses := '[' + FORMAT(PlantLocationAddress.COUNT) + ']';
                           END;

                ShowMandatory=PlantLocationMandatory }

    { 1100528801;2;Field  ;
                SourceExpr="Plant Location Description";
                Importance=Additional }

    { 1100529306;2;Field  ;
                CaptionML=ENU=No. of Alternative Addresses;
                SourceExpr=PlantLocationAddresses;
                Editable=FALSE }

    { 1100529303;2;Field  ;
                SourceExpr="Alternative Plant Loc Address";
                ShowMandatory=AlternativePlantLocAddressMandatory }

    { 1100529304;2;Field  ;
                SourceExpr="Plant Type";
                ShowMandatory=PlantTypeMandatory }

    { 1100529301;2;Field  ;
                SourceExpr="Plant Number";
                ShowMandatory=PlantNumberMandatory }

    { 1100528802;2;Field  ;
                SourceExpr="Plant Type Description";
                Importance=Promoted }

    { 1100528803;2;Field  ;
                SourceExpr="Plant Number Description";
                Importance=Promoted }

    { 1100529302;2;Field  ;
                SourceExpr="Cost Component Plant";
                ShowMandatory=CostComponentPlantMandatory }

    { 1100525006;0;Container;
                ContainerType=FactBoxArea }

    { 1100529900;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                PartType=Page }

    { 1100525005;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page11130485;
                PartType=Page }

    { 1100525003;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page11130489;
                PartType=Page }

    { 1100528600;1;Part   ;
                Name=CallIntakeSignalsSF;
                CaptionML=ENU=Signals;
                PagePartID=Page11126442;
                PartType=Page }

    { 1100525000;1;Part   ;
                Name=ServiceOrderFlowSF;
                CaptionML=ENU=Service Order Structure;
                SubPageLink=Call No.=FIELD(No.);
                PagePartID=Page11125263;
                PartType=Page }

    { 1100528800;1;Part   ;
                Name=PurchaseLineServiceObjectFactbox;
                SubPageLink=Service Location No.=FIELD(Service Location No.),
                            Service Object No.=FIELD(Object No.);
                PagePartID=Page11229357;
                PartType=Page }

    { 1100528900;1;Part   ;
                Name=ServiceOrderPlant;
                SubPageLink=Plant Type=FIELD(Plant Type),
                            Plant Number=FIELD(Plant Number);
                PagePartID=Page11229360;
                PartType=Page }

    { 1100528630;1;Part   ;
                CaptionML=ENU=Limit Budget Exceedance;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page11126753;
                PartType=Page }

    { 1100525016;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1100525015;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ServOrderRec@1100485003 : Record 11012823;
      ServCallRec@1100485004 : Record 11012822;
      EmplRec@1100485002 : Record 5200;
      DocType@1210190006 : 'Quote,Order';
      NextCall@1100485000 : Code[20];
      Text002@1100485005 : TextConst 'ENU=Call already transfered to Service Order. Continue ?';
      Text003@1100485006 : TextConst 'ENU=Call has been cancelled';
      BuildingCode@1100525001 : Code[20];
      NumWatch@1100485010 : Text[30];
      NumSubc@1100485011 : Text[30];
      NumContract@1100485012 : Text[30];
      NumDim1@1100485013 : Text[30];
      BuildingDescription@1100525000 : Text[30];
      PlantLocationAddresses@1100529300 : Text[30];
      DPA_IsHardFilter@1100525002 : Boolean;
      CallingContactMandatory@1100528400 : Boolean;
      CallingAccountMandatory@1100528401 : Boolean;
      CallingPhoneNoMandatory@1100528402 : Boolean;
      NameMandatory@1100528403 : Boolean;
      Name2Mandatory@1100528404 : Boolean;
      AddressMandatory@1100528405 : Boolean;
      Address2Mandatory@1100528406 : Boolean;
      PostCodeMandatory@1100528407 : Boolean;
      CityMandatory@1100528408 : Boolean;
      TerritoryCodeMandatory@1100528409 : Boolean;
      CountryRegionCodeMandatory@1100528410 : Boolean;
      CustomerNoMandatory@1100528411 : Boolean;
      ContactNameMandatory@1100528412 : Boolean;
      ObjectNoMandatory@1100528413 : Boolean;
      YourReferenceMandatory@1100528414 : Boolean;
      OrderNoCustomerMandatory@1100528415 : Boolean;
      CallKindMandatory@1100528416 : Boolean;
      CallTypeMandatory@1100528417 : Boolean;
      OrderKindMandatory@1100528418 : Boolean;
      OrderTypeMandatory@1100528419 : Boolean;
      PriorityMandatory@1100528420 : Boolean;
      ServiceContractNoMandatory@1100528421 : Boolean;
      GlobalDimension1CodeMandatory@1100528422 : Boolean;
      AssignedtoMandatory@1100528423 : Boolean;
      ProblemMandatory@1100528424 : Boolean;
      CustomerProblemMandatory@1100528425 : Boolean;
      BilltoCustomerNoMandatory@1100528426 : Boolean;
      AlternativeBilltoAddressMandatory@1100528427 : Boolean;
      BilltoNameMandatory@1100528428 : Boolean;
      BilltoName2Mandatory@1100528429 : Boolean;
      BilltoAddressMandatory@1100528430 : Boolean;
      BilltoAddress2Mandatory@1100528431 : Boolean;
      BilltoPostCodeMandatory@1100528432 : Boolean;
      BilltoCityMandatory@1100528433 : Boolean;
      PhoneNoMandatory@1100528434 : Boolean;
      PhoneNo2Mandatory@1100528435 : Boolean;
      MobilePhoneNoMandatory@1100528436 : Boolean;
      EMailMandatory@1100528437 : Boolean;
      FaxNoMandatory@1100528438 : Boolean;
      LimitBudgetHoursMandatory@1100528439 : Boolean;
      LimitBudgetLaborMandatory@1100528440 : Boolean;
      LimitBudgetMaterialMandatory@1100528441 : Boolean;
      LimitBudgetTotalMandatory@1100528442 : Boolean;
      PlanningAgreementCodeMandatory@1100528443 : Boolean;
      ExpectedDateMandatory@1100528444 : Boolean;
      ExpectedTimeMandatory@1100528445 : Boolean;
      ExpectedHoursMandatory@1100528446 : Boolean;
      PreferredEmployeeNoMandatory@1100528447 : Boolean;
      WatchMandatory@1100528448 : Boolean;
      EmployeeNoMandatory@1100528449 : Boolean;
      SubcontractorMandatory@1100528450 : Boolean;
      DisciplineMandatory@1100528451 : Boolean;
      TradeSpecialityMandatory@1100528452 : Boolean;
      ReceivingDateMandatory@1100528453 : Boolean;
      ReceivedbyMandatory@1100528454 : Boolean;
      ModifiedonMandatory@1100528455 : Boolean;
      ReceivingTimeMandatory@1100528456 : Boolean;
      ModifiedbyMandatory@1100528457 : Boolean;
      PlantLocationMandatory@1100528458 : Boolean;
      AlternativePlantLocAddressMandatory@1100528459 : Boolean;
      PlantTypeMandatory@1100528460 : Boolean;
      PlantNumberMandatory@1100528461 : Boolean;
      CostComponentPlantMandatory@1100528462 : Boolean;

    PROCEDURE GetHistory@1100485001(VAR ServCallRec@1100485000 : Record 11012822);
    VAR
      ServCallRec2@1100485001 : Record 11012822;
    BEGIN
      WITH ServCallRec DO BEGIN
        RESET;
        IF "Service Location No." <> '' THEN BEGIN
          ServCallRec2.SETCURRENTKEY("Service Location No.");
          ServCallRec2.SETRANGE("Service Location No.", "Service Location No.");
        END;
        IF PAGE.RUNMODAL(PAGE::"Service Call List", ServCallRec2) = ACTION::LookupOK THEN
          ServCallRec:= ServCallRec2;
      END;
    END;

    PROCEDURE GetOpenServiceOrder@1100485002(VAR ServCallRec@1100485000 : Record 11012822) : Code[20];
    VAR
      ServOrderRec@1100485001 : Record 11012823;
    BEGIN
      WITH ServCallRec DO BEGIN
        RESET;
        IF "Customer No." <> '' THEN
          ServOrderRec.SETRANGE("Customer No.", "Customer No.");
        IF "Service Contract No." <> '' THEN
          ServOrderRec.SETRANGE("Service Contract No.", "Service Contract No.");
        IF "Service Location No." <> '' THEN BEGIN
          ServOrderRec.SETCURRENTKEY("Service Location No.");
          ServOrderRec.SETRANGE("Service Location No.", "Service Location No.");
        END;
        IF PAGE.RUNMODAL(PAGE::"Service-Order List", ServOrderRec) = ACTION::LookupOK THEN
          EXIT(ServOrderRec."No.");
      END;

      EXIT('');
    END;

    PROCEDURE UpdateReferenceNorm@1100485003();
    VAR
      RefPeriodRec@1100485000 : Record 11020272;
    BEGIN
      CurrPage.UPDATE;
      RefPeriodRec.UpdateNorm(RefPeriodRec.Type::ServCall, "No.");
      GET("No.");  //db, 06-11-06: previous function updates maintable; avoid SQL-message
      CurrPage.UPDATE;  //db, 06-12-06: refresh flowfields (1e update niet weghalen)
    END;

    LOCAL PROCEDURE ShowConsignmentRoster@1100485005();
    VAR
      Consignment@1100485000 : Record 11012863;
    BEGIN
      IF Consignment.FINDSET(FALSE, FALSE) THEN
        REPEAT
          Consignment.MARK := Consignment.CheckTerritoryAndDepartment("Territory Code", "Global Dimension 1 Code");
        UNTIL Consignment.NEXT = 0;

      Consignment.MARKEDONLY := TRUE;

      PAGE.RUN(PAGE::Consignments, Consignment);
    END;

    PROCEDURE ShowDocuments@1100525000();
    VAR
      RecRef@1100525002 : RecordRef;
      DocumentFilters@1100525003 : Codeunit 11012432;
    BEGIN
      RecRef.GETTABLE(Rec);
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, "Global Dimension 1 Code", FALSE, TRUE);
    END;

    PROCEDURE StartServCalls@1100525001(lvAction@1100485000 : Integer;lvCount@1100485001 : Boolean) : Integer;
    VAR
      lvServCallRec@1100485002 : Record 11012822;
      lvServOrderRec@1100525000 : Record 11012823;
    BEGIN
      //db, 21-05-10
      lvServCallRec.SETFILTER("No.", '<>%1', "No.");
      CASE lvAction OF
        0:
          BEGIN
            lvServCallRec.SETCURRENTKEY("Service Contract No.");
            lvServCallRec.SETRANGE("Service Contract No.", "Service Contract No.");
            IF ("Service Contract No." = '') THEN EXIT(0);
          END;
        1:
          BEGIN
            lvServCallRec.SETCURRENTKEY("Service Location No.");
            lvServCallRec.SETRANGE("Service Location No.", "Service Location No.");
            IF ("Service Location No." = '') THEN EXIT(0);
          END;
        2:
          BEGIN
            lvServOrderRec.SETCURRENTKEY("Call No.");
            lvServOrderRec.SETRANGE("Call No.", "No.");
            IF lvCount = FALSE THEN BEGIN
              PAGE.RUNMODAL(0, lvServOrderRec);
              EXIT;
            END ELSE BEGIN
              IF "Service Order No." = '' THEN
                EXIT(0)
              ELSE
                EXIT(lvServOrderRec.COUNT);
            END;
          END;
        3:
          BEGIN
            lvServCallRec.SETCURRENTKEY("Customer No.");
            lvServCallRec.SETRANGE("Customer No.", "Customer No.");
            IF ("Customer No." = '') THEN EXIT(0);
          END;
        4:
          BEGIN
            lvServCallRec.SETCURRENTKEY("Object No.");
            lvServCallRec.SETRANGE("Object No.", "Object No.");
            IF ("Object No." = '') THEN EXIT(0);
          END;
      END;

      IF NOT lvCount = FALSE THEN
        PAGE.RUNMODAL(0, lvServCallRec)
      ELSE
        EXIT(lvServCallRec.COUNT);
    END;

    PROCEDURE GetNoOfServCalls@1100525002(lvAction@1100485001 : Integer) NumServCall : Integer;
    BEGIN
      NumServCall := StartServCalls(lvAction, TRUE);
      EXIT(NumServCall);
    END;

    PROCEDURE GetInfo@1100525003() : Integer;
    VAR
      RecRef@1100525000 : RecordRef;
      DocumentLinkMgt@1100525001 : Codeunit 11012401;
    BEGIN
      RecRef.GETTABLE(Rec);

      EXIT(DocumentLinkMgt.GetInfo(RecRef));
    END;

    LOCAL PROCEDURE PriorityOnAfterValidate@19076862();
    BEGIN
      UpdateReferenceNorm;
    END;

    LOCAL PROCEDURE GlobalDimension1CodeOnAfterVal@19079612();
    BEGIN
      CurrPage.UPDATE;  //db,12-05-09: M14956
    END;

    LOCAL PROCEDURE ServiceLocationNoOnAfterValida@19019562();
    BEGIN
      CALCFIELDS("Service Location Description", "Remote Control");
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ServiceContractNoOnAfterValida@19025091();
    BEGIN
      CALCFIELDS("Service Contract Description");
      UpdateReferenceNorm;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CustomerNoOnAfterValidate@19016267();
    BEGIN
      CALCFIELDS("Customer Name");
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ObjectNoOnAfterValidate@19042349();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE NameOnAfterValidate@19065884();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE AddressOnAfterValidate@19060866();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PostCodeOnAfterValidate@19007075();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE TerritoryCodeOnAfterValidate@19066893();
    BEGIN
      CurrPage.UPDATE;  //db,12-05-09: M14956
    END;

    LOCAL PROCEDURE CityOnAfterValidate@19023525();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OrderNoCustomerOnAfterValidate@19028010();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE AssignedtoOnAfterValidate@19050262();
    BEGIN
      CALCFIELDS("Name Assigned to");
    END;

    PROCEDURE UpdateSignalRulesSF@1100528600();
    VAR
      CallIntakeSignalMgt@1100528600 : Codeunit 11012862;
    BEGIN
      CurrPage.CallIntakeSignalsSF.PAGE.UpdateRulesList(0, "No.", '', '', FALSE);
    END;

    LOCAL PROCEDURE FillShowMandatoryVariables@1100528402();
    BEGIN
      CallingContactMandatory := FieldInCompletionControl(FIELDNO("Calling Contact"));
      CallingAccountMandatory := FieldInCompletionControl(FIELDNO("Calling Account"));
      CallingPhoneNoMandatory := FieldInCompletionControl(FIELDNO("Calling Phone No."));
      NameMandatory := FieldInCompletionControl(FIELDNO(Name));
      Name2Mandatory := FieldInCompletionControl(FIELDNO("Name 2"));
      AddressMandatory := FieldInCompletionControl(FIELDNO(Address));
      Address2Mandatory := FieldInCompletionControl(FIELDNO("Address 2"));
      PostCodeMandatory := FieldInCompletionControl(FIELDNO("Post Code"));
      CityMandatory := FieldInCompletionControl(FIELDNO(City));
      TerritoryCodeMandatory := FieldInCompletionControl(FIELDNO("Territory Code"));
      CountryRegionCodeMandatory := FieldInCompletionControl(FIELDNO("Country/Region Code"));
      CustomerNoMandatory := FieldInCompletionControl(FIELDNO("Customer No."));
      ContactNameMandatory := FieldInCompletionControl(FIELDNO("Contact Name"));
      ObjectNoMandatory := FieldInCompletionControl(FIELDNO("Object No."));
      YourReferenceMandatory := FieldInCompletionControl(FIELDNO("Your Reference"));
      OrderNoCustomerMandatory := FieldInCompletionControl(FIELDNO("Order No. Customer"));
      CallKindMandatory := FieldInCompletionControl(FIELDNO("Call Kind"));
      CallTypeMandatory := FieldInCompletionControl(FIELDNO("Call Type"));
      OrderKindMandatory := FieldInCompletionControl(FIELDNO("Order Kind"));
      OrderTypeMandatory := FieldInCompletionControl(FIELDNO("Order Type"));
      PriorityMandatory := FieldInCompletionControl(FIELDNO(Priority));
      ServiceContractNoMandatory := FieldInCompletionControl(FIELDNO("Service Contract No."));
      GlobalDimension1CodeMandatory := FieldInCompletionControl(FIELDNO("Global Dimension 1 Code"));
      AssignedtoMandatory := FieldInCompletionControl(FIELDNO("Assigned to"));
      ProblemMandatory := FieldInCompletionControl(FIELDNO(Problem));
      CustomerProblemMandatory := FieldInCompletionControl(FIELDNO("Customer Problem"));
      BilltoCustomerNoMandatory := FieldInCompletionControl(FIELDNO("Bill-to Customer No."));
      AlternativeBilltoAddressMandatory := FieldInCompletionControl(FIELDNO("Alternative Bill-to Address"));
      BilltoNameMandatory := FieldInCompletionControl(FIELDNO("Bill-to Name"));
      BilltoName2Mandatory := FieldInCompletionControl(FIELDNO("Bill-to Name 2"));
      BilltoAddressMandatory := FieldInCompletionControl(FIELDNO("Bill-to Address"));
      BilltoAddress2Mandatory := FieldInCompletionControl(FIELDNO("Bill-to Address 2"));
      BilltoPostCodeMandatory := FieldInCompletionControl(FIELDNO("Bill-to Post Code"));
      BilltoCityMandatory := FieldInCompletionControl(FIELDNO("Bill-to City"));
      PhoneNoMandatory := FieldInCompletionControl(FIELDNO("Phone No."));
      PhoneNo2Mandatory := FieldInCompletionControl(FIELDNO("Phone No. 2"));
      MobilePhoneNoMandatory := FieldInCompletionControl(FIELDNO("Mobile Phone No."));
      EMailMandatory := FieldInCompletionControl(FIELDNO("E-Mail"));
      FaxNoMandatory := FieldInCompletionControl(FIELDNO("Fax No."));
      LimitBudgetHoursMandatory := FieldInCompletionControl(FIELDNO("Limit Budget Hours"));
      LimitBudgetLaborMandatory := FieldInCompletionControl(FIELDNO("Limit Budget Labor"));
      LimitBudgetMaterialMandatory := FieldInCompletionControl(FIELDNO("Limit Budget Material"));
      LimitBudgetTotalMandatory := FieldInCompletionControl(FIELDNO("Limit Budget Total"));
      PlanningAgreementCodeMandatory := FieldInCompletionControl(FIELDNO("Planning Agreement Code"));
      ExpectedDateMandatory := FieldInCompletionControl(FIELDNO("Expected Date"));
      ExpectedTimeMandatory := FieldInCompletionControl(FIELDNO("Expected Time"));
      ExpectedHoursMandatory := FieldInCompletionControl(FIELDNO("Expected Hours"));
      PreferredEmployeeNoMandatory := FieldInCompletionControl(FIELDNO("Preferred Employee No."));
      WatchMandatory := FieldInCompletionControl(FIELDNO(Watch));
      EmployeeNoMandatory := FieldInCompletionControl(FIELDNO("Employee No."));
      SubcontractorMandatory := FieldInCompletionControl(FIELDNO(Subcontractor));
      DisciplineMandatory := FieldInCompletionControl(FIELDNO(Discipline));
      TradeSpecialityMandatory := FieldInCompletionControl(FIELDNO("Trade Speciality"));
      ReceivingDateMandatory := FieldInCompletionControl(FIELDNO("Receiving Date"));
      ReceivedbyMandatory := FieldInCompletionControl(FIELDNO("Received by"));
      ModifiedonMandatory := FieldInCompletionControl(FIELDNO("Modified on"));
      ReceivingTimeMandatory := FieldInCompletionControl(FIELDNO("Receiving Time"));
      ModifiedbyMandatory := FieldInCompletionControl(FIELDNO("Modified by"));
      PlantLocationMandatory := FieldInCompletionControl(FIELDNO("Plant Location"));
      AlternativePlantLocAddressMandatory := FieldInCompletionControl(FIELDNO("Alternative Plant Loc Address"));
      PlantTypeMandatory := FieldInCompletionControl(FIELDNO("Plant Type"));
      PlantNumberMandatory := FieldInCompletionControl(FIELDNO("Plant Number"));
      CostComponentPlantMandatory := FieldInCompletionControl(FIELDNO("Cost Component Plant"));
    END;

    LOCAL PROCEDURE FieldInCompletionControl@1100528400(FieldNo@1100528400 : Integer) : Boolean;
    VAR
      ExtendedFieldProperty@1100528402 : Record 11020567;
      TableNo@1100528401 : Integer;
    BEGIN
      TableNo := DATABASE::"Service Call";
      EXIT(ExtendedFieldProperty.FieldInCompletionControl(TableNo, FieldNo));
    END;

    BEGIN
    END.
  }
}

