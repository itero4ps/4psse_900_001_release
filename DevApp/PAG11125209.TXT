OBJECT Page 11125209 Service Order (General)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Service Order (General);
    SourceTable=Table11012823;
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=ENU=New,Process,Report,Order,Texts,Mail Documents,FLS VisiTour;
    OnInit=BEGIN
             UnitPriceCodeEditable := TRUE;
             UnitPriceIndexDateEditable := TRUE;
             "Unit Price StatusEditable" := TRUE;
             CreditLimitButtonVisible := TRUE;
             UnitPriceSetEditable := TRUE;
             FillShowMandatoryVariables;
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 ServSetup.GET;
                 IF NOT UserSetup.GET(USERID) THEN UserSetup.INIT;
                 ActivationCostVisible := (ServSetup."Activation Cost" <> ServSetup."Activation Cost"::No);
                 FLSButtonsVisible:= ServSetup."FLS VisiTour Active";
               END;

    OnAfterGetRecord=VAR
                       Source@1100528800 : 'ServiceLocation,ServiceObject,ServiceOrder';
                     BEGIN
                       CurrPage.PurchaseLineServiceObjectFactbox.PAGE.SetSource(Source::ServiceOrder, "No.");

                       IF TryOutRelationRec.READPERMISSION THEN BEGIN
                         TryOutRelation := TryOutRelationRec.GetTryOut('', '', '', '', "No.", '', '', 1);
                         TryOutQuoteRelation := TryOutRelationRec.GetTryOut('', '', '', '', "No.", '', '', 2);
                       END;

                       GetInfo;
                       CALCFIELDS("Actual Reference Point Desc", "Open (Purchase)", "Received/Not Invoiced",
                         "Open Ovh. Surch. Firm (Purch.)", "Open Ovh. Surch. (Hours)", "Open Ovh. Surch. (Inventory)",
                         "Contact No.");

                       CurrPage.ServiceOrderFlowFB.PAGE.SetCurrServiceOrderNo("No.");

                       ServiceOrderExtension.GetServOrderExtension("No.");

                       GetMeterReading(MeterReading,MeterReadingType,MeterReadingUnitOfMeasure);

                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02

                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    OnModifyRecord=BEGIN
                     IF SkipCheckBlockedByFSA THEN
                       SkipCheckBlockedByFSA := FALSE
                     ELSE BEGIN
                       IF CheckBlockedByFSA() THEN
                         ERROR(Text002);
                     END;
                     UpdateSignalRulesSF;
                   END;

    OnDeleteRecord=BEGIN
                     IF CheckBlockedByFSA() THEN
                       ERROR(Text002);
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 138     ;1   ;ActionGroup;
                      CaptionML=ENU=Service &Order }
      { 1100525018;2 ;Action    ;
                      ShortCutKey=Ctrl+S;
                      CaptionML=ENU=Base Service Order;
                      RunObject=Page 11126291;
                      RunPageView=SORTING(No.);
                      RunPageLink=No.=FIELD(Base Service Order No.);
                      Image=ServiceOrderSetup }
      { 1100529000;2 ;Action    ;
                      CaptionML=ENU=Work Orders (Employees);
                      Image=HRSetup;
                      OnAction=VAR
                                 ServiceOrderInfoMgt@1100529000 : Codeunit 11012841;
                               BEGIN
                                 ServiceOrderInfoMgt.ShowSOWorkOrders("No.");
                               END;
                                }
      { 1100528712;2 ;ActionGroup;
                      CaptionML=ENU=Service Tables;
                      Image=MaintenanceLedger }
      { 1100525298;3 ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=&Dimensions;
                      RunObject=Page 540;
                      RunPageLink=Table ID=CONST(11012823),
                                  No.=FIELD(No.);
                      Image=Dimensions }
      { 1210190093;3 ;Action    ;
                      CaptionML=ENU=Responsible &Persons;
                      RunObject=Page 11012858;
                      RunPageLink=Service Order No.=FIELD(No.);
                      Image=Users }
      { 1100525006;3 ;Action    ;
                      Name=Preference Locations;
                      CaptionML=ENU=Preference &Locations;
                      RunObject=Page 11072043;
                      RunPageView=SORTING(Priority);
                      RunPageLink=Type=CONST(Service Order),
                                  No.=FIELD(No.);
                      Visible=false;
                      Image=Company }
      { 1100525307;3 ;Action    ;
                      CaptionML=ENU=Service Order Locations;
                      RunObject=Page 11125140;
                      RunPageLink=Service Order No.=FIELD(No.);
                      Visible=false;
                      Image=ServiceZones }
      { 1100485107;3 ;Action    ;
                      CaptionML=ENU=Reference Periods;
                      Promoted=Yes;
                      Image=CalculatePlan;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReferencePeriodsServiceFRM@1100528600 : Page 11020670;
                               BEGIN
                                 ReferencePeriodsServiceFRM.SetServiceOrderNo("No.");
                                 ReferencePeriodsServiceFRM.RUN;
                               END;
                                }
      { 1100485135;3 ;Action    ;
                      CaptionML=ENU=Reference Points;
                      Promoted=Yes;
                      Image=EntriesList;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 DocumentReferencePointsFRM@1100528600 : Page 11020345;
                               BEGIN
                                 DocumentReferencePointsFRM.SetServiceOrderNo("No.");
                                 DocumentReferencePointsFRM.RUN;
                               END;
                                }
      { 1100409006;3 ;Action    ;
                      CaptionML=ENU=Plant Locations;
                      Image=SKU;
                      OnAction=VAR
                                 TmpLinkedPlantLoc@1100409000 : TEMPORARY Record 11012657;
                               BEGIN
                                 TESTFIELD("No.");
                                 TmpLinkedPlantLoc.SETRANGE("Link Type", TmpLinkedPlantLoc."Link Type"::"Service Order");
                                 TmpLinkedPlantLoc."Link Type" := TmpLinkedPlantLoc."Link Type"::"Service Order";
                                 TmpLinkedPlantLoc."Service Order No." := "No.";
                                 PAGE.RUNMODAL(PAGE::"Linked Plant Location List", TmpLinkedPlantLoc);
                               END;
                                }
      { 1100525524;3 ;Action    ;
                      CaptionML=ENU=Extra Cost;
                      RunObject=Page 11125104;
                      RunPageLink=Entity Type=CONST(Service Order),
                                  Entity Code=FIELD(No.);
                      Image=ChangePaymentTolerance }
      { 1100525036;3 ;Action    ;
                      CaptionML=ENU=Service Order Locations;
                      RunObject=Page 11125140;
                      RunPageLink=Service Order No.=FIELD(No.);
                      Image=Addresses }
      { 1100409023;3 ;Action    ;
                      CaptionML=ENU=Preferred Locations;
                      RunObject=Page 11072043;
                      RunPageView=SORTING(Priority);
                      RunPageLink=Type=CONST(Service Order),
                                  No.=FIELD(No.);
                      Image=Company }
      { 1210190032;2 ;Action    ;
                      CaptionML=ENU=Source E-Mail;
                      Image=MailSetup;
                      OnAction=VAR
                                 ServiceSourceEMail@1210190000 : Record 11071711;
                               BEGIN
                                 ServiceSourceEMail.ShowSOServiceSourceEmail("No."); //mg, 09-01-12: M32065
                               END;
                                }
      { 1100485072;2 ;Action    ;
                      CaptionML=ENU=Log&book;
                      RunObject=Page 11020471;
                      RunPageLink=Document No.=FIELD(No.),
                                  Document Type=CONST(ServOrder);
                      Image=Timesheet }
      { 1100525299;2 ;Action    ;
                      CaptionML=ENU=Signature;
                      RunObject=Page 11125109;
                      RunPageLink=Service Order No.=FIELD(No.);
                      Image=Signature }
      { 1210190013;2 ;Action    ;
                      CaptionML=ENU=Debrief Specifications;
                      Promoted=Yes;
                      Image=Allocations;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowObjectSpecificationLines;
                               END;
                                }
      { 1100528642;2 ;Action    ;
                      CaptionML=ENU=Location Contact Debrief;
                      RunObject=Page 11229430;
                      RunPageLink=Service Order No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Allocations;
                      PromotedCategory=Process }
      { 1210190150;2 ;Action    ;
                      CaptionML=ENU=Purchase Orders;
                      Image=Document;
                      OnAction=BEGIN
                                 ShowPurchaseOrdersForServiceOrder;
                               END;
                                }
      { 1100409005;2 ;Action    ;
                      CaptionML=ENU=Do&cuments;
                      Promoted=Yes;
                      Image=Documents;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowDocuments;
                               END;
                                }
      { 4       ;2   ;Action    ;
                      CaptionML=ENU=Create Customer;
                      Promoted=Yes;
                      Image=Customer;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 SEUtils@1000 : Codeunit 11128000;
                               BEGIN
                                 //Itero150416
                                 VALIDATE("Customer No.",SEUtils.CreateCustomer(Rec));
                               END;
                                }
      { 1100525017;1 ;ActionGroup;
                      CaptionML=ENU=Finance }
      { 1100528694;2 ;Action    ;
                      CaptionML=ENU=Surcharges;
                      RunObject=Page 11125219;
                      RunPageView=WHERE(Type=CONST(Service Order));
                      RunPageLink=Code=FIELD(No.);
                      Image=InsertStartingFee }
      { 1210190031;2 ;Action    ;
                      ShortCutKey=Ctrl+B;
                      CaptionML=ENU=Budget;
                      RunObject=Page 11125247;
                      RunPageLink=Service Order No.=FIELD(No.);
                      Image=LedgerBudget }
      { 1100528693;2 ;Action    ;
                      CaptionML=ENU=Finance;
                      RunObject=Page 11126098;
                      RunPageLink=No.=FIELD(No.);
                      Promoted=Yes;
                      Image=ValueLedger;
                      PromotedCategory=Process }
      { 155     ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=SM Ledger Entry;
                      RunObject=Page 11012826;
                      RunPageView=SORTING(Service Order No.);
                      RunPageLink=Service Order No.=FIELD(No.);
                      Image=GLRegisters }
      { 1210190000;2 ;Action    ;
                      CaptionML=ENU=Invoices;
                      Image=Invoice;
                      OnAction=BEGIN
                                 ShowInvoice(FALSE);
                               END;
                                }
      { 1210190038;2 ;Action    ;
                      CaptionML=ENU=Credit Memos;
                      Image=CreditMemo;
                      OnAction=BEGIN
                                 ShowInvoice(TRUE);
                               END;
                                }
      { 6       ;2   ;Action    ;
                      CaptionML=ENU=Credit Memos, not posted;
                      Image=CreditMemo;
                      OnAction=VAR
                                 SalesLine@1100285000 : Record 37;
                                 SalesHeader@1100285001 : Record 36;
                               BEGIN
                                 //150601 ITERO.SB Show not posted credit memos
                                 SalesLine.SETCURRENTKEY("Service Order No.");
                                 SalesLine.SETRANGE("Service Order No.","No.");
                                 SalesLine.SETRANGE("Document Type",SalesLine."Document Type"::"Credit Memo");
                                 IF SalesLine.FINDSET THEN
                                   REPEAT
                                     IF SalesHeader.GET(SalesLine."Document Type",SalesLine."Document No.") THEN
                                       SalesHeader.MARK(TRUE);
                                   UNTIL SalesLine.NEXT = 0;

                                 SalesHeader.MARKEDONLY(TRUE);
                                 //>> 151230 ITERO.SB Run correct page
                                 PAGE.RUNMODAL(PAGE::"Sales Credit Memos",SalesHeader);
                                 //<<
                               END;
                                }
      { 5       ;2   ;Action    ;
                      CaptionML=ENU=Invoices;
                      Image=Invoice;
                      OnAction=VAR
                                 SalesLine@1100285000 : Record 37;
                                 SalesHeader@1100285001 : Record 36;
                               BEGIN
                                 //150601 ITERO.SB Show not posted invoices
                                 SalesLine.SETCURRENTKEY("Service Order No.");
                                 SalesLine.SETRANGE("Service Order No.","No.");
                                 SalesLine.SETRANGE("Document Type",SalesLine."Document Type"::Invoice);
                                 IF SalesLine.FINDSET THEN
                                   REPEAT
                                     IF SalesHeader.GET(SalesLine."Document Type",SalesLine."Document No.") THEN
                                       SalesHeader.MARK(TRUE);
                                   UNTIL SalesLine.NEXT = 0;

                                 SalesHeader.MARKEDONLY(TRUE);
                                 //>> 151230 ITERO.SB Run correct page
                                 PAGE.RUNMODAL(PAGE::"Sales Invoice List",SalesHeader);
                                 //<<
                               END;
                                }
      { 1100285501;2 ;Action    ;
                      Name=<Action1100285000>;
                      CaptionML=ENU=ROT Reduction;
                      Promoted=Yes;
                      Image=AmountByPeriod;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ROTInformation@1100285000 : Record 11128101;
                                 ROTInformationPage@1100285001 : Page 11128101;
                               BEGIN
                                 // Check if there is any ROT related to the current record
                                 ROTInformation.RESET();
                                 ROTInformation.SETRANGE(Type, ROTInformation.Type::"Service Order");
                                 ROTInformation.SETRANGE("Document No.", "No.");

                                 // Set the page view and open ROT Information page.
                                 ROTInformationPage.HideProjPrincipal();
                                 ROTInformationPage.SETTABLEVIEW(ROTInformation);
                                 ROTInformationPage.RUN;
                               END;
                                }
      { 1100528614;1 ;ActionGroup;
                      CaptionML=ENU=Unit Prices }
      { 1100528685;2 ;Action    ;
                      CaptionML=ENU=Unit Prices;
                      Image=CostCenter;
                      OnAction=VAR
                                 ServiceUnitPriceManagement@1100528600 : Codeunit 11012846;
                               BEGIN
                                 ServiceUnitPriceManagement.ShowSUPRecordingLines(Rec);
                               END;
                                }
      { 1100528691;2 ;Action    ;
                      CaptionML=ENU=Production Recording;
                      Image=GeneralPostingSetup;
                      OnAction=VAR
                                 ServiceUnitPriceManagement@1100528600 : Codeunit 11012846;
                               BEGIN
                                 ServiceUnitPriceManagement.ShowSUPProductionList("No.");
                               END;
                                }
      { 1100409000;1 ;ActionGroup;
                      CaptionML=ENU=QA }
      { 1100409017;2 ;Action    ;
                      CaptionML=ENU=Deviations;
                      RunObject=Page 11125987;
                      RunPageLink=Source Type=CONST(Service Order),
                                  Source No.=FIELD(No.);
                      Image=CalculateDepreciation }
      { 1100409003;2 ;Action    ;
                      CaptionML=ENU=Accidents;
                      RunObject=Page 11126006;
                      RunPageLink=Source Type=CONST(ServiceOrder),
                                  Source No.=FIELD(No.);
                      Image=Alerts }
      { 1100525016;1 ;ActionGroup;
                      CaptionML=ENU=Navigate }
      { 1210190009;2 ;Action    ;
                      CaptionML=ENU=Objects;
                      RunObject=Page 11125210;
                      RunPageView=SORTING(Service Order No.,Object No.,Maintenance Scheme);
                      RunPageLink=Service Order No.=FIELD(No.);
                      Promoted=Yes;
                      Image=WorkCenterLoad;
                      PromotedCategory=Category4 }
      { 1210190008;2 ;Action    ;
                      CaptionML=ENU=Advice Orders;
                      RunObject=Page 11126281;
                      RunPageView=SORTING(Record Type,Project No.,Service Order No.,Line No.);
                      RunPageLink=Record Type=CONST(ServOrder),
                                  Service Order No.=FIELD(No.);
                      Promoted=Yes;
                      Image=OrderTracking;
                      PromotedCategory=Category4 }
      { 1210190011;2 ;Action    ;
                      CaptionML=ENU=Cost Plus Entries;
                      RunObject=Page 11126280;
                      RunPageLink=Service Order No.=FIELD(No.);
                      Promoted=Yes;
                      Image=AdjustEntries;
                      PromotedCategory=Category4 }
      { 1100528850;2 ;Action    ;
                      CaptionML=ENU=Maintenance Scheme (Plant);
                      Promoted=Yes;
                      Image=NewResource;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 PlantMaintenanceScheme@1100528950 : Record 11072210;
                                 SOPlantMaintenanceSchemesPAGE@1100528800 : Page 11229377;
                               BEGIN
                                 TESTFIELD("Plant Type");
                                 TESTFIELD("Plant Number");

                                 SOPlantMaintenanceSchemesPAGE.SetSource("Plant Type", "Plant Number");
                                 PlantMaintenanceScheme.SETRANGE("Service Order No.", "No.");
                                 SOPlantMaintenanceSchemesPAGE.SETTABLEVIEW(PlantMaintenanceScheme);
                                 SOPlantMaintenanceSchemesPAGE.RUNMODAL;
                               END;
                                }
      { 1100528000;2 ;Action    ;
                      CaptionML=ENU=Transit Indications;
                      RunObject=Page 11126711;
                      RunPageLink=Service Order No.=FIELD(No.);
                      Image=Line }
      { 1100528619;1 ;ActionGroup;
                      CaptionML=ENU=Dispatch }
      { 1100528624;2 ;Action    ;
                      CaptionML=ENU=File Card;
                      Image=Card;
                      OnAction=VAR
                                 DispatchInterface@1100528600 : Codeunit 11071685;
                               BEGIN
                                 DispatchInterface.ShowDispatchFileCardByServiceOrder(Rec);
                               END;
                                }
      { 1100528621;2 ;Action    ;
                      CaptionML=ENU=Open File;
                      Image=LinkWeb;
                      OnAction=VAR
                                 DispatchInterface@1100528600 : Codeunit 11071685;
                               BEGIN
                                 DispatchInterface.ShowDispatchFileByServiceOrder(Rec);
                               END;
                                }
      { 1100528620;2 ;Action    ;
                      CaptionML=ENU=Open Order;
                      Image=LinkWeb;
                      OnAction=VAR
                                 DispatchInterface@1100528600 : Codeunit 11071685;
                               BEGIN
                                 DispatchInterface.ShowDispatchOrderByServiceOrder(Rec);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 18      ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1100409022;2 ;ActionGroup;
                      CaptionML=ENU=FLS VisiTour;
                      Visible=FLSButtonsVisible;
                      Image=Planning }
      { 1100528300;3 ;Action    ;
                      CaptionML=ENU=Create/Update Order;
                      Promoted=Yes;
                      Visible=FLSButtonsVisible;
                      PromotedIsBig=Yes;
                      Image=ServiceLines;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 CommunicateOrderToFLS(0); //Create/Modify
                               END;
                                }
      { 1100409020;3 ;Action    ;
                      CaptionML=ENU="Cancel Order ";
                      Promoted=Yes;
                      Visible=FLSButtonsVisible;
                      PromotedIsBig=Yes;
                      Image=CancelAllLines;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 CommunicateOrderToFLS(4); //Cancel (conditioonally)
                               END;
                                }
      { 1100528304;3 ;Action    ;
                      CaptionML=ENU="(Re)Plan Order ";
                      Promoted=Yes;
                      Visible=FLSButtonsVisible;
                      PromotedIsBig=Yes;
                      Image=Planning;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 CommunicateOrderToFLS(1); //Planning proposals
                               END;
                                }
      { 1100409021;3 ;Action    ;
                      CaptionML=ENU="Update Service Order ";
                      Promoted=Yes;
                      Visible=FLSButtonsVisible;
                      PromotedIsBig=Yes;
                      Image=UpdateXML;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 CommunicateOrderFromFLS;
                               END;
                                }
      { 1100528615;2 ;Action    ;
                      CaptionML=ENU=(Re)plan Service Orders;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Planning;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1100528600 : Record 11012823;
                                 ReplanServiceOrder@1100528601 : Page 11126465;
                               BEGIN
                                 ServiceOrder := Rec;
                                 ServiceOrder.SETRECFILTER;
                                 ServiceOrder.FIND('=');
                                 ReplanServiceOrder.SetReplanData(ServiceOrder, TODAY, 1, 0, FALSE, FALSE, TRUE, TRUE);
                                 ReplanServiceOrder.RUNMODAL;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1210190037;2 ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=ENU=Generate Invoice;
                      Image=Invoice;
                      OnAction=BEGIN
                                 CreateSalesInvoiceViaCollList;
                               END;
                                }
      { 1100528611;2 ;Action    ;
                      CaptionML=ENU=Transfer Cost/Revenue to Project;
                      Image=ResourceCosts;
                      OnAction=BEGIN
                                 TransferCostRevToProject;
                               END;
                                }
      { 1100529001;2 ;Action    ;
                      CaptionML=ENU=Activate Cost;
                      Visible=ActivationCostVisible;
                      Image=FixedAssets;
                      OnAction=VAR
                                 ActivateCostSO@1100529000 : Report 11012798;
                               BEGIN
                                 //DP00640
                                 TESTFIELD("No.");
                                 IF "Service Order Cost Activated" THEN
                                   FIELDERROR("Service Order Cost Activated");
                                 ActivateCostSO.SetSelection("No.");
                                 ActivateCostSO.RUNMODAL;
                               END;
                                }
      { 1100528640;2 ;ActionGroup;
                      CaptionML=ENU=Copy/Next Service Order;
                      Image=MakeOrder }
      { 1100485021;3 ;Action    ;
                      CaptionML=ENU=Create Next Service Order (Additional);
                      Promoted=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1210190001 : Record 11012823;
                                 CreateNextServiceOrderAdd@1100528600 : Page 11229426;
                                 ServiceOrderNo@1210190002 : Code[20];
                               BEGIN
                                 IF CreateNextServiceOrderAdd.StdDialogRunModal("No.", ServiceOrderNo) THEN BEGIN
                                   COMMIT;
                                   ServiceOrder.GET(ServiceOrderNo);
                                   PAGE.RUNMODAL(PAGE::"Service Order (General)", ServiceOrder);
                                 END;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100528641;3 ;Action    ;
                      CaptionML=ENU=Create Next Service Order (Unfinished);
                      Promoted=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1210190001 : Record 11012823;
                                 CreateNextServiceOrderUnf@1100528600 : Page 11229427;
                                 ServiceOrderNo@1210190002 : Code[20];
                               BEGIN
                                 IF CreateNextServiceOrderUnf.StdDialogRunModal("No.", ServiceOrderNo) THEN BEGIN
                                   COMMIT;
                                   ServiceOrder.GET(ServiceOrderNo);
                                   PAGE.RUNMODAL(PAGE::"Service Order (General)", ServiceOrder);
                                 END;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100485132;3 ;Action    ;
                      CaptionML=ENU=Copy Service Order;
                      Image=Copy;
                      OnAction=VAR
                                 ServiceOrder@1100528600 : Record 11012823;
                                 CopyServiceOrder@1100528601 : Page 11020397;
                                 ServiceOrderNo@1210190002 : Code[20];
                               BEGIN
                                 IF CopyServiceOrder.StdDialogRunModal("No.", ServiceOrderNo) THEN BEGIN
                                   COMMIT;
                                   ServiceOrder.GET(ServiceOrderNo);
                                   ServiceOrder.ActivateServOrderCard;
                                 END;
                               END;
                                }
      { 1100528617;3 ;Action    ;
                      CaptionML=ENU=Disconnect Next Service Order;
                      Image=UnLinkAccount;
                      OnAction=BEGIN
                                 DisconnectNextServiceOrder(TRUE);
                               END;
                                }
      { 1100528607;3 ;Action    ;
                      CaptionML=ENU=Link to Base Service Order;
                      Image=LinkAccount;
                      OnAction=BEGIN
                                 SelectAndConnectToBaseServiceOrder;
                               END;
                                }
      { 1100485138;2 ;Action    ;
                      CaptionML=ENU=Create Try-Out Quote;
                      Visible=false;
                      Image=Document;
                      OnAction=BEGIN
                                 CreateTryOutQuote;  //db, 02-10-07
                               END;
                                }
      { 1100528707;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Send Appointment Letter;
                      Promoted=Yes;
                      Image=SendApprovalRequest;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1100528600 : Record 11012823;
                               BEGIN
                                 ServiceOrder := Rec;
                                 ServiceOrder.SETRECFILTER;
                                 SendAppointment(ServiceOrder);
                               END;
                                }
      { 1100525288;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+M;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Plant &Location;
                      Image=CreateWarehousePick;
                      OnAction=BEGIN
                                 TESTFIELD("No.");
                                 Rec.RunCreatePlantLocation(Rec);
                               END;
                                }
      { 1100485000;2 ;Action    ;
                      CaptionML=ENU=Edit Word Do&cuments;
                      Promoted=Yes;
                      Image=Word;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Contact@1100485001 : Record 5050;
                               BEGIN
                                 TESTFIELD("Customer No.");
                                 IF Contact.GetContactByCustomer("Customer No.", Contact, TRUE) THEN
                                   EditDocuments(Contact."No.", "Contact Person No.", FALSE, '');
                               END;
                                }
      { 1100525311;2 ;Action    ;
                      ShortCutKey=Ctrl+K;
                      CaptionML=ENU=Completeness Check;
                      Image=CheckList;
                      OnAction=VAR
                                 CheckRecordCompletion@1100525000 : Codeunit 11012252;
                                 RecRef@1100525001 : RecordRef;
                               BEGIN
                                 RecRef.GETTABLE(Rec);
                                 CheckRecordCompletion.ShowIncompleteFields(RecRef);
                               END;
                                }
      { 1100525015;2 ;ActionGroup;
                      CaptionML=ENU=Executing Company;
                      Image=Company }
      { 1100528412;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=C&reate Order in Executing Company;
                      Image=MakeOrder;
                      OnAction=BEGIN
                                 CreateServiceOrderInExCompany;
                               END;
                                }
      { 1100528413;3 ;Action    ;
                      CaptionML=ENU=Get &Solution Text from Executing Company;
                      Image=Text;
                      OnAction=BEGIN
                                 GetSolutionTextFromExecCompany;
                               END;
                                }
      { 1100528414;3 ;Action    ;
                      CaptionML=ENU=Get &Actual Reference Point from Executing Company;
                      Image=EntriesList;
                      OnAction=BEGIN
                                 GetActRefPointFromExecCompany;
                               END;
                                }
      { 1100529307;2 ;Action    ;
                      CaptionML=ENU=Search Plant Location;
                      Promoted=Yes;
                      Image=Find;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF SearchPlantLocation() THEN
                                   CurrPage.UPDATE;
                               END;
                                }
      { 1100528608;2 ;Action    ;
                      CaptionML=ENU=Search Service Location;
                      Promoted=Yes;
                      Image=Find;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF SearchServiceLocation() THEN
                                   CurrPage.UPDATE;
                               END;
                                }
      { 1100409014;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+T;
                      CaptionML=ENU=Search Text;
                      Image=Text;
                      OnAction=BEGIN
                                 //db, 01-02-13: C005422
                                 PAGE.RUNMODAL(PAGE::"Service Order Monitor", ServOrderRec);
                               END;
                                }
      { 1100409008;2 ;Action    ;
                      CaptionML=ENU=Planned;
                      Promoted=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1100525001 : Record 11012823;
                               BEGIN
                                 //mg.sc, 15-04-13: C006726
                                 ServiceOrder := Rec;
                                 ServiceOrder.UpdateToNextRefPoint(0); // Planned
                                 //mg.ec, 15-04-13: C006726
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100409009;2 ;Action    ;
                      CaptionML=ENU=Reviewed;
                      Promoted=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1100525001 : Record 11012823;
                               BEGIN
                                 //mg.sc, 15-04-13: C006726
                                 ServiceOrder := Rec;
                                 ServiceOrder.UpdateToNextRefPoint(1); // Reviewed
                                 //mg.ec, 15-04-13: C006726
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100409011;2 ;Action    ;
                      CaptionML=ENU=Not Invoice;
                      Promoted=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1100525001 : Record 11012823;
                               BEGIN
                                 //mg.sc, 15-04-13: C006726
                                 ServiceOrder := Rec;
                                 ServiceOrder.UpdateToNextRefPoint(3); // Not Invoice
                                 //mg.ec, 15-04-13: C006726
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100409010;2 ;Action    ;
                      CaptionML=ENU=Make Chargeable;
                      Promoted=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1100525001 : Record 11012823;
                               BEGIN
                                 //mg.sc, 15-04-13: C006726
                                 ServiceOrder := Rec;
                                 ServiceOrder.UpdateToNextRefPoint(2); // Make Chargeable
                                 //mg.ec, 15-04-13: C006726
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100525012;2 ;Action    ;
                      CaptionML=ENU=Service Order;
                      Promoted=Yes;
                      Image=MailAttachment;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 Contact@1100525000 : Record 5050;
                               BEGIN
                                 TESTFIELD("Customer No.");
                                 IF Contact.GetContactByCustomer("Customer No.", Contact, TRUE) THEN
                                   EditDocuments(Contact."No.", '', TRUE, "E-Mail");
                               END;
                                }
      { 1100525013;2 ;Action    ;
                      CaptionML=ENU=Bill-to Customer;
                      Promoted=Yes;
                      Image=MailAttachment;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 Contact@1100525000 : Record 5050;
                                 Customer@1100525001 : Record 18;
                               BEGIN
                                 TESTFIELD("Bill-to Customer No.");
                                 IF Contact.GetContactByCustomer("Bill-to Customer No.", Contact, TRUE) THEN BEGIN
                                   Customer.GET("Bill-to Customer No.");
                                   EditDocuments(Contact."No.", '', TRUE, Customer."E-Mail");
                                 END;
                               END;
                                }
      { 1100525114;1 ;ActionGroup;
                      CaptionML=ENU=Print;
                      Image=PrintDocument }
      { 1210190062;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Service &Order Reports;
                      Image=Print;
                      OnAction=BEGIN
                                 PrintDoc.PrintServOrder(Rec);
                               END;
                                }
      { 1210190043;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Print Cost Plus &Entry;
                      Image=Print;
                      OnAction=VAR
                                 ServiceOrder@1100525001 : Record 11012823;
                               BEGIN
                                 ServiceOrder.SETRANGE("No.", "No.");
                                 PrintDoc.PrintServCostPlus(ServiceOrder);  //db, 25-06-07
                               END;
                                }
      { 1210190001;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Print &Work Sheet;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 PrintDoc.PrintServiceOrderWorksheet(Rec);
                               END;
                                }
      { 1100525014;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Service Order Text Reports;
                      Image=ListPage;
                      OnAction=BEGIN
                                 PrintDoc.PrintServOrderTexts(Rec);
                               END;
                                }
      { 1100525005;2 ;Action    ;
                      ShortCutKey=Ctrl+T;
                      Ellipsis=Yes;
                      CaptionML=ENU=Print &Debrief Check List (4PS-Mobile);
                      Image=Print;
                      OnAction=VAR
                                 lvServOrderRec@1100525000 : Record 11012823;
                                 lvDebriefCheckLiisRpt@1100525001 : Report 11012931;
                               BEGIN
                                 TESTFIELD("No.");
                                 lvServOrderRec.SETRANGE("No.", "No.");
                                 lvDebriefCheckLiisRpt.SETTABLEVIEW(lvServOrderRec);
                                 lvDebriefCheckLiisRpt.RUNMODAL;
                               END;
                                }
      { 1100525007;1 ;ActionGroup;
                      CaptionML=ENU=Work Sheet;
                      ActionContainerType=NewDocumentItems;
                      Image=Email }
      { 1100528502;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Email Work Sheet;
                      Image=Email;
                      OnAction=VAR
                                 DocumentPrint@1100528500 : Codeunit 229;
                               BEGIN
                                 //**4PS
                                 DocumentPrint.EmailServiceOrderWorksheet(Rec, TRUE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=ENU=General }

    { 34  ;2   ;Field     ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               xRec."Source Type" := "Source Type"::Direct;
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;

                ShowMandatory=TRUE }

    { 99  ;2   ;Field     ;
                SourceExpr=Description;
                OnValidate=BEGIN
                             DescriptionOnAfterValidate;
                           END;

                ShowMandatory=TRUE }

    { 1100528800;2;Field  ;
                SourceExpr="Description 2";
                Importance=Additional;
                ShowMandatory=Description2Mandatory }

    { 2   ;2   ;Field     ;
                SourceExpr="Customer No.";
                Importance=Standard;
                OnValidate=BEGIN
                             CustomerNoOnAfterValidate;
                           END;

                ShowMandatory=TRUE }

    { 1210190061;2;Field  ;
                SourceExpr="Customer Name";
                Importance=Additional;
                Editable=FALSE }

    { 1100525323;2;Field  ;
                SourceExpr="Contact Person No.";
                ShowMandatory=ContactPersonNoMandatory }

    { 1100525317;2;Field  ;
                SourceExpr="Contact Person Name";
                Importance=Additional }

    { 1210190002;2;Field  ;
                SourceExpr="Service Location No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             ServiceLocationNoOnAfterValida;
                           END;

                OnLookup=BEGIN
                           LookupServiceLocation;
                           CurrPage.UPDATE;
                         END;

                ShowMandatory=TRUE }

    { 1100528830;2;Field  ;
                SourceExpr="Service Location Type";
                Importance=Additional }

    { 1100528638;2;Field  ;
                SourceExpr="Customer Feature";
                Importance=Additional }

    { 42  ;2   ;Field     ;
                SourceExpr=Name;
                OnValidate=BEGIN
                             NameOnAfterValidate;
                           END;

                ShowMandatory=NameMandatory }

    { 1210190018;2;Field  ;
                SourceExpr="Name 2";
                Importance=Additional;
                ShowMandatory=Name2Mandatory }

    { 82  ;2   ;Field     ;
                SourceExpr=Address;
                OnValidate=BEGIN
                             AddressOnAfterValidate;
                           END;

                ShowMandatory=AddressMandatory }

    { 1210190016;2;Field  ;
                SourceExpr="Address 2";
                Importance=Additional;
                ShowMandatory=Address2Mandatory }

    { 120 ;2   ;Field     ;
                SourceExpr="Post Code";
                OnValidate=BEGIN
                             PostCodeOnAfterValidate;
                           END;

                ShowMandatory=PostCodeMandatory }

    { 1100525284;2;Field  ;
                SourceExpr="Country/Region Code";
                Importance=Additional;
                ShowMandatory=CountryRegionCodeMandatory }

    { 1100525321;2;Field  ;
                CaptionML=ENU=Contact No. Cust;
                SourceExpr="Contact No.";
                Visible=FALSE }

    { 156 ;2   ;Field     ;
                SourceExpr=City;
                OnValidate=BEGIN
                             CityOnAfterValidate;
                           END;

                ShowMandatory=CityMandatory }

    { 1100528632;2;Field  ;
                SourceExpr="Room (SUP)";
                Importance=Additional;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1100528636;2;Field  ;
                CaptionML=ENU=Room Description;
                SourceExpr=GetRoomDescription;
                Importance=Additional }

    { 1100528635;2;Field  ;
                SourceExpr="Part (SUP)";
                Importance=Additional;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1100528637;2;Field  ;
                CaptionML=ENU=Part Description;
                SourceExpr=GetPartDescription;
                Importance=Additional }

    { 1210190024;2;Field  ;
                SourceExpr="Source Type";
                Importance=Standard;
                Editable=FALSE }

    { 190 ;2   ;Field     ;
                SourceExpr="Service Contract No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             ServiceContractNoOnAfterValida;
                           END;

                OnLookup=BEGIN
                           LookupServiceContract;
                           CurrPage.UPDATE;
                         END;

                ShowMandatory=ServiceContractNoMandatory }

    { 1210190041;2;Field  ;
                SourceExpr="Territory Code";
                ShowMandatory=TerritoryCodeMandatory }

    { 25  ;2   ;Field     ;
                Lookup=No;
                SourceExpr=Priority;
                OnValidate=BEGIN
                             PriorityOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               AssistEditPriority;
                               PriorityOnAfterValidate;
                             END;

                ShowMandatory=PriorityMandatory }

    { 47  ;2   ;Field     ;
                SourceExpr=Status;
                Importance=Promoted;
                OnValidate=BEGIN
                             StatusOnAfterValidate;
                           END;
                            }

    { 1210190055;2;Field  ;
                SourceExpr="Order Kind";
                ShowMandatory=OrderKindMandatory }

    { 1100528606;2;Field  ;
                SourceExpr="Order Type";
                ShowMandatory=OrderTypeMandatory }

    { 1210190010;2;Field  ;
                SourceExpr="Order Manager";
                OnValidate=BEGIN
                             OrderManagerOnAfterValidate;
                           END;

                ShowMandatory=OrderManagerMandatory }

    { 1210190012;2;Field  ;
                SourceExpr="Order Manager Name";
                Importance=Additional }

    { 1210190014;2;Field  ;
                SourceExpr="Assigned to";
                OnValidate=BEGIN
                             AssignedtoOnAfterValidate;
                           END;

                ShowMandatory=AssignedtoMandatory }

    { 1210190015;2;Field  ;
                DrillDown=No;
                SourceExpr="Name Assigned To";
                Importance=Additional;
                Editable=FALSE }

    { 126 ;2   ;Field     ;
                SourceExpr="Your Reference";
                ShowMandatory=YourReferenceMandatory }

    { 1100485133;2;Field  ;
                SourceExpr="Order No. Customer";
                Importance=Additional;
                OnValidate=BEGIN
                             OrderNoCustomerOnAfterValidate;
                           END;

                ShowMandatory=OrderNoCustomerMandatory }

    { 1210190028;2;Field  ;
                SourceExpr="Commision Date";
                Importance=Additional;
                ShowMandatory=CommisionDateMandatory }

    { 1100528500;2;Field  ;
                SourceExpr="Service Warranty Code";
                ShowMandatory=ServiceWarrantyCodeMandatory }

    { 7   ;2   ;Field     ;
                SourceExpr="Global Dimension 1 Code" }

    { 1100525002;1;Part   ;
                CaptionML=ENU=Problem Text;
                SubPageLink=Table Name=CONST(Service Order),
                            No.=FIELD(No.),
                            Table Field=CONST(90);
                PagePartID=Page11125227;
                PartType=Page }

    { 1902768601;1;Group  ;
                CaptionML=ENU=Communication }

    { 1210190026;2;Field  ;
                SourceExpr="Contact Name";
                Importance=Promoted;
                OnLookup=BEGIN
                           ShowContact("Customer No.");
                         END;

                ShowMandatory=ContactNameMandatory }

    { 28  ;2   ;Field     ;
                CaptionML=ENU=Phone No.;
                SourceExpr="Phone No.";
                Importance=Promoted;
                ShowMandatory=PhoneNoMandatory }

    { 1100528601;2;Field  ;
                SourceExpr="Phone No. 2";
                Importance=Additional;
                ShowMandatory=PhoneNo2Mandatory }

    { 1100528603;2;Field  ;
                SourceExpr="Mobile Phone No.";
                ShowMandatory=MobilePhoneNoMandatory }

    { 63  ;2   ;Field     ;
                SourceExpr="E-Mail";
                Importance=Promoted;
                ShowMandatory=EMailMandatory }

    { 1100528605;2;Field  ;
                SourceExpr="Fax No.";
                ShowMandatory=FaxNoMandatory }

    { 1100528710;2;Field  ;
                CaptionML=ENU=Date Appointment Letter;
                SourceExpr=ServiceOrderExtension."Appointment Letter Code";
                TableRelation="SO Appointment Letter";
                Importance=Additional;
                Editable=FALSE }

    { 1100528709;2;Field  ;
                CaptionML=ENU=Date Appointment Letter Sent;
                SourceExpr=ServiceOrderExtension."Date Appointment Letter Sent";
                Importance=Additional;
                Editable=FALSE }

    { 1900515801;1;Group  ;
                CaptionML=ENU=Invoice Address }

    { 1100525197;2;Field  ;
                SourceExpr="Bill-to Customer No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             BilltoCustomerNoOnAfterValidat;
                           END;

                ShowMandatory=BilltoCustomerNoMandatory }

    { 1100525211;2;Field  ;
                CaptionML=ENU=No. of Alternative Addresses;
                SourceExpr=NumAdrs;
                Editable=FALSE }

    { 1100525216;2;Field  ;
                SourceExpr="Alternative Bill-to Address";
                ShowMandatory=AlternativeBilltoAddressMandatory }

    { 1100525318;2;Field  ;
                SourceExpr="Bill-to Contact Person";
                ShowMandatory=BilltoContactPersonMandatory }

    { 1100525358;2;Field  ;
                SourceExpr="Bill-to Contact Person Name";
                Importance=Additional }

    { 1100525198;2;Field  ;
                SourceExpr="Bill-to Name";
                ShowMandatory=BilltoNameMandatory }

    { 1100525213;2;Field  ;
                SourceExpr="Bill-to Name 2";
                Importance=Additional;
                ShowMandatory=BilltoName2Mandatory }

    { 1100525199;2;Field  ;
                SourceExpr="Bill-to Address";
                ShowMandatory=BilltoAddressMandatory }

    { 1100525212;2;Field  ;
                SourceExpr="Bill-to Address 2";
                Importance=Additional;
                ShowMandatory=BilltoAddress2Mandatory }

    { 1100525200;2;Field  ;
                CaptionML=ENU=Bill-to Post Code;
                SourceExpr="Bill-to Post Code";
                ShowMandatory=BilltoPostCodeMandatory }

    { 1100525361;2;Field  ;
                CaptionML=ENU=Contact No. Bill-to;
                SourceExpr="Bill-to Contact No.";
                Visible=FALSE }

    { 1100525221;2;Field  ;
                SourceExpr="Bill-to City";
                ShowMandatory=BilltoCityMandatory }

    { 1100528400;2;Field  ;
                CaptionML=ENU=Bill-to Language Code;
                SourceExpr=GetBillToLanguageCode;
                Editable=FALSE }

    { 1905885101;1;Group  ;
                CaptionML=ENU=Invoicing }

    { 1100528660;2;Field  ;
                CaptionClass=Text19056489 }

    { 1100528658;2;Field  ;
                CaptionML=ENU=All;
                SourceExpr="Additional Cost";
                Editable=AdditionalCostEditable }

    { 1100528656;2;Field  ;
                CaptionML=ENU=Labor;
                SourceExpr="Additional Cost (Labor)";
                Editable=AdditionalCostsEditable }

    { 1100528654;2;Field  ;
                CaptionML=ENU=Material;
                SourceExpr="Additional Cost (Material)";
                Editable=AdditionalCostsEditable }

    { 1100528652;2;Field  ;
                CaptionML=ENU=Subcontracting;
                SourceExpr="Additional Cost (Subc)";
                Editable=AdditionalCostsEditable }

    { 1100528649;2;Field  ;
                CaptionML=ENU=Plant;
                SourceExpr="Additional Cost (Plant)";
                Editable=AdditionalCostsEditable }

    { 1100528650;2;Field  ;
                CaptionML=ENU=Sundry;
                SourceExpr="Additional Cost (Sundry)";
                Editable=AdditionalCostsEditable }

    { 1100525243;2;Field  ;
                SourceExpr="Invoice Price";
                OnDrillDown=BEGIN
                              CostPlusRec.RESET;
                              CostPlusRec.SETRANGE("Service Order No.", "No.");
                              CostPlusRec.SETRANGE(Invoiced, FALSE);
                              PAGE.RUN(PAGE::"Service Order Cost Plus SF3", CostPlusRec);
                            END;
                             }

    { 1100525244;2;Field  ;
                SourceExpr="Invoiced Price" }

    { 1100525245;2;Field  ;
                SourceExpr="Invoice in Process" }

    { 1100525246;2;Field  ;
                SourceExpr="Credit Memo in Process" }

    { 1100525038;2;Field  ;
                SourceExpr="Payment Terms Code";
                ShowMandatory=PaymentTermsCodeMandatory }

    { 1100525043;2;Field  ;
                SourceExpr="VAT Bus. Posting Group";
                Importance=Additional }

    { 1100525201;2;Field  ;
                SourceExpr="VAT Prod. Posting Group";
                ShowMandatory=VATProdPostingGroupMandatory }

    { 1210190020;2;Field  ;
                SourceExpr="Service Package";
                ShowMandatory=ServicePackageMandatory }

    { 1100525044;2;Field  ;
                SourceExpr="Collect Invoices By" }

    { 1100528643;2;Field  ;
                SourceExpr="Collective List No.";
                Importance=Promoted;
                ShowMandatory=CollectiveListNoMandatory }

    { 1100409001;2;Field  ;
                SourceExpr="Payment Method Code (SO Inv.)";
                ShowMandatory=PaymentMethodCodeSOInvMandatory }

    { 1100529002;2;Field  ;
                SourceExpr="Direct Debit Mandate ID";
                ShowMandatory=DirectDebitMandateIDMandatory }

    { 1905596001;1;Group  ;
                CaptionML=ENU=Agreements }

    { 1100525210;2;Field  ;
                SourceExpr="Settlement Method";
                Importance=Promoted }

    { 1100525003;2;Field  ;
                SourceExpr="Currency Code";
                ShowMandatory=CurrencyCodeMandatory }

    { 1100525004;2;Field  ;
                SourceExpr="Order Amount";
                ShowMandatory=OrderAmountMandatory }

    { 1100525204;2;Field  ;
                SourceExpr="Order Amount (LCY)";
                ShowMandatory=OrderAmountLCYMandatory }

    { 1100525205;2;Field  ;
                SourceExpr="Installment Scheme";
                ShowMandatory=InstallmentSchemeMandatory }

    { 1100528677;2;Field  ;
                SourceExpr="Invoice Base Method";
                Editable=InvoiceBaseMethodEditable;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100528675;2;Field  ;
                SourceExpr="Invoice Base Amount Labor";
                Editable=InvoiceBaseAmountsEditable;
                ShowMandatory=InvoiceBaseAmountLaborMandatory }

    { 1100528671;2;Field  ;
                SourceExpr="Invoice Base Amount Material";
                Editable=InvoiceBaseAmountsEditable;
                ShowMandatory=InvoiceBaseAmountMaterialMandatory }

    { 1100528673;2;Field  ;
                SourceExpr="Invoice Base Amount Total";
                Editable=InvoiceBaseAmountsEditable;
                ShowMandatory=InvoiceBaseAmountTotalMandatory }

    { 1100528687;2;Field  ;
                SourceExpr="Price Book Type";
                Importance=Additional;
                OnValidate=BEGIN
                             UnitPriceTypeOnAfterValidate;
                           END;
                            }

    { 1100528681;2;Field  ;
                Name=UnitPriceCode;
                CaptionML=ENU=Price Book Code;
                SourceExpr=ServiceOrderExtension."Price Book Code";
                Importance=Additional;
                Editable=UnitPriceCodeEditable;
                OnValidate=VAR
                             ServiceUnitPriceManagement@1100525000 : Codeunit 11012846;
                           BEGIN
                             ServiceOrderExtension.VALIDATE("Price Book Code");
                             ServiceOrderExtension.ValidateUnitPriceFields(Rec);
                             ServiceOrderExtension.UpdateServOrderExtension("No.");
                             ServiceOrderExtension."Price Book Index Date" :=
                               ServiceUnitPriceManagement.GetLatestPriceBookIndexDate("Price Book Type", ServiceOrderExtension."Price Book Code");
                           END;

                OnLookup=VAR
                           ServiceUnitPrice@1100528601 : Record 11071768;
                           ServiceUnitPriceList@1100528600 : Page 11125269;
                         BEGIN
                           ServiceUnitPrice.SETRANGE(Type, "Price Book Type");
                           ServiceUnitPriceList.LOOKUPMODE(TRUE);
                           ServiceUnitPriceList.SETTABLEVIEW(ServiceUnitPrice);
                           IF (ServiceUnitPriceList.RUNMODAL = ACTION::LookupOK) THEN BEGIN
                             ServiceUnitPriceList.GETRECORD(ServiceUnitPrice);
                             ServiceOrderExtension.VALIDATE("Price Book Code", ServiceUnitPrice.Code);
                             ServiceOrderExtension.VALIDATE("Price Book Index Date", ServiceUnitPrice."Index Date");
                             ServiceOrderExtension.ValidateUnitPriceFields(Rec);
                             ServiceOrderExtension.UpdateServOrderExtension("No.");
                           END;
                         END;
                          }

    { 1100528684;2;Field  ;
                Name=UnitPriceIndexDate;
                CaptionML=ENU=Price Book Index Date;
                SourceExpr=ServiceOrderExtension."Price Book Index Date";
                Importance=Additional;
                Editable=UnitPriceIndexDateEditable;
                OnValidate=BEGIN
                             ServiceOrderExtension.VALIDATE("Price Book Index Date");
                             ServiceOrderExtension.ValidateUnitPriceFieldsIncDate(Rec);
                             ServiceOrderExtension.UpdateServOrderExtension("No.");
                           END;

                OnLookup=BEGIN
                           ServiceOrderExtension.LookupUnitPriceIndexDate;
                           ServiceOrderExtension.UpdateServOrderExtension("No.");
                         END;
                          }

    { 1100528630;2;Field  ;
                Name=UnitPriceSet;
                CaptionML=ENU=Unit Price Set;
                SourceExpr=ServiceOrderExtension."Unit Price Set";
                Editable=UnitPriceSetEditable;
                OnValidate=BEGIN
                             ServiceOrderExtension.VALIDATE("Unit Price Set");
                             ServiceOrderExtension.UpdateServOrderExtension("No.");
                             CurrPage.UPDATE(FALSE);
                           END;

                OnLookup=VAR
                           ServiceUnitPriceSet@1100528600 : Record 11072284;
                         BEGIN
                           ServiceUnitPriceSet.SETRANGE("Price Book Code", ServiceOrderExtension."Price Book Code");
                           ServiceUnitPriceSet.SETRANGE("Price Book Index Date", ServiceOrderExtension."Price Book Index Date");
                           IF PAGE.RUNMODAL(0, ServiceUnitPriceSet) = ACTION::LookupOK THEN BEGIN
                             ServiceOrderExtension.VALIDATE("Unit Price Set", ServiceUnitPriceSet.Code);
                             ServiceOrderExtension.UpdateServOrderExtension("No.");
                             CurrPage.UPDATE(FALSE);
                           END;
                         END;
                          }

    { 1100528689;2;Field  ;
                SourceExpr="Unit Price Status";
                Importance=Additional;
                Editable="Unit Price StatusEditable" }

    { 1100528100;2;Field  ;
                SourceExpr="Recording Unit Prices by";
                ShowMandatory=RecordingUnitPricesbyMandatory }

    { 1100525008;2;Field  ;
                SourceExpr="Limit Budget Hours";
                Importance=Additional;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;

                ShowMandatory=LimitBudgetHoursMandatory }

    { 1100525009;2;Field  ;
                SourceExpr="Limit Budget Labor";
                Importance=Additional;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;

                ShowMandatory=LimitBudgetLaborMandatory }

    { 1100525010;2;Field  ;
                SourceExpr="Limit Budget Material";
                Importance=Additional;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;

                ShowMandatory=LimitBudgetMaterialMandatory }

    { 1100525011;2;Field  ;
                SourceExpr="Limit Budget Total";
                Importance=Additional;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;

                ShowMandatory=LimitBudgetTotalMandatory }

    { 1100285300;2;Field  ;
                SourceExpr="Tactics Agreement";
                Visible=false }

    { 1100528648;2;Field  ;
                SourceExpr="Limit Budget Exceedance" }

    { 1901343701;1;Group  ;
                CaptionML=ENU=Planning }

    { 1100525117;2;Field  ;
                SourceExpr="Order Date";
                ShowMandatory=OrderDateMandatory }

    { 1100525116;2;Field  ;
                SourceExpr="Order Time";
                ShowMandatory=OrderTimeMandatory }

    { 1100528600;2;Field  ;
                SourceExpr="Service Control Period Date";
                ShowMandatory=ServiceControlPeriodDateMandatory }

    { 1100528623;2;Field  ;
                SourceExpr="First Possible Starting Date";
                OnValidate=BEGIN
                             FirstPossibleStartingDateOnAft;
                           END;

                ShowMandatory=FirstPossibleStartingDateMandatory }

    { 1100528622;2;Field  ;
                SourceExpr="First Possible Starting Time";
                OnValidate=BEGIN
                             FirstPossibleStartingTimeOnAft;
                           END;

                ShowMandatory=FirstPossibleStartingTimeMandatory }

    { 1100528625;2;Field  ;
                SourceExpr="Last Possible Ending Date";
                OnValidate=BEGIN
                             LastPossibleEndingDateOnAfterV;
                           END;

                ShowMandatory=LastPossibleEndingDateMandatory }

    { 1100528627;2;Field  ;
                SourceExpr="Last Possible Ending Time";
                OnValidate=BEGIN
                             LastPossibleEndingTimeOnAfterV;
                           END;

                ShowMandatory=LastPossibleEndingTimeMandatory }

    { 1100528629;2;Field  ;
                SourceExpr="Starting Date";
                Importance=Promoted;
                OnValidate=BEGIN
                             StartingDateOnAfterValidate;
                           END;

                ShowMandatory=StartingDateMandatory }

    { 1100528628;2;Field  ;
                SourceExpr="Starting Time";
                Importance=Promoted;
                OnValidate=BEGIN
                             StartingTimeOnAfterValidate;
                           END;

                ShowMandatory=StartingTimeMandatory }

    { 1100528631;2;Field  ;
                SourceExpr="Ending Date";
                OnValidate=BEGIN
                             EndingDateOnAfterValidate;
                           END;

                ShowMandatory=EndingDateMandatory }

    { 1100528633;2;Field  ;
                SourceExpr="Ending Time";
                OnValidate=BEGIN
                             EndingTimeOnAfterValidate;
                           END;

                ShowMandatory=EndingTimeMandatory }

    { 1100525022;2;Field  ;
                SourceExpr="Remote Control" }

    { 1100528609;2;Field  ;
                CaptionML=ENU=Resend Appointment Letter;
                SourceExpr=ServiceOrderExtension."Resend Appointment Letter";
                OnValidate=BEGIN
                             ServiceOrderExtension.VALIDATE("Resend Appointment Letter");
                             ServiceOrderExtension.UpdateServOrderExtension("No.");
                           END;
                            }

    { 1100525163;2;Field  ;
                SourceExpr="Closing Date";
                Importance=Additional;
                Editable=ClosingDateEditable;
                ShowMandatory=ClosingDateMandatory }

    { 1210190088;2;Field  ;
                SourceExpr=Watch;
                Importance=Additional;
                ShowMandatory=WatchMandatory }

    { 1100528802;2;Field  ;
                SourceExpr="Preferred Employee No.";
                ShowMandatory=PreferredEmployeeNoMandatory }

    { 1100528809;2;Field  ;
                SourceExpr="Preferred Employee Name" }

    { 1100528666;2;Field  ;
                SourceExpr="Employee No.";
                OnValidate=BEGIN
                             IF "Employee No." <> xRec."Employee No." THEN BEGIN
                               CurrPage.SAVERECORD;
                               COMMIT;
                               UpdateWorkorderEmployee(FALSE);
                               GET("No.");
                               CurrPage.UPDATE(TRUE);
                             END;
                           END;

                OnLookup=VAR
                           ResourceNo@1100527001 : Code[20];
                         BEGIN
                           ResourceNo := "Employee No.";
                           LookupResourceEmpl(ResourceNo, TRUE);
                           IF ResourceNo <> "Employee No." THEN BEGIN
                             Text := ResourceNo;
                             EXIT(TRUE);
                           END;
                         END;

                ShowMandatory=EmployeeNoMandatory }

    { 1100528668;2;Field  ;
                DrillDown=No;
                SourceExpr="Employee Name";
                Importance=Promoted;
                Editable=FALSE }

    { 1210190005;2;Field  ;
                AssistEdit=No;
                SourceExpr=Subcontractor;
                OnValidate=BEGIN
                             IF Subcontractor <> xRec.Subcontractor THEN BEGIN
                               CurrPage.SAVERECORD;
                               COMMIT;
                               UpdateWorkorderSubcontractor(FALSE);
                               GET("No.");
                               CurrPage.UPDATE(TRUE);
                             END;
                           END;

                OnLookup=VAR
                           ResourceNo@1100528600 : Code[20];
                         BEGIN
                           ResourceNo := Subcontractor;
                           LookupResourceSubcontractor(ResourceNo, TRUE);
                           IF ResourceNo <> Subcontractor THEN BEGIN
                             Text := ResourceNo;
                             EXIT(TRUE);
                           END;
                         END;

                OnAssistEdit=BEGIN
                               AssistEditSubcontractor(3);  //db, 02-03-09: gespecificeerd overzicht met contractregels
                               CurrPage.UPDATE;
                             END;

                ShowMandatory=SubcontractorMandatory }

    { 1210190006;2;Field  ;
                SourceExpr="Subcontractor Name";
                Importance=Additional;
                Editable=FALSE }

    { 1100409012;2;Field  ;
                SourceExpr="Next Reference Period";
                ShowMandatory=NextReferencePeriodMandatory }

    { 1100409013;2;Field  ;
                SourceExpr="Next Reference Period Desc";
                Importance=Additional }

    { 1100528669;2;Field  ;
                SourceExpr="Next Deadline";
                ShowMandatory=NextDeadlineMandatory }

    { 1100528618;2;Field  ;
                SourceExpr="Cause of Exclusion Code";
                ShowMandatory=CauseofExclusionCodeMandatory }

    { 1100528612;2;Field  ;
                SourceExpr="Service Cluster";
                Editable=false;
                ShowMandatory=ServiceClusterMandatory }

    { 1100528613;2;Field  ;
                SourceExpr="Service Cluster Seqn.";
                ShowMandatory=ServiceClusterSeqnMandatory }

    { 1100528634;2;Field  ;
                SourceExpr="Expected Hours";
                OnValidate=BEGIN
                             ExpectedHoursOnAfterValidate;
                           END;

                ShowMandatory=ExpectedHoursMandatory }

    { 1210190029;2;Field  ;
                SourceExpr="Budget Hours" }

    { 1210190022;2;Field  ;
                SourceExpr="Duration Time";
                ShowMandatory=DurationTimeMandatory }

    { 1100528610;2;Field  ;
                SourceExpr="Firm Planned" }

    { 1100525024;2;Field  ;
                SourceExpr="On Hold";
                OnValidate=BEGIN
                             CALCFIELDS("Description On Hold");
                           END;

                ShowMandatory=OnHoldMandatory }

    { 1100525040;2;Field  ;
                SourceExpr="Description On Hold";
                Importance=Additional }

    { 1100528717;2;Field  ;
                SourceExpr="Travel Duration";
                ShowMandatory=TravelDurationMandatory }

    { 1100528303;2;Field  ;
                SourceExpr="FLS VisiTour ID";
                Visible=FLSButtonsVisible;
                ShowMandatory=FLSVisiTourIDMandatory }

    { 1000000001;2;Field  ;
                Name=Export toFSA;
                SourceExpr="Export to FSA" }

    { 1000000000;2;Field  ;
                Name=Date/Time Export toFSA;
                SourceExpr="Date/Time Export to FSA";
                Importance=Promoted }

    { 1100528626;2;Field  ;
                CaptionML=ENU=Publish on Subcontractors Portal;
                SourceExpr=PublishedOnSubcPortal;
                OnValidate=BEGIN
                             TogglePublishSubcontPort(PublishedOnSubcPortal);
                             PublishedOnSubcPortal := GetPublishSubcontPort;
                           END;
                            }

    { 1903880701;1;Group  ;
                CaptionML=ENU=Other }

    { 1100485075;2;Field  ;
                Lookup=No;
                SourceExpr=Discipline;
                Importance=Promoted;
                OnValidate=BEGIN
                             DisciplineOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               AssistEditDiscipline;
                               DisciplineOnAfterValidate;
                             END;

                ShowMandatory=DisciplineMandatory }

    { 1100485140;2;Field  ;
                Lookup=No;
                SourceExpr="Trade Speciality";
                Importance=Promoted;
                OnValidate=BEGIN
                             TradeSpecialityOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               AssistEditTradeSpeciality;
                               TradeSpecialityOnAfterValidate;
                             END;

                ShowMandatory=TradeSpecialityMandatory }

    { 1100525090;2;Field  ;
                SourceExpr=Problem;
                ShowMandatory=ProblemMandatory }

    { 1100409007;2;Field  ;
                SourceExpr="Description Problem";
                Importance=Additional }

    { 1210190084;2;Field  ;
                SourceExpr="Customer Problem";
                ShowMandatory=CustomerProblemMandatory }

    { 1100525091;2;Field  ;
                SourceExpr=Cause;
                ShowMandatory=CauseMandatory }

    { 1100409015;2;Field  ;
                SourceExpr="Description Cause";
                Importance=Additional }

    { 1100525092;2;Field  ;
                SourceExpr=Solution;
                ShowMandatory=SolutionMandatory }

    { 1100409016;2;Field  ;
                SourceExpr="Description Solution";
                Importance=Additional }

    { 1100528602;2;Field  ;
                CaptionML=ENU=Charge to Project;
                SourceExpr=ServiceOrderExtension."Master Project";
                TableRelation=Job.No. WHERE (Internal Project=CONST(No));
                OnValidate=BEGIN
                             MasterProjectValidate;
                           END;

                OnLookup=VAR
                           Job@1100409000 : Record 11072003;
                         BEGIN
                           Job.SETRANGE("Internal Project", FALSE);
                           IF ServiceOrderExtension."Master Project" <> '' THEN
                             IF Job.GET(ServiceOrderExtension."Master Project") THEN;
                           IF PAGE.RUNMODAL(0, Job) = ACTION::LookupOK THEN BEGIN
                             ServiceOrderExtension."Master Project" := Job."No.";
                             MasterProjectValidate;
                           END;
                         END;
                          }

    { 1100528604;2;Field  ;
                CaptionML=ENU=Charge to Element;
                SourceExpr=ServiceOrderExtension."Master Element";
                OnValidate=BEGIN
                             ServiceOrderExtension.UpdateServOrderExtension("No.");
                             ServiceOrderExtension.VALIDATE("Master Element");
                             CurrPage.SAVERECORD;
                           END;

                OnLookup=VAR
                           ProjectElement@1100528600 : Record 11012010;
                         BEGIN
                           ProjectElement.SETRANGE("Project No.", ServiceOrderExtension."Master Project");
                           IF ProjectElement.GET(ServiceOrderExtension."Master Project", ServiceOrderExtension."Master Element") THEN;
                           IF PAGE.RUNMODAL(0, ProjectElement) = ACTION::LookupOK THEN BEGIN
                             ServiceOrderExtension."Master Element" := ProjectElement.Element;
                             ServiceOrderExtension.UpdateServOrderExtension("No.");
                             CurrPage.SAVERECORD;
                           END;
                         END;
                          }

    { 1100525035;2;Field  ;
                SourceExpr="Reference Date (Item)";
                ShowMandatory=ReferenceDateItemMandatory }

    { 1100525033;2;Field  ;
                SourceExpr="Reference Date (Company)" }

    { 1100525032;2;Field  ;
                SourceExpr="Reference Date (Customer)" }

    { 1100285000;2;Field  ;
                SourceExpr="Price List Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             //>>160122 ITERO.AC  Added same locic as for projects, avoid using customer net price list combined with discount letters
                             IF ("Sales Discount Term Group 1" <> '') OR ("Sales Discount Term Group 2" <> '') THEN
                               IF CustPriceList.GET("Price List Code") THEN
                                 IF CustPriceList."Net Price List" THEN
                                   ERROR(Text50001);
                             //<<
                           END;
                            }

    { 1100525041;2;Field  ;
                SourceExpr="Purch Discount Term Group 1";
                ShowMandatory=PurchDiscountTermGroup1Mandatory }

    { 1100525039;2;Field  ;
                SourceExpr="Purch Discount Term Group 2";
                ShowMandatory=PurchDiscountTermGroup2Mandatory }

    { 1100525026;2;Field  ;
                SourceExpr="Sales Discount Term Group 1";
                OnValidate=BEGIN
                             //>>160122 ITERO.AC  Added same locic as for projects, avoid using customer net price list combined with discount letters
                             IF "Sales Discount Term Group 1" <> '' THEN
                               IF CustPriceList.GET("Price List Code") THEN
                                 IF CustPriceList."Net Price List" THEN
                                   ERROR(Text50001);
                             //<<
                           END;

                ShowMandatory=SalesDiscountTermGroup1Mandatory }

    { 1100525021;2;Field  ;
                SourceExpr="Sales Discount Term Group 2";
                ShowMandatory=SalesDiscountTermGroup2Mandatory }

    { 1906942401;1;Group  ;
                CaptionML=ENU=Field Service }

    { 1100525025;2;Field  ;
                SourceExpr="Export to FSA";
                Importance=Promoted }

    { 1100525027;2;Field  ;
                SourceExpr="Date/Time Export to FSA";
                Importance=Promoted;
                ShowMandatory=DateTimeExporttoFSAMandatory }

    { 1100525031;2;Field  ;
                SourceExpr="Decentral Created";
                Editable=FALSE }

    { 1100525028;2;Field  ;
                CaptionML=ENU=Signature;
                SourceExpr=SignatureRec.Signature.HASVALUE }

    { 1100525029;2;Field  ;
                SourceExpr=Signer;
                ShowMandatory=SignerMandatory }

    { 1100525030;2;Field  ;
                SourceExpr="E-Mail Signer";
                ShowMandatory=EMailSignerMandatory }

    { 1100525289;2;Field  ;
                SourceExpr="Send Report" }

    { 1100525034;2;Field  ;
                SourceExpr="Debrief Comment" }

    { 1100525037;2;Field  ;
                CaptionML=ENU=Debrief Specifications;
                SourceExpr=DebriefSpecifications() }

    { 1100528644;2;Field  ;
                SourceExpr="Location Contact Debrief" }

    { 1100409004;2;Field  ;
                CaptionML=ENU=Documents 4PS Mobile;
                SourceExpr=DocumentsCreatedByFSA }

    { 1100528616;2;Field  ;
                SourceExpr="SO Finished (Field Service)" }

    { 1902736301;1;Group  ;
                CaptionML=ENU=Source }

    { 1100525042;2;Field  ;
                SourceExpr="Call No." }

    { 1100525062;2;Field  ;
                CaptionML=ENU=Calling Contact;
                SourceExpr=ServCallRec."Calling Contact";
                Editable=FALSE }

    { 1100525064;2;Field  ;
                CaptionML=ENU=Calling Account;
                SourceExpr=ServCallRec."Calling Account";
                Editable=FALSE }

    { 1100525068;2;Field  ;
                CaptionML=ENU=Calling Phone No.;
                SourceExpr=ServCallRec."Calling Phone No.";
                Editable=FALSE }

    { 1100528645;2;Field  ;
                SourceExpr="Actual Reference Point";
                Importance=Promoted;
                OnDrillDown=BEGIN
                              DrillDownActualRefPoint();
                            END;
                             }

    { 1100528647;2;Field  ;
                SourceExpr="Actual Reference Point Desc";
                Importance=Promoted }

    { 1100528404;2;Field  ;
                CaptionML=ENU=Executing Company Name;
                SourceExpr=ServiceOrderExtension."Executing Company Name";
                Importance=Additional;
                Editable=FALSE }

    { 1100528406;2;Field  ;
                CaptionML=ENU=Order No. Executing Company;
                SourceExpr=ServiceOrderExtension."Order No. Executing Company";
                Importance=Additional;
                Editable=FALSE }

    { 1100528407;2;Field  ;
                CaptionML=ENU=Act. Ref. Point Exec. Company;
                SourceExpr=ServiceOrderExtension."Act. Ref. Point Exec. Company";
                Importance=Additional;
                Editable=FALSE }

    { 1100528410;2;Field  ;
                CaptionML=ENU=Actual Reference Point Ex. Comp. Description;
                SourceExpr=ServiceOrderExtension."Act. Ref. Point Ex. Comp. Dsc.";
                Importance=Additional;
                Editable=FALSE }

    { 1100528405;2;Field  ;
                CaptionML=ENU=Principal Company Name;
                SourceExpr=ServiceOrderExtension."Principal Company Name";
                Importance=Additional;
                Editable=FALSE }

    { 1100528408;2;Field  ;
                CaptionML=ENU=Serv. Contr. No. Princ. Comp.;
                SourceExpr=ServiceOrderExtension."Serv. Contr. No. Princ. Comp.";
                Importance=Additional;
                Editable=FALSE }

    { 1100525094;2;Field  ;
                CaptionML=ENU=Try-Out;
                SourceExpr=TryOutRelation;
                Editable=FALSE;
                OnLookup=BEGIN
                           TryOutRelationRec.ShowTryOut('', '', '', '', "No.", '', '', 1);
                         END;
                          }

    { 1100525093;2;Field  ;
                CaptionML=ENU=Try-Out Quote;
                SourceExpr=TryOutQuoteRelation;
                Editable=FALSE;
                OnLookup=BEGIN
                           TryOutRelationRec.ShowTryOut('', '', '', '', "No.", '', '', 2);
                         END;
                          }

    { 1100525097;2;Field  ;
                SourceExpr="Estimate No.";
                ShowMandatory=EstimateNoMandatory }

    { 1100525103;2;Field  ;
                SourceExpr="Sub-Estimate No.";
                ShowMandatory=SubEstimateNoMandatory }

    { 1100409018;2;Field  ;
                SourceExpr="Change Request No.";
                ShowMandatory=ChangeRequestNoMandatory }

    { 1100409019;2;Field  ;
                SourceExpr="Change Request Description";
                Importance=Additional }

    { 1100525166;2;Field  ;
                SourceExpr="Created on";
                Importance=Additional;
                ShowMandatory=CreatedonMandatory }

    { 1100525167;2;Field  ;
                Lookup=No;
                SourceExpr="Created by";
                Importance=Additional;
                ShowMandatory=CreatedbyMandatory }

    { 1100525160;2;Field  ;
                SourceExpr="Modified on";
                Importance=Additional;
                ShowMandatory=ModifiedonMandatory }

    { 1100525161;2;Field  ;
                Lookup=No;
                SourceExpr="Modified by";
                Importance=Additional;
                ShowMandatory=ModifiedbyMandatory }

    { 1100528946;2;Field  ;
                SourceExpr=Origin }

    { 1100529306;1;Group  ;
                Name=Plant;
                CaptionML=ENU=Plant;
                GroupType=Group }

    { 1100529305;2;Field  ;
                SourceExpr="Plant Location";
                OnValidate=BEGIN
                             GetNoOfPlantLocationAddresses();
                           END;

                ShowMandatory=PlantLocationMandatory }

    { 1100528806;2;Field  ;
                SourceExpr="Plant Location Description";
                Importance=Additional }

    { 1100529304;2;Field  ;
                CaptionML=ENU=No. of Alternative Addresses;
                SourceExpr=PlantLocationAddresses;
                Importance=Additional;
                Editable=FALSE }

    { 1100529303;2;Field  ;
                SourceExpr="Alternative Plant Loc Address";
                ShowMandatory=AlternativePlantLocAddressMandatory }

    { 1100529302;2;Field  ;
                SourceExpr="Plant Type";
                OnValidate=BEGIN
                             GetMeterReading(MeterReading,MeterReadingType,MeterReadingUnitOfMeasure);
                           END;

                ShowMandatory=PlantTypeMandatory }

    { 1100529301;2;Field  ;
                SourceExpr="Plant Number";
                OnValidate=BEGIN
                             GetMeterReading(MeterReading,MeterReadingType,MeterReadingUnitOfMeasure);
                           END;

                ShowMandatory=PlantNumberMandatory }

    { 1100528807;2;Field  ;
                SourceExpr="Plant Type Description";
                Importance=Promoted }

    { 1100528808;2;Field  ;
                SourceExpr="Plant Number Description";
                Importance=Promoted }

    { 1100529300;2;Field  ;
                SourceExpr="Cost Component Plant";
                ShowMandatory=CostComponentPlantMandatory }

    { 1100528804;2;Field  ;
                Name=Meter Reading Type;
                CaptionML=ENU=Meter Reading Type;
                SourceExpr=MeterReadingType;
                Editable=FALSE }

    { 1100528803;2;Field  ;
                Name=[ Meter Reading];
                CaptionML=ENU=Meter Reading;
                SourceExpr=MeterReading;
                OnValidate=BEGIN
                             TESTFIELD("Plant Type");
                             TESTFIELD("Plant Number");

                             SetMeterReading(MeterReading, MeterReadingType, MeterReadingUnitOfMeasure);
                             GetMeterReading(MeterReading,MeterReadingType,MeterReadingUnitOfMeasure);
                           END;
                            }

    { 1100528805;2;Field  ;
                Name=Meter Reading Unit of Measure;
                CaptionML=ENU=Meter Reading Unit of Measure;
                SourceExpr=MeterReadingUnitOfMeasure;
                Editable=FALSE }

    { 1210190003;0;Container;
                ContainerType=FactBoxArea }

    { 1100529900;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                PartType=Page }

    { 3   ;1   ;Part      ;
                SubPageLink=No.=FIELD(No.),
                            Department Filter=FIELD(Department Filter);
                PagePartID=Page11128080;
                PartType=Page }

    { 1210190007;1;Part   ;
                SubPageLink=No.=FIELD(No.),
                            Department Filter=FIELD(Department Filter);
                PagePartID=Page11130486;
                PartType=Page }

    { 1100525001;1;Part   ;
                SubPageLink=No.=FIELD(No.),
                            Department Filter=FIELD(Department Filter);
                PagePartID=Page11130492;
                PartType=Page }

    { 1100525000;1;Part   ;
                SubPageLink=No.=FIELD(No.),
                            Department Filter=FIELD(Department Filter);
                PagePartID=Page11130483;
                PartType=Page }

    { 1210190004;1;Part   ;
                Name=ServiceOrderFlowFB;
                CaptionML=ENU=Service Order Structure;
                SubPageView=SORTING(Base Service Order No.);
                SubPageLink=Base Service Order No.=FIELD(Base Service Order No.),
                            Department Filter=FIELD(Department Filter);
                PagePartID=Page11125263;
                PartType=Page }

    { 1100528801;1;Part   ;
                Name=PurchaseLineServiceObjectFactbox;
                SubPageLink=Service Location No.=FIELD(Service Location No.);
                PagePartID=Page11229357;
                PartType=Page }

    { 1100528639;1;Part   ;
                Name=SignalsSF;
                CaptionML=ENU=Signals;
                PagePartID=Page11126442;
                PartType=Page }

    { 1100528900;1;Part   ;
                SubPageLink=Plant Type=FIELD(Plant Type),
                            Plant Number=FIELD(Plant Number);
                PagePartID=Page11229360;
                PartType=Page }

    { 1100528646;1;Part   ;
                Name=ServiceOrderLimitBudgetFB;
                CaptionML=ENU=Limit Budget Exceedance;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page11126754;
                Visible=FALSE;
                PartType=Page }

    { 1100525023;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1100525019;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ServSetup@1210190010 : Record 11012800;
      UserSetup@1100485005 : Record 91;
      ServCallRec@1100525002 : Record 11012822;
      ServOrderRec@1210190002 : Record 11012823;
      CostPlusRec@1210190001 : Record 11012825;
      EmplRec@1100485004 : Record 5200;
      PrefEmplRec@1100485001 : Record 11012843;
      TryOutRelationRec@1210190014 : Record 11012761;
      AdrsRec@1100485009 : Record 222;
      SignatureRec@1100525001 : Record 11020349;
      ServiceOrderExtension@1100528600 : Record 11071727;
      Mail@1012 : Codeunit 397;
      PrintDoc@1210190003 : Codeunit 229;
      SkipCheckBlockedByFSA@1100485007 : Boolean;
      TryOutRelation@1210190013 : Code[20];
      TryOutQuoteRelation@1210190012 : Code[20];
      NextOrder@1100485010 : Text[30];
      NumAdrs@1100485008 : Text[30];
      Text002@1100485006 : TextConst 'ENU=Modify/Delete not allowed, the Service Order is blocked by the Field Service.';
      PlantLocationAddresses@1100529300 : Text[30];
      DPA_IsHardFilter@1100000999 : Boolean;
      CreditLimitButtonVisible@19033344 : Boolean INDATASET;
      "Unit Price StatusEditable"@19064144 : Boolean INDATASET;
      UnitPriceIndexDateEditable@19010600 : Boolean INDATASET;
      UnitPriceCodeEditable@19055694 : Boolean INDATASET;
      Text19056489@19045898 : TextConst 'ENU=Additional Cost';
      UnitPriceSetEditable@1100528602 : Boolean INDATASET;
      InvoiceBaseMethodEditable@1210190006 : Boolean INDATASET;
      InvoiceBaseAmountsEditable@1210190017 : Boolean INDATASET;
      AdditionalCostEditable@1210190007 : Boolean INDATASET;
      AdditionalCostsEditable@1210190008 : Boolean INDATASET;
      ClosingDateEditable@1210190018 : Boolean INDATASET;
      ActivationCostVisible@1100529000 : Boolean INDATASET;
      PurchaseLineServiceObjectFactbox@1100528800 : Page 11229357;
      MeterReadingType@1100528804 : Code[10];
      MeterReading@1100528803 : Decimal;
      MeterReadingUnitOfMeasure@1100528802 : Code[10];
      FLSButtonsVisible@1100528000 : Boolean INDATASET;
      CustPriceList@1000000000 : Record 11128273;
      "*** 4PSSE"@1000000002 : TextConst;
      Text50001@1000000001 : TextConst 'ENU=Net price list cannot be combined with sales discount letter';
      PublishedOnSubcPortal@1100528601 : Boolean;
      Description2Mandatory@1100528400 : Boolean;
      ContactPersonNoMandatory@1100528401 : Boolean;
      NameMandatory@1100528402 : Boolean;
      Name2Mandatory@1100528403 : Boolean;
      AddressMandatory@1100528404 : Boolean;
      Address2Mandatory@1100528405 : Boolean;
      PostCodeMandatory@1100528406 : Boolean;
      CountryRegionCodeMandatory@1100528407 : Boolean;
      CityMandatory@1100528408 : Boolean;
      ServiceContractNoMandatory@1100528409 : Boolean;
      TerritoryCodeMandatory@1100528410 : Boolean;
      PriorityMandatory@1100528411 : Boolean;
      OrderKindMandatory@1100528412 : Boolean;
      OrderTypeMandatory@1100528413 : Boolean;
      OrderManagerMandatory@1100528414 : Boolean;
      AssignedtoMandatory@1100528415 : Boolean;
      YourReferenceMandatory@1100528416 : Boolean;
      OrderNoCustomerMandatory@1100528417 : Boolean;
      CommisionDateMandatory@1100528418 : Boolean;
      ServiceWarrantyCodeMandatory@1100528419 : Boolean;
      ContactNameMandatory@1100528420 : Boolean;
      PhoneNoMandatory@1100528421 : Boolean;
      PhoneNo2Mandatory@1100528422 : Boolean;
      MobilePhoneNoMandatory@1100528423 : Boolean;
      EMailMandatory@1100528424 : Boolean;
      FaxNoMandatory@1100528425 : Boolean;
      BilltoCustomerNoMandatory@1100528426 : Boolean;
      AlternativeBilltoAddressMandatory@1100528427 : Boolean;
      BilltoContactPersonMandatory@1100528428 : Boolean;
      BilltoNameMandatory@1100528429 : Boolean;
      BilltoName2Mandatory@1100528430 : Boolean;
      BilltoAddressMandatory@1100528431 : Boolean;
      BilltoAddress2Mandatory@1100528432 : Boolean;
      BilltoPostCodeMandatory@1100528433 : Boolean;
      BilltoCityMandatory@1100528434 : Boolean;
      PaymentTermsCodeMandatory@1100528435 : Boolean;
      VATProdPostingGroupMandatory@1100528436 : Boolean;
      ServicePackageMandatory@1100528437 : Boolean;
      CollectiveListNoMandatory@1100528438 : Boolean;
      PaymentMethodCodeSOInvMandatory@1100528439 : Boolean;
      DirectDebitMandateIDMandatory@1100528440 : Boolean;
      TransactionModeMandatory@1100528441 : Boolean;
      CurrencyCodeMandatory@1100528442 : Boolean;
      OrderAmountMandatory@1100528443 : Boolean;
      OrderAmountLCYMandatory@1100528444 : Boolean;
      InstallmentSchemeMandatory@1100528445 : Boolean;
      InvoiceBaseAmountLaborMandatory@1100528446 : Boolean;
      InvoiceBaseAmountMaterialMandatory@1100528447 : Boolean;
      InvoiceBaseAmountTotalMandatory@1100528448 : Boolean;
      RecordingUnitPricesbyMandatory@1100528449 : Boolean;
      LimitBudgetHoursMandatory@1100528450 : Boolean;
      LimitBudgetLaborMandatory@1100528451 : Boolean;
      LimitBudgetMaterialMandatory@1100528452 : Boolean;
      LimitBudgetTotalMandatory@1100528453 : Boolean;
      OrderDateMandatory@1100528454 : Boolean;
      OrderTimeMandatory@1100528455 : Boolean;
      ServiceControlPeriodDateMandatory@1100528456 : Boolean;
      FirstPossibleStartingDateMandatory@1100528457 : Boolean;
      FirstPossibleStartingTimeMandatory@1100528458 : Boolean;
      LastPossibleEndingDateMandatory@1100528459 : Boolean;
      LastPossibleEndingTimeMandatory@1100528460 : Boolean;
      StartingDateMandatory@1100528461 : Boolean;
      StartingTimeMandatory@1100528462 : Boolean;
      EndingDateMandatory@1100528463 : Boolean;
      EndingTimeMandatory@1100528464 : Boolean;
      ClosingDateMandatory@1100528465 : Boolean;
      WatchMandatory@1100528466 : Boolean;
      PreferredEmployeeNoMandatory@1100528467 : Boolean;
      EmployeeNoMandatory@1100528468 : Boolean;
      SubcontractorMandatory@1100528469 : Boolean;
      NextReferencePeriodMandatory@1100528470 : Boolean;
      NextDeadlineMandatory@1100528471 : Boolean;
      CauseofExclusionCodeMandatory@1100528472 : Boolean;
      ServiceClusterMandatory@1100528473 : Boolean;
      ServiceClusterSeqnMandatory@1100528474 : Boolean;
      ExpectedHoursMandatory@1100528475 : Boolean;
      DurationTimeMandatory@1100528476 : Boolean;
      OnHoldMandatory@1100528477 : Boolean;
      TravelDurationMandatory@1100528478 : Boolean;
      FLSVisiTourIDMandatory@1100528479 : Boolean;
      DisciplineMandatory@1100528480 : Boolean;
      TradeSpecialityMandatory@1100528481 : Boolean;
      ProblemMandatory@1100528482 : Boolean;
      CustomerProblemMandatory@1100528483 : Boolean;
      CauseMandatory@1100528484 : Boolean;
      SolutionMandatory@1100528485 : Boolean;
      ReferenceDateItemMandatory@1100528486 : Boolean;
      PurchDiscountTermGroup1Mandatory@1100528487 : Boolean;
      PurchDiscountTermGroup2Mandatory@1100528488 : Boolean;
      SalesDiscountTermGroup1Mandatory@1100528489 : Boolean;
      SalesDiscountTermGroup2Mandatory@1100528490 : Boolean;
      DateTimeExporttoFSAMandatory@1100528491 : Boolean;
      SignerMandatory@1100528492 : Boolean;
      EMailSignerMandatory@1100528493 : Boolean;
      EstimateNoMandatory@1100528494 : Boolean;
      SubEstimateNoMandatory@1100528495 : Boolean;
      ChangeRequestNoMandatory@1100528496 : Boolean;
      CreatedonMandatory@1100528497 : Boolean;
      CreatedbyMandatory@1100528498 : Boolean;
      ModifiedonMandatory@1100528499 : Boolean;
      ModifiedbyMandatory@1100528500 : Boolean;
      PlantLocationMandatory@1100528501 : Boolean;
      AlternativePlantLocAddressMandatory@1100528502 : Boolean;
      PlantTypeMandatory@1100528503 : Boolean;
      PlantNumberMandatory@1100528504 : Boolean;
      CostComponentPlantMandatory@1100528505 : Boolean;

    PROCEDURE UpdateReferenceNorm@1100485003();
    VAR
      RefPeriodRec@1100485000 : Record 11020272;
    BEGIN
      CurrPage.UPDATE;
      RefPeriodRec.UpdateNorm(RefPeriodRec.Type::ServOrder, "No.");
      GET("No.");  //db, 06-11-06: previous function updates maintable; avoid SQL-message
    END;

    PROCEDURE StartServOrders@1100485002(lvAction@1100485000 : Integer;lvCount@1100485001 : Boolean) : Integer;
    VAR
      lvServOrderRec@1100485002 : Record 11012823;
    BEGIN
      lvServOrderRec.SETFILTER("No.", '<>%1', "No.");
      CASE lvAction OF
        0:
          BEGIN
            lvServOrderRec.SETCURRENTKEY("Service Contract No.");
            lvServOrderRec.SETRANGE("Service Contract No.", "Service Contract No.");
            IF (lvCount = TRUE) AND ("Service Contract No." = '') THEN EXIT(0);
          END;
        1:
          BEGIN
            lvServOrderRec.SETCURRENTKEY("Service Location No.");
            lvServOrderRec.SETRANGE("Service Location No.", "Service Location No.");
            IF (lvCount = TRUE) AND ("Service Location No." = '') THEN EXIT(0);
          END;
        2:
          BEGIN
            lvServOrderRec.SETCURRENTKEY("Call No.");
            lvServOrderRec.SETRANGE("Call No.", "Call No.");
            lvServOrderRec.SETRANGE("Source Type", lvServOrderRec."Source Type"::Call);
            IF (lvCount = TRUE) AND ("Call No." = '') THEN EXIT(0);
          END;
        3:
          BEGIN
            IF NOT lvCount THEN BEGIN
              IF "Base Service Order No." = '' THEN
                EXIT(0);
              lvServOrderRec.SETRANGE("No.", "Base Service Order No.");
              PAGE.RUNMODAL(PAGE::"Base Service Order", lvServOrderRec);
              EXIT(0);
            END ELSE BEGIN
              lvServOrderRec.SETCURRENTKEY("Base Service Order No.");
              lvServOrderRec.SETRANGE("Base Service Order No.", "Base Service Order No.");
              IF ("Base Service Order No."= '') THEN EXIT(0);
              EXIT(lvServOrderRec.COUNT);
            END;
          END;
      END;

      IF lvCount = FALSE THEN BEGIN
        PAGE.RUNMODAL(0, lvServOrderRec);
      END ELSE BEGIN
        EXIT(lvServOrderRec.COUNT);
      END;
    END;

    PROCEDURE GetNoOfServOrders@1100485001(lvAction@1100485001 : Integer) NumServOrder : Integer;
    BEGIN
      NumServOrder := StartServOrders(lvAction, TRUE);
      EXIT(NumServOrder);
    END;

    PROCEDURE DebriefSpecifications@1100525003() : Boolean;
    VAR
      ServiceOrderObjSpecLine@1210190000 : Record 11071782;
    BEGIN
      ServiceOrderObjSpecLine.SETRANGE("Service Order No.", "No.");
      ServiceOrderObjSpecLine.SETFILTER("New Value", '<>%1', '');
      ServiceOrderObjSpecLine.SETRANGE("Processed Date", 0D);
      ServiceOrderObjSpecLine.SETFILTER(Status, '<%1', ServiceOrderObjSpecLine.Status::Approved);
      EXIT(NOT ServiceOrderObjSpecLine.ISEMPTY);
    END;

    PROCEDURE GetInfo@1100525002() : Integer;
    VAR
      RecRef@1100525000 : RecordRef;
      DocumentLinkMgt@1100525001 : Codeunit 11012401;
    BEGIN
      RecRef.GETTABLE(Rec);

      EXIT(DocumentLinkMgt.GetInfo(RecRef))
    END;

    PROCEDURE ShowDocuments@1100525000();
    VAR
      RecRef@1100525000 : RecordRef;
      DocumentFilters@1100525001 : Codeunit 11012432;
    BEGIN
      RecRef.GETTABLE(Rec);
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, "Global Dimension 1 Code", FALSE, TRUE);
    END;

    PROCEDURE GetServCall@1100525001();
    BEGIN
      //db, 06-09-10: read call after removing to much flowfields
      IF NOT ServCallRec.GET("Call No.") THEN ServCallRec.INIT;
    END;

    PROCEDURE GetNoOfTryOuts@1100528600() : Integer;
    VAR
      TryoutCode@1100528600 : Code[20];
    BEGIN
      EXIT(TryOutRelationRec.GetNoOfTryOuts('', '', '', '', "No.", '', '', 1, TryoutCode));
    END;

    PROCEDURE GetNoOfTryOutQuotes@1100528602() : Integer;
    VAR
      TryoutCode@1100528600 : Code[20];
    BEGIN
      EXIT(TryOutRelationRec.GetNoOfTryOuts('', '', '', '', "No.", '', '', 2, TryoutCode));
    END;

    PROCEDURE UpdateEditable@1100528603();
    BEGIN
      InvoiceBaseMethodEditable := "Base Service Order No." = "No.";
      InvoiceBaseAmountsEditable := "Invoice Base Method" <> "Invoice Base Method"::" ";
      "Unit Price StatusEditable" := "Price Book Type" <> "Price Book Type"::None;
      UnitPriceIndexDateEditable := "Price Book Type" <> "Price Book Type"::None;
      UnitPriceCodeEditable := "Price Book Type" <> "Price Book Type"::None;
      UnitPriceSetEditable := "Price Book Type" <> "Price Book Type"::None;
      AdditionalCostEditable :=
        NOT ServSetup."Add.Cost Based On Contr.Disc." AND (("Source Type" <> "Source Type"::Direct) OR ("Service Contract No." = ''));
      AdditionalCostsEditable :=
        ServSetup."Add.Cost Based On Contr.Disc."  AND (("Source Type" <> "Source Type"::Direct) OR ("Service Contract No." = ''));
      ClosingDateEditable := Status <> Status::Finished;
      //DP01008.sn
      IF ("Base Service Order" = FALSE) THEN BEGIN
        IF ("Collect Invoices By" <> "Collect Invoices By"::BaseOrder) THEN
          InvoiceBaseMethodEditable := TRUE
        ELSE
          InvoiceBaseAmountsEditable := FALSE;
      END;
      //DP01008.en
    END;

    LOCAL PROCEDURE CreateServiceOrderInExCompany@1100528400();
    VAR
      ServiceOrder@1100528400 : Record 11012823;
    BEGIN
      ServiceOrderExtension.TESTFIELD("Executing Company Name", '');
      ServiceOrderExtension.TESTFIELD("Order No. Executing Company", '');
      TESTFIELD("Service Contract No.");
      ServiceOrder.COPY(Rec);
      ServiceOrder.FILTERGROUP(2);
      ServiceOrder.SETRANGE("No.", "No.");
      ServiceOrder.FILTERGROUP(0);
      REPORT.RUNMODAL(REPORT::"Create Serv. Ord. in Ex. Comp.", TRUE, FALSE, ServiceOrder);
    END;

    LOCAL PROCEDURE NameOnAfterValidate@19065884();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE AddressOnAfterValidate@19060866();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PostCodeOnAfterValidate@19007075();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CityOnAfterValidate@19023525();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CustomerNoOnAfterValidate@19016267();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE DescriptionOnAfterValidate@19030973();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ServiceContractNoOnAfterValida@19025091();
    BEGIN
      UpdateEditable;
      CurrPage.UPDATE;
      UpdateReferenceNorm;
    END;

    LOCAL PROCEDURE StatusOnAfterValidate@19072689();
    BEGIN
      SkipCheckBlockedByFSA := TRUE;  //* Bij 'OnValidate' van de tabel is al 'MODIFY(TRUE)' uitgevoerd, waarbij
                                      //* ook het actuele logmoment al is bijgewerkt.
      CurrPage.UPDATE();
      SkipCheckBlockedByFSA := FALSE;
    END;

    LOCAL PROCEDURE PriorityOnAfterValidate@19076862();
    BEGIN
      UpdateReferenceNorm;
    END;

    LOCAL PROCEDURE ServiceLocationNoOnAfterValida@19019562();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OrderNoCustomerOnAfterValidate@19028010();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OrderManagerOnAfterValidate@19064434();
    BEGIN
      CALCFIELDS("Order Manager Name");
    END;

    LOCAL PROCEDURE AssignedtoOnAfterValidate@19050262();
    BEGIN
      CALCFIELDS("Name Assigned To");
    END;

    LOCAL PROCEDURE BilltoCustomerNoOnAfterValidat@19044114();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE UnitPriceTypeOnAfterValidate@19065184();
    BEGIN
      UpdateEditable;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE FirstPossibleStartingTimeOnAft@19003644();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE FirstPossibleStartingDateOnAft@19032865();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE LastPossibleEndingDateOnAfterV@19020180();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE LastPossibleEndingTimeOnAfterV@19066821();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE StartingTimeOnAfterValidate@19008557();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE StartingDateOnAfterValidate@19020273();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE EndingDateOnAfterValidate@19076447();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE EndingTimeOnAfterValidate@19075483();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE ExpectedHoursOnAfterValidate@19072443();
    BEGIN
      CurrPage.UPDATE;  //db, 14-08-09: M15017
    END;

    LOCAL PROCEDURE DisciplineOnAfterValidate@19013243();
    BEGIN
      UpdateReferenceNorm;
    END;

    PROCEDURE TradeSpecialityOnAfterValidate@1100528604();
    BEGIN
      UpdateReferenceNorm;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    VAR
      RecRef@1100529900 : RecordRef;
    BEGIN
      xRec := Rec;
      NextOrder := ShowNextOrder(0);

      NumAdrs := AdrsRec.CheckAvailableAddress("Bill-to Customer No.", 3);

      GetSignature(SignatureRec,TRUE);  //db, 10-08-10
      GetServCall;
      CreditLimitButtonVisible := (ActivateCreditLimit(0));  //db, 16-12-10: M23068
      UpdateEditable;
      GetNoOfPlantLocationAddresses();

      RecRef.GETTABLE(Rec);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(TRUE);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode("Global Dimension 1 Code");

      PublishedOnSubcPortal := GetPublishSubcontPort;
      UpdateSignalRulesSF;
    END;

    PROCEDURE MasterProjectValidate@1100528601();
    BEGIN
      ServiceOrderExtension.VALIDATE("Master Project");
      //4PSSE ServiceOrderExtension.ValidateMasterProject(Rec);
      ServiceOrderExtension.UpdateServOrderExtension("No.");
      CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE GetNoOfPlantLocationAddresses@1100528000();
    VAR
      PlantLocationAddress@1100528000 : Record 11012590;
    BEGIN
      PlantLocationAddresses := '';
      IF "Plant Location" <> '' THEN BEGIN
        PlantLocationAddress.SETRANGE(Location,"Plant Location");
        PlantLocationAddresses := '[' + FORMAT(PlantLocationAddress.COUNT) + ']';
      END;
    END;

    LOCAL PROCEDURE FillShowMandatoryVariables@1100528401();
    BEGIN
      Description2Mandatory := FieldInCompletionControl(FIELDNO("Description 2"));
      ContactPersonNoMandatory := FieldInCompletionControl(FIELDNO("Contact Person No."));
      NameMandatory := FieldInCompletionControl(FIELDNO(Name));
      Name2Mandatory := FieldInCompletionControl(FIELDNO("Name 2"));
      AddressMandatory := FieldInCompletionControl(FIELDNO(Address));
      Address2Mandatory := FieldInCompletionControl(FIELDNO("Address 2"));
      PostCodeMandatory := FieldInCompletionControl(FIELDNO("Post Code"));
      CountryRegionCodeMandatory := FieldInCompletionControl(FIELDNO("Country/Region Code"));
      CityMandatory := FieldInCompletionControl(FIELDNO(City));
      ServiceContractNoMandatory := FieldInCompletionControl(FIELDNO("Service Contract No."));
      TerritoryCodeMandatory := FieldInCompletionControl(FIELDNO("Territory Code"));
      PriorityMandatory := FieldInCompletionControl(FIELDNO(Priority));
      OrderKindMandatory := FieldInCompletionControl(FIELDNO("Order Kind"));
      OrderTypeMandatory := FieldInCompletionControl(FIELDNO("Order Type"));
      OrderManagerMandatory := FieldInCompletionControl(FIELDNO("Order Manager"));
      AssignedtoMandatory := FieldInCompletionControl(FIELDNO("Assigned to"));
      YourReferenceMandatory := FieldInCompletionControl(FIELDNO("Your Reference"));
      OrderNoCustomerMandatory := FieldInCompletionControl(FIELDNO("Order No. Customer"));
      CommisionDateMandatory := FieldInCompletionControl(FIELDNO("Commision Date"));
      ServiceWarrantyCodeMandatory := FieldInCompletionControl(FIELDNO("Service Warranty Code"));
      ContactNameMandatory := FieldInCompletionControl(FIELDNO("Contact Name"));
      PhoneNoMandatory := FieldInCompletionControl(FIELDNO("Phone No."));
      PhoneNo2Mandatory := FieldInCompletionControl(FIELDNO("Phone No. 2"));
      MobilePhoneNoMandatory := FieldInCompletionControl(FIELDNO("Mobile Phone No."));
      EMailMandatory := FieldInCompletionControl(FIELDNO("E-Mail"));
      FaxNoMandatory := FieldInCompletionControl(FIELDNO("Fax No."));
      BilltoCustomerNoMandatory := FieldInCompletionControl(FIELDNO("Bill-to Customer No."));
      AlternativeBilltoAddressMandatory := FieldInCompletionControl(FIELDNO("Alternative Bill-to Address"));
      BilltoContactPersonMandatory := FieldInCompletionControl(FIELDNO("Bill-to Contact Person"));
      BilltoNameMandatory := FieldInCompletionControl(FIELDNO("Bill-to Name"));
      BilltoName2Mandatory := FieldInCompletionControl(FIELDNO("Bill-to Name 2"));
      BilltoAddressMandatory := FieldInCompletionControl(FIELDNO("Bill-to Address"));
      BilltoAddress2Mandatory := FieldInCompletionControl(FIELDNO("Bill-to Address 2"));
      BilltoPostCodeMandatory := FieldInCompletionControl(FIELDNO("Bill-to Post Code"));
      BilltoCityMandatory := FieldInCompletionControl(FIELDNO("Bill-to City"));
      PaymentTermsCodeMandatory := FieldInCompletionControl(FIELDNO("Payment Terms Code"));
      VATProdPostingGroupMandatory := FieldInCompletionControl(FIELDNO("VAT Prod. Posting Group"));
      ServicePackageMandatory := FieldInCompletionControl(FIELDNO("Service Package"));
      CollectiveListNoMandatory := FieldInCompletionControl(FIELDNO("Collective List No."));
      PaymentMethodCodeSOInvMandatory := FieldInCompletionControl(FIELDNO("Payment Method Code (SO Inv.)"));
      DirectDebitMandateIDMandatory := FieldInCompletionControl(FIELDNO("Direct Debit Mandate ID"));
      CurrencyCodeMandatory := FieldInCompletionControl(FIELDNO("Currency Code"));
      OrderAmountMandatory := FieldInCompletionControl(FIELDNO("Order Amount"));
      OrderAmountLCYMandatory := FieldInCompletionControl(FIELDNO("Order Amount (LCY)"));
      InstallmentSchemeMandatory := FieldInCompletionControl(FIELDNO("Installment Scheme"));
      InvoiceBaseAmountLaborMandatory := FieldInCompletionControl(FIELDNO("Invoice Base Amount Labor"));
      InvoiceBaseAmountMaterialMandatory := FieldInCompletionControl(FIELDNO("Invoice Base Amount Material"));
      InvoiceBaseAmountTotalMandatory := FieldInCompletionControl(FIELDNO("Invoice Base Amount Total"));
      RecordingUnitPricesbyMandatory := FieldInCompletionControl(FIELDNO("Recording Unit Prices by"));
      LimitBudgetHoursMandatory := FieldInCompletionControl(FIELDNO("Limit Budget Hours"));
      LimitBudgetLaborMandatory := FieldInCompletionControl(FIELDNO("Limit Budget Labor"));
      LimitBudgetMaterialMandatory := FieldInCompletionControl(FIELDNO("Limit Budget Material"));
      LimitBudgetTotalMandatory := FieldInCompletionControl(FIELDNO("Limit Budget Total"));
      OrderDateMandatory := FieldInCompletionControl(FIELDNO("Order Date"));
      OrderTimeMandatory := FieldInCompletionControl(FIELDNO("Order Time"));
      ServiceControlPeriodDateMandatory := FieldInCompletionControl(FIELDNO("Service Control Period Date"));
      FirstPossibleStartingDateMandatory := FieldInCompletionControl(FIELDNO("First Possible Starting Date"));
      FirstPossibleStartingTimeMandatory := FieldInCompletionControl(FIELDNO("First Possible Starting Time"));
      LastPossibleEndingDateMandatory := FieldInCompletionControl(FIELDNO("Last Possible Ending Date"));
      LastPossibleEndingTimeMandatory := FieldInCompletionControl(FIELDNO("Last Possible Ending Time"));
      StartingDateMandatory := FieldInCompletionControl(FIELDNO("Starting Date"));
      StartingTimeMandatory := FieldInCompletionControl(FIELDNO("Starting Time"));
      EndingDateMandatory := FieldInCompletionControl(FIELDNO("Ending Date"));
      EndingTimeMandatory := FieldInCompletionControl(FIELDNO("Ending Time"));
      ClosingDateMandatory := FieldInCompletionControl(FIELDNO("Closing Date"));
      WatchMandatory := FieldInCompletionControl(FIELDNO(Watch));
      PreferredEmployeeNoMandatory := FieldInCompletionControl(FIELDNO("Preferred Employee No."));
      EmployeeNoMandatory := FieldInCompletionControl(FIELDNO("Employee No."));
      SubcontractorMandatory := FieldInCompletionControl(FIELDNO(Subcontractor));
      NextReferencePeriodMandatory := FieldInCompletionControl(FIELDNO("Next Reference Period"));
      NextDeadlineMandatory := FieldInCompletionControl(FIELDNO("Next Deadline"));
      CauseofExclusionCodeMandatory := FieldInCompletionControl(FIELDNO("Cause of Exclusion Code"));
      ServiceClusterMandatory := FieldInCompletionControl(FIELDNO("Service Cluster"));
      ServiceClusterSeqnMandatory := FieldInCompletionControl(FIELDNO("Service Cluster Seqn."));
      ExpectedHoursMandatory := FieldInCompletionControl(FIELDNO("Expected Hours"));
      DurationTimeMandatory := FieldInCompletionControl(FIELDNO("Duration Time"));
      OnHoldMandatory := FieldInCompletionControl(FIELDNO("On Hold"));
      TravelDurationMandatory := FieldInCompletionControl(FIELDNO("Travel Duration"));
      FLSVisiTourIDMandatory := FieldInCompletionControl(FIELDNO("FLS VisiTour ID"));
      DisciplineMandatory := FieldInCompletionControl(FIELDNO(Discipline));
      TradeSpecialityMandatory := FieldInCompletionControl(FIELDNO("Trade Speciality"));
      ProblemMandatory := FieldInCompletionControl(FIELDNO(Problem));
      CustomerProblemMandatory := FieldInCompletionControl(FIELDNO("Customer Problem"));
      CauseMandatory := FieldInCompletionControl(FIELDNO(Cause));
      SolutionMandatory := FieldInCompletionControl(FIELDNO(Solution));
      ReferenceDateItemMandatory := FieldInCompletionControl(FIELDNO("Reference Date (Item)"));
      PurchDiscountTermGroup1Mandatory := FieldInCompletionControl(FIELDNO("Purch Discount Term Group 1"));
      PurchDiscountTermGroup2Mandatory := FieldInCompletionControl(FIELDNO("Purch Discount Term Group 2"));
      SalesDiscountTermGroup1Mandatory := FieldInCompletionControl(FIELDNO("Sales Discount Term Group 1"));
      SalesDiscountTermGroup2Mandatory := FieldInCompletionControl(FIELDNO("Sales Discount Term Group 2"));
      DateTimeExporttoFSAMandatory := FieldInCompletionControl(FIELDNO("Date/Time Export to FSA"));
      SignerMandatory := FieldInCompletionControl(FIELDNO(Signer));
      EMailSignerMandatory := FieldInCompletionControl(FIELDNO("E-Mail Signer"));
      EstimateNoMandatory := FieldInCompletionControl(FIELDNO("Estimate No."));
      SubEstimateNoMandatory := FieldInCompletionControl(FIELDNO("Sub-Estimate No."));
      ChangeRequestNoMandatory := FieldInCompletionControl(FIELDNO("Change Request No."));
      CreatedonMandatory := FieldInCompletionControl(FIELDNO("Created on"));
      CreatedbyMandatory := FieldInCompletionControl(FIELDNO("Created by"));
      ModifiedonMandatory := FieldInCompletionControl(FIELDNO("Modified on"));
      ModifiedbyMandatory := FieldInCompletionControl(FIELDNO("Modified by"));
      PlantLocationMandatory := FieldInCompletionControl(FIELDNO("Plant Location"));
      AlternativePlantLocAddressMandatory := FieldInCompletionControl(FIELDNO("Alternative Plant Loc Address"));
      PlantTypeMandatory := FieldInCompletionControl(FIELDNO("Plant Type"));
      PlantNumberMandatory := FieldInCompletionControl(FIELDNO("Plant Number"));
      CostComponentPlantMandatory := FieldInCompletionControl(FIELDNO("Cost Component Plant"));
    END;

    LOCAL PROCEDURE FieldInCompletionControl@1100528402(FieldNo@1100528400 : Integer) : Boolean;
    VAR
      ExtendedFieldProperty@1100528402 : Record 11020567;
      TableNo@1100528401 : Integer;
    BEGIN
      TableNo := DATABASE::"Service Order";
      EXIT(ExtendedFieldProperty.FieldInCompletionControl(TableNo, FieldNo));
    END;

    LOCAL PROCEDURE UpdateSignalRulesSF@1100528607();
    VAR
      CallIntakeSignalMgt@1100528600 : Codeunit 11012862;
    BEGIN
      CurrPage.SignalsSF.PAGE.UpdateRulesList(2, "No.", '', '', FALSE);
    END;

    BEGIN
    {
      PSSE NL-fields/functions removed
      141210 ITERO.MH Added action ROT Reduction

      150416 ITERO.PR Added action Create Customer
      150601 ITERO.SB Added <Action6> and <Action5>, show not posted documents
      150603 ITERO.MH Added Global dimension 1 code on first content area
      150811 ITERO.AC Added field "Price List Code"
      151117 ITERO.SB Copy of fields "Export to FSA" and "Date/Time Export to FSA" to group planning
      151230 ITERO.SB Run correct page for not posted documents (invoice/Cr.memos)
      160122 ITERO.AC Added same locic as for projects, avoid using customer net price list combined with discount letters
      160408 ITERO.SB RAD-206 Added field "Tactics Agreement"
    }
    END.
  }
}

