OBJECT Page 11125224 Service Order (Plan)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Service Order (Plan);
    InsertAllowed=No;
    SourceTable=Table11012823;
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=ENU=New,Process,Report,Order,Texts,Mail Documents,FLS VisiTour;
    OnInit=BEGIN
             UnitPriceCodeEditable := TRUE;
             UnitPriceIndexDateEditable := TRUE;
             "Unit Price StatusEditable" := TRUE;
             FillShowMandatoryVariables;
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 ServSetup.GET;
                 IF NOT UserSetup.GET(USERID) THEN UserSetup.INIT;

                 IF ServSetup."SO (Plan) Ref. Point Filter" <> '' THEN
                   SETFILTER("Actual Reference Point (Gantt)", ServSetup."SO (Plan) Ref. Point Filter");
                 FLSButtonsVisible := ServSetup."FLS VisiTour Active";
               END;

    OnAfterGetRecord=VAR
                       Source@1100528800 : 'ServiceLocation,ServiceObject,ServiceOrder';
                     BEGIN
                       CurrPage.PurchaseLineServiceObjectFactbox.PAGE.SetSource(Source::ServiceOrder, "No.");

                       IF TryOutRelationRec.READPERMISSION THEN BEGIN
                         TryOutRelation := TryOutRelationRec.GetTryOut('', '', '', '', "No.", '', '', 1);
                         TryOutQuoteRelation := TryOutRelationRec.GetTryOut('', '', '', '', "No.", '', '', 2);
                       END;

                       GetInfo;
                       CALCFIELDS("Actual Reference Point Desc", "Contact No.");
                       ServiceOrderExtension.GetServOrderExtension("No.");
                       CurrPage.ServiceOrderFlowFB.PAGE.SetCurrServiceOrderNo("No.");
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02

                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    OnModifyRecord=BEGIN
                     IF SkipCheckBlockedByFSA THEN
                       SkipCheckBlockedByFSA := FALSE
                     ELSE BEGIN
                       IF CheckBlockedByFSA() THEN
                         ERROR(Text002);
                     END;
                     UpdateSignalRulesSF;
                   END;

    OnDeleteRecord=BEGIN
                     IF CheckBlockedByFSA() THEN
                       ERROR(Text002);
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 138     ;1   ;ActionGroup;
                      CaptionML=ENU=Service &Order }
      { 1100528705;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Service Order (General);
                      RunObject=Page 11125209;
                      RunPageLink=No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Document;
                      PromotedCategory=Process }
      { 1100529001;2 ;Action    ;
                      CaptionML=ENU=Work Orders;
                      Image=HRSetup;
                      OnAction=VAR
                                 ServiceOrderInfoMgt@1100529000 : Codeunit 11012841;
                               BEGIN
                                 ServiceOrderInfoMgt.ShowSOWorkOrders("No.");
                               END;
                                }
      { 1100525524;2 ;Action    ;
                      CaptionML=ENU=Extra Cost;
                      RunObject=Page 11125104;
                      RunPageLink=Entity Type=CONST(Service Order),
                                  Entity Code=FIELD(No.);
                      Visible=false;
                      Image=ChangePaymentTolerance }
      { 1210190010;2 ;Action    ;
                      ShortCutKey=Ctrl+B;
                      CaptionML=ENU=Budget;
                      RunObject=Page 11125247;
                      RunPageLink=Service Order No.=FIELD(No.);
                      Image=LedgerBudget }
      { 155     ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Service and Maintenance &Ledger Entry;
                      RunObject=Page 11012826;
                      RunPageView=SORTING(Service Order No.);
                      RunPageLink=Service Order No.=FIELD(No.);
                      Image=GLRegisters }
      { 1210190000;2 ;Action    ;
                      CaptionML=ENU=Invoices;
                      Visible=false;
                      Image=Invoice;
                      OnAction=BEGIN
                                 ShowInvoice(FALSE);
                               END;
                                }
      { 1210190038;2 ;Action    ;
                      CaptionML=ENU=Credit Memos;
                      Visible=false;
                      Image=CreditMemo;
                      OnAction=BEGIN
                                 ShowInvoice(TRUE);
                               END;
                                }
      { 1100525298;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=&Dimensions;
                      RunObject=Page 540;
                      RunPageLink=Table ID=CONST(11012823),
                                  No.=FIELD(No.);
                      Visible=false;
                      Image=Dimensions }
      { 1100525006;2 ;Action    ;
                      Name=Preference Locations;
                      CaptionML=ENU=Preference &Locations;
                      RunObject=Page 11072043;
                      RunPageView=SORTING(Priority);
                      RunPageLink=Type=CONST(Service Order),
                                  No.=FIELD(No.);
                      Visible=false;
                      Image=Company }
      { 1100525307;2 ;Action    ;
                      CaptionML=ENU=Service Order Locations;
                      RunObject=Page 11125140;
                      RunPageLink=Service Order No.=FIELD(No.);
                      Visible=false;
                      Image=ServiceZones }
      { 1100485107;2 ;Action    ;
                      CaptionML=ENU=Reference Periods;
                      Promoted=Yes;
                      Image=CalculatePlan;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReferencePeriodsServiceFRM@1100528600 : Page 11020670;
                               BEGIN
                                 ReferencePeriodsServiceFRM.SetServiceOrderNo("No.");
                                 ReferencePeriodsServiceFRM.RUN;
                               END;
                                }
      { 1100485135;2 ;Action    ;
                      CaptionML=ENU=Reference Points;
                      Promoted=Yes;
                      Image=EntriesList;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 DocumentReferencePointsFRM@1100528600 : Page 11020345;
                               BEGIN
                                 DocumentReferencePointsFRM.SetServiceOrderNo("No.");
                                 DocumentReferencePointsFRM.RUN;
                               END;
                                }
      { 1100485072;2 ;Action    ;
                      CaptionML=ENU=Log&book;
                      RunObject=Page 11020471;
                      RunPageLink=Document No.=FIELD(No.),
                                  Document Type=CONST(ServOrder);
                      Image=Timesheet }
      { 1100409004;2 ;Action    ;
                      CaptionML=ENU=Plant Locations;
                      Image=SKU;
                      OnAction=VAR
                                 TmpLinkedPlantLoc@1100409000 : TEMPORARY Record 11012657;
                               BEGIN
                                 TESTFIELD("No.");
                                 TmpLinkedPlantLoc.SETRANGE("Link Type", TmpLinkedPlantLoc."Link Type"::"Service Order");
                                 TmpLinkedPlantLoc."Link Type" := TmpLinkedPlantLoc."Link Type"::"Service Order";
                                 TmpLinkedPlantLoc."Service Order No." := "No.";
                                 PAGE.RUNMODAL(PAGE::"Linked Plant Location List", TmpLinkedPlantLoc);
                               END;
                                }
      { 1100525299;2 ;Action    ;
                      CaptionML=ENU=Signature;
                      RunObject=Page 11125109;
                      RunPageLink=Service Order No.=FIELD(No.);
                      Visible=false;
                      Image=Signature }
      { 1210190151;2 ;Action    ;
                      CaptionML=ENU=Do&cuments;
                      Visible=false;
                      Image=Documents;
                      OnAction=BEGIN
                                 ShowDocuments;  //db, 21-05-10
                               END;
                                }
      { 1199197400;2 ;Action    ;
                      CaptionML=ENU=Document &Relations;
                      RunObject=Page 11012413;
                      RunPageView=SORTING(Document Type,No.,Related Document No.)
                                  WHERE(Document Type=CONST(Service Order));
                      RunPageLink=No.=FIELD(No.);
                      Visible=false;
                      Image=Relationship }
      { 1210190143;2 ;Action    ;
                      CaptionML=ENU=Try-out;
                      Visible=false;
                      Image=Document;
                      OnAction=BEGIN
                                 TryOutRelationRec.ShowTryOut('', '', '', '', "No.", '', '', 1);
                               END;
                                }
      { 1210190144;2 ;Action    ;
                      CaptionML=ENU=Try-out &Quote;
                      Visible=false;
                      Image=Quote;
                      OnAction=BEGIN
                                 TryOutRelationRec.ShowTryOut('', '', '', '', "No.", '', '', 2);
                               END;
                                }
      { 1100525009;1 ;ActionGroup;
                      CaptionML=ENU=New }
      { 1100528740;2 ;Action    ;
                      CaptionML=ENU=Responsible &Persons;
                      RunObject=Page 11012858;
                      RunPageLink=Service Order No.=FIELD(No.);
                      Image=Users }
      { 1210190150;2 ;Action    ;
                      CaptionML=ENU=Purchase Orders;
                      Image=Document;
                      OnAction=BEGIN
                                 ShowPurchaseOrdersForServiceOrder;
                               END;
                                }
      { 1100485017;2 ;Action    ;
                      CaptionML=ENU=History Service Order;
                      Visible=false;
                      Image=History;
                      OnAction=BEGIN
                                 GetHistoryServiceOrder(FALSE);
                               END;
                                }
      { 1100528608;1 ;ActionGroup;
                      CaptionML=ENU=Unit Prices }
      { 1100528732;2 ;Action    ;
                      CaptionML=ENU=Unit Prices;
                      Image=CostCenter;
                      OnAction=VAR
                                 ServiceUnitPriceManagement@1100528600 : Codeunit 11012846;
                               BEGIN
                                 ServiceUnitPriceManagement.ShowSUPRecordingLines(Rec);
                               END;
                                }
      { 1100528734;2 ;Action    ;
                      CaptionML=ENU=Production Recording;
                      Image=GeneralPostingSetup;
                      OnAction=VAR
                                 ServiceUnitPriceManagement@1100528600 : Codeunit 11012846;
                               BEGIN
                                 ServiceUnitPriceManagement.ShowSUPProductionList("No.");
                               END;
                                }
      { 1100525007;1 ;ActionGroup;
                      CaptionML=ENU=Navigate }
      { 1210190007;2 ;Action    ;
                      CaptionML=ENU=Objects;
                      RunObject=Page 11125210;
                      RunPageView=SORTING(Service Order No.,Object No.,Maintenance Scheme);
                      RunPageLink=Service Order No.=FIELD(No.);
                      Promoted=Yes;
                      Image=WorkCenterLoad;
                      PromotedCategory=Category4 }
      { 1210190008;2 ;Action    ;
                      CaptionML=ENU=Advice Orders;
                      RunObject=Page 11126281;
                      RunPageView=SORTING(Record Type,Project No.,Service Order No.,Line No.);
                      RunPageLink=Record Type=CONST(ServOrder),
                                  Service Order No.=FIELD(No.);
                      Promoted=Yes;
                      Image=OrderTracking;
                      PromotedCategory=Category4 }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 18      ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1100528607;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Send Appointment Letter;
                      Promoted=Yes;
                      Image=SendApprovalRequest;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1100528600 : Record 11012823;
                               BEGIN
                                 ServiceOrder := Rec;
                                 ServiceOrder.SETRECFILTER;
                                 SendAppointment(ServiceOrder);
                               END;
                                }
      { 1100409003;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Plant &Location;
                      Image=CreateWarehousePick;
                      OnAction=BEGIN
                                 TESTFIELD("No.");
                                 Rec.RunCreatePlantLocation(Rec);
                               END;
                                }
      { 1100485000;2 ;Action    ;
                      CaptionML=ENU=Edit Word Do&cuments;
                      Promoted=Yes;
                      Image=Word;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Contact@1100485001 : Record 5050;
                               BEGIN
                                 TESTFIELD("Customer No.");
                                 IF Contact.GetContactByCustomer("Customer No.", Contact, TRUE) THEN
                                   EditDocuments(Contact."No.", "Contact Person No.", FALSE, '');
                               END;
                                }
      { 1100525311;2 ;Action    ;
                      ShortCutKey=Ctrl+K;
                      CaptionML=ENU=Completeness Check;
                      Image=CheckList;
                      OnAction=VAR
                                 CheckRecordCompletion@1100525000 : Codeunit 11012252;
                                 RecRef@1100525001 : RecordRef;
                               BEGIN
                                 RecRef.GETTABLE(Rec);
                                 CheckRecordCompletion.ShowIncompleteFields(RecRef);
                               END;
                                }
      { 1100409007;2 ;ActionGroup;
                      CaptionML=ENU=FLS VisiTour;
                      Visible=FLSButtonsVisible;
                      Image=Planning }
      { 1100409009;3 ;Action    ;
                      CaptionML=ENU=Update Order;
                      Promoted=No;
                      Visible=FLSButtonsVisible;
                      PromotedIsBig=Yes;
                      Image=ServiceLines;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 CommunicateOrderToFLS(0); //Create/Modify
                               END;
                                }
      { 1100528300;3 ;Action    ;
                      CaptionML=ENU="(Re)Plan Order ";
                      Promoted=Yes;
                      Visible=FLSButtonsVisible;
                      PromotedIsBig=Yes;
                      Image=Planning;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 CommunicateOrderToFLS(1);
                               END;
                                }
      { 1100409002;3 ;Action    ;
                      CaptionML=ENU=Update Service Order;
                      Promoted=Yes;
                      Visible=FLSButtonsVisible;
                      PromotedIsBig=Yes;
                      Image=UpdateXML;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 CommunicateOrderFromFLS;
                               END;
                                }
      { 1100528600;2 ;Action    ;
                      CaptionML=ENU=(Re)plan Service Orders;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Planning;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1100528601 : Record 11012823;
                                 ReplanServiceOrder@1100528602 : Page 11126465;
                               BEGIN
                                 ServiceOrder := Rec;
                                 ServiceOrder.SETRECFILTER;
                                 ServiceOrder.FIND('=');
                                 ReplanServiceOrder.SetReplanData(ServiceOrder, TODAY, 1, 0, FALSE, FALSE, TRUE, TRUE);
                                 ReplanServiceOrder.RUNMODAL;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100528717;2 ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=ENU=Planned;
                      Promoted=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1100525001 : Record 11012823;
                               BEGIN
                                 //mg.sc, 15-04-13: C006726
                                 ServiceOrder := Rec;
                                 ServiceOrder.UpdateToNextRefPoint(0); // Planned
                                 //mg.sc, 15-04-13: C006726
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100525008;1 ;ActionGroup;
                      CaptionML=ENU=Print }
      { 1210190001;2 ;Action    ;
                      ShortCutKey=Ctrl+S;
                      Ellipsis=Yes;
                      CaptionML=ENU=Print &Work Sheet;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 PrintDoc.PrintServiceOrderWorksheet(Rec);
                               END;
                                }
      { 1210190062;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Service &Order Reports;
                      Image=PrintDocument;
                      OnAction=BEGIN
                                 PrintDoc.PrintServOrder(Rec);
                               END;
                                }
      { 1100525011;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Service Order Text Reports;
                      Image=PostPrint;
                      OnAction=BEGIN
                                 PrintDoc.PrintServOrderTexts(Rec);
                               END;
                                }
      { 1100525005;1 ;ActionGroup;
                      CaptionML=ENU=Mail Documents;
                      ActionContainerType=NewDocumentItems }
      { 1100525012;2 ;Action    ;
                      CaptionML=ENU=Service Order;
                      Promoted=Yes;
                      Image=MailAttachment;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 Contact@1100525000 : Record 5050;
                               BEGIN
                                 TESTFIELD("Customer No.");
                                 IF Contact.GetContactByCustomer("Customer No.", Contact, TRUE) THEN
                                   EditDocuments(Contact."No.", "Contact Person No.", FALSE, '');
                               END;
                                }
      { 1100528400;1 ;ActionGroup;
                      CaptionML=ENU=Work Sheet;
                      ActionContainerType=NewDocumentItems;
                      Image=Email }
      { 1100525020;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Email Work Sheet;
                      Promoted=Yes;
                      Image=Email;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 DocumentPrint@1100525000 : Codeunit 229;
                               BEGIN
                                 //**4PS
                                 DocumentPrint.EmailServiceOrderWorksheet(Rec, TRUE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=ENU=General }

    { 34  ;2   ;Field     ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               xRec."Source Type" := "Source Type"::Direct;
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;

                ShowMandatory=TRUE }

    { 99  ;2   ;Field     ;
                SourceExpr=Description;
                OnValidate=BEGIN
                             DescriptionOnAfterValidate;
                           END;

                ShowMandatory=TRUE }

    { 1100528800;2;Field  ;
                SourceExpr="Description 2";
                Importance=Additional;
                ShowMandatory=Description2Mandatory }

    { 2   ;2   ;Field     ;
                SourceExpr="Customer No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             CustomerNoC2OnAfterValidate;
                           END;

                ShowMandatory=TRUE }

    { 1210190061;2;Field  ;
                SourceExpr="Customer Name";
                Importance=Additional;
                Editable=FALSE }

    { 1100525323;2;Field  ;
                DrillDown=No;
                SourceExpr="Contact Person No.";
                ShowMandatory=ContactPersonNoMandatory }

    { 1100525317;2;Field  ;
                SourceExpr="Contact Person Name";
                Importance=Additional }

    { 42  ;2   ;Field     ;
                SourceExpr=Name;
                Importance=Promoted;
                OnValidate=BEGIN
                             NameOnAfterValidate;
                           END;

                ShowMandatory=NameMandatory }

    { 82  ;2   ;Field     ;
                SourceExpr=Address;
                OnValidate=BEGIN
                             AddressOnAfterValidate;
                           END;

                ShowMandatory=AddressMandatory }

    { 1100525014;2;Field  ;
                SourceExpr="Address 2";
                Importance=Additional;
                ShowMandatory=Address2Mandatory }

    { 120 ;2   ;Field     ;
                SourceExpr="Post Code";
                OnValidate=BEGIN
                             PostCodeOnAfterValidate;
                           END;

                ShowMandatory=PostCodeMandatory }

    { 156 ;2   ;Field     ;
                SourceExpr=City;
                OnValidate=BEGIN
                             CityOnAfterValidate;
                           END;

                ShowMandatory=CityMandatory }

    { 1100525284;2;Field  ;
                SourceExpr="Country/Region Code";
                Importance=Additional;
                ShowMandatory=CountryRegionCodeMandatory }

    { 1100485075;2;Field  ;
                Lookup=No;
                CaptionML=ENU=Discipline;
                SourceExpr=Discipline;
                OnValidate=BEGIN
                             DisciplineOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               AssistEditDiscipline;
                               DisciplineOnAfterValidate;
                             END;

                ShowMandatory=DisciplineMandatory }

    { 1100525321;2;Field  ;
                CaptionML=ENU=Contact No. Cust;
                SourceExpr="Contact No.";
                Visible=FALSE }

    { 1100485140;2;Field  ;
                Lookup=No;
                SourceExpr="Trade Speciality";
                OnValidate=BEGIN
                             TradeSpecialityOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               AssistEditTradeSpeciality;
                               TradeSpecialityOnAfterValidate;
                             END;

                ShowMandatory=TradeSpecialityMandatory }

    { 1210190016;2;Field  ;
                Lookup=No;
                SourceExpr=Priority;
                Importance=Promoted;
                OnValidate=BEGIN
                             PriorityOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               AssistEditPriority;
                               PriorityOnAfterValidate;
                             END;

                ShowMandatory=PriorityMandatory }

    { 1100525025;2;Field  ;
                SourceExpr="Export to FSA" }

    { 1100525027;2;Field  ;
                SourceExpr="Date/Time Export to FSA";
                ShowMandatory=DateTimeExporttoFSAMandatory }

    { 1100409005;2;Field  ;
                SourceExpr="Next Reference Period";
                ShowMandatory=NextReferencePeriodMandatory }

    { 1100409006;2;Field  ;
                SourceExpr="Next Reference Period Desc";
                Importance=Additional }

    { 1100528720;2;Field  ;
                CaptionML=ENU=Next Deadline;
                SourceExpr="Next Deadline";
                Editable=false;
                ShowMandatory=NextDeadlineMandatory }

    { 1100528609;2;Field  ;
                SourceExpr="Cause of Exclusion Code";
                ShowMandatory=CauseofExclusionCodeMandatory }

    { 1100528613;2;Field  ;
                SourceExpr="First Possible Starting Date";
                OnValidate=BEGIN
                             FirstPossibleStartingDateOnAft;
                           END;

                ShowMandatory=FirstPossibleStartingDateMandatory }

    { 1100528612;2;Field  ;
                SourceExpr="First Possible Starting Time";
                OnValidate=BEGIN
                             FirstPossibleStartingTimeOnAft;
                           END;

                ShowMandatory=FirstPossibleStartingTimeMandatory }

    { 1100528615;2;Field  ;
                SourceExpr="Last Possible Ending Date";
                OnValidate=BEGIN
                             LastPossibleEndingDateOnAfterV;
                           END;

                ShowMandatory=LastPossibleEndingDateMandatory }

    { 1100528617;2;Field  ;
                SourceExpr="Last Possible Ending Time";
                OnValidate=BEGIN
                             LastPossibleEndingTimeOnAfterV;
                           END;

                ShowMandatory=LastPossibleEndingTimeMandatory }

    { 1100528618;2;Field  ;
                SourceExpr="Starting Date";
                OnValidate=BEGIN
                             StartingDateOnAfterValidate;
                           END;

                ShowMandatory=StartingDateMandatory }

    { 1100528620;2;Field  ;
                SourceExpr="Starting Time";
                OnValidate=BEGIN
                             StartingTimeOnAfterValidate;
                           END;

                ShowMandatory=StartingTimeMandatory }

    { 1100528621;2;Field  ;
                SourceExpr="Ending Date";
                OnValidate=BEGIN
                             EndingDateOnAfterValidate;
                           END;

                ShowMandatory=EndingDateMandatory }

    { 1100528623;2;Field  ;
                SourceExpr="Ending Time";
                OnValidate=BEGIN
                             EndingTimeOnAfterValidate;
                           END;

                ShowMandatory=EndingTimeMandatory }

    { 1100528624;2;Field  ;
                SourceExpr="Expected Hours";
                OnValidate=BEGIN
                             ExpectedHoursOnAfterValidate;
                           END;

                ShowMandatory=ExpectedHoursMandatory }

    { 1100528626;2;Field  ;
                SourceExpr="Budget Hours" }

    { 1100528628;2;Field  ;
                SourceExpr="Duration Time";
                ShowMandatory=DurationTimeMandatory }

    { 1100528707;2;Field  ;
                SourceExpr="Firm Planned" }

    { 1100528632;2;Field  ;
                SourceExpr="On Hold";
                Importance=Additional;
                OnValidate=BEGIN
                             OnHoldOnAfterValidate;
                           END;

                ShowMandatory=OnHoldMandatory }

    { 1100528634;2;Field  ;
                SourceExpr="Description On Hold";
                Importance=Additional;
                Editable=FALSE }

    { 1100528604;2;Field  ;
                SourceExpr="Travel Duration";
                ShowMandatory=TravelDurationMandatory }

    { 1100528606;2;Field  ;
                CaptionML=ENU=Resend Appointment Letter;
                SourceExpr=ServiceOrderExtension."Resend Appointment Letter";
                OnValidate=BEGIN
                             ServiceOrderExtension.VALIDATE("Resend Appointment Letter");
                             ServiceOrderExtension.UpdateServOrderExtension("No.");
                           END;
                            }

    { 1100528638;2;Field  ;
                SourceExpr="Preferred Employee No.";
                OnAssistEdit=VAR
                               PreferredEmployee@1100528800 : Record 11012843;
                             BEGIN
                             END;

                ShowMandatory=PreferredEmployeeNoMandatory }

    { 1100528640;2;Field  ;
                SourceExpr="Preferred Employee Name";
                Importance=Additional }

    { 1210190013;2;Field  ;
                SourceExpr=Watch;
                Importance=Additional;
                ShowMandatory=WatchMandatory }

    { 1100528643;2;Field  ;
                SourceExpr="Employee No.";
                OnValidate=BEGIN
                             IF "Employee No." <> xRec."Employee No." THEN BEGIN
                               CurrPage.SAVERECORD;
                               COMMIT;
                               UpdateWorkorderEmployee(FALSE);
                               GET("No.");
                               CurrPage.UPDATE(TRUE);
                             END;
                           END;

                OnLookup=VAR
                           ResourceNo@1100527000 : Code[20];
                         BEGIN
                           ResourceNo := "Employee No.";
                           LookupResourceEmpl(ResourceNo, TRUE);
                           IF ResourceNo <> "Employee No." THEN BEGIN
                             Text := ResourceNo;
                             EXIT(TRUE);
                           END;
                         END;

                ShowMandatory=EmployeeNoMandatory }

    { 1100528644;2;Field  ;
                DrillDown=No;
                SourceExpr="Employee Name";
                Editable=FALSE }

    { 1210190005;2;Field  ;
                SourceExpr=Subcontractor;
                OnValidate=BEGIN
                             IF Subcontractor <> xRec.Subcontractor THEN BEGIN
                               CurrPage.SAVERECORD;
                               COMMIT;
                               UpdateWorkorderSubcontractor(FALSE);
                               GET("No.");
                               CurrPage.UPDATE(TRUE);
                             END;
                           END;

                OnLookup=VAR
                           ResourceNo@1100528600 : Code[20];
                         BEGIN
                           ResourceNo := Subcontractor;
                           LookupResourceSubcontractor(ResourceNo, TRUE);
                           IF ResourceNo <> Subcontractor THEN BEGIN
                             Text := ResourceNo;
                             EXIT(TRUE);
                           END;
                         END;

                ShowMandatory=SubcontractorMandatory }

    { 1210190006;2;Field  ;
                SourceExpr="Subcontractor Name";
                Importance=Additional;
                Editable=FALSE }

    { 1100528304;2;Field  ;
                SourceExpr="FLS VisiTour ID";
                Visible=FLSButtonsVisible;
                ShowMandatory=FLSVisiTourIDMandatory }

    { 1100528610;2;Field  ;
                CaptionML=ENU=Publish on Subcontractors Portal;
                SourceExpr=PublishedOnSubcPortal;
                OnValidate=BEGIN
                             TogglePublishSubcontPort(PublishedOnSubcPortal);
                             PublishedOnSubcPortal := GetPublishSubcontPort;
                           END;
                            }

    { 1100525002;1;Part   ;
                CaptionML=ENU=Problem Text;
                SubPageLink=Table Name=CONST(Service Order),
                            No.=FIELD(No.),
                            Table Field=CONST(90);
                PagePartID=Page11125227;
                PartType=Page }

    { 1902768601;1;Group  ;
                CaptionML=ENU=Communication }

    { 1210190026;2;Field  ;
                SourceExpr="Contact Name";
                Importance=Promoted;
                OnLookup=BEGIN
                           ShowContact("Customer No.");
                         END;

                ShowMandatory=ContactNameMandatory }

    { 28  ;2   ;Field     ;
                CaptionML=ENU=Phone No.;
                SourceExpr="Phone No.";
                Importance=Promoted;
                ShowMandatory=PhoneNoMandatory }

    { 1100528601;2;Field  ;
                SourceExpr="Phone No. 2";
                Importance=Additional;
                ShowMandatory=PhoneNo2Mandatory }

    { 1100528603;2;Field  ;
                SourceExpr="Mobile Phone No.";
                ShowMandatory=MobilePhoneNoMandatory }

    { 63  ;2   ;Field     ;
                SourceExpr="E-Mail";
                Importance=Promoted;
                ShowMandatory=EMailMandatory }

    { 1100528605;2;Field  ;
                SourceExpr="Fax No.";
                ShowMandatory=FaxNoMandatory }

    { 1100528738;2;Field  ;
                CaptionML=ENU=Date Appointment Letter;
                SourceExpr=ServiceOrderExtension."Appointment Letter Code";
                TableRelation="SO Appointment Letter";
                Importance=Additional;
                Editable=FALSE }

    { 1100528737;2;Field  ;
                CaptionML=ENU=Date Appointment Letter Sent;
                SourceExpr=ServiceOrderExtension."Date Appointment Letter Sent";
                Importance=Standard;
                Editable=FALSE }

    { 1905596001;1;Group  ;
                CaptionML=ENU=Agreements }

    { 1100525210;2;Field  ;
                SourceExpr="Settlement Method" }

    { 1100525004;2;Field  ;
                SourceExpr="Currency Code";
                ShowMandatory=CurrencyCodeMandatory }

    { 1100525003;2;Field  ;
                SourceExpr="Order Amount";
                Importance=Promoted;
                ShowMandatory=OrderAmountMandatory }

    { 1100525204;2;Field  ;
                SourceExpr="Order Amount (LCY)";
                ShowMandatory=OrderAmountLCYMandatory }

    { 1100525205;2;Field  ;
                SourceExpr="Installment Scheme";
                ShowMandatory=InstallmentSchemeMandatory }

    { 1100528695;2;Field  ;
                SourceExpr="Limit Budget Hours";
                Importance=Additional;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;

                ShowMandatory=LimitBudgetHoursMandatory }

    { 1100528694;2;Field  ;
                SourceExpr="Limit Budget Labor";
                Importance=Additional;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;

                ShowMandatory=LimitBudgetLaborMandatory }

    { 1100528696;2;Field  ;
                SourceExpr="Limit Budget Material";
                Importance=Additional;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;

                ShowMandatory=LimitBudgetMaterialMandatory }

    { 1100528697;2;Field  ;
                SourceExpr="Limit Budget Total";
                Importance=Additional;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;

                ShowMandatory=LimitBudgetTotalMandatory }

    { 1100528616;2;Field  ;
                SourceExpr="Limit Budget Exceedance" }

    { 1100528730;2;Field  ;
                SourceExpr="Price Book Type";
                Importance=Additional;
                OnValidate=BEGIN
                             UnitPriceTypeOnAfterValidate;
                           END;
                            }

    { 1100528728;2;Field  ;
                Name=UnitPriceCode;
                CaptionML=ENU=Price Book Code;
                SourceExpr=ServiceOrderExtension."Price Book Code";
                Importance=Additional;
                Editable=UnitPriceCodeEditable;
                OnValidate=VAR
                             ServiceUnitPriceManagement@1100525000 : Codeunit 11012846;
                           BEGIN
                             ServiceOrderExtension.VALIDATE("Price Book Code");
                             ServiceOrderExtension.ValidateUnitPriceFields(Rec);
                             ServiceOrderExtension.UpdateServOrderExtension("No.");
                             ServiceOrderExtension."Price Book Index Date" :=
                               ServiceUnitPriceManagement.GetLatestPriceBookIndexDate("Price Book Type", ServiceOrderExtension."Price Book Code");
                           END;

                OnLookup=VAR
                           ServiceUnitPrice@1100528601 : Record 11071768;
                           ServiceUnitPriceList@1100528600 : Page 11125269;
                         BEGIN
                           ServiceUnitPrice.SETRANGE(Type, "Price Book Type");
                           ServiceUnitPriceList.LOOKUPMODE(TRUE);
                           ServiceUnitPriceList.SETTABLEVIEW(ServiceUnitPrice);
                           IF (ServiceUnitPriceList.RUNMODAL = ACTION::LookupOK) THEN BEGIN
                             ServiceUnitPriceList.GETRECORD(ServiceUnitPrice);
                             ServiceOrderExtension.VALIDATE("Price Book Code", ServiceUnitPrice.Code);
                             ServiceOrderExtension.VALIDATE("Price Book Index Date", ServiceUnitPrice."Index Date");
                             ServiceOrderExtension.ValidateUnitPriceFields(Rec);
                             ServiceOrderExtension.UpdateServOrderExtension("No.");
                           END;
                         END;
                          }

    { 1100528726;2;Field  ;
                Name=UnitPriceIndexDate;
                CaptionML=ENU=Price Book Index Date;
                SourceExpr=ServiceOrderExtension."Price Book Index Date";
                Importance=Additional;
                Editable=UnitPriceIndexDateEditable;
                OnValidate=BEGIN
                             ServiceOrderExtension.VALIDATE("Price Book Index Date");
                             ServiceOrderExtension.ValidateUnitPriceFieldsIncDate(Rec);
                             ServiceOrderExtension.UpdateServOrderExtension("No.");
                           END;
                            }

    { 1100528724;2;Field  ;
                SourceExpr="Unit Price Status";
                Importance=Additional;
                Editable="Unit Price StatusEditable" }

    { 1902736301;1;Group  ;
                CaptionML=ENU=Source }

    { 1100525015;2;Field  ;
                SourceExpr="Call No." }

    { 1100525062;2;Field  ;
                CaptionML=ENU=Calling Contact;
                SourceExpr=ServCallRec."Calling Contact";
                Importance=Promoted;
                Editable=FALSE }

    { 1100525064;2;Field  ;
                CaptionML=ENU=Calling Account;
                SourceExpr=ServCallRec."Calling Account";
                Importance=Promoted;
                Editable=FALSE }

    { 1100525068;2;Field  ;
                CaptionML=ENU=Calling Phone No.;
                SourceExpr=ServCallRec."Calling Phone No.";
                Editable=FALSE }

    { 190 ;2   ;Field     ;
                SourceExpr="Service Contract No.";
                Editable=FALSE;
                OnValidate=BEGIN
                             ServiceContractNoOnAfterValida;
                           END;

                OnLookup=BEGIN
                           LookupServiceContract;
                           CurrPage.UPDATE;
                         END;

                ShowMandatory=ServiceContractNoMandatory }

    { 1210190002;2;Field  ;
                SourceExpr="Service Location No.";
                OnValidate=BEGIN
                             ServiceLocationNoOnAfterValida;
                           END;

                OnLookup=BEGIN
                           LookupServiceLocation;
                           CurrPage.UPDATE;
                         END;

                ShowMandatory=TRUE }

    { 1100528611;2;Field  ;
                SourceExpr="Customer Feature";
                Importance=Additional }

    { 1100528713;2;Field  ;
                SourceExpr="Actual Reference Point";
                OnDrillDown=BEGIN
                              DrillDownActualRefPoint();
                            END;
                             }

    { 1100528715;2;Field  ;
                SourceExpr="Actual Reference Point Desc";
                Importance=Additional }

    { 1100528704;2;Field  ;
                SourceExpr=Status;
                Importance=Promoted;
                OnValidate=BEGIN
                             StatusOnAfterValidate;
                           END;
                            }

    { 1100525094;2;Field  ;
                CaptionML=ENU=Try-Out;
                SourceExpr=TryOutRelation;
                Importance=Additional;
                Editable=FALSE;
                OnLookup=BEGIN
                           TryOutRelationRec.ShowTryOut('', '', '', '', "No.", '', '', 1);
                         END;
                          }

    { 1100525093;2;Field  ;
                CaptionML=ENU=Try-Out Quote;
                SourceExpr=TryOutQuoteRelation;
                Importance=Additional;
                Editable=FALSE;
                OnLookup=BEGIN
                           TryOutRelationRec.ShowTryOut('', '', '', '', "No.", '', '', 2);
                         END;
                          }

    { 1100525097;2;Field  ;
                SourceExpr="Estimate No.";
                Importance=Additional;
                ShowMandatory=EstimateNoMandatory }

    { 1100525103;2;Field  ;
                SourceExpr="Sub-Estimate No.";
                Importance=Additional;
                ShowMandatory=SubEstimateNoMandatory }

    { 1100409001;2;Field  ;
                SourceExpr="Change Request No.";
                ShowMandatory=ChangeRequestNoMandatory }

    { 1100409000;2;Field  ;
                SourceExpr="Change Request Description";
                Importance=Additional }

    { 1100525166;2;Field  ;
                SourceExpr="Created on";
                Importance=Additional;
                ShowMandatory=CreatedonMandatory }

    { 1100525167;2;Field  ;
                Lookup=No;
                SourceExpr="Created by";
                Importance=Additional;
                ShowMandatory=CreatedbyMandatory }

    { 1100525160;2;Field  ;
                SourceExpr="Modified on";
                Importance=Additional;
                ShowMandatory=ModifiedonMandatory }

    { 1100525161;2;Field  ;
                Lookup=No;
                SourceExpr="Modified by";
                Importance=Additional;
                ShowMandatory=ModifiedbyMandatory }

    { 1100528602;2;Field  ;
                SourceExpr="Source Type" }

    { 1210190003;0;Container;
                ContainerType=FactBoxArea }

    { 1100529900;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                PartType=Page }

    { 1210190004;1;Part   ;
                SubPageLink=No.=FIELD(No.),
                            Department Filter=FIELD(Department Filter);
                PagePartID=Page11130486;
                PartType=Page }

    { 1100525000;1;Part   ;
                SubPageLink=No.=FIELD(No.),
                            Department Filter=FIELD(Department Filter);
                PagePartID=Page11130492;
                PartType=Page }

    { 1100525001;1;Part   ;
                SubPageLink=No.=FIELD(No.),
                            Department Filter=FIELD(Department Filter);
                PagePartID=Page11130483;
                PartType=Page }

    { 1210190012;1;Part   ;
                Name=ServiceOrderFlowFB;
                SubPageLink=Base Service Order No.=FIELD(Base Service Order No.),
                            Department Filter=FIELD(Department Filter);
                PagePartID=Page11125263;
                PartType=Page }

    { 1100528802;1;Part   ;
                Name=PurchaseLineServiceObjectFactbox;
                SubPageLink=Service Location No.=FIELD(Service Location No.);
                PagePartID=Page11229357;
                PartType=Page }

    { 1100528614;1;Part   ;
                Name=SignalsSF;
                CaptionML=ENU=Signals;
                PagePartID=Page11126442;
                PartType=Page }

    { 1100528619;1;Part   ;
                Name=ServiceOrderLimitBudgetFB;
                CaptionML=ENU=Limit Budget Exceedance;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page11126754;
                Visible=FALSE;
                PartType=Page }

    { 1100525013;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1100525010;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ServSetup@1210190010 : Record 11012800;
      UserSetup@1100485005 : Record 91;
      ServCallRec@1100525002 : Record 11012822;
      ServOrderRec@1210190002 : Record 11012823;
      EmplRec@1100485004 : Record 5200;
      PrefEmplRec@1100485001 : Record 11012843;
      TryOutRelationRec@1210190014 : Record 11012761;
      AdrsRec@1100485009 : Record 222;
      SignatureRec@1100525001 : Record 11020349;
      ServiceOrderExtension@1100528600 : Record 11071727;
      Mail@1012 : Codeunit 397;
      PrintDoc@1210190003 : Codeunit 229;
      SkipCheckBlockedByFSA@1100485007 : Boolean;
      TryOutRelation@1210190013 : Code[20];
      TryOutQuoteRelation@1210190012 : Code[20];
      NextOrder@1100485010 : Text[30];
      NumAdrs@1100485008 : Text[30];
      Text002@1100485006 : TextConst 'ENU=Modify/Delete not allowed, the Service Order is blocked by the Field Service.';
      DPA_IsHardFilter@1100000999 : Boolean;
      "Unit Price StatusEditable"@19064144 : Boolean INDATASET;
      UnitPriceIndexDateEditable@19010600 : Boolean INDATASET;
      UnitPriceCodeEditable@19055694 : Boolean INDATASET;
      FLSButtonsVisible@1100528000 : Boolean INDATASET;
      PublishedOnSubcPortal@1100528601 : Boolean;
      Description2Mandatory@1100528400 : Boolean;
      ContactPersonNoMandatory@1100528401 : Boolean;
      NameMandatory@1100528402 : Boolean;
      AddressMandatory@1100528403 : Boolean;
      Address2Mandatory@1100528404 : Boolean;
      PostCodeMandatory@1100528405 : Boolean;
      CityMandatory@1100528406 : Boolean;
      CountryRegionCodeMandatory@1100528407 : Boolean;
      DisciplineMandatory@1100528408 : Boolean;
      TradeSpecialityMandatory@1100528409 : Boolean;
      PriorityMandatory@1100528410 : Boolean;
      DateTimeExporttoFSAMandatory@1100528411 : Boolean;
      NextReferencePeriodMandatory@1100528412 : Boolean;
      NextDeadlineMandatory@1100528413 : Boolean;
      CauseofExclusionCodeMandatory@1100528414 : Boolean;
      FirstPossibleStartingDateMandatory@1100528415 : Boolean;
      FirstPossibleStartingTimeMandatory@1100528416 : Boolean;
      LastPossibleEndingDateMandatory@1100528417 : Boolean;
      LastPossibleEndingTimeMandatory@1100528418 : Boolean;
      StartingDateMandatory@1100528419 : Boolean;
      StartingTimeMandatory@1100528420 : Boolean;
      EndingDateMandatory@1100528421 : Boolean;
      EndingTimeMandatory@1100528422 : Boolean;
      ExpectedHoursMandatory@1100528423 : Boolean;
      DurationTimeMandatory@1100528424 : Boolean;
      OnHoldMandatory@1100528425 : Boolean;
      TravelDurationMandatory@1100528426 : Boolean;
      PreferredEmployeeNoMandatory@1100528427 : Boolean;
      WatchMandatory@1100528428 : Boolean;
      EmployeeNoMandatory@1100528429 : Boolean;
      SubcontractorMandatory@1100528430 : Boolean;
      FLSVisiTourIDMandatory@1100528431 : Boolean;
      ContactNameMandatory@1100528432 : Boolean;
      PhoneNoMandatory@1100528433 : Boolean;
      PhoneNo2Mandatory@1100528434 : Boolean;
      MobilePhoneNoMandatory@1100528435 : Boolean;
      EMailMandatory@1100528436 : Boolean;
      FaxNoMandatory@1100528437 : Boolean;
      CurrencyCodeMandatory@1100528438 : Boolean;
      OrderAmountMandatory@1100528439 : Boolean;
      OrderAmountLCYMandatory@1100528440 : Boolean;
      InstallmentSchemeMandatory@1100528441 : Boolean;
      LimitBudgetHoursMandatory@1100528442 : Boolean;
      LimitBudgetLaborMandatory@1100528443 : Boolean;
      LimitBudgetMaterialMandatory@1100528444 : Boolean;
      LimitBudgetTotalMandatory@1100528445 : Boolean;
      ServiceContractNoMandatory@1100528446 : Boolean;
      EstimateNoMandatory@1100528447 : Boolean;
      SubEstimateNoMandatory@1100528448 : Boolean;
      ChangeRequestNoMandatory@1100528449 : Boolean;
      CreatedonMandatory@1100528450 : Boolean;
      CreatedbyMandatory@1100528451 : Boolean;
      ModifiedonMandatory@1100528452 : Boolean;
      ModifiedbyMandatory@1100528453 : Boolean;

    PROCEDURE UpdateReferenceNorm@1100485003();
    VAR
      RefPeriodRec@1100485000 : Record 11020272;
    BEGIN
      CurrPage.UPDATE;
      RefPeriodRec.UpdateNorm(RefPeriodRec.Type::ServOrder, "No.");
      GET("No.");  //db, 06-11-06: previous function updates maintable; avoid SQL-message
    END;

    PROCEDURE StartServOrders@1100485002(lvAction@1100485000 : Integer;lvCount@1100485001 : Boolean) : Integer;
    VAR
      lvServOrderRec@1100485002 : Record 11012823;
    BEGIN
      lvServOrderRec.SETFILTER("No.", '<>%1', "No.");
      CASE lvAction OF
        0:
          BEGIN
            lvServOrderRec.SETCURRENTKEY("Service Contract No.");
            lvServOrderRec.SETRANGE("Service Contract No.", "Service Contract No.");
            IF (lvCount = TRUE) AND ("Service Contract No." = '') THEN EXIT(0);
          END;
        1:
          BEGIN
            lvServOrderRec.SETCURRENTKEY("Service Location No.");
            lvServOrderRec.SETRANGE("Service Location No.", "Service Location No.");
            IF (lvCount = TRUE) AND ("Service Location No." = '') THEN EXIT(0);
          END;
        2:
          BEGIN
            lvServOrderRec.SETCURRENTKEY("Call No.");
            lvServOrderRec.SETRANGE("Call No.", "Call No.");
            lvServOrderRec.SETRANGE("Source Type", lvServOrderRec."Source Type"::Call);
            IF (lvCount = TRUE) AND ("Call No." = '') THEN EXIT(0);
          END;
        3:
          BEGIN
            IF NOT lvCount THEN BEGIN
              IF "Base Service Order No." = '' THEN
                EXIT(0);
              lvServOrderRec.SETRANGE("No.", "Base Service Order No.");
              PAGE.RUNMODAL(PAGE::"Base Service Order", lvServOrderRec);
              EXIT(0);
            END ELSE BEGIN
              lvServOrderRec.SETCURRENTKEY("Base Service Order No.");
              lvServOrderRec.SETRANGE("Base Service Order No.", "Base Service Order No.");
              IF ("Base Service Order No."= '') THEN EXIT(0);
              EXIT(lvServOrderRec.COUNT);
            END;
          END;
      END;

      IF lvCount = FALSE THEN BEGIN
        PAGE.RUNMODAL(0, lvServOrderRec);
      END ELSE BEGIN
        EXIT(lvServOrderRec.COUNT);
      END;
    END;

    PROCEDURE GetNoOfServOrders@1100485001(lvAction@1100485001 : Integer) NumServOrder : Integer;
    BEGIN
      NumServOrder := StartServOrders(lvAction, TRUE);
      EXIT(NumServOrder);
    END;

    PROCEDURE GetInfo@1100525002() : Integer;
    VAR
      RecRef@1100525000 : RecordRef;
      DocumentLinkMgt@1100525001 : Codeunit 11012401;
    BEGIN
      RecRef.GETTABLE(Rec);

      EXIT(DocumentLinkMgt.GetInfo(RecRef))
    END;

    PROCEDURE ShowDocuments@1100525000();
    VAR
      RecRef@1100525000 : RecordRef;
      DocumentFilters@1100525001 : Codeunit 11012432;
    BEGIN
      RecRef.GETTABLE(Rec);
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, "Global Dimension 1 Code", FALSE, TRUE);
    END;

    PROCEDURE GetServCall@1100525001();
    BEGIN
      //db, 06-09-10: read call after removing to much flowfields
      IF NOT ServCallRec.GET("Call No.") THEN ServCallRec.INIT;
    END;

    PROCEDURE GetNoOfTryOuts@1100528600() : Integer;
    VAR
      TryoutCode@1100528600 : Code[20];
    BEGIN
      EXIT(TryOutRelationRec.GetNoOfTryOuts('', '', '', '', "No.", '', '', 1, TryoutCode));
    END;

    PROCEDURE GetNoOfTryOutQuotes@1100528602() : Integer;
    VAR
      TryoutCode@1100528600 : Code[20];
    BEGIN
      EXIT(TryOutRelationRec.GetNoOfTryOuts('', '', '', '', "No.", '', '', 2, TryoutCode));
    END;

    PROCEDURE UpdateEditable@1100528603();
    BEGIN
      "Unit Price StatusEditable" := "Price Book Type" <> "Price Book Type"::None;
      UnitPriceIndexDateEditable := "Price Book Type" <> "Price Book Type"::None;
      UnitPriceCodeEditable := "Price Book Type" <> "Price Book Type"::None;
    END;

    LOCAL PROCEDURE NameOnAfterValidate@19065884();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE AddressOnAfterValidate@19060866();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PostCodeOnAfterValidate@19007075();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CityOnAfterValidate@19023525();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CustomerNoC2OnAfterValidate@19059111();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE DescriptionOnAfterValidate@19030973();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE FirstPossibleStartingTimeOnAft@19003644();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE FirstPossibleStartingDateOnAft@19032865();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE LastPossibleEndingDateOnAfterV@19020180();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE LastPossibleEndingTimeOnAfterV@19066821();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE StartingDateOnAfterValidate@19020273();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE StartingTimeOnAfterValidate@19008557();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE EndingDateOnAfterValidate@19076447();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE EndingTimeOnAfterValidate@19075483();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE ExpectedHoursOnAfterValidate@19072443();
    BEGIN
      CurrPage.UPDATE;  //db, 14-08-09: M15017
    END;

    LOCAL PROCEDURE OnHoldOnAfterValidate@19064521();
    BEGIN
      CALCFIELDS("Description On Hold");
    END;

    LOCAL PROCEDURE EmployeeNoOnAfterValidate@19040646();
    BEGIN
      CALCFIELDS("Employee Name");
    END;

    LOCAL PROCEDURE DisciplineOnAfterValidate@19013243();
    BEGIN
      UpdateReferenceNorm;
    END;

    LOCAL PROCEDURE PriorityOnAfterValidate@19076862();
    BEGIN
      UpdateReferenceNorm;
    END;

    PROCEDURE TradeSpecialityOnAfterValidate@1100528604();
    BEGIN
      UpdateReferenceNorm;
    END;

    LOCAL PROCEDURE UnitPriceTypeOnAfterValidate@19065184();
    BEGIN
      UpdateEditable;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ServiceLocationNoOnAfterValida@19019562();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ServiceContractNoOnAfterValida@19025091();
    BEGIN
      CurrPage.UPDATE;
      UpdateReferenceNorm;
    END;

    LOCAL PROCEDURE CustomerNoC1100528700OnAfterVa@19064326();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE StatusOnAfterValidate@19072689();
    BEGIN
      SkipCheckBlockedByFSA := TRUE;  //* Bij 'OnValidate' van de tabel is al 'MODIFY(TRUE)' uitgevoerd, waarbij
                                      //* ook het actuele logmoment al is bijgewerkt.
      CurrPage.UPDATE();
      SkipCheckBlockedByFSA := FALSE;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    VAR
      RecRef@1100529900 : RecordRef;
    BEGIN
      xRec := Rec;
      NextOrder := ShowNextOrder(0);

      NumAdrs := AdrsRec.CheckAvailableAddress("Bill-to Customer No.", 3);

      GetSignature(SignatureRec,TRUE);  //db, 10-08-10
      GetServCall;

      RecRef.GETTABLE(Rec);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(TRUE);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode("Global Dimension 1 Code");

      PublishedOnSubcPortal := GetPublishSubcontPort;
      UpdateSignalRulesSF;
    END;

    LOCAL PROCEDURE FillShowMandatoryVariables@1100528401();
    BEGIN
      Description2Mandatory := FieldInCompletionControl(FIELDNO("Description 2"));
      ContactPersonNoMandatory := FieldInCompletionControl(FIELDNO("Contact Person No."));
      NameMandatory := FieldInCompletionControl(FIELDNO(Name));
      AddressMandatory := FieldInCompletionControl(FIELDNO(Address));
      Address2Mandatory := FieldInCompletionControl(FIELDNO("Address 2"));
      PostCodeMandatory := FieldInCompletionControl(FIELDNO("Post Code"));
      CityMandatory := FieldInCompletionControl(FIELDNO(City));
      CountryRegionCodeMandatory := FieldInCompletionControl(FIELDNO("Country/Region Code"));
      DisciplineMandatory := FieldInCompletionControl(FIELDNO(Discipline));
      TradeSpecialityMandatory := FieldInCompletionControl(FIELDNO("Trade Speciality"));
      PriorityMandatory := FieldInCompletionControl(FIELDNO(Priority));
      DateTimeExporttoFSAMandatory := FieldInCompletionControl(FIELDNO("Date/Time Export to FSA"));
      NextReferencePeriodMandatory := FieldInCompletionControl(FIELDNO("Next Reference Period"));
      NextDeadlineMandatory := FieldInCompletionControl(FIELDNO("Next Deadline"));
      CauseofExclusionCodeMandatory := FieldInCompletionControl(FIELDNO("Cause of Exclusion Code"));
      FirstPossibleStartingDateMandatory := FieldInCompletionControl(FIELDNO("First Possible Starting Date"));
      FirstPossibleStartingTimeMandatory := FieldInCompletionControl(FIELDNO("First Possible Starting Time"));
      LastPossibleEndingDateMandatory := FieldInCompletionControl(FIELDNO("Last Possible Ending Date"));
      LastPossibleEndingTimeMandatory := FieldInCompletionControl(FIELDNO("Last Possible Ending Time"));
      StartingDateMandatory := FieldInCompletionControl(FIELDNO("Starting Date"));
      StartingTimeMandatory := FieldInCompletionControl(FIELDNO("Starting Time"));
      EndingDateMandatory := FieldInCompletionControl(FIELDNO("Ending Date"));
      EndingTimeMandatory := FieldInCompletionControl(FIELDNO("Ending Time"));
      ExpectedHoursMandatory := FieldInCompletionControl(FIELDNO("Expected Hours"));
      DurationTimeMandatory := FieldInCompletionControl(FIELDNO("Duration Time"));
      OnHoldMandatory := FieldInCompletionControl(FIELDNO("On Hold"));
      TravelDurationMandatory := FieldInCompletionControl(FIELDNO("Travel Duration"));
      PreferredEmployeeNoMandatory := FieldInCompletionControl(FIELDNO("Preferred Employee No."));
      WatchMandatory := FieldInCompletionControl(FIELDNO(Watch));
      EmployeeNoMandatory := FieldInCompletionControl(FIELDNO("Employee No."));
      SubcontractorMandatory := FieldInCompletionControl(FIELDNO(Subcontractor));
      FLSVisiTourIDMandatory := FieldInCompletionControl(FIELDNO("FLS VisiTour ID"));
      ContactNameMandatory := FieldInCompletionControl(FIELDNO("Contact Name"));
      PhoneNoMandatory := FieldInCompletionControl(FIELDNO("Phone No."));
      PhoneNo2Mandatory := FieldInCompletionControl(FIELDNO("Phone No. 2"));
      MobilePhoneNoMandatory := FieldInCompletionControl(FIELDNO("Mobile Phone No."));
      EMailMandatory := FieldInCompletionControl(FIELDNO("E-Mail"));
      FaxNoMandatory := FieldInCompletionControl(FIELDNO("Fax No."));
      CurrencyCodeMandatory := FieldInCompletionControl(FIELDNO("Currency Code"));
      OrderAmountMandatory := FieldInCompletionControl(FIELDNO("Order Amount"));
      OrderAmountLCYMandatory := FieldInCompletionControl(FIELDNO("Order Amount (LCY)"));
      InstallmentSchemeMandatory := FieldInCompletionControl(FIELDNO("Installment Scheme"));
      LimitBudgetHoursMandatory := FieldInCompletionControl(FIELDNO("Limit Budget Hours"));
      LimitBudgetLaborMandatory := FieldInCompletionControl(FIELDNO("Limit Budget Labor"));
      LimitBudgetMaterialMandatory := FieldInCompletionControl(FIELDNO("Limit Budget Material"));
      LimitBudgetTotalMandatory := FieldInCompletionControl(FIELDNO("Limit Budget Total"));
      ServiceContractNoMandatory := FieldInCompletionControl(FIELDNO("Service Contract No."));
      EstimateNoMandatory := FieldInCompletionControl(FIELDNO("Estimate No."));
      SubEstimateNoMandatory := FieldInCompletionControl(FIELDNO("Sub-Estimate No."));
      ChangeRequestNoMandatory := FieldInCompletionControl(FIELDNO("Change Request No."));
      CreatedonMandatory := FieldInCompletionControl(FIELDNO("Created on"));
      CreatedbyMandatory := FieldInCompletionControl(FIELDNO("Created by"));
      ModifiedonMandatory := FieldInCompletionControl(FIELDNO("Modified on"));
      ModifiedbyMandatory := FieldInCompletionControl(FIELDNO("Modified by"));
    END;

    LOCAL PROCEDURE FieldInCompletionControl@1100528402(FieldNo@1100528400 : Integer) : Boolean;
    VAR
      ExtendedFieldProperty@1100528402 : Record 11020567;
      TableNo@1100528401 : Integer;
    BEGIN
      TableNo := DATABASE::"Service Order";
      EXIT(ExtendedFieldProperty.FieldInCompletionControl(TableNo, FieldNo));
    END;

    LOCAL PROCEDURE UpdateSignalRulesSF@1100528607();
    VAR
      CallIntakeSignalMgt@1100528600 : Codeunit 11012862;
    BEGIN
      CurrPage.SignalsSF.PAGE.UpdateRulesList(2, "No.", '', '', FALSE);
    END;

    BEGIN
    END.
  }
}

