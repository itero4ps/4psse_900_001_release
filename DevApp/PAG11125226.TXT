OBJECT Page 11125226 Service Order (Invoicing)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Service Order (Invoicing);
    InsertAllowed=No;
    SourceTable=Table11012823;
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=ENU=New,Process,Report,Order,Texts,Mail Documents;
    OnInit=BEGIN
             CreditLimitButtonVisible := TRUE;
             FillShowMandatoryVariables;
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 ServSetup.GET;
                 IF NOT UserSetup.GET(USERID) THEN UserSetup.INIT;

                 IF ServSetup."SO (Invoice) Ref. Point Filter" <> '' THEN
                   SETFILTER("Actual Reference Point (Gantt)", ServSetup."SO (Invoice) Ref. Point Filter");
               END;

    OnAfterGetRecord=VAR
                       Source@1100528800 : 'ServiceLocation,ServiceObject,ServiceOrder';
                     BEGIN
                       CurrPage.PurchaseLineServiceObjectFactbox.PAGE.SetSource(Source::ServiceOrder, "No.");

                       IF TryOutRelationRec.READPERMISSION THEN BEGIN
                         TryOutRelation := TryOutRelationRec.GetTryOut('', '', '', '', "No.", '', '', 1);
                         TryOutQuoteRelation := TryOutRelationRec.GetTryOut('', '', '', '', "No.", '', '', 2);
                       END;

                       GetInfo;
                       CALCFIELDS("Actual Reference Point Desc", "Open (Purchase)", "Received/Not Invoiced",
                         "Open Ovh. Surch. Firm (Purch.)", "Open Ovh. Surch. (Hours)", "Open Ovh. Surch. (Inventory)",
                         "Contact No.");
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02

                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    OnModifyRecord=BEGIN
                     IF SkipCheckBlockedByFSA THEN
                       SkipCheckBlockedByFSA := FALSE
                     ELSE BEGIN
                       IF CheckBlockedByFSA() THEN
                         ERROR(Text002);
                     END;
                     UpdateSignalRulesSF;
                   END;

    OnDeleteRecord=BEGIN
                     IF CheckBlockedByFSA() THEN
                       ERROR(Text002);
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 138     ;1   ;ActionGroup;
                      CaptionML=ENU=Service &Order }
      { 1100528601;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Service Order (General);
                      RunObject=Page 11125209;
                      RunPageLink=No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Document;
                      PromotedCategory=Process }
      { 1100525008;2 ;Action    ;
                      ShortCutKey=Ctrl+S;
                      CaptionML=ENU=Base Service Order;
                      RunObject=Page 11126291;
                      RunPageLink=No.=FIELD(Base Service Order No.);
                      Image=ServiceOrderSetup }
      { 1100529001;2 ;Action    ;
                      CaptionML=ENU=Work Orders;
                      Image=HRSetup;
                      OnAction=VAR
                                 ServiceOrderInfoMgt@1100529000 : Codeunit 11012841;
                               BEGIN
                                 ServiceOrderInfoMgt.ShowSOWorkOrders("No.");
                               END;
                                }
      { 1100525524;2 ;Action    ;
                      CaptionML=ENU=Extra Cost;
                      RunObject=Page 11125104;
                      RunPageLink=Entity Type=CONST(Service Order),
                                  Entity Code=FIELD(No.);
                      Visible=false;
                      Image=ChangePaymentTolerance }
      { 1100525298;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=&Dimensions;
                      RunObject=Page 540;
                      RunPageLink=Table ID=CONST(11012823),
                                  No.=FIELD(No.);
                      Visible=false;
                      Image=Dimensions }
      { 1100525006;2 ;Action    ;
                      Name=Preference Locations;
                      CaptionML=ENU=Preference &Locations;
                      RunObject=Page 11072043;
                      RunPageView=SORTING(Priority);
                      RunPageLink=Type=CONST(Service Order),
                                  No.=FIELD(No.);
                      Visible=false;
                      Image=Company }
      { 1100525307;2 ;Action    ;
                      CaptionML=ENU=Service Order Locations;
                      RunObject=Page 11125140;
                      RunPageLink=Service Order No.=FIELD(No.);
                      Visible=false;
                      Image=ServiceZones }
      { 1100485107;2 ;Action    ;
                      CaptionML=ENU=Reference Periods;
                      RunObject=Page 11020670;
                      RunPageView=SORTING(Type,Document No.);
                      RunPageLink=Type=CONST(ServOrder),
                                  Document No.=FIELD(No.);
                      Visible=false;
                      Image=CalculatePlan }
      { 1100485135;2 ;Action    ;
                      CaptionML=ENU=Reference Points;
                      RunObject=Page 11020345;
                      RunPageLink=Type=CONST(ServOrder),
                                  Document No.=FIELD(No.);
                      Visible=false;
                      Image=EntriesList }
      { 1100485072;2 ;Action    ;
                      CaptionML=ENU=Log&book;
                      RunObject=Page 11020471;
                      RunPageLink=Document No.=FIELD(No.),
                                  Document Type=CONST(ServOrder);
                      Visible=false;
                      Image=Timesheet }
      { 1100525299;2 ;Action    ;
                      CaptionML=ENU=Signature;
                      RunObject=Page 11125109;
                      RunPageLink=Service Order No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Signature;
                      PromotedCategory=Category4 }
      { 1210190151;2 ;Action    ;
                      CaptionML=ENU=Do&cuments;
                      Visible=false;
                      Image=Documents;
                      OnAction=BEGIN
                                 ShowDocuments;  //db, 21-05-10
                               END;
                                }
      { 1199197400;2 ;Action    ;
                      CaptionML=ENU=Document &Relations;
                      RunObject=Page 11012413;
                      RunPageView=SORTING(Document Type,No.,Related Document No.)
                                  WHERE(Document Type=CONST(Service Order));
                      RunPageLink=No.=FIELD(No.);
                      Visible=false;
                      Image=Relationship }
      { 1210190143;2 ;Action    ;
                      CaptionML=ENU=Try-out;
                      Visible=false;
                      Image=Document;
                      OnAction=BEGIN
                                 TryOutRelationRec.ShowTryOut('', '', '', '', "No.", '', '', 1);
                               END;
                                }
      { 1210190144;2 ;Action    ;
                      CaptionML=ENU=Try-out &Quote;
                      Visible=false;
                      Image=Quote;
                      OnAction=BEGIN
                                 TryOutRelationRec.ShowTryOut('', '', '', '', "No.", '', '', 2);
                               END;
                                }
      { 1210190150;2 ;Action    ;
                      CaptionML=ENU=Purchase Orders;
                      Image=Document;
                      OnAction=BEGIN
                                 ShowPurchaseOrdersForServiceOrder;
                               END;
                                }
      { 1100485017;2 ;Action    ;
                      CaptionML=ENU=History Service Order;
                      Visible=false;
                      Image=History;
                      OnAction=BEGIN
                                 GetHistoryServiceOrder(FALSE);
                               END;
                                }
      { 1100525010;1 ;ActionGroup;
                      CaptionML=ENU=Finance }
      { 1100528621;2 ;Action    ;
                      CaptionML=ENU=Finance;
                      RunObject=Page 11126098;
                      RunPageLink=No.=FIELD(No.);
                      Image=Costs }
      { 1210190000;2 ;Action    ;
                      CaptionML=ENU=Invoices;
                      Image=Invoice;
                      OnAction=BEGIN
                                 ShowInvoice(FALSE);
                               END;
                                }
      { 155     ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Service and Maintenance &Ledger Entry;
                      RunObject=Page 11012826;
                      RunPageView=SORTING(Service Order No.);
                      RunPageLink=Service Order No.=FIELD(No.);
                      Image=GLRegisters }
      { 1210190038;2 ;Action    ;
                      CaptionML=ENU=Credit Memos;
                      Image=CreditMemo;
                      OnAction=BEGIN
                                 ShowInvoice(TRUE);
                               END;
                                }
      { 1100525009;1 ;ActionGroup;
                      CaptionML=ENU=Navigate }
      { 1210190014;2 ;Action    ;
                      CaptionML=ENU=Objects;
                      RunObject=Page 11125210;
                      RunPageView=SORTING(Service Order No.,Object No.,Maintenance Scheme);
                      RunPageLink=Service Order No.=FIELD(No.);
                      Promoted=Yes;
                      Image=WorkCenterLoad;
                      PromotedCategory=Category4 }
      { 1210190010;2 ;Action    ;
                      CaptionML=ENU=Cost Plus Entries;
                      RunObject=Page 11126280;
                      RunPageLink=Service Order No.=FIELD(No.);
                      Promoted=Yes;
                      Image=AdjustEntries;
                      PromotedCategory=Category4 }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 18      ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1210190037;2 ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=ENU=Generate Invoice;
                      Image=Invoice;
                      OnAction=BEGIN
                                 CreateSalesInvoiceViaCollList;
                               END;
                                }
      { 1100528602;2 ;Action    ;
                      CaptionML=ENU=Transfer Cost/Revenue to Project;
                      Image=CopyBudget;
                      OnAction=BEGIN
                                 TransferCostRevToProject;
                               END;
                                }
      { 1210190043;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Print Cost Plus &Entry;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 ServiceOrder@1100525001 : Record 11012823;
                               BEGIN
                                 ServiceOrder.SETRANGE("No.", "No.");
                                 PrintDoc.PrintServCostPlus(ServiceOrder);  //db, 25-06-07
                               END;
                                }
      { 1210190062;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Service &Order Reports;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 PrintDoc.PrintServOrder(Rec);
                               END;
                                }
      { 1100525017;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Service Order Text Reports;
                      Image=PostPrint;
                      OnAction=BEGIN
                                 PrintDoc.PrintServOrderTexts(Rec);
                               END;
                                }
      { 1100525005;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Print &Debrief Check List (4PS-Mobile);
                      Image=Allocations;
                      OnAction=VAR
                                 ServiceOrder@1100525000 : Record 11012823;
                                 DebriefCheckList@1100525001 : Report 11012931;
                               BEGIN
                                 TESTFIELD("No.");
                                 ServiceOrder.SETRANGE("No.", "No.");
                                 DebriefCheckList.SETTABLEVIEW(ServiceOrder);
                                 DebriefCheckList.RUNMODAL;
                               END;
                                }
      { 1100525311;2 ;Action    ;
                      ShortCutKey=Ctrl+K;
                      CaptionML=ENU=Completeness Check;
                      Image=CheckList;
                      OnAction=VAR
                                 CheckRecordCompletion@1100525000 : Codeunit 11012252;
                                 RecRef@1100525001 : RecordRef;
                               BEGIN
                                 RecRef.GETTABLE(Rec);
                                 CheckRecordCompletion.ShowIncompleteFields(RecRef);
                               END;
                                }
      { 1100528659;2 ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=ENU=Make Chargeable;
                      Promoted=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1100525001 : Record 11012823;
                               BEGIN
                                 //mg.sc, 15-04-13: C006726
                                 ServiceOrder := Rec;
                                 ServiceOrder.UpdateToNextRefPoint(2); // Make Chargeable
                                 //mg.ec, 15-04-13: C006726
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100525007;1 ;ActionGroup;
                      CaptionML=ENU=Mail Documents;
                      ActionContainerType=NewDocumentItems }
      { 1100409000;2 ;Action    ;
                      CaptionML=ENU=Bill-to Customer;
                      Promoted=Yes;
                      Image=MailAttachment;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 Contact@1100409000 : Record 5050;
                                 Customer@1100409001 : Record 18;
                               BEGIN
                                 TESTFIELD("Bill-to Customer No.");
                                 IF Contact.GetContactByCustomer("Bill-to Customer No.", Contact, TRUE) THEN BEGIN
                                   Customer.GET("Bill-to Customer No.");
                                   EditDocuments(Contact."No.", '', TRUE, Customer."E-Mail");
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=ENU=General }

    { 34  ;2   ;Field     ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               xRec."Source Type" := "Source Type"::Direct;
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;

                ShowMandatory=TRUE }

    { 99  ;2   ;Field     ;
                SourceExpr=Description;
                OnValidate=BEGIN
                             DescriptionOnAfterValidate;
                           END;

                ShowMandatory=TRUE }

    { 1100528800;2;Field  ;
                SourceExpr="Description 2";
                Importance=Additional;
                ShowMandatory=Description2Mandatory }

    { 1100525197;2;Field  ;
                SourceExpr="Bill-to Customer No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             BilltoCustomerNoOnAfterValidat;
                           END;

                ShowMandatory=BilltoCustomerNoMandatory }

    { 1100525211;2;Field  ;
                CaptionML=ENU=No. of Alternative Addresses;
                SourceExpr=NumAdrs;
                Editable=FALSE }

    { 1100525216;2;Field  ;
                SourceExpr="Alternative Bill-to Address";
                ShowMandatory=AlternativeBilltoAddressMandatory }

    { 1100525318;2;Field  ;
                SourceExpr="Bill-to Contact Person";
                ShowMandatory=BilltoContactPersonMandatory }

    { 1100525358;2;Field  ;
                SourceExpr="Bill-to Contact Person Name";
                Importance=Additional }

    { 1100525198;2;Field  ;
                SourceExpr="Bill-to Name";
                ShowMandatory=BilltoNameMandatory }

    { 1100525213;2;Field  ;
                SourceExpr="Bill-to Name 2";
                Importance=Additional;
                ShowMandatory=BilltoName2Mandatory }

    { 1100525199;2;Field  ;
                SourceExpr="Bill-to Address";
                ShowMandatory=BilltoAddressMandatory }

    { 1100525212;2;Field  ;
                SourceExpr="Bill-to Address 2";
                Importance=Additional;
                ShowMandatory=BilltoAddress2Mandatory }

    { 1100525200;2;Field  ;
                SourceExpr="Bill-to Post Code";
                ShowMandatory=BilltoPostCodeMandatory }

    { 1100525221;2;Field  ;
                SourceExpr="Bill-to City";
                ShowMandatory=BilltoCityMandatory }

    { 1100525020;2;Field  ;
                SourceExpr="VAT Bus. Posting Group";
                Importance=Additional }

    { 1100528619;2;Field  ;
                SourceExpr="VAT Prod. Posting Group";
                ShowMandatory=VATProdPostingGroupMandatory }

    { 126 ;2   ;Field     ;
                SourceExpr="Your Reference";
                ShowMandatory=YourReferenceMandatory }

    { 1100485133;2;Field  ;
                CaptionML=ENU=Commission;
                SourceExpr="Order No. Customer";
                OnValidate=BEGIN
                             OrderNoCustomerOnAfterValidate;
                           END;

                ShowMandatory=OrderNoCustomerMandatory }

    { 1100525361;2;Field  ;
                Description=Niet Weggooien;
                SourceExpr="Bill-to Contact No.";
                Visible=FALSE }

    { 1210190004;2;Field  ;
                SourceExpr="Commision Date";
                ShowMandatory=CommisionDateMandatory }

    { 1210190024;2;Field  ;
                SourceExpr="Source Type";
                Importance=Promoted;
                Editable=FALSE }

    { 190 ;2   ;Field     ;
                SourceExpr="Service Contract No.";
                Editable=FALSE;
                OnValidate=BEGIN
                             ServiceContractNoC190OnAfterVa;
                             UpdateEditable;
                           END;

                OnLookup=BEGIN
                           LookupServiceContract;
                           CurrPage.UPDATE;
                         END;

                ShowMandatory=ServiceContractNoMandatory }

    { 1100528663;2;Field  ;
                SourceExpr="Next Deadline";
                ShowMandatory=NextDeadlineMandatory }

    { 1210190041;2;Field  ;
                SourceExpr="Territory Code";
                ShowMandatory=TerritoryCodeMandatory }

    { 25  ;2   ;Field     ;
                Lookup=No;
                SourceExpr=Priority;
                OnValidate=BEGIN
                             PriorityOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               AssistEditPriority;
                               PriorityOnAfterValidate;
                             END;

                ShowMandatory=PriorityMandatory }

    { 47  ;2   ;Field     ;
                SourceExpr=Status;
                Importance=Promoted;
                OnValidate=BEGIN
                             StatusOnAfterValidate;
                           END;
                            }

    { 1210190055;2;Field  ;
                SourceExpr="Order Kind";
                ShowMandatory=OrderKindMandatory }

    { 1210190002;2;Field  ;
                SourceExpr="Service Package";
                ShowMandatory=ServicePackageMandatory }

    { 1100528623;2;Field  ;
                SourceExpr="Settlement Method" }

    { 1100528633;2;Field  ;
                SourceExpr="Collective List No.";
                ShowMandatory=CollectiveListNoMandatory }

    { 1100409002;2;Field  ;
                SourceExpr="Payment Method Code (SO Inv.)";
                ShowMandatory=PaymentMethodCodeSOInvMandatory }

    { 1100529000;2;Field  ;
                SourceExpr="Direct Debit Mandate ID";
                ShowMandatory=DirectDebitMandateIDMandatory }

    { 1100409003;2;Field  ;
                SourceExpr="On Hold";
                ShowMandatory=OnHoldMandatory }

    { 1100525002;1;Part   ;
                CaptionML=ENU=Problem Text;
                SubPageLink=Table Name=CONST(Service Order),
                            No.=FIELD(No.),
                            Table Field=CONST(90);
                PagePartID=Page11125227;
                PartType=Page }

    { 1905885101;1;Group  ;
                CaptionML=ENU=Invoicing }

    { 1100528632;2;Field  ;
                CaptionClass=Text19056489 }

    { 1100528631;2;Field  ;
                CaptionML=ENU=All;
                SourceExpr="Additional Cost";
                Importance=Standard;
                Editable=AdditionalCostEditable }

    { 1100528627;2;Field  ;
                CaptionML=ENU=Labor;
                SourceExpr="Additional Cost (Labor)";
                Importance=Promoted;
                Editable=AdditionalCostsEditable }

    { 1100528628;2;Field  ;
                CaptionML=ENU=Material;
                SourceExpr="Additional Cost (Material)";
                Importance=Promoted;
                Editable=AdditionalCostsEditable }

    { 1100528629;2;Field  ;
                CaptionML=ENU=Subcontracting;
                SourceExpr="Additional Cost (Subc)";
                Importance=Promoted;
                Editable=AdditionalCostsEditable }

    { 1100528630;2;Field  ;
                CaptionML=ENU=Plant;
                SourceExpr="Additional Cost (Plant)";
                Importance=Promoted;
                Editable=AdditionalCostsEditable }

    { 1100528625;2;Field  ;
                CaptionML=ENU=Sundry;
                SourceExpr="Additional Cost (Sundry)";
                Importance=Promoted;
                Editable=AdditionalCostsEditable }

    { 1100525021;2;Field  ;
                SourceExpr="Collect Invoices By" }

    { 1905596001;1;Group  ;
                CaptionML=ENU=Agreements }

    { 1100525018;2;Field  ;
                SourceExpr="Payment Terms Code";
                ShowMandatory=PaymentTermsCodeMandatory }

    { 1100525004;2;Field  ;
                SourceExpr="Currency Code";
                Importance=Promoted;
                ShowMandatory=CurrencyCodeMandatory }

    { 1100525003;2;Field  ;
                SourceExpr="Order Amount";
                Importance=Promoted;
                ShowMandatory=OrderAmountMandatory }

    { 1100525204;2;Field  ;
                SourceExpr="Order Amount (LCY)";
                ShowMandatory=OrderAmountLCYMandatory }

    { 1100525205;2;Field  ;
                SourceExpr="Installment Scheme";
                ShowMandatory=InstallmentSchemeMandatory }

    { 1100528672;2;Field  ;
                SourceExpr="Invoice Base Method";
                Editable=InvoiceBaseMethodEditable;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100528675;2;Field  ;
                SourceExpr="Invoice Base Hours";
                Editable=InvoiceBaseAmountsEditable;
                ShowMandatory=InvoiceBaseHoursMandatory }

    { 1100528669;2;Field  ;
                SourceExpr="Invoice Base Amount Labor";
                Editable=InvoiceBaseAmountsEditable;
                ShowMandatory=InvoiceBaseAmountLaborMandatory }

    { 1100528671;2;Field  ;
                SourceExpr="Invoice Base Amount Material";
                Editable=InvoiceBaseAmountsEditable;
                ShowMandatory=InvoiceBaseAmountMaterialMandatory }

    { 1100528673;2;Field  ;
                SourceExpr="Invoice Base Amount Total";
                Editable=InvoiceBaseAmountsEditable;
                ShowMandatory=InvoiceBaseAmountTotalMandatory }

    { 1100525013;2;Field  ;
                SourceExpr="Limit Budget Hours";
                Importance=Additional;
                ShowMandatory=LimitBudgetHoursMandatory }

    { 1100525014;2;Field  ;
                SourceExpr="Limit Budget Labor";
                Importance=Additional;
                ShowMandatory=LimitBudgetLaborMandatory }

    { 1100525015;2;Field  ;
                SourceExpr="Limit Budget Material";
                Importance=Additional;
                ShowMandatory=LimitBudgetMaterialMandatory }

    { 1100525016;2;Field  ;
                SourceExpr="Limit Budget Total";
                Importance=Additional;
                ShowMandatory=LimitBudgetTotalMandatory }

    { 1100528604;2;Field  ;
                SourceExpr="Limit Budget Exceedance" }

    { 1100525243;2;Field  ;
                SourceExpr="Invoice Price";
                Importance=Promoted;
                OnDrillDown=BEGIN
                              CostPlusRec.RESET;
                              CostPlusRec.SETRANGE("Service Order No.", "No.");
                              CostPlusRec.SETRANGE(Invoiced, FALSE);
                              PAGE.RUN(PAGE::"Service Order Cost Plus SF2", CostPlusRec);
                            END;
                             }

    { 1100525244;2;Field  ;
                SourceExpr="Invoiced Price" }

    { 1100525245;2;Field  ;
                SourceExpr="Invoice in Process" }

    { 1100525246;2;Field  ;
                SourceExpr="Credit Memo in Process" }

    { 1902575401;1;Group  ;
                CaptionML=ENU=Amount }

    { 1210190013;2;Field  ;
                SourceExpr="Actual Costs";
                Importance=Promoted;
                Editable=FALSE }

    { 1210190016;2;Field  ;
                SourceExpr="Actual Hours";
                Editable=FALSE }

    { 1210190011;2;Field  ;
                CaptionML=ENU=Open Hours;
                SourceExpr="Open Amount (Hours)";
                Editable=FALSE;
                OnDrillDown=VAR
                              HourLineRec@1210190000 : Record 11012039;
                              HourLineFrm@1100485001 : Page 11012277;
                            BEGIN
                              HourLineRec.SETRANGE("Service Order No.", "No.");
                              HourLineFrm.SetSelection(DATABASE::"Service Order Cost Plus Entry", "No.", '', '', '', FALSE);
                              HourLineFrm.SETTABLEVIEW(HourLineRec);
                              HourLineFrm.RUNMODAL();
                              CurrPage.UPDATE(TRUE);
                            END;
                             }

    { 1210190015;2;Field  ;
                SourceExpr="Open Hours";
                Editable=FALSE;
                OnDrillDown=VAR
                              HourLineRec@1210190001 : Record 11012039;
                              HourLineFrm@1210190000 : Page 11012277;
                            BEGIN
                              HourLineRec.SETRANGE("Service Order No.", "No.");
                              HourLineFrm.SetSelection(DATABASE::"Service Order Cost Plus Entry", "No.", '', '', '', FALSE);
                              HourLineFrm.SETTABLEVIEW(HourLineRec);
                              HourLineFrm.RUNMODAL();
                              CurrPage.UPDATE(TRUE);
                            END;
                             }

    { 1210190005;2;Field  ;
                CaptionML=ENU=Open (Purchase) + Rec./Not Inv.;
                SourceExpr="Open (Purchase)" + "Received/Not Invoiced";
                Editable=FALSE;
                OnDrillDown=VAR
                              OpenPurchaseListServOrder@1100525000 : Page 11125133;
                            BEGIN
                              OpenPurchaseListServOrder.LOOKUPMODE(TRUE);
                              OpenPurchaseListServOrder.SetSelection(DATABASE::"Service Order Cost Plus Entry","No.");
                              OpenPurchaseListServOrder.RUNMODAL;
                              CurrPage.UPDATE(TRUE);
                            END;
                             }

    { 1210190009;2;Field  ;
                SourceExpr="Open (Inventory)";
                Editable=FALSE;
                OnDrillDown=VAR
                              ItemJournalLine@1100525000 : Record 83;
                              ItemJournalLinesFrm@1100525001 : Page 519;
                            BEGIN
                              //mg, 16-12-10: M21844
                              ItemJournalLine.SETRANGE("Service Order No.", "No.");
                              ItemJournalLinesFrm.SetSelection(DATABASE::"Service Order Cost Plus Entry", "No.", '', '', '', FALSE);
                              ItemJournalLinesFrm.SETTABLEVIEW(ItemJournalLine);
                              ItemJournalLinesFrm.RUNMODAL();
                              CurrPage.UPDATE(TRUE);
                            END;
                             }

    { 1210190007;2;Field  ;
                CaptionML=ENU=Open (Overhead Surcharge);
                SourceExpr="Open Ovh. Surch. Firm (Purch.)"+"Open Ovh. Surch. Soft (Purch.)"+"Open Ovh. Surch. (Hours)"+"Open Ovh. Surch. (Inventory)";
                Editable=FALSE }

    { 1100409001;2;Field  ;
                SourceExpr="Invoice Cost";
                Importance=Promoted }

    { 1902736301;1;Group  ;
                CaptionML=ENU=Source }

    { 1100525019;2;Field  ;
                SourceExpr="Call No." }

    { 1100525062;2;Field  ;
                CaptionML=ENU=Calling Contact;
                SourceExpr=ServCallRec."Calling Contact";
                Importance=Promoted;
                Editable=FALSE }

    { 1100525064;2;Field  ;
                CaptionML=ENU=Calling Account;
                SourceExpr=ServCallRec."Calling Account";
                Editable=FALSE }

    { 1100525068;2;Field  ;
                CaptionML=ENU=Calling Phone No.;
                SourceExpr=ServCallRec."Calling Phone No.";
                Editable=FALSE }

    { 1100528638;2;Field  ;
                SourceExpr="Service Location No.";
                OnValidate=BEGIN
                             ServiceLocationNoOnAfterValida;
                           END;

                OnLookup=BEGIN
                           LookupServiceLocation;
                           CurrPage.UPDATE;
                         END;

                ShowMandatory=TRUE }

    { 1100528600;2;Field  ;
                SourceExpr="Customer Feature";
                Importance=Additional }

    { 1100528635;2;Field  ;
                SourceExpr="Customer No.";
                OnValidate=BEGIN
                             CustomerNoOnAfterValidate;
                           END;

                ShowMandatory=TRUE }

    { 1100528637;2;Field  ;
                SourceExpr="Customer Name";
                Importance=Promoted;
                Editable=FALSE }

    { 1100528655;2;Field  ;
                SourceExpr="Actual Reference Point";
                OnDrillDown=BEGIN
                              DrillDownActualRefPoint();
                            END;
                             }

    { 1100528657;2;Field  ;
                SourceExpr="Actual Reference Point Desc";
                Importance=Additional }

    { 1100525094;2;Field  ;
                CaptionML=ENU=Try-Out;
                SourceExpr=TryOutRelation;
                Importance=Additional;
                Editable=FALSE;
                OnLookup=BEGIN
                           TryOutRelationRec.ShowTryOut('', '', '', '', "No.", '', '', 1);
                         END;
                          }

    { 1100525093;2;Field  ;
                CaptionML=ENU=Try-Out Quote;
                SourceExpr=TryOutQuoteRelation;
                Importance=Additional;
                Editable=FALSE;
                OnLookup=BEGIN
                           TryOutRelationRec.ShowTryOut('', '', '', '', "No.", '', '', 2);
                         END;
                          }

    { 1100525097;2;Field  ;
                SourceExpr="Estimate No.";
                Importance=Additional;
                ShowMandatory=EstimateNoMandatory }

    { 1100525103;2;Field  ;
                SourceExpr="Sub-Estimate No.";
                Importance=Additional;
                ShowMandatory=SubEstimateNoMandatory }

    { 1100409005;2;Field  ;
                SourceExpr="Change Request No.";
                ShowMandatory=ChangeRequestNoMandatory }

    { 1100409004;2;Field  ;
                SourceExpr="Change Request Description";
                Importance=Additional }

    { 1100528646;2;Field  ;
                SourceExpr="Created on";
                Importance=Additional;
                ShowMandatory=CreatedonMandatory }

    { 1100528645;2;Field  ;
                Lookup=No;
                SourceExpr="Created by";
                Importance=Additional;
                ShowMandatory=CreatedbyMandatory }

    { 1100528644;2;Field  ;
                SourceExpr="Modified on";
                Importance=Additional;
                ShowMandatory=ModifiedonMandatory }

    { 1100528643;2;Field  ;
                Lookup=No;
                SourceExpr="Modified by";
                Importance=Additional;
                ShowMandatory=ModifiedbyMandatory }

    { 1210190008;0;Container;
                ContainerType=FactBoxArea }

    { 1100529900;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                PartType=Page }

    { 1210190003;1;Part   ;
                SubPageLink=No.=FIELD(No.),
                            Department Filter=FIELD(Department Filter);
                PagePartID=Page11130486;
                PartType=Page }

    { 1100525000;1;Part   ;
                SubPageLink=No.=FIELD(No.),
                            Department Filter=FIELD(Department Filter);
                PagePartID=Page11130492;
                PartType=Page }

    { 1100525001;1;Part   ;
                SubPageLink=No.=FIELD(No.),
                            Department Filter=FIELD(Department Filter);
                PagePartID=Page11130483;
                PartType=Page }

    { 1210190006;1;Part   ;
                Name=ServiceOrderFlowFB;
                CaptionML=ENU=Service Order Structure;
                SubPageView=SORTING(Base Service Order No.);
                SubPageLink=Base Service Order No.=FIELD(Base Service Order No.),
                            Department Filter=FIELD(Department Filter);
                PagePartID=Page11125263;
                PartType=Page }

    { 1100528802;1;Part   ;
                Name=PurchaseLineServiceObjectFactbox;
                SubPageLink=Service Location No.=FIELD(Service Location No.);
                PagePartID=Page11229357;
                PartType=Page }

    { 1100528603;1;Part   ;
                Name=SignalsSF;
                CaptionML=ENU=Signals;
                PagePartID=Page11126442;
                PartType=Page }

    { 1100528605;1;Part   ;
                Name=ServiceOrderLimitBudgetFB;
                CaptionML=ENU=Limit Budget Exceedance;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page11126754;
                Visible=FALSE;
                PartType=Page }

    { 1100525012;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1100525011;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ServSetup@1210190010 : Record 11012800;
      UserSetup@1100485005 : Record 91;
      ServCallRec@1100525002 : Record 11012822;
      ServOrderRec@1210190002 : Record 11012823;
      CostPlusRec@1210190001 : Record 11012825;
      EmplRec@1100485004 : Record 5200;
      PrefEmplRec@1100485001 : Record 11012843;
      TryOutRelationRec@1210190014 : Record 11012761;
      AdrsRec@1100485009 : Record 222;
      SignatureRec@1100525001 : Record 11020349;
      Mail@1012 : Codeunit 397;
      PrintDoc@1210190003 : Codeunit 229;
      SkipCheckBlockedByFSA@1100485007 : Boolean;
      TryOutRelation@1210190013 : Code[20];
      TryOutQuoteRelation@1210190012 : Code[20];
      NumAdrs@1100485008 : Text[30];
      Text002@1100485006 : TextConst 'ENU=Modify/Delete not allowed, the Service Order is blocked by the Field Service.';
      DPA_IsHardFilter@1100000999 : Boolean;
      CreditLimitButtonVisible@19033344 : Boolean INDATASET;
      Text19056489@19045898 : TextConst 'ENU=Additional Cost';
      InvoiceBaseMethodEditable@1210190004 : Boolean INDATASET;
      InvoiceBaseAmountsEditable@1210190006 : Boolean INDATASET;
      AdditionalCostEditable@1210190007 : Boolean INDATASET;
      AdditionalCostsEditable@1210190008 : Boolean INDATASET;
      Description2Mandatory@1100528400 : Boolean;
      BilltoCustomerNoMandatory@1100528401 : Boolean;
      AlternativeBilltoAddressMandatory@1100528402 : Boolean;
      BilltoContactPersonMandatory@1100528403 : Boolean;
      BilltoNameMandatory@1100528404 : Boolean;
      BilltoName2Mandatory@1100528405 : Boolean;
      BilltoAddressMandatory@1100528406 : Boolean;
      BilltoAddress2Mandatory@1100528407 : Boolean;
      BilltoPostCodeMandatory@1100528408 : Boolean;
      BilltoCityMandatory@1100528409 : Boolean;
      VATProdPostingGroupMandatory@1100528410 : Boolean;
      YourReferenceMandatory@1100528411 : Boolean;
      OrderNoCustomerMandatory@1100528412 : Boolean;
      CommisionDateMandatory@1100528413 : Boolean;
      ServiceContractNoMandatory@1100528414 : Boolean;
      NextDeadlineMandatory@1100528415 : Boolean;
      TerritoryCodeMandatory@1100528416 : Boolean;
      PriorityMandatory@1100528417 : Boolean;
      OrderKindMandatory@1100528418 : Boolean;
      ServicePackageMandatory@1100528419 : Boolean;
      CollectiveListNoMandatory@1100528420 : Boolean;
      PaymentMethodCodeSOInvMandatory@1100528421 : Boolean;
      DirectDebitMandateIDMandatory@1100528422 : Boolean;
      OnHoldMandatory@1100528423 : Boolean;
      PaymentTermsCodeMandatory@1100528424 : Boolean;
      CurrencyCodeMandatory@1100528425 : Boolean;
      OrderAmountMandatory@1100528426 : Boolean;
      OrderAmountLCYMandatory@1100528427 : Boolean;
      InstallmentSchemeMandatory@1100528428 : Boolean;
      InvoiceBaseHoursMandatory@1100528429 : Boolean;
      InvoiceBaseAmountLaborMandatory@1100528430 : Boolean;
      InvoiceBaseAmountMaterialMandatory@1100528431 : Boolean;
      InvoiceBaseAmountTotalMandatory@1100528432 : Boolean;
      LimitBudgetHoursMandatory@1100528433 : Boolean;
      LimitBudgetLaborMandatory@1100528434 : Boolean;
      LimitBudgetMaterialMandatory@1100528435 : Boolean;
      LimitBudgetTotalMandatory@1100528436 : Boolean;
      EstimateNoMandatory@1100528437 : Boolean;
      SubEstimateNoMandatory@1100528438 : Boolean;
      ChangeRequestNoMandatory@1100528439 : Boolean;
      CreatedonMandatory@1100528440 : Boolean;
      CreatedbyMandatory@1100528441 : Boolean;
      ModifiedonMandatory@1100528442 : Boolean;
      ModifiedbyMandatory@1100528443 : Boolean;

    PROCEDURE UpdateReferenceNorm@1100485003();
    VAR
      RefPeriodRec@1100485000 : Record 11020272;
    BEGIN
      CurrPage.UPDATE;
      RefPeriodRec.UpdateNorm(RefPeriodRec.Type::ServOrder, "No.");
      GET("No.");  //db, 06-11-06: previous function updates maintable; avoid SQL-message
    END;

    PROCEDURE StartServOrders@1100485002(lvAction@1100485000 : Integer;lvCount@1100485001 : Boolean) : Integer;
    VAR
      lvServOrderRec@1100485002 : Record 11012823;
    BEGIN
      lvServOrderRec.SETFILTER("No.", '<>%1', "No.");
      CASE lvAction OF
        0:
          BEGIN
            lvServOrderRec.SETCURRENTKEY("Service Contract No.");
            lvServOrderRec.SETRANGE("Service Contract No.", "Service Contract No.");
            IF (lvCount = TRUE) AND ("Service Contract No." = '') THEN EXIT(0);
          END;
        1:
          BEGIN
            lvServOrderRec.SETCURRENTKEY("Service Location No.");
            lvServOrderRec.SETRANGE("Service Location No.", "Service Location No.");
            IF (lvCount = TRUE) AND ("Service Location No." = '') THEN EXIT(0);
          END;
        2:
          BEGIN
            lvServOrderRec.SETCURRENTKEY("Call No.");
            lvServOrderRec.SETRANGE("Call No.", "Call No.");
            lvServOrderRec.SETRANGE("Source Type", lvServOrderRec."Source Type"::Call);
            IF (lvCount = TRUE) AND ("Call No." = '') THEN EXIT(0);
          END;
        3:
          BEGIN
            IF NOT lvCount THEN BEGIN
              IF "Base Service Order No." = '' THEN
                EXIT(0);
              lvServOrderRec.SETRANGE("No.", "Base Service Order No.");
              PAGE.RUNMODAL(PAGE::"Base Service Order", lvServOrderRec);
              EXIT(0);
            END ELSE BEGIN
              lvServOrderRec.SETCURRENTKEY("Base Service Order No.");
              lvServOrderRec.SETRANGE("Base Service Order No.", "Base Service Order No.");
              IF ("Base Service Order No."= '') THEN EXIT(0);
              EXIT(lvServOrderRec.COUNT);
            END;
          END;
      END;

      IF lvCount = FALSE THEN BEGIN
        PAGE.RUNMODAL(0, lvServOrderRec);
      END ELSE BEGIN
        EXIT(lvServOrderRec.COUNT);
      END;
    END;

    PROCEDURE GetNoOfServOrders@1100485001(lvAction@1100485001 : Integer) NumServOrder : Integer;
    BEGIN
      NumServOrder := StartServOrders(lvAction, TRUE);
      EXIT(NumServOrder);
    END;

    PROCEDURE GetInfo@1100525002() : Integer;
    VAR
      RecRef@1100525000 : RecordRef;
      DocumentLinkMgt@1100525001 : Codeunit 11012401;
    BEGIN
      RecRef.GETTABLE(Rec);

      EXIT(DocumentLinkMgt.GetInfo(RecRef))
    END;

    PROCEDURE ShowDocuments@1100525000();
    VAR
      RecRef@1100525000 : RecordRef;
      DocumentFilters@1100525001 : Codeunit 11012432;
    BEGIN
      RecRef.GETTABLE(Rec);
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, "Global Dimension 1 Code", FALSE, TRUE);
    END;

    PROCEDURE GetServCall@1100525001();
    BEGIN
      //db, 06-09-10: read call after removing to much flowfields
      IF NOT ServCallRec.GET("Call No.") THEN ServCallRec.INIT;
    END;

    PROCEDURE GetNoOfTryOuts@1100528600() : Integer;
    VAR
      TryoutCode@1100528600 : Code[20];
    BEGIN
      EXIT(TryOutRelationRec.GetNoOfTryOuts('', '', '', '', "No.", '', '', 1, TryoutCode));
    END;

    PROCEDURE GetNoOfTryOutQuotes@1100528602() : Integer;
    VAR
      TryoutCode@1100528600 : Code[20];
    BEGIN
      EXIT(TryOutRelationRec.GetNoOfTryOuts('', '', '', '', "No.", '', '', 2, TryoutCode));
    END;

    PROCEDURE UpdateEditable@1100528603();
    BEGIN
      InvoiceBaseMethodEditable := "Base Service Order No." = "No.";
      InvoiceBaseAmountsEditable := "Invoice Base Method" <> "Invoice Base Method"::" ";
      AdditionalCostEditable :=
        NOT ServSetup."Add.Cost Based On Contr.Disc." AND (("Source Type" <> "Source Type"::Direct) OR ("Service Contract No." = ''));
      AdditionalCostsEditable :=
        ServSetup."Add.Cost Based On Contr.Disc." AND (("Source Type" <> "Source Type"::Direct) OR ("Service Contract No." = ''));
      //DP01008.sn
      IF ("Base Service Order" = FALSE) THEN BEGIN
        IF ("Collect Invoices By" <> "Collect Invoices By"::BaseOrder) THEN
          InvoiceBaseMethodEditable := TRUE
        ELSE
          InvoiceBaseAmountsEditable := FALSE;
      END;
      //DP01008.en
    END;

    LOCAL PROCEDURE DescriptionOnAfterValidate@19030973();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ServiceContractNoC190OnAfterVa@19017659();
    BEGIN
      CurrPage.UPDATE;
      UpdateReferenceNorm;
    END;

    LOCAL PROCEDURE StatusOnAfterValidate@19072689();
    BEGIN
      SkipCheckBlockedByFSA := TRUE;  //* Bij 'OnValidate' van de tabel is al 'MODIFY(TRUE)' uitgevoerd, waarbij
                                      //* ook het actuele logmoment al is bijgewerkt.
      CurrPage.UPDATE();
      SkipCheckBlockedByFSA := FALSE;
    END;

    LOCAL PROCEDURE PriorityOnAfterValidate@19076862();
    BEGIN
      UpdateReferenceNorm;
    END;

    LOCAL PROCEDURE BilltoCustomerNoOnAfterValidat@19044114();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OrderNoCustomerOnAfterValidate@19028010();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CustomerNoOnAfterValidate@19016267();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ServiceLocationNoOnAfterValida@19019562();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ServiceContractNoC1100528648On@19054337();
    BEGIN
      CurrPage.UPDATE;
      UpdateReferenceNorm;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    VAR
      RecRef@1100529900 : RecordRef;
    BEGIN
      xRec := Rec;
      NumAdrs := AdrsRec.CheckAvailableAddress("Bill-to Customer No.", 3);

      GetSignature(SignatureRec,TRUE);  //db, 10-08-10
      GetServCall;
      CreditLimitButtonVisible := (ActivateCreditLimit(0));  //db, 16-12-10: M23068
      CurrPage.ServiceOrderFlowFB.PAGE.SetCurrServiceOrderNo("No.");

      UpdateEditable;
      RecRef.GETTABLE(Rec);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(TRUE);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode("Global Dimension 1 Code");

      UpdateSignalRulesSF;
    END;

    LOCAL PROCEDURE FillShowMandatoryVariables@1100528401();
    BEGIN
      Description2Mandatory := FieldInCompletionControl(FIELDNO("Description 2"));
      BilltoCustomerNoMandatory := FieldInCompletionControl(FIELDNO("Bill-to Customer No."));
      AlternativeBilltoAddressMandatory := FieldInCompletionControl(FIELDNO("Alternative Bill-to Address"));
      BilltoContactPersonMandatory := FieldInCompletionControl(FIELDNO("Bill-to Contact Person"));
      BilltoNameMandatory := FieldInCompletionControl(FIELDNO("Bill-to Name"));
      BilltoName2Mandatory := FieldInCompletionControl(FIELDNO("Bill-to Name 2"));
      BilltoAddressMandatory := FieldInCompletionControl(FIELDNO("Bill-to Address"));
      BilltoAddress2Mandatory := FieldInCompletionControl(FIELDNO("Bill-to Address 2"));
      BilltoPostCodeMandatory := FieldInCompletionControl(FIELDNO("Bill-to Post Code"));
      BilltoCityMandatory := FieldInCompletionControl(FIELDNO("Bill-to City"));
      VATProdPostingGroupMandatory := FieldInCompletionControl(FIELDNO("VAT Prod. Posting Group"));
      YourReferenceMandatory := FieldInCompletionControl(FIELDNO("Your Reference"));
      OrderNoCustomerMandatory := FieldInCompletionControl(FIELDNO("Order No. Customer"));
      CommisionDateMandatory := FieldInCompletionControl(FIELDNO("Commision Date"));
      ServiceContractNoMandatory := FieldInCompletionControl(FIELDNO("Service Contract No."));
      NextDeadlineMandatory := FieldInCompletionControl(FIELDNO("Next Deadline"));
      TerritoryCodeMandatory := FieldInCompletionControl(FIELDNO("Territory Code"));
      PriorityMandatory := FieldInCompletionControl(FIELDNO(Priority));
      OrderKindMandatory := FieldInCompletionControl(FIELDNO("Order Kind"));
      ServicePackageMandatory := FieldInCompletionControl(FIELDNO("Service Package"));
      CollectiveListNoMandatory := FieldInCompletionControl(FIELDNO("Collective List No."));
      PaymentMethodCodeSOInvMandatory := FieldInCompletionControl(FIELDNO("Payment Method Code (SO Inv.)"));
      DirectDebitMandateIDMandatory := FieldInCompletionControl(FIELDNO("Direct Debit Mandate ID"));
      OnHoldMandatory := FieldInCompletionControl(FIELDNO("On Hold"));
      PaymentTermsCodeMandatory := FieldInCompletionControl(FIELDNO("Payment Terms Code"));
      CurrencyCodeMandatory := FieldInCompletionControl(FIELDNO("Currency Code"));
      OrderAmountMandatory := FieldInCompletionControl(FIELDNO("Order Amount"));
      OrderAmountLCYMandatory := FieldInCompletionControl(FIELDNO("Order Amount (LCY)"));
      InstallmentSchemeMandatory := FieldInCompletionControl(FIELDNO("Installment Scheme"));
      InvoiceBaseHoursMandatory := FieldInCompletionControl(FIELDNO("Invoice Base Hours"));
      InvoiceBaseAmountLaborMandatory := FieldInCompletionControl(FIELDNO("Invoice Base Amount Labor"));
      InvoiceBaseAmountMaterialMandatory := FieldInCompletionControl(FIELDNO("Invoice Base Amount Material"));
      InvoiceBaseAmountTotalMandatory := FieldInCompletionControl(FIELDNO("Invoice Base Amount Total"));
      LimitBudgetHoursMandatory := FieldInCompletionControl(FIELDNO("Limit Budget Hours"));
      LimitBudgetLaborMandatory := FieldInCompletionControl(FIELDNO("Limit Budget Labor"));
      LimitBudgetMaterialMandatory := FieldInCompletionControl(FIELDNO("Limit Budget Material"));
      LimitBudgetTotalMandatory := FieldInCompletionControl(FIELDNO("Limit Budget Total"));
      EstimateNoMandatory := FieldInCompletionControl(FIELDNO("Estimate No."));
      SubEstimateNoMandatory := FieldInCompletionControl(FIELDNO("Sub-Estimate No."));
      ChangeRequestNoMandatory := FieldInCompletionControl(FIELDNO("Change Request No."));
      CreatedonMandatory := FieldInCompletionControl(FIELDNO("Created on"));
      CreatedbyMandatory := FieldInCompletionControl(FIELDNO("Created by"));
      ModifiedonMandatory := FieldInCompletionControl(FIELDNO("Modified on"));
      ModifiedbyMandatory := FieldInCompletionControl(FIELDNO("Modified by"));
    END;

    LOCAL PROCEDURE FieldInCompletionControl@1100528402(FieldNo@1100528400 : Integer) : Boolean;
    VAR
      ExtendedFieldProperty@1100528402 : Record 11020567;
      TableNo@1100528401 : Integer;
    BEGIN
      TableNo := DATABASE::"Service Order";
      EXIT(ExtendedFieldProperty.FieldInCompletionControl(TableNo, FieldNo));
    END;

    LOCAL PROCEDURE UpdateSignalRulesSF@1100528607();
    VAR
      CallIntakeSignalMgt@1100528600 : Codeunit 11012862;
    BEGIN
      CurrPage.SignalsSF.PAGE.UpdateRulesList(2, "No.", '', '', FALSE);
    END;

    BEGIN
    END.
  }
}

