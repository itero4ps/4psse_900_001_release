OBJECT Page 11125229 Create Service Order from Call
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Create Service Order from Call;
    SourceTable=Table11012823;
    DataCaptionExpr='';
    PageType=NavigatePage;
    SourceTableTemporary=Yes;
    OnOpenPage=BEGIN
                 //**4PS.sn
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS.en
                 INIT;
                 "Order Kind" := StdOrderKind;
                 "Order Type" := StdOrderType;
                 Discipline := StdObjDiscipline;
                 "Trade Speciality" := StdObjTradeSpeciality;
                 INSERT;
               END;

    OnNewRecord=BEGIN
                  //**4PS.sn
                  DPA_SetDefaultDepartment;
                  //**4PS.en
                END;

    OnInsertRecord=VAR
                     xRecRef@1100525000 : RecordRef;
                   BEGIN
                     //**4PS.sn
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS.en
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528609;1 ;Action    ;
                      CaptionML=ENU=Finish;
                      InFooterBar=Yes;
                      Image=Completed;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceCall@1100528601 : Record 11012822;
                                 ServiceOrder@1210190001 : Record 11012823;
                                 DocumentPrint@1210190002 : Codeunit 229;
                                 ReplanServiceOrder@1100528600 : Page 11126465;
                               BEGIN
                                 ServiceCall.GET(ServiceCallNo);
                                 ServiceCall.VALIDATE("Next Step");//C012059
                                 IF ServiceCall."Employee No." <> TmpServiceCall."Employee No." THEN
                                   ServiceCall.VALIDATE("Employee No.", TmpServiceCall."Employee No.");
                                 IF ServiceCall.Subcontractor <> TmpServiceCall.Subcontractor THEN
                                   ServiceCall.VALIDATE(Subcontractor, TmpServiceCall.Subcontractor);
                                 IF ServiceCall."Export to FSA" <> TmpServiceCall."Export to FSA" THEN
                                   ServiceCall.VALIDATE("Export to FSA", TmpServiceCall."Export to FSA");
                                 IF ServiceCall."Publish on Subcontr. Portal" <> TmpServiceCall."Publish on Subcontr. Portal" THEN
                                   ServiceCall.VALIDATE("Publish on Subcontr. Portal", TmpServiceCall."Publish on Subcontr. Portal");
                                 ServiceCall.MODIFY(TRUE);
                                 COMMIT; // needed for next call in case of related no. series

                                 ServiceCall.GenerateServiceOrder("Order Kind", "Order Type", Discipline, "Trade Speciality");

                                 IF ServiceOrder.GET(ServiceCall."Service Order No.") THEN BEGIN
                                   IF PrintWorkSheet THEN BEGIN
                                     COMMIT;
                                     DocumentPrint.PrintServiceOrderWorksheet(ServiceOrder);
                                   END;
                                 END;
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100525000;1;Field  ;
                CaptionML=ENU=Create Service Order;
                Style=Strong;
                StyleExpr=TRUE }

    { 1100528603;1;Field  ;
                SourceExpr="Order Kind" }

    { 1100528600;1;Field  ;
                SourceExpr="Order Type" }

    { 1100528605;1;Field  ;
                SourceExpr=Discipline }

    { 1100528607;1;Field  ;
                SourceExpr="Trade Speciality" }

    { 1210190004;1;Field  ;
                CaptionML=ENU=Employee No.;
                SourceExpr=TmpServiceCall."Employee No.";
                TableRelation="Resource (WOP)" WHERE (Type=CONST(Employee));
                OnValidate=BEGIN
                             TmpServiceCall.VALIDATE("Employee No.");
                           END;
                            }

    { 1100525001;1;Field  ;
                CaptionML=ENU=Subcontractor;
                SourceExpr=TmpServiceCall.Subcontractor;
                TableRelation="Resource (WOP)".No. WHERE (Type=CONST(Subcontractor)) }

    { 1210190000;1;Field  ;
                CaptionML=ENU=Export to FSA;
                SourceExpr=TmpServiceCall."Export to FSA";
                OnValidate=BEGIN
                             TmpServiceCall.VALIDATE("Export to FSA");
                           END;
                            }

    { 1100528602;1;Field  ;
                CaptionML=ENU=Publish on Subcontractor Portal;
                SourceExpr=TmpServiceCall."Publish on Subcontr. Portal";
                OnValidate=BEGIN
                             TmpServiceCall.VALIDATE("Publish on Subcontr. Portal");
                           END;
                            }

    { 1210190002;1;Field  ;
                CaptionML=ENU=Print Worksheet;
                SourceExpr=PrintWorkSheet }

    { 1100528601;1;Field  ;
                CaptionML=ENU=Next Step;
                OptionCaptionML=ENU=" ,Service Order Card,Plan Service Order";
                SourceExpr=NextStep }

  }
  CODE
  {
    VAR
      TmpServiceCall@1100528603 : TEMPORARY Record 11012822;
      ServiceCallNo@1100528600 : Code[20];
      StdOrderKind@1100528605 : Code[10];
      StdOrderType@1100528604 : Code[10];
      StdObjDiscipline@1100528601 : Code[10];
      StdObjTradeSpeciality@1100528602 : Code[10];
      PrintWorkSheet@1210190001 : Boolean;
      DPA_IsHardFilter@1100525000 : Boolean;
      NextStep@1100528606 : ' ,Service Order Card,Plan Service Order';

    PROCEDURE SetDefaults@1100528601(IServiceCallNo@1100528600 : Code[20]);
    VAR
      ServiceCall@1100528602 : Record 11012822;
      ServiceObject@1100528601 : Record 11071691;
      ServiceSourceTypeSetup@1100528603 : Record 11071726;
    BEGIN
      ServiceCallNo := IServiceCallNo;

      ServiceCall.GET(ServiceCallNo);
      TmpServiceCall := ServiceCall;
      TmpServiceCall."No." := '';

      IF NOT ServiceSourceTypeSetup.GET(ServiceSourceTypeSetup."Source Type"::Call) THEN
        ServiceSourceTypeSetup.INIT;

      IF ServiceCall."Order Kind" = '' THEN BEGIN
        StdOrderKind := ServiceSourceTypeSetup."Order Kind";
      END ELSE BEGIN
        StdOrderKind := ServiceCall."Order Kind";
      END;
      IF ServiceCall."Order Type" = '' THEN BEGIN
        StdOrderType := ServiceSourceTypeSetup."Order Type";
      END ELSE BEGIN
        StdOrderType := ServiceCall."Order Type";
      END;

      IF ServiceObject.GET(ServiceCall."Object No.") THEN BEGIN
        ServiceObject.CALCFIELDS(Discipline, "Trade Speciality");
      END;
      StdObjDiscipline := ServiceCall.Discipline;
      StdObjTradeSpeciality := ServiceCall."Trade Speciality";
    END;

    PROCEDURE GetNextStep@1100528600(VAR ONextStep@1100528600 : ' ,Service Order Card,Plan Service Order');
    BEGIN
      ONextStep := NextStep;
    END;

    BEGIN
    {
      4PS.MG: Do not use SaveValues
    }
    END.
  }
}

