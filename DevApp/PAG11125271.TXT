OBJECT Page 11125271 Service Unit Price List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Service Unit Price List;
    SourceTable=Table11071769;
    PageType=List;
    CardPageID=Service Unit Price;
    OnInit=BEGIN
             CopyBtnEnable := TRUE;
           END;

    OnOpenPage=BEGIN
                 CopyBtnEnable := IsCopyProcess;
                 CurrPage.EDITABLE(NOT IsCopyProcess);
                 IF (IsCopyProcess) THEN BEGIN
                   FILTERGROUP(9);
                   SETRANGE("Price Book Type", UnitPriceType);
                   SETRANGE("Price Book Code", UnitPriceCode);
                   SETRANGE("Index Date", UnitPriceIndexDate);
                   FILTERGROUP(0);
                   SETFILTER(Part, '%1|%2', '', UnitPricePart); // Not mandatory
                 END;
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528620;1 ;Action    ;
                      Name=CopyBtn;
                      CaptionML=ENU=Copy;
                      Promoted=Yes;
                      Enabled=CopyBtnEnable;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CopyUnitPriceLines;
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100528600;1;Group  ;
                GroupType=Repeater }

    { 1100528601;2;Field  ;
                SourceExpr="Price Book Type" }

    { 1100528603;2;Field  ;
                SourceExpr="Price Book Code" }

    { 1100528605;2;Field  ;
                SourceExpr="Index Date" }

    { 1100528607;2;Field  ;
                SourceExpr=Code }

    { 1100528609;2;Field  ;
                SourceExpr=Description }

    { 1100528611;2;Field  ;
                SourceExpr="Unit Price" }

    { 1100528613;2;Field  ;
                SourceExpr="Unit of Measure" }

    { 1100528615;2;Field  ;
                SourceExpr=Quantity }

    { 1100528700;2;Field  ;
                SourceExpr=Part }

    { 1100528602;2;Field  ;
                SourceExpr=Discipline }

    { 1100528604;2;Field  ;
                SourceExpr="Trade Speciality" }

  }
  CODE
  {
    VAR
      IsCopyProcess@1100528600 : Boolean;
      ServiceOrderNo@1100528601 : Code[20];
      UnitPriceType@1100528602 : Option;
      UnitPriceCode@1100528603 : Code[20];
      UnitPriceIndexDate@1100528604 : Date;
      UnitPriceLineCode@1100528605 : Code[20];
      UnitPricePart@1100528700 : Code[20];
      UnitPriceRoom@1100528606 : Code[20];
      CopyBtnEnable@19067989 : Boolean INDATASET;
      CopyUsed@1100528607 : Boolean;

    PROCEDURE CopyUnitPriceLines@1100528600();
    VAR
      ServiceUnitPrice@1100528600 : Record 11071769;
      OldServiceUnitPrice@1100525000 : Record 11071769;
      SUPRecordingLine@1100528601 : Record 11071772;
      SUPRoomRelationLine@1100528602 : Record 11071983;
      LineNo@1100528603 : Integer;
    BEGIN
      IF NOT IsCopyProcess THEN
        EXIT;

      CopyUsed := TRUE;

      OldServiceUnitPrice.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(Rec);
      ServiceUnitPrice.COPY(Rec);
      Rec.COPY(OldServiceUnitPrice);

      IF ServiceOrderNo <> '' THEN BEGIN
        SUPRecordingLine.SETRANGE("Service Order No.", ServiceOrderNo);
        IF SUPRecordingLine.FINDLAST THEN
          LineNo := SUPRecordingLine."Line No.";
        IF ServiceUnitPrice.FINDFIRST THEN BEGIN
          REPEAT
            LineNo += 10000;
            SUPRecordingLine."Service Order No." := ServiceOrderNo;
            SUPRecordingLine."Line No." := LineNo;
            SUPRecordingLine."Price Book Type" := ServiceUnitPrice."Price Book Type";
            SUPRecordingLine."Price Book Code" := ServiceUnitPrice."Price Book Code";
            SUPRecordingLine."Index Date" := ServiceUnitPrice."Index Date";
            SUPRecordingLine.VALIDATE("Unit Price Code", ServiceUnitPrice.Code);
            SUPRecordingLine.Part := ServiceUnitPrice.Part;
            SUPRecordingLine.Room := UnitPriceRoom;
            IF SUPRecordingLine.INSERT(TRUE) THEN;
          UNTIL ServiceUnitPrice.NEXT = 0;
        END;
      END ELSE BEGIN
        IF UnitPriceType = SUPRoomRelationLine."Price Book Type"::Customer THEN BEGIN
          SUPRoomRelationLine.SETRANGE("Customer No.", ServiceUnitPrice."Price Book Code");
          SUPRoomRelationLine.SETRANGE("Room Code", UnitPriceRoom);
          SUPRoomRelationLine.SETRANGE("Index Date", ServiceUnitPrice."Index Date");
          IF SUPRoomRelationLine.FINDLAST THEN
            LineNo := SUPRoomRelationLine."Line No.";
          IF ServiceUnitPrice.FINDFIRST THEN BEGIN
            REPEAT
              LineNo += 10000;
              SUPRoomRelationLine.INIT;
              SUPRoomRelationLine."Line No." := LineNo;
              SUPRoomRelationLine."Customer No." := ServiceUnitPrice."Price Book Code";
              SUPRoomRelationLine."Room Code" := UnitPriceRoom;
              SUPRoomRelationLine."Index Date" := ServiceUnitPrice."Index Date";
              SUPRoomRelationLine."Price Book Type" := ServiceUnitPrice."Price Book Type";
              SUPRoomRelationLine."Price Book Code" := ServiceUnitPrice."Price Book Code";
              SUPRoomRelationLine."Unit Price Code" := ServiceUnitPrice.Code;
              SUPRoomRelationLine.INSERT(TRUE);
            UNTIL ServiceUnitPrice.NEXT = 0;
          END;
        END;
      END;
    END;

    PROCEDURE SetCopyFilter@1100528601(SONo@1100528605 : Code[20];UPType@1100528604 : Option;UPCode@1100528603 : Code[20];UPIndexDate@1100528602 : Date;UPLineCode@1100528601 : Code[20];UPPart@1100528700 : Code[20];UPRoom@1100528600 : Code[20]);
    BEGIN
      IsCopyProcess := TRUE;
      ServiceOrderNo := SONo;

      UnitPriceType := UPType;
      UnitPriceCode := UPCode;
      UnitPriceIndexDate := UPIndexDate;
      UnitPriceLineCode := UPLineCode;
      UnitPricePart := UPPart;
      UnitPriceRoom := UPRoom;
    END;

    PROCEDURE GetCopyUsed@1100528602() : Boolean;
    BEGIN
      EXIT(CopyUsed);
    END;

    BEGIN
    END.
  }
}

