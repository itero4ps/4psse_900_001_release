OBJECT Page 11125327 Estimate Line Sales NEW
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Estimate Line (Sales);
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11072072;
    DataCaptionExpr=GetDataCaptionEstPart;
    DelayedInsert=No;
    PageType=List;
    AutoSplitKey=Yes;
    ShowFilter=No;
    OnInit=BEGIN
             InitEditable;  //db, 01-07-14: T005104
           END;

    OnOpenPage=BEGIN
                 GetFilterZeroLines;
                 IF ServSetup.READPERMISSION THEN
                   ServSetup.GET;
                 CheckFiltergroup4;  //db, 09-06-15
                 ShowPartActions := EstRec.StructurePresent("Estimate No.");   //DP00909
               END;

    OnAfterGetRecord=BEGIN
                       RefQuote := RouteRefMgtCU.GetQuoteOfReference("Purchase Route Reference");
                       GetItemSpecifications;
                       DeviatingQuantityBln := ("Quantity (Sales)"<>Quantity);  //C027431
                     END;

    OnModifyRecord=BEGIN
                     CheckEstEditable;
                     IF NOT FixedOff THEN BEGIN
                       CurrPage.UPDATE(FALSE);
                       ERROR(Text001);
                     END;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           CheckEstEditable;
                           SetEditable;

                           GetPartTotals(EstPartRec, TotalPartCost, TotalPartSales, TotalPartGross);  //DP00381

                           CALCFIELDS("Quantity Model Exist");
                           IF Recipe <> '' THEN BEGIN
                             CALCFIELDS("Total Recipe");
                           END;
                         END;

    ActionList=ACTIONS
    {
      { 1100528973;  ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100528972;1 ;Action    ;
                      Name=Totals;
                      CaptionML=ENU=Totals;
                      RunObject=Page 11125328;
                      RunPageLink=Estimate No.=FIELD(Estimate No.),
                                  Sub-Estimate No.=FIELD(Sub-Estimate No.),
                                  Part Group=FIELD(Part Group),
                                  Part=FIELD(Part);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=LedgerBudget;
                      PromotedCategory=Process }
      { 1100525002;1 ;ActionGroup;
                      CaptionML=ENU=Estimate &Part }
      { 1100525001;2 ;Action    ;
                      Name=Estimate Index;
                      ShortCutKey=Ctrl+F5;
                      CaptionML=ENU=Estimate Index;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=BOMVersions;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 EstRec.ShowIndex("Estimate No.", "Sub-Estimate No.", "Part Group", Part, TRUE);  //DP00909
                               END;
                                }
      { 1100525000;2 ;Action    ;
                      Name=Recipe Lines;
                      ShortCutKey=Ctrl+Q;
                      CaptionML=ENU=Recipe Lines;
                      Image=GetLines;
                      OnAction=BEGIN
                                 EstimateManagementRTC.EditViewRecipeLinesNEW(Rec, TRUE);  //db, 14-03-14: testfield Recipe + ShowPage Cost/Sales
                               END;
                                }
      { 1100525007;1 ;ActionGroup;
                      CaptionML=ENU=Comments }
      { 1100525006;2 ;Action    ;
                      Name=EstimateComment;
                      CaptionML=ENU=Comment Lines(estimate);
                      RunObject=Page 124;
                      RunPageLink=Table Name=CONST(Estimate),
                                  No.=FIELD(Estimate No.);
                      Image=ViewComments }
      { 1100525005;2 ;Action    ;
                      Name=SubEstimateComment;
                      CaptionML=ENU=Comment Lines(sub-estimate);
                      RunObject=Page 11124914;
                      RunPageLink=Table Name=CONST(Estimate),
                                  Estimate No.=FIELD(Estimate No.),
                                  Sub-Estimate No.=FIELD(Sub-Estimate No.),
                                  Part Group=FILTER(''),
                                  Part=FILTER(''),
                                  Estimate Line No.=FILTER(0);
                      Image=ViewComments }
      { 1100525004;2 ;Action    ;
                      Name=PartComment;
                      CaptionML=ENU=Comment Lines(part);
                      RunObject=Page 11124914;
                      RunPageLink=Table Name=CONST(Estimate),
                                  Estimate No.=FIELD(Estimate No.),
                                  Sub-Estimate No.=FIELD(Sub-Estimate No.),
                                  Part Group=FIELD(Part Group),
                                  Part=FIELD(Part),
                                  Estimate Line No.=FILTER(0);
                      Image=ViewComments }
      { 1100525003;2 ;Action    ;
                      Name=LineComment;
                      ShortCutKey=Shift+Ctrl+R;
                      CaptionML=ENU=Comment Lines(estimate line);
                      Image=ViewComments;
                      OnAction=BEGIN
                                 EditCommentLines;
                               END;
                                }
      { 1100409004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100409006;1 ;ActionGroup;
                      CaptionML=ENU=Functions }
      { 1100409005;2 ;Action    ;
                      Name=InitCostFromSales;
                      CaptionML=ENU=Initialize Sales From Cost;
                      Image=RefreshText;
                      OnAction=BEGIN
                                 InitSalesFromCost;  //db, 03-02-15
                               END;
                                }
      { 1100525011;2 ;Action    ;
                      Name=Modify BOM Discount;
                      CaptionML=ENU=Modify BOM Discount;
                      Image=CalculateDiscount;
                      OnAction=BEGIN
                                 UpgradeBOMDiscount;
                               END;
                                }
      { 1100525010;2 ;Action    ;
                      Name=Modify BOM Amount;
                      CaptionML=ENU=Modify BOM Amount;
                      Image=ContractPayment;
                      OnAction=BEGIN
                                 UpgradeBOMAmount;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100528901;0;Container;
                ContainerType=ContentArea }

    { 1100528900;1;Group  ;
                CaptionML=ENU=Estimate Lines (Sales);
                IndentationColumnName="Level BOM";
                IndentationControls=Description;
                GroupType=Repeater;
                FreezeColumnID=Description }

    { 1100409001;2;Field  ;
                SourceExpr="Estimate Description";
                Importance=Additional;
                Visible=FALSE }

    { 1100409000;2;Field  ;
                SourceExpr="Sub-Estimate Description";
                Importance=Additional;
                Visible=FALSE }

    { 1100409002;2;Field  ;
                SourceExpr="Part Description";
                Importance=Additional;
                Visible=FALSE }

    { 1100528904;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100528905;2;Field  ;
                SourceExpr="Cost Type (Price)";
                Editable=FALSE }

    { 1100525014;2;Field  ;
                SourceExpr="Cost Type (Hours)";
                Visible=FALSE;
                Editable=FALSE }

    { 1100528915;2;Field  ;
                SourceExpr=Description;
                Editable=DescriptionEditable;
                Style=Attention;
                StyleExpr=DeviatingQuantityBln }

    { 1100528914;2;Field  ;
                SourceExpr="Internal Text Block";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              EditText(0);  //db, 12-11-09
                            END;
                             }

    { 1100528913;2;Field  ;
                SourceExpr="External Text Block";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              EditText(1);  //db, 12-11-09
                            END;
                             }

    { 1100528912;2;Field  ;
                SourceExpr=Comment;
                Visible=FALSE;
                OnDrillDown=BEGIN
                              EditCommentLines;  //db, 24-03-11
                            END;
                             }

    { 1100528918;2;Field  ;
                SourceExpr="Time Quantity";
                Visible=FALSE;
                Editable=TimeQuantityEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100528917;2;Field  ;
                SourceExpr="Unit of Time";
                Visible=FALSE;
                Editable=UnitOfTimeEditable }

    { 1100528919;2;Field  ;
                SourceExpr="Quantity (Sales)";
                Editable=QuantitySalesEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100409003;2;Field  ;
                SourceExpr="Deviating Sales Quantity";
                Importance=Additional }

    { 1100528923;2;Field  ;
                SourceExpr="Part Quantity";
                Importance=Additional;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528922;2;Field  ;
                SourceExpr="Original Quantity";
                Importance=Additional;
                Visible=FALSE;
                OnValidate=BEGIN
                             IF (xRec."Original Quantity" <> "Original Quantity") AND (xRec."Original Quantity" <> 0) THEN BEGIN
                               ChangeQuantityExplodedLines("Original Quantity" / xRec."Original Quantity");
                               CurrPage.UPDATE;
                             END;
                           END;
                            }

    { 1100528921;2;Field  ;
                SourceExpr="Part of Line";
                Importance=Additional;
                Visible=FALSE }

    { 1100528920;2;Field  ;
                SourceExpr="Unit of Measure";
                Editable=UnitOfMeasureEditable }

    { 1100528928;2;Field  ;
                SourceExpr="Ignore Part Quantity";
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100528927;2;Field  ;
                SourceExpr="Line Status" }

    { 1100528966;2;Field  ;
                SourceExpr="Surcharge Type" }

    { 1100528926;2;Field  ;
                SourceExpr="Surcharge %";
                OnDrillDown=VAR
                              ChrgFrm@1100485001 : Page 11229327;
                            BEGIN
                              ChrgRec.RESET;
                              ChrgRec.SETRANGE("Estimate No.", "Estimate No.");
                              ChrgRec.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
                              ChrgRec.SETRANGE("Part Group", "Part Group");
                              ChrgRec.SETRANGE(Part, Part);
                              ChrgRec.SETRANGE("Recipe Line", 0);
                              ChrgRec.SETRANGE("Recipe Group", '');
                              ChrgRec.SETRANGE(Recipe, '');
                              ChrgRec.SETRANGE("Surcharge Line", "Line No.");
                              ChrgFrm.SETTABLEVIEW(ChrgRec);
                              ChrgFrm.SetSelection(2);
                              ChrgFrm.RUNMODAL;

                              RecalcTotals;
                              CurrPage.UPDATE(TRUE);
                            END;
                             }

    { 1100528925;2;Field  ;
                SourceExpr="Norm Group (Sales)";
                Editable=NormGroupSalesEditable }

    { 1100528924;2;Field  ;
                SourceExpr="Sub Operation Code";
                Visible=FALSE;
                Editable=SubOperationCodeEditable;
                OnValidate=BEGIN
                             ProcessSubOperation;  //db, 21-12-04

                             RecalcTotals;  //db, 13-06-05
                             IF "Sub Operation Code" <> '' THEN BEGIN
                               "Norm Agreement" := FALSE;
                               "Norm Agreement (Sales)" := FALSE;  //DP00381
                             END;
                           END;

                OnLookup=VAR
                           OperFrm@1100485001 : Page 11012178;
                           OperRec@1100485000 : Record 11012166;
                         BEGIN
                           CLEAR(OperFrm);
                           OperFrm.LOOKUPMODE(TRUE);
                           OperFrm.SetSelection(DATABASE::"Estimate Line NEW","Estimate No.","Sub-Estimate No.",
                             "Part Group",Part,0,'','');

                           OperRec.Code := "Sub Operation Code";
                           OperFrm.SETRECORD(OperRec);

                           IF OperFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             OperFrm.GETRECORD(OperRec);
                             VALIDATE("Sub Operation Code", OperRec.Code);
                             ProcessSubOperation;  //db, 09-02-12: M32143
                             RecalcTotals;
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 1100528929;2;Field  ;
                SourceExpr="Norm (Sales)";
                Editable=NormSalesEditable;
                OnValidate=BEGIN
                             "Norm Agreement (Sales)" := TRUE;  //DP00381
                             RecalcTotals;
                           END;

                OnLookup=BEGIN
                           HandleLookupOperationNorm(TRUE);  //db, 10-02-15
                         END;
                          }

    { 1100528931;2;Field  ;
                CaptionML=ENU=Norm (Minuts);
                SourceExpr=GetMinuts(0,1);
                Visible=FALSE;
                Editable=FALSE }

    { 1100525012;2;Field  ;
                SourceExpr="Production Rate (Sales)";
                Visible=FALSE }

    { 1100528930;2;Field  ;
                SourceExpr="Rate Code";
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100528932;2;Field  ;
                SourceExpr="Sales Rate" }

    { 1100528600;2;Field  ;
                SourceExpr="Sales Rate (FCY)";
                Visible=FALSE }

    { 1100528933;2;Field  ;
                SourceExpr="Surcharge % Labor";
                OnValidate=BEGIN
                             RecalcTotals;  //db, 31-03-14
                           END;
                            }

    { 1100528936;2;Field  ;
                SourceExpr="Wage Component";
                Visible=FALSE;
                OnValidate=BEGIN
                             RecalcTotals;  //DP00236
                           END;
                            }

    { 1100528609;2;Field  ;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 1100525015;2;Field  ;
                SourceExpr="Currency Agreement";
                Visible=FALSE }

    { 1100528935;2;Field  ;
                SourceExpr="Gross Price";
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100528601;2;Field  ;
                SourceExpr="Gross Price (FCY)";
                Visible=FALSE }

    { 1100528934;2;Field  ;
                SourceExpr="Sales Discount %";
                OnValidate=BEGIN
                             "Price Agreement (Sales)" := TRUE;
                             RecalcTotals;
                           END;

                OnAssistEdit=BEGIN
                               AssistEditSalesCondition;  //db, 26-01-16: C015604
                             END;
                              }

    { 1100528937;2;Field  ;
                SourceExpr="Nett Sales Price";
                OnValidate=BEGIN
                             "Price Agreement (Sales)" := TRUE;
                             RecalcTotals;
                           END;
                            }

    { 1100528602;2;Field  ;
                SourceExpr="Nett Sales Price (FCY)";
                Visible=FALSE }

    { 1100525008;2;Field  ;
                SourceExpr="Sales Condition Present" }

    { 1100528938;2;Field  ;
                SourceExpr="Surcharge % Price";
                OnValidate=BEGIN
                             RecalcTotals;  //db, 31-03-14
                           END;
                            }

    { 1100528939;2;Field  ;
                SourceExpr="Total Recipe";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              EstLineRec := Rec;
                              EstimateManagementRTC.EditViewRecipeLinesNEW(EstLineRec,TRUE);  //DP00381
                            END;
                             }

    { 1100528940;2;Field  ;
                SourceExpr="Hours (Sales)";
                Visible=FALSE }

    { 1100528941;2;Field  ;
                SourceExpr="Labor Sales Amount";
                Visible=FALSE }

    { 1100528603;2;Field  ;
                SourceExpr="Labor Sales Amount (FCY)";
                Visible=FALSE }

    { 1100528942;2;Field  ;
                SourceExpr="Material Sales Amount";
                Visible=FALSE }

    { 1100528604;2;Field  ;
                SourceExpr="Material Sales Amount (FCY)";
                Visible=FALSE }

    { 1100528943;2;Field  ;
                SourceExpr="Subcontracting Sales Amount";
                Visible=FALSE }

    { 1100528605;2;Field  ;
                SourceExpr="Subcontr. Sales Amount (FCY)";
                Visible=FALSE }

    { 1100528944;2;Field  ;
                SourceExpr="Plant Sales Amount";
                Visible=FALSE }

    { 1100528606;2;Field  ;
                SourceExpr="Plant Sales Amount (FCY)";
                Visible=FALSE }

    { 1100528945;2;Field  ;
                SourceExpr="Sundry Sales Amount";
                Visible=FALSE }

    { 1100528607;2;Field  ;
                SourceExpr="Sundry Sales Amount (FCY)";
                Visible=FALSE }

    { 1100528946;2;Field  ;
                SourceExpr="Sales Amount" }

    { 1100528608;2;Field  ;
                SourceExpr="Sales Amount (FCY)";
                Visible=FALSE }

    { 1100528947;2;Field  ;
                SourceExpr="Cost Object Labor";
                Visible=FALSE }

    { 1100528948;2;Field  ;
                SourceExpr="Cost Object Price";
                Visible=FALSE }

    { 1100528949;2;Field  ;
                SourceExpr="Price Reference Date";
                Visible=FALSE }

    { 1100528950;2;Field  ;
                SourceExpr="Norm Agreement (Sales)";
                Visible=FALSE }

    { 1100528951;2;Field  ;
                SourceExpr="Price Agreement (Sales)";
                Visible=FALSE }

    { 1100528952;2;Field  ;
                SourceExpr="Ask for Quote";
                Visible=FALSE }

    { 1100528953;2;Field  ;
                CaptionML=ENU=Quote No.;
                SourceExpr=RefQuote;
                Visible=FALSE;
                Editable=FALSE;
                OnLookup=VAR
                           lvPurchHeadRec@1100528900 : Record 38;
                         BEGIN
                           IF (RefQuote = '') THEN
                             EXIT;

                           IF (COPYSTR(RefQuote, 1, 1) = '<') THEN  // IF Quote No. is '<Nr.>', then more than one quote present
                             RouteRefMgtCU.ShowReferenceQuoteList("Purchase Route Reference")
                           ELSE BEGIN
                             lvPurchHeadRec.SETRANGE("Document Type", lvPurchHeadRec."Document Type"::Quote);
                             lvPurchHeadRec.SETRANGE("No.", RefQuote);
                             PAGE.RUNMODAL(PAGE::"Purchase Quote", lvPurchHeadRec);
                           END;
                         END;
                          }

    { 1100528954;2;Field  ;
                SourceExpr="Purchase Route Reference";
                Visible=FALSE }

    { 1100528955;2;Field  ;
                SourceExpr="Document No.";
                Visible=FALSE }

    { 1100528956;2;Field  ;
                SourceExpr=Vendor;
                Visible=FALSE }

    { 1100528957;2;Field  ;
                SourceExpr="Vendor Name";
                Visible=FALSE }

    { 1100528958;2;Field  ;
                SourceExpr=Subcontractor;
                Visible=FALSE;
                OnValidate=BEGIN
                             CALCFIELDS("Subcontractor Name");
                           END;
                            }

    { 1100528959;2;Field  ;
                SourceExpr="Subcontractor Name";
                Visible=FALSE }

    { 1100528960;2;Field  ;
                SourceExpr="Service Order No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100528961;2;Field  ;
                SourceExpr="Project No.";
                Visible=FALSE }

    { 1100528962;2;Field  ;
                SourceExpr=Element;
                Visible=FALSE }

    { 1100528963;2;Field  ;
                SourceExpr="Extension Contract";
                Visible=FALSE }

    { 1100528964;2;Field  ;
                SourceExpr="Project Planning Activity Code";
                Visible=FALSE }

    { 1100409007;1;Part   ;
                SubPageLink=Estimate No.=FIELD(Estimate No.),
                            Sub-Estimate No.=FIELD(Sub-Estimate No.),
                            Part Group=FIELD(Part Group),
                            Part=FIELD(Part),
                            Estimate Line=FIELD(Line No.),
                            Recipe Group=FIELD(Recipe Group),
                            Recipe=FIELD(Recipe);
                PagePartID=Page11229329;
                PartType=Page }

    { 1100525013;1;Part   ;
                CaptionML=ENU=Estimate Part;
                SubPageLink=Estimate No.=FIELD(Estimate No.),
                            Sub-Estimate No.=FIELD(Sub-Estimate No.),
                            Part Group=FIELD(Part Group),
                            Part=FIELD(Part);
                PagePartID=Page11229330;
                Visible=ShowPartActions;
                Editable=FALSE;
                PartType=Page }

    { 1100528970;0;Container;
                ContainerType=FactBoxArea }

    { 1100528969;1;Part   ;
                SubPageLink=Estimate No.=FIELD(Estimate No.),
                            Sub-Estimate No.=FIELD(Sub-Estimate No.),
                            Part=FIELD(Part);
                PagePartID=Page11229313;
                PartType=Page }

    { 1100528968;1;Part   ;
                SubPageLink=Estimate No.=FIELD(Estimate No.),
                            Sub-Estimate No.=FIELD(Sub-Estimate No.),
                            Part=FIELD(Part),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11229311;
                PartType=Page }

    { 1100528967;1;Part   ;
                SubPageLink=Estimate No.=FIELD(Estimate No.),
                            Sub-Estimate No.=FIELD(Sub-Estimate No.),
                            Part=FIELD(Part),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11229315;
                PartType=Page }

    { 1100525009;1;Part   ;
                CaptionML=ENU=Comment Lines (Estimate Line);
                SubPageLink=Estimate No.=FIELD(Estimate No.),
                            Sub-Estimate No.=FIELD(Sub-Estimate No.),
                            Part Group=FIELD(Part Group),
                            Part=FIELD(Part),
                            Estimate Line No.=FIELD(Line No.),
                            Recipe Line No.=CONST(0);
                PagePartID=Page11126553;
                PartType=Page }

  }
  CODE
  {
    VAR
      ServSetup@1100528923 : Record 11012800;
      GabiVendorRec@1100528922 : Record 11012304;
      EstRec@1100528921 : Record 11012151;
      ChrgRec@1100528920 : Record 11229771;
      EstPartRec@1100528919 : Record 11072073;
      EstLineRec@1100528918 : Record 11072072;
      RcpLineRec@1100528917 : Record 11072075;
      RecipeRec@1100528916 : Record 11020581;
      BaseRcpLineRec@1100528915 : Record 11020582;
      PartLineRec@1100528914 : Record 11072076;
      RouteRefMgtCU@1100528912 : Codeunit 11012045;
      chrg0@1100528911 : Boolean;
      chrg1@1100528910 : Boolean;
      chrg2@1100528909 : Boolean;
      chrg3@1100528908 : Boolean;
      chrg4@1100528907 : Boolean;
      chrg5@1100528906 : Boolean;
      RefQuote@1100528905 : Code[20];
      BufferMgt@1100528904 : Codeunit 11012230;
      ChangedAmountBOM@1100528903 : Decimal;
      TotalPartCost@1100528902 : Decimal;
      TotalPartGross@1100528901 : Decimal;
      TotalPartSales@1100528900 : Decimal;
      Text000@1100528928 : TextConst 'ENU=Adding not allowed, Estimate is fixed.';
      Text001@1100528927 : TextConst 'ENU=Changing not allowed, Estimate is fixed.';
      Text002@1100528926 : TextConst 'ENU=Deleting not allowed, Estimate is fixed.';
      Text009@1100528925 : TextConst 'ENU=Add Line first.';
      Text010@1100528924 : TextConst 'ENU=Remove Zero Lines BOM ?';
      DescriptionEditable@1100528929 : Boolean INDATASET;
      NormGroupSalesEditable@1100528930 : Boolean INDATASET;
      RecipeGroupEditable@1100528931 : Boolean INDATASET;
      ManufacturerEditable@1100528932 : Boolean INDATASET;
      BasicItemEdtable@1100528933 : Boolean INDATASET;
      VendorTradeItemEditable@1100528934 : Boolean INDATASET;
      TradeItemEditable@1100528935 : Boolean INDATASET;
      ItemNoEditable@1100528936 : Boolean INDATASET;
      TimeQuantityEditable@1100528937 : Boolean INDATASET;
      UnitOfTimeEditable@1100528938 : Boolean INDATASET;
      QuantitySalesEditable@1100528939 : Boolean INDATASET;
      UnitOfMeasureEditable@1100528940 : Boolean INDATASET;
      LineStatusEditable@1100528941 : Boolean INDATASET;
      SubOperationCodeEditable@1100528942 : Boolean INDATASET;
      NormSalesEditable@1100528943 : Boolean INDATASET;
      RateCodeEditable@1100528944 : Boolean INDATASET;
      GrossPriceEditable@1100528945 : Boolean INDATASET;
      NettSalesPriceEditable@1100528946 : Boolean INDATASET;
      SalesDiscountPercEditable@1100528947 : Boolean INDATASET;
      CodeEditable@1100528948 : Boolean INDATASET;
      DocumentNoEditable@1100528949 : Boolean INDATASET;
      AskForQuoteEditable@1100528950 : Boolean INDATASET;
      PriceAgreementSalesEditable@1100528951 : Boolean INDATASET;
      NormAgreementSalesEditable@1100528952 : Boolean INDATASET;
      VendorEditable@1100528953 : Boolean INDATASET;
      RecipeEditable@1100528954 : Boolean INDATASET;
      PlantTypeEditable@1100528955 : Boolean INDATASET;
      BasicItemEditable@1100528956 : Boolean INDATASET;
      OriginalQuantityEditable@1100528957 : Boolean INDATASET;
      SurchargeTypeEditable@1100528958 : Boolean INDATASET;
      SurchargePercEditable@1100528959 : Boolean INDATASET;
      WageComponentEditable@1100528960 : Boolean INDATASET;
      EstimateManagementRTC@1100528961 : Codeunit 11130010;
      FixedOff@1100525000 : Boolean;
      SubPageEditable@1100525001 : Boolean INDATASET;
      ShowPartActions@1100525002 : Boolean INDATASET;
      DeviatingQuantityBln@1100525003 : Boolean INDATASET;

    PROCEDURE CheckEstEditable@3();
    VAR
      EstRec@11012000 : Record 11012151;
    BEGIN
      IF EstRec.GET("Estimate No.") THEN
        FixedOff := NOT EstRec.Fixed; //db, 20-05-14: T004319
    END;

    PROCEDURE RecalcTotals@5();
    BEGIN
      CurrPage.SAVERECORD;
      //db.sn, 03-11-11: M27731
      CheckIgnoreRecipeQuantity;
      //db.en, 03-11-11: M27731
      CalculateTotals;
      CheckEstimateCharge;
      //CurrPage.UPDATE(FALSE); //PS, 27-04-12
      CurrPage.UPDATE(TRUE);  //db, 21-08-12: W013502
    END;

    PROCEDURE EditText@8(lvType@1210190000 : 'intern,extern');
    VAR
      TextFrm@11012001 : Page 11012120;
    BEGIN
      IF "Line No." = 0 THEN
        ERROR(Text009);

      TextFrm.TextType(lvType);
      TextFrm.SetSelection(DATABASE::"Estimate Line NEW","Estimate No.","Sub-Estimate No.",
        "Part Group",Part,'','',"Line No.",0);

      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    PROCEDURE HandleZeroLines@1210190002();
    BEGIN
      SetFilterZeroLinesByUser(Rec);  //C025240
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE GetFilterZeroLines@1210190003();
    BEGIN
      GetFilterZeroLinesByUser(Rec);  //C025240
    END;

    PROCEDURE EditCommentLines@1100525015();
    VAR
      UpdateMgt@1100525000 : Codeunit 11012229;
    BEGIN
      UpdateMgt.EditCommentLines("Estimate No.","Sub-Estimate No.","Part Group",Part,"Line No.",'','',0,0);  //DP00686
    END;

    PROCEDURE SetEditable@1100525500();
    BEGIN
      //db, 20-05-14: T004319
      CheckEstEditable;

      SubPageEditable := FixedOff;  //db, 26-05-15
      RecipeGroupEditable := FixedOff;
      RecipeEditable := FixedOff;
      PlantTypeEditable := FixedOff;
      ItemNoEditable := FixedOff;
      ManufacturerEditable := FixedOff;
      BasicItemEditable := FixedOff;
      VendorTradeItemEditable := FixedOff;
      TradeItemEditable := FixedOff;
      CodeEditable := FixedOff;
      TimeQuantityEditable := FixedOff;
      QuantitySalesEditable := FixedOff;
      UnitOfMeasureEditable := FixedOff;
      SurchargeTypeEditable := FixedOff;
      SurchargePercEditable := FixedOff;
      NormGroupSalesEditable := FixedOff;
      SubOperationCodeEditable := FixedOff;
      NormSalesEditable := FixedOff;
      RateCodeEditable := FixedOff;
      WageComponentEditable := FixedOff;
      GrossPriceEditable := FixedOff;
      SalesDiscountPercEditable := FixedOff;
      NettSalesPriceEditable := FixedOff;

      IF FixedOff THEN BEGIN
        SubPageEditable := (Recipe <> '');  //db, 26-05-15
        RecipeGroupEditable := ("Surcharge Type" = "Surcharge Type"::" ");
        RecipeEditable := (("Basic Item" = '') AND ("Trade Item" = '') AND ("Item No." = '')
          AND ("Surcharge Type" = "Surcharge Type"::" "));
        PlantTypeEditable := ((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" ")
          AND ("Item No." + "Basic Item" + "Trade Item" = ''));
        ItemNoEditable := ((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
        ManufacturerEditable := ((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
        BasicItemEditable := ((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
        VendorTradeItemEditable := ((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
        TradeItemEditable := ((Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" "));
        CodeEditable := (Recipe='');
        TimeQuantityEditable := ("Surcharge Type" = "Surcharge Type"::" ");
        QuantitySalesEditable := ("Surcharge Type" = "Surcharge Type"::" ");
        SurchargeTypeEditable := (Recipe + "Item No." + "Basic Item" + "Trade Item" = '');
        SurchargePercEditable := ("Surcharge Type" <> "Surcharge Type"::" ");
        NormGroupSalesEditable := (Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" ");
        SubOperationCodeEditable := (Recipe = '') AND ("Surcharge Type" = "Surcharge Type"::" ");
        NormSalesEditable := ((Recipe = '') AND ("Sub Operation Code" = '') AND
          ("Surcharge Type" = "Surcharge Type"::" ") AND ("Rate Code" <> '')) OR
          ("Cost Type (Hours)"="Cost Type (Hours)"::Plant);  //DP01047
        RateCodeEditable := (Recipe='') AND
          ("Cost Type (Hours)"="Cost Type (Hours)"::Labor);  //DP01047
        WageComponentEditable := ((Recipe = '') AND
          ("Surcharge Type" = "Surcharge Type"::" ") AND ("Rate Code" <> ''));
        GrossPriceEditable := (Recipe='') AND ("Surcharge Type" = "Surcharge Type"::" ");
        SalesDiscountPercEditable := (Recipe='') AND ("Surcharge Type" = "Surcharge Type"::" ");
        NettSalesPriceEditable := (Recipe='') AND ("Surcharge Type" = "Surcharge Type"::" ");
      END;
    END;

    PROCEDURE InitEditable@1100525001();
    BEGIN
      //db, 01-07-14: T005104
      SubPageEditable := TRUE;  //db, 26-05-15
      RecipeGroupEditable := TRUE;
      RecipeEditable := TRUE;
      PlantTypeEditable := TRUE;
      ItemNoEditable := TRUE;
      ManufacturerEditable := TRUE;
      BasicItemEditable := TRUE;
      VendorTradeItemEditable := TRUE;
      TradeItemEditable := TRUE;
      TimeQuantityEditable := TRUE;
      UnitOfTimeEditable := TRUE;
      QuantitySalesEditable:= TRUE;
      UnitOfMeasureEditable:= TRUE;
      SurchargeTypeEditable := TRUE;
      SurchargePercEditable := TRUE;
      NormGroupSalesEditable := TRUE;
      NormSalesEditable := TRUE;
      SubOperationCodeEditable := TRUE;
      RateCodeEditable:= TRUE;
      WageComponentEditable := TRUE;
      GrossPriceEditable := TRUE;
      SalesDiscountPercEditable := TRUE;
      NettSalesPriceEditable := TRUE;
      PriceAgreementSalesEditable:= TRUE;
      NormAgreementSalesEditable:= TRUE;
      DescriptionEditable := TRUE;
      LineStatusEditable:= TRUE;
      CodeEditable := TRUE;
      DocumentNoEditable:= TRUE;
      AskForQuoteEditable:= TRUE;
      VendorEditable:= TRUE;
    END;

    PROCEDURE InitSalesFromCost@1100409000();
    VAR
      EstLineRec@1100525000 : Record 11072072;
      UpdateMgt@1100525001 : Codeunit 11012229;
    BEGIN
      //db, 03-02-15
      EstLineRec.SETRANGE("Estimate No.", "Estimate No.");
      EstLineRec.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
      EstLineRec.SETRANGE("Part Group", "Part Group");
      EstLineRec.SETRANGE(Part, Part);
      UpdateMgt.InitSalesFromCost(EstLineRec);
    END;

    PROCEDURE GetDataCaptionEstPart@1100528000() : Text[250];
    VAR
      EstimatePart@1100528000 : Record 11072073;
    BEGIN
      //db, 16-02-15
      IF NOT EstimatePart.GET("Estimate No.", "Sub-Estimate No.", "Part Group", Part) THEN EstimatePart.INIT;
      EXIT(EstimatePart.GetDataCaption);
    END;

    LOCAL PROCEDURE CheckFiltergroup4@1100525007();
    BEGIN
      //db, 09-06-15:
      //if column added or removed on SubPage (RecipeLine or CommentLine) mainpage (EstimateLine) is opened again without keyfields in filtergroup 4
      //this filter is set by codeunit 11130010 (Estimate Management RTC) and called from Estimate Part or Index
      //regular SubPageLink is ignored due to functions GetNext/PreviousPart
      FILTERGROUP(4);
      IF GETFILTER("Estimate No.") = '' THEN BEGIN
        SETFILTER("Estimate No.", "Estimate No.");
        SETFILTER("Sub-Estimate No.", "Sub-Estimate No.");
        SETFILTER("Part Group", "Part Group");
        SETFILTER(Part, Part);
      END;
      FILTERGROUP(0);
    END;

    PROCEDURE UpgradeBOMDiscount@1100525003();
    VAR
      EstimateLine@1100525000 : Record 11072072;
      ProcessBOMDiscount@1100525001 : Report 11012549;
    BEGIN
      EstimateLine.COPY(Rec);
      EstimateLine.SETRECFILTER;
      ProcessBOMDiscount.SetSelection(DATABASE::"Estimate Line NEW");
      ProcessBOMDiscount.SetSelectionEstimateNEW(EstimateLine,2);  //C028603: 1=cost, 2=sales
      ProcessBOMDiscount.SETTABLEVIEW(EstimateLine);
      ProcessBOMDiscount.RUNMODAL;
      CurrPage.UPDATE;
    END;

    PROCEDURE UpgradeBOMAmount@1100525002();
    VAR
      EstimateLine@1100525002 : Record 11072072;
      ProcessBOMAmount@1100525001 : Report 11012359;
    BEGIN
      EstimateLine.COPY(Rec);
      EstimateLine.SETRECFILTER;
      ProcessBOMAmount.SetSelection(DATABASE::"Estimate Line NEW");
      ProcessBOMAmount.SetSelectionEstimateNEW(EstimateLine,2);  //C028603: 1=cost, 2=sales
      ProcessBOMAmount.SETTABLEVIEW(EstimateLine);
      ProcessBOMAmount.RUNMODAL;
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

