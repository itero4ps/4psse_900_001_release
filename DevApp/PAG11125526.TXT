OBJECT Page 11125526 Site Manager Form
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Site Manager Form;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=Yes;
    SourceTable=Table11072003;
    PageType=Worksheet;
    OnOpenPage=BEGIN
                 SETRANGE("Project Status", "Project Status"::Production);  //C021907.n

                 SiteMgtSetup.GET;
                 SiteMgtSetup.TESTFIELD("Site Mgt. Active", TRUE);

                 IF UserSetup.GET(USERID) THEN
                   UserSetup.TESTFIELD("Employee No.")
                 ELSE
                   ERROR(STRSUBSTNO(Text000, UserSetup.TABLECAPTION, USERID));

                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01

                 WorkingDate := WORKDATE;//kkleermaker.n, 20-12-2010, #24047
                 FillTmpProjectTable();
                 SetWorkingDateRelated();
                 CreateAutomaticInspections;//kkleermaker.n, 20-12-2010, #24047
               END;

    OnFindRecord=BEGIN
                   TmpProjectRec.COPY(Rec);
                   IF NOT TmpProjectRec.FIND(Which) THEN
                     EXIT(FALSE);
                   Rec := TmpProjectRec;
                   EXIT(TRUE);
                 END;

    OnNextRecord=VAR
                   CurrentSteps@1100525000 : Integer;
                 BEGIN
                   TmpProjectRec.COPY(Rec);
                   CurrentSteps := TmpProjectRec.NEXT(Steps);
                   IF CurrentSteps <> 0 THEN BEGIN
                     Rec := TmpProjectRec;
                   END;
                   EXIT(CurrentSteps);
                 END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    OnAfterGetCurrRecord=VAR
                           RecRef@1100525000 : RecordRef;
                         BEGIN
                           CheckShiftAllowed;
                           GetProjectShiftData;

                           RecRef.GETTABLE(Rec);
                           CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
                           CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(FALSE);
                           CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode("Global Dimension 1 Code");
                         END;

    ActionList=ACTIONS
    {
      { 1100525013;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525015;1 ;Action    ;
                      CaptionML=ENU=Previous Day;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetNewWorkingDate(WorkingDate - 1);
                               END;
                                }
      { 1100525014;1 ;Action    ;
                      CaptionML=ENU=Next Day;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetNewWorkingDate(WorkingDate + 1);
                               END;
                                }
      { 1100525012;1 ;Action    ;
                      CaptionML=ENU=Previous Week;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetNewWorkingDate(WorkingDate - 7);
                               END;
                                }
      { 1100525011;1 ;Action    ;
                      CaptionML=ENU=Next Week;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetNewWorkingDate(WorkingDate + 7);
                               END;
                                }
      { 1100525500;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100525502;1 ;Action    ;
                      CaptionML=ENU=Hours;
                      Promoted=Yes;
                      Image=CalculateWIP;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lvSiteMgtWorkingHoursBRWRec@1100525500 : Record 11125528;
                                 lvText000@1100525501 : TextConst 'ENU=Working Hours Project ''%1'' not present';
                               BEGIN
                                 RunOtherFormsCU.RunSiteMgtProjlHours("No.", WorkingDate, ShiftCode);  //*DP00033.c also Shift
                               END;
                                }
      { 1100525503;1 ;Action    ;
                      CaptionML=ENU=Progress;
                      Promoted=Yes;
                      Image=EditLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 TESTFIELD("No.");
                                 RunOtherFormsCU.RunProgress("No.", WorkingDate, "Progress on base of Tender");
                               END;
                                }
      { 1100528701;1 ;Action    ;
                      AccessByPermission=Page 11012087=X;
                      CaptionML=ENU=Prognosis;
                      Image=CalculateRemainingUsage;
                      OnAction=BEGIN
                                 TESTFIELD("No.");
                                 RunOtherFormsCU.RunPrognosis("No.");
                               END;
                                }
      { 1100525505;1 ;Action    ;
                      AccessByPermission=Page 11012014=X;
                      CaptionML=ENU=Extension Contract;
                      Promoted=Yes;
                      Image=TransferFunds;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 TESTFIELD("No.");
                                 RunOtherFormsCU.RunExtensionContract("No.", WorkingDate);
                               END;
                                }
      { 1100528703;1 ;Action    ;
                      AccessByPermission=Page 11012025=X;
                      CaptionML=ENU=Installments;
                      Image=AmountByPeriod;
                      OnAction=BEGIN
                                 TESTFIELD("No.");
                                 RunOtherFormsCU.RunProjectInstallments("No.");
                               END;
                                }
      { 1100525504;1 ;Action    ;
                      AccessByPermission=Page 11012474=X;
                      CaptionML=ENU=Install. Motivation;
                      Promoted=Yes;
                      Image=AmountByPeriod;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 TESTFIELD("No.");
                                 RunOtherFormsCU.RunInstallmentMotivation("No.", WorkingDate);
                               END;
                                }
      { 1100525025;1 ;Action    ;
                      AccessByPermission=Page 11020557=X;
                      CaptionML=ENU=Installment Overview;
                      Promoted=Yes;
                      Image=AmountByPeriod;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lvInstOverviewFrm@1100525002 : Page 11020557;
                                 lvInstOverviewRec@1100525001 : Record 11012265;
                                 lvProjectRec@1100525000 : Record 11072003;
                               BEGIN
                                 IF lvProjectRec.GET("No.") THEN
                                   IF NOT lvProjectRec.RAW THEN
                                     ERROR(Text002);

                                 lvInstOverviewRec.SETRANGE("Project No.", "No.");
                                 lvInstOverviewRec.SETRANGE(Principal, "Bill-to Customer No.");
                                 IF lvInstOverviewRec.FINDLAST THEN;
                                 lvInstOverviewFrm.SETTABLEVIEW(lvInstOverviewRec);
                                 lvInstOverviewFrm.RUN;
                               END;
                                }
      { 1100525509;1 ;Action    ;
                      AccessByPermission=Page 11125530=X;
                      CaptionML=ENU=Receipts;
                      Promoted=Yes;
                      Image=PostedReceipts;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 TESTFIELD("No.");
                                 RunOtherFormsCU.RunReceipts("No.", WorkingDate);
                               END;
                                }
      { 1100525510;1 ;Action    ;
                      AccessByPermission=Page 11125536=X;
                      CaptionML=ENU=Get Order;
                      Promoted=Yes;
                      Image=Document;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 TESTFIELD("No.");
                                 RunOtherFormsCU.RunGetOrder("No.");
                               END;
                                }
      { 1100525506;1 ;Action    ;
                      CaptionML=ENU=Complaints;
                      Promoted=Yes;
                      Image=EditReminder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 TESTFIELD("No.");
                                 RunOtherFormsCU.RunComplaintsByProject("No.", WorkingDate);
                               END;
                                }
      { 1100528702;1 ;Action    ;
                      CaptionML=ENU=Documents;
                      Image=Documents;
                      OnAction=BEGIN
                                 TESTFIELD("No.");
                                 RunOtherFormsCU.RunDocuments("No.");
                               END;
                                }
      { 1100525511;1 ;ActionGroup;
                      CaptionML=ENU=Plant }
      { 1100525507;2 ;Action    ;
                      AccessByPermission=Page 11125533=X;
                      CaptionML=ENU=Plant Request;
                      Promoted=Yes;
                      Image=ResourceRegisters;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 TESTFIELD("No.");
                                 RunOtherFormsCU.RunPlantRequestByProject("No.");
                               END;
                                }
      { 1100409000;2 ;Action    ;
                      AccessByPermission=Page 11125549=X;
                      CaptionML=ENU=Plant Need;
                      Promoted=Yes;
                      Image=ResourcePlanning;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 TESTFIELD("No.");
                                 RunOtherFormsCU.RunPlantNeedByProject("No.");
                               END;
                                }
      { 1100525512;2 ;Action    ;
                      AccessByPermission=Page 11012559=X;
                      CaptionML=ENU=Current Plant Inventory;
                      Promoted=Yes;
                      Image=InventoryJournal;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 TESTFIELD("No.");
                                 RunOtherFormsCU.RunPlantInventory("No.", WorkingDate);
                               END;
                                }
      { 1100525513;2 ;Action    ;
                      AccessByPermission=Page 11012560=X;
                      CaptionML=ENU=Plant Inventory Course;
                      Promoted=Yes;
                      Image=ItemTrackingLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 TESTFIELD("No.");
                                 RunOtherFormsCU.RunPlantInventHistory("No.", WorkingDate);
                               END;
                                }
      { 1100525026;1 ;ActionGroup;
                      CaptionML=ENU=S@les in Construct }
      { 1100525027;2 ;Action    ;
                      AccessByPermission=Page 11072653=X;
                      CaptionML=ENU=Dispatch Notes;
                      Image=InventoryPick;
                      OnAction=VAR
                                 RunPagesMgt@1100525000 : Codeunit 11125525;
                               BEGIN
                                 RunPagesMgt.RunSiB("No.",1);  //DP00065
                               END;
                                }
      { 1100525028;2 ;Action    ;
                      AccessByPermission=Page 11072665=X;
                      CaptionML=ENU=Approved Dispatch Notes;
                      Image=PostedInventoryPick;
                      OnAction=VAR
                                 RunPagesMgt@1100525000 : Codeunit 11125525;
                               BEGIN
                                 RunPagesMgt.RunSiB("No.",2);  //DP00065
                               END;
                                }
      { 1100525029;2 ;Action    ;
                      AccessByPermission=Page 11072656=X;
                      CaptionML=ENU=Invoices;
                      Image=Invoice;
                      OnAction=VAR
                                 RunPagesMgt@1100525000 : Codeunit 11125525;
                               BEGIN
                                 RunPagesMgt.RunSiB("No.",3);  //DP00065
                               END;
                                }
      { 1100525030;2 ;Action    ;
                      AccessByPermission=Page 11072656=X;
                      CaptionML=ENU=Approved Invoices;
                      Image=PostedTaxInvoice;
                      OnAction=VAR
                                 RunPagesMgt@1100525000 : Codeunit 11125525;
                               BEGIN
                                 RunPagesMgt.RunSiB("No.",4);  //DP00065
                               END;
                                }
      { 1100525514;  ;ActionContainer;
                      ActionContainerType=Reports }
      { 1100525515;1 ;Action    ;
                      Name=Site Manager Report;
                      CaptionML=ENU=Site Manager Report;
                      Image=Report;
                      OnAction=VAR
                                 lvPrintDocumentCU@1100525500 : Codeunit 229;
                               BEGIN
                                 lvPrintDocumentCU.PrintSiteManagerReport(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100525000;0;Container;
                ContainerType=ContentArea }

    { 1100525019;1;Group  ;
                CaptionML=ENU=Projects;
                Editable=FALSE;
                GroupType=Group }

    { 1210190007;2;Group  ;
                GroupType=Repeater }

    { 1100525002;3;Field  ;
                SourceExpr="No." }

    { 1100525003;3;Field  ;
                SourceExpr=Description }

    { 1100525017;3;Field  ;
                SourceExpr=Address;
                Visible=FALSE }

    { 1100525018;3;Field  ;
                SourceExpr="Address 2";
                Visible=FALSE }

    { 1100525020;3;Field  ;
                SourceExpr="Post Code";
                Visible=FALSE }

    { 1100525024;3;Field  ;
                SourceExpr=City;
                Visible=FALSE }

    { 1100525021;3;Field  ;
                SourceExpr="Phone No.";
                Visible=FALSE }

    { 1100525004;3;Field  ;
                SourceExpr="Bill-to Customer No." }

    { 1100525023;3;Field  ;
                SourceExpr="Principal Name" }

    { 1100525006;3;Field  ;
                SourceExpr="Project Type" }

    { 1100525007;3;Field  ;
                SourceExpr=Type }

    { 1100525008;3;Field  ;
                SourceExpr="Search Description" }

    { 1100525005;3;Field  ;
                SourceExpr="Project Status" }

    { 1100525016;3;Field  ;
                SourceExpr="Starting Date";
                Visible=FALSE }

    { 1100525022;3;Field  ;
                SourceExpr="Ending Date";
                Visible=FALSE }

    { 1210190004;1;Group  ;
                CaptionML=ENU=Shift;
                Visible=ShiftOnProject;
                GroupType=Group }

    { 1210190003;2;Field  ;
                CaptionML=ENU=Shift;
                SourceExpr=ShiftCode;
                Importance=Promoted;
                Editable=ShiftOnProject;
                OnValidate=VAR
                             ProjShift@1210190000 : Record 11125538;
                           BEGIN
                             //*DP00033
                             IF ShiftCode <> '' THEN
                               ProjShift.GET("No.", ShiftCode);

                             HoldShiftCode := ShiftCode;
                             GetProjectShiftData();
                             SetNewWorkingDate(WorkingDate);
                           END;

                OnLookup=VAR
                           ProjShift@1210190000 : Record 11125538;
                         BEGIN
                           //*DP00033
                           IF ("No." = '') OR (NOT ShiftOnProject) THEN
                             EXIT;

                           ProjShift.FILTERGROUP(9);
                           ProjShift.SETRANGE("Project No.", "No.");
                           ProjShift.SETFILTER("Shift Code", '<>%1', '');  //* Only Shift level
                           ProjShift.FILTERGROUP(0);
                           ProjShift."Project No." := "No.";
                           ProjShift."Shift Code" := ShiftCode;
                           IF PAGE.RUNMODAL(0 , ProjShift) = ACTION::LookupOK THEN BEGIN
                             IF (ShiftOnProject AND (ProjShift."Shift Code" <> '')) THEN BEGIN
                               Text := ProjShift."Shift Code";
                               ShiftCode := Text;
                               HoldShiftCode := ShiftCode;
                               GetProjectShiftData();
                               SetNewWorkingDate(WorkingDate);
                               CurrPage.UPDATE;
                             END;
                           END;
                         END;

                ShowMandatory=ShiftOnProject }

    { 1210190002;2;Field  ;
                CaptionML=ENU=Shift Description;
                SourceExpr=gProjShift."Shift Work Description";
                Importance=Promoted;
                Editable=FALSE }

    { 1210190006;1;Group  ;
                CaptionML=ENU=Date Filter;
                GroupType=Group }

    { 1210190005;2;Field  ;
                CaptionML=ENU=Working Date;
                SourceExpr=WorkingDate;
                Importance=Promoted;
                OnValidate=BEGIN
                             SetNewWorkingDate(WorkingDate);
                           END;
                            }

    { 1100525001;2;Field  ;
                CaptionML=ENU=Week No./Day;
                SourceExpr=WeekDayTxt;
                Editable=FALSE }

    { 1100525009;0;Container;
                ContainerType=FactBoxArea }

    { 1100525031;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                PartType=Page }

    { 1100525010;1;Part   ;
                Name=SMFB_Details;
                SubPageLink=Project No.=FIELD(No.);
                PagePartID=Page11130075;
                PartType=Page }

  }
  CODE
  {
    VAR
      UserSetup@1100525011 : Record 91;
      SiteMgtSetup@1100525010 : Record 11125525;
      TmpProjectRec@1100525009 : TEMPORARY Record 11072003;
      DepAuthRec@1100525008 : Record 11012466;
      gProjShift@1210190006 : Record 11125538;
      PassData@1100525013 : Codeunit 11125528;
      RunOtherFormsCU@1100525007 : Codeunit 11125525;
      WorkingDate@1100525006 : Date;
      DPA_IsHardFilter@1100525000 : Boolean;
      ShiftOnProject@1210190003 : Boolean INDATASET;
      ShiftCode@1210190005 : Code[10];
      HoldShiftCode@1210190004 : Code[10];
      Text000@1100525012 : TextConst 'ENU=Enter %1 voor login code %2';
      Text001@1210190002 : TextConst 'ENU=%1 on form %2 should yield a date before or equal to %3.';
      Text002@1210190001 : TextConst 'ENU=%1 on form %2 should yield a date after or equal to %3.';
      WeekDayTxt@1100525001 : Text[30];

    LOCAL PROCEDURE FillTmpProjectTable@1100525011();
    VAR
      ProjectResponsiblePerson@1210190000 : Record 11012040;
      Project@1100525001 : Record 11072003;
      ProjSetup@1100409000 : Record 315;
      ExtraStep@1100409001 : Integer;
    BEGIN
      //kkleermaker.n, 20-12-2010, #24047
      TmpProjectRec.RESET;
      TmpProjectRec.DELETEALL;
      TmpProjectRec."No." := '';

      ProjectResponsiblePerson.SETCURRENTKEY("Employee No.", "Project No.");
      ProjectResponsiblePerson.SETRANGE("Employee No.", UserSetup."Employee No.");
      ProjectResponsiblePerson.SETFILTER("Project No.", '<>%1', '');
      IF ProjectResponsiblePerson.FINDSET THEN BEGIN
        ProjSetup.GET;
        IF ProjSetup."Provisions at Closure" THEN
          ExtraStep := 2;  //C003087.c  (was 1, now also Finished)
        REPEAT
          IF (ProjectResponsiblePerson."Project No." <> TmpProjectRec."No.") THEN BEGIN
            IF Project.GET(ProjectResponsiblePerson."Project No.") THEN BEGIN
              TmpProjectRec := Project;
              IF (TmpProjectRec."Project Status" >= TmpProjectRec."Project Status"::Preparation) AND
                 (TmpProjectRec."Project Status" <= TmpProjectRec."Project Status"::"Technical Finished" + ExtraStep)
              THEN BEGIN
                TmpProjectRec.INSERT;
                CurrPage.SMFB_Details.PAGE.AddProjectToTmpTable(TmpProjectRec."No."); //rtc
              END;
            END;
          END;
        UNTIL ProjectResponsiblePerson.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE CreateAutomaticInspections@1100528401();
    BEGIN
      //kkleermaker.n, 20-12-2010, #24047
      IF NOT UserSetup."Autom. Get Project Inspections" THEN  //C024523
        EXIT;

      IF TmpProjectRec.FINDSET THEN
        REPEAT
          CreateAutoInspForProject(TmpProjectRec);
        UNTIL TmpProjectRec.NEXT = 0;
    END;

    LOCAL PROCEDURE CreateAutoInspForProject@1100525008(Job@1100525000 : Record 11072003);
    VAR
      InspectionSMF@1100525001 : Record 11125535;
      StartDate@1100525003 : Date;
      EndDate@1100525002 : Date;
      Date@1100528400 : Record 2000000007;
    BEGIN
      IF Job."Autom. Get Project Inspections" AND
         (Job."Project Status" = Job."Project Status"::Production)
      THEN
        InspectionSMF.CreateProjectInspections(Job."No.", WorkingDate, FALSE);
    END;

    LOCAL PROCEDURE SetNewWorkingDate@1100525017(NewWorkingDate@1100525000 : Date);
    BEGIN
      WorkingDate := NewWorkingDate;
      SetWorkingDateRelated();
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SetWorkingDateRelated@1100525000();
    VAR
      Date@1100525000 : Record 2000000007;
    BEGIN
      Date.GET(Date."Period Type"::Date, WorkingDate);
      WeekDayTxt := FORMAT(DATE2DWY(WorkingDate, 2)) + ' / ' + Date."Period Name";
      PassData.SetWorkingDate(WorkingDate);  //Needed in (many) pages that can be called from this page
      CurrPage.SMFB_Details.PAGE.SetSelections(WorkingDate, ShiftCode);
    END;

    LOCAL PROCEDURE GetProjectShiftData@1100525002();
    BEGIN
      //*DP00033.n
      IF NOT gProjShift.GET("No.", ShiftCode) THEN
        gProjShift.INIT
      ELSE
        gProjShift.CALCFIELDS("Shift Work Description");

      IF ShiftOnProject AND (ShiftCode = '') THEN BEGIN
        gProjShift.INIT;
      END;
      PassData.SetShiftCode(ShiftCode);
      CurrPage.SMFB_Details.PAGE.SetSelections(WorkingDate, ShiftCode);
    END;

    LOCAL PROCEDURE CheckShiftAllowed@1210190000();
    VAR
      ProjShift@1210190000 : Record 11125538;
    BEGIN
      //*DP00033
      ProjShift.SETRANGE("Project No.", "No.");
      ProjShift.SETFILTER("Shift Code", '<>%1', '');
      IF ProjShift.ISEMPTY OR ("No." = '') THEN BEGIN
        ShiftOnProject := FALSE;
        IF ShiftCode <> '' THEN BEGIN
          HoldShiftCode := ShiftCode;
          ShiftCode := '';
        END;
      END ELSE BEGIN
        ShiftOnProject := TRUE;
        IF ShiftCode <> '' THEN BEGIN
          ProjShift.SETRANGE("Shift Code", ShiftCode);
          IF ProjShift.ISEMPTY THEN BEGIN
            HoldShiftCode := ShiftCode;
            ShiftCode := '';
          END;
        END ELSE BEGIN
          IF HoldShiftCode <> '' THEN BEGIN
            ProjShift.SETRANGE("Shift Code", HoldShiftCode);
            IF NOT ProjShift.ISEMPTY THEN
              ShiftCode := HoldShiftCode;
          END;
        END;
      END;
    END;

    BEGIN
    {
      //RTC:
      Kept as much as possible the same with Form.
      SubPages and Factboxes are changed
    }
    END.
  }
}

