OBJECT Page 11125532 Plant Request Subform (SMF)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    SourceTable=Table11125530;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             Plant_ItemEditable := TRUE;
             PlantNoEditable := TRUE;
             ElementEditable := TRUE;
             ExpectedReturnEditable := TRUE;
             QuantityEditable := TRUE;
           END;

    OnAfterGetRecord=BEGIN
                       SetEditable();
                     END;

    OnInsertRecord=BEGIN
                     AddStandardItemOnInsertRecord(BelowxRec);
                   END;

    OnAfterGetCurrRecord=BEGIN
                           SetEditable();
                         END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 1100485000;2;Field  ;
                SourceExpr=Type;
                OnValidate=BEGIN
                             SetEditable();
                           END;
                            }

    { 1100485002;2;Field  ;
                SourceExpr="Plant/Item";
                Editable=Plant_ItemEditable }

    { 1100485004;2;Field  ;
                SourceExpr="Plant No.";
                Editable=PlantNoEditable }

    { 1100485008;2;Field  ;
                SourceExpr=Description }

    { 1100485010;2;Field  ;
                SourceExpr=Bulk }

    { 1100525003;2;Field  ;
                CaptionML=ENU=Plant Category;
                SourceExpr=GetPlantCategoryCode();
                Visible=FALSE }

    { 1100525002;2;Field  ;
                CaptionML=ENU=Plant Category Description;
                SourceExpr=GetPlantCategoryDescription();
                Visible=FALSE }

    { 1100525000;2;Field  ;
                SourceExpr=Element;
                Editable=ElementEditable }

    { 1100485020;2;Field  ;
                SourceExpr="Expected return on";
                Editable=ExpectedReturnEditable }

    { 1100485012;2;Field  ;
                SourceExpr=Quantity;
                Editable=QuantityEditable }

    { 1100525001;2;Field  ;
                CaptionML=ENU=Rental Rate;
                BlankZero=Yes;
                SourceExpr=GetRentalRate();
                AutoFormatType=2;
                Visible=FALSE }

  }
  CODE
  {
    VAR
      ReqRec@1100485001 : Record 11125529;
      Plant_ItemEditable@1100525000 : Boolean INDATASET;
      PlantNoEditable@1100525001 : Boolean INDATASET;
      ElementEditable@1100525002 : Boolean INDATASET;
      ExpectedReturnEditable@1100525003 : Boolean INDATASET;
      QuantityEditable@1100525004 : Boolean INDATASET;

    PROCEDURE AddStandardItemOnInsertRecord@1100485003(BelowxRec@1100485003 : Boolean);
    VAR
      lvPlantStndItemRec@1100485000 : Record 11020519;
      lvReqItemLineRec@1100485001 : Record 11125530;
      lvNextLineNo@1100485002 : Integer;
      lvItemQuantity@1100485004 : Decimal;
      lvText001@1100485006 : TextConst 'ENU=Add standard item(s) of Plant Type ''%1'' ?';
    BEGIN
      //* Same as in F11020521. Read standard items of the plant in the plant company.
      IF ("Plant/Item" <> '') AND (Type = Type::Plant) AND (lvPlantStndItemRec.READPERMISSION) THEN BEGIN
        ReqRec.GET("Request No.");
        IF (ReqRec.Type = ReqRec.Type::Arrival) THEN BEGIN
          lvPlantStndItemRec.CHANGECOMPANY(ReqRec."Plant Company");
          lvPlantStndItemRec.SETRANGE("Plant Type", "Plant/Item");
          lvPlantStndItemRec.SETFILTER("Item No.", '<>%1', '');
          lvPlantStndItemRec.SETFILTER(Quantity, '<>%1', 0);
          IF lvPlantStndItemRec.FINDSET(FALSE,FALSE) THEN BEGIN
            IF CONFIRM(lvText001, TRUE, "Plant/Item") THEN BEGIN
              TESTFIELD(Quantity);
              lvReqItemLineRec.RESET;
              lvReqItemLineRec.SETRANGE("Request No.", "Request No.");
              IF lvReqItemLineRec.FINDLAST THEN
                lvNextLineNo := lvReqItemLineRec."Line No." + 10000
              ELSE
                lvNextLineNo := 10000;
              IF BelowxRec THEN
                lvNextLineNo := lvNextLineNo + 10000;  //* Item in the same table as plant, and plant line is not present yet
              REPEAT
                lvItemQuantity := ROUND(Quantity * lvPlantStndItemRec.Quantity, 0.00001);
                //
                lvReqItemLineRec.INIT;
                lvReqItemLineRec."Request No." := "Request No.";
                lvReqItemLineRec."Line No." := lvNextLineNo;
                lvReqItemLineRec.Type := lvReqItemLineRec.Type::Item;
                lvReqItemLineRec.VALIDATE("Plant/Item", lvPlantStndItemRec."Item No.");
                lvReqItemLineRec.VALIDATE(Quantity, lvItemQuantity);
                lvReqItemLineRec.Element := Element;
                lvReqItemLineRec.INSERT(TRUE);
                lvNextLineNo := lvNextLineNo + 10000;
              UNTIL lvPlantStndItemRec.NEXT = 0;
            END;
          END;
        END;
      END;
    END;

    PROCEDURE SetEditable@1100525001();
    BEGIN
      Plant_ItemEditable := (Type IN [Type::Plant, Type::Set, Type::Item]);
      PlantNoEditable := (Type = Type::Plant);
      ElementEditable := (Type <> Type::Text);
      ExpectedReturnEditable := (Type IN [Type::Plant, Type::Set]);
      QuantityEditable := (Type IN [Type::Plant, Type::Set, Type::Item]);
    END;

    BEGIN
    END.
  }
}

