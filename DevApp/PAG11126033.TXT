OBJECT Page 11126033 Accident Card (Compact)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Accident Card (Compact);
    SourceTable=Table11126005;
    PageType=ListPlus;
    OnInit=BEGIN
             "Source No.Editable" := TRUE;
             "Source TypeEditable" := TRUE;
           END;

    OnOpenPage=BEGIN
                 QASetup.GET;
                 QASetup.TESTFIELD("Compact Card Forms", TRUE);
               END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  IF SourceNo <> '' THEN BEGIN
                    VALIDATE("Source Type", SourceType);
                    VALIDATE("Source No.", SourceNo);
                  END;
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100525094;1 ;ActionGroup;
                      CaptionML=ENU=&Accident }
      { 1100525097;2 ;Action    ;
                      CaptionML=ENU=Documents;
                      Image=Documents;
                      OnAction=VAR
                                 RecRef@1100525000 : RecordRef;
                                 DocumentFilters@1100525001 : Codeunit 11012432;
                               BEGIN
                                 RecRef.GETTABLE(Rec);
                                 DocumentFilters.CreateTempFilterAndExecute1(RecRef, '', FALSE, TRUE);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525125;1 ;ActionGroup;
                      CaptionML=ENU=&Print }
      { 1100525126;2 ;Action    ;
                      CaptionML=ENU=Accident Report;
                      Image=PrintReport;
                      OnAction=VAR
                                 PrintDocument@1100525003 : Codeunit 229;
                               BEGIN
                                 PrintDocument.PrintAccidentReport(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100525000;1;Group  ;
                CaptionML=ENU=General }

    { 1100525001;2;Field  ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1100525003;2;Field  ;
                SourceExpr=Description }

    { 1100525005;2;Field  ;
                SourceExpr=Status }

    { 1100525007;2;Field  ;
                SourceExpr="Status Date" }

    { 1100525009;2;Field  ;
                SourceExpr="Source Type";
                Editable="Source TypeEditable" }

    { 1100525011;2;Field  ;
                SourceExpr="Source No.";
                CaptionClass=FORMAT (GetSourceNoCaption());
                Editable="Source No.Editable" }

    { 1100525099;2;Field  ;
                CaptionML=ENU=Source Description;
                SourceExpr=GetSourceDescription();
                Importance=Additional }

    { 1100528401;2;Field  ;
                SourceExpr="Project Element" }

    { 1100525112;2;Field  ;
                SourceExpr="Site Manager" }

    { 1100525118;2;Field  ;
                CaptionML=ENU=Name Site Manager;
                SourceExpr=GetNameResponsible("Site Manager");
                Importance=Additional }

    { 1100525114;2;Field  ;
                SourceExpr="Project Manager" }

    { 1100525120;2;Field  ;
                CaptionML=ENU=Name Project Manager;
                SourceExpr=GetNameResponsible("Project Manager");
                Importance=Additional }

    { 1100525116;2;Field  ;
                SourceExpr="QA Employee" }

    { 1100525122;2;Field  ;
                CaptionML=ENU=Name QA Employee;
                SourceExpr=GetNameResponsible("QA Employee");
                Importance=Additional }

    { 1100525128;2;Field  ;
                SourceExpr="E-Mail Sent to QA" }

    { 1100525110;2;Field  ;
                CaptionML=ENU=Documents;
                SourceExpr=HasDocumentLinks() }

    { 1100525093;1;Part   ;
                SubPageLink=Accident No.=FIELD(No.);
                PagePartID=Page11126034 }

    { 1900646601;1;Group  ;
                CaptionML=ENU=Victim }

    { 1100525013;2;Field  ;
                SourceExpr="Employee Company" }

    { 1100525015;2;Field  ;
                SourceExpr="Employee No." }

    { 1100525017;2;Field  ;
                SourceExpr=Name }

    { 1100525019;2;Field  ;
                SourceExpr=Address }

    { 1100525021;2;Field  ;
                SourceExpr="Address 2";
                Importance=Additional }

    { 1100525023;2;Field  ;
                SourceExpr="Post Code" }

    { 1100525025;2;Field  ;
                SourceExpr=City }

    { 1100525027;2;Field  ;
                SourceExpr="Country/Region Code" }

    { 1100525029;2;Field  ;
                SourceExpr=Nationality }

    { 1100525031;2;Field  ;
                SourceExpr="Birth Date" }

    { 1100525039;2;Field  ;
                SourceExpr="Employment Date" }

    { 1100525033;2;Field  ;
                SourceExpr="Phone No." }

    { 1100525035;2;Field  ;
                SourceExpr="Employer Name" }

    { 1100525037;2;Field  ;
                SourceExpr="Job Title" }

    { 1901459801;1;Group  ;
                CaptionML=ENU=Incident/Accident }

    { 1100525041;2;Field  ;
                SourceExpr="Date/Time" }

    { 1100525043;2;Field  ;
                SourceExpr="First Aid by" }

    { 1100525045;2;Field  ;
                SourceExpr="Medical Treatment by" }

    { 1100525047;2;Field  ;
                SourceExpr="Other Company Involved" }

    { 1100525049;2;Field  ;
                SourceExpr="Other Company" }

    { 1100525051;2;Field  ;
                SourceExpr="Involved in which Way" }

    { 1100525053;2;Field  ;
                SourceExpr="Material Damage" }

    { 1100525055;2;Field  ;
                SourceExpr="Estimated Damage Amount" }

    { 1100525057;2;Field  ;
                SourceExpr="Hospital Admission" }

    { 1100525059;2;Field  ;
                SourceExpr=Hospital }

    { 1100525061;2;Field  ;
                SourceExpr="Job Type during Accident" }

    { 1100525063;2;Field  ;
                Name=AccReportedTo;
                DrillDown=No;
                CaptionML=ENU=Accident Reported to;
                SourceExpr=SelMultiOptionValue.GetSelectedOptionsText("No.", SelMultiOptionValue.Type::AccReportedTo, 0);
                OnLookup=BEGIN
                           SelMultiOptionValue.RunFormMultiSelectOptions("No.", SelMultiOptionValue.Type::AccReportedTo);
                         END;

                OnDrillDown=BEGIN
                              SelMultiOptionValue.RunFormSelectOptions("No.", SelMultiOptionValue.Type::AccReportedTo);
                            END;
                             }

    { 1100525067;2;Field  ;
                Name=PlaceInjury;
                DrillDown=No;
                CaptionML=ENU=Place Injury;
                SourceExpr=SelMultiOptionValue.GetSelectedOptionsText("No.", SelMultiOptionValue.Type::PlaceInjury, 0);
                OnLookup=BEGIN
                           SelMultiOptionValue.RunFormMultiSelectOptions("No.", SelMultiOptionValue.Type::PlaceInjury);
                         END;

                OnDrillDown=BEGIN
                              SelMultiOptionValue.RunFormSelectOptions("No.", SelMultiOptionValue.Type::PlaceInjury);
                            END;
                             }

    { 1100525065;2;Field  ;
                Name=InjuryType;
                DrillDown=No;
                CaptionML=ENU=Injury Type;
                SourceExpr=SelMultiOptionValue.GetSelectedOptionsText("No.", SelMultiOptionValue.Type::InjuryType, 0);
                OnLookup=BEGIN
                           SelMultiOptionValue.RunFormMultiSelectOptions("No.", SelMultiOptionValue.Type::InjuryType);
                         END;

                OnDrillDown=BEGIN
                              SelMultiOptionValue.RunFormSelectOptions("No.", SelMultiOptionValue.Type::InjuryType);
                            END;
                             }

    { 1100525069;2;Field  ;
                SourceExpr="Extra Info Injury" }

    { 1100525071;2;Field  ;
                Name=AbsenceType;
                DrillDown=No;
                CaptionML=ENU=Absence Type;
                SourceExpr=SelMultiOptionValue.GetSelectedOptionsText("No.", SelMultiOptionValue.Type::AbsenceType, 0);
                OnLookup=BEGIN
                           SelMultiOptionValue.RunFormMultiSelectOptions("No.", SelMultiOptionValue.Type::AbsenceType);
                         END;

                OnDrillDown=BEGIN
                              SelMultiOptionValue.RunFormSelectOptions("No.", SelMultiOptionValue.Type::AbsenceType);
                            END;
                             }

    { 1100525085;2;Part   ;
                Name=DescriptionTextSF;
                CaptionML=ENU=Description;
                SubPageLink=Accident No.=FIELD(No.),
                            Type=CONST(Description);
                PagePartID=Page11126035 }

    { 1100525086;2;Part   ;
                Name=EnvDamageTextSF;
                CaptionML=ENU=Environment Damage;
                SubPageLink=Accident No.=FIELD(No.),
                            Type=CONST(EnvironmentDamage);
                PagePartID=Page11126035 }

    { 1100525087;2;Part   ;
                Name=PrevMeasureTextSF;
                CaptionML=ENU=Preventive Measures;
                SubPageLink=Accident No.=FIELD(No.),
                            Type=CONST(PreventiveMeasures);
                PagePartID=Page11126035 }

    { 1907154401;1;Group  ;
                CaptionML=ENU=Investigation }

    { 1100525073;2;Field  ;
                Name=Circumstances;
                DrillDown=No;
                CaptionML=ENU=Circumstances;
                SourceExpr=SelMultiOptionValue.GetSelectedOptionsText("No.", SelMultiOptionValue.Type::Circumstances, 0);
                OnLookup=BEGIN
                           SelMultiOptionValue.RunFormMultiSelectOptions("No.", SelMultiOptionValue.Type::Circumstances);
                         END;

                OnDrillDown=BEGIN
                              SelMultiOptionValue.RunFormSelectOptions("No.", SelMultiOptionValue.Type::Circumstances);
                            END;
                             }

    { 1100525075;2;Field  ;
                Name=Actions;
                DrillDown=No;
                CaptionML=ENU=Action;
                SourceExpr=SelMultiOptionValue.GetSelectedOptionsText("No.", SelMultiOptionValue.Type::Action, 0);
                OnLookup=BEGIN
                           SelMultiOptionValue.RunFormMultiSelectOptions("No.", SelMultiOptionValue.Type::Action);
                         END;

                OnDrillDown=BEGIN
                              SelMultiOptionValue.RunFormSelectOptions("No.", SelMultiOptionValue.Type::Action);
                            END;
                             }

    { 1100525077;2;Field  ;
                Name=Organisation;
                DrillDown=No;
                CaptionML=ENU=Organisation;
                SourceExpr=SelMultiOptionValue.GetSelectedOptionsText("No.", SelMultiOptionValue.Type::Organisation, 0);
                OnLookup=BEGIN
                           SelMultiOptionValue.RunFormMultiSelectOptions("No.", SelMultiOptionValue.Type::Organisation);
                         END;

                OnDrillDown=BEGIN
                              SelMultiOptionValue.RunFormSelectOptions("No.", SelMultiOptionValue.Type::Organisation);
                            END;
                             }

    { 1100525079;2;Field  ;
                SourceExpr="Reason Modify Risk Inventory" }

    { 1100525081;2;Field  ;
                SourceExpr="Reason Process Task Risk Anal." }

    { 1100525088;2;Part   ;
                Name=FactVictimTextSF;
                CaptionML=ENU=Facts Victim;
                SubPageLink=Accident No.=FIELD(No.),
                            Type=CONST(FactsVictim);
                PagePartID=Page11126035 }

    { 1100525089;2;Part   ;
                Name=ExplanationTextSF;
                CaptionML=ENU=Explanation;
                SubPageLink=Accident No.=FIELD(No.),
                            Type=CONST(Explanation);
                PagePartID=Page11126035 }

    { 1100525090;2;Part   ;
                Name=PropMeasuresTextSF;
                CaptionML=ENU=Proposed Measures;
                SubPageLink=Accident No.=FIELD(No.),
                            Type=CONST(ProposedMeasures);
                PagePartID=Page11126035 }

    { 1100525091;2;Part   ;
                Name=JudgementTextSF;
                CaptionML=ENU=Judgement;
                SubPageLink=Accident No.=FIELD(No.),
                            Type=CONST(Judgement);
                PagePartID=Page11126035 }

    { 1100525092;2;Part   ;
                Name=FolowupInfoTextSF;
                CaptionML=ENU=Folow-up Info;
                SubPageLink=Accident No.=FIELD(No.),
                            Type=CONST(FolowupInfo);
                PagePartID=Page11126035 }

    { 1100529900;0;Container;
                ContainerType=FactBoxArea }

    { 1100529901;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                PartType=Page }

  }
  CODE
  {
    VAR
      QASetup@1210190000 : Record 11126001;
      SelMultiOptionValue@1100525007 : Record 11126009;
      SourceType@1100525001 : Option;
      SourceNo@1100525000 : Code[20];
      "Source TypeEditable"@19055870 : Boolean INDATASET;
      "Source No.Editable"@19065946 : Boolean INDATASET;
      Text19076285@19051914 : TextConst 'ENU=Facts Victim';
      Text19037981@19079305 : TextConst 'ENU=Explanation';
      Text19059303@19059627 : TextConst 'ENU=Description';
      Text19016034@19033779 : TextConst 'ENU=Witnesses';
      Text19050285@19003724 : TextConst 'ENU=Proposed Measures';
      Text19038881@19064852 : TextConst 'ENU=Environment Damage';
      Text19030976@19027401 : TextConst 'ENU=Judgement';
      Text19010960@19062318 : TextConst 'ENU=Preventive Measures';
      Text19039355@19073370 : TextConst 'ENU=Folow-up Info';

    PROCEDURE SetProject@1100525000(ProjectNo@1100525000 : Code[20];FixedProject@1100525001 : Boolean);
    BEGIN
      SourceNo := ProjectNo;
      SourceType := "Source Type"::Project;
      IF FixedProject THEN BEGIN
        "Source TypeEditable" := FALSE;
        "Source No.Editable" := FALSE;
        FILTERGROUP(9);
      END;
      SETRANGE("Source Type", SourceType);
      SETRANGE("Source No.", SourceNo);
      FILTERGROUP(0);
      SETCURRENTKEY("Source No.");
    END;

    PROCEDURE SetServiceOrder@1100525002(ServOrderNo@1100525000 : Code[20];FixedServOrder@1100525001 : Boolean);
    BEGIN
      SourceNo := ServOrderNo;
      SourceType := "Source Type"::ServiceOrder;
      IF FixedServOrder THEN BEGIN
        "Source TypeEditable" := FALSE;
        "Source No.Editable" := FALSE;
        FILTERGROUP(9);
      END;
      SETRANGE("Source Type", SourceType);
      SETRANGE("Source No.", SourceNo);
      FILTERGROUP(0);
      SETCURRENTKEY("Source No.");
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    VAR
      RecRef@1100528700 : RecordRef;
    BEGIN
      xRec := Rec;

      RecRef.GETTABLE(Rec);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(TRUE);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode('');
    END;

    BEGIN
    END.
  }
}

