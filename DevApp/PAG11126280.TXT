OBJECT Page 11126280 Service Order Cost Plus SF3
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=ENU=Service Order Cost Plus Entry;
    SourceTable=Table11012825;
    DelayedInsert=Yes;
    PageType=List;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             ServiceOrderNoEditable := TRUE;
           END;

    OnOpenPage=VAR
                 ServiceOrder@1210190000 : Record 11012823;
                 Text0001@1100285300 : TextConst 'ENU=Create cust plus entries?';
                 ServiceLedgerEntry@1100285302 : Record 11012819;
               BEGIN
                 ServSetup.GET;
                 CostComponentEditable := ServSetup."Cost Component Editable";

                 FILTERGROUP(4);
                 IF GETFILTER("Service Order No.") <> '' THEN
                   IF NOT ServiceOrder.GET(GETFILTER("Service Order No.")) THEN // Error using SetupWidthHeight when switching from other company
                     SETRANGE("Service Order No.");
                 FILTERGROUP(0);

                 //>> 160225 ITERO.SB Create cost plus entries when open page
                 ServiceLedgerEntry."Service Order No." := "Service Order No.";
                 ServiceLedgerEntry.SETRANGE("Service Order No.", "Service Order No.");
                 ServiceLedgerEntry.SETRANGE("Cost Plus Entry Created", FALSE);
                 ServiceLedgerEntry.SETFILTER("Service Order Status", '%1|%2|%3',
                 ServiceLedgerEntry."Service Order Status"::Open,
                 ServiceLedgerEntry."Service Order Status"::"In Process",
                 ServiceLedgerEntry."Service Order Status"::"Technical Finished"); //mg.c, 12-11-2013: C010587
                 IF NOT ServiceLedgerEntry.ISEMPTY THEN BEGIN
                   IF CONFIRM(Text0001) THEN BEGIN
                     REPORT.RUNMODAL(REPORT::"Create Serv. Order Cost Plus", TRUE, FALSE, ServiceLedgerEntry);
                     CurrPage.UPDATE;
                   END;
                 END;
                 //<<
               END;

    OnAfterGetRecord=BEGIN
                       CALCFIELDS("Service Contract No.");

                       //>> 160607 ITERO.SB RAD-008 Show margin on cost plus line
                       IF GetSalesMargin <= 0 THEN
                         NegBalMargin:=TRUE
                       ELSE
                         NegBalMargin:=FALSE;
                       //<<
                     END;

    OnNewRecord=BEGIN
                  CALCFIELDS("Service Contract No.");
                  "Posting Date" := WORKDATE;  //db, 08-01-10: M17743
                  //T003311
                  SetSkipDetermineChargeable(FALSE);
                  DetermineChargeable;
                  //
                END;

    OnInsertRecord=BEGIN
                     SetSkipDetermineChargeable(TRUE); //T003311
                   END;

    OnAfterGetCurrRecord=BEGIN
                           UpdateEditable; //mg, 16-12-10: M19900
                         END;

    ActionList=ACTIONS
    {
      { 1210190016;  ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1210190014;1 ;ActionGroup;
                      CaptionML=ENU=&Cost Plus Entry }
      { 1210190012;2 ;Action    ;
                      CaptionML=ENU=Text;
                      Promoted=Yes;
                      Image=SNInfo;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 EditText;
                               END;
                                }
      { 1100285303;2 ;Action    ;
                      CaptionML=ENU=&Documents;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Documents;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 RecRef@1210190001 : RecordRef;
                                 DocumentFilters@1210190000 : Codeunit 11012432;
                                 SourceCodeSetup@1000000001 : Record 242;
                                 PurchInvHeader@1000000000 : Record 122;
                                 PurchCredHeader@1100285300 : Record 124;
                                 DocumentFilter@1000000003 : Record 11012073;
                                 GlobalTempDocumentProperties@1000000002 : TEMPORARY Record 11012746;
                               BEGIN
                                 //160324
                                 IF PurchInvHeader.GET("Source Document") THEN
                                   RecRef.GETTABLE(PurchInvHeader)
                                 ELSE
                                   IF PurchCredHeader.GET("Source Document") THEN
                                     RecRef.GETTABLE(PurchCredHeader)
                                   ELSE
                                   RecRef.GETTABLE(Rec);

                                 DocumentFilters.CreateTemporaryFilter(RecRef, DocumentFilter);
                                 COMMIT;

                                 DocumentFilters.ApplyDocumentFilter(DocumentFilter, GlobalTempDocumentProperties);
                                 GlobalTempDocumentProperties.SETRANGE("From Filter Form", FALSE);
                                 CASE GlobalTempDocumentProperties.COUNT OF
                                   0:
                                     CASE RecRef.NUMBER OF
                                      122: BEGIN PurchInvHeader.SETRECFILTER; PurchInvHeader.PrintRecords(TRUE); END;
                                      124: BEGIN PurchCredHeader.SETRECFILTER; PurchCredHeader.PrintRecords(TRUE); END;
                                     END;

                                   1:  GlobalTempDocumentProperties.OpenDocument;
                                   ELSE
                                   PAGE.RUNMODAL(0, GlobalTempDocumentProperties);
                                 END;
                                 //<<160603
                               END;
                                }
      { 1210190010;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1210190008;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1210190006;2 ;Action    ;
                      CaptionML=ENU=Generate;
                      Promoted=Yes;
                      Image=SelectEntries;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceLedgerEntry@1210190000 : Record 11012819;
                               BEGIN
                                 ServiceLedgerEntry."Service Order No." := "Service Order No.";
                                 ServiceLedgerEntry.SETRANGE("Service Order No.", "Service Order No.");
                                 ServiceLedgerEntry.SETRANGE("Cost Plus Entry Created", FALSE);
                                 //ServiceLedgerEntry.SETRANGE("Cost Present", TRUE); //05-09-2012 WorkItem W007116
                                 //ServiceLedgerEntry.SETFILTER("Service Order Status", '<%1', ServiceLedgerEntry."Service Order Status"::"Administrative Finished");
                                 ServiceLedgerEntry.SETFILTER("Service Order Status", '%1|%2|%3',
                                   ServiceLedgerEntry."Service Order Status"::Open,
                                   ServiceLedgerEntry."Service Order Status"::"In Process",
                                   ServiceLedgerEntry."Service Order Status"::"Technical Finished"); //mg.c, 12-11-2013: C010587
                                 REPORT.RUNMODAL(REPORT::"Create Serv. Order Cost Plus", TRUE, FALSE, ServiceLedgerEntry);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1210190004;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Make Chargable;
                      Promoted=Yes;
                      Image=Approve;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrderCostPlusEntry@1100528600 : Record 11012825;
                                 CPChargeablebyCostType@1100528601 : Report 11012886;
                               BEGIN
                                 ServiceOrderCostPlusEntry.SETRANGE("Service Order No.", "Service Order No.");
                                 CPChargeablebyCostType.SETTABLEVIEW(ServiceOrderCostPlusEntry);
                                 CPChargeablebyCostType.RUNMODAL;
                               END;
                                }
      { 1210190002;2 ;Action    ;
                      CaptionML=ENU=Compress Entries;
                      Promoted=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CompressLines;
                               END;
                                }
      { 1100285301;2 ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=ENU=Generate Invoice;
                      Image=Invoice;
                      OnAction=VAR
                                 PlantSetup@1100525003 : Record 11012550;
                                 ServiceOrderCostPlusEntry@1100525002 : Record 11012825;
                                 PlantLocation@1100525001 : Record 11012554;
                                 CompanyPlantInvoicesViaIC@1100525000 : Record 11012549;
                                 Text003@1100285300 : TextConst 'ENU=It''s not possible to use inter company in combination with plant location and extra cost on the cost plus entry''s.';
                                 SORec@1100285301 : Record 11012823;
                               BEGIN
                                 //>> 151230 ITERO.SB Added action for creating invoices
                                 SORec.GET("Service Order No.");
                                 IF PlantSetup.GET THEN BEGIN
                                   IF (SORec."Plant Location" <> '') THEN BEGIN
                                     IF PlantLocation.GET(SORec."Plant Location") THEN
                                       IF (PlantLocation."Company Name" <> '') THEN BEGIN
                                         IF PlantSetup."Post Invoice Proposals via IC" = PlantSetup."Post Invoice Proposals via IC"::Specific THEN
                                           IF CompanyPlantInvoicesViaIC.GET(PlantLocation."Company Name") THEN BEGIN
                                             ServiceOrderCostPlusEntry.SETRANGE(ServiceOrderCostPlusEntry."Service Order No.", SORec."No.");
                                             ServiceOrderCostPlusEntry.SETRANGE(ServiceOrderCostPlusEntry.Invoiced, FALSE);
                                             ServiceOrderCostPlusEntry.SETRANGE(ServiceOrderCostPlusEntry.Chargeable, TRUE);
                                             ServiceOrderCostPlusEntry.SETRANGE(ServiceOrderCostPlusEntry."Additional Cost", TRUE);
                                             IF ServiceOrderCostPlusEntry.FINDFIRST THEN
                                               ERROR(Text003,ServiceOrderCostPlusEntry.COUNT);
                                           END;
                                           IF (PlantSetup."Post Invoice Proposals via IC" = PlantSetup."Post Invoice Proposals via IC"::Yes) THEN BEGIN
                                               ServiceOrderCostPlusEntry.SETRANGE(ServiceOrderCostPlusEntry."Service Order No.", SORec."No.");
                                               ServiceOrderCostPlusEntry.SETRANGE(ServiceOrderCostPlusEntry.Invoiced, FALSE);
                                               ServiceOrderCostPlusEntry.SETRANGE(ServiceOrderCostPlusEntry.Chargeable, TRUE);
                                               ServiceOrderCostPlusEntry.SETRANGE(ServiceOrderCostPlusEntry."Additional Cost", TRUE);
                                               IF ServiceOrderCostPlusEntry.FINDFIRST THEN
                                                 ERROR(Text003,ServiceOrderCostPlusEntry.COUNT);
                                           END;
                                       END;
                                   END;
                                 END;

                                 SORec.CreateSalesInvoiceViaCollList;
                                 //<<
                               END;
                                }
      { 1100528605;2 ;Action    ;
                      CaptionML=ENU=Copy;
                      Promoted=Yes;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 DuplicateLine;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100525005;2 ;Action    ;
                      Name=CalcSurcharge;
                      ShortCutKey=Shift+Ctrl+S;
                      CaptionML=ENU=Calculate &Surcharge;
                      Image=Calculate;
                      OnAction=BEGIN
                                 //C024476
                                 CostPlusRec.CalcSurcharge("Service Order No.");
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100525007;2 ;Action    ;
                      Name=CalcDiscount;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Calculate &Discount;
                      Image=Calculate;
                      OnAction=BEGIN
                                 //C024476
                                 CostPlusRec.CalcDiscount("Service Order No.");
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100525003;2 ;Action    ;
                      Name=RemovalContribution;
                      ShortCutKey=Shift+Ctrl+R;
                      CaptionML=ENU=Calculate &Removal Contribution;
                      Image=Calculate;
                      OnAction=BEGIN
                                 //C024476
                                 CostPlusRec.RESET;
                                 CostPlusRec."Service Order No." := "Service Order No.";
                                 CostPlusRec.DetermineRemovalContribution(FALSE);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100525001;2 ;Action    ;
                      Name=InvoiceBaseAmount;
                      ShortCutKey=Shift+Ctrl+B;
                      CaptionML=ENU=Check Invoice &Base Amount;
                      Enabled=InvoiceBaseAmountEnabled;
                      Image=Calculate;
                      OnAction=BEGIN
                                 //C024476
                                 //DP01008.sn
                                 ServOrderRec.GET("Service Order No.");
                                 IF ServOrderRec."Collect Invoices By" = ServOrderRec."Collect Invoices By"::BaseOrder THEN BEGIN
                                   CostPlusRec.RESET;
                                   CostPlusRec."Service Order No." := ServOrderRec."Base Service Order No.";
                                   CostPlusRec.CheckInvBaseAmountBaseOrder(FALSE);
                                 END ELSE BEGIN
                                   CostPlusRec.RESET;
                                   CostPlusRec."Service Order No." := ServOrderRec."No.";
                                   CostPlusRec.CheckInvoiceBaseAmount(FALSE);
                                 END;
                                 //DP01008.en
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100285304;2 ;Action    ;
                      CaptionML=ENU=Invoice text;
                      Promoted=Yes;
                      Image=Text;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1100285300 : Record 11012823;
                               BEGIN
                                 //>> 160618 ITERO.SB RAD-023 Added action, invoice text
                                 ServiceOrder.SETRANGE("No.", "Service Order No.");
                                 PAGE.RUNMODAL(11128097,ServiceOrder);
                                 //<<
                               END;
                                }
      { 1100409003;1 ;ActionGroup;
                      CaptionML=ENU=Print;
                      Image=PrintDocument }
      { 1100409001;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Print Cost Plus &Entries;
                      Image=Print;
                      OnAction=VAR
                                 ServiceOrder@1100525001 : Record 11012823;
                                 PrintDoc@1100409000 : Codeunit 229;
                               BEGIN
                                 //C018759
                                 ServiceOrder.SETRANGE("No.", "Service Order No.");
                                 PrintDoc.PrintServCostPlus(ServiceOrder);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210190000;1;Group  ;
                Name=tbCostPlusEntries;
                GroupType=Repeater }

    { 1100525004;2;Field  ;
                SourceExpr="Service Order No.";
                Editable="ServiceOrderNoEditable";
                OnValidate=VAR
                             ServiceOrder@1100525000 : Record 11012823;
                           BEGIN
                             //mg.sn, 16-12-10: M19900
                             ServiceOrder.GET("Service Order No.");
                             Rec.FILTERGROUP(4);
                             ServiceOrder.TESTFIELD("Base Service Order No.", Rec.GETFILTER("Base Service Order No."));
                             Rec.FILTERGROUP(0);
                             //mg.en, 16-12-10: M19900
                           END;

                OnLookup=VAR
                           ServiceOrder@1100525000 : Record 11012823;
                           ServiceOrderListFrm@1100525001 : Page 11012830;
                         BEGIN
                           //mg.sn, 16-12-10: M19900
                           Rec.FILTERGROUP(4);
                           Rec.COPYFILTER("Base Service Order No.", ServiceOrder."Base Service Order No.");
                           Rec.FILTERGROUP(0);
                           ServiceOrder.SETCURRENTKEY("Base Service Order No.");
                           IF "Service Order No." <> '' THEN
                             ServiceOrder.GET("Service Order No.");
                           ServiceOrderListFrm.LOOKUPMODE := TRUE;
                           ServiceOrderListFrm.SETTABLEVIEW(ServiceOrder);
                           ServiceOrderListFrm.SETRECORD(ServiceOrder);
                           IF ServiceOrderListFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             IF "Service Order No." = '' THEN BEGIN
                               ServiceOrderListFrm.GETRECORD(ServiceOrder);
                               "Service Order No." := ServiceOrder."No.";
                               "Base Service Order No." := ServiceOrder."Base Service Order No.";
                             END;
                           END;
                           //mg.en, 16-12-10: M19900
                         END;
                          }

    { 1210190005;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE }

    { 1100528604;2;Field  ;
                SourceExpr="Bill-to Customer No.";
                Visible=FALSE }

    { 1210190073;2;Field  ;
                SourceExpr="Object No." }

    { 1100485012;2;Field  ;
                SourceExpr="Object Customer";
                Visible=FALSE }

    { 1210190031;2;Field  ;
                SourceExpr="Posting Date" }

    { 1100485000;2;Field  ;
                SourceExpr="Source Document";
                OnDrillDown=BEGIN
                              Navigate;  //db, 05-02-07
                            END;
                             }

    { 1100485022;2;Field  ;
                SourceExpr="Source Line" }

    { 1210190047;2;Field  ;
                SourceExpr="Employee No.";
                OnValidate=BEGIN
                             EmployeeNoOnAfterValidate;
                           END;
                            }

    { 1100485010;2;Field  ;
                CaptionML=ENU=Name;
                SourceExpr=EmplRec.CompleteEmployeeName("Employee No.");
                Visible=FALSE }

    { 1210190055;2;Field  ;
                SourceExpr="Item No.";
                OnValidate=BEGIN
                             ItemNoOnAfterValidate;
                           END;

                OnLookup=VAR
                           ItemFrm@1210190001 : Page 31;
                           ItemRec@1210190000 : Record 27;
                         BEGIN
                           CLEAR(ItemFrm);
                           ItemFrm.LOOKUPMODE(TRUE);
                           ItemFrm.DetermineInterface(DATABASE::"Service Order Cost Plus Entry",
                             "Service Order No.",'','','',0,'','',"Line No.",'','');
                           IF ItemRec.GET("Item No.") THEN
                             ItemFrm.SETRECORD(ItemRec);
                           IF ItemFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             ItemFrm.GETRECORD(ItemRec);
                             VALIDATE("Item No.", ItemRec."No.");
                           END ELSE BEGIN
                             IF ItemFrm.CheckMultiCopy THEN  //db, 09-03-07 (melding 8283)
                               CurrPage.UPDATE(TRUE);
                           END;
                         END;
                          }

    { 1100528500;2;Field  ;
                SourceExpr="Serial No.";
                Visible=FALSE }

    { 1100528501;2;Field  ;
                SourceExpr="Lot No.";
                Visible=FALSE }

    { 1210190065;2;Field  ;
                SourceExpr=Manufacturer;
                OnLookup=BEGIN
                           VendorRec.HandleVendorLookup(1, Manufacturer);
                         END;
                          }

    { 1210190057;2;Field  ;
                SourceExpr="Basic Item";
                OnValidate=BEGIN
                             BasicItemOnAfterValidate;
                           END;

                OnLookup=VAR
                           BasicItemFrm@1210190001 : Page 11012333;
                           BasicItemRec@1210190000 : Record 11012316;
                           lvRefDate@1100485004 : Date;
                           lvDiscRef1@1100485003 : Code[20];
                           lvDiscRef2@1100485002 : Code[20];
                           lvDiscType@1100525003 : 'Purchase,Sales';
                           ValidateCu@1100525002 : Codeunit 11012033;
                         BEGIN
                           CLEAR(BasicItemFrm);
                           BasicItemFrm.LOOKUPMODE(TRUE);
                           BasicItemFrm.SetSelection(DATABASE::"Service Order Cost Plus Entry",
                             "Service Order No.",'','','',0,'','',"Line No.",'','');

                           ServOrderRec.GET("Service Order No.");
                           lvRefDate := ValidateCu.GetRefDateServOrder(ServOrderRec);

                           BasicItemFrm.SetReference(lvRefDate, lvDiscRef1, lvDiscRef2);

                           BasicItemRec.InitLookup(BasicItemRec, "Basic Item", Manufacturer);
                           BasicItemFrm.SETRECORD(BasicItemRec);

                           IF BasicItemFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             BasicItemFrm.GETRECORD(BasicItemRec);
                             Manufacturer := BasicItemRec.Manufacturer;
                             VALIDATE("Basic Item", BasicItemRec."Product Code");
                           END ELSE BEGIN
                             IF BasicItemFrm.CheckMultiCopy THEN  //db, 09-03-07 (melding 8283)
                               CurrPage.UPDATE(TRUE);
                           END;
                         END;
                          }

    { 1210190063;2;Field  ;
                SourceExpr="Vendor (Trade Item)";
                OnLookup=VAR
                           lvItem@1100485002 : Code[20];
                         BEGIN
                           lvItem := "Vendor (Trade Item)";
                           VendorRec.HandleVendorLookup(2, lvItem);
                           VALIDATE("Vendor (Trade Item)", lvItem);
                         END;
                          }

    { 1210190059;2;Field  ;
                SourceExpr="Trade Item";
                OnValidate=BEGIN
                             TradeItemOnAfterValidate;
                           END;

                OnLookup=VAR
                           TradeItemFrm@1210190001 : Page 11012334;
                           TradeItemRec@1210190000 : Record 11012317;
                           lvRefDate@1100485004 : Date;
                           lvDiscRef1@1100485003 : Code[20];
                           lvDiscRef2@1100485002 : Code[20];
                           lvDiscType@1100525004 : 'Purchase,Sales';
                           ValidateCu@1100525003 : Codeunit 11012033;
                           lvTempServOrdCostPlEntry@1100525002 : TEMPORARY Record 11012825;
                         BEGIN
                           IF "Item No." <> '' THEN BEGIN
                             lvTempServOrdCostPlEntry.INIT;
                             lvTempServOrdCostPlEntry."Service Contract No." := "Service Contract No.";
                             lvTempServOrdCostPlEntry."Service Order No." := "Service Order No.";
                             lvTempServOrdCostPlEntry."Customer No." := "Customer No.";
                             lvTempServOrdCostPlEntry."Bill-to Customer No." := "Bill-to Customer No.";  //db, 19-06-09
                             lvTempServOrdCostPlEntry.VALIDATE("Item No.","Item No.");
                             g_ItemCode := lvTempServOrdCostPlEntry."Trade Item";
                             g_Vendor := lvTempServOrdCostPlEntry."Vendor (Trade Item)";
                           END ELSE BEGIN
                             g_ItemCode := '';
                             g_Vendor := '';
                           END;

                           CLEAR(TradeItemFrm);
                           TradeItemFrm.LOOKUPMODE(TRUE);
                           TradeItemFrm.SetSelection(DATABASE::"Service Order Cost Plus Entry",
                             "Service Order No.", '', '', '', 0, '', '', "Line No.", '', '',
                             "Vendor (Trade Item)", "Trade Item", Manufacturer, "Basic Item", g_ItemCode, g_Vendor);

                           ServOrderRec.GET("Service Order No.");
                           lvRefDate := ValidateCu.GetRefDateServOrder(ServOrderRec);

                           TradeItemFrm.SetReference(lvRefDate, lvDiscRef1, lvDiscRef2);

                           TradeItemRec.InitLookup(TradeItemRec, "Basic Item", Manufacturer, "Trade Item", "Vendor (Trade Item)");
                           TradeItemFrm.SETRECORD(TradeItemRec);

                           IF TradeItemFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             TradeItemFrm.GETRECORD(TradeItemRec);
                             Manufacturer := TradeItemRec.Manufacturer;
                             "Basic Item" := TradeItemRec."Product Code";
                             "Vendor (Trade Item)" := TradeItemRec.Vendor;
                             VALIDATE("Trade Item", TradeItemRec."Item Code");
                           END ELSE BEGIN
                             IF TradeItemFrm.CheckMultiCopy THEN  //db, 09-03-07 (melding 8283)
                               CurrPage.UPDATE(TRUE);
                           END;
                         END;

                OnAssistEdit=BEGIN
                               HandleItemAssistEdit(3);
                             END;
                              }

    { 1210190007;2;Field  ;
                SourceExpr="Cost Object";
                LookupPageID=Cost Object List;
                OnValidate=BEGIN
                             CostObjectOnAfterValidate;
                           END;
                            }

    { 1100485006;2;Field  ;
                SourceExpr="Cost Component";
                Editable=CostComponentEditable }

    { 1100485008;2;Field  ;
                SourceExpr="Wage Component";
                Visible=FALSE }

    { 1100525002;2;Field  ;
                DrillDown=No;
                SourceExpr="Description Wage Component";
                Visible=FALSE }

    { 1210190009;2;Field  ;
                SourceExpr="Cost Type";
                Visible=FALSE }

    { 1100409000;2;Field  ;
                SourceExpr="Unit Price Line Code" }

    { 1210190011;2;Field  ;
                SourceExpr=Description }

    { 1210190067;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 1210190075;2;Field  ;
                SourceExpr="Text Block";
                OnDrillDown=BEGIN
                              EditText;
                            END;
                             }

    { 1210190013;2;Field  ;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             CurrPage.UPDATE;  //C024476 (refresh Attached Line)
                           END;
                            }

    { 1210190015;2;Field  ;
                SourceExpr="Unit of Measure" }

    { 1100528810;2;Field  ;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 1210190017;2;Field  ;
                SourceExpr="Hour Rate Code";
                OnLookup=BEGIN
                           //db.sn, 07-01-11: M27653
                           LookupHourRate;
                           CurrPage.UPDATE(TRUE);
                           //db.en, 07-01-11: M27653
                         END;
                          }

    { 1100528800;2;Field  ;
                SourceExpr="Gross Price";
                Visible=FALSE }

    { 1210190001;2;Field  ;
                SourceExpr="Gross Price (LCY)" }

    { 1000000000;2;Field  ;
                SourceExpr="Total Cost Price (LCY)";
                Editable=FALSE }

    { 1100485020;2;Field  ;
                SourceExpr="Purchase Discount % (Item)";
                Visible=FALSE;
                Editable=FALSE }

    { 1100528814;2;Field  ;
                SourceExpr="Currency Code Costs";
                Visible=FALSE }

    { 1100528802;2;Field  ;
                SourceExpr="Cost Price";
                Visible=FALSE }

    { 1100485018;2;Field  ;
                SourceExpr="Cost Price (LCY)" }

    { 1210190003;2;Field  ;
                SourceExpr="Sales Discount % (Item)";
                OnAssistEdit=BEGIN
                               AssistEditSalesCondition;  //db, 26-01-16: C015604
                             END;
                              }

    { 1100525008;2;Field  ;
                SourceExpr="Sales Condition Present" }

    { 1100528804;2;Field  ;
                SourceExpr="Basic Price";
                Visible=FALSE }

    { 1210190023;2;Field  ;
                SourceExpr="Basic Price (LCY)" }

    { 1100485032;2;Field  ;
                SourceExpr="Basic Price Found at";
                Visible=FALSE }

    { 1210190025;2;Field  ;
                SourceExpr="Surcharge %" }

    { 1100525000;2;Field  ;
                SourceExpr="Surcharge Amount";
                Visible=FALSE }

    { 1100528806;2;Field  ;
                SourceExpr="Sales Price";
                Visible=FALSE }

    { 1210190027;2;Field  ;
                SourceExpr="Sales Price (LCY)" }

    { 1210190019;2;Field  ;
                SourceExpr="Discount % (ServOrder)" }

    { 1100485026;2;Field  ;
                SourceExpr="Discount % (ServContr)";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              DrillDownDiscount(0);  //db, 23-05-08
                            END;
                             }

    { 1100485028;2;Field  ;
                SourceExpr="Discount % (Warranty)";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              DrillDownDiscount(1);  //db, 23-05-08
                            END;
                             }

    { 1100485030;2;Field  ;
                SourceExpr="Warranty Code";
                Visible=FALSE }

    { 1100528812;2;Field  ;
                SourceExpr="Invoice Price";
                Visible=FALSE }

    { 1210190021;2;Field  ;
                SourceExpr="Invoice Price (LCY)" }

    { 1100485004;2;Field  ;
                SourceExpr="Additional Cost";
                Editable=AdditionalCostEditable }

    { 1100525102;2;Field  ;
                SourceExpr="Extra Cost";
                Visible=FALSE }

    { 1100525006;2;Field  ;
                SourceExpr=Checked }

    { 1210190077;2;Field  ;
                SourceExpr=Chargeable;
                OnValidate=BEGIN
                             IF CostPlusRec.GET("Service Order No.", "Line No.") THEN  //C028952
                               CurrPage.UPDATE;  //C024476 (refresh Attached Line)
                           END;
                            }

    { 1210190029;2;Field  ;
                SourceExpr="VAT Prod. Posting Group" }

    { 1100528801;2;Field  ;
                SourceExpr=Text;
                Visible=FALSE }

    { 1210190033;2;Field  ;
                SourceExpr="Creation Date" }

    { 1210190035;2;Field  ;
                SourceExpr="Last Date Modified" }

    { 1210190037;2;Field  ;
                SourceExpr="Entry No. Service Ledger" }

    { 1100485002;2;Field  ;
                SourceExpr="Installment Scheme";
                Visible=FALSE }

    { 1100485024;2;Field  ;
                SourceExpr="Installment No.";
                Visible=FALSE }

    { 1210190039;2;Field  ;
                SourceExpr=Invoiced }

    { 1100528808;2;Field  ;
                SourceExpr="Invoiced Price";
                Visible=FALSE }

    { 1210190041;2;Field  ;
                SourceExpr="Invoiced Price (LCY)" }

    { 1100528601;2;Field  ;
                SourceExpr="Invoice in Process" }

    { 1210190043;2;Field  ;
                SourceExpr="Invoice in Process (LCY)" }

    { 1100528603;2;Field  ;
                SourceExpr="Credit Memo in Process" }

    { 1210190045;2;Field  ;
                SourceExpr="Credit Memo in Process (LCY)" }

    { 1210190049;2;Field  ;
                SourceExpr="Social Security No.";
                Visible=FALSE }

    { 1100528602;2;Field  ;
                SourceExpr="Unit Price Extention";
                Visible=FALSE }

    { 1210190051;2;Field  ;
                SourceExpr="From Date";
                Visible=FALSE }

    { 1100485014;2;Field  ;
                SourceExpr="From Time";
                Visible=FALSE }

    { 1210190053;2;Field  ;
                SourceExpr="To Date";
                Visible=FALSE }

    { 1100485016;2;Field  ;
                SourceExpr="To Time";
                Visible=FALSE }

    { 1210190061;2;Field  ;
                SourceExpr="Glazing Service Call No.";
                Visible=FALSE }

    { 1210190079;2;Field  ;
                SourceExpr="Glazing Service Call Line No.";
                Visible=FALSE }

    { 1100528600;2;Field  ;
                SourceExpr="FSA-Created Entry";
                Visible=FALSE }

    { 1100528608;2;Field  ;
                SourceExpr="Collective List No.";
                Visible=FALSE }

    { 1100528300;2;Field  ;
                SourceExpr="Production Recording Date";
                Visible=false }

    { 1100528301;2;Field  ;
                SourceExpr="Unit Price Room";
                Visible=false }

    { 1100285003;2;Field  ;
                CaptionML=ENU=Price History (Customer) Found;
                SourceExpr="Price History Found";
                Editable=FALSE }

    { 1100285004;2;Field  ;
                CaptionML=ENU=Price History (Customer) Vendor No.;
                SourceExpr="Price History Vendor No.";
                Editable=FALSE }

    { 1100285001;2;Field  ;
                CaptionML=ENU=Customer price list;
                SourceExpr="Price History PriceList";
                TableRelation="Customer Price List" WHERE (Display Price List=CONST(Yes));
                OnValidate=VAR
                             lvPriceHistRec@1100285000 : Record 11012315;
                             lvRefDate@1100285001 : Date;
                             ItemTypeOpt@1100285002 : 'Item,Basic Item,Trade Item,Trade Vendor';
                           BEGIN

                             IF NOT ServOrderRec.GET("Service Order No.") THEN
                               ServOrderRec.INIT;

                             lvRefDate := ServOrderRec."Reference Date (Item)";
                             IF lvRefDate = 0D THEN
                               lvRefDate := TODAY;

                             lvPriceHistRec.SETCURRENTKEY("Item Code", "Starting Date", "Price List Code");
                             lvPriceHistRec.SETRANGE("Item Code", "Trade Item");
                             lvPriceHistRec.SETRANGE("Starting Date", 0D, lvRefDate);
                             lvPriceHistRec.SETRANGE("Price List Code", "Price History PriceList");

                             IF NOT lvPriceHistRec.FINDLAST THEN BEGIN
                               ERROR(STRSUBSTNO( Text100, "Trade Item", "Price History PriceList"));
                               EXIT;
                             END;

                             SetManualPriceList("Price History PriceList");
                             ValidateItem(ItemTypeOpt::"Trade Item");
                             //FindSalesPrice;
                           END;
                            }

    { 1100285302;2;Field  ;
                Name=SalesMargin;
                CaptionML=ENU=Sales Margin %;
                SourceExpr=GetSalesMargin;
                Style=Attention;
                StyleExpr=NegBalMargin }

    { 1100285000;0;Container;
                ContainerType=FactBoxArea }

    { 1100285300;1;Part   ;
                SubPageLink=Service Order No.=FIELD(Service Order No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11128046;
                PartType=Page }

    { 1100528701;1;Part   ;
                SubPageLink=No.=FIELD(Service Order No.),
                            Department Filter=FIELD(Department Filter);
                PagePartID=Page11130492;
                PartType=Page }

  }
  CODE
  {
    VAR
      Text009@1210190000 : TextConst 'ENU=Before editing text enter the line first';
      ServSetup@1100485000 : Record 11012800;
      EmplRec@1100485002 : Record 5200;
      VendorRec@1100485004 : Record 11012304;
      ServOrderRec@1100485005 : Record 11012823;
      CostPlusRec@1100525002 : Record 11012825;
      g_ItemCode@1100525001 : Code[20];
      g_Vendor@1100525000 : Code[20];
      ServiceOrderNoEditable@19020415 : Boolean INDATASET;
      AdditionalCostEditable@1210190001 : Boolean INDATASET;
      CostComponentEditable@1210190003 : Boolean INDATASET;
      Text100@1100285000 : TextConst 'ENU=Trade Item code %1 not found in the selected customer price list %2';
      InvoiceBaseAmountEnabled@1100525003 : Boolean INDATASET;
      NegBalMargin@1100285300 : Boolean;

    PROCEDURE EditText@8();
    VAR
      TextFrm@11012001 : Page 11012120;
    BEGIN
      IF "Line No." = 0 THEN
        ERROR(Text009);

      TextFrm.SetSelection(DATABASE::"Service Order Cost Plus Entry","Service Order No.",
        '','','','','',"Line No.",0);

      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE CompressLines@1210190000();
    VAR
      CompressCu@1210190000 : Codeunit 11012043;
      lvCostPlusRec@1210190001 : Record 11012825;
    BEGIN
      CurrPage.SETSELECTIONFILTER(lvCostPlusRec);
      CompressCu.ProcessServiceCostPlus(lvCostPlusRec);
    END;

    PROCEDURE SetInvoiceStatus@1100525000();
    BEGIN
      SetInvoiceStatus(Rec);
    END;

    PROCEDURE UpdateEditable@1100525003();
    VAR
      ServiceOrder@1210190000 : Record 11012823;
    BEGIN
      ServiceOrderNoEditable := "Service Order No." = '';
      IF NOT ServiceOrder.GET("Service Order No.") THEN
        ServiceOrder.INIT;

      AdditionalCostEditable :=
        (ServiceOrder."Source Type" <> ServiceOrder."Source Type"::Direct) OR
        (ServiceOrder."Service Contract No." = '');

      //DP01008.sn
      InvoiceBaseAmountEnabled := TRUE;
      IF (ServiceOrder."Base Service Order" = FALSE) AND (ServiceOrder."Collect Invoices By" = ServiceOrder."Collect Invoices By"::BaseOrder) THEN
        InvoiceBaseAmountEnabled := FALSE;
      //DP01008.en
    END;

    LOCAL PROCEDURE EmployeeNoOnAfterValidate@19040646();
    BEGIN
      CurrPage.SAVERECORD;  //db, 23-06-08 (CalcSurcharge)
    END;

    LOCAL PROCEDURE ItemNoOnAfterValidate@19061248();
    BEGIN
      CurrPage.SAVERECORD;  //db, 23-06-08 (CalcSurcharge)
    END;

    LOCAL PROCEDURE BasicItemOnAfterValidate@19054956();
    BEGIN
      CurrPage.SAVERECORD;  //db, 23-06-08 (CalcSurcharge)
    END;

    LOCAL PROCEDURE TradeItemOnAfterValidate@19075338();
    BEGIN
      CurrPage.SAVERECORD;  //db, 23-06-08 (CalcSurcharge)
    END;

    LOCAL PROCEDURE CostObjectOnAfterValidate@19061648();
    BEGIN
      CurrPage.SAVERECORD;  //db, 23-06-08 (CalcSurcharge)
    END;

    PROCEDURE HandleItemAssistEdit@1100528302(ZoomType@1210190000 : Integer);
    BEGIN
      AssistEditItemData(ZoomType);
      IF ZoomType = -1 THEN
        CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE "-ITERO-"@1100285300();
    BEGIN
    END;

    PROCEDURE GetSalesMargin@1100285101() : Decimal;
    VAR
      lvResult@1100285100 : Decimal;
    BEGIN
      //>> 160607 ITERO.SB RAD-008 Show margin on cost plus line
      IF "Sales Price" <> 0 THEN BEGIN
        lvResult := ("Sales Price"  - "Cost Price") / "Sales Price" * 100
      END ELSE BEGIN
        lvResult := 0;
      END;

      EXIT(lvResult);
      //<<
    END;

    BEGIN
    {
      150904 ITERO.AC Added fields "Price History Found", "Price History Vendor No." and "Price History PriceList"
      151006 ITERO.SB Added filter for factbox "Settlement Sheet Margin SO"
      151230 ITERO.SB Added action for creating invoices
      160225 ITERO.SB Create cost plus entries when open page (Radiator rfc-182)
      160603 ITERO.DL add 'show documents'
      160607 ITERO.SB RAD-008 Show margin on cost plus line
      160618 ITERO.SB RAD-023 Added action, invoice text
    }
    END.
  }
}

