OBJECT Page 11126287 Vessel Service Call
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    Permissions=TableData 36=im,
                TableData 11012823=i,
                TableData 11012824=i,
                TableData 11012826=i;
    CaptionML=ENU=Vessel Service Call;
    SourceTable=Table11012822;
    PageType=Document;
    PromotedActionCategoriesML=ENU=New,Process,Report,Texts,Mail Documents;
    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
               END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02

                  "Vessel Service Call" := TRUE;
                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    OnModifyRecord=BEGIN
                     UpdateSignalRulesSF
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1210190029;1 ;ActionGroup;
                      CaptionML=ENU=&Service Call }
      { 1210190114;2 ;Action    ;
                      CaptionML=ENU=Co&mments;
                      RunObject=Page 124;
                      RunPageLink=Table Name=CONST(Service Call),
                                  No.=FIELD(No.);
                      Visible=FALSE;
                      Image=ViewComments }
      { 1100485054;2 ;Action    ;
                      CaptionML=ENU=Report &Procedure;
                      Visible=FALSE;
                      Image=CopyWorksheet;
                      OnAction=VAR
                                 TextRec@1100485001 : Record 11012882;
                                 TextPage@1100485000 : Page 11020691;
                               BEGIN
                                 TextRec.SETRANGE("Table Name", TextRec."Table Name"::"Service Location");
                                 TextRec.SETRANGE("No.", "Service Location No.");
                                 TextPage.SETTABLEVIEW(TextRec);
                                 TextPage.EDITABLE(FALSE);
                                 TextPage.RUNMODAL;
                               END;
                                }
      { 1100485055;2 ;Action    ;
                      CaptionML=ENU=Contract &Agreements;
                      Visible=FALSE;
                      Image=ServiceAgreement;
                      OnAction=VAR
                                 TextRec@1100485001 : Record 11012882;
                                 TextPage@1100485000 : Page 11020691;
                               BEGIN
                                 TextRec.SETRANGE("Table Name", TextRec."Table Name"::"Service Contract");
                                 TextRec.SETRANGE("No.", "Service Contract No.");
                                 TextRec.SETRANGE("Table Field", 0);  //db, 27-05-10: M13735
                                 TextPage.SETTABLEVIEW(TextRec);
                                 TextPage.EDITABLE(FALSE);
                                 TextPage.RUNMODAL;
                               END;
                                }
      { 1100525037;2 ;Action    ;
                      CaptionML=ENU=Invoice Agreements;
                      Visible=FALSE;
                      Image=Invoice;
                      OnAction=VAR
                                 TextRec@1100525001 : Record 11012882;
                                 TextPage@1100525000 : Page 11020691;
                               BEGIN
                                 TextRec.SETRANGE("Table Name", TextRec."Table Name"::"Service Contract");
                                 TextRec.SETRANGE("No.", "Service Contract No.");
                                 TextRec.SETRANGE("Table Field", 630);  //db, 27-05-10: M13735
                                 TextPage.SETTABLEVIEW(TextRec);
                                 TextPage.EDITABLE(FALSE);
                                 TextPage.RUNMODAL;
                               END;
                                }
      { 1100485039;2 ;Action    ;
                      CaptionML=ENU=Reference Periods;
                      Promoted=Yes;
                      Image=CalculateWIP;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReferencePeriodsServicePAGE@1100528600 : Page 11020670;
                               BEGIN
                                 ReferencePeriodsServicePAGE.SetServiceCallNo("No.");
                                 ReferencePeriodsServicePAGE.RUN;
                               END;
                                }
      { 1100485065;2 ;Action    ;
                      CaptionML=ENU=Do&cuments;
                      Visible=FALSE;
                      Image=documents;
                      OnAction=BEGIN
                                 ShowDocuments;  //db, 21-05-10
                               END;
                                }
      { 1100485010;2 ;Action    ;
                      CaptionML=ENU=History Call;
                      Visible=FALSE;
                      Image=History;
                      OnAction=BEGIN
                                 GetHistory(Rec);
                               END;
                                }
      { 1100485031;2 ;Action    ;
                      CaptionML=ENU=Open Service Orders;
                      Visible=FALSE;
                      Image=MakeOrder;
                      OnAction=BEGIN
                                 GetOpenServiceOrder(Rec);
                               END;
                                }
      { 1100485019;2 ;Action    ;
                      CaptionML=ENU=Active &Watches;
                      Image=SuggestReconciliationLines;
                      OnAction=BEGIN
                                 ShowConsignmentRoster;
                               END;
                                }
      { 1210190008;2 ;ActionGroup;
                      CaptionML=ENU=Texts;
                      ActionContainerType=NewDocumentItems;
                      Image=SNInfo }
      { 1210190010;3 ;Action    ;
                      CaptionML=ENU=Problem Text;
                      RunObject=Page 11125206;
                      RunPageLink=Table Name=CONST(Service Call),
                                  No.=FIELD(No.),
                                  Table Field=CONST(60);
                      Promoted=Yes;
                      Image=SNInfo;
                      PromotedCategory=Category4 }
      { 1210190014;3 ;Action    ;
                      CaptionML=ENU=Internal Text;
                      RunObject=Page 11125206;
                      RunPageLink=Table Name=CONST(Service Call),
                                  No.=FIELD(No.),
                                  Table Field=CONST(70);
                      Promoted=Yes;
                      Image=SNInfo;
                      PromotedCategory=Category4 }
      { 1210190016;3 ;Action    ;
                      CaptionML=ENU=Resolve Text;
                      RunObject=Page 11125206;
                      RunPageLink=Table Name=CONST(Service Call),
                                  No.=FIELD(No.),
                                  Table Field=CONST(75);
                      Promoted=Yes;
                      Image=SNInfo;
                      PromotedCategory=Category4 }
      { 1210190018;3 ;Action    ;
                      CaptionML=ENU=Report Procedure;
                      RunObject=Page 11125206;
                      RunPageLink=Table Name=CONST(Service Location),
                                  No.=FIELD(Service Location No.),
                                  Table Field=CONST(0);
                      Promoted=Yes;
                      Image=SNInfo;
                      PromotedCategory=Category4 }
      { 1210190020;3 ;Action    ;
                      CaptionML=ENU=Contract Terms;
                      RunObject=Page 11125206;
                      RunPageLink=Table Name=CONST(Service Contract),
                                  No.=FIELD(Service Contract No.),
                                  Table Field=CONST(0);
                      Promoted=Yes;
                      Image=SNInfo;
                      PromotedCategory=Category4 }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1210190075;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1100485015;2 ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=ENU=Create &Next Call;
                      Promoted=Yes;
                      Visible=FALSE;
                      Image=Splitlines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CopyServCall;  //db, 18-12-09
                               END;
                                }
      { 1210190076;2 ;Action    ;
                      ShortCutKey=Shift+F11;
                      CaptionML=ENU=Create &Service Order;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CreateServiceOrderfromCallFRM@1100528601 : Page 11125229;
                               BEGIN
                                 IF "Service Order No." <> '' THEN
                                   IF CONFIRM(Text002, FALSE) = FALSE THEN EXIT;

                                 VALIDATE("Next Step", "Next Step"::ServiceOrder);  //db, 07-12-07
                                 IF Status = Status::Cancelled THEN
                                   ERROR(Text003);

                                 //GenerateServiceOrder;
                                 CreateServiceOrderfromCallFRM.SetDefaults("No.");
                                 CreateServiceOrderfromCallFRM.RUNMODAL;
                                 FIND('=');
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100485035;2 ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=ENU=Link to open Service Order;
                      Visible=FALSE;
                      Image=Links;
                      OnAction=VAR
                                 CreateServiceOrderfromCallFRM@1210190001 : Page 11125229;
                                 lvServOrder@1100485001 : Code[20];
                               BEGIN
                                 IF "Service Order No." <> '' THEN
                                   IF CONFIRM(Text002, FALSE) = FALSE THEN EXIT;

                                 VALIDATE("Next Step", "Next Step"::ServiceOrder);  //db, 07-12-07
                                 IF Status = Status::Cancelled THEN
                                   ERROR(Text003);

                                 lvServOrder := GetOpenServiceOrder(Rec);
                                 IF lvServOrder <> '' THEN BEGIN
                                   CreateServiceOrderfromCallFRM.SetDefaults("No.");
                                   CreateServiceOrderfromCallFRM.RUNMODAL;

                                   ServCallRec.GET("No.");
                                   IF ServOrderRec.GET(ServCallRec."Service Order No.") THEN BEGIN
                                     ServOrderRec."Previous Service Order No." := lvServOrder;
                                     ServOrderRec.MODIFY(TRUE);
                                   END;
                                 END;
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1210190077;2 ;Action    ;
                      CaptionML=ENU=Create Sales &Quote;
                      Visible=FALSE;
                      Image=Quote;
                      OnAction=BEGIN
                                 IF "Sales Document No." = '' THEN BEGIN
                                   TESTFIELD("Next Step", "Next Step"::SalesQuote);
                                   IF Status = Status::Cancelled THEN
                                     ERROR(Text003);

                                   DocType := DocType::Quote;
                                   InsertSalesHeader(DocType);
                                   CurrPage.UPDATE(TRUE);
                                 END;
                               END;
                                }
      { 1210190078;2 ;Action    ;
                      ShortCutKey=Ctrl+F10;
                      CaptionML=ENU=Create Sales &Order;
                      Visible=FALSE;
                      Image=Document;
                      OnAction=BEGIN
                                 IF "Sales Document No." = '' THEN BEGIN
                                   TESTFIELD("Next Step", "Next Step"::SalesOrder);
                                   IF Status = Status::Cancelled THEN
                                     ERROR(Text003);

                                   DocType := DocType::Order;
                                   InsertSalesHeader(DocType);
                                   CurrPage.UPDATE(TRUE);
                                 END;
                               END;
                                }
      { 1100485008;2 ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=ENU=Create &Project;
                      Visible=FALSE;
                      Image=Job;
                      OnAction=BEGIN
                                 IF "Project (Dest)" = '' THEN BEGIN
                                   TESTFIELD("Next Step", "Next Step"::Project);
                                   IF Status = Status::Cancelled THEN
                                     ERROR(Text003);

                                   CreateProject;
                                   CurrPage.UPDATE(TRUE);
                                 END;
                               END;
                                }
      { 1100485009;2 ;Action    ;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=ENU=Create &Small Project;
                      Visible=FALSE;
                      Image=JobLines;
                      OnAction=BEGIN
                                 IF "Project (Dest)" = '' THEN BEGIN
                                   TESTFIELD("Next Step", "Next Step"::SmallProject);
                                   IF Status = Status::Cancelled THEN
                                     ERROR(Text003);

                                   CreateProject;
                                   CurrPage.UPDATE(TRUE);
                                 END;
                               END;
                                }
      { 1100485081;2 ;Action    ;
                      CaptionML=ENU=Print;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 PrintDoc@1100485000 : Codeunit 229;
                               BEGIN
                                 PrintDoc.PrintServCall(Rec);
                               END;
                                }
      { 1210190012;2 ;Action    ;
                      ShortCutKey=Ctrl+K;
                      CaptionML=ENU=Completeness Check;
                      Image=CheckList;
                      OnAction=VAR
                                 CompletionCheckManagement@1210190001 : Codeunit 11012252;
                                 ServiceCallRecordRef@1210190000 : RecordRef;
                               BEGIN
                                 ServiceCallRecordRef.GETTABLE(Rec);
                                 CompletionCheckManagement.ShowIncompleteFields(ServiceCallRecordRef);
                               END;
                                }
      { 1100528615;2 ;Action    ;
                      CaptionML=ENU=Search Location;
                      Promoted=Yes;
                      Image=Find;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF SearchServiceLocation() THEN
                                   CurrPage.UPDATE;
                               END;
                                }
      { 1100525007;1 ;ActionGroup;
                      CaptionML=ENU=Mail Documents;
                      ActionContainerType=NewDocumentItems }
      { 1100525014;2 ;Action    ;
                      CaptionML=ENU=Service Call;
                      Promoted=Yes;
                      Image=MailAttachment;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 Contact@1100525000 : Record 5050;
                               BEGIN
                                 TESTFIELD("Customer No.");
                                 IF Contact.GetContactByCustomer("Customer No.", Contact, TRUE) THEN
                                   EditDocuments(Contact."No.", '', TRUE, "E-Mail");
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210190000;1;Group  ;
                CaptionML=ENU=Common }

    { 1210190001;2;Field  ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1210190063;2;Field  ;
                SourceExpr="Calling Contact" }

    { 1100485006;2;Field  ;
                SourceExpr="Calling Phone No." }

    { 1100528609;2;Field  ;
                SourceExpr=Description }

    { 1100485037;2;Field  ;
                SourceExpr="Service Location No.";
                OnValidate=BEGIN
                             ServiceLocationNoOnAfterValida;
                             CurrPage.UPDATE;
                           END;

                OnLookup=BEGIN
                           LookupServiceLocation;
                           CurrPage.UPDATE;
                         END;
                          }

    { 1100525018;2;Field  ;
                SourceExpr="Vessel No." }

    { 1100525019;2;Field  ;
                SourceExpr="Vessel Name" }

    { 1210190107;2;Field  ;
                SourceExpr="Object No.";
                Importance=Additional;
                OnValidate=BEGIN
                             ObjectNoOnAfterValidate;
                             CurrPage.UPDATE;
                           END;

                OnLookup=VAR
                           ServiceObject@1100528600 : Record 11071691;
                           ContractObject@1100528603 : Record 11071702;
                         BEGIN
                           IF "Service Location No." <> '' THEN BEGIN
                             ServiceObject.SETCURRENTKEY("Service Location No.");
                             ServiceObject.SETRANGE("Service Location No.", "Service Location No.");
                           END;

                           IF "Service Contract No." <> '' THEN BEGIN
                             ContractObject.SETRANGE("Service Contract No.", "Service Contract No.");
                             IF ContractObject.FINDSET THEN
                               REPEAT
                                 IF ServiceObject.GET(ContractObject."Service Object No.") THEN
                                   ServiceObject.MARK(TRUE);
                               UNTIL ContractObject.NEXT = 0;
                             ServiceObject.MARKEDONLY(TRUE);
                           END;

                           IF "Object No." <> '' THEN
                             ServiceObject.GET("Object No.");
                           IF PAGE.RUNMODAL(PAGE::"Service Object List", ServiceObject) = ACTION::LookupOK THEN
                             VALIDATE("Object No.", ServiceObject."No.");
                           CurrPage.UPDATE;
                         END;
                          }

    { 1100525026;2;Field  ;
                CaptionML=ENU=Object Description;
                SourceExpr=ObjectDescription;
                Importance=Additional }

    { 1100528601;2;Field  ;
                CaptionML=ENU=Object Description 2;
                SourceExpr=ObjectDescription2;
                Importance=Additional }

    { 1100485078;2;Field  ;
                CaptionML=ENU=No. of Contracts;
                SourceExpr=NumContract;
                Importance=Additional;
                Editable=FALSE }

    { 1100485060;2;Field  ;
                SourceExpr="Service Contract No.";
                OnValidate=BEGIN
                             ServiceContractNoOnAfterValida;
                             CurrPage.UPDATE;
                           END;

                OnLookup=VAR
                           MaintenanceManagementCU@1100528602 : Codeunit 11012829;
                           ServiceContractNo@1100528603 : Code[20];
                         BEGIN
                           IF "Object No." = '' THEN
                             LookupServiceContract
                           ELSE BEGIN
                             ServiceContractNo := MaintenanceManagementCU.ShowActualContractsForObject("Object No.", "Customer No.", TODAY, TRUE, "Service Contract No.");
                             IF ServiceContractNo <> '' THEN
                               "Service Contract No." := ServiceContractNo;
                           END;
                           CurrPage.UPDATE;
                         END;
                          }

    { 1100525042;2;Field  ;
                SourceExpr="Service Contract Description" }

    { 1210190017;2;Field  ;
                Lookup=No;
                SourceExpr=Priority;
                OnValidate=BEGIN
                             PriorityOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               AssistEditPriority;  //db, 16-04-07
                               CurrPage.UPDATE;  //db, 12-10-09: M16190
                             END;
                              }

    { 1100525020;2;Field  ;
                SourceExpr="Contact Name" }

    { 1100525021;2;Field  ;
                SourceExpr="E-Mail" }

    { 1100525022;2;Field  ;
                SourceExpr="Agent No.";
                OnValidate=BEGIN
                             IF NOT Agent.GET("Agent No.") THEN
                               Agent.INIT;
                           END;
                            }

    { 1100525024;2;Field  ;
                CaptionML=ENU=Agent Name;
                SourceExpr=Agent.Name;
                Editable=false }

    { 1100525025;2;Field  ;
                SourceExpr=Port }

    { 1100525027;2;Field  ;
                SourceExpr="Quay Berth" }

    { 1100525028;2;Field  ;
                CaptionML=ENU=ETA (Date);
                SourceExpr="First Possible Starting Date" }

    { 1100525029;2;Field  ;
                CaptionML=ENU=ETA (Time);
                SourceExpr="First Possible Starting Time" }

    { 1100525030;2;Field  ;
                CaptionML=ENU=ETD (Date);
                SourceExpr="Last Possible Ending Date" }

    { 1100525031;2;Field  ;
                CaptionML=ENU=ETD (Time);
                SourceExpr="Last Possible Ending Time" }

    { 1100485062;2;Field  ;
                SourceExpr="Order No. Customer";
                OnValidate=BEGIN
                             OrderNoCustomerOnAfterValidate;
                           END;
                            }

    { 1210190034;2;Field  ;
                SourceExpr=Status;
                Importance=Promoted }

    { 1100525002;2;Field  ;
                SourceExpr="Call Kind" }

    { 1100525004;2;Field  ;
                SourceExpr="Call Type" }

    { 1100525001;1;Part   ;
                CaptionML=ENU=Problem Text;
                SubPageLink=Table Name=CONST(Service Call),
                            No.=FIELD(No.),
                            Table Field=CONST(60);
                PagePartID=Page11125227;
                PartType=Page }

    { 1901343701;1;Group  ;
                CaptionML=ENU=Planning }

    { 1100485079;2;Field  ;
                CaptionML=ENU=No. of Dimensions;
                SourceExpr=NumDim1;
                Importance=Additional;
                Editable=FALSE }

    { 1100485057;2;Field  ;
                Lookup=No;
                SourceExpr="Global Dimension 1 Code";
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                               GlobalDimension1CodeOnAfterVal;
                           END;

                OnAssistEdit=BEGIN
                               AssistEditDimension1;  //db, 12-11-07
                               CurrPage.UPDATE;  //db,12-05-09: M14956
                             END;
                              }

    { 1100525023;2;Field  ;
                SourceExpr="Remote Control" }

    { 1100525012;2;Field  ;
                SourceExpr="Planning Agreement Code";
                Importance=Promoted }

    { 1210190130;2;Field  ;
                SourceExpr="Expected Date";
                Importance=Promoted }

    { 1210190131;2;Field  ;
                SourceExpr="Expected Time";
                Importance=Promoted }

    { 1210190132;2;Field  ;
                SourceExpr="Expected Hours" }

    { 1100485052;2;Field  ;
                SourceExpr="Preferred Employee No.";
                Editable=FALSE }

    { 1100485051;2;Field  ;
                DrillDown=No;
                SourceExpr="Preferred Employee Name";
                Importance=Additional;
                Editable=FALSE }

    { 1210190024;2;Field  ;
                CaptionML=ENU=No. of Watches;
                SourceExpr=NumWatch;
                Importance=Additional;
                Editable=FALSE }

    { 1210190031;2;Field  ;
                Lookup=No;
                SourceExpr=Watch;
                OnAssistEdit=BEGIN
                               AssistEditWatch(TRUE);  //db, 16-04-07
                             END;
                              }

    { 1210190032;2;Field  ;
                SourceExpr="Watch Description";
                Importance=Additional;
                Editable=FALSE }

    { 1210190044;2;Field  ;
                SourceExpr="Employee No." }

    { 1210190045;2;Field  ;
                DrillDown=No;
                SourceExpr="Employee Name";
                Importance=Additional;
                Editable=FALSE }

    { 1210190041;2;Field  ;
                SourceExpr="Plan during Clock Time" }

    { 1210190046;2;Field  ;
                SourceExpr="Export to FSA" }

    { 1100525017;2;Field  ;
                SourceExpr="Decentral Created" }

    { 1210190122;2;Field  ;
                SourceExpr="Receiving Date";
                Importance=Additional }

    { 1210190123;2;Field  ;
                Lookup=No;
                SourceExpr="Received by";
                Importance=Additional }

    { 1210190124;2;Field  ;
                SourceExpr="Modified on";
                Importance=Additional }

    { 1210190126;2;Field  ;
                SourceExpr="Receiving Time";
                Importance=Additional }

    { 1210190125;2;Field  ;
                Lookup=No;
                SourceExpr="Modified by";
                Importance=Additional }

    { 1100528607;2;Field  ;
                SourceExpr="Actual Reference Point";
                OnDrillDown=BEGIN
                              DrillDownActualRefPoint;  //db, 29-09-08
                            END;
                             }

    { 1100525035;1;Group  ;
                CaptionML=ENU=Invoicing;
                GroupType=Group }

    { 1100525008;2;Field  ;
                SourceExpr="Bill-to Customer No.";
                Importance=Promoted;
                OnAssistEdit=BEGIN
                               ActivateCreditLimit(1);  //db, 16-12-10: M23068
                             END;
                              }

    { 1100525009;2;Field  ;
                SourceExpr="Alternative Bill-to Address" }

    { 1100525010;2;Field  ;
                SourceExpr="Bill-to Name";
                Importance=Promoted }

    { 1100525013;2;Field  ;
                SourceExpr="Bill-to Name 2" }

    { 1100525036;2;Field  ;
                SourceExpr="Bill-to Address" }

    { 1100525011;2;Field  ;
                SourceExpr="Bill-to Address 2" }

    { 1100525038;2;Field  ;
                SourceExpr="Bill-to Post Code" }

    { 1100525039;2;Field  ;
                SourceExpr="Bill-to City" }

    { 1100525034;1;Group  ;
                CaptionML=ENU=Other;
                GroupType=Group }

    { 1100525040;2;Field  ;
                SourceExpr="Customer No.";
                Importance=Promoted }

    { 1100525041;2;Field  ;
                SourceExpr="Customer Name";
                Importance=Promoted }

    { 1100525043;2;Field  ;
                SourceExpr=Name }

    { 1100525044;2;Field  ;
                SourceExpr=Address }

    { 1100525045;2;Field  ;
                SourceExpr="Post Code" }

    { 1100525046;2;Field  ;
                SourceExpr=City }

    { 1100525047;2;Field  ;
                SourceExpr="Country/Region Code" }

    { 1100525048;2;Field  ;
                SourceExpr="Phone No." }

    { 1100525049;2;Field  ;
                SourceExpr="Phone No. 2" }

    { 1100525050;2;Field  ;
                SourceExpr="Mobile Phone No." }

    { 1100525033;2;Field  ;
                SourceExpr="Limit Budget Hours" }

    { 1100525032;2;Field  ;
                SourceExpr="Limit Budget Labor" }

    { 1100525016;2;Field  ;
                SourceExpr="Limit Budget Material" }

    { 1100525015;2;Field  ;
                SourceExpr="Limit Budget Total" }

    { 1100525006;0;Container;
                ContainerType=FactBoxArea }

    { 1100529900;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                PartType=Page }

    { 1100525005;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page11130485;
                PartType=Page }

    { 1100528300;1;Part   ;
                CaptionML=ENU=Warranty;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page11229203;
                PartType=Page }

    { 1100528301;1;Part   ;
                CaptionML=ENU=Vessels;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page11229204;
                PartType=Page }

    { 1100525003;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page11130489;
                PartType=Page }

    { 1100528600;1;Part   ;
                Name=CallIntakeSignalsSF;
                CaptionML=ENU=Signals;
                PagePartID=Page11126442;
                PartType=Page }

    { 1100525000;1;Part   ;
                Name=ServiceOrderFlowSF;
                CaptionML=ENU=Service Order Structure;
                SubPageLink=Call No.=FIELD(No.);
                PagePartID=Page11125263;
                PartType=Page }

  }
  CODE
  {
    VAR
      ServLocRec@1210190001 : Record 11012801;
      ServOrderRec@1100485003 : Record 11012823;
      ServCallRec@1100485004 : Record 11012822;
      EmplRec@1100485002 : Record 5200;
      UserSetup@1210190013 : Record 91;
      Agent@1100525000 : Record 11071952;
      DocType@1210190006 : 'Quote,Order';
      Text001@1210190007 : TextConst 'ENU=USERID not assigned to employee: edit User Options.';
      NextCall@1100485000 : Code[20];
      Text002@1100485005 : TextConst 'ENU=Call already transfered to Service Order. Continue ?';
      Text003@1100485006 : TextConst 'ENU=Call has been cancelled';
      DepAuthRec@1100000997 : Record 11012466;
      GeneratedtTxtConst1@1100000998 : TextConst 'ENU=You are not authorized for Department Code %1.';
      NumWatch@1100485010 : Text[30];
      NumContract@1100485012 : Text[30];
      NumDim1@1100485013 : Text[30];
      SalesInfoPaneMgt@1100525001 : Codeunit 7171;
      ServiceObjectInfoMgtCU@1100528600 : Codeunit 11012840;
      DPA_IsHardFilter@1100000999 : Boolean;
      ObjectDescription@1100528601 : Text[50];
      ObjectDescription2@1100528602 : Text[50];

    PROCEDURE GetHistory@1100485001(VAR ServCallRec@1100485000 : Record 11012822);
    VAR
      ServCallRec2@1100485001 : Record 11012822;
    BEGIN
      WITH ServCallRec DO BEGIN
        RESET;
        IF "Service Location No." <> '' THEN BEGIN
          ServCallRec2.SETCURRENTKEY("Service Location No.");
          ServCallRec2.SETRANGE("Service Location No.", "Service Location No.");
        END;
        IF PAGE.RUNMODAL(PAGE::"Service Call List", ServCallRec2) = ACTION::LookupOK THEN
          ServCallRec:= ServCallRec2;
      END;
    END;

    PROCEDURE GetOpenServiceOrder@1100485002(VAR ServCallRec@1100485000 : Record 11012822) : Code[20];
    VAR
      ServOrderRec@1100485001 : Record 11012823;
    BEGIN
      WITH ServCallRec DO BEGIN
        RESET;
        IF "Customer No." <> '' THEN
          ServOrderRec.SETRANGE("Customer No.", "Customer No.");
        IF "Service Contract No." <> '' THEN
          ServOrderRec.SETRANGE("Service Contract No.", "Service Contract No.");
        IF "Service Location No." <> '' THEN BEGIN
          ServOrderRec.SETCURRENTKEY("Service Location No.");
          ServOrderRec.SETRANGE("Service Location No.", "Service Location No.");
        END;
        IF PAGE.RUNMODAL(PAGE::"Service-Order List", ServOrderRec) = ACTION::LookupOK THEN
          EXIT(ServOrderRec."No.");
      END;

      EXIT('');
    END;

    PROCEDURE UpdateReferenceNorm@1100485003();
    VAR
      RefPeriodRec@1100485000 : Record 11020272;
    BEGIN
      CurrPage.UPDATE;
      RefPeriodRec.UpdateNorm(RefPeriodRec.Type::ServCall, "No.");
      GET("No.");  //db, 06-11-06: previous function updates maintable; avoid SQL-message
      CurrPage.UPDATE;  //db, 06-12-06: refresh flowfields (1e update niet weghalen)
    END;

    LOCAL PROCEDURE ShowConsignmentRoster@1100485005();
    VAR
      Consignment@1100485000 : Record 11012863;
    BEGIN
      IF Consignment.FINDSET(FALSE, FALSE) THEN
        REPEAT
          Consignment.MARK := Consignment.CheckTerritoryAndDepartment("Territory Code", "Global Dimension 1 Code");
        UNTIL Consignment.NEXT = 0;

      Consignment.MARKEDONLY := TRUE;

      PAGE.RUN(PAGE::"Consignment Roster", Consignment);
    END;

    PROCEDURE ShowDocuments@1100525000();
    VAR
      RecRef@1100525002 : RecordRef;
      DocumentFilters@1100525003 : Codeunit 11012432;
    BEGIN
      RecRef.GETTABLE(Rec);
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, "Global Dimension 1 Code", FALSE, TRUE);
    END;

    PROCEDURE StartServCalls@1100525001(lvAction@1100485000 : Integer;lvCount@1100485001 : Boolean) : Integer;
    VAR
      lvServCallRec@1100485002 : Record 11012822;
      lvServOrderRec@1100525000 : Record 11012823;
    BEGIN
      //db, 21-05-10
      lvServCallRec.SETFILTER("No.", '<>%1', "No.");
      CASE lvAction OF
        0:
          BEGIN
            lvServCallRec.SETCURRENTKEY("Service Contract No.");
            lvServCallRec.SETRANGE("Service Contract No.", "Service Contract No.");
      //      IF (lvCount = TRUE) AND
            IF ("Service Contract No." = '') THEN EXIT(0);
          END;
        1:
          BEGIN
            lvServCallRec.SETCURRENTKEY("Service Location No.");
            lvServCallRec.SETRANGE("Service Location No.", "Service Location No.");
      //      IF (lvCount = TRUE) AND
            IF ("Service Location No." = '') THEN EXIT(0);
          END;
        2:
          BEGIN
            lvServOrderRec.SETCURRENTKEY("Call No.");
            lvServOrderRec.SETRANGE("Call No.", "No.");
            IF lvCount = FALSE THEN BEGIN
              PAGE.RUNMODAL(0, lvServOrderRec);
              EXIT;
            END ELSE BEGIN
              IF "Service Order No." = '' THEN
                EXIT(0)
              ELSE
                EXIT(lvServOrderRec.COUNT);
            END;
          END;
        3:
          BEGIN
            lvServCallRec.SETCURRENTKEY("Customer No.");
            lvServCallRec.SETRANGE("Customer No.", "Customer No.");
      //      IF (lvCount = TRUE) AND
            IF ("Customer No." = '') THEN EXIT(0);
          END;
        4:
          BEGIN
            lvServCallRec.SETCURRENTKEY("Object No.");
            lvServCallRec.SETRANGE("Object No.", "Object No.");
      //      IF (lvCount = TRUE) AND
            IF ("Object No." = '') THEN EXIT(0);
          END;
      END;

      IF lvCount = FALSE THEN BEGIN
        PAGE.RUNMODAL(0, lvServCallRec);
      END ELSE BEGIN
        EXIT(lvServCallRec.COUNT);
      END;
    END;

    PROCEDURE GetNoOfServCalls@1100525002(lvAction@1100485001 : Integer) NumServCall : Integer;
    BEGIN
      NumServCall := StartServCalls(lvAction, TRUE);
      EXIT(NumServCall);
    END;

    PROCEDURE GetInfo@1100525003() : Integer;
    VAR
      RecRef@1100525000 : RecordRef;
      DocumentLinkMgt@1100525001 : Codeunit 11012401;
    BEGIN
      RecRef.GETTABLE(Rec);

      EXIT(DocumentLinkMgt.GetInfo(RecRef));
    END;

    LOCAL PROCEDURE PriorityOnAfterValidate@19076862();
    BEGIN
      UpdateReferenceNorm;
    END;

    LOCAL PROCEDURE GlobalDimension1CodeOnAfterVal@19079612();
    BEGIN
      CurrPage.UPDATE;  //db,12-05-09: M14956
    END;

    LOCAL PROCEDURE ServiceLocationNoOnAfterValida@19019562();
    BEGIN
      CALCFIELDS("Service Location Description", "Remote Control");
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ServiceContractNoOnAfterValida@19025091();
    BEGIN
      CALCFIELDS("Service Contract Description");
      UpdateReferenceNorm;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CustomerNoOnAfterValidate@19016267();
    BEGIN
      CALCFIELDS("Customer Name");
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ObjectNoOnAfterValidate@19042349();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE NameOnAfterValidate@19065884();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE AddressOnAfterValidate@19060866();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PostCodeOnAfterValidate@19007075();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE TerritoryCodeOnAfterValidate@19066893();
    BEGIN
      CurrPage.UPDATE;  //db,12-05-09: M14956
    END;

    LOCAL PROCEDURE CityOnAfterValidate@19023525();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OrderNoCustomerOnAfterValidate@19028010();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE AssignedtoOnAfterValidate@19050262();
    BEGIN
      CALCFIELDS("Name Assigned to");
    END;

    LOCAL PROCEDURE EmployeeNoOnAfterValidate@19040646();
    BEGIN
      CALCFIELDS("Employee Name");  //db, 14-05-07
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    VAR
      MaintenanceManagementCU@1100528600 : Codeunit 11012829;
      CurrServiceContractNo@1100528601 : Code[20];
      RecRef@1100529900 : RecordRef;
    BEGIN
      xRec := Rec;
      NextCall := ShowNextCall(0);

      NumWatch := CheckAvailableWatches;
      NumContract :=
        STRSUBSTNO('[%1]', MaintenanceManagementCU.GetNoOfActualContractsForObj("Object No.", TODAY, CurrServiceContractNo));
      NumDim1 := CheckAvailableDim1;

      RecRef.GETTABLE(Rec);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(TRUE);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode("Global Dimension 1 Code");

      UpdateSignalRulesSF;
      GetObjectDescriptions(ObjectDescription, ObjectDescription2);

      IF (NOT Agent.GET("Agent No.")) THEN Agent.INIT;
    END;

    PROCEDURE UpdateSignalRulesSF@1100528600();
    VAR
      CallIntakeSignalMgt@1100528600 : Codeunit 11012862;
    BEGIN
      CurrPage.CallIntakeSignalsSF.PAGE.UpdateRulesList(0, "No.", '', '', FALSE);
    END;

    BEGIN
    END.
  }
}

