OBJECT Page 11126288 Vessel Service Order
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Vessel Service Order;
    SourceTable=Table11012823;
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=ENU=New,Process,Report,Order,Texts,Mail Documents;
    OnInit=BEGIN
             UnitPriceCodeEditable := TRUE;
             UnitPriceIndexDateEditable := TRUE;
             "Unit Price StatusEditable" := TRUE;
             CreditLimitButtonVisible := TRUE;
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 ServSetup.GET;
                 IF NOT UserSetup.GET(USERID) THEN UserSetup.INIT;
               END;

    OnAfterGetRecord=BEGIN
                       IF TryOutRelationRec.READPERMISSION THEN BEGIN
                         TryOutRelation := TryOutRelationRec.GetTryOut('', '', '', '', "No.", '', '', 1);
                         TryOutQuoteRelation := TryOutRelationRec.GetTryOut('', '', '', '', "No.", '', '', 2);
                       END;

                       GetInfo;
                       CALCFIELDS("Actual Reference Point Desc", "Open (Purchase)", "Received/Not Invoiced",
                         "Open Ovh. Surch. Firm (Purch.)", "Open Ovh. Surch. (Hours)", "Open Ovh. Surch. (Inventory)",
                         "Contact No.");

                       //CurrPage.ServiceOrderFlowSF.PAGE.SetCurrServiceOrderNo("No.");
                       CurrPage.ServiceOrderFlowFB.PAGE.SetCurrServiceOrderNo("No.");

                       ServiceOrderExtension.GetServOrderExtension("No.");
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02

                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    OnModifyRecord=BEGIN
                     IF SkipCheckBlockedByFSA THEN
                       SkipCheckBlockedByFSA := FALSE
                     ELSE BEGIN
                       IF CheckBlockedByFSA() THEN
                         ERROR(Text002);
                     END;
                   END;

    OnDeleteRecord=BEGIN
                     IF CheckBlockedByFSA() THEN
                       ERROR(Text002);
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 138     ;1   ;ActionGroup;
                      CaptionML=ENU=Service &Order }
      { 1100409005;2 ;Action    ;
                      CaptionML=ENU=Base Service Order;
                      RunObject=Page 11126291;
                      RunPageLink=No.=FIELD(Base Service Order No.);
                      Image=ServiceOrderSetup }
      { 1100529001;2 ;Action    ;
                      CaptionML=ENU=Work Orders (Employees);
                      Image=HRSetup;
                      OnAction=VAR
                                 ServiceOrderInfoMgt@1100529000 : Codeunit 11012841;
                               BEGIN
                                 ServiceOrderInfoMgt.ShowSOWorkOrders("No.");
                               END;
                                }
      { 21      ;2   ;Action    ;
                      CaptionML=ENU=Co&mments;
                      RunObject=Page 124;
                      RunPageLink=Table Name=CONST(Service Order),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 1100528712;2 ;ActionGroup;
                      CaptionML=ENU=Service Tables;
                      Image=MaintenanceLedger }
      { 1100525298;3 ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=&Dimensions;
                      RunObject=Page 540;
                      RunPageLink=Table ID=CONST(11012823),
                                  No.=FIELD(No.);
                      Image=Dimensions }
      { 1210190093;3 ;Action    ;
                      CaptionML=ENU=Responsible &Persons;
                      RunObject=Page 11012858;
                      RunPageLink=Service Order No.=FIELD(No.);
                      Image=Users }
      { 1100525006;3 ;Action    ;
                      Name=Preference Locations;
                      CaptionML=ENU=Preference &Locations;
                      RunObject=Page 11072043;
                      RunPageView=SORTING(Priority);
                      RunPageLink=Type=CONST(Service Order),
                                  No.=FIELD(No.);
                      Visible=False;
                      Image=Company }
      { 1100525307;3 ;Action    ;
                      CaptionML=ENU=Service Order Locations;
                      RunObject=Page 11125140;
                      RunPageLink=Service Order No.=FIELD(No.);
                      Visible=false;
                      Image=ServiceZones }
      { 1100485107;3 ;Action    ;
                      CaptionML=ENU=Reference Periods;
                      Promoted=Yes;
                      Image=CalculatePlan;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReferencePeriodsServiceFRM@1100528600 : Page 11020670;
                               BEGIN
                                 ReferencePeriodsServiceFRM.SetServiceOrderNo("No.");
                                 ReferencePeriodsServiceFRM.RUN;
                               END;
                                }
      { 1100485135;3 ;Action    ;
                      CaptionML=ENU=Referent Points;
                      Promoted=Yes;
                      Image=EntriesList;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 DocumentReferencePointsFRM@1100528600 : Page 11020345;
                               BEGIN
                                 DocumentReferencePointsFRM.SetServiceOrderNo("No.");
                                 DocumentReferencePointsFRM.RUN;
                               END;
                                }
      { 1100525022;3 ;Action    ;
                      CaptionML=ENU=Service Authorities;
                      RunObject=Page 11125110;
                      RunPageLink=Field10=FIELD(No.);
                      Visible=false }
      { 1100409006;3 ;Action    ;
                      CaptionML=ENU=Plant Locations;
                      Image=SKU;
                      OnAction=VAR
                                 TmpLinkedPlantLoc@1100409000 : TEMPORARY Record 11012657;
                               BEGIN
                                 TESTFIELD("No.");
                                 TmpLinkedPlantLoc.SETRANGE("Link Type", TmpLinkedPlantLoc."Link Type"::"Service Order");
                                 TmpLinkedPlantLoc."Link Type" := TmpLinkedPlantLoc."Link Type"::"Service Order";
                                 TmpLinkedPlantLoc."Service Order No." := "No.";
                                 PAGE.RUNMODAL(PAGE::"Linked Plant Location List", TmpLinkedPlantLoc);
                               END;
                                }
      { 1100525524;3 ;Action    ;
                      CaptionML=ENU=Extra Cost;
                      RunObject=Page 11125105;
                      RunPageLink=Entity Type=CONST(Service Order),
                                  Entity Code=FIELD(No.);
                      Image=ChangePaymentTolerance }
      { 1210190031;2 ;Action    ;
                      ShortCutKey=Ctrl+B;
                      CaptionML=ENU=Budget;
                      RunObject=Page 11125247;
                      RunPageLink=Service Order No.=FIELD(No.);
                      Image=LedgerBudget }
      { 1100528694;2 ;Action    ;
                      CaptionML=ENU=Surcharges;
                      RunObject=Page 11125219;
                      RunPageView=WHERE(Type=CONST(Service Order));
                      RunPageLink=Code=FIELD(No.);
                      Image=InsertStartingFee }
      { 1100528693;2 ;Action    ;
                      CaptionML=ENU=Finance;
                      RunObject=Page 11126098;
                      RunPageLink=No.=FIELD(No.);
                      Promoted=Yes;
                      Image=ValueLedger;
                      PromotedCategory=Process }
      { 1100528685;2 ;Action    ;
                      CaptionML=ENU=Unit Price;
                      Image=CostCenter;
                      OnAction=VAR
                                 ServiceUnitPriceManagement@1100528600 : Codeunit 11012846;
                               BEGIN
                                 ServiceUnitPriceManagement.ShowSUPRecordingLines(Rec);
                               END;
                                }
      { 1100528691;2 ;Action    ;
                      CaptionML=ENU=Production Recording;
                      Image=GeneralPostingSetup;
                      OnAction=VAR
                                 ServiceUnitPriceManagement@1100528600 : Codeunit 11012846;
                               BEGIN
                                 ServiceUnitPriceManagement.ShowSUPProductionList("No.");
                               END;
                                }
      { 155     ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Service and Maintenance &Ledger Entry;
                      RunObject=Page 11012826;
                      RunPageView=SORTING(Service Order No.);
                      RunPageLink=Service Order No.=FIELD(No.);
                      Image=GLRegisters }
      { 1210190000;2 ;Action    ;
                      CaptionML=ENU=Invoices;
                      Image=Invoice;
                      OnAction=BEGIN
                                 ShowInvoice(FALSE);
                               END;
                                }
      { 1210190038;2 ;Action    ;
                      CaptionML=ENU=Credit Memos;
                      Image=CreditMemo;
                      OnAction=BEGIN
                                 ShowInvoice(TRUE);
                               END;
                                }
      { 1210190032;2 ;Action    ;
                      CaptionML=ENU=Source E-Mail;
                      Image=MailSetup;
                      OnAction=VAR
                                 ServiceSourceEMail@1210190000 : Record 11071711;
                               BEGIN
                                 ServiceSourceEMail.ShowSOServiceSourceEmail("No."); //mg, 09-01-12: M32065
                               END;
                                }
      { 1100485072;2 ;Action    ;
                      CaptionML=ENU=Log&book;
                      RunObject=Page 11020471;
                      RunPageLink=Document No.=FIELD(No.),
                                  Document Type=CONST(ServOrder);
                      Image=Timesheet }
      { 1100525219;2 ;Action    ;
                      CaptionML=ENU=Checklist;
                      RunObject=Page 11125125;
                      RunPageLink=Field10=FIELD(No.);
                      Image=CheckList }
      { 1100525299;2 ;Action    ;
                      CaptionML=ENU=Signature;
                      RunObject=Page 11125109;
                      RunPageLink=Service Order No.=FIELD(No.);
                      Image=Signature }
      { 1210190013;2 ;Action    ;
                      CaptionML=ENU=Debrief Specifications;
                      Promoted=Yes;
                      Image=Allocations;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowObjectSpecificationLines;
                               END;
                                }
      { 1210190150;2 ;Action    ;
                      CaptionML=ENU=Purchase Orders;
                      Image=Document;
                      OnAction=BEGIN
                                 ShowPurchaseOrdersForServiceOrder;
                               END;
                                }
      { 1210190009;2 ;Action    ;
                      CaptionML=ENU=Objects;
                      RunObject=Page 11125210;
                      RunPageView=SORTING(Service Order No.,Object No.,Maintenance Scheme);
                      RunPageLink=Service Order No.=FIELD(No.);
                      Promoted=Yes;
                      Image=WorkCenterLoad;
                      PromotedCategory=Category4 }
      { 1210190008;2 ;Action    ;
                      CaptionML=ENU=Advice Orders;
                      RunObject=Page 11126281;
                      RunPageView=SORTING(Record Type,Project No.,Service Order No.,Line No.);
                      RunPageLink=Record Type=CONST(ServOrder),
                                  Service Order No.=FIELD(No.);
                      Promoted=Yes;
                      Image=OrderTracking;
                      PromotedCategory=Category4 }
      { 1210190011;2 ;Action    ;
                      CaptionML=ENU=Cost Plus Entries;
                      RunObject=Page 11126280;
                      RunPageLink=Service Order No.=FIELD(No.);
                      Promoted=Yes;
                      Image=AdjustEntries;
                      PromotedCategory=Category4 }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 18      ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1210190037;2 ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=ENU=Generate Invoice;
                      Image=Invoice;
                      OnAction=BEGIN
                                 CreateSalesInvoiceViaCollList;
                               END;
                                }
      { 1100528611;2 ;Action    ;
                      CaptionML=ENU=Transfer Cost/Revenue to Project;
                      Image=TransferFunds;
                      OnAction=BEGIN
                                 TransferCostRevToProject;
                               END;
                                }
      { 1100528616;2 ;ActionGroup;
                      CaptionML=ENU=Copy/Next Service Order;
                      Image=MakeOrder }
      { 1100528615;3 ;Action    ;
                      CaptionML=ENU=Create Next Service Order (Additional);
                      Promoted=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1210190001 : Record 11012823;
                                 CreateNextServiceOrderAdd@1100528600 : Page 11229426;
                                 ServiceOrderNo@1210190002 : Code[20];
                               BEGIN
                                 IF CreateNextServiceOrderAdd.StdDialogRunModal("No.", ServiceOrderNo) THEN BEGIN
                                   COMMIT;
                                   ServiceOrder.GET(ServiceOrderNo);
                                   PAGE.RUNMODAL(PAGE::"Service Order (General)", ServiceOrder);
                                 END;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100528614;3 ;Action    ;
                      CaptionML=ENU=Create Next Service Order (Unfinished);
                      Promoted=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1210190001 : Record 11012823;
                                 CreateNextServiceOrderUnf@1100528600 : Page 11229427;
                                 ServiceOrderNo@1210190002 : Code[20];
                               BEGIN
                                 IF CreateNextServiceOrderUnf.StdDialogRunModal("No.", ServiceOrderNo) THEN BEGIN
                                   COMMIT;
                                   ServiceOrder.GET(ServiceOrderNo);
                                   PAGE.RUNMODAL(PAGE::"Service Order (General)", ServiceOrder);
                                 END;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100528610;3 ;Action    ;
                      CaptionML=ENU=Copy Service Order;
                      Image=Copy;
                      OnAction=VAR
                                 ServiceOrder@1100528600 : Record 11012823;
                                 CopyServiceOrder@1100528601 : Page 11020397;
                                 ServiceOrderNo@1210190002 : Code[20];
                               BEGIN
                                 IF CopyServiceOrder.StdDialogRunModal("No.", ServiceOrderNo) THEN BEGIN
                                   COMMIT;
                                   ServiceOrder.GET(ServiceOrderNo);
                                   ServiceOrder.ActivateServOrderCard;
                                 END;
                               END;
                                }
      { 1100528609;3 ;Action    ;
                      CaptionML=ENU=Disconnect Next Service Order;
                      Image=UnLinkAccount;
                      OnAction=BEGIN
                                 DisconnectNextServiceOrder(TRUE);
                               END;
                                }
      { 1100528600;3 ;Action    ;
                      CaptionML=ENU=Link to Base Service Order;
                      Image=LinkAccount;
                      OnAction=BEGIN
                                 SelectAndConnectToBaseServiceOrder;
                               END;
                                }
      { 1100485138;2 ;Action    ;
                      CaptionML=ENU=Create Try-Out Quote;
                      Visible=false;
                      Image=Quote;
                      OnAction=BEGIN
                                 CreateTryOutQuote;  //db, 02-10-07
                               END;
                                }
      { 1100525288;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+M;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Plant &Location;
                      Image=CreateSKU;
                      OnAction=BEGIN
                                 TESTFIELD("No.");
                                 Rec.RunCreatePlantLocation(Rec);
                               END;
                                }
      { 1100485000;2 ;Action    ;
                      CaptionML=ENU=Edit Word Do&cuments;
                      Promoted=Yes;
                      Image=Word;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Contact@1100485001 : Record 5050;
                               BEGIN
                                 TESTFIELD("Customer No.");
                                 IF Contact.GetContactByCustomer("Customer No.", Contact, TRUE) THEN
                                   EditDocuments(Contact."No.", "Contact Person No.", FALSE, '');
                               END;
                                }
      { 1210190001;2 ;Action    ;
                      ShortCutKey=Ctrl+S;
                      Ellipsis=Yes;
                      CaptionML=ENU=Print &Work Sheet;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 PrintDoc.PrintServiceOrderWorksheet(Rec);
                               END;
                                }
      { 1100525020;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Email Work Sheet;
                      Promoted=Yes;
                      Image=Email;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 DocumentPrint@1100525000 : Codeunit 229;
                               BEGIN
                                 //**4PS
                                 DocumentPrint.EmailServiceOrderWorksheet(Rec, TRUE);
                               END;
                                }
      { 1100528707;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Print Appointment Letter;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 PrintDoc.PrintSOAppointmentLetter(Rec);
                               END;
                                }
      { 1210190043;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Print Cost Plus &Entry;
                      Image=PrintDocument;
                      OnAction=VAR
                                 ServiceOrder@1100525001 : Record 11012823;
                               BEGIN
                                 ServiceOrder.SETRANGE("No.", "No.");
                                 PrintDoc.PrintServCostPlus(ServiceOrder);  //db, 25-06-07
                               END;
                                }
      { 1210190062;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Service &Order Reports;
                      Image=PrintDocument;
                      OnAction=BEGIN
                                 PrintDoc.PrintServOrder(Rec);
                               END;
                                }
      { 1100525014;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Service Order Text Reports;
                      Image=PrintDocument;
                      OnAction=BEGIN
                                 PrintDoc.PrintServOrderTexts(Rec);
                               END;
                                }
      { 1100525005;2 ;Action    ;
                      ShortCutKey=Ctrl+T;
                      Ellipsis=Yes;
                      CaptionML=ENU=Prin &Debrief Check List (4PS-Mobile);
                      Image=PrintDocument;
                      OnAction=VAR
                                 lvServOrderRec@1100525000 : Record 11012823;
                                 lvDebriefCheckLiisRpt@1100525001 : Report 11012931;
                               BEGIN
                                 TESTFIELD("No.");
                                 lvServOrderRec.SETRANGE("No.", "No.");
                                 lvDebriefCheckLiisRpt.SETTABLEVIEW(lvServOrderRec);
                                 lvDebriefCheckLiisRpt.RUNMODAL;
                               END;
                                }
      { 1100525311;2 ;Action    ;
                      ShortCutKey=Ctrl+K;
                      CaptionML=ENU=Completeness Check;
                      Image=CheckList;
                      OnAction=VAR
                                 CheckRecordCompletion@1100525000 : Codeunit 11012252;
                                 RecRef@1100525001 : RecordRef;
                               BEGIN
                                 RecRef.GETTABLE(Rec);
                                 CheckRecordCompletion.ShowIncompleteFields(RecRef);
                               END;
                                }
      { 1100528412;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=C&reate Order in Executing Company;
                      Image=Order;
                      OnAction=BEGIN
                                 CreateServiceOrderInExCompany;
                               END;
                                }
      { 1100528413;2 ;Action    ;
                      CaptionML=ENU=Get &Solution Text from Executing Company;
                      Image=Text;
                      OnAction=BEGIN
                                 GetSolutionTextFromExecCompany;
                               END;
                                }
      { 1100528414;2 ;Action    ;
                      CaptionML=ENU=Get &Actual Reference Point from Executing Company;
                      Image=EntriesList;
                      OnAction=BEGIN
                                 GetActRefPointFromExecCompany;
                               END;
                                }
      { 1100528608;2 ;Action    ;
                      CaptionML=ENU=Search Location;
                      Promoted=Yes;
                      Image=Find;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF SearchServiceLocation() THEN
                                   CurrPage.UPDATE;
                               END;
                                }
      { 1100409014;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+T;
                      CaptionML=ENU=Search Text;
                      Image=Text;
                      OnAction=BEGIN
                                 //db, 01-02-13: C005422
                                 PAGE.RUNMODAL(PAGE::"Service Order Monitor", ServOrderRec);
                               END;
                                }
      { 1100409008;2 ;Action    ;
                      CaptionML=ENU=Planned;
                      Promoted=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1100525001 : Record 11012823;
                               BEGIN
                                 //mg.sc, 15-04-13: C006726
                                 ServiceOrder := Rec;
                                 ServiceOrder.UpdateToNextRefPoint(0); // Planned
                                 //mg.ec, 15-04-13: C006726
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100409009;2 ;Action    ;
                      CaptionML=ENU=Reviewed;
                      Promoted=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1100525001 : Record 11012823;
                               BEGIN
                                 //mg.sc, 15-04-13: C006726
                                 ServiceOrder := Rec;
                                 ServiceOrder.UpdateToNextRefPoint(1); // Reviewed
                                 //mg.ec, 15-04-13: C006726
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100409011;2 ;Action    ;
                      CaptionML=ENU=Not Invoice;
                      Promoted=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1100525001 : Record 11012823;
                               BEGIN
                                 //mg.sc, 15-04-13: C006726
                                 ServiceOrder := Rec;
                                 ServiceOrder.UpdateToNextRefPoint(3); // Not Invoice
                                 //mg.ec, 15-04-13: C006726
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100409010;2 ;Action    ;
                      CaptionML=ENU=Make Chargeable;
                      Promoted=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1100525001 : Record 11012823;
                               BEGIN
                                 //mg.sc, 15-04-13: C006726
                                 ServiceOrder := Rec;
                                 ServiceOrder.UpdateToNextRefPoint(2); // Make Chargeable
                                 //mg.ec, 15-04-13: C006726
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100525007;1 ;ActionGroup;
                      CaptionML=ENU=Mail Documents;
                      ActionContainerType=NewDocumentItems }
      { 1100525012;2 ;Action    ;
                      CaptionML=ENU=Service Order;
                      Promoted=Yes;
                      Image=MailAttachment;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 Contact@1100525000 : Record 5050;
                               BEGIN
                                 TESTFIELD("Customer No.");
                                 IF Contact.GetContactByCustomer("Customer No.", Contact, TRUE) THEN
                                   EditDocuments(Contact."No.", '', TRUE, "E-Mail");
                               END;
                                }
      { 1100525013;2 ;Action    ;
                      CaptionML=ENU=Bill-to Customer;
                      Promoted=Yes;
                      Image=MailAttachment;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 Contact@1100525000 : Record 5050;
                                 Customer@1100525001 : Record 18;
                               BEGIN
                                 TESTFIELD("Bill-to Customer No.");
                                 IF Contact.GetContactByCustomer("Bill-to Customer No.", Contact, TRUE) THEN BEGIN
                                   Customer.GET("Bill-to Customer No.");
                                   EditDocuments(Contact."No.", '', TRUE, Customer."E-Mail");
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=ENU=General }

    { 34  ;2   ;Field     ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               xRec."Source Type" := "Source Type"::Direct;
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1100528301;2;Field  ;
                CaptionML=ENU=Calling Contact;
                SourceExpr=ServCallRec."Calling Contact";
                Editable=false }

    { 1100528302;2;Field  ;
                CaptionML=ENU=Calling Phone No.;
                SourceExpr=ServCallRec."Calling Phone No.";
                Editable=false }

    { 99  ;2   ;Field     ;
                SourceExpr=Description;
                OnValidate=BEGIN
                             DescriptionOnAfterValidate;
                           END;
                            }

    { 2   ;2   ;Field     ;
                SourceExpr="Customer No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             CustomerNoOnAfterValidate;
                           END;
                            }

    { 1210190061;2;Field  ;
                SourceExpr="Customer Name";
                Importance=Additional;
                Editable=FALSE }

    { 1210190002;2;Field  ;
                SourceExpr="Service Location No.";
                OnValidate=BEGIN
                             ServiceLocationNoOnAfterValida;
                           END;

                OnLookup=BEGIN
                           LookupServiceLocation;
                           CurrPage.UPDATE;
                         END;
                          }

    { 1100528303;2;Field  ;
                SourceExpr="Vessel No." }

    { 1100528304;2;Field  ;
                CaptionML=ENU=Vessel Name;
                SourceExpr=ServiceOrderExtension."Vessel Name";
                Editable=false }

    { 1100528305;2;Field  ;
                SourceExpr="Service Contract No." }

    { 1100528306;2;Field  ;
                SourceExpr="Service Contract Description" }

    { 25  ;2   ;Field     ;
                Lookup=No;
                SourceExpr=Priority;
                OnValidate=BEGIN
                             PriorityOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               AssistEditPriority;
                               PriorityOnAfterValidate;
                             END;
                              }

    { 1100528307;2;Field  ;
                SourceExpr="Contact Name" }

    { 1100528308;2;Field  ;
                CaptionML=ENU=Agent No.;
                SourceExpr=ServiceOrderExtension."Agent No.";
                OnValidate=BEGIN
                             ServiceOrderExtension.UpdateServOrderExtension("No.");
                             CurrPage.SAVERECORD;
                           END;
                            }

    { 1100528309;2;Field  ;
                CaptionML=ENU=Agent Name;
                SourceExpr=Agent.Name;
                Editable=false }

    { 1100528310;2;Field  ;
                CaptionML=ENU=Port;
                SourceExpr=ServiceOrderExtension.Port;
                Editable=false }

    { 1100528311;2;Field  ;
                CaptionML=ENU=Quay Berth;
                SourceExpr=ServiceOrderExtension."Quay Berth";
                OnValidate=BEGIN
                             ServiceOrderExtension.UpdateServOrderExtension("No.");
                             CurrPage.SAVERECORD;
                           END;
                            }

    { 1100528312;2;Field  ;
                CaptionML=ENU=ETA (Date);
                SourceExpr="First Possible Starting Date" }

    { 1100525015;2;Field  ;
                CaptionML=ENU=ETA (Time);
                SourceExpr="First Possible Starting Time" }

    { 1100525016;2;Field  ;
                CaptionML=ENU=ETD (Date);
                SourceExpr="Last Possible Ending Date" }

    { 1100528313;2;Field  ;
                CaptionML=ENU=EDT (Time);
                SourceExpr="Last Possible Ending Time" }

    { 1100485133;2;Field  ;
                SourceExpr="Order No. Customer";
                Importance=Additional;
                OnValidate=BEGIN
                             OrderNoCustomerOnAfterValidate;
                           END;
                            }

    { 1210190055;2;Field  ;
                SourceExpr="Order Kind" }

    { 126 ;2   ;Field     ;
                SourceExpr="Your Reference" }

    { 47  ;2   ;Field     ;
                SourceExpr=Status;
                Importance=Promoted;
                OnValidate=BEGIN
                             StatusOnAfterValidate;
                           END;
                            }

    { 1100528606;2;Field  ;
                SourceExpr="Order Type" }

    { 1100528318;2;Field  ;
                SourceExpr="Source Type" }

    { 1100409000;2;Field  ;
                SourceExpr="Assigned to" }

    { 1100525002;1;Part   ;
                CaptionML=ENU=Problem Text;
                SubPageLink=Table Name=CONST(Service Order),
                            No.=FIELD(No.),
                            Table Field=CONST(90);
                PagePartID=Page11125227;
                PartType=Page }

    { 1902768601;1;Group  ;
                CaptionML=ENU=Communication }

    { 28  ;2   ;Field     ;
                CaptionML=ENU=Phone No.;
                SourceExpr="Phone No." }

    { 1100528601;2;Field  ;
                SourceExpr="Phone No. 2";
                Importance=Additional }

    { 1100528603;2;Field  ;
                SourceExpr="Mobile Phone No." }

    { 63  ;2   ;Field     ;
                SourceExpr="E-Mail" }

    { 1100528605;2;Field  ;
                SourceExpr="Fax No." }

    { 1100528710;2;Field  ;
                CaptionML=ENU=Date Appointment Letter;
                SourceExpr=ServiceOrderExtension."Appointment Letter Code";
                TableRelation="SO Appointment Letter";
                Importance=Additional;
                Editable=FALSE }

    { 1100528709;2;Field  ;
                CaptionML=ENU=Date Appointment Letter Printed;
                SourceExpr=ServiceOrderExtension."Date Appointment Letter Sent";
                Importance=Additional;
                Editable=FALSE }

    { 1900515801;1;Group  ;
                CaptionML=ENU=Invoice Address }

    { 1100525197;2;Field  ;
                SourceExpr="Bill-to Customer No.";
                OnValidate=BEGIN
                             BilltoCustomerNoOnAfterValidat;
                           END;
                            }

    { 1100525211;2;Field  ;
                CaptionML=ENU=No. of Alternative Addresses;
                SourceExpr=NumAdrs;
                Editable=FALSE }

    { 1100525216;2;Field  ;
                SourceExpr="Alternative Bill-to Address" }

    { 1100525318;2;Field  ;
                SourceExpr="Bill-to Contact Person" }

    { 1100525358;2;Field  ;
                SourceExpr="Bill-to Contact Person Name";
                Importance=Additional }

    { 1100525198;2;Field  ;
                SourceExpr="Bill-to Name" }

    { 1100525213;2;Field  ;
                SourceExpr="Bill-to Name 2";
                Importance=Additional }

    { 1100525199;2;Field  ;
                SourceExpr="Bill-to Address" }

    { 1100525212;2;Field  ;
                SourceExpr="Bill-to Address 2";
                Importance=Additional }

    { 1100525200;2;Field  ;
                SourceExpr="Bill-to Post Code" }

    { 1100525361;2;Field  ;
                CaptionML=ENU=Contact No. Bill-to;
                SourceExpr="Bill-to Contact No.";
                Visible=FALSE }

    { 1100525221;2;Field  ;
                SourceExpr="Bill-to City" }

    { 1100528401;2;Field  ;
                CaptionML=ENU=Bill-to Language Code;
                SourceExpr=GetBillToLanguageCode;
                Editable=FALSE }

    { 1905885101;1;Group  ;
                CaptionML=ENU=Invoicing }

    { 1100528660;2;Field  ;
                CaptionClass=Text19056489 }

    { 1100528658;2;Field  ;
                CaptionML=ENU=All;
                SourceExpr="Additional Cost";
                Editable=AdditionalCostEditable }

    { 1100528656;2;Field  ;
                CaptionML=ENU=Labor;
                SourceExpr="Additional Cost (Labor)";
                Editable=AdditionalCostLaborEditable }

    { 1100528654;2;Field  ;
                CaptionML=ENU=Material;
                SourceExpr="Additional Cost (Material)";
                Editable=AdditionalCostMaterialEditable }

    { 1100528652;2;Field  ;
                CaptionML=ENU=Subcontracting;
                SourceExpr="Additional Cost (Subc)";
                Editable=AdditionalCostSubcEditable }

    { 1100528649;2;Field  ;
                CaptionML=ENU=Plant;
                SourceExpr="Additional Cost (Plant)";
                Editable=AdditionalCostPlantEditable }

    { 1100528650;2;Field  ;
                CaptionML=ENU=Sundry;
                SourceExpr="Additional Cost (Sundry)";
                Editable=AdditionalCostSundryEditable }

    { 1100525243;2;Field  ;
                SourceExpr="Invoice Price";
                OnDrillDown=BEGIN
                              CostPlusRec.RESET;
                              CostPlusRec.SETRANGE("Service Order No.", "No.");
                              CostPlusRec.SETRANGE(Invoiced, FALSE);
                              PAGE.RUN(PAGE::"Service Order Cost Plus SF2", CostPlusRec);
                            END;
                             }

    { 1100525244;2;Field  ;
                SourceExpr="Invoiced Price" }

    { 1100525245;2;Field  ;
                SourceExpr="Invoice in Process" }

    { 1100525246;2;Field  ;
                SourceExpr="Credit Memo in Process" }

    { 1100525201;2;Field  ;
                SourceExpr="VAT Prod. Posting Group" }

    { 1210190020;2;Field  ;
                SourceExpr="Service Package" }

    { 1100528643;2;Field  ;
                SourceExpr="Collective List No." }

    { 1905596001;1;Group  ;
                CaptionML=ENU=Agreements }

    { 1100525210;2;Field  ;
                SourceExpr="Settlement Method" }

    { 1100525003;2;Field  ;
                SourceExpr="Currency Code" }

    { 1100525004;2;Field  ;
                SourceExpr="Order Amount" }

    { 1100525204;2;Field  ;
                SourceExpr="Order Amount (LCY)" }

    { 1100525205;2;Field  ;
                SourceExpr="Installment Scheme" }

    { 1100528677;2;Field  ;
                SourceExpr="Invoice Base Method";
                Editable=InvoiceBaseMethodEditable;
                OnValidate=BEGIN
                             UpdateEditable;
                           END;
                            }

    { 1100528675;2;Field  ;
                SourceExpr="Invoice Base Amount Labor";
                Editable=InvoiceBaseAmountsEditable }

    { 1100528671;2;Field  ;
                SourceExpr="Invoice Base Amount Material";
                Editable=InvoiceBaseAmountsEditable }

    { 1100528673;2;Field  ;
                SourceExpr="Invoice Base Amount Total";
                Editable=InvoiceBaseAmountsEditable }

    { 1100528687;2;Field  ;
                SourceExpr="Price Book Type";
                Importance=Additional;
                OnValidate=BEGIN
                             UnitPriceTypeOnAfterValidate;
                           END;
                            }

    { 1100528681;2;Field  ;
                Name=UnitPriceCode;
                CaptionML=ENU=Unit Price Code;
                SourceExpr=ServiceOrderExtension."Price Book Code";
                Importance=Additional;
                Editable=UnitPriceCodeEditable;
                OnValidate=VAR
                             ServiceUnitPriceManagement@1100525000 : Codeunit 11012846;
                           BEGIN
                             ServiceOrderExtension.VALIDATE("Price Book Code");
                             ServiceOrderExtension.ValidateUnitPriceFields(Rec);
                             ServiceOrderExtension.UpdateServOrderExtension("No.");
                             ServiceOrderExtension."Price Book Index Date" :=
                              ServiceUnitPriceManagement.GetLatestPriceBookIndexDate("Price Book Type", ServiceOrderExtension."Price Book Code");
                           END;

                OnLookup=VAR
                           ServiceUnitPrice@1100528601 : Record 11071768;
                           ServiceUnitPriceList@1100528600 : Page 11125269;
                         BEGIN
                           ServiceUnitPrice.SETRANGE(Type, "Price Book Type");
                           ServiceUnitPriceList.LOOKUPMODE(TRUE);
                           ServiceUnitPriceList.SETTABLEVIEW(ServiceUnitPrice);
                           IF (ServiceUnitPriceList.RUNMODAL = ACTION::LookupOK) THEN BEGIN
                             ServiceUnitPriceList.GETRECORD(ServiceUnitPrice);
                             ServiceOrderExtension.VALIDATE("Price Book Code", ServiceUnitPrice.Code);
                             ServiceOrderExtension.VALIDATE("Price Book Index Date", ServiceUnitPrice."Index Date");
                             ServiceOrderExtension.ValidateUnitPriceFields(Rec);
                             ServiceOrderExtension.UpdateServOrderExtension("No.");
                           END;
                         END;
                          }

    { 1100528684;2;Field  ;
                Name=UnitPriceIndexDate;
                CaptionML=ENU=Unit Price Index Date;
                SourceExpr=ServiceOrderExtension."Price Book Index Date";
                Importance=Additional;
                Editable=UnitPriceIndexDateEditable;
                OnValidate=BEGIN
                             ServiceOrderExtension.VALIDATE("Price Book Index Date");
                             ServiceOrderExtension.ValidateUnitPriceFieldsIncDate(Rec);
                             ServiceOrderExtension.UpdateServOrderExtension("No.");
                           END;
                            }

    { 1100528689;2;Field  ;
                SourceExpr="Unit Price Status";
                Importance=Additional;
                Editable="Unit Price StatusEditable" }

    { 1100525008;2;Field  ;
                SourceExpr="Limit Budget Hours" }

    { 1100525009;2;Field  ;
                SourceExpr="Limit Budget Labor" }

    { 1100525010;2;Field  ;
                SourceExpr="Limit Budget Material" }

    { 1100525011;2;Field  ;
                SourceExpr="Limit Budget Total" }

    { 1901343701;1;Group  ;
                CaptionML=ENU=Planning }

    { 1100525117;2;Field  ;
                SourceExpr="Order Date" }

    { 1100525116;2;Field  ;
                SourceExpr="Order Time" }

    { 1100528629;2;Field  ;
                SourceExpr="Starting Date";
                OnValidate=BEGIN
                             StartingDateOnAfterValidate;
                           END;
                            }

    { 1100528628;2;Field  ;
                SourceExpr="Starting Time";
                OnValidate=BEGIN
                             StartingTimeOnAfterValidate;
                           END;
                            }

    { 1100528631;2;Field  ;
                SourceExpr="Ending Date";
                OnValidate=BEGIN
                             EndingDateOnAfterValidate;
                           END;
                            }

    { 1100528633;2;Field  ;
                SourceExpr="Ending Time";
                OnValidate=BEGIN
                             EndingTimeOnAfterValidate;
                           END;
                            }

    { 1100525163;2;Field  ;
                SourceExpr="Closing Date";
                Importance=Additional;
                Editable=ClosingDateEditable }

    { 1210190088;2;Field  ;
                SourceExpr=Watch;
                Importance=Additional }

    { 1100528666;2;Field  ;
                SourceExpr="Employee No.";
                OnValidate=BEGIN
                             IF "Employee No." <> xRec."Employee No." THEN BEGIN
                               CurrPage.SAVERECORD;
                               COMMIT;
                               UpdateWorkorderEmployee(FALSE);
                               CurrPage.UPDATE(TRUE);
                             END;
                           END;

                OnLookup=VAR
                           ResourceNo@1100527000 : Code[20];
                         BEGIN
                           ResourceNo := "Employee No.";
                           LookupResourceEmpl(ResourceNo, TRUE);
                           IF ResourceNo <> "Employee No." THEN BEGIN
                             Text := ResourceNo;
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 1100528668;2;Field  ;
                DrillDown=No;
                SourceExpr="Employee Name";
                Importance=Additional;
                Editable=FALSE }

    { 1210190005;2;Field  ;
                AssistEdit=No;
                SourceExpr=Subcontractor;
                OnAssistEdit=BEGIN
                               AssistEditSubcontractor(3);  //db, 02-03-09: gespecificeerd overzicht met contractregels
                               CurrPage.UPDATE;
                             END;
                              }

    { 1210190006;2;Field  ;
                SourceExpr="Subcontractor Name";
                Importance=Additional;
                Editable=FALSE }

    { 1100409012;2;Field  ;
                SourceExpr="Next Reference Period" }

    { 1100409013;2;Field  ;
                SourceExpr="Next Reference Period Desc";
                Importance=Additional }

    { 1100528669;2;Field  ;
                SourceExpr="Next Deadline" }

    { 1100528612;2;Field  ;
                SourceExpr="Service Cluster";
                Editable=false }

    { 1100528613;2;Field  ;
                SourceExpr="Service Cluster Seqn." }

    { 1100528634;2;Field  ;
                SourceExpr="Expected Hours";
                OnValidate=BEGIN
                             ExpectedHoursOnAfterValidate;
                           END;
                            }

    { 1210190029;2;Field  ;
                SourceExpr="Budget Hours" }

    { 1210190022;2;Field  ;
                SourceExpr="Duration Time" }

    { 1903880701;1;Group  ;
                CaptionML=ENU=Other }

    { 1100485075;2;Field  ;
                Lookup=No;
                SourceExpr=Discipline;
                OnValidate=BEGIN
                             DisciplineOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               AssistEditDiscipline;
                               DisciplineOnAfterValidate;
                             END;
                              }

    { 1100485140;2;Field  ;
                Lookup=No;
                SourceExpr="Trade Speciality";
                OnValidate=BEGIN
                             TradeSpecialityOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               AssistEditTradeSpeciality;
                               TradeSpecialityOnAfterValidate;
                             END;
                              }

    { 1100525090;2;Field  ;
                SourceExpr=Problem }

    { 1210190084;2;Field  ;
                SourceExpr="Customer Problem" }

    { 1100525091;2;Field  ;
                SourceExpr=Cause }

    { 1100525092;2;Field  ;
                SourceExpr=Solution }

    { 1100528602;2;Field  ;
                CaptionML=ENU=Charge to Project;
                SourceExpr=ServiceOrderExtension."Master Project";
                OnValidate=BEGIN
                             MasterProjectValidate;
                           END;

                OnLookup=VAR
                           Job@1100409000 : Record 11072003;
                         BEGIN
                           Job.SETRANGE("Internal Project", FALSE);
                           IF ServiceOrderExtension."Master Project" <> '' THEN
                             IF Job.GET(ServiceOrderExtension."Master Project") THEN;
                           IF PAGE.RUNMODAL(0, Job) = ACTION::LookupOK THEN BEGIN
                             ServiceOrderExtension."Master Project" := Job."No.";
                             MasterProjectValidate;
                           END;
                         END;
                          }

    { 1100528604;2;Field  ;
                CaptionML=ENU=Charge to Element;
                SourceExpr=ServiceOrderExtension."Master Element";
                OnValidate=BEGIN
                             ServiceOrderExtension.UpdateServOrderExtension("No.");
                             ServiceOrderExtension.VALIDATE("Master Element");
                             CurrPage.SAVERECORD;
                           END;

                OnLookup=VAR
                           ProjectElement@1100528600 : Record 11012010;
                         BEGIN
                           ProjectElement.SETRANGE("Project No.", ServiceOrderExtension."Master Project");
                           IF ProjectElement.GET(ServiceOrderExtension."Master Project", ServiceOrderExtension."Master Element") THEN;
                           IF PAGE.RUNMODAL(0, ProjectElement) = ACTION::LookupOK THEN BEGIN
                             ServiceOrderExtension."Master Element" := ProjectElement.Element;
                             ServiceOrderExtension.UpdateServOrderExtension("No.");
                             CurrPage.SAVERECORD;
                           END;
                         END;
                          }

    { 1906942401;1;Group  ;
                CaptionML=ENU=Field Service }

    { 1100525025;2;Field  ;
                SourceExpr="Export to FSA" }

    { 1100525027;2;Field  ;
                SourceExpr="Date/Time Export to FSA" }

    { 1100525031;2;Field  ;
                SourceExpr="Decentral Created";
                Editable=FALSE }

    { 1100525028;2;Field  ;
                CaptionML=ENU=Signature;
                SourceExpr=SignatureRec.Signature.HASVALUE }

    { 1100525029;2;Field  ;
                SourceExpr=Signer }

    { 1100525030;2;Field  ;
                SourceExpr="E-Mail Signer" }

    { 1100525289;2;Field  ;
                SourceExpr="Send Report" }

    { 1100525034;2;Field  ;
                SourceExpr="Debrief Comment" }

    { 1100525037;2;Field  ;
                CaptionML=ENU=Debrief Specifications;
                SourceExpr=DebriefSpecifications() }

    { 1100409004;2;Field  ;
                CaptionML=ENU=Documents 4PS Mobile;
                SourceExpr=DocumentsCreatedByFSA }

    { 1100528319;1;Group  ;
                CaptionML=ENU=Amount;
                GroupType=Group }

    { 1100528320;2;Field  ;
                SourceExpr="Actual Costs" }

    { 1100528327;2;Field  ;
                SourceExpr="Actual Hours" }

    { 1100528326;2;Field  ;
                SourceExpr="Open Amount (Hours)" }

    { 1100528325;2;Field  ;
                SourceExpr="Open Hours" }

    { 1100528324;2;Field  ;
                CaptionML=ENU=Open (Purchase) + Rec./Not Inv.;
                SourceExpr="Open (Purchase)" + "Received/Not Invoiced";
                Editable=false }

    { 1100528323;2;Field  ;
                SourceExpr="Open (Inventory)" }

    { 1100528322;2;Field  ;
                CaptionML=ENU=Open (Overhead Surcharge);
                SourceExpr="Open Ovh. Surch. Firm (Purch.)"+"Open Ovh. Surch. (Hours)"+"Open Ovh. Surch. (Inventory)";
                Editable=false }

    { 1902736301;1;Group  ;
                CaptionML=ENU=Source }

    { 1100525062;2;Field  ;
                CaptionML=ENU=Calling Contact;
                SourceExpr=ServCallRec."Calling Contact";
                Editable=FALSE }

    { 1100525064;2;Field  ;
                CaptionML=ENU=Calling Account;
                SourceExpr=ServCallRec."Calling Account";
                Editable=FALSE }

    { 1100525068;2;Field  ;
                CaptionML=ENU=Calling Phone No.;
                SourceExpr=ServCallRec."Calling Phone No.";
                Editable=FALSE }

    { 1100528645;2;Field  ;
                SourceExpr="Actual Reference Point";
                OnDrillDown=BEGIN
                              DrillDownActualRefPoint();
                            END;
                             }

    { 1100528647;2;Field  ;
                SourceExpr="Actual Reference Point Desc";
                Importance=Additional }

    { 1100528404;2;Field  ;
                CaptionML=ENU=Executing Company Name;
                SourceExpr=ServiceOrderExtension."Executing Company Name";
                Importance=Additional;
                Editable=FALSE }

    { 1100528406;2;Field  ;
                CaptionML=ENU=Order No. Executing Company;
                SourceExpr=ServiceOrderExtension."Order No. Executing Company";
                Importance=Additional;
                Editable=FALSE }

    { 1100528407;2;Field  ;
                CaptionML=ENU=Act. Ref. Point Exec. Company;
                SourceExpr=ServiceOrderExtension."Act. Ref. Point Exec. Company";
                Importance=Additional;
                Editable=FALSE }

    { 1100528410;2;Field  ;
                CaptionML=ENU=Actual Reference Point Ex. Comp. Description;
                SourceExpr=ServiceOrderExtension."Act. Ref. Point Ex. Comp. Dsc.";
                Importance=Additional;
                Editable=FALSE }

    { 1100528405;2;Field  ;
                CaptionML=ENU=Principal Company Name;
                SourceExpr=ServiceOrderExtension."Principal Company Name";
                Importance=Additional;
                Editable=FALSE }

    { 1100528408;2;Field  ;
                CaptionML=ENU=Serv. Contr. No. Princ. Comp.;
                SourceExpr=ServiceOrderExtension."Serv. Contr. No. Princ. Comp.";
                Importance=Additional;
                Editable=FALSE }

    { 1100525094;2;Field  ;
                CaptionML=ENU=Try-Out;
                SourceExpr=TryOutRelation;
                Editable=FALSE;
                OnLookup=BEGIN
                           TryOutRelationRec.ShowTryOut('', '', '', '', "No.", '', '', 1);
                         END;
                          }

    { 1100525093;2;Field  ;
                CaptionML=ENU=Try-Out Quote;
                SourceExpr=TryOutQuoteRelation;
                Editable=FALSE;
                OnLookup=BEGIN
                           TryOutRelationRec.ShowTryOut('', '', '', '', "No.", '', '', 2);
                         END;
                          }

    { 1100525097;2;Field  ;
                SourceExpr="Estimate No." }

    { 1100525103;2;Field  ;
                SourceExpr="Sub-Estimate No." }

    { 1100525166;2;Field  ;
                SourceExpr="Created on";
                Importance=Additional }

    { 1100525167;2;Field  ;
                Lookup=No;
                SourceExpr="Created by";
                Importance=Additional }

    { 1100525160;2;Field  ;
                SourceExpr="Modified on";
                Importance=Additional }

    { 1100525161;2;Field  ;
                Lookup=No;
                SourceExpr="Modified by";
                Importance=Additional }

    { 1210190003;0;Container;
                ContainerType=FactBoxArea }

    { 1100529900;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                PartType=Page }

    { 1210190007;1;Part   ;
                SubPageLink=No.=FIELD(No.),
                            Department Filter=FIELD(Department Filter);
                PagePartID=Page11130486;
                PartType=Page }

    { 1100525001;1;Part   ;
                SubPageLink=No.=FIELD(No.),
                            Department Filter=FIELD(Department Filter);
                PagePartID=Page11130492;
                PartType=Page }

    { 1100528300;1;Part   ;
                CaptionML=ENU=Vessels;
                SubPageLink=No.=FIELD(No.),
                            Department Filter=FIELD(Department Filter);
                PagePartID=Page11229205;
                PartType=Page }

    { 1100525000;1;Part   ;
                SubPageLink=No.=FIELD(No.),
                            Department Filter=FIELD(Department Filter);
                PagePartID=Page11130483;
                PartType=Page }

    { 1210190004;1;Part   ;
                Name=ServiceOrderFlowFB;
                CaptionML=ENU=Service Order Structure;
                SubPageView=SORTING(Base Service Order No.);
                SubPageLink=Base Service Order No.=FIELD(Base Service Order No.),
                            Department Filter=FIELD(Department Filter);
                PagePartID=Page11125263;
                PartType=Page }

  }
  CODE
  {
    VAR
      ServSetup@1210190010 : Record 11012800;
      UserSetup@1100485005 : Record 91;
      ServLedgerRec@1210190000 : Record 11012819;
      ServLocRec@1210190005 : Record 11012801;
      ServCallRec@1100525002 : Record 11012822;
      ServOrderRec@1210190002 : Record 11012823;
      CostPlusRec@1210190001 : Record 11012825;
      EmplRec@1100485004 : Record 5200;
      TryOutRelationRec@1210190014 : Record 11012761;
      AdrsRec@1100485009 : Record 222;
      SignatureRec@1100525001 : Record 11020349;
      ServiceOrderExtension@1100528600 : Record 11071727;
      Agent@1100528300 : Record 11071952;
      Mail@1012 : Codeunit 397;
      PrintDoc@1210190003 : Codeunit 229;
      Text000@1100485000 : TextConst 'ENU=First Associate a Prospect to Customer %1.';
      SkipCheckBlockedByFSA@1100485007 : Boolean;
      TryOutRelation@1210190013 : Code[20];
      TryOutQuoteRelation@1210190012 : Code[20];
      NextOrder@1100485010 : Text[30];
      NumAdrs@1100485008 : Text[30];
      DepAuthRec@1100000997 : Record 11012466;
      Text002@1100485006 : TextConst 'ENU=Modify/Delete not allowed, the Service Order is blocked by the Field Service.';
      GeneratedtTxtConst1@1100000998 : TextConst 'ENU=You are not authorized for Department Code %1.';
      SalesInfoPaneMgt@1100485011 : Codeunit 7171;
      ServiceOrderInfoMgt@1210190004 : Codeunit 11012841;
      DPA_IsHardFilter@1100000999 : Boolean;
      CreditLimitButtonVisible@19033344 : Boolean INDATASET;
      AdviceFrmHeight@19076011 : Integer;
      CostPlusFrmHeight@19041050 : Integer;
      AdviceFrmWidth@19056703 : Integer;
      CostPlusFrmWidth@19072434 : Integer;
      "Unit Price StatusEditable"@19064144 : Boolean INDATASET;
      UnitPriceIndexDateEditable@19010600 : Boolean INDATASET;
      UnitPriceCodeEditable@19055694 : Boolean INDATASET;
      Text19056489@19045898 : TextConst 'ENU=Additional Cost';
      InvoiceBaseMethodEditable@1210190006 : Boolean INDATASET;
      InvoiceBaseAmountsEditable@1210190017 : Boolean INDATASET;
      AdditionalCostEditable@1210190007 : Boolean INDATASET;
      AdditionalCostPlantEditable@1210190008 : Boolean INDATASET;
      AdditionalCostSundryEditable@1210190009 : Boolean INDATASET;
      AdditionalCostSubcEditable@1210190011 : Boolean INDATASET;
      AdditionalCostMaterialEditable@1210190015 : Boolean INDATASET;
      AdditionalCostLaborEditable@1210190016 : Boolean INDATASET;
      ClosingDateEditable@1210190018 : Boolean INDATASET;

    PROCEDURE UpdateReferenceNorm@1100485003();
    VAR
      RefPeriodRec@1100485000 : Record 11020272;
    BEGIN
      CurrPage.UPDATE;
      RefPeriodRec.UpdateNorm(RefPeriodRec.Type::ServOrder, "No.");
      GET("No.");  //db, 06-11-06: previous function updates maintable; avoid SQL-message
    END;

    PROCEDURE StartServOrders@1100485002(lvAction@1100485000 : Integer;lvCount@1100485001 : Boolean) : Integer;
    VAR
      lvServOrderRec@1100485002 : Record 11012823;
    BEGIN
      lvServOrderRec.SETFILTER("No.", '<>%1', "No.");
      CASE lvAction OF
        0:
          BEGIN
            lvServOrderRec.SETCURRENTKEY("Service Contract No.");
            lvServOrderRec.SETRANGE("Service Contract No.", "Service Contract No.");
            IF (lvCount = TRUE) AND ("Service Contract No." = '') THEN EXIT(0);
          END;
        1:
          BEGIN
            lvServOrderRec.SETCURRENTKEY("Service Location No.");
            lvServOrderRec.SETRANGE("Service Location No.", "Service Location No.");
            IF (lvCount = TRUE) AND ("Service Location No." = '') THEN EXIT(0);
          END;
        2:
          BEGIN
            lvServOrderRec.SETCURRENTKEY("Call No.");
            lvServOrderRec.SETRANGE("Call No.", "Call No.");
            lvServOrderRec.SETRANGE("Source Type", lvServOrderRec."Source Type"::Call);
            IF (lvCount = TRUE) AND ("Call No." = '') THEN EXIT(0);
          END;
        3:
          BEGIN
            IF NOT lvCount THEN BEGIN
              IF "Base Service Order No." = '' THEN
                EXIT(0);
              lvServOrderRec.SETRANGE("No.", "Base Service Order No.");
              PAGE.RUNMODAL(PAGE::"Base Service Order", lvServOrderRec);
              EXIT(0);
            END ELSE BEGIN
              lvServOrderRec.SETCURRENTKEY("Base Service Order No.");
              lvServOrderRec.SETRANGE("Base Service Order No.", "Base Service Order No.");
              IF ("Base Service Order No."= '') THEN EXIT(0);
              EXIT(lvServOrderRec.COUNT);
            END;
          END;
      END;

      IF lvCount = FALSE THEN BEGIN
        PAGE.RUNMODAL(0, lvServOrderRec);
      END ELSE BEGIN
        EXIT(lvServOrderRec.COUNT);
      END;
    END;

    PROCEDURE GetNoOfServOrders@1100485001(lvAction@1100485001 : Integer) NumServOrder : Integer;
    BEGIN
      NumServOrder := StartServOrders(lvAction, TRUE);
      EXIT(NumServOrder);
    END;

    PROCEDURE DebriefSpecifications@1100525003() : Boolean;
    VAR
      ServiceOrderObjSpecLine@1210190000 : Record 11071782;
    BEGIN
      ServiceOrderObjSpecLine.SETRANGE("Service Order No.", "No.");
      ServiceOrderObjSpecLine.SETFILTER("New Value", '<>%1', '');
      ServiceOrderObjSpecLine.SETRANGE("Processed Date", 0D);
      ServiceOrderObjSpecLine.SETFILTER(Status, '<%1', ServiceOrderObjSpecLine.Status::Approved);
      EXIT(NOT ServiceOrderObjSpecLine.ISEMPTY);
    END;

    PROCEDURE GetInfo@1100525002() : Integer;
    VAR
      RecRef@1100525000 : RecordRef;
      DocumentLinkMgt@1100525001 : Codeunit 11012401;
    BEGIN
      RecRef.GETTABLE(Rec);

      EXIT(DocumentLinkMgt.GetInfo(RecRef))
    END;

    PROCEDURE ShowDocuments@1100525000();
    VAR
      RecRef@1100525000 : RecordRef;
      DocumentFilters@1100525001 : Codeunit 11012432;
    BEGIN
      RecRef.GETTABLE(Rec);
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, "Global Dimension 1 Code", FALSE, TRUE);
    END;

    PROCEDURE GetServCall@1100525001();
    BEGIN
      //db, 06-09-10: read call after removing to much flowfields
      IF NOT ServCallRec.GET("Call No.") THEN ServCallRec.INIT;
    END;

    PROCEDURE GetNoOfTryOuts@1100528600() : Integer;
    VAR
      TryoutCode@1100528600 : Code[20];
    BEGIN
      EXIT(TryOutRelationRec.GetNoOfTryOuts('', '', '', '', "No.", '', '', 1, TryoutCode));
    END;

    PROCEDURE GetNoOfTryOutQuotes@1100528602() : Integer;
    VAR
      TryoutCode@1100528600 : Code[20];
    BEGIN
      EXIT(TryOutRelationRec.GetNoOfTryOuts('', '', '', '', "No.", '', '', 2, TryoutCode));
    END;

    PROCEDURE UpdateEditable@1100528603();
    BEGIN
      InvoiceBaseMethodEditable := "Base Service Order No." = "No.";
      InvoiceBaseAmountsEditable := "Invoice Base Method" <> "Invoice Base Method"::" ";
      "Unit Price StatusEditable" := "Price Book Type" <> "Price Book Type"::None;
      UnitPriceIndexDateEditable := "Price Book Type" <> "Price Book Type"::None;
      UnitPriceCodeEditable := "Price Book Type" <> "Price Book Type"::None;
      AdditionalCostEditable := ("Source Type" <> "Source Type"::Direct) OR ("Service Contract No." = '');
      AdditionalCostPlantEditable := ServSetup."Add.Cost Based On Contr.Disc.";
      AdditionalCostSundryEditable := ServSetup."Add.Cost Based On Contr.Disc.";
      AdditionalCostSubcEditable := ServSetup."Add.Cost Based On Contr.Disc.";
      AdditionalCostMaterialEditable := ServSetup."Add.Cost Based On Contr.Disc.";
      AdditionalCostLaborEditable := ServSetup."Add.Cost Based On Contr.Disc.";
      ClosingDateEditable := Status <> Status::Finished;
    END;

    LOCAL PROCEDURE CreateServiceOrderInExCompany@1100528400();
    VAR
      ServiceOrder@1100528400 : Record 11012823;
    BEGIN
      ServiceOrderExtension.TESTFIELD("Executing Company Name", '');
      ServiceOrderExtension.TESTFIELD("Order No. Executing Company", '');
      TESTFIELD("Service Contract No.");
      ServiceOrder.COPY(Rec);
      ServiceOrder.FILTERGROUP(2);
      ServiceOrder.SETRANGE("No.", "No.");
      ServiceOrder.FILTERGROUP(0);
      REPORT.RUNMODAL(REPORT::"Create Serv. Ord. in Ex. Comp.", TRUE, FALSE, ServiceOrder);
    END;

    LOCAL PROCEDURE NameOnAfterValidate@19065884();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE AddressOnAfterValidate@19060866();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PostCodeOnAfterValidate@19007075();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CityOnAfterValidate@19023525();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CustomerNoOnAfterValidate@19016267();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE DescriptionOnAfterValidate@19030973();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ServiceContractNoOnAfterValida@19025091();
    BEGIN
      UpdateEditable;
      CurrPage.UPDATE;
      UpdateReferenceNorm;
    END;

    LOCAL PROCEDURE StatusOnAfterValidate@19072689();
    BEGIN
      SkipCheckBlockedByFSA := TRUE;  //* Bij 'OnValidate' van de tabel is al 'MODIFY(TRUE)' uitgevoerd, waarbij
                                      //* ook het actuele logmoment al is bijgewerkt.
      CurrPage.UPDATE();
      SkipCheckBlockedByFSA := FALSE;
    END;

    LOCAL PROCEDURE PriorityOnAfterValidate@19076862();
    BEGIN
      UpdateReferenceNorm;
    END;

    LOCAL PROCEDURE ServiceLocationNoOnAfterValida@19019562();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OrderNoCustomerOnAfterValidate@19028010();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OrderManagerOnAfterValidate@19064434();
    BEGIN
      CALCFIELDS("Order Manager Name");
    END;

    LOCAL PROCEDURE AssignedtoOnAfterValidate@19050262();
    BEGIN
      CALCFIELDS("Name Assigned To");
    END;

    LOCAL PROCEDURE BilltoCustomerNoOnAfterValidat@19044114();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE UnitPriceTypeOnAfterValidate@19065184();
    BEGIN
      UpdateEditable;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE FirstPossibleStartingTimeOnAft@19003644();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE FirstPossibleStartingDateOnAft@19032865();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE LastPossibleEndingDateOnAfterV@19020180();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE LastPossibleEndingTimeOnAfterV@19066821();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE StartingTimeOnAfterValidate@19008557();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE StartingDateOnAfterValidate@19020273();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE EndingDateOnAfterValidate@19076447();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE EndingTimeOnAfterValidate@19075483();
    BEGIN
      CurrPage.UPDATE;  //db, 08-12-10: M23729
    END;

    LOCAL PROCEDURE ExpectedHoursOnAfterValidate@19072443();
    BEGIN
      CurrPage.UPDATE;  //db, 14-08-09: M15017
    END;

    LOCAL PROCEDURE EmployeeNoOnAfterValidate@19040646();
    BEGIN
      CALCFIELDS("Employee Name");
    END;

    LOCAL PROCEDURE DisciplineOnAfterValidate@19013243();
    BEGIN
      UpdateReferenceNorm;
    END;

    PROCEDURE TradeSpecialityOnAfterValidate@1100528604();
    BEGIN
      UpdateReferenceNorm;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    VAR
      RecRef@1100529900 : RecordRef;
      DummyOption@1100528800 : Option;
      Origin@1100528801 : ' ,Call,Service Order';
    BEGIN
      xRec := Rec;
      NextOrder := ShowNextOrder(0);

      NumAdrs := AdrsRec.CheckAvailableAddress("Bill-to Customer No.", 3);

      GetSignature(SignatureRec,TRUE);  //db, 10-08-10
      GetServCall;
      CreditLimitButtonVisible := (ActivateCreditLimit(0));  //db, 16-12-10: M23068

      UpdateEditable;

      RecRef.GETTABLE(Rec);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(TRUE);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode("Global Dimension 1 Code");

      IF (NOT Agent.GET(ServiceOrderExtension."Agent No.")) THEN Agent.INIT;
    END;

    PROCEDURE MasterProjectValidate@1100528601();
    BEGIN
      ServiceOrderExtension.VALIDATE("Master Project");
      ServiceOrderExtension.ValidateMasterProject(Rec);
      ServiceOrderExtension.UpdateServOrderExtension("No.");
      CurrPage.SAVERECORD;
    END;

    BEGIN
    END.
  }
}

