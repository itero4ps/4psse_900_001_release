OBJECT Page 11126291 Base Service Order
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Base Service Order;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11012823;
    SourceTableView=SORTING(Base Service Order No.)
                    WHERE(Base Service Order=CONST(Yes));
    PageType=Card;
    OnOpenPage=BEGIN
                 //**4PS.sn
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS.en
               END;

    OnNewRecord=BEGIN
                  //**4PS.sn
                  DPA_SetDefaultDepartment;
                  //**4PS.en
                END;

    OnInsertRecord=VAR
                     xRecRef@1100525000 : RecordRef;
                   BEGIN
                     //**4PS.sn
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS.en
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100528642;1 ;ActionGroup;
                      CaptionML=ENU=Base Service Order }
      { 1100528658;2 ;Action    ;
                      CaptionML=ENU=Cost Plus Entries;
                      Promoted=Yes;
                      Image=AdjustEntries;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrderInfoMgt@1100528600 : Codeunit 11012841;
                               BEGIN
                                 ServiceOrderInfoMgt.ShowBaseOrderCostPlusEntries("No.");
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528607;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1100409001;2 ;Action    ;
                      CaptionML=ENU=Generate Cost Plus Entry;
                      Image=SelectEntries;
                      OnAction=VAR
                                 ServiceLedgerEntry@1100409000 : Record 11012819;
                                 JobsSetup@1100525001 : Record 315;
                               BEGIN
                                 JobsSetup.GET;
                                 ServiceLedgerEntry."Service Order No." := "No.";
                                 ServiceLedgerEntry.SETRANGE("Base Service Order No.", "No.");
                                 ServiceLedgerEntry.SETRANGE("Cost Plus Entry Created", FALSE);
                                 ServiceLedgerEntry.SETFILTER("Service Order Status", '..%1', ServiceLedgerEntry."Service Order Status"::"Administrative Finished");
                                 ServiceLedgerEntry.SETCURRENTKEY("Base Service Order No.");
                                 IF JobsSetup."4PS-Mobile Active" THEN
                                   ServiceLedgerEntry.SETFILTER("Cost Type", '<>%1', ServiceLedgerEntry."Cost Type"::Material);
                                 REPORT.RUNMODAL(REPORT::"Create Serv. Order Cost Plus", TRUE, FALSE, ServiceLedgerEntry);
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100525003;2 ;Action    ;
                      CaptionML=ENU=Move Cost Plus Entries to Base Order;
                      Image=GetLines;
                      OnAction=VAR
                                 ServiceOrder@1100528600 : Record 11012823;
                                 ServiceOrderCostPlusEntry@1100528602 : Record 11012825;
                                 CompressCostPlusEntries@1100528603 : Codeunit 11012043;
                                 MoveSOCostPlustoBaseOrder@1100528601 : Report 11012893;
                               BEGIN
                                 IF "Base Service Order" THEN BEGIN
                                   ServiceOrder.SETCURRENTKEY("Base Service Order No.");
                                   ServiceOrder.SETRANGE("Base Service Order No.", "No.");
                                   MoveSOCostPlustoBaseOrder.SETTABLEVIEW(ServiceOrder);
                                   MoveSOCostPlustoBaseOrder.RUNMODAL;
                                   IF MoveSOCostPlustoBaseOrder.GetCompressedFlag THEN BEGIN
                                     COMMIT;
                                     ServiceOrderCostPlusEntry.SETCURRENTKEY("Base Service Order No.");
                                     ServiceOrderCostPlusEntry.SETRANGE("Base Service Order No.", "No.");
                                     CompressCostPlusEntries.ProcessServiceCostPlus(ServiceOrderCostPlusEntry);
                                   END;
                                 END;
                               END;
                                }
      { 1100528609;2 ;Action    ;
                      CaptionML=ENU=Recalculate Cost Plus Entries;
                      Image=CalculateSimulation;
                      OnAction=BEGIN
                                 RecalcBaseSOCostPlusEntries("No.", FALSE);
                               END;
                                }
      { 1100528611;2 ;Action    ;
                      CaptionML=ENU=Create Invoice;
                      Promoted=Yes;
                      Image=CreateJobSalesInvoice;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CreateSalesInvoiceViaCollList;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100528600;1;Group  ;
                CaptionML=ENU=Common }

    { 1100528601;2;Field  ;
                SourceExpr="No.";
                Editable=FALSE }

    { 1100528603;2;Field  ;
                SourceExpr=Description;
                Editable=FALSE }

    { 1100528643;2;Field  ;
                SourceExpr="Customer No.";
                Editable=FALSE }

    { 1100528641;2;Field  ;
                SourceExpr="Customer Name";
                Importance=Additional }

    { 1100528646;2;Field  ;
                SourceExpr=Status;
                Importance=Promoted;
                OnValidate=BEGIN
                             StatusOnAfterValidate;
                           END;
                            }

    { 1100528606;1;Part   ;
                Name=ServiceOrderReviewSF;
                CaptionML=ENU=Service Orders;
                SubPageView=SORTING(Base Service Order No.);
                SubPageLink=Base Service Order No.=FIELD(Base Service Order No.);
                PagePartID=Page11126292 }

    { 1905885101;1;Group  ;
                CaptionML=ENU=Invoicing }

    { 1100528648;2;Field  ;
                SourceExpr="Collective List No.";
                Importance=Promoted }

    { 1100525002;2;Field  ;
                CaptionML=ENU=Collect SO Invoices By;
                SourceExpr=ServiceOrderInfoMgt.CollectSOInvoicesBy("Bill-to Customer No.") }

    { 1100528602;0;Container;
                ContainerType=FactBoxArea }

    { 1100528604;1;Part   ;
                SubPageLink=No.=FIELD(Base Service Order No.);
                PagePartID=Page11130506;
                PartType=Page }

    { 1100528605;1;Part   ;
                SubPageLink=No.=FIELD(Base Service Order No.);
                PagePartID=Page11130507;
                PartType=Page }

    { 1100409002;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page11130536;
                PartType=Page }

    { 1100525001;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1100525000;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ServiceOrderInfoMgt@1100525000 : Codeunit 11012841;
      DPA_IsHardFilter@1100525001 : Boolean;

    LOCAL PROCEDURE StatusOnAfterValidate@19072689();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    BEGIN
    END.
  }
}

