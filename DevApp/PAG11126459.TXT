OBJECT Page 11126459 Service Location Cockpit
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Service Location Cockpit;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11012801;
    PageType=Card;
    PromotedActionCategoriesML=ENU=New,Process,Report,Navigate;
    OnOpenPage=BEGIN
                 IF ExternalSetServiceObjectNo <> '' THEN BEGIN
                   ValidateServiceObject(ExternalSetServiceObjectNo, TRUE);
                   xRec := Rec;
                 END;
                 SETRANGE("No.");
               END;

    OnAfterGetRecord=VAR
                       CentralDataManagement@1100528600 : Codeunit 11012010;
                     BEGIN
                       IF xRec."No." <> "No." THEN BEGIN
                         ValidateServiceObject('', FALSE);
                         ValidateServiceContract('', FALSE);
                       END;
                       IF NOT Customer.GET("Customer No.") THEN
                         Customer.INIT;
                       CustomerInfoEditable := CentralDataManagement.ChangingCustomerIsAllowed("Customer No.");
                       UpdateFBs;
                     END;

    ActionList=ACTIONS
    {
      { 1100528619;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528628;1 ;Action    ;
                      ShortCutKey=Ctrl+O;
                      CaptionML=ENU=Select Object;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SelectEntries;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 HandleLookupServiceObject;
                               END;
                                }
      { 1100528638;1 ;Action    ;
                      CaptionML=ENU=Create Service Call;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Calls;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceCall@1100528600 : Record 11012822;
                               BEGIN
                                 IF CreateServiceCall(ServiceCall) THEN
                                   ServiceCall.ActivateServCallCard;
                               END;
                                }
      { 1100528655;1 ;Action    ;
                      CaptionML=ENU=Open Workload;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CalculateLines;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceLocation@1100528601 : Record 11012801;
                                 ServiceOrder@1100528602 : Record 11012823;
                                 OpenWorkloadbyServLocPAGE@1100528600 : Page 11126466;
                               BEGIN
                                 ServiceLocation := Rec;
                                 ServiceLocation.SETRECFILTER;
                                 ServiceOrder.MARKEDONLY(TRUE);
                                 OpenWorkloadbyServLocPAGE.SetOpenWorkloadData(ServiceLocation, ServiceOrder, 180);
                                 OpenWorkloadbyServLocPAGE.LOOKUPMODE := TRUE;
                                 OpenWorkloadbyServLocPAGE.RUNMODAL;
                               END;
                                }
      { 1100528632;1 ;Action    ;
                      CaptionML=ENU=Location Card;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SKU;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowCard;
                               END;
                                }
      { 1100528620;1 ;Action    ;
                      CaptionML=ENU=Customer Card;
                      RunObject=Page 21;
                      RunPageLink=No.=FIELD(Customer No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Customer;
                      PromotedCategory=Category4 }
      { 1100528624;1 ;Action    ;
                      CaptionML=ENU=Object Card;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=WorkCenterLoad;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowServiceObjectCard;
                               END;
                                }
      { 1100528625;1 ;Action    ;
                      CaptionML=ENU=Contract Card;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ServiceAgreement;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowServiceContractCard;
                               END;
                                }
      { 1100528629;1 ;Action    ;
                      CaptionML=ENU=Contract Arrangements;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CalculatePlan;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowContractArrangements;
                               END;
                                }
      { 1100528657;1 ;Action    ;
                      CaptionML=ENU=Search Location;
                      PromotedIsBig=Yes;
                      Image=Find;
                      OnAction=VAR
                                 ServiceLocation@1100528600 : Record 11012801;
                               BEGIN
                                 ServiceLocation.SETCURRENTKEY("Post Code", "House No.", "House No. Ext.");
                                 IF NOT ServiceLocation.GET("No.") THEN
                                   ServiceLocation.INIT;
                                 IF PAGE.RUNMODAL(PAGE::"Find Service Location", ServiceLocation) = ACTION::LookupOK THEN BEGIN
                                   SETRANGE("No.");
                                   GET(ServiceLocation."No.");
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100528600;0;Container;
                ContainerType=ContentArea }

    { 1100528601;1;Group  ;
                Name=Algemeen;
                CaptionML=ENU=Location;
                GroupType=Group }

    { 1100528602;2;Field  ;
                SourceExpr="No.";
                Editable=FALSE }

    { 1100528603;2;Field  ;
                SourceExpr=Description;
                Editable=FALSE }

    { 1100528664;2;Field  ;
                SourceExpr="Service Location Type" }

    { 1100528604;2;Field  ;
                SourceExpr="Responsible Employee";
                Editable=FALSE }

    { 1100528615;2;Field  ;
                SourceExpr="Location Manager Name";
                Editable=FALSE }

    { 1100528658;2;Field  ;
                SourceExpr=Blocked;
                Editable=FALSE }

    { 1100528656;1;Part   ;
                Name=ServiceSignalsSF;
                CaptionML=ENU=Signals;
                SubPageLink=Type=CONST(Service Location);
                PagePartID=Page11126442;
                PartType=Page }

    { 1100528605;1;Group  ;
                CaptionML=ENU=Address;
                GroupType=Group }

    { 1100528607;2;Field  ;
                SourceExpr=Name;
                Editable=FALSE }

    { 1100528608;2;Field  ;
                SourceExpr=Address;
                Editable=FALSE }

    { 1100528609;2;Field  ;
                SourceExpr="Address 2";
                Editable=FALSE }

    { 1100528611;2;Field  ;
                SourceExpr="Post Code";
                Editable=FALSE }

    { 1100528610;2;Field  ;
                SourceExpr=City;
                Editable=FALSE }

    { 1100528613;2;Field  ;
                ExtendedDatatype=Phone No.;
                SourceExpr="Phone No." }

    { 1100525002;2;Field  ;
                SourceExpr="Phone No. 2" }

    { 1100528616;2;Field  ;
                ExtendedDatatype=Phone No.;
                SourceExpr="Mobile Phone No." }

    { 1100528614;2;Field  ;
                ExtendedDatatype=E-Mail;
                SourceExpr="E-Mail" }

    { 1100528630;1;Group  ;
                CaptionML=ENU=Customer;
                GroupType=Group }

    { 1100528631;2;Field  ;
                SourceExpr="Customer No.";
                Editable=FALSE }

    { 1100528633;2;Field  ;
                CaptionML=ENU=Naam;
                SourceExpr=Customer.Name;
                Editable=FALSE }

    { 1100528634;2;Field  ;
                CaptionML=ENU=Address;
                SourceExpr=Customer.Address;
                Editable=FALSE }

    { 1100528635;2;Field  ;
                CaptionML=ENU=Address 2;
                SourceExpr=Customer."Address 2";
                Editable=FALSE }

    { 1100528636;2;Field  ;
                CaptionML=ENU=Post Code;
                SourceExpr=Customer."Post Code";
                Editable=FALSE }

    { 1100528637;2;Field  ;
                CaptionML=ENU=City;
                SourceExpr=Customer.City;
                Editable=FALSE }

    { 1100528652;2;Field  ;
                ExtendedDatatype=Phone No.;
                CaptionML=ENU=Phone No.;
                SourceExpr=Customer."Phone No.";
                Editable=CustomerInfoEditable;
                OnValidate=BEGIN
                             Customer.MODIFY(TRUE);
                           END;
                            }

    { 1100528653;2;Field  ;
                ExtendedDatatype=Phone No.;
                CaptionML=ENU=Mobile Phone No.;
                SourceExpr=Customer."Mobile Phone No.";
                Editable=CustomerInfoEditable;
                OnValidate=BEGIN
                             Customer.MODIFY(TRUE);
                           END;
                            }

    { 1100528654;2;Field  ;
                ExtendedDatatype=E-Mail;
                CaptionML=ENU=E-Mail;
                SourceExpr=Customer."E-Mail";
                Editable=CustomerInfoEditable;
                OnValidate=BEGIN
                             Customer.MODIFY(TRUE);
                           END;
                            }

    { 1100528612;2;Field  ;
                CaptionML=ENU=Blocked;
                SourceExpr=Customer.Blocked;
                Editable=FALSE }

    { 1100528621;1;Group  ;
                CaptionML=ENU=Object;
                GroupType=Group }

    { 1100528622;2;Field  ;
                CaptionML=ENU=Service Object No.;
                SourceExpr=SelectedServiceObject."No.";
                OnValidate=BEGIN
                             ValidateServiceObject(SelectedServiceObject."No.", TRUE);
                           END;

                OnLookup=BEGIN
                           HandleLookupServiceObject;
                         END;
                          }

    { 1100528640;2;Field  ;
                CaptionML=ENU=Description;
                SourceExpr=SelectedServiceObject.Description;
                Editable=FALSE }

    { 1100528662;2;Field  ;
                CaptionML=ENU=Description 2;
                SourceExpr=SelectedServiceObject."Description 2";
                Editable=FALSE }

    { 1100528639;2;Field  ;
                CaptionML=ENU=Standard Object No.;
                SourceExpr=SelectedServiceObject."Standard Object No.";
                Editable=FALSE }

    { 1100528644;2;Field  ;
                ExtendedDatatype=URL;
                CaptionML=ENU=Checklist URL;
                SourceExpr=SelectedStandardObject."Checklist URL";
                Editable=FALSE }

    { 1100528659;2;Field  ;
                CaptionML=ENU=Brand;
                SourceExpr=SelectedServiceObject."Brand Code";
                Editable=FALSE }

    { 1100528641;2;Field  ;
                CaptionML=ENU=Brand Description;
                SourceExpr=SelectedServiceObject."Brand Description";
                Importance=Additional;
                Editable=FALSE }

    { 1100528660;2;Field  ;
                CaptionML=ENU=Model;
                SourceExpr=SelectedServiceObject."Model Code";
                Editable=FALSE }

    { 1100528642;2;Field  ;
                CaptionML=ENU=Model Description;
                SourceExpr=SelectedServiceObject."Model Description";
                Importance=Additional;
                Editable=FALSE }

    { 1100528661;2;Field  ;
                CaptionML=ENU=Type;
                SourceExpr=SelectedServiceObject."Type Code";
                Editable=FALSE }

    { 1100528643;2;Field  ;
                CaptionML=ENU=Type Description;
                SourceExpr=SelectedServiceObject."Type Description";
                Importance=Additional;
                Editable=FALSE }

    { 1100528606;2;Field  ;
                CaptionML=ENU=Year of Manufacture;
                SourceExpr=ObjectYearOfManufacture;
                Editable=FALSE }

    { 1100528645;1;Group  ;
                CaptionML=ENU=Contract;
                GroupType=Group }

    { 1100528623;2;Field  ;
                CaptionML=ENU=Service Contract No.;
                SourceExpr=SelectedServiceContract."No.";
                OnValidate=BEGIN
                             ValidateServiceContract(SelectedServiceContract."No.", TRUE);
                           END;

                OnLookup=VAR
                           MaintenanceManagementCU@1100528600 : Codeunit 11012829;
                           SelectedServiceContractNo@1100528602 : Code[20];
                         BEGIN
                           SelectedServiceContractNo := MaintenanceManagementCU.ShowActualContractsForObject(SelectedServiceObject."No.", '', TODAY(), TRUE, SelectedServiceContract."No.");
                           IF SelectedServiceContractNo <> '' THEN
                             ValidateServiceContract(SelectedServiceContractNo, TRUE);
                         END;
                          }

    { 1100528646;2;Field  ;
                CaptionML=ENU=Service Package;
                SourceExpr=SelectedContractObject."Service Package";
                Editable=FALSE }

    { 1100528647;2;Field  ;
                CaptionML=ENU=Contract Limit;
                SourceExpr=SelectedServiceContract."Contract Limit";
                Editable=FALSE }

    { 1100528648;2;Field  ;
                CaptionML=ENU=Ending Date;
                SourceExpr=SelectedServiceContract."Ending Date";
                Editable=FALSE }

    { 1100528649;2;Field  ;
                CaptionML=ENU=Termination Period;
                SourceExpr=SelectedServiceContract."Termination Period";
                Editable=FALSE }

    { 1100525000;2;Field  ;
                CaptionML=ENU=Name;
                SourceExpr=SelectedServiceContract.Name;
                Editable=FALSE }

    { 1100525001;2;Field  ;
                CaptionML=ENU=Bill-to Name;
                SourceExpr=SelectedServiceContract."Bill-to Name (Cost Plus)";
                Editable=FALSE }

    { 1100528617;0;Container;
                ContainerType=FactBoxArea }

    { 1100528650;1;Part   ;
                Name=SLCockpitCustomerFB;
                CaptionML=ENU=Customer;
                SubPageLink=No.=FIELD(Customer No.);
                PagePartID=Page11229237;
                PartType=Page }

    { 1100528627;1;Part   ;
                Name=SLCockpitFB;
                CaptionML=ENU=Location;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page11229234;
                PartType=Page }

    { 1100528626;1;Part   ;
                Name=SLCockpitObjectFB;
                CaptionML=ENU=Object;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page11229235;
                PartType=Page }

    { 1100528663;1;Part   ;
                Name=SLCockpitDiscountTermsFB;
                CaptionML=ENU=Base Amount;
                PagePartID=Page11229253;
                PartType=Page }

    { 1100528618;1;Part   ;
                CaptionML=ENU=Notes;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Customer@1100528603 : Record 18;
      SelectedServiceObject@1100528605 : Record 11071691;
      SelectedStandardObject@1100528600 : Record 11020334;
      SelectedServiceContract@1100528607 : Record 11012812;
      SelectedContractObject@1100528606 : Record 11071702;
      Text000@1100528602 : TextConst 'ENU=Object %1 does not belong to Service Location %2';
      Text001@1100528604 : TextConst 'ENU=No Object Selected, continue?';
      Text002@1100528601 : TextConst 'ENU=Do you want to create a Service Call using this Service Location?';
      ObjectYearOfManufacture@1100528608 : Text[80];
      ExternalSetServiceObjectNo@1100525000 : Code[20];
      CustomerInfoEditable@1100528609 : Boolean;

    PROCEDURE ValidateServiceObject@1100528601(IServiceObjectNo@1100528600 : Code[20];IUpdateFBs@1100528604 : Boolean);
    VAR
      LocalServiceObject@1100528601 : Record 11071691;
      MaintenanceManagementCU@1100528602 : Codeunit 11012829;
      ObjectSpecificationMgt@1100528605 : Codeunit 11012848;
      ActualServiceContractNo@1100528603 : Code[20];
    BEGIN
      IF IServiceObjectNo <> '' THEN BEGIN
        LocalServiceObject.GET(IServiceObjectNo);
        IF NOT LocalServiceObject.BelongsToServiceLocation("No.") THEN
          ERROR(STRSUBSTNO(Text000, IServiceObjectNo, "No."));
        SelectedServiceObject := LocalServiceObject;
        SelectedServiceObject.CALCFIELDS("Brand Description", "Model Description", "Type Description");
      END ELSE
        CLEAR(SelectedServiceObject);
      ActualServiceContractNo := '';
      IF MaintenanceManagementCU.GetNoOfActualContractsForObj(IServiceObjectNo, TODAY, ActualServiceContractNo) > 1 THEN
        ActualServiceContractNo := MaintenanceManagementCU.ShowActualContractsForObject(IServiceObjectNo, '', TODAY, TRUE, '');
      ValidateServiceContract(ActualServiceContractNo, FALSE);
      IF SelectedServiceObject."Standard Object No." <> '' THEN
        SelectedStandardObject.GET(SelectedServiceObject."Standard Object No.")
      ELSE
        CLEAR(SelectedStandardObject);
      IF NOT SelectedContractObject.GET(SelectedServiceContract."No.", SelectedServiceObject."No.") THEN
        CLEAR(SelectedContractObject);
      ObjectYearOfManufacture := ObjectSpecificationMgt.GetYearOfManufactureValue(SelectedServiceObject."No.");
      IF IUpdateFBs THEN UpdateFBs;
    END;

    PROCEDURE ValidateServiceContract@1100528606(IServiceContractNo@1100528600 : Code[20];IUpdateFBs@1100528601 : Boolean);
    BEGIN
      IF IServiceContractNo <> '' THEN BEGIN
        SelectedServiceContract.GET(IServiceContractNo);
        SelectedServiceContract.TestObjectBelongtoContract(SelectedServiceObject."No.", TODAY);
        SelectedServiceContract.CALCFIELDS(Name, "Bill-to Name (Cost Plus)");
      END ELSE BEGIN
        CLEAR(SelectedServiceContract);
        CLEAR(SelectedContractObject);
      END;

      IF IUpdateFBs THEN UpdateFBs;
    END;

    PROCEDURE HandleLookupServiceObject@1100528603() : Boolean;
    VAR
      ServiceObject@1100528600 : Record 11071691;
    BEGIN
      GetRelatedObjects(ServiceObject);
      IF ServiceObject.GET(SelectedServiceObject."No.") THEN;
      IF PAGE.RUNMODAL(0, ServiceObject) = ACTION::LookupOK THEN
        ValidateServiceObject(ServiceObject."No.", TRUE);
    END;

    PROCEDURE ShowServiceObjectCard@1100528600();
    VAR
      ServiceObject@1100528600 : Record 11071691;
    BEGIN
      IF SelectedServiceObject."No." = '' THEN
        EXIT;
      ServiceObject.GET(SelectedServiceObject."No.");
      PAGE.RUNMODAL(PAGE::"Service Object", ServiceObject);
    END;

    PROCEDURE ShowServiceContractCard@1100528602();
    BEGIN
      IF SelectedServiceContract."No." = '' THEN
        EXIT;
      PAGE.RUNMODAL(PAGE::"Service Contract Card", SelectedServiceContract);
    END;

    PROCEDURE ShowContractArrangements@1100528608();
    VAR
      ServiceContractArrangement@1100528600 : Record 11071705;
    BEGIN
      IF SelectedServiceObject."No." = '' THEN BEGIN
        ServiceContractArrangement.SETCURRENTKEY("Service Location No.");
        ServiceContractArrangement.SETRANGE("Service Location No.", "No.");
      END ELSE BEGIN
        ServiceContractArrangement.SETRANGE("Service Contract No.", SelectedServiceContract."No.");
        ServiceContractArrangement.SETRANGE("Object No.", SelectedServiceObject."No.");
        ServiceContractArrangement.SETRANGE(Finished, FALSE);
      END;
      PAGE.RUNMODAL(PAGE::"Service Contract Arrangements", ServiceContractArrangement);
    END;

    PROCEDURE CreateServiceCall@1100528605(VAR OServiceCall@1100528600 : Record 11012822) : Boolean;
    BEGIN
      IF NOT CONFIRM(Text002) THEN
        ERROR('');
      IF SelectedServiceObject."No." = '' THEN
        IF NOT CONFIRM(Text001) THEN
          EXIT;
      OServiceCall.INIT;
      OServiceCall.INSERT(TRUE);
      OServiceCall.VALIDATE("Service Location No.", "No.");
      IF SelectedServiceContract."No." <> '' THEN
        OServiceCall.VALIDATE("Service Contract No.", SelectedServiceContract."No.");
      IF SelectedServiceObject."No." <> '' THEN
        OServiceCall.VALIDATE("Object No.", SelectedServiceObject."No.");
      OServiceCall.MODIFY(TRUE);
      COMMIT;
      EXIT(TRUE);
    END;

    PROCEDURE UpdateFBs@1100528604();
    BEGIN
      CurrPage.SLCockpitObjectFB.PAGE.SetSelection(SelectedServiceContract."No.", SelectedServiceObject."No.");
      CurrPage.ServiceSignalsSF.PAGE.UpdateRulesList(1, "No.", SelectedServiceContract."No.", SelectedServiceObject."No.", TRUE);
      CurrPage.SLCockpitDiscountTermsFB.PAGE.SetSelection(SelectedServiceContract."No.");
    END;

    PROCEDURE SetServiceObjectNo@1100525000(IServiceObjectNo@1100525000 : Code[20]);
    VAR
      ServiceObject@1100525001 : Record 11071691;
      ServiceLocationNo@1100525002 : Code[20];
    BEGIN
      ServiceObject.GET(IServiceObjectNo);
      ServiceLocationNo := ServiceObject.GetPrefServiceLocationNo(TRUE);
      GET(ServiceLocationNo);
      ExternalSetServiceObjectNo := IServiceObjectNo;
    END;

    BEGIN
    END.
  }
}

