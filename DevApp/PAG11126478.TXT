OBJECT Page 11126478 Check Service Order CPE
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Check Service Order Cost Plus Entries;
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11012825;
    PageType=List;
    OnOpenPage=BEGIN
                 ApplyFilters;
               END;

    OnAfterGetRecord=BEGIN
                       DetermineOtherFields;
                     END;

    OnAfterGetCurrRecord=BEGIN
                           DetermineOtherFields;
                         END;

    ActionList=ACTIONS
    {
      { 1100528631;  ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100528643;1 ;Action    ;
                      CaptionML=ENU=Service Order;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Document;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowServiceOrderCard;
                               END;
                                }
      { 1100528640;1 ;Action    ;
                      CaptionML=ENU=Base Service Order;
                      RunObject=Page 11126291;
                      RunPageLink=No.=FIELD(Base Service Order No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ServiceOrderSetup;
                      PromotedCategory=Process }
      { 1100528646;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528649;1 ;Action    ;
                      CaptionML=ENU=Set Cost Plus Entries as Checked;
                      Promoted=Yes;
                      Image=Approve;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetChecked(TRUE);
                               END;
                                }
      { 1100528652;1 ;Action    ;
                      CaptionML=ENU=Make Cost Plus Entries Chargable;
                      Promoted=Yes;
                      Image=Approve;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrderCostPlusEntry@1100528600 : Record 11012825;
                               BEGIN
                                 GetRecSelection(ServiceOrderCostPlusEntry);
                                 REPORT.RUNMODAL(REPORT::"CP Chargeable by Cost Type", TRUE, FALSE, ServiceOrderCostPlusEntry);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100528600;0;Container;
                ContainerType=ContentArea }

    { 1100528657;1;Group  ;
                CaptionML=ENU=Filters;
                GroupType=Group }

    { 1100528656;2;Field  ;
                CaptionML=ENU=Starting Date Filter;
                SourceExpr=StartingDateFilter;
                OnValidate=VAR
                             ServiceOrder@1100528600 : Record 11012823;
                           BEGIN
                             ServiceOrder.SETFILTER("Starting Date", StartingDateFilter);
                             StartingDateFilter := ServiceOrder.GETFILTER("Starting Date");
                             ApplyFilters;
                           END;
                            }

    { 1100528658;2;Field  ;
                CaptionML=ENU=Cause Code Filter;
                SourceExpr=CauseCodeFilter;
                TableRelation="Service Analysis".Code WHERE (Analysis Type=CONST(Cause));
                OnValidate=VAR
                             ServiceAnalysis@1100528600 : Record 11012842;
                           BEGIN
                             ServiceAnalysis.SETFILTER(Code, SolutionCodeFilter);
                             SolutionCodeFilter := ServiceAnalysis.GETFILTER(Code);
                             ApplyFilters;
                           END;
                            }

    { 1100528659;2;Field  ;
                CaptionML=ENU=Solution Code Filter;
                SourceExpr=SolutionCodeFilter;
                TableRelation="Service Analysis".Code WHERE (Analysis Type=CONST(Solution));
                OnValidate=VAR
                             ServiceAnalysis@1100528600 : Record 11012842;
                           BEGIN
                             ServiceAnalysis.SETFILTER(Code, SolutionCodeFilter);
                             SolutionCodeFilter := ServiceAnalysis.GETFILTER(Code);
                             ApplyFilters;
                           END;
                            }

    { 1100528660;2;Field  ;
                CaptionML=ENU=Service Package Filter;
                SourceExpr=ServicePackageCodeFilter;
                TableRelation="Service Package" WHERE (Select for Maint. Sales Rate=CONST(Yes));
                OnValidate=VAR
                             ServicePackage@1100528600 : Record 11012806;
                           BEGIN
                             ServicePackage.SETFILTER(Code, ServicePackageCodeFilter);
                             ServicePackageCodeFilter := ServicePackage.GETFILTER(Code);
                             ApplyFilters;
                           END;
                            }

    { 1100528661;2;Field  ;
                CaptionML=ENU=Service Order Status Filter;
                OptionCaptionML=ENU=" ,Open,,In Process,Technical Finished,Administrative Finished,Finished,Cancelled";
                SourceExpr=ServiceOrderStatusFilter;
                OnValidate=BEGIN
                             ApplyFilters;
                           END;
                            }

    { 1100528654;2;Field  ;
                CaptionML=ENU=Solution Text Filter;
                SourceExpr=SolutionTextFilter;
                OnValidate=BEGIN
                             ApplyFilters;
                           END;
                            }

    { 1100528655;2;Field  ;
                CaptionML=ENU=Internal Text Filter;
                SourceExpr=InternalTextFilter;
                OnValidate=BEGIN
                             ApplyFilters;
                           END;
                            }

    { 1100528000;2;Field  ;
                Name=Service Group Code Filter;
                CaptionML=ENU=Service Group Code Filter;
                SourceExpr=ServiceGroupCodeFilter;
                TableRelation="Service Group";
                OnValidate=VAR
                             ServiceGroup@1100528000 : Record 11012830;
                           BEGIN
                             ServiceGroup.SETFILTER("No.", ServiceGroupCodeFilter);
                             ServiceGroupCodeFilter := ServiceGroup.GETFILTER("No.");
                             ApplyFilters;
                           END;
                            }

    { 1100528001;2;Field  ;
                Name=Year Of Manufacture Filter;
                CaptionML=ENU=Year Of Manufacture Filter;
                SourceExpr=YearOfManufactureFilter;
                OnValidate=VAR
                             ObjectSpecificationLine@1100528002 : Record 11071781;
                             ServiceSetup@1100528001 : Record 11012800;
                             BaseObjectSpecificationLine@1100528000 : Record 11071779;
                           BEGIN
                             ServiceSetup.GET;
                             IF ServiceSetup."Spec. Code Year of Manufact." = '' THEN
                               ERROR(Text010);

                             BaseObjectSpecificationLine.GET(ServiceSetup."Spec. Code Year of Manufact.");
                             IF BaseObjectSpecificationLine."Field Type" <> BaseObjectSpecificationLine."Field Type"::Value THEN
                               ERROR(Text011);

                             ObjectSpecificationLine.SETFILTER("Value (Value)", YearOfManufactureFilter);
                             YearOfManufactureFilter := ObjectSpecificationLine.GETFILTER("Value (Value)");
                             ApplyFilters;
                           END;
                            }

    { 1100528002;2;Field  ;
                Name=Reference Point Filter;
                CaptionML=ENU=Reference Point Filter;
                SourceExpr=ReferencePointFilter;
                TableRelation="Reference Point";
                OnValidate=VAR
                             ReferencePoint@1100528000 : Record 11020271;
                           BEGIN
                             ReferencePoint.SETFILTER("No.", ReferencePointFilter);
                             ReferencePointFilter := ReferencePoint.GETFILTER("No.");
                             ApplyFilters;
                           END;
                            }

    { 1100528601;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100528602;2;Field  ;
                SourceExpr="Service Order No.";
                Editable=FALSE }

    { 1100528604;2;Field  ;
                SourceExpr="Bill-to Customer No.";
                Editable=FALSE }

    { 1100528645;2;Field  ;
                SourceExpr="Object No.";
                Editable=FALSE }

    { 1100528603;2;Field  ;
                SourceExpr="Object Customer";
                Editable=FALSE }

    { 1100525012;2;Field  ;
                CaptionML=ENU=Standard Object No.;
                SourceExpr=ServiceObject."Standard Object No.";
                Editable=FALSE }

    { 1100525013;2;Field  ;
                CaptionML=ENU=Standard Object Description;
                SourceExpr=StandardObject.Description;
                Editable=FALSE }

    { 1100525000;2;Field  ;
                CaptionML=ENU=Object Group;
                SourceExpr=StandardObject."Object Group";
                Editable=FALSE }

    { 1100525001;2;Field  ;
                CaptionML=ENU=Object Group Description;
                SourceExpr=StandardObject."Object Group Description";
                Editable=FALSE }

    { 1100525010;2;Field  ;
                CaptionML=ENU=Year of Manufacture;
                SourceExpr=YearOfManufacture;
                Editable=FALSE }

    { 1100525002;2;Field  ;
                CaptionML=ENU=Address;
                SourceExpr=ServiceOrder.Address;
                Editable=FALSE }

    { 1100525003;2;Field  ;
                CaptionML=ENU=Post Code;
                SourceExpr=ServiceOrder."Post Code";
                Editable=FALSE }

    { 1100525004;2;Field  ;
                CaptionML=ENU=City;
                SourceExpr=ServiceOrder.City;
                Editable=FALSE }

    { 1100525005;2;Field  ;
                CaptionML=ENU=Starting Date;
                SourceExpr=ServiceOrder."Starting Date";
                Editable=FALSE }

    { 1100528662;2;Field  ;
                CaptionML=ENU=Cause;
                SourceExpr=ServiceOrder.Cause;
                Editable=FALSE;
                OnDrillDown=VAR
                              ServiceAnalysis@1100528600 : Record 11012842;
                            BEGIN
                              ServiceAnalysis.SETRANGE("Analysis Type", ServiceAnalysis."Analysis Type"::Cause);
                              ServiceAnalysis.Code := ServiceOrder.Cause;
                              PAGE.RUNMODAL(PAGE::"Service Analysis (Cause)", ServiceAnalysis);
                            END;
                             }

    { 1100528663;2;Field  ;
                CaptionML=ENU=Solution;
                SourceExpr=ServiceOrder.Solution;
                Editable=FALSE;
                OnDrillDown=VAR
                              ServiceAnalysis@1100528600 : Record 11012842;
                            BEGIN
                              ServiceAnalysis.SETRANGE("Analysis Type", ServiceAnalysis."Analysis Type"::Solution);
                              ServiceAnalysis.Code := ServiceOrder.Solution;
                              PAGE.RUNMODAL(PAGE::"Service Analysis (Solution)", ServiceAnalysis);
                            END;
                             }

    { 1100528664;2;Field  ;
                CaptionML=ENU=Solution Text;
                SourceExpr=SolutionText;
                Editable=FALSE;
                OnDrillDown=VAR
                              ServiceOrderInfoMgt@1100528600 : Codeunit 11012841;
                            BEGIN
                              ServiceOrderInfoMgt.ShowServiceTextLines("Service Order No.", 2);
                            END;
                             }

    { 1100525006;2;Field  ;
                CaptionML=ENU=Cause Text;
                SourceExpr=CauseText;
                Editable=FALSE;
                OnDrillDown=VAR
                              ServiceOrderInfoMgt@1100525000 : Codeunit 11012841;
                            BEGIN
                              ServiceOrderInfoMgt.ShowServiceTextLines("Service Order No.", 3);
                            END;
                             }

    { 1100525007;2;Field  ;
                CaptionML=ENU=Invoice Text;
                SourceExpr=InvoiceText;
                Editable=FALSE;
                OnDrillDown=VAR
                              ServiceOrderInfoMgt@1100525000 : Codeunit 11012841;
                            BEGIN
                              ServiceOrderInfoMgt.ShowServiceTextLines("Service Order No.", 4);
                            END;
                             }

    { 1100528665;2;Field  ;
                CaptionML=ENU=Internal Text;
                SourceExpr=InternalText;
                Editable=FALSE;
                OnDrillDown=VAR
                              ServiceOrderInfoMgt@1100528600 : Codeunit 11012841;
                            BEGIN
                              ServiceOrderInfoMgt.ShowServiceTextLines("Service Order No.", 1);
                            END;
                             }

    { 1100525011;2;Field  ;
                CaptionML=ENU=Debrief;
                SourceExpr=DebriefText;
                Editable=FALSE;
                OnDrillDown=VAR
                              ServiceOrderInfoMgt@1100525000 : Codeunit 11012841;
                            BEGIN
                              ServiceOrderInfoMgt.ShowDebriefTextLines("Service Order No.");
                            END;
                             }

    { 1100525009;2;Field  ;
                SourceExpr="Service Contract No." }

    { 1100525008;2;Field  ;
                CaptionML=ENU=Service Contract Description;
                SourceExpr=ServiceContract.Description;
                Editable=FALSE }

    { 1100528666;2;Field  ;
                CaptionML=ENU=Service Package;
                SourceExpr=ServicePackageCode;
                Editable=FALSE;
                OnDrillDown=VAR
                              ServicePackage@1100528600 : Record 11012806;
                            BEGIN
                              ServicePackage.Code := ServicePackageCode;
                              PAGE.RUNMODAL(0, ServicePackage);
                            END;
                             }

    { 1100528624;2;Field  ;
                SourceExpr="Posting Date";
                Editable=FALSE }

    { 1100528678;2;Field  ;
                SourceExpr="Source Document" }

    { 1100528679;2;Field  ;
                SourceExpr="Source Line" }

    { 1100528680;2;Field  ;
                SourceExpr="Employee No.";
                Editable=FALSE }

    { 1100528632;2;Field  ;
                SourceExpr="Item No.";
                Editable=FALSE }

    { 1100528644;2;Field  ;
                SourceExpr="Serial No.";
                Editable=FALSE }

    { 1100528667;2;Field  ;
                SourceExpr="Lot No.";
                Editable=FALSE }

    { 1100528636;2;Field  ;
                SourceExpr=Manufacturer;
                Editable=FALSE }

    { 1100528633;2;Field  ;
                SourceExpr="Basic Item";
                Editable=FALSE }

    { 1100528635;2;Field  ;
                SourceExpr="Vendor (Trade Item)";
                Editable=FALSE }

    { 1100528634;2;Field  ;
                SourceExpr="Trade Item";
                Editable=FALSE }

    { 1100528605;2;Field  ;
                SourceExpr="Cost Object";
                Editable=FALSE }

    { 1100528668;2;Field  ;
                SourceExpr="Cost Component";
                Editable=FALSE }

    { 1100528609;2;Field  ;
                SourceExpr="Wage Component";
                Editable=FALSE }

    { 1100528610;2;Field  ;
                SourceExpr="Description Wage Component";
                Editable=FALSE }

    { 1100528606;2;Field  ;
                SourceExpr="Cost Type";
                Editable=FALSE }

    { 1100528607;2;Field  ;
                SourceExpr=Description;
                Editable=FALSE }

    { 1100528608;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE;
                Editable=FALSE }

    { 1100528611;2;Field  ;
                SourceExpr=Quantity;
                Editable=FALSE }

    { 1100528612;2;Field  ;
                SourceExpr="Unit of Measure";
                Editable=FALSE }

    { 1100528614;2;Field  ;
                SourceExpr="Currency Code";
                Editable=FALSE }

    { 1100528613;2;Field  ;
                SourceExpr="Hour Rate Code";
                Editable=FALSE }

    { 1100528648;2;Field  ;
                SourceExpr="Gross Price";
                Editable=FALSE }

    { 1100528647;2;Field  ;
                SourceExpr="Gross Price (LCY)";
                Editable=FALSE }

    { 1100528669;2;Field  ;
                SourceExpr="Purchase Discount % (Item)";
                Editable=FALSE }

    { 1100528670;2;Field  ;
                SourceExpr="Currency Code Costs" }

    { 1100528618;2;Field  ;
                SourceExpr="Cost Price";
                Editable=FALSE }

    { 1100528617;2;Field  ;
                SourceExpr="Cost Price (LCY)";
                Editable=FALSE }

    { 1100528650;2;Field  ;
                SourceExpr="Sales Discount % (Item)";
                Editable=FALSE }

    { 1100528616;2;Field  ;
                SourceExpr="Basic Price";
                Editable=FALSE }

    { 1100528615;2;Field  ;
                SourceExpr="Basic Price (LCY)";
                Editable=FALSE }

    { 1100528671;2;Field  ;
                SourceExpr="Basic Price Found at" }

    { 1100528619;2;Field  ;
                SourceExpr="Surcharge %";
                Editable=FALSE }

    { 1100528620;2;Field  ;
                SourceExpr="Surcharge Amount";
                Editable=FALSE }

    { 1100528622;2;Field  ;
                SourceExpr="Sales Price";
                Editable=FALSE }

    { 1100528621;2;Field  ;
                SourceExpr="Sales Price (LCY)";
                Editable=FALSE }

    { 1100528637;2;Field  ;
                SourceExpr="Discount % (ServOrder)" }

    { 1100528639;2;Field  ;
                SourceExpr="Discount % (ServContr)";
                Editable=FALSE }

    { 1100528638;2;Field  ;
                SourceExpr="Discount % (Warranty)";
                Editable=FALSE }

    { 1100528672;2;Field  ;
                SourceExpr="Warranty Code" }

    { 1100528642;2;Field  ;
                SourceExpr="Invoice Price";
                Editable=FALSE }

    { 1100528641;2;Field  ;
                SourceExpr="Invoice Price (LCY)";
                Editable=FALSE }

    { 1100528651;2;Field  ;
                SourceExpr="Additional Cost" }

    { 1100528673;2;Field  ;
                SourceExpr="Extra Cost";
                Editable=FALSE }

    { 1100528653;2;Field  ;
                SourceExpr=Checked }

    { 1100528626;2;Field  ;
                SourceExpr=Chargeable }

    { 1100528623;2;Field  ;
                SourceExpr="VAT Prod. Posting Group";
                Editable=FALSE }

    { 1100528674;2;Field  ;
                SourceExpr=Text;
                Editable=FALSE }

    { 1100528675;2;Field  ;
                SourceExpr="Creation Date" }

    { 1100528676;2;Field  ;
                SourceExpr="Last Date Modified" }

    { 1100528677;2;Field  ;
                SourceExpr="Entry No. Service Ledger" }

    { 1100528625;2;Field  ;
                SourceExpr=Invoiced }

    { 1100528628;2;Field  ;
                SourceExpr="Invoiced Price" }

    { 1100528627;2;Field  ;
                SourceExpr="Invoiced Price (LCY)" }

    { 1100528629;2;Field  ;
                SourceExpr="Invoice in Process (LCY)" }

    { 1100528630;2;Field  ;
                SourceExpr="Credit Memo in Process (LCY)" }

    { 1100525014;2;Field  ;
                CaptionML=ENU=Customer No.;
                SourceExpr=ServiceOrder."Customer No.";
                Editable=FALSE }

    { 1100525016;2;Field  ;
                CaptionML=ENU=Customer Neme;
                SourceExpr=ServiceOrder."Customer Name";
                Editable=FALSE }

    { 1100525015;2;Field  ;
                CaptionML=ENU=Bill-to Customer No.;
                SourceExpr=ServiceOrder."Bill-to Customer No.";
                Editable=FALSE }

    { 1100525017;2;Field  ;
                CaptionML=ENU=Bill-to Name;
                SourceExpr=ServiceOrder."Bill-to Name";
                Editable=FALSE }

  }
  CODE
  {
    VAR
      ServiceOrder@1100528609 : Record 11012823;
      ServiceObject@1100525000 : Record 11071691;
      ServiceLocation@1100525001 : Record 11012801;
      StandardObject@1100525002 : Record 11020334;
      ServiceContract@1100525003 : Record 11012812;
      ServiceSetup@1100528006 : Record 11012800;
      SolutionText@1100528606 : Text[512];
      CauseText@1100525004 : Text[512];
      InvoiceText@1100525005 : Text[512];
      InternalText@1100528607 : Text[512];
      DebriefText@1100525008 : Text[512];
      ServicePackageCode@1100528608 : Code[20];
      CauseCodeFilter@1100528600 : Code[250];
      SolutionCodeFilter@1100528601 : Code[250];
      ServicePackageCodeFilter@1100528602 : Code[250];
      ServiceOrderStatusFilter@1100528603 : ' ,Open,,In Process,Technical Finished,Administrative Finished,Finished,Cancelled';
      SolutionTextFilter@1100528610 : Text[250];
      InternalTextFilter@1100528611 : Text[250];
      StartingDateFilter@1100528612 : Text[250];
      ServiceGroupCodeFilter@1100528000 : Code[250];
      SerialNo@1100525006 : Text[80];
      YearOfManufacture@1100525007 : Text[80];
      LastRecFilter@1100528002 : Text[250];
      YearOfManufactureFilter@1100528003 : Text[250];
      Text010@1100528005 : TextConst 'ENU=No Specification Code specified for Year of Manufacturing in Service Setup > General';
      Text011@1100528004 : TextConst 'ENU=Specification Code for Year of Manufacturing must be of the Type ''Value'' in order to use filter on Year of Manufacturing.';
      ReferencePointFilter@1100528007 : Text[250];

    PROCEDURE ShowServiceOrderCard@1100528601();
    BEGIN
      IF ServiceOrder.GET("Service Order No.") THEN
        ServiceOrder.ActivateServOrderCard;
    END;

    PROCEDURE ApplyFilters@1100528600();
    VAR
      ServiceOrder@1100528601 : Record 11012823;
      ServiceOrderCostPlusEntry@1100528600 : Record 11012825;
      ObjectSpecificationLine@1100528000 : Record 11071781;
      DocumentReferencePoint@1100528004 : Record 11020296;
      InServiceGroupFilter@1100528001 : Boolean;
      InYearOfManufactureFilter@1100528002 : Boolean;
      InReferencePointFilter@1100528003 : Boolean;
    BEGIN
      IF CauseCodeFilter <> '' THEN
        ServiceOrder.SETFILTER(Cause, CauseCodeFilter);
      IF SolutionCodeFilter <> '' THEN
        ServiceOrder.SETFILTER(Solution, SolutionCodeFilter);
      IF ServiceOrderStatusFilter <> ServiceOrderStatusFilter::" " THEN
        ServiceOrder.SETRANGE(Status, ServiceOrderStatusFilter -1);
      IF ServicePackageCodeFilter <> '' THEN
        ServiceOrder.SETFILTER("Service Package", ServicePackageCodeFilter);
      IF StartingDateFilter <> '' THEN
        ServiceOrder.SETFILTER("Starting Date", StartingDateFilter);
      IF ServiceOrder.FINDSET THEN
        REPEAT
          IF ServiceTextFound(ServiceOrder."No.", 1, InternalTextFilter) AND
             ServiceTextFound(ServiceOrder."No.", 2, SolutionTextFilter)
          THEN BEGIN
            ServiceOrderCostPlusEntry.SETRANGE("Service Order No.", ServiceOrder."No.");
            IF ServiceOrderCostPlusEntry.FINDSET THEN
              REPEAT
                  InServiceGroupFilter := TRUE;
                  InYearOfManufactureFilter := TRUE;
                  InReferencePointFilter := TRUE;

                  IF ServiceGroupCodeFilter <> '' THEN BEGIN
                    IF ServiceObject.GET(ServiceOrderCostPlusEntry."Object No.") THEN BEGIN
                     IF StandardObject.GET(ServiceObject."Standard Object No.") THEN
                      IF NOT InFilterGroup(ServiceOrder."Customer No.", StandardObject."Object Group") THEN
                        InServiceGroupFilter := FALSE;
                    END ELSE
                      InServiceGroupFilter := FALSE;
                  END;

                  IF YearOfManufactureFilter <> '' THEN BEGIN
                      ServiceSetup.GET;
                      ObjectSpecificationLine.SETRANGE(ObjectSpecificationLine."Specification Type", ObjectSpecificationLine."Specification Type"::Object);
                      ObjectSpecificationLine.SETRANGE("Specification Code", ServiceSetup."Spec. Code Year of Manufact.");
                      ObjectSpecificationLine.SETRANGE(ObjectSpecificationLine.Type, ObjectSpecificationLine.Type::Line);
                      ObjectSpecificationLine.SETFILTER("Value (Value)", YearOfManufactureFilter);
                      ObjectSpecificationLine.SETRANGE(Code, ServiceOrderCostPlusEntry."Object No.");
                        IF NOT ObjectSpecificationLine.FINDFIRST THEN
                          InYearOfManufactureFilter := FALSE;
                  END;

                  IF ReferencePointFilter <> '' THEN BEGIN
                    DocumentReferencePoint.SETRANGE(Type, DocumentReferencePoint.Type::ServOrder);
                    DocumentReferencePoint.SETRANGE(Actual, TRUE);
                    DocumentReferencePoint.SETFILTER("Reference Point", ReferencePointFilter);
                    DocumentReferencePoint.SETRANGE("Document No.", ServiceOrderCostPlusEntry."Service Order No.");
                    IF NOT DocumentReferencePoint.FINDFIRST THEN
                      InReferencePointFilter := FALSE;
                  END;

                  IF InServiceGroupFilter AND InYearOfManufactureFilter AND InReferencePointFilter THEN
                    ServiceOrderCostPlusEntry.MARK(TRUE);

              UNTIL ServiceOrderCostPlusEntry.NEXT = 0;
          END;
        UNTIL ServiceOrder.NEXT = 0;
      ServiceOrderCostPlusEntry.SETRANGE("Service Order No.");
      ServiceOrderCostPlusEntry.MARKEDONLY(TRUE);
      COPY(ServiceOrderCostPlusEntry);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE DetermineOtherFields@1100528605();
    VAR
      ServiceOrderInfoMgt@1100528600 : Codeunit 11012841;
      ServiceObjectInfoMgt@1100525000 : Codeunit 11012840;
    BEGIN
      IF ServiceOrder.GET("Service Order No.") THEN BEGIN
        CauseText := ServiceOrderInfoMgt.GetLimitedCauseText("Service Order No.", MAXSTRLEN(CauseText));
        SolutionText := ServiceOrderInfoMgt.GetLimitedSolutionText("Service Order No.", MAXSTRLEN(SolutionText));
        InternalText := ServiceOrderInfoMgt.GetLimitedInternalText("Service Order No.", MAXSTRLEN(InternalText));
        InvoiceText := ServiceOrderInfoMgt.GetLimitedInvoiceText("Service Order No.", MAXSTRLEN(InvoiceText));
        DebriefText := ServiceOrderInfoMgt.GetLimitedDebriefText("Service Order No.", MAXSTRLEN(DebriefText));
        ServiceOrder.CALCFIELDS("Customer Name");

        ServicePackageCode := GetServicePackage();
      END ELSE BEGIN
        ServiceOrder.INIT;
        SolutionText := '';
        InternalText := '';
        ServicePackageCode := '';
      END;

      IF NOT ServiceLocation.GET("Service Location No.") THEN
        ServiceLocation.INIT;

      IF NOT ServiceObject.GET("Object No.") THEN
        ServiceObject.INIT;

        IF NOT StandardObject.GET(ServiceObject."Standard Object No.") THEN
          StandardObject.INIT;
        StandardObject.CALCFIELDS("Object Group Description");
        ServiceObjectInfoMgt.GetStdSpecValues("Object No.", SerialNo, YearOfManufacture);

      CALCFIELDS("Service Contract No.");
        IF NOT ServiceContract.GET("Service Contract No.") THEN
          ServiceContract.INIT;
    END;

    PROCEDURE SetChecked@1100528604(IChecked@1100528601 : Boolean);
    VAR
      ServiceOrderCostPlusEntry@1100528600 : Record 11012825;
    BEGIN
      GetRecSelection(ServiceOrderCostPlusEntry);
      ServiceOrderCostPlusEntry.MODIFYALL(Checked, IChecked, TRUE);
    END;

    PROCEDURE ServiceTextFound@1100528603(IServiceOrderNo@1100528600 : Code[20];IFieldType@1100528604 : 'Problem,Internal,Resolve,Cause,Invoice,Report Procedure,Contract Terms,Invoice Agreements';IServiceTextFilter@1100528602 : Text[250]) : Boolean;
    VAR
      ServiceText@1100528603 : Record 11012882;
      ServiceOrderInfoMgt@1100528601 : Codeunit 11012841;
    BEGIN
      IF IServiceTextFilter = '' THEN
        EXIT(TRUE);
      ServiceOrderInfoMgt.FilterServiceTextLines(IServiceOrderNo, IFieldType, ServiceText);
      ServiceText.SETFILTER(Comment, IServiceTextFilter);
      IF NOT ServiceText.ISEMPTY THEN
        EXIT(TRUE);
    END;

    LOCAL PROCEDURE InFilterGroup@1100528004(iCustomerNo@1100528000 : Code[20];iObjectGroup@1100528001 : Code[20]) : Boolean;
    VAR
      ServiceGroup@1100528002 : Record 11012830;
    BEGIN
      ServiceGroup.SETFILTER("No.", ServiceGroupCodeFilter);
      ServiceGroup.SETFILTER("Customer No.", '%1|%2', iCustomerNo, '');
      IF ServiceGroup.FINDSET THEN
        REPEAT
          IF iObjectGroup = ServiceGroup."No." THEN
            EXIT(TRUE);
        UNTIL ServiceGroup.NEXT = 0;

      EXIT(FALSE);
    END;

    LOCAL PROCEDURE GetRecSelection@1100528008(VAR OServiceOrderCostPlusEntry@1100528600 : Record 11012825);
    VAR
      BackupServiceOrderCostPlusEntry@1100528601 : Record 11012825;
    BEGIN
      BackupServiceOrderCostPlusEntry.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(Rec);
      OServiceOrderCostPlusEntry.COPY(Rec);
      Rec.COPY(BackupServiceOrderCostPlusEntry);
    END;

    BEGIN
    END.
  }
}

