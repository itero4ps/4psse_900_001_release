OBJECT Page 11126602 BarCode Job Item
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=BarCode Job Item;
    PageType=NavigatePage;
    ShowFilter=No;
    OnOpenPage=VAR
                 SessionRec@1100525000 : Record 2000000009;
               BEGIN
                 SessionRec.SETRANGE("User ID", USERID);
                 IF SessionRec.COUNT > 1 THEN
                   ERROR(Text001, USERID);

                 CompanyInfo.GET;
                 UserInfo.GET(USERID);
                 //Location from default
                 //Location from Company Information  (field 5700 from table 79)
                 //Or defined per login in
                 //UserSetup."Sales Resp. Ctr. Filter"
                 LocationNo := UserMgt.GetLocation(0,'',UserMgt.GetSalesFilter);
                 LocationRec.GET(LocationNo);
                 InvSetupRec.GET;
                 CompanyCode := COMPANYNAME;
                 ScannerRec.RESET;
                 ScannerRec.SETRANGE(ScannerID, COPYSTR(USERID, 1, MAXSTRLEN(ScannerRec.ScannerID)));
                 ScannerRec.SETRANGE("Receiving Company", COMPANYNAME);
                 ScannerRec.SETRANGE(Type, ScannerRec.Type::"Project Delivery");
                 ScannerRec.SETRANGE(Status, 0);
                 ScannerRec.SETFILTER("Project No.", '<>%1', '');
                 IF ScannerRec.FINDFIRST THEN BEGIN
                   LocationNo := ScannerRec."Location Code";
                   CompanyCode := ScannerRec."Receiving Company";
                   ElementCode := ScannerRec.Element;
                   JobNo := ScannerRec."Project No.";
                 END;
                 ScannerRec.RESET;
               END;

    ActionList=ACTIONS
    {
      { 1100525005;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525007;1 ;Action    ;
                      Name=Lijst;
                      CaptionML=ENU=Lijst;
                      InFooterBar=Yes;
                      Image=List;
                      OnAction=VAR
                                 BarCodeItemList@1100409000 : Page 11126609;
                               BEGIN
                                 ScannerRec.RESET;
                                 ScannerRec.SETRANGE(ScannerID, COPYSTR(USERID, 1, MAXSTRLEN(ScannerRec.ScannerID)));
                                 ScannerRec.SETRANGE(Type, ScannerRec.Type::"Project Delivery");
                                 ScannerRec.SETRANGE(Status, 0);

                                 BarCodeItemList.SETTABLEVIEW(ScannerRec);
                                 BarCodeItemList.LOOKUPMODE(TRUE);
                                 BarCodeItemList.EDITABLE(TRUE);
                                 BarCodeItemList.RUNMODAL;

                                 //IF ACTION::LookupOK = PAGE.RUNMODAL(87913, ScannerRec) THEN;

                                 ScannerRec.RESET;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100525000;;Container;
                Name=top;
                ContainerType=ContentArea }

    { 1100525001;1;Field  ;
                Name=CtrlLocationNo;
                CaptionML=ENU=Magazijn;
                SourceExpr=LocationNo;
                OnValidate=BEGIN
                             IF NOT LocationRec.GET(LocationNo) THEN BEGIN
                               ERROR('Magazijn onbekend');
                             END;
                           END;

                OnLookup=BEGIN
                           //**4PS.AH Enter customer specific number for 'Location List'
                           IF PAGE.RUNMODAL(11126610, LocationRec) = ACTION::LookupOK THEN BEGIN
                             LocationNo := LocationRec.Code;
                             LocationRec.GET(LocationNo);
                           END;
                         END;

                QuickEntry=FALSE }

    { 1100525008;1;Field  ;
                Name=CtrlCompNo;
                CaptionML=ENU=Company;
                SourceExpr=CompanyCode;
                OnValidate=VAR
                             Company@1100525000 : Record 2000000006;
                           BEGIN
                             ScannerRec.RESET;
                             ScannerRec.SETRANGE(ScannerID, COPYSTR(USERID, 1, MAXSTRLEN(ScannerRec.ScannerID)));
                             ScannerRec.SETRANGE(Type, ScannerRec.Type::"Project Delivery");
                             ScannerRec.SETRANGE(Status, 0);
                             ScannerRec.SETFILTER("Receiving Company", '<>%1', CompanyCode);

                             IF ScannerRec.FINDFIRST THEN
                               ERROR('Eerst de regels op ontvangend bedrijf: %1 afhandelen', ScannerRec."Receiving Company");

                             ScannerRec.RESET;

                             Company.RESET;
                             Company.SETRANGE(Company.Name, CompanyCode);
                             IF NOT Company.FIND('-') THEN BEGIN
                               ERROR('Bedrijf onbekend');
                             END;

                             JobNo := '';
                             ElementCode := '';
                             JobRec.INIT;
                           END;

                OnLookup=VAR
                           Company@1100525000 : Record 2000000006;
                         BEGIN
                           ScannerRec.RESET;
                           ScannerRec.SETRANGE(ScannerID, COPYSTR(USERID, 1, MAXSTRLEN(ScannerRec.ScannerID)));
                           ScannerRec.SETRANGE(Type, ScannerRec.Type::"Project Delivery");
                           ScannerRec.SETRANGE(Status, 0);

                           IF ScannerRec.COUNT <> 0 THEN
                             EXIT;

                           ScannerRec.RESET;

                           Company.RESET;
                           IF Company.GET(CompanyCode) THEN;
                           //**4PS.AH Enter customer specific number for 'Company List'
                           IF PAGE.RUNMODAL(11126611, Company) = ACTION::LookupOK THEN BEGIN
                             CompanyCode := Company.Name ;
                           END;

                           JobNo := '';
                           ElementCode := '';
                           JobRec.INIT;
                         END;

                QuickEntry=FALSE }

    { 1100525002;1;Field  ;
                Name=CtrlJobNo;
                CaptionML=ENU=Job;
                SourceExpr=JobNo;
                OnValidate=BEGIN
                             ScannerRec.RESET;
                             ScannerRec.SETRANGE(ScannerID, COPYSTR(USERID, 1, MAXSTRLEN(ScannerRec.ScannerID)));
                             ScannerRec.SETRANGE(Type, ScannerRec.Type::"Project Delivery");
                             ScannerRec.SETRANGE(Status, 0);
                             ScannerRec.SETFILTER("Project No.", '<>%1', JobNo);
                             IF ScannerRec.FINDFIRST THEN
                               ERROR('Eerst de regels op project: %1 afhandelen', ScannerRec."Project No.");
                             ScannerRec.RESET;

                             JobRec.CHANGECOMPANY(CompanyCode);
                             JobRec.RESET;
                             JobRec.SETRANGE("Project Status", JobRec."Project Status"::Production, JobRec."Project Status"::"Technical Finished");
                             JobRec.SETRANGE("No.", JobNo);
                             IF NOT JobRec.FIND('-') THEN BEGIN
                               ERROR('Project onbekend');
                             END;

                             JobRec.CALCFIELDS("Principal Name");
                             ElementCode := '';
                           END;

                OnLookup=BEGIN
                           ScannerRec.RESET;
                           ScannerRec.SETRANGE(ScannerID, COPYSTR(USERID, 1, MAXSTRLEN(ScannerRec.ScannerID)));
                           ScannerRec.SETRANGE(Type, ScannerRec.Type::"Project Delivery");
                           ScannerRec.SETRANGE(Status, 0);
                           IF ScannerRec.COUNT <> 0 THEN
                             EXIT;

                           ScannerRec.RESET;

                           JobRec.CHANGECOMPANY(CompanyCode);
                           JobRec.RESET;
                           JobRec.SETRANGE("Project Status", JobRec."Project Status"::Production, JobRec."Project Status"::"Technical Finished");
                           //**4PS.AH Enter customer specific number for 'Job List'
                           IF PAGE.RUNMODAL(11126612, JobRec) = ACTION::LookupOK THEN BEGIN
                             JobNo := JobRec."No." ;
                             JobRec.GET(JobNo);
                             JobRec.CALCFIELDS("Principal Name");
                           END;
                         END;

                QuickEntry=FALSE }

    { 1100525009;1;Field  ;
                CaptionML=ENU=Principal;
                SourceExpr=JobRec."Principal Name";
                Enabled=FALSE;
                Editable=FALSE;
                QuickEntry=FALSE }

    { 1100525012;1;Field  ;
                CaptionML=ENU=Element;
                SourceExpr=ElementCode;
                OnValidate=VAR
                             ElementFormat@1100525004 : Codeunit 11012022;
                             Chapter@1100525003 : Code[20];
                             Paragraph@1100525002 : Code[20];
                             Level@1100525001 : Integer;
                             ElementRec@1100525000 : Record 11012010;
                           BEGIN
                             IF ElementCode <> '' THEN BEGIN
                               ElementFormat.CreateStandardElement(ElementCode,Chapter,Paragraph,Level);
                               IF ElementCode = '' THEN BEGIN
                                 ERROR('Element onbekend');
                               END ELSE BEGIN
                                 ElementRec.RESET;
                                 ElementRec.CHANGECOMPANY(CompanyCode);
                                 ElementRec.SETRANGE("Project No.", JobNo);
                                 ElementRec.SETRANGE(Element, ElementCode);
                                 IF NOT ElementRec.FIND('-') THEN BEGIN
                                   ElementCode := '';
                                   ERROR('Element onbekend');
                                 END;
                               END;
                             END;
                           END;

                OnLookup=VAR
                           ElementRec@1100525000 : Record 11012010;
                         BEGIN
                           ElementRec.RESET;
                           ElementRec.CHANGECOMPANY(CompanyCode);
                           ElementRec.SETRANGE("Project No.", JobNo);

                           ElementRec."Project No." := JobNo;
                           ElementRec.Element := ElementCode;
                           //**4PS.AH Enter customer specific number for 'Element List'
                           IF PAGE.RUNMODAL(11126613, ElementRec) = ACTION::LookupOK THEN
                             ElementCode := ElementRec.Element;
                         END;

                QuickEntry=FALSE }

    { 1100525003;1;Field  ;
                Name=CntrlItemCode;
                CaptionML=ENU=Artikelcode;
                SourceExpr=ItemNo;
                OnValidate=BEGIN
                             IF ItemRec.GET(ItemNo) THEN
                                ItemDesc := ItemRec.Description
                             ELSE BEGIN
                               ItemDesc := '';
                               ItemNo := '';
                               ERROR('Artikel onbekend');
                             END;

                             IF (ItemRec.Blocked) AND (NOT ErrorSet) THEN BEGIN
                               ERROR(STRSUBSTNO('%1 is geblokkeerd', ItemNo));
                               ItemDesc := '';
                               ItemNo := '';
                             END;
                           END;

                OnLookup=BEGIN
                           ItemRec.RESET;
                           ItemRec.SETRANGE(Blocked, FALSE);
                           //**4PS.AH Enter customer specific number for 'Item List'
                           IF PAGE.RUNMODAL(11126614, ItemRec) = ACTION::LookupOK THEN
                             ItemNo := ItemRec."No." ;

                           ItemRec.RESET;

                           ItemRec.GET(ItemNo);
                           ItemDesc := ItemRec.Description;
                         END;

                QuickEntry=TRUE }

    { 1100525011;1;Field  ;
                CaptionML=ENU=Omschrijving;
                SourceExpr=ItemRec.Description;
                Visible=false;
                Enabled=FALSE;
                Editable=FALSE;
                QuickEntry=FALSE }

    { 1100525004;1;Field  ;
                Name=CntrlQuantity;
                CaptionML=ENU=Quantity;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             IF Quantity <> 0 THEN
                               AddScanLine;
                           END;
                            }

  }
  CODE
  {
    VAR
      CompanyInfo@1100525029 : Record 79;
      UserInfo@1100525028 : Record 91;
      InvSetupRec@1100525027 : Record 313;
      LocationRec@1100525026 : Record 14;
      ScannerRec@1100525025 : Record 11012061;
      ItemRec@1100525024 : Record 27;
      JobRec@1100525023 : Record 11072003;
      ItemJnlLineRec@1100525022 : Record 83;
      ItemJnlTemplateRec@1100525021 : Record 82;
      ItemJnlBatchRec@1100525020 : Record 233;
      NoSeriesMgt@1100525019 : Codeunit 396;
      ItemJnlPostBatch@1100525018 : Codeunit 23;
      UserMgt@1100525032 : Codeunit 5700;
      LocationNo@1100525017 : Code[20];
      ItemNo@1100525016 : Code[20];
      JobNo@1100525015 : Code[20];
      Quantity@1100525014 : Decimal;
      ItemDesc@1100525013 : Text[100];
      LineNumber@1100525012 : Integer;
      NextDocNo@1100525011 : Code[20];
      NextLineNo@1100525010 : Integer;
      GvInventory@1100525009 : Decimal;
      ErrorSet@1100525007 : Boolean;
      ElementCode@1100525006 : Code[20];
      TestDocNo@1100525005 : Text[100];
      FirstLineNo@1100525004 : Integer;
      LastLineNo@1100525003 : Integer;
      gvBatchName@1100525002 : Code[30];
      AppliedBatchRunDocument@1100525001 : Code[20];
      JobSetup@1100525000 : Record 315;
      Text001@1100525030 : TextConst 'ENU=More than one session for %1 open';
      CompanyCode@1100525031 : Text[50];
      WSHShell@1100525033 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";

    PROCEDURE AddScanLine@1100409000();
    BEGIN
      IF NOT LocationRec.GET(LocationNo) THEN
        EXIT;

      IF (JobNo = '') OR
         (ItemNo = '') OR
         (Quantity = 0) THEN
        EXIT;

      JobSetup.GET;
      IF (ElementCode = '') AND (JobSetup."Posting Element Mandatory") THEN BEGIN
        ERROR('Element moet worden ingevuld');
      END;

      ScannerRec.INIT;
      ScannerRec.RESET;

      ScannerRec.ScannerID := COPYSTR(USERID, 1, MAXSTRLEN(ScannerRec.ScannerID));
      ScannerRec.Type := ScannerRec.Type::"Project Delivery";
      ScannerRec.Date := TODAY;
      ScannerRec.Time := TIME;
      ScannerRec."Line No." := '1';
      ScannerRec."Location Code" := LocationNo;
      ScannerRec."Receiving Company" := CompanyCode;
      ScannerRec."Project No." := JobNo;
      ScannerRec."Item No." := ItemNo;
      ScannerRec.Element := ElementCode;
      ScannerRec.Quantity := Quantity;

      REPEAT
        EVALUATE(LineNumber, ScannerRec."Line No.");
        LineNumber += 1;
        ScannerRec."Line No." := FORMAT(LineNumber);
      UNTIL ScannerRec.INSERT(TRUE);

      ItemNo := '';
      ItemDesc := '';
      Quantity := 0;

      CLEAR(ItemRec);
      CLEAR(ScannerRec);
      CLEAR(LocationRec);

      {
      IF ISCLEAR(WSHShell) THEN
        CREATE(WSHShell,FALSE,TRUE);
      WSHShell.SendKeys('+{TAB}');   // <SHIFT><TAB>
      WSHShell.SendKeys('+{TAB}');   // <SHIFT><TAB>  to itemcode
      CLEAR(WSHShell);
      }
    END;

    BEGIN
    END.
  }
}

