OBJECT Page 11130133 Budget Adjustment Subform
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    SourceTable=Table11012001;
    SourceTableView=WHERE(Budget Summary Line=FILTER(No));
    PageType=ListPart;
    TimerUpdate=0;
    AutoSplitKey=Yes;
    OnOpenPage=VAR
                 JobsSetup@1100525000 : Record 315;
               BEGIN
                 //**4PS.sn
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS.en
                 TradeItemEnabled := ItemSetup.READPERMISSION;

                 ExtensionContractEditable := TRUE;

                 JobsSetup.GET();
                 CostComponentEditable := JobsSetup."Cost Component Editable";
               END;

    OnClosePage=BEGIN
                  RecalcSummarySheet;
                END;

    OnAfterGetRecord=BEGIN
                       RefQuote := RouteRefMgtCU.GetQuoteOfReference("Purchase Route Reference");
                       GetItemSpecifications;

                       IF gFromReference THEN BEGIN
                         gFromReference := FALSE;
                         SETRANGE("Line No.");
                       END;

                       KeyChangedBySystem := FALSE;
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  //**4PS.sn
                  DPA_SetDefaultDepartment;
                  //**4PS.en
                  RefQuote := '';
                  GetVersionDate;
                  //"Cost Type" := xRec."Cost Type";  //db, 26-03-04  //*C-025993.o
                  IF "Project No." <> '' THEN
                    VALIDATE("Cost Type", xRec."Cost Type");  //*C-025993.n
                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=BEGIN
                     Fixed := BudgetFixed(Rec);
                     IF Fixed THEN
                       ERROR(Text000);

                     IF NOT KeyChangedBySystem THEN BEGIN
                       IF "Extension Contract" <> '' THEN BEGIN
                         SETCURRENTKEY("Project No.","Extension Contract","Line No.");
                         KeyChangedBySystem := TRUE;
                       END;
                       IF Adjustment <> '' THEN BEGIN
                         SETCURRENTKEY("Project No.",Adjustment,"Line No.");
                         KeyChangedBySystem := TRUE;
                       END;
                     END;

                     IF (Quantity <> 0) OR
                        (Amount <> 0)
                     THEN BEGIN
                       FillChangedSummarySheet(Rec, FALSE);
                       RecalcSummarySheet;
                     END;
                   END;

    OnModifyRecord=BEGIN
                     Fixed := BudgetFixed(Rec);
                     IF Fixed THEN
                       ERROR(Text005);

                     IF (xRec.Quantity <> Quantity) OR
                        (xRec.Hours <> Hours ) OR
                        (xRec.Amount <> Amount) OR
                        (xRec."Cost Type" <> "Cost Type") THEN BEGIN
                       FillChangedSummarySheet(Rec, FALSE);
                       RecalcSummarySheet;
                     END;
                   END;

    OnDeleteRecord=BEGIN
                     Fixed := BudgetFixed(Rec);
                     IF Fixed THEN
                       ERROR(Text001);

                     //DeleteSummaryLinesExtAdjust; //call 29724  //29724-2.o
                     //FillChangedSummarySheet(Rec, TRUE);        //29724-2.o
                     //29724-2.sn
                     IF DeleteSummaryLinesExtAdjust THEN   // If last line of contract and/or adjusment is deleted
                       FillChangedSummarySheet(Rec, TRUE)
                     ELSE
                       FillChangedSummarySheet(Rec, FALSE);
                     //29724-2.en

                     DELETE(FALSE);
                     RecalcSummarySheet;
                     INSERT(FALSE);
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1100525003;2 ;Action    ;
                      CaptionML=ENU=&Apply Budget Difference;
                      OnAction=BEGIN
                                 Apply;
                               END;
                                }
      { 1901111604;2 ;Action    ;
                      CaptionML=ENU=Modify Vendor Collectively;
                      Image=Vendor;
                      OnAction=BEGIN
                                 UpdateVendor;
                               END;
                                }
      { 1100525001;2 ;Action    ;
                      CaptionML=ENU=&Reverse;
                      Image=Restore;
                      OnAction=BEGIN
                                 ShiftQuantity;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1905210204;2 ;Action    ;
                      CaptionML=ENU=Purchase Route References;
                      Image=ContactReference;
                      OnAction=BEGIN
                                 ShowPurchRouteRef;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1210190007;2 ;Action    ;
                      CaptionML=ENU=Explode Bill of Materials;
                      Image=ShowMatrix;
                      OnAction=BEGIN
                                 ExplodeBOM; //db, 06-04-07 (rano)
                               END;
                                }
      { 1210190005;2 ;Action    ;
                      CaptionML=ENU=Modify BOM Discount;
                      Image=Edit;
                      OnAction=BEGIN
                                 UpgradeBOMDiscount;
                               END;
                                }
      { 1210190003;2 ;Action    ;
                      CaptionML=ENU=Modify BOM Amount;
                      Image=Edit;
                      OnAction=BEGIN
                                 UpgradeBOMAmount;
                               END;
                                }
      { 1210190002;2 ;Action    ;
                      CaptionML=ENU=Remove Zero-Lines BOM;
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 RemoveZeroLinesBOM;
                               END;
                                }
      { 1210190001;2 ;Action    ;
                      CaptionML=ENU=Comment Lines (Budget Line);
                      Image=ViewComments;
                      OnAction=BEGIN
                                 // **4PS MVOS
                                 EditCommentLines;
                               END;
                                }
      { 1100528400;2 ;Action    ;
                      CaptionML=ENU=Recalc Summary Sheet;
                      Image=Recalculate;
                      OnAction=BEGIN
                                 RecalcSummarySheet;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 4   ;2   ;Field     ;
                SourceExpr=Element }

    { 1100485018;2;Field  ;
                SourceExpr="Element Description";
                Visible=FALSE }

    { 1100525002;2;Field  ;
                SourceExpr=Chapter;
                Visible=FALSE }

    { 1100525004;2;Field  ;
                SourceExpr=Paragraph;
                Visible=FALSE }

    { 2   ;2   ;Field     ;
                SourceExpr="Cost Type";
                Editable=CostTypeEditable;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;
                            }

    { 1210190018;2;Field  ;
                SourceExpr="Extension Contract";
                Visible=false;
                Editable=ExtensionContractEditable }

    { 1100485042;2;Field  ;
                SourceExpr="Plot No.";
                Visible=FALSE }

    { 1100485044;2;Field  ;
                SourceExpr="House Model";
                Visible=FALSE }

    { 1100485046;2;Field  ;
                SourceExpr="Main Group";
                Visible=FALSE }

    { 1100485048;2;Field  ;
                SourceExpr=Group;
                Visible=FALSE }

    { 1100485050;2;Field  ;
                SourceExpr="Sub Group";
                Visible=FALSE }

    { 1100485040;2;Field  ;
                SourceExpr=Option;
                Visible=FALSE }

    { 1100485038;2;Field  ;
                SourceExpr="Project Planning Activity No.";
                Visible=false }

    { 1100485000;2;Field  ;
                SourceExpr="Tender Paragraph";
                Visible=false;
                OnValidate=BEGIN
                             TenderElementOnAfterValidate;
                           END;
                            }

    { 1100485006;2;Field  ;
                SourceExpr="Description Tender Paragraph";
                Visible=FALSE }

    { 1100525010;2;Field  ;
                SourceExpr="Tender Paragraph Text";
                Visible=FALSE }

    { 1100485002;2;Field  ;
                SourceExpr="Tender Paragraph Part";
                Visible=false;
                OnValidate=BEGIN
                             TenderElementPartOnAfterValida;
                           END;
                            }

    { 1100485008;2;Field  ;
                SourceExpr="Descr Tender Paragraph Part";
                Visible=FALSE }

    { 1100485020;2;Field  ;
                SourceExpr="Estimate No.";
                Visible=FALSE }

    { 1100525006;2;Field  ;
                SourceExpr="Recipe Group";
                Visible=FALSE }

    { 1100525008;2;Field  ;
                SourceExpr=Recipe;
                Visible=FALSE;
                OnLookup=VAR
                           lvRecipeFrm@1100525001 : Page 11012164;
                           lvRecipeRec@1100525000 : Record 11012155;
                         BEGIN
                           lvRecipeFrm.LOOKUPMODE(TRUE);
                           lvRecipeFrm.SetSelection(
                             DATABASE::"Budget Line","Project No.","Extension Contract",Adjustment,Element,'','','','','', TRUE);
                           IF "Recipe Group" <> '' THEN
                             lvRecipeRec.SETRANGE("Recipe Group","Recipe Group");
                           lvRecipeFrm.SETTABLEVIEW(lvRecipeRec);
                           IF lvRecipeFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             lvRecipeFrm.GETRECORD(lvRecipeRec);
                             "Recipe Group" := lvRecipeRec."Recipe Group";
                             VALIDATE(Recipe, lvRecipeRec."No.");
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 6   ;2   ;Field     ;
                SourceExpr="Item No.";
                Editable=ItemNoEditable;
                OnValidate=BEGIN
                             ItemNoOnAfterValidate;
                             SetFieldsEditable;
                           END;

                OnLookup=BEGIN
                           IF Fixed THEN
                             ERROR(Text005);

                           IF NOT ItemNoEditable THEN
                             EXIT;

                           CLEAR(ItemFrm);
                           ItemFrm.LOOKUPMODE(TRUE);
                           ItemFrm.DetermineInterface(
                             DATABASE::"Budget Line","Project No.","Extension Contract",Adjustment,Element,0,'','',"Line No.",'','');
                           IF ItemRec.GET("Item No.") THEN
                             ItemFrm.SETRECORD(ItemRec);
                           IF ItemFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             VALIDATE("Cost Type", "Cost Type"::Material);
                             IF "Cost Type" = "Cost Type"::Material THEN BEGIN
                               ItemFrm.GETRECORD(ItemRec);
                               VALIDATE("Item No.", ItemRec."No.");
                             END;
                           END ELSE BEGIN
                             IF ItemFrm.CheckMultiCopy THEN  //db, 09-03-07 (call 8283)
                               CurrPage.UPDATE(TRUE);
                           END;
                           SetFieldsEditable;
                         END;
                          }

    { 8   ;2   ;Field     ;
                SourceExpr=Manufacturer;
                Visible=False;
                Enabled=TradeItemEnabled;
                Editable=ManufacturerEDITABLE }

    { 10  ;2   ;Field     ;
                SourceExpr="Basic Item";
                Visible=False;
                Enabled=TradeItemEnabled;
                Editable=BasicItemEDITABLE;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;

                OnLookup=VAR
                           lvRefDate@1100485004 : Date;
                           lvDiscRef1@1100485003 : Code[20];
                           lvDiscRef2@1100485002 : Code[20];
                         BEGIN
                           IF Fixed THEN
                             ERROR(Text005);

                           IF NOT BasicItemEditable THEN
                             EXIT;

                           CLEAR(BasicItemFrm);
                           BasicItemFrm.LOOKUPMODE(TRUE);
                           BasicItemFrm.SetSelection(DATABASE::"Budget Line",
                             "Project No.","Extension Contract",Adjustment,Element,0,'','',"Line No.",'','');

                           GetReferenceData(lvRefDate, lvDiscRef1, lvDiscRef2);
                           BasicItemFrm.SetReference(lvRefDate, lvDiscRef1, lvDiscRef2);

                           BasicItemRec.InitLookup(BasicItemRec, "Basic Item", Manufacturer);
                           BasicItemFrm.SETRECORD(BasicItemRec);

                           IF BasicItemFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             VALIDATE("Cost Type", "Cost Type"::Material);
                             IF "Cost Type" = "Cost Type"::Material THEN BEGIN
                               BasicItemFrm.GETRECORD(BasicItemRec);
                               Manufacturer := BasicItemRec.Manufacturer;
                               VALIDATE("Basic Item", BasicItemRec."Product Code");
                             END;
                           END ELSE BEGIN
                             IF BasicItemFrm.CheckMultiCopy THEN  //db, 09-03-07 (call 8283)
                               CurrPage.UPDATE(TRUE);
                           END;
                           SetFieldsEditable;
                         END;
                          }

    { 12  ;2   ;Field     ;
                SourceExpr="Vendor (Trade Item)";
                Visible=False;
                Enabled=TradeItemEnabled;
                Editable=VendorTradeItemEDITABLE }

    { 14  ;2   ;Field     ;
                SourceExpr="Trade Item";
                Visible=False;
                Enabled=TradeItemEnabled;
                Editable=TradeItemEDITABLE;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;

                OnLookup=VAR
                           lvRefDate@1100485002 : Date;
                           lvDiscRef1@1100485003 : Code[20];
                           lvDiscRef2@1100485004 : Code[20];
                           lvTempBudgetLine@1100525002 : TEMPORARY Record 11012001;
                         BEGIN
                           IF Fixed THEN
                             ERROR(Text005);

                           IF NOT TradeItemEditable THEN
                             EXIT;

                           IF "Item No." <> '' THEN BEGIN
                             lvTempBudgetLine.COPY(Rec);  //db, 21-08-09: M15801
                             lvTempBudgetLine.VALIDATE("Item No.","Item No.");
                             g_ItemCode := lvTempBudgetLine."Trade Item";
                             g_Vendor := lvTempBudgetLine."Vendor (Trade Item)";
                             COMMIT;
                           END ELSE BEGIN
                             g_ItemCode := '';
                             g_Vendor := '';
                           END;


                           CLEAR(TradeItemFrm);
                           TradeItemFrm.LOOKUPMODE(TRUE);
                           TradeItemFrm.SetSelection(DATABASE::"Budget Line",
                             "Project No.", "Extension Contract", Adjustment, Element, 0, '', '', "Line No.", '', '',
                             "Vendor (Trade Item)", "Trade Item", Manufacturer, "Basic Item", g_ItemCode, g_Vendor);

                           GetReferenceData(lvRefDate, lvDiscRef1, lvDiscRef2);
                           TradeItemFrm.SetReference(lvRefDate, lvDiscRef1, lvDiscRef2);

                           TradeItemRec.InitLookup(TradeItemRec, "Basic Item", Manufacturer, "Trade Item", "Vendor (Trade Item)");
                           TradeItemFrm.SETRECORD(TradeItemRec);

                           IF TradeItemFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             VALIDATE("Cost Type", "Cost Type"::Material);
                             IF "Cost Type" = "Cost Type"::Material THEN BEGIN
                               TradeItemFrm.GETRECORD(TradeItemRec);
                               Manufacturer := TradeItemRec.Manufacturer;
                               "Basic Item" := TradeItemRec."Product Code";
                               "Vendor (Trade Item)" := TradeItemRec.Vendor;
                               VALIDATE("Trade Item", TradeItemRec."Item Code");
                             END;
                           END ELSE BEGIN
                             IF TradeItemFrm.CheckMultiCopy THEN  //db, 09-03-07 (call 8283)
                               CurrPage.UPDATE(TRUE);
                           END;
                           SetFieldsEditable;
                         END;

                OnAssistEdit=BEGIN
                               IF HandleAssistEditItem(FIELDNO("Trade Item")) THEN
                                 CurrPage.UPDATE(TRUE);
                             END;
                              }

    { 1100485012;2;Field  ;
                SourceExpr="Item Brand";
                Visible=FALSE }

    { 1100485014;2;Field  ;
                SourceExpr="Item Type";
                Visible=FALSE }

    { 1100485016;2;Field  ;
                SourceExpr="Item Series";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr="Cost Object";
                LookupPageID=Cost Object List;
                OnValidate=BEGIN
                             SetFieldsEditable;
                           END;
                            }

    { 1100485010;2;Field  ;
                SourceExpr="Cost Component";
                Visible=false;
                Editable=CostComponentEditable }

    { 20  ;2   ;Field     ;
                SourceExpr=Description }

    { 1210190008;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 1210190000;2;Field  ;
                SourceExpr="External Text Block";
                Visible=false }

    { 22  ;2   ;Field     ;
                SourceExpr="Time Quantity";
                Visible=false;
                OnValidate=BEGIN
                             UpdateSummary;
                           END;
                            }

    { 24  ;2   ;Field     ;
                SourceExpr="Unit of Time";
                Visible=false }

    { 26  ;2   ;Field     ;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             UpdateSummary;
                             SetFieldsEditable;
                           END;
                            }

    { 28  ;2   ;Field     ;
                SourceExpr="Unit of Measure" }

    { 30  ;2   ;Field     ;
                SourceExpr=Norm;
                Editable=NormEDITABLE;
                OnValidate=BEGIN
                             UpdateSummary;
                             SetFieldsEditable;
                           END;
                            }

    { 1100485004;2;Field  ;
                SourceExpr="Production Rate";
                Visible=false;
                Editable=ProductionRateEDITABLE }

    { 32  ;2   ;Field     ;
                SourceExpr="Rate Code";
                Editable=[RateCodeEDITABLE ];
                OnValidate=BEGIN
                             UpdateSummary;
                             SetFieldsEditable;
                           END;
                            }

    { 34  ;2   ;Field     ;
                SourceExpr=Rate;
                Editable=RateEDITABLE;
                OnValidate=BEGIN
                             UpdateSummary;
                           END;
                            }

    { 1100525005;2;Field  ;
                SourceExpr="Rate (FCY)";
                Visible=FALSE;
                Editable=RateEDITABLE }

    { 1210190014;2;Field  ;
                SourceExpr="Gross Price";
                Visible=FALSE;
                Editable=GrossPriceEDITABLE }

    { 1100525007;2;Field  ;
                SourceExpr="Gross Price (FCY)";
                Visible=FALSE;
                Editable=GrossPriceEDITABLE }

    { 1210190016;2;Field  ;
                SourceExpr="Discount %";
                Visible=FALSE;
                Editable=DiscountPercEDITABLE }

    { 36  ;2   ;Field     ;
                SourceExpr=Price;
                Editable=PriceEDITABLE;
                OnValidate=BEGIN
                             UpdateSummary;
                           END;
                            }

    { 1100525009;2;Field  ;
                SourceExpr="Price (FCY)";
                Visible=FALSE;
                Editable=PriceEDITABLE }

    { 1100485032;2;Field  ;
                SourceExpr="Surcharge %";
                Visible=FALSE;
                Editable=SurchargePercEDITABLE;
                OnValidate=BEGIN
                             UpdateSummary;
                           END;
                            }

    { 1100485034;2;Field  ;
                SourceExpr="Surcharge Price";
                Visible=FALSE;
                Editable=SurchargePriceEDITABLE }

    { 38  ;2   ;Field     ;
                SourceExpr=Hours }

    { 40  ;2   ;Field     ;
                SourceExpr=Amount;
                Editable=AmountEDITABLE;
                OnValidate=BEGIN
                             UpdateSummary;
                           END;
                            }

    { 1100525011;2;Field  ;
                SourceExpr="Amount (FCY)";
                Visible=FALSE;
                Editable=AmountEDITABLE }

    { 1100525012;2;Field  ;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 42  ;2   ;Field     ;
                SourceExpr="Purchase Action";
                Visible=false }

    { 44  ;2   ;Field     ;
                SourceExpr="Purchase Phase";
                Visible=false }

    { 1210190010;2;Field  ;
                SourceExpr="Price Agreement";
                Visible=FALSE }

    { 1210190012;2;Field  ;
                SourceExpr=Vendor;
                Visible=FALSE }

    { 1210190006;2;Field  ;
                CaptionML=ENU=Quote No.;
                SourceExpr=RefQuote;
                Visible=FALSE;
                Editable=FALSE;
                OnLookup=VAR
                           lvPurchHeadRec@1210190000 : Record 38;
                         BEGIN
                           IF (RefQuote = '') THEN
                             EXIT;

                           IF (COPYSTR(RefQuote, 1, 1) = '<') THEN  // IF Quote No. is '<Nr.>', then more than one quote present
                             RouteRefMgtCU.ShowReferenceQuoteList("Purchase Route Reference")
                           ELSE BEGIN
                             lvPurchHeadRec.SETRANGE("Document Type", lvPurchHeadRec."Document Type"::Quote);
                             lvPurchHeadRec.SETRANGE("No.", RefQuote);
                             PAGE.RUNMODAL(PAGE::"Purchase Quote", lvPurchHeadRec);
                           END;
                         END;
                          }

    { 1210190004;2;Field  ;
                SourceExpr="Purchase Route Reference";
                Visible=FALSE }

    { 1100485030;2;Field  ;
                SourceExpr="Scheme Code";
                Visible=false;
                Enabled=TradeItemEnabled }

    { 1100485022;2;Field  ;
                SourceExpr=Comments;
                Visible=false;
                Enabled=TradeItemEnabled }

    { 1100485026;2;Field  ;
                SourceExpr="Comments for Logistics";
                Visible=false;
                Enabled=TradeItemEnabled }

    { 1100485024;2;Field  ;
                SourceExpr=Supply;
                Visible=false;
                Enabled=TradeItemEnabled }

    { 1100485028;2;Field  ;
                SourceExpr="Material Sheet";
                Visible=false;
                Enabled=TradeItemEnabled }

    { 1100485036;2;Field  ;
                SourceExpr="Line No. External Estimate";
                Visible=FALSE }

    { 1100525000;2;Field  ;
                SourceExpr=Advised;
                Visible=false;
                Editable=FALSE }

    { 1100528600;2;Field  ;
                SourceExpr="Rental Unit" }

  }
  CODE
  {
    VAR
      Text000@11012009 : TextConst 'ENU=Adding lines not allowed, budget is fixed.';
      Text001@11012010 : TextConst 'ENU=Deleting not allowed, budget is fixed.';
      ItemSetup@1100525002 : Record 11012300;
      RouteRefMgtCU@1210190003 : Codeunit 11012045;
      ItemFrm@11012003 : Page 31;
      ItemRec@11012004 : Record 27;
      BasicItemFrm@11012005 : Page 11012333;
      BasicItemRec@11012006 : Record 11012316;
      TradeItemFrm@11012007 : Page 11012334;
      TradeItemRec@11012008 : Record 11012317;
      Text005@1100485009 : TextConst 'ENU=Modify not allowed, budget is fixed.';
      Text009@1210190000 : TextConst 'ENU=Before editing text enter the line first';
      gFromReference@1210190004 : Boolean;
      RefQuote@1210190002 : Code[20];
      KeyChangedBySystem@1100485000 : Boolean;
      TmpBudgSummaryRec@1100485004 : TEMPORARY Record 11012064;
      CalcSummaryWindow@1100485005 : Dialog;
      Text011@1100485006 : TextConst 'ENU=Update Summary #1###############';
      g_ItemCode@1100525001 : Code[20];
      g_Vendor@1100525000 : Code[20];
      Text012@1100525003 : TextConst 'ENU=Select Adjustment Lines first.';
      ItemNoEditable@1100525004 : Boolean INDATASET;
      ManufacturerEditable@1100525005 : Boolean INDATASET;
      BasicItemEditable@1100525006 : Boolean INDATASET;
      VendorTradeItemEditable@1100525007 : Boolean INDATASET;
      TradeItemEditable@1100525008 : Boolean INDATASET;
      NormEditable@1100525009 : Boolean INDATASET;
      ProductionRateEditable@1100525010 : Boolean INDATASET;
      RateCodeEditable@1100525011 : Boolean INDATASET;
      RateEditable@1100525012 : Boolean INDATASET;
      GrossPriceEditable@1100525013 : Boolean INDATASET;
      DiscountPercEditable@1100525014 : Boolean INDATASET;
      PriceEditable@1100525015 : Boolean INDATASET;
      SurchargePercEditable@1100525016 : Boolean INDATASET;
      SurchargePriceEditable@1100525017 : Boolean INDATASET;
      AmountEditable@1100525018 : Boolean INDATASET;
      CostTypeEditable@1210190007 : Boolean INDATASET;
      CostComponentEditable@1210190008 : Boolean INDATASET;
      TradeItemEnabled@1210190005 : Boolean INDATASET;
      Fixed@1210190006 : Boolean;
      ExtensionContractEditable@1210190001 : Boolean INDATASET;
      gvCorrCde@1100525019 : Code[10];
      Text013@1210190009 : TextConst 'ENU=Remove Zero Lines BOM ?';
      Text014@1100528400 : TextConst 'ENU=%1 needs to be recalculated.';
      DPA_IsHardFilter@1100525020 : Boolean;

    PROCEDURE ShiftQuantity@1();
    VAR
      lvBudgetLineRec@1100485000 : Record 11012001;
    BEGIN
      CurrPage.SETSELECTIONFILTER(lvBudgetLineRec);
      WITH lvBudgetLineRec DO BEGIN
        IF NOT FINDSET(FALSE,FALSE) THEN BEGIN
          MESSAGE(Text012);
          EXIT;
        END ELSE BEGIN
          REPEAT
            IF BudgetFixed(lvBudgetLineRec) THEN
              EXIT;
          UNTIL NEXT = 0;
        END;
        IF FINDSET(FALSE,FALSE) THEN
          REPEAT;
            FillChangedSummarySheet(lvBudgetLineRec, FALSE);
          UNTIL NEXT = 0;
        lvBudgetLineRec.ReverseBudgetLines;
      END;

      RecalcSummarySheet;
    END;

    PROCEDURE EditText@1210190000();
    VAR
      TextFrm@11012001 : Page 11012120;
    BEGIN
      IF "Line No." = 0 THEN
        ERROR(Text009);

      TextFrm.SetSelection(DATABASE::"Budget Line","Project No.",
        Adjustment,"Extension Contract",Option,'','',"Line No.",0);

      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    PROCEDURE ShowItemRouteRef@1100485000();
    VAR
      DocFeatureRec@1100485000 : Record 11020303;
    BEGIN
      //db, 06-04-07 (rano)
      IF "Item Route Reference" = '' THEN EXIT;
      DocFeatureRec.SETRANGE("Document No.", "Item Route Reference");
      PAGE.RUNMODAL(0, DocFeatureRec);
    END;

    PROCEDURE ShowPurchRouteRef@1210190004();
    BEGIN
      RouteRefMgtCU.ShowReferenceList("Purchase Route Reference");
    END;

    PROCEDURE InitSelectionFromReference@1210190008(IBudgetLineNo@1210190000 : Integer);
    BEGIN
      gFromReference := TRUE;
      SETRANGE("Line No.", IBudgetLineNo);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE FillChangedSummarySheet@1100485002(lvBudgetLineRec@1100485001 : Record 11012001;FromDeleteLastTrigger@1210190002 : Boolean);
    VAR
      lvBudgSummaryRec@1100485000 : Record 11012064;
      lBudgetAdjustment@1210190000 : Record 11012003;
      lBudgetLineRec@1210190001 : Record 11012001;
    BEGIN
      WITH lvBudgetLineRec DO BEGIN

        lvBudgSummaryRec.SETRANGE("Project No.", "Project No.");
        lvBudgSummaryRec.SETRANGE("Contract No.", "Extension Contract");
        lvBudgSummaryRec.SETRANGE("House Model", '');
        lvBudgSummaryRec.SETRANGE("Main Group", '');
        lvBudgSummaryRec.SETRANGE(Group, '');
        lvBudgSummaryRec.SETRANGE("Sub Group", '');
        lvBudgSummaryRec.SETRANGE(Option, '');
        IF NOT lvBudgSummaryRec.FIND('-') THEN
          EXIT;

        IF NOT FromDeleteLastTrigger THEN BEGIN //call 29724
          TmpBudgSummaryRec.RESET;
          TmpBudgSummaryRec.SETRANGE("Project No.", "Project No.");
          TmpBudgSummaryRec.SETRANGE("Contract No.", "Extension Contract");
          TmpBudgSummaryRec.SETRANGE("Row No.", Adjustment);    //Summary Adjustments
          IF NOT TmpBudgSummaryRec.FIND('-') THEN BEGIN
            TmpBudgSummaryRec.INIT;
            TmpBudgSummaryRec."Project No." := "Project No.";
            TmpBudgSummaryRec."Contract No." := "Extension Contract";
            TmpBudgSummaryRec."Row No." := Adjustment;  //Summary Adjustments
            TmpBudgSummaryRec.INSERT;
          END;
        END; //call 29724

        //Summary Adjustment
        //More recent adjustments are re-calculated.
        lBudgetAdjustment.RESET;
        lBudgetAdjustment.SETRANGE("Project No.", "Project No.");
        lBudgetAdjustment.SETFILTER("No.", '%1..', Adjustment);
        IF lBudgetAdjustment.FINDSET THEN BEGIN
          IF lBudgetAdjustment."No." <> Adjustment THEN BEGIN
            IF "Extension Contract" = '' THEN BEGIN //M18478
              TmpBudgSummaryRec.RESET;
              TmpBudgSummaryRec.SETRANGE("Project No.", "Project No.");
              TmpBudgSummaryRec.SETRANGE("Contract No.", "Extension Contract");
              TmpBudgSummaryRec.SETRANGE("Row No.", lBudgetAdjustment."No." );
              IF NOT TmpBudgSummaryRec.FIND('-') THEN BEGIN
                TmpBudgSummaryRec.INIT;
                TmpBudgSummaryRec."Project No." := "Project No.";
                TmpBudgSummaryRec."Contract No." := "Extension Contract";
                TmpBudgSummaryRec."Row No." := lBudgetAdjustment."No.";
                TmpBudgSummaryRec.INSERT;
              END;
            END ELSE BEGIN        //M18478 sn
              lBudgetLineRec.RESET;
              lBudgetLineRec.SETCURRENTKEY("Project No.","Cost Type","Cost Object","Extension Contract Status","Version Date",
                Adjustment,"Extension Contract",Option,"Purchase Action");
              lBudgetLineRec.SETRANGE("Project No.","Project No.");
              lBudgetLineRec.SETFILTER("Extension Contract", "Extension Contract");
              lBudgetLineRec.SETFILTER(Adjustment, lBudgetAdjustment."No.");
              lBudgetLineRec.SETFILTER(Option, '%1','');
              lBudgetLineRec.SETRANGE("Budget Summary Line",FALSE); //call 29724
              IF lBudgetLineRec.FINDFIRST THEN BEGIN
                TmpBudgSummaryRec.RESET;
                TmpBudgSummaryRec.SETRANGE("Project No.", "Project No.");
                TmpBudgSummaryRec.SETRANGE("Contract No.", "Extension Contract");
                TmpBudgSummaryRec.SETRANGE("Row No.", lBudgetAdjustment."No." );
                IF NOT TmpBudgSummaryRec.FIND('-') THEN BEGIN
                  TmpBudgSummaryRec.INIT;
                  TmpBudgSummaryRec."Project No." := "Project No.";
                  TmpBudgSummaryRec."Contract No." := "Extension Contract";
                  TmpBudgSummaryRec."Row No." := lBudgetAdjustment."No.";
                  TmpBudgSummaryRec.INSERT;
                END;
              END;
            END;       //M18478 en
           END;
        END;
        //Summary Adjustment

        TmpBudgSummaryRec.RESET;

      END;
    END;

    PROCEDURE RecalcSummarySheet@1100485006() : Boolean;
    VAR
      lvBudgSummaryRec@1100485000 : Record 11012064;
    BEGIN
      IF NOT TmpBudgSummaryRec.FIND('-') THEN
        EXIT(FALSE);

      CalcSummaryWindow.OPEN(Text011);

      REPEAT
        CalcSummaryWindow.UPDATE(1, "Project No.");

        lvBudgSummaryRec.SETRANGE("Project No.", TmpBudgSummaryRec."Project No.");
        lvBudgSummaryRec.SETRANGE("Contract No.", TmpBudgSummaryRec."Contract No.");
        lvBudgSummaryRec.SETRANGE("House Model", '');
        lvBudgSummaryRec.SETRANGE("Main Group", '');
        lvBudgSummaryRec.SETRANGE(Group, '');
        lvBudgSummaryRec.SETRANGE("Sub Group", '');
        lvBudgSummaryRec.SETRANGE(Option, '');
        IF lvBudgSummaryRec.FIND('-') THEN BEGIN
          //lvBudgSummaryRec.ReCalcSummaryLines();        //Summary Adjustment
          //lvBudgSummaryRec.UpdateBudgetLines(FALSE);    //Summary Adjustments
          //Summary Adjustments  Teh Adjustment is stored in the field "Row No."
          lvBudgSummaryRec.ReCalcSummaryLines(TmpBudgSummaryRec."Row No.");
          lvBudgSummaryRec.UpdateBudgetLines(FALSE,TmpBudgSummaryRec."Row No.");
          //Summary Adjustments
        END;
        TmpBudgSummaryRec.DELETE;
      UNTIL TmpBudgSummaryRec.NEXT = 0;

      CalcSummaryWindow.CLOSE;

      EXIT(TRUE);
    END;

    PROCEDURE CheckIfRecalcIsNecessary@1100528400();
    BEGIN
      //C008449
      IF NOT TmpBudgSummaryRec.ISEMPTY THEN
        ERROR(Text014, TmpBudgSummaryRec.TABLECAPTION);
    END;

    PROCEDURE InsertExtendedText@5(Unconditionally@1000 : Boolean);
    VAR
      TransferExtendedText@1100485000 : Codeunit 378;
    BEGIN
      IF TransferExtendedText.BudgetCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        TransferExtendedText.InsertBudgetExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE ExplodeBOM@1100485001();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"BudgetLine-Explode BOM",Rec);
    END;

    PROCEDURE UpdateVendor@1100485004();
    VAR
      BudgetLine@1100525000 : Record 11012001;
      ModifyItemVendor@1100485000 : Page 11020420;
    BEGIN
      BudgetLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(BudgetLine);
      ModifyItemVendor.SetBudgetLineRec(BudgetLine);
      ModifyItemVendor.RUNMODAL;
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE TenderElementOnAfterValidate@19027470();
    BEGIN
      CALCFIELDS("Description Tender Paragraph");
    END;

    LOCAL PROCEDURE TenderElementPartOnAfterValida@19026696();
    BEGIN
      CALCFIELDS("Descr Tender Paragraph Part");
    END;

    LOCAL PROCEDURE ItemNoOnAfterValidate@19061248();
    BEGIN
      InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      Fixed := BudgetFixed(Rec);

      SetFieldsEditable;
    END;

    PROCEDURE SetFieldsEditable@1210190002();
    BEGIN
      ExtensionContractEditable := (NOT Fixed);

      SurchargePriceEditable := "Item Route Reference"='';
      SurchargePercEditable := "Item Route Reference"='';

      PriceEditable := NOT ("Cost Type" = "Cost Type"::Labor);
      DiscountPercEditable := NOT ("Cost Type" = "Cost Type"::Labor);
      GrossPriceEditable := NOT ("Cost Type" = "Cost Type"::Labor);

      RateCodeEditable := "Cost Type" = "Cost Type"::Labor;
      ProductionRateEditable := "Cost Type" = "Cost Type"::Labor;
      NormEditable := "Cost Type" = "Cost Type"::Labor;

      RateEditable := ("Cost Type" = "Cost Type"::Labor) AND ("Rate Code" = '');
      AmountEditable := ("Cost Type" = "Cost Type"::Labor) AND (Norm = 0) AND (Quantity = 0);

      TradeItemEditable := ("Cost Type" = "Cost Type"::Material) AND TradeItemEnabled;
      VendorTradeItemEditable := ("Cost Type" = "Cost Type"::Material) AND TradeItemEnabled;
      BasicItemEditable := ("Cost Type" = "Cost Type"::Material) AND TradeItemEnabled;
      ManufacturerEditable := ("Cost Type" = "Cost Type"::Material) AND TradeItemEnabled;
      ItemNoEditable := ("Cost Type" = "Cost Type"::Material);

      CostTypeEditable := ("Item No." + "Basic Item" + "Trade Item" = '');
    END;

    PROCEDURE SetCorrCde@1100525008(lvCorrCde@1100525000 : Code[10]);
    BEGIN
      gvCorrCde := lvCorrCde;
    END;

    PROCEDURE UpgradeBOMDiscount@1100525002();
    VAR
      BudgetLine@1100525000 : Record 11012001;
      ProcessBOMDiscount@1100525001 : Report 11012549;
    BEGIN
      BudgetLine.COPY(Rec);
      BudgetLine.SETRECFILTER;
      ProcessBOMDiscount.SetSelection(DATABASE::"Budget Line");
      ProcessBOMDiscount.SetSelectionBudget(BudgetLine);
      ProcessBOMDiscount.SETTABLEVIEW(BudgetLine);
      ProcessBOMDiscount.RUNMODAL;
      CurrPage.UPDATE;
    END;

    PROCEDURE RemoveZeroLinesBOM@1100525003();
    VAR
      BudgetLine@1100525003 : Record 11012001;
      RemoveZeroLinesBOM@1100525002 : Report 11012358;
    BEGIN
      //26253.sn
      IF NOT CONFIRM(Text013,FALSE) THEN
        EXIT;

      CurrPage.SETSELECTIONFILTER(BudgetLine);
      IF BudgetLine.FINDSET THEN BEGIN
        REPEAT
          RemoveZeroLinesBOM.SetSelection(DATABASE::"Budget Line");
          RemoveZeroLinesBOM.SetSelectionBudget(BudgetLine);
          RemoveZeroLinesBOM.SETTABLEVIEW(BudgetLine);
          RemoveZeroLinesBOM.USEREQUESTPAGE(FALSE);
          RemoveZeroLinesBOM.RUNMODAL;
          COMMIT;
          CLEAR(RemoveZeroLinesBOM);
        UNTIL BudgetLine.NEXT = 0;
      END;
      //26253.en
    END;

    PROCEDURE UpgradeBOMAmount@1100525001();
    VAR
      BudgetLine@1100525002 : Record 11012001;
      ProcessBOMAmount@1100525001 : Report 11012359;
    BEGIN
      BudgetLine.COPY(Rec);
      BudgetLine.SETRECFILTER;
      ProcessBOMAmount.SetSelection(DATABASE::"Budget Line");
      ProcessBOMAmount.SetSelectionBudget(BudgetLine);
      ProcessBOMAmount.SETTABLEVIEW(BudgetLine);
      ProcessBOMAmount.RUNMODAL;
      CurrPage.UPDATE;
    END;

    PROCEDURE EditCommentLines@1100529800();
    VAR
      CommentLine@1100529800 : Record 11020634;
      RecRef@1100529801 : RecordRef;
      RID@1100529802 : RecordID;
    BEGIN
      RecRef.GETTABLE(Rec);
      RID := RecRef.RECORDID();
      CommentLine.EditCommentLines(0, RID);
    END;

    PROCEDURE Apply@1100525000();
    VAR
      BudgetApplyFrm@1100525000 : Page 11012148;
      BudgetAdjRec@1100525001 : Record 11012003;
      BudgetLine@1100525002 : Record 11012001;
    BEGIN
      CALCFIELDS("Total Amount");
      TESTFIELD("Total Amount");
      BudgetAdjRec.GET("Project No.",Adjustment);
      //BudgetAdjRaec.GET("Project No.", gvCorrCde);

      BudgetApplyFrm.SetDefaults(BudgetAdjRec,"Total Amount" - CalcSummaryTotal(),'',''); //call 30022
      //*C029097.sn
      BudgetLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(BudgetLine);
      IF BudgetLine.FINDFIRST THEN BEGIN
        REPEAT
          BudgetLine.MARK(TRUE);
        UNTIL (BudgetLine.NEXT = 0);
        BudgetApplyFrm.SetMarkedBudgetLines(BudgetLine, FALSE);  //* Needed for Compress is 'No'
      END;
      //*C029097.en

      BudgetApplyFrm.RUNMODAL;
      CurrPage.UPDATE;
      FillChangedSummarySheet(Rec,FALSE); //call 30022
    END;

    PROCEDURE CalcSummaryTotal@1100525004() : Decimal;
    VAR
      lBudgetLineRec@1100525000 : Record 11012001;
    BEGIN
      //Summary Adjustment
      FILTERGROUP(4);
      lBudgetLineRec.SETCURRENTKEY("Project No.","Cost Type","Cost Object","Extension Contract Status","Version Date",
                                    Adjustment,"Extension Contract",Option,"Purchase Action");
      lBudgetLineRec.SETRANGE("Project No.","Project No.");
      lBudgetLineRec.SETFILTER("Extension Contract", GETFILTER("Extension Filter"));
      lBudgetLineRec.SETFILTER(Adjustment, GETFILTER("Adjustment Filter"));
      lBudgetLineRec.SETFILTER(Option, '%1','');
      lBudgetLineRec.SETFILTER("Purchase Action", GETFILTER("Purchase Action Filter"));
      lBudgetLineRec.SETRANGE("Budget Summary Line",TRUE);
      FILTERGROUP(0);
      IF lBudgetLineRec.FINDFIRST THEN BEGIN
        lBudgetLineRec.CALCSUMS(Amount);
        EXIT(lBudgetLineRec.Amount);
      END;
      EXIT(0);
    END;

    LOCAL PROCEDURE UpdateSummary@1100528401();
    BEGIN
      CurrPage.UPDATE(TRUE);
      CalcTotals;
      CurrPage.UPDATE;
    END;

    BEGIN
    {
      4PS - 28-02-05 - call 5949, Peter: changes made to prevent unnecessary autosplitkey error messages.
      4PS01 Call C-012372, JD, 29-04-08: Leave hiding/showing of GWW fields to the ZUP file
      4PS02 06-07-09 HBK Added Field "Generic Item No."
      4PS - 25-03-2010  Call 18564. DelayedInsert is set ot Yes
    }
    END.
  }
}

