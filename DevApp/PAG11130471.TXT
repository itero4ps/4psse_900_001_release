OBJECT Page 11130471 Maint. Scheme Version Line FB
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Totals;
    SourceTable=Table11071744;
    PageType=CardPart;
    OnAfterGetCurrRecord=BEGIN
                           CalculateTotals;
                         END;

  }
  CONTROLS
  {
    { 1100525007;0;Container;
                CaptionML=ENU=Totals;
                ContainerType=ContentArea }

    { 1100528601;1;Group  ;
                CaptionML=ENU=Per Service;
                GroupType=Group }

    { 1100528600;2;Field  ;
                CaptionML=ENU=Object Quantity;
                SourceExpr=ObjectQuantity;
                Editable=FALSE }

    { 1100525005;2;Field  ;
                CaptionML=ENU=Labor;
                SourceExpr=gvLabor }

    { 1100525003;2;Field  ;
                CaptionML=ENU=Material;
                SourceExpr=gvMaterial }

    { 1100525002;2;Field  ;
                CaptionML=ENU=Subcontracting;
                SourceExpr=gvSubcontract }

    { 1100525001;2;Field  ;
                CaptionML=ENU=Plant;
                SourceExpr=gvPlant }

    { 1100525000;2;Field  ;
                CaptionML=ENU=Sundry;
                SourceExpr=gvSundry }

    { 1100525004;2;Field  ;
                CaptionML=ENU=Total;
                SourceExpr=gvTotal;
                Style=Strong;
                StyleExpr=TRUE }

    { 1100525006;2;Field  ;
                CaptionML=ENU=Hours;
                SourceExpr=gvHours }

    { 1100528602;1;Group  ;
                CaptionML=ENU=Per Year;
                GroupType=Group }

    { 1100528610;2;Field  ;
                CaptionML=ENU=Maintenance Interval;
                SourceExpr=MaintenanceInterval }

    { 1100528609;2;Field  ;
                CaptionML=ENU=Labor;
                SourceExpr=LaborPerYear }

    { 1100528608;2;Field  ;
                CaptionML=ENU=Material;
                SourceExpr=MaterialPerYear }

    { 1100528607;2;Field  ;
                CaptionML=ENU=Subcontracting;
                SourceExpr=SubcontractingPerYear }

    { 1100528606;2;Field  ;
                CaptionML=ENU=Plant;
                SourceExpr=PlantPerYear }

    { 1100528605;2;Field  ;
                CaptionML=ENU=Sundry;
                SourceExpr=SundryPerYear }

    { 1100528604;2;Field  ;
                CaptionML=ENU=Total;
                SourceExpr=TotalPerYear;
                Style=Strong;
                StyleExpr=TRUE }

    { 1100528603;2;Field  ;
                CaptionML=ENU=Hours;
                SourceExpr=HoursPerYear }

  }
  CODE
  {
    VAR
      TmpMaintSchemeVersionLine@1100525007 : TEMPORARY Record 11071744;
      gvLabor@1100525006 : Decimal;
      gvHours@1100525005 : Decimal;
      gvTotal@1100525004 : Decimal;
      gvMaterial@1100525003 : Decimal;
      gvSubcontract@1100525002 : Decimal;
      gvPlant@1100525001 : Decimal;
      gvSundry@1100525000 : Decimal;
      LaborPerYear@1100528605 : Decimal;
      HoursPerYear@1100528606 : Decimal;
      MaterialPerYear@1100528607 : Decimal;
      SubcontractingPerYear@1100528608 : Decimal;
      PlantPerYear@1100528609 : Decimal;
      SundryPerYear@1100528610 : Decimal;
      TotalPerYear@1100528611 : Decimal;
      LevelLineType@1100528603 : Option;
      LevelTypeCode@1100528602 : Code[20];
      LevelBelongstoScheme@1100528601 : Code[20];
      LevelIndexDate@1100528600 : Date;
      ObjectQuantity@1100528604 : Integer;
      MaintenanceInterval@1100528612 : DateFormula;

    LOCAL PROCEDURE OnActivateForm@19002417();
    BEGIN
    END;

    PROCEDURE SetDataSet@1100528600(VAR ITmpMaintSchemeVersionLine@1100528600 : TEMPORARY Record 11071744;ILineType@1100528604 : 'Maintenance Scheme,Modification,Standard Object,Standard Object Deinstallation,Standard Object Installation,Object Installation,Object';ICode@1100528603 : Code[20];IMaintenanceSchemeCode@1100528602 : Code[20];IIndexDate@1100528601 : Date;IServiceContractNo@1100528609 : Code[20]);
    VAR
      ServiceObject@1100528605 : Record 11071691;
      MaintenanceScheme@1100528607 : Record 11071745;
      ContractObjectMaintenance@1100528608 : Record 11071692;
      MaintenanceManagement@1100528606 : Codeunit 11012829;
      MaintenanceSchemeCode@1100528610 : Code[20];
    BEGIN
      TmpMaintSchemeVersionLine.COPY(ITmpMaintSchemeVersionLine, TRUE);
      LevelLineType := ILineType;
      LevelTypeCode := ICode;
      LevelBelongstoScheme := IMaintenanceSchemeCode;
      LevelIndexDate := IIndexDate;
      ObjectQuantity := 1;
      IF ILineType = ILineType::Object THEN
        IF ServiceObject.GET(ICode) THEN
          ObjectQuantity := ServiceObject.Quantity;

      IF ILineType = ILineType::"Maintenance Scheme" THEN
        MaintenanceSchemeCode := ICode
      ELSE
        MaintenanceSchemeCode := IMaintenanceSchemeCode;
      IF MaintenanceScheme.GET(MaintenanceSchemeCode) THEN
        MaintenanceInterval := MaintenanceScheme."Maintenance Interval";
      IF ILineType = ILineType::Object THEN BEGIN
        IF IServiceContractNo = '' THEN
          IServiceContractNo := MaintenanceManagement.GetActualContractForObject(ICode, IIndexDate);
        IF ContractObjectMaintenance.GET(IServiceContractNo, ICode, IMaintenanceSchemeCode) THEN
          MaintenanceInterval := ContractObjectMaintenance."Maintenance Interval";
      END;
    END;

    PROCEDURE CalculateTotals@1100528601();
    VAR
      MaintenanceManagement@1100528602 : Codeunit 11012829;
      CancellationLevel@1100528600 : Option;
      FrequencyPerYear@1100528601 : Decimal;
    BEGIN
      gvLabor := 0;
      gvHours := 0;
      gvMaterial := 0;
      gvSubcontract := 0;
      gvPlant := 0;
      gvSundry := 0;
      gvTotal := 0;
      IF TmpMaintSchemeVersionLine.FINDSET THEN BEGIN
        REPEAT
          IF NOT TmpMaintSchemeVersionLine.IsCancelled(
            LevelLineType, LevelTypeCode, LevelBelongstoScheme, LevelIndexDate, LevelIndexDate, CancellationLevel)
          THEN BEGIN
            CASE TmpMaintSchemeVersionLine."Cost Type" OF
              TmpMaintSchemeVersionLine."Cost Type"::Labor:
                BEGIN
                  gvLabor += TmpMaintSchemeVersionLine."Cost per Service";
                  gvHours += TmpMaintSchemeVersionLine."Hours per Service";
                END;
              TmpMaintSchemeVersionLine."Cost Type"::Material:
                gvMaterial += TmpMaintSchemeVersionLine."Cost per Service";
              TmpMaintSchemeVersionLine."Cost Type"::Subcontracting:
                gvSubcontract += TmpMaintSchemeVersionLine."Cost per Service";
              TmpMaintSchemeVersionLine."Cost Type"::Plant:
                gvPlant += TmpMaintSchemeVersionLine."Cost per Service";
              TmpMaintSchemeVersionLine."Cost Type"::Sundry:
                gvSundry += TmpMaintSchemeVersionLine."Cost per Service";
            END;
            gvTotal += TmpMaintSchemeVersionLine."Cost per Service";
          END
        UNTIL TmpMaintSchemeVersionLine.NEXT = 0;
      END;

      gvLabor *= ObjectQuantity;
      gvHours *= ObjectQuantity;
      gvMaterial *= ObjectQuantity;
      gvSubcontract *= ObjectQuantity;
      gvPlant *= ObjectQuantity;
      gvSundry *= ObjectQuantity;
      gvTotal *= ObjectQuantity;

      IF FORMAT(MaintenanceInterval) <> '' THEN
        FrequencyPerYear := MaintenanceManagement.ConvPeriodToTimesPerYear(MaintenanceInterval)
      ELSE
        FrequencyPerYear := 0;
      LaborPerYear := gvLabor * FrequencyPerYear;
      HoursPerYear := gvHours * FrequencyPerYear;
      MaterialPerYear := gvMaterial * FrequencyPerYear;
      SubcontractingPerYear := gvSubcontract * FrequencyPerYear;
      PlantPerYear := gvPlant * FrequencyPerYear;
      SundryPerYear := gvSundry * FrequencyPerYear;
      TotalPerYear := gvTotal * FrequencyPerYear;
    END;

    BEGIN
    END.
  }
}

