OBJECT Page 11130486 Service Order FB
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Service Order;
    SourceTable=Table11012823;
    PageType=CardPart;
  }
  CONTROLS
  {
    { 1210190000;;Container;
                ContainerType=ContentArea }

    { 1210190001;1;Field  ;
                Lookup=No;
                CaptionML=ENU=Call No.;
                SourceExpr="Call No.";
                Editable=FALSE;
                OnAssistEdit=VAR
                               ServiceCall@1100528600 : Record 11012822;
                             BEGIN
                               ServiceCall.GET("Call No.");
                               ServiceCall.ActivateServCallCard;
                             END;
                              }

    { 1100525007;1;Field  ;
                Lookup=No;
                CaptionML=ENU=Glazing Service Call No.;
                SourceExpr="Glazing Service Call No.";
                Editable=FALSE;
                OnAssistEdit=VAR
                               GlazingCall@1100528600 : Record 11125777;
                             BEGIN
                               //C028730
                               GlazingCall.GET("Glazing Service Call No.");
                               GlazingCall.ActivateServCallCard;
                             END;
                              }

    { 1210190015;1;Field  ;
                CaptionML=ENU=Available Credit (Customer);
                DecimalPlaces=0:0;
                SourceExpr=GetCreditLimit;
                AutoFormatType=1;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              SalesInfoPaneMgt.LookupAvailCredit("Customer No.");
                            END;
                             }

    { 1100525000;1;Field  ;
                CaptionML=ENU=Collect SO Invoices By;
                SourceExpr=ServiceOrderInfoMgt.CollectSOInvoicesBy("Bill-to Customer No.") }

    { 1100525004;1;Field  ;
                CaptionML=ENU=Work Orders;
                SourceExpr=ServiceOrderInfoMgt.GetNoOfWorkOrders("No.");
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowSOWorkOrders("No.");
                            END;
                             }

    { 1100528600;1;Field  ;
                CaptionML=ENU=Resources;
                SourceExpr=ServiceOrderInfoMgt.NoOfResourcesByServiceOrder("No.") }

    { 1100409000;1;Field  ;
                CaptionML=ENU=History Service Orders;
                SourceExpr=STRSUBSTNO('%1', ServiceOrderInfoMgt.GetNoOfHistorySOs("Service Location No."));
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowHistorySOs("Service Location No.");
                            END;
                             }

    { 1100525001;1;Field  ;
                CaptionML=ENU=Related Service Orders (Contract);
                SourceExpr=STRSUBSTNO('%1', ServiceOrderInfoMgt.GetNoOfSOSameContract("Service Contract No."));
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowSOSameContract("Service Contract No.");
                            END;
                             }

    { 1100525002;1;Field  ;
                CaptionML=ENU=Related Service Orders (Location);
                SourceExpr=STRSUBSTNO('%1', ServiceOrderInfoMgt.GetNoOfSOSameLocation("Service Location No."));
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowSOSameLocation("Service Location No.");
                            END;
                             }

    { 1100525003;1;Field  ;
                CaptionML=ENU=Related Service Orders (Melding);
                SourceExpr=STRSUBSTNO('%1', ServiceOrderInfoMgt.GetNoOfSOSameCall("Call No."));
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowSOSameCall("Call No.");
                            END;
                             }

    { 1210190009;1;Field  ;
                CaptionML=ENU=Documents;
                SourceExpr=STRSUBSTNO('%1', GetInfo());
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ShowDocuments;
                            END;
                             }

    { 1210190007;1;Field  ;
                CaptionML=ENU=Try-outs;
                SourceExpr=STRSUBSTNO('%1', GetNoOfTryOuts());
                Editable=FALSE;
                OnDrillDown=VAR
                              TryoutSuccessor@1210190000 : Record 11012761;
                            BEGIN
                              TryoutSuccessor.ShowTryOut('', '', '', '', "No.", '', '', 1);
                            END;
                             }

    { 1210190006;1;Field  ;
                CaptionML=ENU=Try-out Quotes;
                SourceExpr=STRSUBSTNO('%1', GetNoOfTryOutQuotes());
                Editable=FALSE;
                OnDrillDown=VAR
                              TryoutSuccessor@1210190000 : Record 11012761;
                            BEGIN
                              TryoutSuccessor.ShowTryOut('', '', '', '', "No.", '', '', 2);
                            END;
                             }

    { 1100525005;1;Field  ;
                Name=AdviceOrderLineOpen;
                CaptionML=ENU=Open Advice Order Lines;
                SourceExpr=STRSUBSTNO('%1', ServiceOrderInfoMgt.GetNoOfAdviceOrderLines("No.",FALSE));
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowAdviceOrderLines("No.",FALSE);  //DP01015
                            END;
                             }

    { 1100525006;1;Field  ;
                Name=AdviceOrderLineProcessed;
                CaptionML=ENU=Processed Advice Order Lines;
                SourceExpr=STRSUBSTNO('%1', ServiceOrderInfoMgt.GetNoOfAdviceOrderLines("No.",TRUE));
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowAdviceOrderLines("No.", TRUE);  //DP01015
                            END;
                             }

    { 1210190004;1;Field  ;
                CaptionML=ENU=Open Item Journal Lines;
                SourceExpr=STRSUBSTNO('%1', ServiceOrderInfoMgt.GetNoOfOpenItemJournalLines("No."));
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowOpenItemJournalLines("No.");
                            END;
                             }

    { 1210190003;1;Field  ;
                CaptionML=ENU=Open Purchase Lines;
                SourceExpr=STRSUBSTNO('%1', ServiceOrderInfoMgt.GetNoOfOpenPurchaseLines("No."));
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowOpenPurchaseLines("No.");
                            END;
                             }

    { 1100409002;1;Field  ;
                CaptionML=ENU=Plant Location;
                SourceExpr=STRSUBSTNO('%1', ServiceOrderInfoMgt.GetNoOfPlantLocations("No."));
                Editable=false;
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowPlantCompanies("No.");
                            END;
                             }

  }
  CODE
  {
    VAR
      SalesInfoPaneMgt@1210190000 : Codeunit 7171;
      ServiceOrderInfoMgt@1210190001 : Codeunit 11012841;

    PROCEDURE StartServOrders@1100485002(lvAction@1100485000 : Integer;lvCount@1100485001 : Boolean) : Integer;
    VAR
      lvServOrderRec@1100485002 : Record 11012823;
    BEGIN
      lvServOrderRec.SETFILTER("No.", '<>%1', "No.");
      CASE lvAction OF
        0:
          BEGIN
            lvServOrderRec.SETCURRENTKEY("Service Contract No.");
            lvServOrderRec.SETRANGE("Service Contract No.", "Service Contract No.");
            IF (lvCount = TRUE) AND ("Service Contract No." = '') THEN EXIT(0);
          END;
        1:
          BEGIN
            lvServOrderRec.SETCURRENTKEY("Service Location No.");
            lvServOrderRec.SETRANGE("Service Location No.", "Service Location No.");
            IF (lvCount = TRUE) AND ("Service Location No." = '') THEN EXIT(0);
          END;
        2:
          BEGIN
            lvServOrderRec.SETCURRENTKEY("Call No.");
            lvServOrderRec.SETRANGE("Call No.", "Call No.");
            lvServOrderRec.SETRANGE("Source Type", lvServOrderRec."Source Type"::Call);
            IF (lvCount = TRUE) AND ("Call No." = '') THEN EXIT(0);
          END;
        3:
          BEGIN
            IF NOT lvCount THEN BEGIN
              IF "Base Service Order No." = '' THEN
                EXIT(0);
              lvServOrderRec.SETRANGE("No.", "Base Service Order No.");
              PAGE.RUNMODAL(PAGE::"Base Service Order", lvServOrderRec);
              EXIT(0);
            END ELSE BEGIN
              lvServOrderRec.SETCURRENTKEY("Base Service Order No.");
              lvServOrderRec.SETRANGE("Base Service Order No.", "Base Service Order No.");
              IF ("Base Service Order No."= '') THEN EXIT(0);
              EXIT(lvServOrderRec.COUNT);
            END;
          END;
      END;

      IF lvCount = FALSE THEN BEGIN
        PAGE.RUNMODAL(0, lvServOrderRec);
      END ELSE BEGIN
        EXIT(lvServOrderRec.COUNT);
      END;
    END;

    PROCEDURE GetNoOfServOrders@1100485001(lvAction@1100485001 : Integer) NumServOrder : Integer;
    BEGIN
      NumServOrder := StartServOrders(lvAction, TRUE);
      EXIT(NumServOrder);
    END;

    PROCEDURE GetInfo@1100525002() : Integer;
    VAR
      RecRef@1100525000 : RecordRef;
      DocumentLinkMgt@1100525001 : Codeunit 11012401;
    BEGIN
      //C026176.sn
      IF "No." = '' THEN
        EXIT(0);
      //C026176.en

      RecRef.GETTABLE(Rec);

      EXIT(DocumentLinkMgt.GetInfo(RecRef))
    END;

    PROCEDURE ShowDocuments@1100525000();
    VAR
      RecRef@1100525000 : RecordRef;
      DocumentFilters@1100525001 : Codeunit 11012432;
    BEGIN
      RecRef.GETTABLE(Rec);
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, "Global Dimension 1 Code", FALSE, TRUE);
    END;

    PROCEDURE GetNoOfTryOuts@1100528600() : Integer;
    VAR
      TryoutSuccessor@1210190000 : Record 11012761;
      TryoutCode@1100528600 : Code[20];
    BEGIN
      //C026176.sn
      IF "No." = '' THEN
        EXIT(0);
      //C026176.en

      IF TryoutSuccessor.READPERMISSION THEN
        EXIT(TryoutSuccessor.GetNoOfTryOuts('', '', '', '', "No.", '', '', 1, TryoutCode));
    END;

    PROCEDURE GetNoOfTryOutQuotes@1100528602() : Integer;
    VAR
      TryoutSuccessor@1210190000 : Record 11012761;
      TryoutCode@1100528600 : Code[20];
    BEGIN
      //C026176.sn
      IF "No." = '' THEN
        EXIT(0);
      //C026176.en


      IF TryoutSuccessor.READPERMISSION THEN
        EXIT(TryoutSuccessor.GetNoOfTryOuts('', '', '', '', "No.", '', '', 2, TryoutCode));
    END;

    PROCEDURE GetCreditLimit@1100525001() : Decimal;
    VAR
      Customer@1100525000 : Record 18;
    BEGIN
      //C026176.sn
      IF "Bill-to Customer No." = '' THEN
        EXIT(0);
      //C026176.en

      IF NOT Customer.GET("Bill-to Customer No.") THEN
        EXIT(0);

      EXIT(Customer.CalcAvailableCredit);
    END;

    BEGIN
    END.
  }
}

