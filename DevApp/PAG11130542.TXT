OBJECT Page 11130542 Service-Order List (General)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Service Order List (General);
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11012823;
    PageType=List;
    CardPageID=Service Order (General);
    PromotedActionCategoriesML=ENU=New,Process,Report,FLS VisiTour;
    OnOpenPage=VAR
                 lServOrderRec@1100525000 : Record 11012823;
                 ServSetup@1100525001 : Record 11012800;
               BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01

                 //Disable Menubutton if called from other company
                 IF FIND('=<>') THEN;
                 lServOrderRec.COPY(Rec);
                 IF NOT lServOrderRec.FIND('=<>') THEN
                   CLEAR(lServOrderRec);

                 ServOrderButtonEnabled := "No." + Description = lServOrderRec."No."+ lServOrderRec.Description;
                 //CurrPage.ServOrderButton.ENABLED("No." + Description = lServOrderRec."No."+ lServOrderRec.Description);

                 ServSetup.GET;
                 //DP00503
                 FunctionButtonEnabled := NOT gShowOnlyForm;
                 IF ServOrderButtonEnabled THEN
                   ServOrderButtonEnabled := NOT gShowOnlyForm;
                 PrintButtonEnabled := NOT gShowOnlyForm;
                 //DP00503

                 IF GETFILTER(Status) = '' THEN //C022587
                   ShowTable;
                 FLSButtonsVisible := ServSetup."FLS VisiTour Active";
               END;

    OnAfterGetRecord=BEGIN
                       ServOrderExtensionRec.GetServOrderExtension("No.");  //DP00106

                       CALCFIELDS("Actual Reference Point", "Actual Reference Point Desc"); //mg, 09-01-13: C003472

                       IF ("Plant Type" <> '')  AND ("Plant Number" <> '') THEN
                         GetMeterReading(MeterReading,MeterReadingType,MeterReadingUnitOfMeasure)
                       ELSE BEGIN
                         MeterReading := 0;
                         MeterReadingType := '';
                         MeterReadingUnitOfMeasure := '';
                       END;

                       //C026664.sn
                       ProblemText := ServiceOrderInfoMgt.GetFirstLineProblemText("No.");
                       InternalText := ServiceOrderInfoMgt.GetFirstLineInternalText("No.");
                       SolutionText := ServiceOrderInfoMgt.GetFirstLineSolutionText("No.");
                       //C026664.en
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1210190030;1 ;ActionGroup;
                      Name=ServOrderButton;
                      CaptionML=ENU=&Service Order;
                      Enabled=ServOrderButtonEnabled }
      { 1100525032;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Card;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=EditLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ActivateServOrderCard;  //db, 15-01-16
                               END;
                                }
      { 1100525011;2 ;Action    ;
                      ShortCutKey=Ctrl+Alt+V;
                      CaptionML=ENU=Vessel Card;
                      Image=EditLines;
                      OnAction=BEGIN
                                 //kzwerver, 140212, n, #C011037
                                 ActivateVesselServOrderCard;
                               END;
                                }
      { 1210190046;2 ;Action    ;
                      CaptionML=ENU=Service Orders by Location;
                      RunObject=Page 11012830;
                      RunPageView=SORTING(Service Location No.);
                      RunPageLink=Service Location No.=FIELD(Service Location No.);
                      Image=FilterLines }
      { 1210190047;2 ;Action    ;
                      CaptionML=ENU=Service Orders by Contract;
                      RunObject=Page 11012830;
                      RunPageView=SORTING(Service Contract No.);
                      RunPageLink=Service Contract No.=FIELD(Service Contract No.);
                      Image=FilterLines }
      { 1210190048;2 ;Action    ;
                      CaptionML=ENU=Service Orders by Customer;
                      RunObject=Page 11012830;
                      RunPageView=SORTING(Customer No.);
                      RunPageLink=Customer No.=FIELD(Customer No.);
                      Image=FilterLines }
      { 1100528604;1 ;Action    ;
                      CaptionML=ENU=Service Location Cockpit;
                      RunObject=Page 11126459;
                      RunPageLink=No.=FIELD(Service Location No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=EditLines;
                      PromotedCategory=Process }
      { 1100525001;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525005;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Enabled=FunctionButtonEnabled }
      { 1100409018;2 ;ActionGroup;
                      CaptionML=ENU=FLS VisiTour;
                      Visible=FLSButtonsVisible;
                      Image=Planning }
      { 1100528301;3 ;Action    ;
                      CaptionML=ENU=Create Order;
                      Promoted=Yes;
                      Visible=FLSButtonsVisible;
                      PromotedIsBig=Yes;
                      Image=ServiceLines;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CommunicateOrderToFLS(0);
                               END;
                                }
      { 1100409017;3 ;Action    ;
                      CaptionML=ENU=Cancel Order;
                      Promoted=Yes;
                      Visible=FLSButtonsVisible;
                      PromotedIsBig=Yes;
                      Image=CancelAllLines;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CommunicateOrderToFLS(4); //Cancel (conditioonally)
                               END;
                                }
      { 1100409015;3 ;Action    ;
                      CaptionML=ENU=(Re)Plan Order;
                      Promoted=Yes;
                      Visible=FLSButtonsVisible;
                      PromotedIsBig=Yes;
                      Image=Replan;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CommunicateOrderToFLS(1);
                               END;
                                }
      { 1100409016;3 ;Action    ;
                      CaptionML=ENU=Update Service Order;
                      Visible=FLSButtonsVisible;
                      Image=UpdateXML;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CommunicateOrderFromFLS;
                               END;
                                }
      { 1100528603;2 ;Action    ;
                      CaptionML=ENU=(Re)plan;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Replan;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1100528600 : Record 11012823;
                                 ReplanServiceOrder@1100528601 : Page 11126465;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ServiceOrder);
                                 ReplanServiceOrder.SetReplanData(ServiceOrder, TODAY, 1, 0, FALSE, FALSE, TRUE, TRUE);
                                 ReplanServiceOrder.RUNMODAL;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100525003;2 ;Action    ;
                      CaptionML=ENU=&Print;
                      Image=Print;
                      OnAction=VAR
                                 DocumentPrint@1100525000 : Codeunit 229;
                               BEGIN
                                 DocumentPrint.PrintServOrder(Rec);
                               END;
                                }
      { 1100525007;2 ;Action    ;
                      ShortCutKey=Ctrl+T;
                      CaptionML=ENU=Print Texts;
                      Image=Text;
                      OnAction=VAR
                                 DocumentPrint@1100525000 : Codeunit 229;
                               BEGIN
                                 DocumentPrint.PrintServOrderTexts(Rec);
                               END;
                                }
      { 1100528602;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Send Appointment Letter;
                      Promoted=Yes;
                      Image=SendApprovalRequest;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1100528600 : Record 11012823;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ServiceOrder);
                                 IF ServiceOrder.ISEMPTY THEN
                                   ERROR(Text001);
                                 ServiceOrder.SETCURRENTKEY("No.");
                                 SendAppointment(ServiceOrder);
                               END;
                                }
      { 1100525019;2 ;Action    ;
                      CaptionML=ENU=Planned;
                      Image=Planning;
                      OnAction=VAR
                                 ServiceOrder@1100525000 : Record 11012823;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ServiceOrder);
                                 IF ServiceOrder.ISEMPTY THEN
                                   ERROR(Text001);
                                 ServiceOrder.SETCURRENTKEY("No.");
                                 IF ServiceOrder.FINDSET THEN
                                   REPEAT
                                     ServiceOrder.UpdateToNextRefPoint(0); // Planned
                                   UNTIL ServiceOrder.NEXT = 0;
                               END;
                                }
      { 1100525015;2 ;Action    ;
                      CaptionML=ENU=Reviewed;
                      Image=ReviewWorksheet;
                      OnAction=VAR
                                 ServiceOrder@1100525000 : Record 11012823;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ServiceOrder);
                                 IF ServiceOrder.ISEMPTY THEN
                                   ERROR(Text001);
                                 ServiceOrder.SETCURRENTKEY("No.");
                                 IF ServiceOrder.FINDSET THEN
                                   REPEAT
                                     ServiceOrder.UpdateToNextRefPoint(1); // Reviewed
                                   UNTIL ServiceOrder.NEXT = 0;
                               END;
                                }
      { 1100525017;2 ;Action    ;
                      CaptionML=ENU=Not Invoice;
                      Image=CancelAllLines;
                      OnAction=VAR
                                 ServiceOrder@1100525000 : Record 11012823;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ServiceOrder);
                                 IF ServiceOrder.ISEMPTY THEN
                                   ERROR(Text001);
                                 ServiceOrder.SETCURRENTKEY("No.");
                                 IF ServiceOrder.FINDSET THEN
                                   REPEAT
                                     ServiceOrder.UpdateToNextRefPoint(3); // Not Invoice
                                   UNTIL ServiceOrder.NEXT = 0;
                               END;
                                }
      { 1100525013;2 ;Action    ;
                      CaptionML=ENU=Make Chargeable;
                      Image=CreateFinanceChargememo;
                      OnAction=VAR
                                 ServiceOrder@1100525000 : Record 11012823;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ServiceOrder);
                                 IF ServiceOrder.ISEMPTY THEN
                                   ERROR(Text001);
                                 ServiceOrder.SETCURRENTKEY("No.");
                                 IF ServiceOrder.FINDSET THEN
                                   REPEAT
                                     ServiceOrder.UpdateToNextRefPoint(2); // Make Chargeable
                                   UNTIL ServiceOrder.NEXT = 0;
                               END;
                                }
      { 1100525009;2 ;Action    ;
                      CaptionML=ENU=Generate Invoice;
                      Image=Invoice;
                      OnAction=VAR
                                 ServiceOrder@1100525000 : Record 11012823;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ServiceOrder);
                                 IF ServiceOrder.ISEMPTY THEN
                                   ERROR(Text001);
                                 ServiceOrder.CreateSalesInvoiceViaCollLists;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100409021;2 ;Action    ;
                      CaptionML=ENU=Filter Open Service Orders;
                      Image=FilterLines;
                      OnAction=BEGIN
                                 ShowOnlyOpen := NOT ShowOnlyOpen;
                                 ShowTable;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100409020;1;Group  ;
                GroupType=Group }

    { 1100409019;2;Field  ;
                CaptionML=ENU=Only Open Orders;
                SourceExpr=ShowOnlyOpen;
                OnValidate=BEGIN
                             ShowTable;
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 1210190000;1;Group  ;
                Editable=FALSE;
                GroupType=Repeater }

    { 1210190001;2;Field  ;
                SourceExpr="No." }

    { 1210190003;2;Field  ;
                SourceExpr=Description }

    { 1100528800;2;Field  ;
                SourceExpr="Description 2";
                Importance=Additional }

    { 1100525031;2;Field  ;
                CaptionML=ENU=Problem Text;
                SourceExpr=ProblemText;
                Visible=FALSE;
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowServiceTextLines("No.", TextType::Problem);  //C026664
                              CurrPage.UPDATE(FALSE);
                            END;
                             }

    { 1100525030;2;Field  ;
                CaptionML=ENU=Internal Text;
                SourceExpr=InternalText;
                Visible=FALSE;
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowServiceTextLines("No.", TextType::Internal);  //C026664
                              CurrPage.UPDATE(FALSE);
                            END;
                             }

    { 1100525029;2;Field  ;
                CaptionML=ENU=Solution Text;
                SourceExpr=SolutionText;
                Visible=FALSE;
                OnDrillDown=BEGIN
                              ServiceOrderInfoMgt.ShowServiceTextLines("No.", TextType::Resolve);  //C026664
                              CurrPage.UPDATE(FALSE);
                            END;
                             }

    { 1210190005;2;Field  ;
                SourceExpr="Customer No." }

    { 1100409003;2;Field  ;
                SourceExpr="Customer Name" }

    { 1210190007;2;Field  ;
                SourceExpr=Name }

    { 1100528909;2;Field  ;
                SourceExpr="Name 2" }

    { 1210190009;2;Field  ;
                SourceExpr=Address }

    { 1100525014;2;Field  ;
                SourceExpr="Address 2";
                Visible=FALSE }

    { 1210190061;2;Field  ;
                SourceExpr="Post Code" }

    { 1210190011;2;Field  ;
                SourceExpr=City }

    { 1210190069;2;Field  ;
                SourceExpr="Your Reference";
                Visible=FALSE }

    { 1100485042;2;Field  ;
                SourceExpr="Order No. Customer";
                Visible=FALSE }

    { 1210190036;2;Field  ;
                SourceExpr="Commision Date";
                Visible=FALSE }

    { 1100485018;2;Field  ;
                SourceExpr="Contact Name";
                Visible=FALSE }

    { 1100485020;2;Field  ;
                SourceExpr="Phone No.";
                Visible=FALSE }

    { 1100485022;2;Field  ;
                SourceExpr="Phone No. 2";
                Visible=FALSE }

    { 1100528608;2;Field  ;
                SourceExpr="Mobile Phone No.";
                Visible=FALSE }

    { 1210190017;2;Field  ;
                SourceExpr="Service Contract No." }

    { 1210190049;2;Field  ;
                SourceExpr="Service Contract Description";
                Visible=FALSE }

    { 1210190019;2;Field  ;
                SourceExpr="Service Location No." }

    { 1100525012;2;Field  ;
                SourceExpr="Location Customer";
                Visible=FALSE }

    { 1210190051;2;Field  ;
                SourceExpr="Service Location Description";
                Visible=FALSE }

    { 1100525028;2;Field  ;
                SourceExpr="Customer Feature" }

    { 1100485036;2;Field  ;
                SourceExpr="Territory Code" }

    { 1210190063;2;Field  ;
                SourceExpr="Global Dimension 1 Code";
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                           END;
                            }

    { 1100485014;2;Field  ;
                SourceExpr="Department Code (Other)";
                Visible=FALSE }

    { 1210190021;2;Field  ;
                SourceExpr="Service Type" }

    { 1100485016;2;Field  ;
                SourceExpr="Service Type (Other)";
                Visible=FALSE }

    { 1210190065;2;Field  ;
                SourceExpr="Source Type";
                Visible=FALSE }

    { 1100485032;2;Field  ;
                SourceExpr="Call No." }

    { 1100485046;2;Field  ;
                CaptionML=ENU=Next Service Order No.;
                SourceExpr=ShowNextOrder(0);
                Visible=FALSE;
                OnLookup=BEGIN
                           ShowNextOrder(1);
                         END;
                          }

    { 1100485044;2;Field  ;
                SourceExpr="Previous Service Order No.";
                Visible=FALSE }

    { 1100525010;2;Field  ;
                SourceExpr="Base Service Order No.";
                Visible=FALSE }

    { 1210190071;2;Field  ;
                SourceExpr=Problem }

    { 1100528605;2;Field  ;
                SourceExpr="Description Problem";
                Visible=FALSE }

    { 1210190073;2;Field  ;
                SourceExpr=Cause }

    { 1100528606;2;Field  ;
                SourceExpr="Description Cause";
                Visible=FALSE }

    { 1210190075;2;Field  ;
                SourceExpr=Solution }

    { 1100528607;2;Field  ;
                SourceExpr="Description Solution";
                Visible=FALSE }

    { 1210190042;2;Field  ;
                SourceExpr="Order Kind" }

    { 1210190044;2;Field  ;
                SourceExpr="Order Type" }

    { 1100485040;2;Field  ;
                SourceExpr=Discipline }

    { 1100485052;2;Field  ;
                SourceExpr="Trade Speciality" }

    { 1210190023;2;Field  ;
                SourceExpr=Status }

    { 1210190025;2;Field  ;
                SourceExpr=Priority }

    { 1210190013;2;Field  ;
                SourceExpr="Order Date" }

    { 1210190015;2;Field  ;
                SourceExpr="Starting Date" }

    { 1100525026;2;Field  ;
                SourceExpr="Starting Time";
                Visible=FALSE }

    { 1100409002;2;Field  ;
                SourceExpr="Ending Date" }

    { 1100525027;2;Field  ;
                SourceExpr="Ending Time";
                Visible=FALSE }

    { 1100409000;2;Field  ;
                SourceExpr="First Possible Starting Date";
                Visible=false }

    { 1100525035;2;Field  ;
                SourceExpr="First Possible Starting Time" }

    { 1100409001;2;Field  ;
                SourceExpr="Last Possible Ending Date";
                Visible=false }

    { 1100525036;2;Field  ;
                SourceExpr="Last Possible Ending Time" }

    { 1100409004;2;Field  ;
                SourceExpr="Closing Date";
                Visible=false }

    { 1100409005;2;Field  ;
                CaptionML=ENU=Expected Starting Date;
                SourceExpr=ServOrderExtensionRec."Expected Starting Date";
                Visible=false;
                Editable=false }

    { 1100409006;2;Field  ;
                CaptionML=ENU=Expected Ending Date;
                SourceExpr=ServOrderExtensionRec."Expected Ending Date";
                Visible=false;
                Editable=false }

    { 1100409007;2;Field  ;
                CaptionML=ENU=Expected Dates Modified on;
                SourceExpr=ServOrderExtensionRec."Expected Dates Modified on";
                Visible=false;
                Editable=false }

    { 1100485060;2;Field  ;
                SourceExpr="Actual Reference Point";
                Visible=FALSE }

    { 1100485062;2;Field  ;
                SourceExpr="Actual Reference Point Desc";
                Visible=FALSE }

    { 1100485028;2;Field  ;
                SourceExpr="Next Deadline";
                Visible=FALSE }

    { 1100485030;2;Field  ;
                SourceExpr="Next Reference Period";
                Visible=FALSE }

    { 1100525022;2;Field  ;
                SourceExpr="Next Reference Period Desc";
                Visible=FALSE }

    { 1100525008;2;Field  ;
                SourceExpr="Order Manager" }

    { 1100525025;2;Field  ;
                SourceExpr="Order Manager Name";
                Visible=FALSE }

    { 1210190032;2;Field  ;
                SourceExpr="Assigned to" }

    { 1100528700;2;Field  ;
                SourceExpr="Name Assigned To";
                Visible=FALSE }

    { 1100485024;2;Field  ;
                SourceExpr="Employee No." }

    { 1100528702;2;Field  ;
                SourceExpr="Employee Name";
                Visible=FALSE }

    { 1100485026;2;Field  ;
                SourceExpr=Subcontractor }

    { 1100525034;2;Field  ;
                SourceExpr="Subcontractor Name";
                Visible=FALSE }

    { 1210190038;2;Field  ;
                SourceExpr="Remote Control";
                Visible=FALSE }

    { 1100485048;2;Field  ;
                SourceExpr="On Hold";
                Visible=FALSE }

    { 1210190034;2;Field  ;
                SourceExpr="Project No.";
                Visible=FALSE }

    { 1210190077;2;Field  ;
                CaptionML=ENU=Try-Out No.;
                SourceExpr=GetTryOut(1);
                Visible=FALSE;
                OnLookup=BEGIN
                           ShowTryOut(1);
                         END;
                          }

    { 1210190079;2;Field  ;
                CaptionML=ENU=Try-Out Quote;
                SourceExpr=GetTryOut(2);
                Visible=FALSE;
                OnLookup=BEGIN
                           ShowTryOut(2);
                         END;
                          }

    { 1100485038;2;Field  ;
                SourceExpr="Estimate No.";
                Visible=FALSE }

    { 1100525000;2;Field  ;
                SourceExpr="Estimate Description";
                Visible=FALSE }

    { 1100525002;2;Field  ;
                SourceExpr="Sub-Estimate No.";
                Visible=FALSE }

    { 1100525004;2;Field  ;
                SourceExpr="Sub-Estimate Description";
                Visible=FALSE }

    { 1100409013;2;Field  ;
                SourceExpr="Change Request No.";
                Visible=false }

    { 1100409014;2;Field  ;
                SourceExpr="Change Request Description";
                Visible=false }

    { 1100525006;2;Field  ;
                SourceExpr="Created by";
                Visible=FALSE }

    { 1210190040;2;Field  ;
                SourceExpr="No. Printed";
                Visible=FALSE }

    { 1100485054;2;Field  ;
                SourceExpr="Additional Cost" }

    { 1100485034;2;Field  ;
                SourceExpr="Postpone Invoicing" }

    { 1100525023;2;Field  ;
                SourceExpr="Limit Budget Total";
                Visible=FALSE }

    { 1100525024;2;Field  ;
                SourceExpr="Invoice Base Amount Total";
                Visible=FALSE }

    { 1210190067;2;Field  ;
                SourceExpr="Order Amount (LCY)" }

    { 1210190053;2;Field  ;
                SourceExpr="Invoice Price";
                OnDrillDown=VAR
                              CostPlusRec@1210190000 : Record 11012825;
                            BEGIN
                              CostPlusRec.RESET;
                              CostPlusRec.SETRANGE("Service Order No.", "No.");
                              CostPlusRec.SETRANGE(Invoiced, FALSE);
                              PAGE.RUN(PAGE::"Service Order Cost Plus SF2", CostPlusRec);
                            END;
                             }

    { 1210190055;2;Field  ;
                SourceExpr="Invoiced Price";
                Visible=FALSE }

    { 1100528911;2;Field  ;
                SourceExpr="Charged on Project";
                Visible=FALSE }

    { 1210190057;2;Field  ;
                SourceExpr="Invoice in Process";
                Visible=FALSE }

    { 1210190059;2;Field  ;
                SourceExpr="Credit Memo in Process";
                Visible=FALSE }

    { 1100525016;2;Field  ;
                SourceExpr="Serv.Order WIP not processed";
                Visible=FALSE }

    { 1100525018;2;Field  ;
                SourceExpr="Service Entry Cost (WIP)";
                Visible=FALSE }

    { 1100525020;2;Field  ;
                SourceExpr="Service Entry Revenue (WIP)";
                Visible=FALSE }

    { 1100528600;2;Field  ;
                SourceExpr="Master Project" }

    { 1100528601;2;Field  ;
                SourceExpr="Master Element" }

    { 1100409008;2;Field  ;
                SourceExpr="Bill-to Name" }

    { 1100528801;2;Field  ;
                SourceExpr="Plant Location" }

    { 1100528802;2;Field  ;
                SourceExpr="Plant Type" }

    { 1100528803;2;Field  ;
                SourceExpr="Plant Number" }

    { 1100528804;2;Field  ;
                SourceExpr="Plant Location Description" }

    { 1100528805;2;Field  ;
                SourceExpr="Plant Type Description" }

    { 1100528806;2;Field  ;
                SourceExpr="Plant Number Description" }

    { 1100409011;2;Field  ;
                SourceExpr="Next Service Orders Exist" }

    { 1100409012;2;Field  ;
                SourceExpr="Service Package" }

    { 1100528809;2;Field  ;
                Name=Meter Reading Type;
                CaptionML=ENU=Meter Reading Type;
                SourceExpr=MeterReadingType;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528808;2;Field  ;
                Name=[ Meter Reading];
                CaptionML=ENU=Meter Reading;
                SourceExpr=MeterReading;
                Visible=FALSE }

    { 1100528807;2;Field  ;
                Name=Meter Reading Unit of Measure;
                CaptionML=ENU=Meter Reading Unit of Measure;
                SourceExpr=MeterReadingUnitOfMeasure;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528300;2;Field  ;
                SourceExpr="FLS VisiTour ID" }

    { 1100525021;2;Field  ;
                SourceExpr="Debrief Comment";
                Visible=FALSE }

    { 1100525033;2;Field  ;
                SourceExpr="Cause of Exclusion Code";
                Visible=FALSE }

    { 1100528610;2;Field  ;
                SourceExpr="Location Contact Debrief" }

    { 1100528611;2;Field  ;
                SourceExpr="Limit Budget Exceedance" }

    { 1100528612;2;Field  ;
                SourceExpr=Origin }

    { 1100409010;;Container;
                ContainerType=FactBoxArea }

    { 1100409009;1;Part   ;
                SubPageLink=No.=FIELD(No.),
                            Department Filter=FIELD(Department Filter);
                PagePartID=Page11130483;
                PartType=Page }

    { 1100528609;1;Part   ;
                CaptionML=ENU=Totals;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page11130492;
                PartType=Page }

    { 1100528613;1;Part   ;
                CaptionML=ENU=Limit Budget Exceedance;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page11126754;
                Visible=FALSE;
                PartType=Page }

  }
  CODE
  {
    VAR
      DepAuthRec@1100000997 : Record 11012466;
      DPA_IsHardFilter@1100000999 : Boolean;
      ServOrderButtonEnabled@1100525000 : Boolean INDATASET;
      ServOrderExtensionRec@1100528900 : Record 11071727;
      Text001@1100525001 : TextConst 'ENU=First select lines.';
      gShowOnlyForm@1100525005 : Boolean;
      FunctionButtonEnabled@1100525004 : Boolean INDATASET;
      PrintButtonEnabled@1100525003 : Boolean INDATASET;
      ShowOnlyOpen@1100409000 : Boolean;
      MeterReadingType@1100528802 : Code[10];
      MeterReading@1100528801 : Decimal;
      MeterReadingUnitOfMeasure@1100528800 : Code[10];
      FLSButtonsVisible@1100528000 : Boolean INDATASET;
      ProblemText@1100525009 : Text[80];
      InternalText@1100525008 : Text[80];
      SolutionText@1100525007 : Text[80];
      TextType@1100525006 : 'Problem,Internal,Resolve,Report Procedure,Contract Terms';
      ServiceOrderInfoMgt@1100525002 : Codeunit 11012841;

    PROCEDURE SetRecordSet@1100528600(VAR IServiceOrder@1100528600 : Record 11012823);
    BEGIN
      Rec.COPY(IServiceOrder);
    END;

    PROCEDURE GetRecordSet@1100528601(VAR ServiceOrder@1100528600 : Record 11012823);
    BEGIN
      CurrPage.SETSELECTIONFILTER(ServiceOrder);
    END;

    PROCEDURE SetShowOnlyForm@1100525001(IShowOnlyForm@1100525000 : Boolean);
    BEGIN
      //DP00503
      gShowOnlyForm := IShowOnlyForm;
    END;

    PROCEDURE ShowTable@1100485000();
    BEGIN
      IF ShowOnlyOpen THEN
        SETFILTER(Status, '<%1',Status::Finished)
      ELSE
        SETRANGE(Status);
    END;

    BEGIN
    {
      db, 20-04-11: field NextOrder replaced by function ShowNextOrder; default not visible
    }
    END.
  }
}

