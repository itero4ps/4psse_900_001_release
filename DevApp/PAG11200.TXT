OBJECT Page 11200 Inward Registration
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVSE7.10;
  }
  PROPERTIES
  {
    CaptionML=ENU=Inward Registration;
    SourceTable=Table11200;
    SourceTableView=WHERE(Status=FILTER(<Reversed));
    PageType=Document;
    OnInsertRecord=BEGIN
                     FILTERGROUP(2);
                     PurchDocType := GETRANGEMIN("Document Type");
                     PurchDocNo := GETFILTER("Document No.");
                     FILTERGROUP(0);
                     "Document Type" := PurchDocType;
                     "Document No." := PurchDocNo;
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1070030 ;1   ;ActionGroup;
                      CaptionML=ENU=&Inward Registration;
                      Image=InwardEntry }
      { 1070053 ;2   ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=ENU=Statistics;
                      RunObject=Page 11203;
                      RunPageLink=No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process }
      { 1070013 ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Ledger E&ntries;
                      RunObject=Page 11205;
                      RunPageView=SORTING(Document No.,Entry No.);
                      RunPageLink=Document No.=FIELD(No.) }
      { 1070002 ;2   ;Action    ;
                      Name=Dimensions;
                      CaptionML=ENU=Dimensions;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1070019 ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 1070020 ;2   ;Action    ;
                      Name=SuggestLines;
                      CaptionML=ENU=Suggest Lines;
                      Image=SuggestLines;
                      OnAction=VAR
                                 NewLineNo@1070001 : Integer;
                               BEGIN
                                 IF Status = Status::Posted THEN
                                   ERROR(Text001);

                                 InwRegLines.SETRANGE("Document No.","No.");
                                 IF InwRegLines.FIND('-') THEN BEGIN
                                   IF NOT CONFIRM(Text002,TRUE,"No.") THEN
                                     EXIT;
                                   InwRegLines.DELETEALL(TRUE);
                                 END;
                                 PurchSetup.FIND('-');

                                 PurchOrderLine.SETRANGE("Document Type","Document Type");
                                 PurchOrderLine.SETRANGE("Document No.","Document No.");

                                 IF PurchOrderLine.FIND('-') THEN BEGIN
                                   NewLineNo := 0;

                                   REPEAT BEGIN
                                       InwRegLines.SETCURRENTKEY("Document No.","VAT Prod. Posting Group","Gen. Prod. Posting Group");
                                       InwRegLines.SETRANGE("Document No.","No.");
                                       InwRegLines.SETRANGE("VAT Prod. Posting Group",PurchOrderLine."VAT Prod. Posting Group");
                                       InwRegLines.SETRANGE("Gen. Prod. Posting Group",PurchOrderLine."Gen. Prod. Posting Group");

                                       IF (NOT PurchSetup."Accumulated Inward Reg. Lines") OR (NOT InwRegLines.FIND('-')) THEN BEGIN
                                         NewLineNo := NewLineNo + 10000;
                                         InwRegLines.INIT;
                                         InwRegLines."Document No." := "No.";
                                         InwRegLines."Line No." := NewLineNo;
                                         IF PurchSetup."Accumulated Inward Reg. Lines" THEN
                                           InwRegLines.INSERT(TRUE) // InwHead dimensions to the new line
                                         ELSE
                                           IF PurchSetup."Copy Dimensions to Inward Reg." THEN
                                             InwRegLines.INSERT // Dimensions is copied later from purchaseline
                                           ELSE
                                             InwRegLines.INSERT(TRUE); // InwHead dimensions to the new line
                                         InwRegLines.GET(InwRegLines."Document No.",InwRegLines."Line No.");
                                       END;

                                       PurchHeader.SETRANGE("Document Type","Document Type");
                                       PurchHeader.SETRANGE("No.","Document No.");
                                       PurchHeader.FIND('-');

                                       IF PurchHeader."Prices Including VAT" THEN BEGIN
                                         PurchLineAmount := PurchOrderLine."Line Amount" / (1 + (PurchOrderLine."VAT %" / 100));
                                         PurchLineAmount := ROUND(PurchLineAmount,Currency."Amount Rounding Precision" );
                                       END ELSE
                                         PurchLineAmount := PurchOrderLine."Line Amount";

                                       InwRegLines."Gen. Prod. Posting Group" := PurchOrderLine."Gen. Prod. Posting Group";
                                       InwRegLines.VALIDATE("VAT Prod. Posting Group",PurchOrderLine."VAT Prod. Posting Group");
                                       InwRegLines.VALIDATE(Amount,InwRegLines.Amount + PurchLineAmount);
                                       // 040126 FF
                                       InwRegLines."Dimension Set ID" := PurchOrderLine."Dimension Set ID";
                                       InwRegLines."Shortcut Dimension 1 Code" := PurchOrderLine."Shortcut Dimension 1 Code";
                                       InwRegLines."Shortcut Dimension 2 Code" := PurchOrderLine."Shortcut Dimension 2 Code";

                                       InwRegLines.MODIFY;
                                     END;
                                   UNTIL PurchOrderLine.NEXT = 0;
                                 END;
                               END;
                                }
      { 1070015 ;1   ;ActionGroup;
                      CaptionML=ENU=P&osting;
                      Image=Post }
      { 1070022 ;2   ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=ENU=P&ost;
                      RunObject=Codeunit 11201;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Process }
      { 1070014 ;2   ;Action    ;
                      ShortCutKey=Shift+F9;
                      CaptionML=ENU=Post and &Print;
                      RunObject=Codeunit 11202;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process }
      { 1070052 ;2   ;Action    ;
                      CaptionML=ENU=&Reverse;
                      RunObject=Codeunit 11204;
                      Image=Undo }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1070032;1;Group     ;
                CaptionML=ENU=General }

    { 1070047;2;Field     ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1070039;2;Field     ;
                SourceExpr="Vendor Invoice No." }

    { 1070041;2;Field     ;
                DrillDown=No;
                SourceExpr="Vendor No." }

    { 1070043;2;Field     ;
                DrillDown=No;
                SourceExpr="Vendor Name" }

    { 1070049;2;Field     ;
                SourceExpr="Document No." }

    { 1070037;2;Field     ;
                SourceExpr="Posting Date" }

    { 1070033;2;Field     ;
                SourceExpr=Responsible }

    { 1070035;2;Field     ;
                SourceExpr="Latest Return" }

    { 1070045;2;Field     ;
                SourceExpr=Status }

    { 1070000;2;Field     ;
                SourceExpr="Currency Code";
                OnAssistEdit=BEGIN
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date");
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 1070031;1;Part      ;
                Name=InwRegLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page11202 }

  }
  CODE
  {
    VAR
      PurchOrderLine@1070000 : Record 39;
      PurchHeader@1070001 : Record 38;
      InwRegLines@1070002 : Record 11201;
      PurchDocType@1070003 : 'Quote,Order,Invoice,Credit Memo,Blanket Order';
      PurchDocNo@1070004 : Code[20];
      PurchSetup@1070005 : Record 312;
      Currency@1070007 : Record 4;
      ChangeExchangeRate@1070008 : Page 511;
      Text001@1070009 : TextConst 'ENU=The inward registration is already posted.';
      Text002@1070010 : TextConst 'ENU=The existing lines for %1 will be deleted.\\Do you want to continue?';
      PurchLineAmount@1070013 : Decimal;

    PROCEDURE PurchHeaderKey@1070001(DocType@1070000 : 'Quote,Order,Invoice,Credit Memo,Blanket Order';DocNo@1070001 : Code[20]);
    BEGIN
      PurchDocType := DocType;
      PurchDocNo := DocNo;
    END;

    BEGIN
    END.
  }
}

