OBJECT Page 11229184 Document Update Text (PPT)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Document Update Text;
    SourceTable=Table11229803;
    DataCaptionExpr=FillCaptionTxt;
    PageType=List;
    AutoSplitKey=Yes;
    OnNewRecord=BEGIN
                  SetUpNewLine;
                END;

    ActionList=ACTIONS
    {
      { 1100525006;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525007;1 ;Action    ;
                      CaptionML=ENU=Text Editor;
                      Promoted=Yes;
                      Image=SNInfo;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TextEditor@1100525000 : Codeunit 11012001;
                               BEGIN
                                 IF CurrPage.EDITABLE THEN
                                   TextEditor.DocumentUpdateText(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100525000;0;Container;
                ContainerType=ContentArea }

    { 1100525001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100525002;2;Field  ;
                SourceExpr=Date }

    { 1100525008;2;Field  ;
                SourceExpr="Time Created";
                Visible=false }

    { 1100525003;2;Field  ;
                SourceExpr=Code;
                OnLookup=VAR
                           TxtRec@1100525000 : Record 7;
                         BEGIN
                           TxtRec.Code := Code;
                           IF PAGE.RUNMODAL(PAGE::"Standard Text Codes", TxtRec) = ACTION::LookupOK THEN BEGIN
                             IF  (TxtRec.Code <> Code) AND (TxtRec.Code <> '') THEN BEGIN
                               Code := TxtRec.Code;
                               GetStandardText;
                             END;
                           END;
                         END;
                          }

    { 1100525004;2;Field  ;
                SourceExpr=Comment }

    { 1100409000;2;Field  ;
                SourceExpr="Line Break" }

    { 1100525005;2;Field  ;
                SourceExpr="Created by";
                Visible=false }

  }
  CODE
  {

    PROCEDURE FillCaptionTxt@1100525000() CaptTxt : Text[250];
    VAR
      lvText000@1100525000 : TextConst 'ENU=Start Text';
      lvText001@1100525001 : TextConst 'ENU=End Text';
    BEGIN
      IF Type = Type::"Start Text" THEN
        CaptTxt := lvText000;
      IF Type = Type::"End Text" THEN
        CaptTxt := lvText001;

      EXIT(CaptTxt);
    END;

    PROCEDURE GetStandardText@1100525001();
    VAR
      StandardText@1100525000 : Record 7;
      ExtendedTextLine@1100525001 : Record 280;
      DocumentUpdateText@1100525002 : Record 11229803;
      CurrLino@1100525003 : Integer;
      lvText11012000@1100525004 : TextConst 'ENU=Not enough space to insert text lines, not all text lines are added.';
    BEGIN
      IF Code = '' THEN
        EXIT;

      CurrPage.SAVERECORD;
      CurrLino := "Line No.";
      IF StandardText.GET(Code) THEN BEGIN
        IF (StandardText.Description <> '') THEN BEGIN
          Comment := StandardText.Description;
          MODIFY;
        END;
        ExtendedTextLine.SETRANGE("Table Name", ExtendedTextLine."Table Name"::"Standard Text");
        ExtendedTextLine.SETRANGE("No.", Code);
        IF ExtendedTextLine.FIND('-') THEN BEGIN
          REPEAT
            DocumentUpdateText := Rec;
            DocumentUpdateText.Comment := ExtendedTextLine.Text;
            DocumentUpdateText."Line No." := CurrLino + 1;
            DocumentUpdateText.Date := 0D;
            DocumentUpdateText.Code := '';
            IF NOT DocumentUpdateText.INSERT THEN BEGIN
              MESSAGE(lvText11012000);
              EXIT;
            END;
            CurrLino := DocumentUpdateText."Line No.";
          UNTIL (ExtendedTextLine.NEXT = 0);
        END;
      END;
      CurrPage.UPDATE(TRUE);
    END;

    BEGIN
    END.
  }
}

