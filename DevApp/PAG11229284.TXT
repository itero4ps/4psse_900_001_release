OBJECT Page 11229284 Work Orders
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Work Orders;
    SourceTable=Table11229279;
    SourceTableView=SORTING(Source Company,Source Type,Source No.);
    DataCaptionFields=Source No.;
    PageType=List;
    OnOpenPage=BEGIN
                 IF SourceType = 0 THEN
                   SourceType := SourceType::Project;
                 SetFiltersOnSource(COMPANYNAME, SourceType, SourceNo, Rec);
                 SetCompanyPlanGroupFilters;
                 UpdateEnabled;
               END;

    OnAfterGetRecord=BEGIN
                       UpdateEnabled;
                       FillDateTimeFields;
                     END;

    OnNewRecord=VAR
                  ProjPlanActivity@1100527001 : Record 11012431;
                BEGIN
                  InitRecordOnNew(SourceType, SourceNo, "Resource Type"::Employee);
                  IF (DefaultProjectActivity <> '') AND
                     ("Source Type" = "Source Type"::Project) AND ("Source No." <> '') AND ("Source Company" <> '')
                  THEN BEGIN
                    ProjPlanActivity.CHANGECOMPANY("Source Company");
                    IF ProjPlanActivity.GET(DefaultProjectActivity) THEN
                      VALIDATE("Project Planning Activity No.", DefaultProjectActivity);
                  END;
                END;

    OnAfterGetCurrRecord=BEGIN
                           FillDateTimeFields;
                         END;

    ActionList=ACTIONS
    {
      { 1100525019;  ;ActionContainer;
                      ActionContainerType=NewDocumentItems }
      { 1100525020;1 ;Action    ;
                      CaptionML=ENU=Card;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Card;
                      OnAction=VAR
                                 WorkOrder@1100525000 : Record 11229279;
                                 WorkOrderEmplProject@1100525001 : Page 11229285;
                               BEGIN
                                 TESTFIELD("No.");
                                 WorkOrder := Rec;
                                 WorkOrderEmplProject.SETRECORD(WorkOrder);
                                 WorkOrderEmplProject.SetSelections(COMPANYNAME, SourceNo);
                                 WorkOrderEmplProject.RUNMODAL;
                               END;
                                }
      { 1100528602;1 ;Action    ;
                      CaptionML=ENU=Recurrence;
                      Promoted=Yes;
                      Image=Reuse;
                      OnAction=BEGIN
                                 RepeatWorkorder;
                               END;
                                }
      { 1100525022;1 ;Action    ;
                      ShortCutKey=Ctrl+D;
                      CaptionML=ENU=Duplicate;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Copy;
                      OnAction=BEGIN
                                 DuplicateWorkorder(TRUE);
                               END;
                                }
      { 1100525033;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100525032;1 ;ActionGroup;
                      CaptionML=ENU=Work Order }
      { 1100528601;2 ;Action    ;
                      CaptionML=ENU=Statement of Work;
                      Image=Text;
                      OnAction=VAR
                                 WorkOrderInfoManagement@1100409000 : Codeunit 11229278;
                               BEGIN
                                 WorkOrderInfoManagement.ShowWorkOrderText("No.");
                               END;
                                }
      { 1100525028;2 ;Action    ;
                      CaptionML=ENU=Reference Points;
                      RunObject=Page 11229291;
                      RunPageLink=Work Order No.=FIELD(No.);
                      Image=EntriesList }
      { 1100525031;2 ;Action    ;
                      CaptionML=ENU=Signature;
                      RunObject=Page 11229283;
                      RunPageLink=Work Order No.=FIELD(No.);
                      Image=Signature }
      { 1100409002;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100409001;1 ;Action    ;
                      CaptionML=ENU=Create Next Work Order;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 NextWorkOrderNo@1100409000 : Code[20];
                               BEGIN
                                 NextWorkOrderNo := CreateNextWorkOrder;
                                 IF GUIALLOWED THEN
                                   MESSAGE(Text000, NextWorkOrderNo);
                               END;
                                }
      { 1100409004;1 ;Action    ;
                      CaptionML=ENU=Collective Publish on Subcontr. Portal;
                      Image=SubcontractingWorksheet;
                      OnAction=BEGIN
                                 CollPublishOnSubcontrPortal();
                               END;
                                }
      { 1100528611;1 ;ActionGroup;
                      CaptionML=ENU=Work Sheet;
                      ActionContainerType=NewDocumentItems;
                      Image=Email }
      { 1100528610;2 ;Action    ;
                      CaptionML=ENU=Email Selected Work Sheets;
                      Promoted=Yes;
                      Image=Email;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 WorkOrder@1100525000 : Record 11229279;
                                 DocumentPrint@1100528500 : Codeunit 229;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(WorkOrder);
                                 IF WorkOrder.FINDSET THEN
                                   REPEAT
                                     DocumentPrint.EmailWorkOrderWorksheet(WorkOrder, FALSE, TRUE)
                                   UNTIL WorkOrder.NEXT = 0;
                               END;
                                }
      { 1100409003;  ;ActionContainer;
                      ActionContainerType=Reports }
      { 1100528609;1 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=&Print Selected Work Sheets;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 WorkOrder@1100528600 : Record 11229279;
                                 DocumentPrint@1100528400 : Codeunit 229;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(WorkOrder);
                                 DocumentPrint.PrintWorkOrders(WorkOrder);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100525000;0;Container;
                ContainerType=ContentArea }

    { 1100525001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100525002;2;Field  ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1100525003;2;Field  ;
                SourceExpr="Source Company";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525004;2;Field  ;
                SourceExpr="Source Type";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525005;2;Field  ;
                SourceExpr="Source No.";
                Visible=FALSE;
                Editable=FALSE;
                OnLookup=BEGIN
                           LookupSourceNo(FALSE);
                         END;
                          }

    { 1100525008;2;Field  ;
                SourceExpr="Project Planning Activity No.";
                Enabled=ProjectPlanningActivityNoEnabled }

    { 1100528612;2;Field  ;
                SourceExpr="Project Element";
                Enabled=ProjectElementEnabled }

    { 1100525006;2;Field  ;
                SourceExpr=Description }

    { 1100528600;2;Field  ;
                SourceExpr="Resource Type" }

    { 1100525009;2;Field  ;
                SourceExpr="Resource No." }

    { 1100525010;2;Field  ;
                SourceExpr="Resource Name" }

    { 1100525007;2;Field  ;
                SourceExpr="Resource Company" }

    { 1100528621;2;Field  ;
                SourceExpr="Leading Resource" }

    { 1100525018;2;Field  ;
                SourceExpr="Actual Field Service Status";
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                           END;
                            }

    { 1100527000;2;Field  ;
                SourceExpr="Actual Field Serv. Status Desc" }

    { 1100409000;2;Field  ;
                SourceExpr="WO Finished (Field Service)" }

    { 1100525013;2;Field  ;
                SourceExpr="First Possible Start.Date/Time";
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::FirstPossibleStartingDateTime);
                           END;
                            }

    { 1100528620;2;Field  ;
                CaptionML=ENU=First Possible Starting Date;
                SourceExpr=FirstPossibleStartingDate;
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::FirstPossibleStartingDate);
                           END;
                            }

    { 1100528619;2;Field  ;
                CaptionML=ENU=First Possible Starting Time;
                SourceExpr=FirstPossibleStartingTime;
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::FirstPossibleStartingTime);
                           END;
                            }

    { 1100525014;2;Field  ;
                SourceExpr="Last Possible Ending Date/Time";
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::LastPossibleEndingDateTime);
                           END;
                            }

    { 1100528618;2;Field  ;
                CaptionML=ENU=Last Possible Ending Date;
                SourceExpr=LastPossibleEndingDate;
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::LastPossibleEndingDate);
                           END;
                            }

    { 1100528617;2;Field  ;
                CaptionML=ENU=Last Possible Ending Time;
                SourceExpr=LastPossibleEndingTime;
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::LastPossibleEndingTime);
                           END;
                            }

    { 1100525011;2;Field  ;
                SourceExpr="Starting Date/Time";
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::StartingDateTime);
                           END;
                            }

    { 1100528616;2;Field  ;
                CaptionML=ENU=Starting Date;
                SourceExpr=StartingDate;
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::StartingDate);
                           END;
                            }

    { 1100528615;2;Field  ;
                CaptionML=ENU=Starting Time;
                SourceExpr=StartingTime;
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::StartingTime);
                           END;
                            }

    { 1100525012;2;Field  ;
                SourceExpr="Ending Date/Time";
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::EndingDateTime);
                           END;
                            }

    { 1100528614;2;Field  ;
                CaptionML=ENU=Ending Date;
                SourceExpr=EndingDate;
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::EndingDate);
                           END;
                            }

    { 1100528613;2;Field  ;
                CaptionML=ENU=Ending Time;
                SourceExpr=EndingTime;
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::EndingTime);
                           END;
                            }

    { 1100525015;2;Field  ;
                SourceExpr="Expected Hours" }

    { 1100525016;2;Field  ;
                SourceExpr="Duration Time" }

    { 1100525017;2;Field  ;
                SourceExpr="Plan during Clock Time" }

    { 1100525026;2;Field  ;
                SourceExpr="Schedule Relation" }

    { 1100525024;2;Field  ;
                SourceExpr="Related Work Order No." }

    { 1100525030;2;Field  ;
                SourceExpr="Export to FSA" }

    { 1100525029;2;Field  ;
                SourceExpr="Date/Time Export to FSA" }

    { 1100525025;2;Field  ;
                CaptionML=ENU=Signature;
                SourceExpr=HasSignature() }

    { 1100525027;2;Field  ;
                SourceExpr=Signer }

    { 1100528700;2;Field  ;
                SourceExpr="Signature Mandatory" }

    { 1100525023;2;Field  ;
                SourceExpr="Actual Reference Point" }

    { 1100525021;2;Field  ;
                SourceExpr="Actual Reference Point Desc." }

    { 1100525035;2;Field  ;
                SourceExpr="Fld Srv Status Reason Desc.";
                Visible=FALSE }

    { 1100525034;2;Field  ;
                SourceExpr="Target Company" }

    { 1100528608;2;Field  ;
                SourceExpr="Publish on Subcontr. Portal" }

    { 1100528603;2;Field  ;
                SourceExpr="Expected Starting Date" }

    { 1100528604;2;Field  ;
                SourceExpr="Expected Starting Time" }

    { 1100528607;2;Field  ;
                SourceExpr="Expected Ending Date" }

    { 1100528605;2;Field  ;
                SourceExpr="Expected Ending Time" }

    { 1100528606;2;Field  ;
                SourceExpr="Expected Dates Modified on" }

  }
  CODE
  {
    VAR
      SourceType@1100528600 : ',ServiceOrder,,,,,,,,,,Project';
      SourceNo@1100525000 : Code[20];
      DefaultProjectActivity@1100527000 : Code[30];
      ProjectPlanningActivityNoEnabled@1100528601 : Boolean INDATASET;
      Text000@1100409000 : TextConst 'ENU=Work Order %1 created';
      ProjectElementEnabled@1100525001 : Boolean INDATASET;
      FirstPossibleStartingDate@1100528610 : Date;
      FirstPossibleStartingTime@1100528609 : Time;
      LastPossibleEndingDate@1100528608 : Date;
      LastPossibleEndingTime@1100528607 : Time;
      StartingDate@1100528606 : Date;
      StartingTime@1100528605 : Time;
      EndingDate@1100528604 : Date;
      EndingTime@1100528603 : Time;
      ValidationField@1100528602 : 'FirstPossibleStartingDateTime,FirstPossibleStartingDate,FirstPossibleStartingTime,LastPossibleEndingDateTime,LastPossibleEndingDate,LastPossibleEndingTime,StartingDateTime,StartingDate,StartingTime,EndingDateTime,EndingDate,EndingTime';

    PROCEDURE SetSelections@1100525002(ISourceType@1100528600 : Option;ISourceNo@1100525002 : Code[20]);
    BEGIN
      SourceType := ISourceType;
      SourceNo := ISourceNo;
    END;

    PROCEDURE SetDefaultProjectActivity@1100527000(DefaultProjectActivity2@1100527000 : Code[30]);
    BEGIN
      DefaultProjectActivity := DefaultProjectActivity2;
      SETRANGE("Project Planning Activity No.", DefaultProjectActivity);
    END;

    PROCEDURE UpdateEnabled@1100528600();
    BEGIN
      ProjectPlanningActivityNoEnabled := "Source Type" = "Source Type"::Project;
      ProjectElementEnabled := "Source Type" = "Source Type"::Project;
    END;

    LOCAL PROCEDURE FillDateTimeFields@1100528602();
    BEGIN
      FirstPossibleStartingDate := DT2DATE("First Possible Start.Date/Time");
      FirstPossibleStartingTime := DT2TIME("First Possible Start.Date/Time");
      LastPossibleEndingDate := DT2DATE("Last Possible Ending Date/Time");
      LastPossibleEndingTime := DT2TIME("Last Possible Ending Date/Time");
      StartingDate := DT2DATE("Starting Date/Time");
      StartingTime := DT2TIME("Starting Date/Time");
      EndingDate := DT2DATE("Ending Date/Time");
      EndingTime := DT2TIME("Ending Date/Time");
    END;

    LOCAL PROCEDURE ValidateDateTimeFields@1100528601(IValidationField@1100528600 : Option);
    VAR
      FirstPossibleStartingDateTime@1100528601 : DateTime;
      LastPossibleEndingDateTime@1100528602 : DateTime;
      StartingDateTime@1100528603 : DateTime;
      EndingDateTime@1100528604 : DateTime;
    BEGIN
      CASE IValidationField OF
        ValidationField::FirstPossibleStartingDateTime:
          BEGIN
            FillDateTimeFields;
          END;
        ValidationField::FirstPossibleStartingDate:
          BEGIN
            IF FirstPossibleStartingDate = 0D THEN BEGIN
              VALIDATE("First Possible Start.Date/Time", 0DT);
              ValidateDateTimeFields(ValidationField::FirstPossibleStartingDateTime);
            END ELSE BEGIN
              FirstPossibleStartingDateTime := CREATEDATETIME(FirstPossibleStartingDate, FirstPossibleStartingTime);
              IF ("Last Possible Ending Date/Time" = 0DT) OR (FirstPossibleStartingDateTime <= "Last Possible Ending Date/Time") THEN
                VALIDATE("First Possible Start.Date/Time", FirstPossibleStartingDateTime);
            END;
          END;
        ValidationField::FirstPossibleStartingTime:
          BEGIN
            VALIDATE("First Possible Start.Date/Time", CREATEDATETIME(FirstPossibleStartingDate, FirstPossibleStartingTime));
          END;
        ValidationField::LastPossibleEndingDateTime:
          BEGIN
            FillDateTimeFields;
          END;
        ValidationField::LastPossibleEndingDate:
          BEGIN
            IF LastPossibleEndingDate = 0D THEN BEGIN
              VALIDATE("Last Possible Ending Date/Time", 0DT);
              ValidateDateTimeFields(ValidationField::LastPossibleEndingDateTime);
            END ELSE BEGIN
              LastPossibleEndingDateTime := CREATEDATETIME(LastPossibleEndingDate, LastPossibleEndingTime);
              IF ("First Possible Start.Date/Time" = 0DT) OR (LastPossibleEndingDateTime >= "First Possible Start.Date/Time") THEN
                VALIDATE("Last Possible Ending Date/Time", LastPossibleEndingDateTime);
            END;
          END;
        ValidationField::LastPossibleEndingTime:
          BEGIN
            VALIDATE("Last Possible Ending Date/Time", CREATEDATETIME(LastPossibleEndingDate, LastPossibleEndingTime));
          END;
        ValidationField::StartingDateTime:
          BEGIN
            FillDateTimeFields;
          END;
        ValidationField::StartingDate:
          BEGIN
            IF StartingDate = 0D THEN BEGIN
              VALIDATE("Starting Date/Time", 0DT);
              ValidateDateTimeFields(ValidationField::StartingDateTime);
            END ELSE BEGIN
              StartingDateTime := CREATEDATETIME(StartingDate, StartingTime);
              IF ("Ending Date/Time" = 0DT) OR (StartingDateTime <= "Ending Date/Time") THEN
                VALIDATE("Starting Date/Time", StartingDateTime);
            END;
          END;
        ValidationField::StartingTime:
          BEGIN
            VALIDATE("Starting Date/Time", CREATEDATETIME(StartingDate, StartingTime));
          END;
        ValidationField::EndingDateTime:
          BEGIN
            FillDateTimeFields;
          END;
        ValidationField::EndingDate:
          BEGIN
            IF EndingDate = 0D THEN BEGIN
              VALIDATE("Ending Date/Time", 0DT);
              ValidateDateTimeFields(ValidationField::EndingDateTime);
            END ELSE BEGIN
              EndingDateTime := CREATEDATETIME(EndingDate, EndingTime);
              IF ("Starting Date/Time" = 0DT) OR (EndingDateTime >= "Starting Date/Time") THEN
                VALIDATE("Ending Date/Time", EndingDateTime);
            END;
          END;
        ValidationField::EndingTime:
          BEGIN
            VALIDATE("Ending Date/Time", CREATEDATETIME(EndingDate, EndingTime));
          END;
      END;
    END;

    BEGIN
    END.
  }
}

