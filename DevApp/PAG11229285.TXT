OBJECT Page 11229285 Work Order Card
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Work Order Card;
    InsertAllowed=No;
    SourceTable=Table11229279;
    PopulateAllFields=Yes;
    SourceTableView=SORTING(Source Company,Source Type,Source No.);
    PageType=Card;
    OnOpenPage=BEGIN
                 IF SourceNo = '' THEN
                   SourceNo := DetermineSourceNoFromFilter();
                 IF SourceCompany = '' THEN
                   SourceCompany := COMPANYNAME;
                 //SetFiltersOnSource(SourceCompany, "Source Type", SourceNo, Rec);
               END;

    OnAfterGetRecord=BEGIN
                       FillDateTimeFields;
                     END;

    OnNewRecord=BEGIN
                  InitRecordOnNew("Source Type", SourceNo, "Resource Type"::Employee);
                  FillDateTimeFields;
                END;

    OnAfterGetCurrRecord=BEGIN
                           EMailWorkSheetEnabled := "Source Type" = "Source Type"::ServiceOrder;
                         END;

    ActionList=ACTIONS
    {
      { 1100525027;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100525026;1 ;ActionGroup;
                      CaptionML=ENU=Work Order }
      { 1100525028;2 ;Action    ;
                      CaptionML=ENU=Reference Points;
                      RunObject=Page 11229291;
                      RunPageLink=Work Order No.=FIELD(No.);
                      Image=EntriesList }
      { 1100525025;2 ;Action    ;
                      CaptionML=ENU=Signature;
                      RunObject=Page 11229283;
                      RunPageLink=Work Order No.=FIELD(No.);
                      Image=Signature }
      { 1100528400;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100409001;1 ;Action    ;
                      CaptionML=ENU=Collective Publish on Subcontr. Portal;
                      Image=SubcontractingWorksheet;
                      OnAction=BEGIN
                                 CollPublishOnSubcontrPortal();
                               END;
                                }
      { 1100528401;1 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=&Print Work Sheet;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 DocumentPrint@1100528400 : Codeunit 229;
                               BEGIN
                                 DocumentPrint.PrintWorkOrder(Rec);
                               END;
                                }
      { 1100528610;1 ;ActionGroup;
                      CaptionML=ENU=Work Sheet;
                      ActionContainerType=NewDocumentItems;
                      Image=Email }
      { 1100528611;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Email Work Sheet;
                      Promoted=Yes;
                      Enabled=EMailWorkSheetEnabled;
                      Image=Email;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 DocumentPrint@1100525000 : Codeunit 229;
                               BEGIN
                                 DocumentPrint.EmailWorkOrderWorksheet(Rec, TRUE, TRUE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100525000;0;Container;
                ContainerType=ContentArea }

    { 1100525001;1;Group  ;
                CaptionML=ENU=General;
                GroupType=Group }

    { 1100525002;2;Field  ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1100525003;2;Field  ;
                SourceExpr="Source Company";
                Importance=Additional;
                Editable=FALSE }

    { 1100525004;2;Field  ;
                SourceExpr="Source Type";
                Importance=Additional;
                Editable=FALSE }

    { 1100525005;2;Field  ;
                SourceExpr="Source No.";
                Importance=Additional;
                Editable=FALSE;
                OnLookup=BEGIN
                           LookupSourceNo(FALSE);
                         END;
                          }

    { 1100525008;2;Field  ;
                SourceExpr="Project Planning Activity No.";
                Editable="Source Type" = "Source Type"::Project }

    { 1100528612;2;Field  ;
                SourceExpr="Project Element";
                Enabled="Source Type" = "Source Type"::Project }

    { 1100525006;2;Field  ;
                SourceExpr=Description }

    { 1100528600;2;Field  ;
                SourceExpr="Resource Type" }

    { 1100525009;2;Field  ;
                SourceExpr="Resource No.";
                Importance=Promoted }

    { 1100525010;2;Field  ;
                SourceExpr="Resource Name";
                Importance=Promoted }

    { 1100525007;2;Field  ;
                SourceExpr="Resource Company" }

    { 1100528601;2;Field  ;
                SourceExpr="Leading Resource" }

    { 1100525018;2;Field  ;
                SourceExpr="Actual Field Service Status" }

    { 1100527000;2;Field  ;
                SourceExpr="Actual Field Serv. Status Desc" }

    { 1100409000;2;Field  ;
                SourceExpr="WO Finished (Field Service)" }

    { 1100525035;1;Part   ;
                CaptionML=ENU=Work Order Text;
                SubPageLink=Table Name=CONST(Work Order),
                            No.=FIELD(No.),
                            Table Field=CONST(0);
                PagePartID=Page11229300;
                PartType=Page }

    { 1100525019;1;Group  ;
                CaptionML=ENU=Planning;
                GroupType=Group }

    { 1100525013;2;Field  ;
                SourceExpr="First Possible Start.Date/Time";
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::FirstPossibleStartingDateTime);
                           END;
                            }

    { 1100528613;2;Field  ;
                CaptionML=ENU=First Possible Starting Date;
                SourceExpr=FirstPossibleStartingDate;
                Importance=Additional;
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::FirstPossibleStartingDate);
                           END;
                            }

    { 1100528615;2;Field  ;
                CaptionML=ENU=First Possible Starting Time;
                SourceExpr=FirstPossibleStartingTime;
                Importance=Additional;
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::FirstPossibleStartingTime);
                           END;
                            }

    { 1100525014;2;Field  ;
                SourceExpr="Last Possible Ending Date/Time";
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::LastPossibleEndingDateTime);
                           END;
                            }

    { 1100528614;2;Field  ;
                CaptionML=ENU=Last Possible Ending Date;
                SourceExpr=LastPossibleEndingDate;
                Importance=Additional;
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::LastPossibleEndingDate);
                           END;
                            }

    { 1100528616;2;Field  ;
                CaptionML=ENU=Last Possible Ending Time;
                SourceExpr=LastPossibleEndingTime;
                Importance=Additional;
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::LastPossibleEndingTime);
                           END;
                            }

    { 1100525011;2;Field  ;
                SourceExpr="Starting Date/Time";
                Importance=Promoted;
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::StartingDateTime);
                           END;
                            }

    { 1100528617;2;Field  ;
                CaptionML=ENU=Starting Date;
                SourceExpr=StartingDate;
                Importance=Additional;
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::StartingDate);
                           END;
                            }

    { 1100528618;2;Field  ;
                CaptionML=ENU=Starting Time;
                SourceExpr=StartingTime;
                Importance=Additional;
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::StartingTime);
                           END;
                            }

    { 1100525012;2;Field  ;
                SourceExpr="Ending Date/Time";
                Importance=Promoted;
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::EndingDateTime);
                           END;
                            }

    { 1100528620;2;Field  ;
                CaptionML=ENU=Ending Date;
                SourceExpr=EndingDate;
                Importance=Additional;
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::EndingDate);
                           END;
                            }

    { 1100528619;2;Field  ;
                CaptionML=ENU=Ending Time;
                SourceExpr=EndingTime;
                Importance=Additional;
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::EndingTime);
                           END;
                            }

    { 1100525015;2;Field  ;
                SourceExpr="Expected Hours" }

    { 1100525016;2;Field  ;
                SourceExpr="Duration Time" }

    { 1100525017;2;Field  ;
                SourceExpr="Plan during Clock Time" }

    { 1100525029;2;Field  ;
                SourceExpr="Schedule Relation" }

    { 1100525030;2;Field  ;
                SourceExpr="Related Work Order No." }

    { 1100525033;2;Field  ;
                SourceExpr="Target Company" }

    { 1100525020;1;Group  ;
                CaptionML=ENU=Field Service }

    { 1100525021;2;Field  ;
                SourceExpr="Export to FSA" }

    { 1100525022;2;Field  ;
                SourceExpr="Date/Time Export to FSA" }

    { 1100525024;2;Field  ;
                CaptionML=ENU=Signature;
                SourceExpr=HasSignature() }

    { 1100525023;2;Field  ;
                SourceExpr=Signer }

    { 1100525031;2;Field  ;
                SourceExpr="Actual Reference Point";
                Importance=Promoted }

    { 1100525032;2;Field  ;
                SourceExpr="Actual Reference Point Desc.";
                Importance=Promoted }

    { 1100525034;2;Field  ;
                SourceExpr="Fld Srv Status Reason Desc." }

    { 1100528603;1;Group  ;
                CaptionML=ENU=Subcontractor;
                GroupType=Group }

    { 1100528609;2;Field  ;
                SourceExpr="Publish on Subcontr. Portal" }

    { 1100528604;2;Field  ;
                SourceExpr="Expected Starting Date" }

    { 1100528605;2;Field  ;
                SourceExpr="Expected Starting Time" }

    { 1100528606;2;Field  ;
                SourceExpr="Expected Ending Date" }

    { 1100528607;2;Field  ;
                SourceExpr="Expected Ending Time" }

    { 1100528608;2;Field  ;
                SourceExpr="Expected Dates Modified on" }

  }
  CODE
  {
    VAR
      SourceNo@1100525000 : Code[20];
      SourceCompany@1100527000 : Text[30];
      EMailWorkSheetEnabled@1100528600 : Boolean;
      FirstPossibleStartingDate@1100528601 : Date;
      FirstPossibleStartingTime@1100528602 : Time;
      LastPossibleEndingDate@1100528603 : Date;
      LastPossibleEndingTime@1100528604 : Time;
      StartingDate@1100528605 : Date;
      StartingTime@1100528606 : Time;
      EndingDate@1100528607 : Date;
      EndingTime@1100528608 : Time;
      ValidationField@1100528609 : 'FirstPossibleStartingDateTime,FirstPossibleStartingDate,FirstPossibleStartingTime,LastPossibleEndingDateTime,LastPossibleEndingDate,LastPossibleEndingTime,StartingDateTime,StartingDate,StartingTime,EndingDateTime,EndingDate,EndingTime';

    PROCEDURE SetSelections@1100525002(SourceCompany2@1100527000 : Text[30];SourceNo2@1100525002 : Code[20]);
    BEGIN
      SourceCompany := SourceCompany2;
      SourceNo := SourceNo2;
    END;

    LOCAL PROCEDURE FillDateTimeFields@1100528601();
    BEGIN
      FirstPossibleStartingDate := DT2DATE("First Possible Start.Date/Time");
      FirstPossibleStartingTime := DT2TIME("First Possible Start.Date/Time");
      LastPossibleEndingDate := DT2DATE("Last Possible Ending Date/Time");
      LastPossibleEndingTime := DT2TIME("Last Possible Ending Date/Time");
      StartingDate := DT2DATE("Starting Date/Time");
      StartingTime := DT2TIME("Starting Date/Time");
      EndingDate := DT2DATE("Ending Date/Time");
      EndingTime := DT2TIME("Ending Date/Time");
    END;

    LOCAL PROCEDURE ValidateDateTimeFields@1100528600(IValidationField@1100528600 : Option);
    VAR
      FirstPossibleStartingDateTime@1100528601 : DateTime;
      LastPossibleEndingDateTime@1100528602 : DateTime;
      StartingDateTime@1100528603 : DateTime;
      EndingDateTime@1100528604 : DateTime;
    BEGIN
      CASE IValidationField OF
        ValidationField::FirstPossibleStartingDateTime:
          BEGIN
            FillDateTimeFields;
          END;
        ValidationField::FirstPossibleStartingDate:
          BEGIN
            IF FirstPossibleStartingDate = 0D THEN BEGIN
              VALIDATE("First Possible Start.Date/Time", 0DT);
              ValidateDateTimeFields(ValidationField::FirstPossibleStartingDateTime);
            END ELSE BEGIN
              FirstPossibleStartingDateTime := CREATEDATETIME(FirstPossibleStartingDate, FirstPossibleStartingTime);
              IF ("Last Possible Ending Date/Time" = 0DT) OR (FirstPossibleStartingDateTime <= "Last Possible Ending Date/Time") THEN
                VALIDATE("First Possible Start.Date/Time", FirstPossibleStartingDateTime);
            END;
          END;
        ValidationField::FirstPossibleStartingTime:
          BEGIN
            VALIDATE("First Possible Start.Date/Time", CREATEDATETIME(FirstPossibleStartingDate, FirstPossibleStartingTime));
          END;
        ValidationField::LastPossibleEndingDateTime:
          BEGIN
            FillDateTimeFields;
          END;
        ValidationField::LastPossibleEndingDate:
          BEGIN
            IF LastPossibleEndingDate = 0D THEN BEGIN
              VALIDATE("Last Possible Ending Date/Time", 0DT);
              ValidateDateTimeFields(ValidationField::LastPossibleEndingDateTime);
            END ELSE BEGIN
              LastPossibleEndingDateTime := CREATEDATETIME(LastPossibleEndingDate, LastPossibleEndingTime);
              IF ("First Possible Start.Date/Time" = 0DT) OR (LastPossibleEndingDateTime >= "First Possible Start.Date/Time") THEN
                VALIDATE("Last Possible Ending Date/Time", LastPossibleEndingDateTime);
            END;
          END;
        ValidationField::LastPossibleEndingTime:
          BEGIN
            VALIDATE("Last Possible Ending Date/Time", CREATEDATETIME(LastPossibleEndingDate, LastPossibleEndingTime));
          END;
        ValidationField::StartingDateTime:
          BEGIN
            FillDateTimeFields;
          END;
        ValidationField::StartingDate:
          BEGIN
            IF StartingDate = 0D THEN BEGIN
              VALIDATE("Starting Date/Time", 0DT);
              ValidateDateTimeFields(ValidationField::StartingDateTime);
            END ELSE BEGIN
              StartingDateTime := CREATEDATETIME(StartingDate, StartingTime);
              IF ("Ending Date/Time" = 0DT) OR (StartingDateTime <= "Ending Date/Time") THEN
                VALIDATE("Starting Date/Time", StartingDateTime);
            END;
          END;
        ValidationField::StartingTime:
          BEGIN
            VALIDATE("Starting Date/Time", CREATEDATETIME(StartingDate, StartingTime));
          END;
        ValidationField::EndingDateTime:
          BEGIN
            FillDateTimeFields;
          END;
        ValidationField::EndingDate:
          BEGIN
            IF EndingDate = 0D THEN BEGIN
              VALIDATE("Ending Date/Time", 0DT);
              ValidateDateTimeFields(ValidationField::EndingDateTime);
            END ELSE BEGIN
              EndingDateTime := CREATEDATETIME(EndingDate, EndingTime);
              IF ("Starting Date/Time" = 0DT) OR (EndingDateTime >= "Starting Date/Time") THEN
                VALIDATE("Ending Date/Time", EndingDateTime);
            END;
          END;
        ValidationField::EndingTime:
          BEGIN
            VALIDATE("Ending Date/Time", CREATEDATETIME(EndingDate, EndingTime));
          END;
      END;
    END;

    BEGIN
    END.
  }
}

