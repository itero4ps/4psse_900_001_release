OBJECT Page 11229328 Recipe Lines Cost SF
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Recipe Lines (Cost);
    SourceTable=Table11072075;
    DelayedInsert=No;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             InitEditable;  //db, 01-07-14: T005104
           END;

    OnOpenPage=BEGIN
                 GetFilterZeroLines(FALSE);  //C025240

                 IF NOT EstRAWSetup.READPERMISSION THEN BEGIN  //db, 10-09-10: M22816
                   NormPlantEditable := FALSE;
                   ProductionRatePlantEditable := FALSE;
                   HoursPlantEditable := FALSE;
                 END;
               END;

    OnAfterGetRecord=BEGIN
                       CALCFIELDS("Estimate Quantity","Estimate Part Quantity");
                       RefQuote := RouteRefMgtCU.GetQuoteOfReference("Purchase Route Reference");
                       GetItemSpecifications;

                       IF gFromReference THEN BEGIN
                         gFromReference := FALSE;
                         SETRANGE("Line No.");
                       END;
                     END;

    OnNewRecord=VAR
                  lvRcpLineRec@1100528900 : Record 11072075;
                BEGIN
                  RefQuote := '';
                  IF "Estimate No." = '' THEN BEGIN
                    IF RecipeRec.GET("Recipe Group",Recipe) THEN BEGIN
                      "Norm Group" := RecipeRec."Norm Group";
                    END;
                  END;
                  "Recipe Group (Child)" := "Recipe Group";

                  //db.sn, 08-10-10: M22182
                  lvRcpLineRec := xRec;
                  lvRcpLineRec.SETRANGE("Estimate No.", "Estimate No.");
                  lvRcpLineRec.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
                  lvRcpLineRec.SETRANGE("Part Group", "Part Group");
                  lvRcpLineRec.SETRANGE(Part, Part);
                  lvRcpLineRec.SETRANGE("Estimate Line", "Estimate Line");
                  lvRcpLineRec.SETRANGE("Recipe Group", "Recipe Group");
                  lvRcpLineRec.SETRANGE(Recipe, Recipe);
                  IF BelowxRec THEN BEGIN
                    IF NOT lvRcpLineRec.FIND('=') THEN
                      lvRcpLineRec.INIT;
                  END ELSE BEGIN
                    IF NOT lvRcpLineRec.FIND('<') THEN
                      lvRcpLineRec.INIT;
                  END;
                  IF lvRcpLineRec."Recipe Level" <> 0 THEN BEGIN
                    "Recipe (Child)" := lvRcpLineRec."Recipe (Child)";
                    "Recipe Group (Child)" := lvRcpLineRec."Recipe Group (Child)";
                  END;
                   IF lvRcpLineRec."Recipe Header" = TRUE THEN
                    "Recipe Level" := lvRcpLineRec."Recipe Level" + 1
                  ELSE
                    "Recipe Level" := lvRcpLineRec."Recipe Level";
                  //db.en, 08-10-10: M22182

                  IF EstRec.GET("Estimate No.") THEN
                    "Currency Code" := EstRec."Currency Code";
                END;

    OnInsertRecord=BEGIN
                     IF IsFixed THEN BEGIN
                     //Currpage.UPDATE(FALSE);  //db, 23-02-04
                       IF "Estimate No." = '' THEN
                         ERROR(Text000, FIELDCAPTION(Recipe))
                       ELSE
                         ERROR(Text000, FIELDCAPTION("Estimate No."));
                     END;
                     CheckHideZeroLines;  //C025240
                   END;

    OnModifyRecord=BEGIN
                     IF IsFixed THEN BEGIN
                       CurrPage.UPDATE(FALSE);
                       IF "Estimate No." = '' THEN
                         ERROR(Text001, FIELDCAPTION(Recipe))
                       ELSE
                         ERROR(Text001, FIELDCAPTION("Estimate No."));
                     END;

                     IF "Recipe (Child)" = '' THEN "Recipe Group (Child)" := '';
                   END;

    OnDeleteRecord=BEGIN
                     IF IsFixed THEN BEGIN
                       CurrPage.UPDATE(FALSE);
                       IF "Estimate No." = '' THEN
                         ERROR(Text002, FIELDCAPTION(Recipe))
                       ELSE
                         ERROR(Text002, FIELDCAPTION("Estimate No."));
                     END;

                     RouteRefMgtCU.CheckDeleteRcpLineHasQuoteNEW(Rec, TRUE);
                   END;

    OnAfterGetCurrRecord=VAR
                           Fixed@1100528900 : Boolean;
                         BEGIN
                           Fixed := IsFixed;
                           IF Recipe = '' THEN Fixed := TRUE;  //db, 21-05-15: DP00769

                           DescriptionEditable := NOT Fixed;
                           QuantityEditable := NOT Fixed;
                           //db.sn, 08-10-10: M22182
                           NormGroupEditable := NOT Fixed;
                           ManufacturerEditable := NOT Fixed;
                           BasicItemEditable := NOT Fixed;
                           TradeItemEditable := NOT Fixed;
                           ItemNoEditable := NOT Fixed;
                           UnitOfMeasureEditable := NOT Fixed;
                           LineStatusEditable := NOT Fixed;
                           SurchargeTypeEditable := NOT Fixed;
                           VendorTradeItemEditable := NOT Fixed;
                           SubOperationCodeEditable := NOT Fixed;
                           NormEditable := NOT Fixed;
                           RateCodeEditable := NOT Fixed;
                           NettCostPriceEditable := NOT Fixed;
                           GrossPriceEditable := NOT Fixed;
                           CostObjectLaborEditable := NOT Fixed;
                           CostObjectPriceEditable := NOT Fixed;
                           CodeEditable := NOT Fixed;
                           DocumentNoEditable := NOT Fixed;
                           AskForQuoteEditable := NOT Fixed;
                           PriceAgreementEditable := NOT Fixed;
                           NormAgreementEditable := NOT Fixed;
                           VendorEditable := NOT Fixed;
                           AddionalCostEditable := NOT Fixed;
                           //db.en, 08-10-10: M22182

                           IF NOT Fixed THEN
                             CheckFieldsEditable;  //db, 01-07-14: T005104

                           GetRecipeTotals(EstLineRec, TotalRecipeCost, TotalRecipeSales, TotalRecipeGross);  //DP00381
                         END;

    ActionList=ACTIONS
    {
      { 1100525004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525003;1 ;ActionGroup;
                      CaptionML=ENU=&Copy }
      { 1100525002;2 ;Action    ;
                      Name=ShowBuffer;
                      ShortCutKey=Alt+F9;
                      CaptionML=ENU=Show Buffer;
                      Image=Allocations;
                      OnAction=BEGIN
                                 ShowBuffer;
                               END;
                                }
      { 1100525001;2 ;Action    ;
                      Name=CopyToBuffer;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=ENU=Copy &to Buffer;
                      Image=SelectLineToApply;
                      OnAction=BEGIN
                                 CopyToBuffer;
                               END;
                                }
      { 1100525000;2 ;Action    ;
                      Name=CopyFromBuffer;
                      ShortCutKey=Shift+F9;
                      CaptionML=ENU=Copy from Buffer;
                      Image=PostApplication;
                      OnAction=BEGIN
                                 CopyFromBuffer;
                               END;
                                }
      { 1100525006;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1100525005;2 ;Action    ;
                      Name=CreateSurcharge;
                      CaptionML=ENU=&Surcharge;
                      Image=InsertStartingFee;
                      OnAction=VAR
                                 RecipeLine@1100525001 : Record 11072075;
                               BEGIN
                                 RecipeLine.COPY(Rec);
                                 CurrPage.SETSELECTIONFILTER(RecipeLine);
                                 RecipeLine.CreateCharge;
                                 RecalcTotals;
                               END;
                                }
      { 1100528984;2 ;Action    ;
                      Name=Collapse/Expand Recipe;
                      ShortCutKey=Shift+Ctrl+X;
                      CaptionML=ENU=Collapse/Expand Recipe;
                      OnAction=BEGIN
                                 //DP00381
                                 HandleRecipeLevel;
                               END;
                                }
      { 1100525009;1 ;ActionGroup;
                      CaptionML=ENU=Recipe Lines }
      { 1100528983;2 ;Action    ;
                      Name=Purchase Route References;
                      CaptionML=ENU=Purchase Route References;
                      OnAction=BEGIN
                                 ShowPurchRouteRef;
                               END;
                                }
      { 1100528982;2 ;Action    ;
                      Name=Internal Text;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=&Internal Text;
                      OnAction=BEGIN
                                 EditText(1);
                               END;
                                }
      { 1100528981;2 ;Action    ;
                      Name=External Text;
                      ShortCutKey=Shift+Ctrl+E;
                      CaptionML=ENU=&External Text;
                      OnAction=BEGIN
                                 EditText(2);
                               END;
                                }
      { 1100528980;2 ;Action    ;
                      Name=Comment Lines (Estimate Line);
                      CaptionML=ENU=&Comment Lines (Estimate Line);
                      OnAction=BEGIN
                                 EditCommentLines(FALSE);  //DP00686
                               END;
                                }
      { 1100409005;2 ;Action    ;
                      Name=Comment Lines (Recipe Line);
                      ShortCutKey=Shift+Ctrl+R;
                      CaptionML=ENU=&Comment Lines (Recipe Line);
                      OnAction=BEGIN
                                 EditCommentLines(TRUE);  //DP00686
                               END;
                                }
      { 1100528979;2 ;Action    ;
                      Name=Details;
                      ShortCutKey=Shift+Ctrl+L;
                      CaptionML=ENU=Details;
                      OnAction=BEGIN
                                 EditDetailRecipeLine;  //DP00381
                               END;
                                }
      { 1100525007;2 ;Action    ;
                      Name=ChildRcp;
                      ShortCutKey=Shift+Ctrl+N;
                      CaptionML=ENU=Nested Recipe;
                      OnAction=BEGIN
                                 ActivateChildRecipe;  //db, 24-06-14
                               END;
                                }
      { 1100528978;2 ;Action    ;
                      Name=Sales;
                      CaptionML=ENU=Sales;
                      RunObject=Page 11229774;
                      RunPageLink=Estimate No.=FIELD(Estimate No.),
                                  Sub-Estimate No.=FIELD(Sub-Estimate No.),
                                  Part Group=FIELD(Part Group),
                                  Part=FIELD(Part),
                                  Estimate Line=FIELD(Estimate Line);
                      Visible=FALSE;
                      Enabled=FALSE;
                      Image=SalesPrices }
      { 1100528904;2 ;Action    ;
                      Name=Totals;
                      CaptionML=ENU=Totals;
                      RunObject=Page 11229775;
                      RunPageLink=Estimate No.=FIELD(Estimate No.),
                                  Sub-Estimate No.=FIELD(Sub-Estimate No.),
                                  Part Group=FIELD(Part Group),
                                  Part=FIELD(Part),
                                  Estimate Line=FIELD(Estimate Line);
                      Visible=FALSE;
                      Enabled=FALSE;
                      Image=LedgerBudget }
      { 1100409009;2 ;Action    ;
                      Name=Estimate Part Card;
                      CaptionML=ENU=Estimate Part (Card);
                      RunObject=Page 11130179;
                      RunPageLink=Estimate No.=FIELD(Estimate No.),
                                  Sub-Estimate No.=FIELD(Sub-Estimate No.),
                                  Part Group=FIELD(Part Group),
                                  Part=FIELD(Part);
                      Visible=FALSE;
                      Enabled=FALSE;
                      Image=ExplodeBOM }
      { 1100528986;2 ;Action    ;
                      Name=Estimate Index;
                      ShortCutKey=Ctrl+F5;
                      CaptionML=ENU=Estimate Index;
                      Visible=FALSE;
                      Enabled=FALSE;
                      Image=BOMVersions;
                      OnAction=BEGIN
                                 ShowIndex;
                               END;
                                }
      { 1100409008;2 ;Action    ;
                      Name=OfferAmount;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Offer Amounts;
                      Visible=FALSE;
                      Enabled=FALSE;
                      Image=ContractPayment;
                      OnAction=BEGIN
                                 ShowOfferAmount;  //db, 24-02-15
                               END;
                                }
      { 1100409006;2 ;Action    ;
                      Name=Quantity Sheet;
                      CaptionML=ENU=Quantity Sheet;
                      Image=Worksheet;
                      OnAction=VAR
                                 QuantitySheetHeader@1100409000 : Record 11020462;
                               BEGIN
                                 QuantitySheetHeader.StartQuantitySheet("Estimate No.", "Sub-Estimate No.", "Part Group", Part);  //db, 24-02-15
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100528900;;Container;
                ContainerType=ContentArea }

    { 1100528901;1;Group  ;
                GroupType=Repeater }

    { 1100528902;2;Field  ;
                SourceExpr="Estimate No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100528903;2;Field  ;
                SourceExpr="Sub-Estimate No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100528977;2;Field  ;
                SourceExpr="Part Group";
                Visible=FALSE;
                Editable=FALSE }

    { 1100528905;2;Field  ;
                SourceExpr=Part;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528906;2;Field  ;
                SourceExpr="Recipe Group";
                Visible=FALSE;
                Editable=FALSE }

    { 1100528907;2;Field  ;
                SourceExpr=Recipe;
                Visible=FALSE }

    { 1100528908;2;Field  ;
                SourceExpr="Cost Type (Price)";
                Editable=CostTypePriceEditable;
                OnValidate=BEGIN
                             RecalcTotals;  //db, 17-03-14: C012735
                           END;
                            }

    { 1100525011;2;Field  ;
                SourceExpr="Cost Type (Hours)";
                Visible=FALSE;
                Editable=CostTypeHoursEditable;
                OnValidate=BEGIN
                             RecalcTotals;  //db, 17-03-14: C012735
                           END;
                            }

    { 1100528909;2;Field  ;
                SourceExpr="Recipe Group (Child)";
                Visible=FALSE }

    { 1100528910;2;Field  ;
                SourceExpr="Recipe (Child)";
                Visible=FALSE;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100528917;2;Field  ;
                SourceExpr="Set Code";
                Visible=FALSE;
                Editable=SetCodeEditable;
                OnValidate=BEGIN
                             IF Quantity = 0 THEN Quantity := 1;  //init quantity before explode to fill cumulative quantity on related lines
                             CurrPage.SAVERECORD;
                             ExplodeSetLines;
                           END;
                            }

    { 1100528916;2;Field  ;
                SourceExpr="Plant Type";
                Visible=FALSE;
                Editable=PlantTypeEditable;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             InsertPlantCostLines;
                           END;
                            }

    { 1100528915;2;Field  ;
                SourceExpr="Item No.";
                Editable=ItemNoEditable;
                OnValidate=BEGIN
                             CheckItemText;  //DP00686
                             RecalcTotals;
                           END;

                OnLookup=BEGIN
                           IF HandleLookupItem(FIELDNO("Item No.")) THEN BEGIN
                             CurrPage.UPDATE(TRUE);
                           END ELSE BEGIN
                             IF ("Item No." <> xRec."Item No.") THEN BEGIN
                               CheckItemText;  //DP00686
                               IF (Quantity <> 0) THEN
                                 RecalcTotals;
                             END;
                           END;
                         END;
                          }

    { 1100528914;2;Field  ;
                SourceExpr=Manufacturer;
                Editable=ManufacturerEditable;
                OnLookup=BEGIN
                           GabiVendorRec.HandleVendorLookup(1, Manufacturer);
                         END;
                          }

    { 1100528913;2;Field  ;
                SourceExpr="Basic Item";
                Editable=BasicItemEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;

                OnLookup=BEGIN
                           IF HandleLookupItem(FIELDNO("Basic Item")) THEN
                             CurrPage.UPDATE(TRUE)
                           ELSE
                             IF ("Basic Item" <> xRec."Basic Item") AND
                                (Quantity <> 0)
                             THEN
                               RecalcTotals;
                         END;
                          }

    { 1100528912;2;Field  ;
                SourceExpr="Vendor (Trade Item)";
                Editable=VendorTradeItemEditable;
                OnLookup=VAR
                           lvItem@1100485000 : Code[20];
                         BEGIN
                           lvItem := "Vendor (Trade Item)";
                           GabiVendorRec.HandleVendorLookup(2, lvItem);
                           VALIDATE("Vendor (Trade Item)", lvItem);
                         END;
                          }

    { 1100528911;2;Field  ;
                SourceExpr="Trade Item";
                Editable=TradeItemEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;

                OnLookup=BEGIN
                           IF HandleLookupItem(FIELDNO("Trade Item")) THEN
                             CurrPage.UPDATE(TRUE)
                           ELSE
                             IF ("Trade Item" <> xRec."Trade Item") AND
                                (Quantity <> 0)
                             THEN
                               RecalcTotals;
                         END;

                OnAssistEdit=BEGIN
                               //db, 12-05-15
                               IF (HandleAssistEditItem(FIELDNO("Trade Item"))) THEN
                                 CurrPage.UPDATE(TRUE);
                             END;
                              }

    { 1100528918;2;Field  ;
                SourceExpr="Cost Object Labor";
                Editable=CostObjectLaborEditable;
                OnValidate=BEGIN
                             ProcessCostObject(1,0,"Cost Object Labor");
                             RecalcTotals;
                           END;

                OnLookup=BEGIN
                           ProcessCostObject(2,0,"Cost Object Labor");
                         END;
                          }

    { 1100528919;2;Field  ;
                SourceExpr="Cost Object Price";
                Editable=CostObjectPriceEditable;
                OnValidate=BEGIN
                             ProcessCostObject(1,1,"Cost Object Price");
                             RecalcTotals;
                           END;

                OnLookup=BEGIN
                           ProcessCostObject(2,1,"Cost Object Price");
                         END;
                          }

    { 1100528920;2;Field  ;
                SourceExpr="Cost Component";
                Visible=FALSE }

    { 1100528929;2;Field  ;
                SourceExpr=Code;
                Visible=FALSE;
                Editable=CodeEditable }

    { 1100528928;2;Field  ;
                SourceExpr=Description;
                Editable=DescriptionEditable }

    { 1100528927;2;Field  ;
                SourceExpr="Internal Text Block";
                Visible=FALSE;
                OnValidate=BEGIN
                             EditText(0);  //db, 12-11-09
                           END;
                            }

    { 1100528926;2;Field  ;
                SourceExpr="External Text Block";
                Visible=FALSE;
                OnValidate=BEGIN
                             EditText(1);  //db, 12-11-09
                           END;
                            }

    { 1100528925;2;Field  ;
                SourceExpr="Time Quantity";
                Visible=FALSE;
                Editable=TimeQuantityEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100528924;2;Field  ;
                SourceExpr="Unit of Time";
                Visible=FALSE;
                Editable=UnitOfTimeEditable }

    { 1100528923;2;Field  ;
                BlankZero=Yes;
                SourceExpr=Length;
                Visible=FALSE;
                Editable=LWHEditable }

    { 1100528922;2;Field  ;
                BlankZero=Yes;
                SourceExpr=Width;
                Visible=FALSE;
                Editable=LWHEditable }

    { 1100528921;2;Field  ;
                BlankZero=Yes;
                SourceExpr=Height;
                Visible=FALSE;
                Editable=LWHEditable }

    { 1100528939;2;Field  ;
                SourceExpr=Quantity;
                Editable=QuantityEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100528938;2;Field  ;
                Name=CumRcpFld;
                CaptionML=ENU=Total Quantity Recipe;
                SourceExpr=ROUND(Quantity * "Estimate Part Quantity");
                Visible=FALSE;
                Editable=FALSE }

    { 1100528937;2;Field  ;
                Name=CumEstFld;
                CaptionML=ENU=Total Quantity Estimate;
                BlankZero=Yes;
                SourceExpr=GetTotalQuantityEstimate;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528936;2;Field  ;
                SourceExpr="Unit of Measure";
                Editable=UnitOfMeasureEditable }

    { 1100528935;2;Field  ;
                SourceExpr="Ignore Recipe Quantity";
                Visible=FALSE;
                OnValidate=BEGIN
                             RecalcTotals;  //db, 15-09-11: M27731
                           END;
                            }

    { 1100528934;2;Field  ;
                SourceExpr="Line Status";
                Editable=LineStatusEditable }

    { 1100528933;2;Field  ;
                SourceExpr="Surcharge Type";
                Visible=FALSE;
                Editable=SurchargeTypeEditable }

    { 1100528932;2;Field  ;
                SourceExpr="Surcharge %";
                Visible=FALSE;
                Editable=SurchargePercEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;

                OnDrillDown=VAR
                              ChrgPag@1100485001 : Page 11229327;
                            BEGIN
                              ChrgRec.RESET;
                              ChrgRec.SETRANGE("Estimate No.", "Estimate No.");
                              ChrgRec.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
                              ChrgRec.SETRANGE("Part Group", "Part Group");
                              ChrgRec.SETRANGE(Part, Part);
                              ChrgRec.SETRANGE("Recipe Line", "Estimate Line");
                              ChrgRec.SETRANGE("Recipe Group", "Recipe Group");
                              ChrgRec.SETRANGE(Recipe, Recipe);
                              ChrgRec.SETRANGE("Surcharge Line", "Line No.");
                              ChrgPag.SETTABLEVIEW(ChrgRec);
                              ChrgPag.SetSelection(3);
                              ChrgPag.RUNMODAL;

                              RecalcTotals;
                              CurrPage.UPDATE(TRUE);
                            END;
                             }

    { 1100528931;2;Field  ;
                SourceExpr="Norm Group";
                Visible=FALSE;
                Editable=NormGroupEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100528930;2;Field  ;
                SourceExpr="Sub Operation Code";
                Visible=FALSE;
                Editable=SubOperationCodeEditable;
                OnValidate=BEGIN
                             ProcessSubOperation;

                             RecalcTotals;  //db, 13-06-05
                             IF "Sub Operation Code" <> '' THEN BEGIN
                               "Norm Agreement" := FALSE;
                               "Norm Agreement (Sales)" := FALSE;  //DP00381
                             END;
                           END;

                OnLookup=VAR
                           OperPag@1100485000 : Page 11012178;
                           OperRec@1100485001 : Record 11012166;
                         BEGIN
                           IF NOT FieldIsEditable(FIELDNO("Sub Operation Code")) THEN EXIT;  //db, 08-10-10: M22182

                           CLEAR(OperPag);
                           OperPag.LOOKUPMODE(TRUE);
                           OperPag.SetSelection(DATABASE::"Estimate Recipe Line","Estimate No.","Sub-Estimate No.",
                             Part,"Part Group","Estimate Line","Recipe Group",Recipe);

                           OperRec.Code := "Sub Operation Code";
                           OperPag.SETRECORD(OperRec);

                           IF OperPag.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             OperPag.GETRECORD(OperRec);
                             VALIDATE("Sub Operation Code", OperRec.Code);
                             ProcessSubOperation;  //db, 09-02-12: M32143
                             RecalcTotals;
                             UpdateEstLines;
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 1100528940;2;Field  ;
                SourceExpr=Norm;
                Editable=NormEditable;
                OnValidate=BEGIN
                             "Norm Agreement" := TRUE;
                             RecalcTotals;
                           END;

                OnLookup=BEGIN
                           //DP00381
                           IF HandleLookupOperationNorm(FALSE) THEN  //db, 10-02-15
                             CurrPage.UPDATE(TRUE)
                           ELSE
                             RecalcTotals;
                         END;
                          }

    { 1100528941;2;Field  ;
                CaptionML=ENU=Norm (minuts);
                SourceExpr=GetMinuts(0,0);
                Visible=FALSE;
                Editable=FALSE }

    { 1100528942;2;Field  ;
                SourceExpr="Production Rate";
                Visible=FALSE }

    { 1100528944;2;Field  ;
                SourceExpr="Norm (Plant)";
                Visible=FALSE }

    { 1100528947;2;Field  ;
                SourceExpr="Production Rate (Plant)";
                Visible=FALSE }

    { 1100528946;2;Field  ;
                SourceExpr="Hours (Plant)";
                Visible=FALSE }

    { 1100528945;2;Field  ;
                SourceExpr="Rate Code";
                Editable=RateCodeEditable;
                OnValidate=BEGIN
                             RecalcTotals;
                           END;
                            }

    { 1100528605;2;Field  ;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 1100525012;2;Field  ;
                SourceExpr="Currency Agreement";
                Visible=FALSE }

    { 1100528948;2;Field  ;
                SourceExpr="Cost Rate" }

    { 1100528601;2;Field  ;
                SourceExpr="Cost Rate (FCY)";
                Visible=FALSE }

    { 1100528951;2;Field  ;
                SourceExpr="Wage Component";
                Visible=FALSE;
                Editable=WageComponentEditable;
                OnValidate=BEGIN
                             RecalcTotals;  //DP00236
                           END;
                            }

    { 1100528950;2;Field  ;
                SourceExpr="Gross Price";
                Visible=FALSE;
                Editable=GrossPriceEditable;
                OnValidate=BEGIN
                             "Price Agreement" := TRUE;
                             RecalcTotals;
                           END;
                            }

    { 1100528602;2;Field  ;
                SourceExpr="Gross Price (FCY)";
                Visible=FALSE }

    { 1100528949;2;Field  ;
                SourceExpr="Purchase Discount %";
                Editable=PurchaseDiscountPercEditable;
                OnValidate=BEGIN
                             "Price Agreement" := TRUE;
                             RecalcTotals;
                           END;
                            }

    { 1100528952;2;Field  ;
                SourceExpr="Nett Cost Price";
                Editable=NettCostPriceEditable;
                OnValidate=BEGIN
                             "Price Agreement" := TRUE;
                             RecalcTotals;
                           END;
                            }

    { 1100528603;2;Field  ;
                SourceExpr="Nett Cost Price (FCY)";
                Visible=FALSE }

    { 1100528953;2;Field  ;
                SourceExpr="Buy Back Price";
                Visible=FALSE;
                Editable=BuyBackPriceEditable }

    { 1100528609;2;Field  ;
                SourceExpr="Buy Back Price (FCY)";
                Visible=FALSE }

    { 1100528954;2;Field  ;
                SourceExpr="Buy Back %";
                Visible=FALSE;
                Editable=BuyBackPercEditable }

    { 1100528955;2;Field  ;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE }

    { 1100528956;2;Field  ;
                SourceExpr=Hours;
                Visible=FALSE }

    { 1100528957;2;Field  ;
                SourceExpr="Labor Cost Amount" }

    { 1100528604;2;Field  ;
                SourceExpr="Labor Cost Amount (FCY)";
                Visible=FALSE }

    { 1100528958;2;Field  ;
                SourceExpr="Gross Amount" }

    { 1100528606;2;Field  ;
                SourceExpr="Gross Amount (FCY)";
                Visible=FALSE }

    { 1100528959;2;Field  ;
                SourceExpr="Nett Cost Amount";
                Visible=FALSE }

    { 1100528607;2;Field  ;
                SourceExpr="Nett Cost Amount (FCY)";
                Visible=FALSE }

    { 1100528960;2;Field  ;
                SourceExpr="Cost Amount" }

    { 1100528608;2;Field  ;
                SourceExpr="Cost Amount (FCY)";
                Visible=FALSE }

    { 1100528961;2;Field  ;
                SourceExpr="Price Reference Date";
                Visible=FALSE }

    { 1100528962;2;Field  ;
                SourceExpr="Norm Agreement";
                Visible=FALSE;
                Editable=NormAgreementEditable }

    { 1100528963;2;Field  ;
                SourceExpr="Price Agreement";
                Visible=FALSE;
                Editable=PriceAgreementEditable }

    { 1100528964;2;Field  ;
                SourceExpr="Ask for Quote";
                Visible=FALSE;
                Editable=AskForQuoteEditable }

    { 1100528965;2;Field  ;
                CaptionML=ENU=Quote No.;
                SourceExpr=RefQuote;
                Visible=FALSE;
                Editable=FALSE;
                OnLookup=VAR
                           lvPurchHeadRec@1100528900 : Record 38;
                         BEGIN
                           IF (RefQuote = '') OR ("Estimate No." = '') THEN
                             EXIT;

                           IF (COPYSTR(RefQuote, 1, 1) = '<') THEN  // IF Quote No. is '<Nr.>', then more than one quote present
                             RouteRefMgtCU.ShowReferenceQuoteList("Purchase Route Reference")
                           ELSE BEGIN
                             lvPurchHeadRec.SETRANGE("Document Type", lvPurchHeadRec."Document Type"::Quote);
                             lvPurchHeadRec.SETRANGE("No.", RefQuote);
                             PAGE.RUNMODAL(PAGE::"Purchase Quote", lvPurchHeadRec);
                           END;
                         END;
                          }

    { 1100528966;2;Field  ;
                SourceExpr="Purchase Route Reference";
                Visible=FALSE }

    { 1100528972;2;Field  ;
                SourceExpr="Document No.";
                Visible=FALSE;
                Editable=DocumentNoEditable }

    { 1100528971;2;Field  ;
                SourceExpr="Additional Cost";
                Visible=FALSE;
                Editable=AddionalCostEditable }

    { 1100528970;2;Field  ;
                SourceExpr=Vendor;
                Visible=FALSE;
                Editable=[VendorEditable ];
                OnValidate=BEGIN
                             CALCFIELDS("Vendor Name");
                           END;
                            }

    { 1100528969;2;Field  ;
                SourceExpr="Vendor Name";
                Visible=FALSE }

    { 1100528968;2;Field  ;
                SourceExpr=Subcontractor;
                Visible=FALSE;
                OnValidate=BEGIN
                             CALCFIELDS("Subcontractor Name");
                           END;
                            }

    { 1100528967;2;Field  ;
                SourceExpr="Subcontractor Name";
                Visible=FALSE }

    { 1100528973;2;Field  ;
                SourceExpr="Project No.";
                Visible=FALSE }

    { 1100528974;2;Field  ;
                SourceExpr=Element;
                Visible=FALSE }

    { 1100528975;2;Field  ;
                SourceExpr="Extension Contract";
                Visible=FALSE }

    { 1100528976;2;Field  ;
                SourceExpr="Project Planning Activity Code";
                Visible=FALSE }

    { 1100528600;2;Field  ;
                SourceExpr="Price History 0 Exists" }

    { 1100409004;2;Field  ;
                SourceExpr="Quantity Sheet Feature";
                OnValidate=BEGIN
                             //DP00686
                             CurrPage.SAVERECORD;
                             EstLineRec.CheckUpdateQuantityFromRelation("Estimate No.", "Sub-Estimate No.", "Part Group", Part);
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 1100525010;2;Field  ;
                SourceExpr="Scheme Code";
                Visible=FALSE }

    { 1100525008;2;Field  ;
                SourceExpr="Comments for Logistics";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      EstSetup@1100528927 : Record 11012150;
      EstRAWSetup@1100528926 : Record 11125673;
      EstRec@1100528925 : Record 11012151;
      EstLineRec@1100528924 : Record 11072072;
      RecipeRec@1100528923 : Record 11020581;
      RcpLineRec@1100528922 : Record 11072075;
      BaseRcpLineRec@1100528921 : Record 11020582;
      PartLineRec@1100528920 : Record 11072076;
      RateGroupRec@1100528919 : Record 11012162;
      EstRateRec@1100528918 : Record 11012160;
      BudgetRateRec@1100528917 : Record 11012000;
      ChrgRec@1100528916 : Record 11229771;
      GabiVendorRec@1100528915 : Record 11012304;
      SalesRcpLineRec@1100528974 : Record 11229789;
      RouteRefMgtCU@1100528914 : Codeunit 11012045;
      EstMgmt@1100528913 : Codeunit 11012232;
      chrg0@1100528912 : Boolean;
      chrg1@1100528911 : Boolean;
      chrg2@1100528910 : Boolean;
      chrg3@1100528909 : Boolean;
      chrg4@1100528908 : Boolean;
      chrg5@1100528907 : Boolean;
      gFromReference@1100528906 : Boolean;
      RefQuote@1100528905 : Code[20];
      BufferMgt@1100528904 : Codeunit 11012230;
      TotalRecipeCost@1100528903 : Decimal;
      TotalRecipeSales@1100528902 : Decimal;
      TotalRecipeGross@1100528901 : Decimal;
      ExpandRecipe@1100528900 : Boolean INDATASET;
      Text000@1100528931 : TextConst 'ENU=Adding not allowed: %1 is fixed.';
      Text001@1100528930 : TextConst 'ENU=Changing not allowed: %1 is fixed.';
      Text002@1100528929 : TextConst 'ENU=Deleting not allowed: %1 is fixed.';
      Text009@1100528928 : TextConst 'ENU=Add Line first.';
      NormPlantEditable@1100528932 : Boolean INDATASET;
      ProductionRatePlantEditable@1100528933 : Boolean INDATASET;
      HoursPlantEditable@1100528934 : Boolean INDATASET;
      DescriptionEditable@1100528935 : Boolean INDATASET;
      QuantityEditable@1100528936 : Boolean INDATASET;
      NormGroupEditable@1100528937 : Boolean INDATASET;
      CostTypePriceEditable@1100525000 : Boolean INDATASET;
      CostTypeHoursEditable@1100525001 : Boolean INDATASET;
      ManufacturerEditable@1100528938 : Boolean INDATASET;
      BasicItemEditable@1100528939 : Boolean INDATASET;
      VendorTradeItemEditable@1100528940 : Boolean INDATASET;
      TradeItemEditable@1100528941 : Boolean INDATASET;
      ItemNoEditable@1100528942 : Boolean INDATASET;
      UnitOfMeasureEditable@1100528943 : Boolean INDATASET;
      LineStatusEditable@1100528944 : Boolean INDATASET;
      SurchargeTypeEditable@1100528945 : Boolean INDATASET;
      SubOperationCodeEditable@1100528946 : Boolean INDATASET;
      NormEditable@1100528947 : Boolean INDATASET;
      RateCodeEditable@1100528948 : Boolean INDATASET;
      NettCostPriceEditable@1100528949 : Boolean INDATASET;
      GrossPriceEditable@1100528950 : Boolean INDATASET;
      CostObjectLaborEditable@1100528951 : Boolean INDATASET;
      CostObjectPriceEditable@1100528952 : Boolean INDATASET;
      CodeEditable@1100528953 : Boolean INDATASET;
      DocumentNoEditable@1100528954 : Boolean INDATASET;
      AskForQuoteEditable@1100528955 : Boolean INDATASET;
      PriceAgreementEditable@1100528956 : Boolean INDATASET;
      NormAgreementEditable@1100528957 : Boolean INDATASET;
      VendorEditable@1100528958 : Boolean INDATASET;
      AddionalCostEditable@1100528959 : Boolean INDATASET;
      SurchargePercEditable@1100528963 : Boolean;
      RecipeGroupChildEditable@1100528962 : Boolean;
      RecipeChildEditable@1100528964 : Boolean;
      SetCodeEditable@1100528965 : Boolean;
      PlantTypeEditable@1100528966 : Boolean;
      TimeQuantityEditable@1100528967 : Boolean;
      UnitOfTimeEditable@1100528968 : Boolean;
      LWHEditable@1100528969 : Boolean;
      WageComponentEditable@1100528970 : Boolean;
      PurchaseDiscountPercEditable@1100528971 : Boolean;
      BuyBackPriceEditable@1100528972 : Boolean;
      BuyBackPercEditable@1100528973 : Boolean;

    PROCEDURE GenerateCharge@4();
    BEGIN
      CreateCharge;
      RecalcTotals;
    END;

    PROCEDURE RecalcTotals@1();
    BEGIN
      IF Recipe = '' THEN EXIT;  //db, 21-05-15: DP00769

      CurrPage.SAVERECORD;
      CalculateTotals;
      CheckRecipeCharge;

      UpdateEstLines;
      CurrPage.UPDATE(FALSE); //db, 14-03-14: T004471
    END;

    PROCEDURE EnterQuantity@1210190003() : Boolean;
    BEGIN
      IF "Surcharge Type" <> "Surcharge Type"::" " THEN EXIT(FALSE);
      IF Length <> 0 THEN EXIT(FALSE);
      IF Width <> 0 THEN EXIT(FALSE);
      IF Height <> 0 THEN EXIT(FALSE);
      EXIT(TRUE);
    END;

    PROCEDURE EditText@8(lvType@1210190000 : 'intern,extern');
    VAR
      TextFrm@11012001 : Page 11012120;
    BEGIN
      IF "Line No." = 0 THEN
        ERROR(Text009);

      TextFrm.TextType(lvType);
      TextFrm.SetSelection(DATABASE::"Estimate Recipe Line","Estimate No.","Sub-Estimate No.",
        "Part Group",Part,"Recipe Group",Recipe,"Estimate Line","Line No.");

      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    PROCEDURE HandleZeroLines@1210190005();
    BEGIN
      SetFilterZeroLinesByUser(Rec);  //C025240
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE GetFilterZeroLines@1210190004(lvRefresh@1100525000 : Boolean);
    BEGIN
      GetFilterZeroLinesByUser(Rec);  //C025240
      IF lvRefresh THEN
        CurrPage.UPDATE;
    END;

    PROCEDURE ShowPurchRouteRef@1210190006();
    BEGIN
      RouteRefMgtCU.ShowReferenceList("Purchase Route Reference");
    END;

    PROCEDURE InitSelectionFromReference@1210190008(IRcpLineNo@1210190000 : Integer);
    BEGIN
      gFromReference := TRUE;
      SETRANGE("Line No.", IRcpLineNo);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE CopyToBuffer@1100485003();
    BEGIN
      RcpLineRec.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(RcpLineRec);  //db, 18-03-14
      BufferMgt.CopyToBuffer(1,EstLineRec,RcpLineRec,PartLineRec,BaseRcpLineRec,SalesRcpLineRec);
    END;

    PROCEDURE CopyFromBuffer@1100485002();
    BEGIN
      BufferMgt.CopyFromBuffer(1,EstLineRec,Rec,PartLineRec,BaseRcpLineRec,SalesRcpLineRec);
    END;

    PROCEDURE ShowBuffer@1100485001();
    BEGIN
      BufferMgt.ShowBuffer(1,EstLineRec,Rec,PartLineRec,BaseRcpLineRec,SalesRcpLineRec);
    END;

    PROCEDURE InsertPlantCostLines@1100525001();
    VAR
      Rec2@1100525000 : Record 11072075;
    BEGIN
      Rec2.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(Rec2);
      Rec2.SETFILTER(Rec2."Plant Type",'<>%1','');

      IF EstMgmt.InsPltCostItmLinesToEstRcpLine(Rec2) THEN
        CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE ExplodeSetLines@1100525002();
    VAR
      Rec2@1100525000 : Record 11072075;
    BEGIN
      Rec2.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(Rec2);
      Rec2.SETFILTER(Rec2."Set Code",'<>%1','');

      IF EstMgmt.ExplodeSetLinesToEstRcpLine(Rec2) THEN
        CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE FieldIsEditable@1100525008(FieldNo2@1100525000 : Integer) : Boolean;
    BEGIN
      EXIT(EstMgmt.EstRcpFieldIsEditable(FieldNo2,Rec));
    END;

    PROCEDURE EditDetailRecipeLine@1100528901();
    BEGIN
      //DP00381
      PAGE.RUNMODAL(PAGE::"Estimate Recipe Line Card", Rec);
    END;

    PROCEDURE HandleRecipeLevel@1100525000();
    BEGIN
      //DP00381
      IF ExpandRecipe THEN BEGIN
        SETRANGE("Recipe Level");
        ExpandRecipe := FALSE;
      END ELSE BEGIN
        SETRANGE("Recipe Level", 0);
        ExpandRecipe := TRUE;
      END;
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE SortRecipeLines@1210190010(VAR EstLineSort@1100528900 : 'SubEst,Part,Item,TradeItem,CostObject,CodingSystem,Recipe');
    BEGIN
      //db, 26-11-13 (DP00260: Estimate Lines MF NEW)
      SortLines(Rec, EstLineSort);
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE SetFilterLines@1100528902(EstFilter@1100528901 : Text[1024];SubEstFilter@1100528902 : Text[1024];PartFilter@1100528903 : Text[1024];CurrEst@1100528904 : Code[20];CurrSubEst@1100528905 : Code[20];CurrPartGrp@1100528908 : Code[20];CurrPart@1100528906 : Code[20];ShowLines@1100528907 : 'All,CurrLine');
    BEGIN
      //db, 26-11-13 (DP00260: Estimate Lines MF NEW)
      IF ShowLines = ShowLines::All THEN BEGIN
        IF EstFilter = '' THEN
          SETFILTER("Estimate No.", '<>%1', '')
        ELSE
          SETFILTER("Estimate No.", EstFilter);
        SETFILTER("Sub-Estimate No.", SubEstFilter);
        SETRANGE("Part Group");
        SETFILTER(Part, PartFilter);
      END ELSE BEGIN
        SETRANGE("Estimate No.", CurrEst);
        SETRANGE("Sub-Estimate No.", CurrSubEst);
        SETRANGE("Part Group", CurrPartGrp);
        SETRANGE(Part, CurrPart);
      END;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE SetFilterPrintDoc@1100485000(lvAction@1100485000 : Integer);
    VAR
      EstPartRec@1100485002 : Record 11072073;
      PrintDoc@1100485001 : Codeunit 229;
    BEGIN
      EstPartRec."Estimate No." := "Estimate No.";
      EstPartRec."Sub-Estimate No." := "Sub-Estimate No.";
      EstPartRec."Part Group" := "Part Group";
      EstPartRec.Part := Part;
      PrintDoc.PrintEstimateNEW(EstPartRec, lvAction);  //DP00381
    END;

    PROCEDURE ShowIndex@1100528900();
    VAR
      EstPartRec@1100485000 : Record 11072073;
    BEGIN
      EstPartRec.RESET;
      EstPartRec.SETRANGE("Estimate No.","Estimate No.");
      EstPartRec."Estimate No." := "Estimate No.";
      EstPartRec."Sub-Estimate No." := "Sub-Estimate No.";
      EstPartRec."Part Group" := "Part Group";
      EstPartRec.Part := Part;
      PAGE.RUNMODAL(PAGE::"Estimate Index",EstPartRec);
    END;

    PROCEDURE EditCommentLines@1100525015(ActivateLineTxt@1100409000 : Boolean);
    VAR
      UpdateMgt@1210190000 : Codeunit 11012229;
    BEGIN
      //DP00686
      IF ActivateLineTxt THEN
        UpdateMgt.EditCommentLines("Estimate No.","Sub-Estimate No.","Part Group",Part,"Estimate Line","Recipe Group",Recipe,"Line No.",0)
      ELSE
        UpdateMgt.EditCommentLines("Estimate No.","Sub-Estimate No.","Part Group",Part,"Estimate Line",'','',0,0);
    END;

    PROCEDURE InitEditable@1100525004();
    BEGIN
      //db, 01-07-14: T005104
      RecipeGroupChildEditable := TRUE;
      RecipeChildEditable := TRUE;
      SetCodeEditable := TRUE;
      PlantTypeEditable := TRUE;
      CostTypePriceEditable := TRUE;
      CostTypeHoursEditable := TRUE;  //db, 11-03-16
      ItemNoEditable := TRUE;
      ManufacturerEditable := TRUE;
      BasicItemEditable := TRUE;
      VendorTradeItemEditable := TRUE;
      TradeItemEditable := TRUE;
      CostObjectLaborEditable := TRUE;
      CostObjectPriceEditable := TRUE;
      CodeEditable := TRUE;
      LWHEditable := TRUE;
      TimeQuantityEditable := TRUE;
      UnitOfTimeEditable := TRUE;
      QuantityEditable := TRUE;
      UnitOfMeasureEditable := TRUE;
      SurchargeTypeEditable := TRUE;
      SurchargePercEditable := TRUE;
      NormGroupEditable := TRUE;
      SubOperationCodeEditable := TRUE;
      NormEditable := TRUE;
      RateCodeEditable := TRUE;
      WageComponentEditable := TRUE;
      GrossPriceEditable := TRUE;
      PurchaseDiscountPercEditable := TRUE;
      NettCostPriceEditable := TRUE;
    END;

    PROCEDURE CheckFieldsEditable@1100528906();
    BEGIN
      IF "Recipe Exploded" THEN  //DP00381
        RecipeGroupChildEditable := FALSE
      ELSE
        RecipeGroupChildEditable :=  FieldIsEditable(FIELDNO("Recipe Group (Child)"));

      IF "Recipe Exploded" THEN  //DP00381
        RecipeChildEditable := FALSE
      ELSE
        RecipeChildEditable := FieldIsEditable(FIELDNO("Recipe (Child)"));

      NormGroupEditable := FieldIsEditable(FIELDNO("Norm Group"));
      SetCodeEditable := FieldIsEditable(FIELDNO("Set Code"));
      PlantTypeEditable := FieldIsEditable(FIELDNO("Plant Type"));
      CostTypePriceEditable := FieldIsEditable(FIELDNO("Cost Type (Price)"));
      CostTypeHoursEditable := FieldIsEditable(FIELDNO("Cost Type (Hours)"));  //db, 11-03-16
      ManufacturerEditable := FieldIsEditable(FIELDNO(Manufacturer));
      ItemNoEditable := FieldIsEditable(FIELDNO("Item No."));
      BasicItemEditable := FieldIsEditable(FIELDNO("Basic Item"));
      VendorTradeItemEditable := FieldIsEditable(FIELDNO("Vendor (Trade Item)"));
      TradeItemEditable := FieldIsEditable(FIELDNO("Trade Item"));
      CostObjectLaborEditable := ("Recipe (Child)" = '');  //db, 30-01-15
      CostObjectPriceEditable := ("Recipe (Child)" = '');  //db, 30-01-15
      CodeEditable := FieldIsEditable(FIELDNO(Code));
      TimeQuantityEditable := FieldIsEditable(FIELDNO("Time Quantity"));
      UnitOfTimeEditable := FieldIsEditable(FIELDNO("Unit of Time"));
      LWHEditable := EnterQuantity(1);
      QuantityEditable := EnterQuantity(2);
      SurchargeTypeEditable := FieldIsEditable(FIELDNO("Surcharge Type"));
      SurchargePercEditable := FieldIsEditable(FIELDNO("Surcharge %"));
      SubOperationCodeEditable := FieldIsEditable(FIELDNO("Sub Operation Code"));
      NormEditable := FieldIsEditable(FIELDNO(Norm));
      RateCodeEditable := FieldIsEditable(FIELDNO("Rate Code"));
      WageComponentEditable := FieldIsEditable(FIELDNO("Wage Component"));  //DP00236
      GrossPriceEditable := FieldIsEditable(FIELDNO("Gross Price"));
      PurchaseDiscountPercEditable := FieldIsEditable(FIELDNO("Purchase Discount %"));
      NettCostPriceEditable := FieldIsEditable(FIELDNO("Nett Cost Price"));
      BuyBackPriceEditable := FieldIsEditable(FIELDNO("Buy Back Price"));
      BuyBackPercEditable :=FieldIsEditable(FIELDNO("Buy Back %"));
    END;

    PROCEDURE ActivateChildRecipe@1100525003();
    VAR
      RecipeRec@1100525000 : Record 11020581;
      RcpFrm@1100525001 : Page 11125071;
    BEGIN
      //db, 24-06-14
      IF "Recipe (Child)" = '' THEN EXIT;
      RecipeRec.RESET;
      RecipeRec.SETRANGE("Recipe Group", "Recipe Group (Child)");
      RecipeRec.SETRANGE("No.", "Recipe (Child)");
      RcpFrm.EDITABLE(FALSE);
      RcpFrm.SETTABLEVIEW(RecipeRec);
      RcpFrm.RUNMODAL;
    END;

    PROCEDURE ApplyFilterLineEstimate@1100409000(iEst@1100409002 : Code[20];iSubEst@1100409000 : Code[250];iPart@1100409001 : Code[250]);
    BEGIN
      //db, 24-07-14
      SETRANGE("Estimate No.", iEst);
      SETFILTER("Sub-Estimate No.", iSubEst);
      SETFILTER(Part, iPart);
      CurrPage.UPDATE;
    END;

    PROCEDURE CheckItemText@1100409001();
    BEGIN
      //DP00686
      CurrPage.SAVERECORD;
      CopyItemText;
    END;

    PROCEDURE ShowOfferAmount@1100525006();
    VAR
      EstPartRec@1100525000 : Record 11072073;
    BEGIN
      //db, 24-02-15
      EstPartRec.SETRANGE("Estimate No.","Estimate No.");
      EstPartRec."Estimate No." := "Estimate No.";
      EstPartRec."Sub-Estimate No." := "Sub-Estimate No.";
      EstPartRec."Part Group" := "Part Group";
      EstPartRec.Part := Part;
      PAGE.RUNMODAL(PAGE::"Estimate Offer Amount",EstPartRec);
    END;

    BEGIN
    {
      db, 02-02-15: CheckTimer cancelled (TimerInterval 1000->0);
      - changing lines (quantity, norm or price) results in RecalcTotals but deleting lines in Recipe does not
        recalculate Charges in Estimate Lines.
      - solved by UpdateTotals (codeunit UpdateMgt) after closing recipe, showing result in current Part.

      db, 21-05-15: DP00769
      - copy of page 11125323; List->ListPart; factbox removed; related information screened
    }
    END.
  }
}

