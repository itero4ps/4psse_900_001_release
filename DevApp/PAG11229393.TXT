OBJECT Page 11229393 Objects Chart (Stats)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Objects Chart (Statistics);
    SourceTable=Table11072203;
    PageType=ListPlus;
    OnInit=BEGIN
             PeriodType := PeriodType::Month;
             NoOfColumns := 12;

             DetermineMeasurementIndexes;
           END;

    OnOpenPage=BEGIN
                 GetUserDefaults;
                 Date."Period Start" := WORKDATE;
                 PeriodFormManagement.FindDate('=<', Date, PeriodType);
                 BaseDate := Date."Period Start";
               END;

    ActionList=ACTIONS
    {
      { 1100528615;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528614;1 ;Action    ;
                      CaptionML=ENU=Previous;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 PeriodFormManagement.FindDate('<', Date, PeriodType);
                                 BaseDate := Date."Period Start";
                                 UpdateChart;
                               END;
                                }
      { 1100528613;1 ;Action    ;
                      CaptionML=ENU=Next;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 PeriodFormManagement.FindDate('>', Date, PeriodType);
                                 BaseDate := Date."Period Start";
                                 UpdateChart;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100528612;;Container;
                ContainerType=ContentArea }

    { 1100528611;1;Group  ;
                CaptionML=ENU=General;
                GroupType=Group }

    { 1100528610;2;Field  ;
                CaptionML=ENU=Age Filter;
                SourceExpr=AgeFilter;
                OnValidate=BEGIN
                             UpdateChart;
                           END;
                            }

    { 1100528607;2;Field  ;
                CaptionML=ENU=Chart Type;
                OptionCaptionML=ENU=In Use Since,Cumulatief;
                SourceExpr=UserChartType;
                OnValidate=BEGIN
                             UpdateChart;
                           END;
                            }

    { 1100528603;1;Group  ;
                CaptionML=ENU=Diagram;
                GroupType=Group }

    { 1100528604;2;Field  ;
                Name=Chart;
                ControlAddIn=[Microsoft.Dynamics.Nav.Client.BusinessChart;PublicKeyToken=31bf3856ad364e35] }

    { 1100528602;1;Group  ;
                CaptionML=ENU=Options;
                GroupType=Group }

    { 1100528601;2;Field  ;
                CaptionML=ENU=View by;
                OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Period;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             PeriodFormManagement.FindDate('=<>', Date, PeriodType);
                             UpdateChart;
                           END;
                            }

    { 1100528600;2;Field  ;
                CaptionML=ENU=No. Of Periods;
                SourceExpr=NoOfColumns;
                OnValidate=BEGIN
                             IF NoOfColumns <= 0 THEN
                               ERROR(Text001);
                             UpdateChart;
                           END;
                            }

  }
  CODE
  {
    VAR
      BusinessChartBuffer@1100528602 : Record 485;
      Date@1100528601 : Record 2000000007;
      PeriodFormManagement@1100528600 : Codeunit 359;
      PeriodType@1100528603 : ',Week,Month,Quarter,Year';
      Text000@1100528614 : TextConst 'ENU=Day,Week,Month,Quarter,Year,Period';
      Text001@1100528613 : TextConst 'ENU=No. of Periods must be at least 1';
      TextNoOfObjects@1100528607 : TextConst 'ENU=Objects';
      BaseDate@1100528610 : Date;
      NoOfObjectsIndex@1100528609 : Integer;
      NoOfColumns@1100528611 : Integer;
      AgeFilter@1100528604 : Text;
      UserChartType@1100528605 : 'In Use Since,Cumulative';

    PROCEDURE UpdateChart@1100528601();
    VAR
      CompanyStats@1100528608 : Record 11072203;
      Date@1100528604 : Record 2000000007;
      Offset@1100528602 : Integer;
      ColumnName@1100528601 : Text[30];
      PeriodDate@1100528600 : Date;
      ChartType@1100528609 : Option;
    BEGIN
      WITH BusinessChartBuffer DO BEGIN
        Initialize;
        ChartType := "Chart Type"::Column;
        AddMeasure(TextNoOfObjects, NoOfObjectsIndex, "Data Type"::Decimal, ChartType);
        SetXAxis(GetPeriodTypeText(PeriodType), "Data Type"::String);

        Date."Period Start" := BaseDate;
        PeriodFormManagement.FindDate('=<>', Date, PeriodType);

        FOR Offset := 0 TO NoOfColumns -1 DO BEGIN
          IF Offset > 0 THEN
            PeriodFormManagement.NextDate(1, Date, PeriodType);
          PeriodDate := Date."Period Start";
          ColumnName := PeriodFormManagement.CreatePeriodFormat(PeriodType, Date."Period Start");

          AddColumn(ColumnName);

          CompanyStats.RESET;
          CompanyStats.SETRANGE("Reporting Date", "Reporting Date");
          IF AgeFilter <> '' THEN
            CompanyStats.SETFILTER("Age Filter", AgeFilter);
          CASE UserChartType OF
            UserChartType::"In Use Since":
              BEGIN
                CompanyStats.SETRANGE("Start Date Filter", Date."Period Start", Date."Period End");
              END;
            UserChartType::Cumulative:
              BEGIN
                CompanyStats.SETFILTER("Start Date Filter", '<=%1', Date."Period End");
                CompanyStats.SETFILTER("Ending Date Filter", '%1|>%2', 0D, Date."Period End");
              END;
          END;
          IF NOT CompanyStats.ISEMPTY THEN
            CompanyStats.FINDFIRST;
          CompanyStats.CALCFIELDS("No. of Objects");

          BusinessChartBuffer.SetValueByIndex(NoOfObjectsIndex -1, Offset, CompanyStats."No. of Objects");
        END;
        Update(CurrPage.Chart);
      END;
    END;

    PROCEDURE GetPeriod@1100528604(IOffset@1100528600 : Integer;VAR ODate@1100528601 : Record 2000000007);
    BEGIN
      ODate."Period Start" := BaseDate;
      PeriodFormManagement.FindDate('=<>', ODate, PeriodType);
      IF IOffset <> 0 THEN
        PeriodFormManagement.NextDate(IOffset, ODate, PeriodType);
    END;

    PROCEDURE GetPeriodTypeText@1100528610(IPeriodType@1100528600 : Option) PeriodTypeText : Text;
    VAR
      OptionFieldTools@1100528601 : Codeunit 11012271;
    BEGIN
      OptionFieldTools.OptionValueToReadableOption(Text000, IPeriodType, PeriodTypeText);
    END;

    PROCEDURE DetermineMeasurementIndexes@1100528611();
    BEGIN
      NoOfObjectsIndex := 1;
    END;

    PROCEDURE GetUserDefaults@1100528600();
    VAR
      UserDefaultsStats@1100528600 : Record 11072218;
      PeriodFilter@1100528601 : Text;
    BEGIN
      UserDefaultsStats.GetUserDefaults(PeriodType, PeriodFilter, AgeFilter);
    END;

    PROCEDURE ShowObjects@1100528602(IOffset@1100528600 : Integer;IType@1100528601 : 'Objects');
    VAR
      ServiceObjectStats@1100528602 : Record 11072201;
    BEGIN
      GetPeriod(IOffset, Date);
      ServiceObjectStats.SETRANGE("Reporting Date", "Reporting Date");
      IF AgeFilter <> '' THEN
        ServiceObjectStats.SETFILTER(Age, AgeFilter);
      CASE UserChartType OF
        UserChartType::"In Use Since":
          BEGIN
            ServiceObjectStats.SETRANGE("In use since", Date."Period Start", Date."Period End");
          END;
        UserChartType::Cumulative:
          BEGIN
            ServiceObjectStats.SETFILTER("In use since", '<=%1', Date."Period End");
            ServiceObjectStats.SETFILTER("Ending Date", '%1|>%2', 0D, Date."Period End");
          END;
      END;
      CASE IType OF
        IType::Objects:
          PAGE.RUNMODAL(0, ServiceObjectStats);
      END;
    END;

    EVENT Chart@-1100528604::DataPointClicked@1(point@1100528600 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    VAR
      DrillDownIndex@1100528601 : Integer;
    BEGIN
      BusinessChartBuffer.SetDrillDownIndexes(point);
      DrillDownIndex := BusinessChartBuffer."Drill-Down X Index";
      CASE BusinessChartBuffer."Drill-Down Measure Index" +1 OF
        NoOfObjectsIndex:
          ShowObjects(DrillDownIndex, 0);
      END;
    END;

    EVENT Chart@-1100528604::DataPointDoubleClicked@2(point@1100528600 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
    END;

    EVENT Chart@-1100528604::AddInReady@3();
    BEGIN
      UpdateChart;
    END;

    BEGIN
    END.
  }
}

