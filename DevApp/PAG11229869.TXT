OBJECT Page 11229869 Temp Plant Insp. Lines
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Inspection Lines;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table11072684;
    DataCaptionExpr=SetDataCaptionExpr;
    PageType=List;
    SourceTableTemporary=Yes;
    OnAfterGetRecord=BEGIN
                       Cancelled :=
                         IsCancelled(
                           SourceLevel, SourcePlantType, SourceLevelCode, SourceMaintenanceScheme, SourceBaseInspectionList, SourceIndexDate, CancellationLevel);
                       DescriptionOnFormat;
                     END;

  }
  CONTROLS
  {
    { 1100528600;0;Container;
                ContainerType=ContentArea }

    { 1100528601;1;Group  ;
                Name=Group;
                IndentationColumnName=DescriptionIndentationValue;
                IndentationControls=Description;
                GroupType=Repeater }

    { 1100528800;2;Field  ;
                SourceExpr=Level }

    { 1100528801;2;Field  ;
                SourceExpr="Plant Type" }

    { 1100528802;2;Field  ;
                SourceExpr="Level Code" }

    { 1100528605;2;Field  ;
                SourceExpr="Index Date" }

    { 1100528607;2;Field  ;
                SourceExpr=Type }

    { 1100528608;2;Field  ;
                SourceExpr="Inspection Code" }

    { 1100528609;2;Field  ;
                SourceExpr=Description;
                Style=Strong;
                StyleExpr=DescriptionEmphasize }

    { 1100528610;2;Field  ;
                SourceExpr="Field Type" }

    { 1100528611;2;Field  ;
                SourceExpr="Unit Of Measure" }

    { 1100528612;2;Field  ;
                SourceExpr=Mandatory }

    { 1100528613;2;Field  ;
                CaptionML=ENU=Cancelled;
                SourceExpr=Cancelled;
                Editable=CancelledEditable;
                OnValidate=BEGIN
                             IF (SourceLevel = 0) OR ((CancellationLevel <> SourceLevel) AND NOT Cancelled) OR (SourceLevel = Level) THEN
                               ERROR(Text000);

                             IF (CancellationLevel = CancellationLevel::" ") OR NOT Cancelled THEN BEGIN
                             SetAsCancelled(Cancelled, SourceLevel, SourcePlantType, SourceLevelCode, SourceMaintenanceScheme,
                               SourceBaseInspectionList, SourceIndexDate);
                             Cancelled :=
                               IsCancelled(
                                SourceLevel, SourcePlantType, SourceLevelCode, SourceMaintenanceScheme, SourceBaseInspectionList,
                                SourceIndexDate, CancellationLevel);
                             END;
                           END;
                            }

    { 1100528614;2;Field  ;
                CaptionML=ENU=Cancellation Level;
                OptionCaptionML=ENU=" ,Plant Type,Plant Number";
                SourceExpr=CancellationLevel;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      Cancelled@1100528608 : Boolean;
      CancellationLevel@1100528607 : ' ,Base Inspection List,Plant Type,Plant Number';
      CancelledEditable@1100528610 : Boolean INDATASET;
      SourceLevel@1100528606 : Option;
      SourcePlantType@1100528605 : Code[20];
      SourceLevelCode@1100528604 : Code[20];
      SourceMaintenanceScheme@1100528603 : Code[20];
      SourceBaseInspectionList@1100528602 : Code[20];
      SourceIndexDate@1100528601 : Date;
      DescriptionEmphasize@1100528609 : Boolean INDATASET;
      DescriptionIndentationValue@1100528600 : Integer INDATASET;
      Text000@1100528800 : TextConst 'ENU=Not allowed on this level.';

    PROCEDURE ShowOptionValues@1100528601();
    VAR
      BasePlantInspectionOption@1100528600 : Record 11072681;
      BasePlantInspectionOptionPAGE@1100528601 : Page 11229865;
    BEGIN
      TESTFIELD("Field Type", "Field Type"::Option);
      BasePlantInspectionOption.SETRANGE("Base Inspection Line Code", "Inspection Code");
      BasePlantInspectionOptionPAGE.SETTABLEVIEW(BasePlantInspectionOption);
      BasePlantInspectionOptionPAGE.EDITABLE := FALSE;
      BasePlantInspectionOptionPAGE.RUNMODAL;
    END;

    PROCEDURE SetSource@1210190000(ILevel@1210190000 : 'Base Inspection List,Plant Type,Plant Number';IPlantType@1100528601 : Code[20];ILevelCode@1210190004 : Code[20];IMaintenanceScheme@1100528602 : Code[20];IBaseInspectionList@1100528603 : Code[20];IIndexDate@1100528600 : Date;IncludeCancelled@1100528800 : Boolean;ICancelledEditable@1100528801 : Boolean);
    VAR
      PlantMaintenanceManagement@1210190001 : Codeunit 11012872;
      LineCounter@1210190002 : Integer;
    BEGIN
      RESET;
      DELETEALL;

      PlantMaintenanceManagement.GetApplicableInspectionLines(Rec, ILevel, IPlantType, ILevelCode, IMaintenanceScheme, IIndexDate, IBaseInspectionList, IncludeCancelled);
      SourceLevel := ILevel;
      SourcePlantType := IPlantType;
      SourceLevelCode := ILevelCode;
      SourceMaintenanceScheme := IMaintenanceScheme;
      SourceIndexDate := IIndexDate;
      SourceBaseInspectionList := IBaseInspectionList;
      CancelledEditable := ICancelledEditable;

      IF ILevel = ILevel::"Base Inspection List" THEN
        CancelledEditable := FALSE;

      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      DescriptionEmphasize := FALSE;
      DescriptionIndentationValue := 0;
      IF Type = Type::Group THEN
        DescriptionEmphasize := TRUE
      ELSE
        DescriptionIndentationValue := 1;
    END;

    LOCAL PROCEDURE SetDataCaptionExpr@1100528801() : Text;
    VAR
      on@1100528800 : TextConst 'ENU=On';
    BEGIN
      EXIT(on + ' ' + FORMAT(SourceIndexDate));
    END;

    BEGIN
    END.
  }
}

