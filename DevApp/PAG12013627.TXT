OBJECT Page 12013627 Block User
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF400000;
  }
  PROPERTIES
  {
    CaptionML=ENU=Block User;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table12013641;
    PageType=Card;
    RefreshOnActivate=Yes;
    OnOpenPage=BEGIN
                 BlockText := STRSUBSTNO(EXF01, GETFILTER("User ID"));
               END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100285001;1;Group  ;
                CaptionML=ENU=Block User:;
                GroupType=Group }

    { 1100285003;2;Field  ;
                SourceExpr=BlockText;
                Editable=FALSE }

    { 1100285000;2;Field  ;
                NotBlank=Yes;
                SourceExpr=NewUser;
                TableRelation="EX User Company"."User ID" WHERE (Blocked=CONST(No));
                OnValidate=BEGIN
                             IF NewUser = GETFILTER("User ID") THEN
                               ERROR(EXF03)
                             ELSE
                               BEGIN
                                 UserComp.GET( NewUser);

                                 IF UserComp.Blocked THEN
                                   ERROR(EXF03);
                               END;
                           END;
                            }

    { 1100285002;2;Field  ;
                CaptionML=ENU=Replace History;
                SourceExpr=ReplaceHistory }

    { 1100285004;2;Field  ;
                CaptionML=ENU=Replace Template and Coding Rules;
                SourceExpr=ReplaceTempCodeRules }

  }
  CODE
  {
    VAR
      UserComp@1100285004 : Record 12013641;
      BlockText@1100285000 : Text[100];
      EXF01@1100285001 : TextConst 'ENU=Replace blocked User %1 with User';
      NewUser@1100285002 : Code[50];
      EXF03@1100285007 : TextConst 'ENU=Blocked User not allowed!';
      ReplaceHistory@1100285005 : Boolean;
      ReplaceTempCodeRules@1100285006 : Boolean;

    PROCEDURE GetNewUser@1100285000() : Code[50];
    BEGIN
      EXIT(NewUser);
    END;

    PROCEDURE GetReplaceHistory@1100285001() : Boolean;
    BEGIN
      EXIT(ReplaceHistory);
    END;

    PROCEDURE GetReplaceTempCodeRules@1100285002() : Boolean;
    BEGIN
      EXIT(ReplaceTempCodeRules);
    END;

    BEGIN
    END.
  }
}

