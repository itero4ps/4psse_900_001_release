OBJECT Page 12013664 EX Coding Rule Lines
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF348000,4PS;
  }
  PROPERTIES
  {
    CaptionML=ENU=ExFlow Coding Rule Lines;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table12013663;
    PageType=List;
    OnOpenPage=BEGIN
                 LocalExpression := '';
               END;

    OnAfterGetRecord=BEGIN
                       UpdateLocalExpression;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100285000;1;Group  ;
                GroupType=Repeater }

    { 1100285005;2;Field  ;
                SourceExpr="Column Code";
                Enabled=TRUE;
                Editable=FALSE }

    { 1100285009;2;Field  ;
                SourceExpr=All;
                OnValidate=BEGIN
                             UpdateLocalExpression;
                           END;
                            }

    { 1100285011;2;Field  ;
                SourceExpr=Empty;
                OnValidate=BEGIN
                             EmptyOnAfterValidate;
                           END;
                            }

    { 1100285001;2;Field  ;
                SourceExpr="Text Range";
                OnValidate=BEGIN
                             TextRangeOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           EXIT(LookUpExFlow(Text));
                         END;
                          }

    { 1100285007;2;Field  ;
                SourceExpr="Column ID";
                Editable=FALSE }

  }
  CODE
  {
    VAR
      GeneralLedgerSetup@1100285002 : Record 98;
      LocalExpression@1100285000 : Text[250];

    PROCEDURE LookUpExFlow@1100285000(VAR Text@1100285000 : Text[1024]) : Boolean;
    VAR
      Dim1List@1100285001 : Page 560;
      AccountList@1100285002 : Page 18;
      Account@1100285003 : Record 15;
      Item@1100285004 : Record 27;
      DimValue@1100285010 : Record 349;
      ItemList@1100285008 : Page 31;
      FixedList@1100285007 : Page 5601;
      FixedAsset@1100285011 : Record 5600;
      ChargeList@1100285006 : Page 5800;
      Charge@1100285012 : Record 5800;
      JobList@1100285005 : Page 11072004;
      Job@1100285013 : Record 11072003;
      ExFlowSEMgt@1100285014 : Codeunit 12013598;
    BEGIN
      GeneralLedgerSetup.GET;

      CASE "Column Source" OF
        'G_LACCOUNT' :
          BEGIN
            CLEAR(AccountList);
            AccountList.LOOKUPMODE(TRUE);
            AccountList.SETTABLEVIEW(Account);
            IF AccountList.RUNMODAL = ACTION::LookupOK THEN
              BEGIN
                AccountList.GETRECORD(Account);
                Text := Text + AccountList.GetSelectionFilter;
                "Text Range" := "Text Range" + AccountList.GetSelectionFilter;
                CurrPage.UPDATE(TRUE);
                EXIT(TRUE);
              END
            ELSE
              EXIT(FALSE);
          END;

        'DIM1':
          BEGIN
            CLEAR(Dim1List);
            Dim1List.LOOKUPMODE(TRUE);
            DimValue.RESET;
            DimValue.SETRANGE("Dimension Code", GeneralLedgerSetup."Shortcut Dimension 1 Code");
            Dim1List.SETTABLEVIEW(DimValue);
            IF Dim1List.RUNMODAL = ACTION::LookupOK THEN
              BEGIN
                Dim1List.GETRECORD(DimValue);
                Text := Text + DimValue.Code;
                "Text Range" := "Text Range"  + DimValue.Code;
                CurrPage.UPDATE(TRUE);
                EXIT(TRUE);
              END
            ELSE
              EXIT(FALSE);
          END;

        'DIM2':
          BEGIN
            CLEAR(Dim1List);
            Dim1List.LOOKUPMODE(TRUE);
            DimValue.RESET;
            DimValue.SETRANGE("Dimension Code", GeneralLedgerSetup."Shortcut Dimension 2 Code");
            Dim1List.SETTABLEVIEW(DimValue);
            IF Dim1List.RUNMODAL = ACTION::LookupOK THEN
              BEGIN
                Dim1List.GETRECORD(DimValue);
                Text := Text + DimValue.Code;
                "Text Range" := "Text Range"  + DimValue.Code;
                CurrPage.UPDATE(TRUE);
                EXIT(TRUE);
              END
            ELSE
              EXIT(FALSE);
          END;

        'DIM3':
          BEGIN
            CLEAR(Dim1List);
            Dim1List.LOOKUPMODE(TRUE);
            DimValue.RESET;
            DimValue.SETRANGE("Dimension Code", GeneralLedgerSetup."Shortcut Dimension 3 Code");
            Dim1List.SETTABLEVIEW(DimValue);
            IF Dim1List.RUNMODAL = ACTION::LookupOK THEN
              BEGIN
                Dim1List.GETRECORD(DimValue);
                Text := Text + DimValue.Code;
                "Text Range" := "Text Range"  + DimValue.Code;
                CurrPage.UPDATE(TRUE);
                EXIT(TRUE);
              END
            ELSE
              EXIT(FALSE);
          END;

        'DIM4':
          BEGIN
            CLEAR(Dim1List);
            Dim1List.LOOKUPMODE(TRUE);
            DimValue.RESET;
            DimValue.SETRANGE("Dimension Code", GeneralLedgerSetup."Shortcut Dimension 4 Code");
            Dim1List.SETTABLEVIEW(DimValue);
            IF Dim1List.RUNMODAL = ACTION::LookupOK THEN
              BEGIN
                Dim1List.GETRECORD(DimValue);
                Text := Text + DimValue.Code;
                "Text Range" := "Text Range"  + DimValue.Code;
                CurrPage.UPDATE(TRUE);
                EXIT(TRUE);
              END
            ELSE
              EXIT(FALSE);
          END;

        'DIM5':
          BEGIN
            CLEAR(Dim1List);
            Dim1List.LOOKUPMODE(TRUE);
            DimValue.RESET;
            DimValue.SETRANGE("Dimension Code", GeneralLedgerSetup."Shortcut Dimension 5 Code");
            Dim1List.SETTABLEVIEW(DimValue);
            IF Dim1List.RUNMODAL = ACTION::LookupOK THEN
              BEGIN
                Dim1List.GETRECORD(DimValue);
                Text := Text + DimValue.Code;
                "Text Range" := "Text Range"  + DimValue.Code;
                CurrPage.UPDATE(TRUE);
                EXIT(TRUE);
              END
            ELSE
              EXIT(FALSE);
          END;

        'DIM6':
          BEGIN
            CLEAR(Dim1List);
            Dim1List.LOOKUPMODE(TRUE);
            DimValue.RESET;
            DimValue.SETRANGE("Dimension Code", GeneralLedgerSetup."Shortcut Dimension 6 Code");
            Dim1List.SETTABLEVIEW(DimValue);
            IF Dim1List.RUNMODAL = ACTION::LookupOK THEN
              BEGIN
                Dim1List.GETRECORD(DimValue);
                Text := Text + DimValue.Code;
                "Text Range" := "Text Range"  + DimValue.Code;
                CurrPage.UPDATE(TRUE);
                EXIT(TRUE);
              END
            ELSE
              EXIT(FALSE);
          END;

        'DIM7':
          BEGIN
            CLEAR(Dim1List);
            Dim1List.LOOKUPMODE(TRUE);
            DimValue.RESET;
            DimValue.SETRANGE("Dimension Code", GeneralLedgerSetup."Shortcut Dimension 7 Code");
            Dim1List.SETTABLEVIEW(DimValue);
            IF Dim1List.RUNMODAL = ACTION::LookupOK THEN
              BEGIN
                Dim1List.GETRECORD(DimValue);
                Text := Text + DimValue.Code;
                "Text Range" := "Text Range"  + DimValue.Code;
                CurrPage.UPDATE(TRUE);
                EXIT(TRUE);
              END
            ELSE
              EXIT(FALSE);
          END;

        'DIM8':
          BEGIN
            CLEAR(Dim1List);
            Dim1List.LOOKUPMODE(TRUE);
            DimValue.RESET;
            DimValue.SETRANGE("Dimension Code", GeneralLedgerSetup."Shortcut Dimension 8 Code");
            Dim1List.SETTABLEVIEW(DimValue);
            IF Dim1List.RUNMODAL = ACTION::LookupOK THEN
              BEGIN
                Dim1List.GETRECORD(DimValue);
                Text := Text + DimValue.Code;
                "Text Range" := "Text Range"  + DimValue.Code;
                CurrPage.UPDATE(TRUE);
                EXIT(TRUE);
              END
            ELSE
              EXIT(FALSE);
          END;

        'ITEM':
          BEGIN
            CLEAR(ItemList);
            ItemList.LOOKUPMODE(TRUE);
            Item.RESET;
            ItemList.SETTABLEVIEW(Item);
            IF ItemList.RUNMODAL = ACTION::LookupOK THEN
              BEGIN
                ItemList.GETRECORD(Item);
                Text := Text + Item."No.";
                "Text Range" := "Text Range"  + Item."No.";
                CurrPage.UPDATE(TRUE);
                EXIT(TRUE);
              END
            ELSE
              EXIT(FALSE);
          END;

        'FIXEDASSET':
          BEGIN
            CLEAR(FixedList);
            FixedList.LOOKUPMODE(TRUE);
            FixedAsset.RESET;
            FixedList.SETTABLEVIEW(FixedAsset);
            IF FixedList.RUNMODAL = ACTION::LookupOK THEN
              BEGIN
                FixedList.GETRECORD(FixedAsset);
                Text := Text + FixedAsset."No.";
                "Text Range" := "Text Range"  + FixedAsset."No.";
                CurrPage.UPDATE(TRUE);
                EXIT(TRUE);
              END
            ELSE
              EXIT(FALSE);
          END;

        'CHARGE':
          BEGIN
            CLEAR(ChargeList);
            ChargeList.LOOKUPMODE(TRUE);
            Charge.RESET;
            ChargeList.SETTABLEVIEW(Charge);
            IF ChargeList.RUNMODAL = ACTION::LookupOK THEN
              BEGIN
                ChargeList.GETRECORD(Charge);
                Text := Text + Charge."No.";
                "Text Range" := "Text Range"  + Charge."No.";
                CurrPage.UPDATE(TRUE);
                EXIT(TRUE);
              END
            ELSE
              EXIT(FALSE);
          END;

        'JOB':
          BEGIN
            CLEAR(JobList);
            JobList.LOOKUPMODE(TRUE);
            Job.RESET;
            JobList.SETTABLEVIEW(Job);
            IF JobList.RUNMODAL = ACTION::LookupOK THEN
              BEGIN
                JobList.GETRECORD(Job);
                Text := Text + Job."No.";
                "Text Range" := "Text Range"  + Job."No.";
                CurrPage.UPDATE(TRUE);
                EXIT(TRUE);
              END
            ELSE
              EXIT(FALSE);
          END;

        'PERCODE' :
          BEGIN
            IF ExFlowSEMgt.PerCodeLookup(Rec,Text) THEN BEGIN
              CurrPage.UPDATE(TRUE);
              EXIT(TRUE);
            END
            ELSE
              EXIT(FALSE);
          END;
      END;

      EXIT(FALSE);
    END;

    PROCEDURE UpdateLocalExpression@1100285001();
    VAR
      Rule@1100285000 : Record 12013660;
    BEGIN
      Rule.GET(COMPANYNAME, ID);
      LocalExpression := Rule.Expression;
    END;

    LOCAL PROCEDURE EmptyOnAfterValidate@19072933();
    BEGIN
      UpdateLocalExpression;
    END;

    LOCAL PROCEDURE TextRangeOnAfterValidate@19054474();
    BEGIN
      UpdateLocalExpression;
    END;

    BEGIN
    END.
  }
}

