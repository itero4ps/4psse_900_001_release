OBJECT Page 1230 SEPA Direct Debit Mandates
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW18.00,4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=SEPA Direct Debit Mandates;
    SourceTable=Table1230;
    DataCaptionFields=ID,Customer No.,Customer Bank Account Code;
    PageType=List;
    OnClosePage=BEGIN
                  //**4PS.sn
                  CheckDates;
                  //**4PS.en
                END;

    OnAfterGetRecord=BEGIN
                       //**4PS.sn
                       SetRegisterExternalDocument();
                       //**4PS.en
                     END;

    OnNewRecord=BEGIN
                  IF "Customer No." = '' THEN
                    IF GETFILTER("Customer No.") <> '' THEN
                      VALIDATE("Customer No.",GETRANGEMIN("Customer No."));
                  IF "Customer Bank Account Code" = '' THEN
                    IF GETFILTER("Customer Bank Account Code") <> '' THEN
                      VALIDATE("Customer Bank Account Code",GETRANGEMIN("Customer Bank Account Code"));

                  FillDefaultMandateForFields(); //**4PS.n DP00640 (SEPA-2)
                END;

    OnAfterGetCurrRecord=BEGIN
                           //**4PS.sn
                           SetRegisterExternalDocument();
                           //**4PS.en
                         END;

    ActionList=ACTIONS
    {
      { 1100529003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100529002;1 ;ActionGroup;
                      CaptionML=ENU=Mandate }
      { 1100529001;2 ;Action    ;
                      CaptionML=ENU=&Documents;
                      Image=Documents;
                      OnAction=VAR
                                 RecRef@1100525001 : RecordRef;
                                 DocumentFilters@1100525002 : Codeunit 11012432;
                               BEGIN
                                 //**4PS.sn
                                 TESTFIELD(ID);
                                 RecRef.GETTABLE(Rec);
                                 DocumentFilters.CreateTempFilterAndExecute1(RecRef, '', FALSE, TRUE);
                                 //**4PS.en
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                SourceExpr=ID }

    { 4   ;2   ;Field     ;
                SourceExpr="Customer No.";
                Visible=FALSE }

    { 5   ;2   ;Field     ;
                SourceExpr="Customer Bank Account Code" }

    { 6   ;2   ;Field     ;
                SourceExpr="Valid From" }

    { 7   ;2   ;Field     ;
                SourceExpr="Valid To" }

    { 8   ;2   ;Field     ;
                SourceExpr="Date of Signature" }

    { 9   ;2   ;Field     ;
                SourceExpr="Type of Payment" }

    { 1100529004;2;Field  ;
                SourceExpr="Mandate for" }

    { 1100529005;2;Field  ;
                SourceExpr="No. Mandate for" }

    { 11  ;2   ;Field     ;
                SourceExpr="Expected Number of Debits" }

    { 12  ;2   ;Field     ;
                SourceExpr="Debit Counter" }

    { 10  ;2   ;Field     ;
                SourceExpr=Blocked }

    { 16  ;2   ;Field     ;
                SourceExpr=Closed }

    { 13  ;0   ;Container ;
                ContainerType=FactBoxArea }

    { 1100529000;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                Enabled=RegisterExtDocFBEnabled;
                PartType=Page }

    { 14  ;1   ;Part      ;
                PartType=System;
                SystemPartID=RecordLinks }

    { 15  ;1   ;Part      ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      RegisterExtDocFBEnabled@1100529000 : Boolean INDATASET;
      Text11012000@1100528600 : TextConst 'ENU=Notice: Field ''%1'' not given for every line';

    LOCAL PROCEDURE SetRegisterExternalDocument@19077479();
    VAR
      RecRef@1100528700 : RecordRef;
    BEGIN
      //**4PS
      RegisterExtDocFBEnabled := (ID <> '');
      RecRef.GETTABLE(Rec);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(TRUE);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode('');
    END;

    PROCEDURE FillDefaultMandateForFields@1100409000();
    VAR
      DirectDebitMandate@1100409000 : Record 1230;
      Project@1100409001 : Record 11072003;
      ServContr@1100409002 : Record 11012812;
      ServOrder@1100409003 : Record 11012823;
      NoMandateFor@1100409004 : Code[20];
    BEGIN
      //**4PS DP00640 (SEPA-2)
      IF ("Customer No." = '') OR (GETFILTER("Mandate for Filter") = '') OR (GETFILTER("No. Mandate for Filter") = '') THEN
        EXIT;
      IF STRLEN(GETFILTER("No. Mandate for Filter")) > MAXSTRLEN("No. Mandate for Filter") THEN
        EXIT;
      NoMandateFor := GETFILTER("No. Mandate for Filter");

      DirectDebitMandate.SETRANGE("Mandate for Filter", "Mandate for Filter"::Project);
      IF GETFILTER("Mandate for Filter") = DirectDebitMandate.GETFILTER("Mandate for Filter") THEN BEGIN
        "Mandate for" := "Mandate for"::Project;
        IF Project.GET(NoMandateFor) THEN BEGIN
          IF CheckNoMandateForCustLink("Mandate for", NoMandateFor, FALSE) THEN
            "No. Mandate for" := NoMandateFor;
        END;
        EXIT;
      END;

      DirectDebitMandate.SETRANGE("Mandate for Filter", "Mandate for Filter"::ServiceContract);
      IF GETFILTER("Mandate for Filter") = DirectDebitMandate.GETFILTER("Mandate for Filter") THEN BEGIN
        "Mandate for" := "Mandate for"::ServiceContract;
        IF ServContr.GET(NoMandateFor) THEN BEGIN
          IF CheckNoMandateForCustLink("Mandate for", NoMandateFor, FALSE) THEN
            "No. Mandate for" := NoMandateFor;
        END;
        EXIT;
      END;

      DirectDebitMandate.SETRANGE("Mandate for Filter", "Mandate for Filter"::ServiceOrder);
      IF GETFILTER("Mandate for Filter") = DirectDebitMandate.GETFILTER("Mandate for Filter") THEN BEGIN
        "Mandate for" := "Mandate for"::ServiceOrder;
        IF ServOrder.GET(NoMandateFor) THEN BEGIN
          IF CheckNoMandateForCustLink("Mandate for", NoMandateFor, FALSE) THEN
            "No. Mandate for" := NoMandateFor;
        END;
        EXIT;
      END;
    END;

    LOCAL PROCEDURE CheckDates@1100528600();
    VAR
      SEPADirectDebitMandate@1100528600 : Record 1230;
    BEGIN
      //**4PS
      IF NOT GUIALLOWED THEN
        EXIT;
      SEPADirectDebitMandate.COPY(Rec);
      SEPADirectDebitMandate.SETRANGE(Blocked, FALSE);
      SEPADirectDebitMandate.SETRANGE(Closed, FALSE);
      SEPADirectDebitMandate.SETRANGE("Valid From", 0D);
      IF NOT SEPADirectDebitMandate.ISEMPTY THEN
        MESSAGE(Text11012000, SEPADirectDebitMandate.FIELDCAPTION("Valid From"));
      SEPADirectDebitMandate.SETRANGE("Valid From");
      SEPADirectDebitMandate.SETRANGE("Date of Signature", 0D);
      IF NOT SEPADirectDebitMandate.ISEMPTY THEN
        MESSAGE(Text11012000, SEPADirectDebitMandate.FIELDCAPTION("Date of Signature"));
    END;

    BEGIN
    {
      4PS, 19-06-14, Debit Counter made editable.
    }
    END.
  }
}

