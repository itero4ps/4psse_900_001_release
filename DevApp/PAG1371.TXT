OBJECT Page 1371 Mini Posted Purch. Cr. Memos
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Posted Purchase Credit Memos;
    SourceTable=Table124;
    PageType=List;
    CardPageID=Mini Posted Purch. Credit Memo;
    PromotedActionCategoriesML=ENU=New,Process,Report,Correct,Navigation,Send;
    OnOpenPage=VAR
                 FileManagement@1000 : Codeunit 419;
               BEGIN
                 SetSecurityFilterOnRespCenter;

                 AllowDotNetAddIn := FileManagement.CanRunDotNetOnClient;
               END;

    ActionList=ACTIONS
    {
      { 1900000003;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 19      ;1   ;ActionGroup;
                      CaptionML=ENU=Navigation;
                      Image=Invoice }
      { 3       ;2   ;Action    ;
                      Name=<Page Mini Vendor Card>;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Vendor;
                      ToolTipML=ENU=View or edit detailed information about the vendor on the selected posted purchase document.;
                      RunObject=Page 1330;
                      RunPageLink=No.=FIELD(Buy-from Vendor No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Vendor;
                      PromotedCategory=Category5;
                      Scope=Repeater }
      { 25      ;2   ;Action    ;
                      CaptionML=ENU=&Navigate;
                      ToolTipML=ENU=Find all entries and documents that exist for the document number and posting date on the selected posted purchase document.;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Navigate;
                      PromotedCategory=Category5;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 Navigate;
                               END;
                                }
      { 27      ;1   ;ActionGroup;
                      Name=Printing;
                      CaptionML=ENU=Printing }
      { 14      ;2   ;Action    ;
                      Name=Print;
                      Ellipsis=Yes;
                      CaptionML=ENU=&Print;
                      ToolTipML=ENU=Print the posted purchase document.;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Print;
                      PromotedCategory=Category6;
                      Scope=Repeater;
                      OnAction=VAR
                                 PurchCrMemoHdr@1000 : Record 124;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(PurchCrMemoHdr);
                                 PurchCrMemoHdr.PrintRecords(NOT AllowDotNetAddIn);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the posted credit memo number.;
                SourceExpr="No." }

    { 6   ;2   ;Field     ;
                CaptionML=ENU=Vendor Name;
                ToolTipML=ENU=Specifies the name of the vendor who shipped the items.;
                SourceExpr="Buy-from Vendor Name" }

    { 1102601007;2;Field  ;
                ToolTipML=ENU=Specifies when the credit memo is due. The program calculates the date using the Payment Terms Code and Posting Date fields on the purchase header.;
                SourceExpr="Due Date" }

    { 13  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the total, in the currency of the credit memo, of the amounts on all the credit memo lines.;
                SourceExpr=Amount;
                OnDrillDown=BEGIN
                              SETRANGE("No.");
                              PAGE.RUNMODAL(PAGE::"Mini Posted Purch. Credit Memo",Rec)
                            END;
                             }

    { 15  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the total, in the currency of the credit memo, of the amounts on all the credit memo lines - including VAT.;
                SourceExpr="Amount Including VAT";
                OnDrillDown=BEGIN
                              SETRANGE("No.");
                              PAGE.RUNMODAL(PAGE::"Mini Posted Purch. Credit Memo",Rec)
                            END;
                             }

    { 7   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the amount that remains to be paid for the posted purchase invoice that relates to this purchase credit memo.;
                SourceExpr="Remaining Amount" }

    { 5   ;2   ;Field     ;
                ToolTipML=ENU=Specifies if the posted purchase invoice that relates to this purchase credit memo is paid. The Paid check box will also be selected if a credit memo for the remaining amount has been applied to the posted purchase invoice. In that situation, you have not actually paid the remaining amount, but the purchase invoice is still marked as Paid, because the remaining amount is zero.;
                SourceExpr=Paid }

    { 9   ;2   ;Field     ;
                ToolTipML=ENU=Specifies if the posted purchase invoice that relates to this purchase credit memo has been either corrected or canceled.;
                SourceExpr=Canceled;
                Editable=FALSE;
                LookupPageID=Mini Posted Sales Invoices;
                DrillDownPageID=Mini Posted Sales Invoices;
                HideValue=NOT Canceled;
                Style=Unfavorable;
                StyleExpr=Canceled;
                OnDrillDown=VAR
                              PurchInvHeader@1000 : Record 122;
                            BEGIN
                              IF Canceled THEN BEGIN
                                PurchInvHeader.SETRANGE("No.","Applies-to Doc. No.");
                                PAGE.RUN(PAGE::"Posted Purchase Invoice",PurchInvHeader);
                              END;
                            END;
                             }

  }
  CODE
  {
    VAR
      AllowDotNetAddIn@1000 : Boolean INDATASET;

    BEGIN
    END.
  }
}

