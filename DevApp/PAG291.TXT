OBJECT Page 291 Req. Worksheet
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Req. Worksheet;
    SaveValues=Yes;
    LinksAllowed=No;
    SourceTable=Table246;
    DelayedInsert=Yes;
    DataCaptionFields=Journal Batch Name;
    PageType=Worksheet;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             "Vendor (Trade Item)Visible" := TRUE;
             "Trade ItemVisible" := TRUE;
             ManufacturerVisible := TRUE;
             "Basic ItemVisible" := TRUE;
             "Ref. Order No.Editable" := TRUE;
           END;

    OnOpenPage=VAR
                 JnlSelected@1000 : Boolean;
               BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 OpenedFromBatch := ("Journal Batch Name" <> '') AND ("Worksheet Template Name" = '');
                 IF OpenedFromBatch THEN BEGIN
                   CurrentJnlBatchName := "Journal Batch Name";
                   ReqJnlManagement.OpenJnl(CurrentJnlBatchName,Rec);
                   EXIT;
                 END;
                 ReqJnlManagement.TemplateSelection(PAGE::"Req. Worksheet",FALSE,0,Rec,JnlSelected);
                 IF NOT JnlSelected THEN
                   ERROR('');
                 ReqJnlManagement.OpenJnl(CurrentJnlBatchName,Rec);

                 //**4PS.sn
                 IF NOT ItemSetup.READPERMISSION THEN BEGIN
                   "Basic ItemVisible" := (FALSE);
                   ManufacturerVisible := (FALSE);
                   "Trade ItemVisible" := (FALSE);
                   "Vendor (Trade Item)Visible" := (FALSE);
                 END;
                 //**4PS.en
               END;

    OnFindRecord=VAR
                   Found@1100528200 : Boolean;
                 BEGIN
                   //**4PS.sn
                   Found := FindPosition(Which);
                   EXIT(Found);
                   //**4PS.en
                 END;

    OnNextRecord=VAR
                   lRequisitionLine@1100528201 : Record 246;
                   NextStep@1100528200 : Integer;
                 BEGIN
                   //**4PS.sn
                   lRequisitionLine.COPY(Rec);
                   NextStep := NextPosition(lRequisitionLine,Steps);
                   IF NextStep <> 0 THEN Rec.COPY(lRequisitionLine);
                   EXIT(NextStep);
                   //**4PS.en
                 END;

    OnAfterGetRecord=BEGIN
                       "Order MultipleHideValue" := FALSE;
                       "Shelf No. (SKU)HideValue" := FALSE;
                       "Shelf No. (Item)HideValue" := FALSE;
                       ShowShortcutDimCode(ShortcutDimCode);
                       //**4PS.sn
                       StrategicPurchMgt.FindContractForReqLine(Rec);
                       GetBaseQuanUnit(BaseQuan, BaseUnit);  //db, 20-08-09
                       InventoryReservation("No."); // Call 19099
                       ShelfNoItemOnFormat;
                       ShelfNoSKUOnFormat;
                       OrderMultipleOnFormat;
                       PlanningWarningLevel1OnFormat;
                       GetPurchaser(Rec);
                       GetItemInfo;
                       //**4PS.en
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                  ReqJnlManagement.SetUpNewLine(Rec,xRec);
                  CLEAR(ShortcutDimCode);
                  InventoryQuan := 0;    // Call 19099
                  LocInventoryQuan := 0; // Call 19099
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    OnDeleteRecord=BEGIN
                     "Accept Action Message" := FALSE;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           ReqJnlManagement.GetDescriptionAndRcptName(Rec,Description2,BuyFromVendorName);
                           "Ref. Order No.Editable" := ("Use Blanket Order" AND ("Action Message" = "Action Message"::New)); //**4PS.n
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 29      ;1   ;ActionGroup;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 30      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Card;
                      RunObject=Codeunit 335;
                      Promoted=No;
                      PromotedIsBig=No;
                      Image=EditLines }
      { 76      ;2   ;ActionGroup;
                      CaptionML=ENU=Item Availability by;
                      Image=ItemAvailability }
      { 3       ;3   ;Action    ;
                      CaptionML=ENU=Event;
                      Visible=False;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromReqLine(Rec,ItemAvailFormsMgt.ByEvent)
                               END;
                                }
      { 77      ;3   ;Action    ;
                      CaptionML=ENU=Period;
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromReqLine(Rec,ItemAvailFormsMgt.ByPeriod)
                               END;
                                }
      { 78      ;3   ;Action    ;
                      CaptionML=ENU=Variant;
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromReqLine(Rec,ItemAvailFormsMgt.ByVariant)
                               END;
                                }
      { 61      ;3   ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=ENU=Location;
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromReqLine(Rec,ItemAvailFormsMgt.ByLocation)
                               END;
                                }
      { 7       ;3   ;Action    ;
                      CaptionML=ENU=BOM Level;
                      Visible=False;
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromReqLine(Rec,ItemAvailFormsMgt.ByBOM)
                               END;
                                }
      { 5       ;3   ;Action    ;
                      CaptionML=ENU=Timeline;
                      Visible=False;
                      Enabled=True;
                      Image=Timeline;
                      OnAction=BEGIN
                                 ShowTimeline(Rec);
                               END;
                                }
      { 83      ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Dimensions;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowDimensions;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 6500    ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Item &Tracking Lines;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ItemTrackingLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
      { 1100525037;2 ;Action    ;
                      CaptionML=ENU=Purchase Orders;
                      Image=Document;
                      OnAction=VAR
                                 Job@1100525001 : Record 11072003;
                                 ServiceOrder@1100525002 : Record 11012823;
                               BEGIN
                                 //**4PS
                                 IF ("Project No." = '') AND ("Service Order No." = '') THEN
                                   ERROR(Text11012002);

                                 IF "Project No." <> '' THEN
                                   IF Job.GET("Project No.") THEN
                                     Job.ShowPurchaseOrdersForProject;

                                 IF "Service Order No." <> '' THEN
                                   IF ServiceOrder.GET("Service Order No.") THEN
                                     ServiceOrder.ShowPurchaseOrdersForServiceOrder;
                               END;
                                }
      { 1210190011;2 ;Action    ;
                      CaptionML=ENU=&Text Block;
                      Image=Text;
                      OnAction=BEGIN
                                 EditText();  //**4PS
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 31      ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 32      ;2   ;Action    ;
                      Name=CalculatePlan;
                      Ellipsis=Yes;
                      CaptionML=ENU=Calculate Plan;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CalculatePlan;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CalculatePlan.SetTemplAndWorksheet("Worksheet Template Name","Journal Batch Name");
                                 CalculatePlan.RUNMODAL;
                                 CLEAR(CalculatePlan);
                               END;
                                }
      { 33      ;2   ;ActionGroup;
                      CaptionML=ENU=Drop Shipment;
                      Image=Delivery }
      { 34      ;3   ;Action    ;
                      AccessByPermission=TableData 223=R;
                      Ellipsis=Yes;
                      CaptionML=ENU=Get &Sales Orders;
                      Image=Order;
                      OnAction=BEGIN
                                 GetSalesOrder.SetReqWkshLine(Rec,0);
                                 GetSalesOrder.RUNMODAL;
                                 CLEAR(GetSalesOrder);
                               END;
                                }
      { 35      ;3   ;Action    ;
                      AccessByPermission=TableData 110=R;
                      CaptionML=ENU=Sales &Order;
                      Image=Document;
                      OnAction=BEGIN
                                 SalesHeader.SETRANGE("No.","Sales Order No.");
                                 SalesOrder.SETTABLEVIEW(SalesHeader);
                                 SalesOrder.EDITABLE := FALSE;
                                 SalesOrder.RUN;
                               END;
                                }
      { 52      ;2   ;ActionGroup;
                      CaptionML=ENU=Special Order;
                      Image=SpecialOrder }
      { 53      ;3   ;Action    ;
                      AccessByPermission=TableData 223=R;
                      Ellipsis=Yes;
                      CaptionML=ENU=Get &Sales Orders;
                      Image=Order;
                      OnAction=BEGIN
                                 GetSalesOrder.SetReqWkshLine(Rec,1);
                                 GetSalesOrder.RUNMODAL;
                                 CLEAR(GetSalesOrder);
                               END;
                                }
      { 75      ;3   ;Action    ;
                      AccessByPermission=TableData 110=R;
                      CaptionML=ENU=Sales &Order;
                      Image=Document;
                      OnAction=BEGIN
                                 SalesHeader.SETRANGE("No.","Sales Order No.");
                                 SalesOrder.SETTABLEVIEW(SalesHeader);
                                 SalesOrder.EDITABLE := FALSE;
                                 SalesOrder.RUN;
                               END;
                                }
      { 81      ;2   ;Separator  }
      { 90      ;2   ;Action    ;
                      Name=Reserve;
                      CaptionML=ENU=&Reserve;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Reserve;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CurrPage.SAVERECORD;
                                 ShowReservation;
                               END;
                                }
      { 37      ;2   ;Action    ;
                      Name=CarryOutActionMessage;
                      Ellipsis=Yes;
                      CaptionML=ENU=Generate &Purchase Orders;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 PerformAction@1001 : Report 493;
                                 lvPurchHeadRec@1210190001 : Record 38;
                                 lvNoSeries@1210190002 : Code[10];
                               BEGIN
                                 // 27199.sn
                                 lvPurchHeadRec.CheckAskForNoSeries(lvPurchHeadRec."Document Type"::Order, lvNoSeries);
                                 PerformAction.SetAskForNoSerie(lvNoSeries);
                                 // 27199.en

                                 PerformAction.SetReqWkshLine(Rec);
                                 PerformAction.RUNMODAL;
                                 PerformAction.GetReqWkshLine(Rec);
                                 CurrentJnlBatchName := GETRANGEMAX("Journal Batch Name");
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100485004;2 ;Action    ;
                      CaptionML=ENU=Modify Vendor Collectively;
                      Image=Vendor;
                      OnAction=BEGIN
                                 UpdateVendor;
                               END;
                                }
      { 9       ;1   ;ActionGroup;
                      CaptionML=ENU=Order Tracking;
                      Image=OrderTracking }
      { 80      ;2   ;Action    ;
                      CaptionML=ENU=Order &Tracking;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=OrderTracking;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TrackingForm@1001 : Page 99000822;
                               BEGIN
                                 TrackingForm.SetReqLine(Rec);
                                 TrackingForm.RUNMODAL;
                               END;
                                }
      { 1210190008;2 ;Action    ;
                      CaptionML=ENU=Compress Requisition Lines;
                      Image=Compress;
                      OnAction=VAR
                                 ReqLineRec@1210190000 : Record 246;
                               BEGIN
                                 //**4PS
                                 ReqLineRec.SETRANGE("Worksheet Template Name", "Worksheet Template Name");
                                 ReqLineRec.SETRANGE("Journal Batch Name", "Journal Batch Name");
                                 REPORT.RUNMODAL(REPORT::"Compress Requisition Lines",TRUE,TRUE, ReqLineRec);
                               END;
                                }
      { 1100485002;1 ;ActionGroup;
                      CaptionML=ENU=&Print }
      { 1100485003;2 ;Action    ;
                      CaptionML=ENU=Lists Purchase Offers;
                      Image=Report;
                      OnAction=BEGIN
                                 RequisitionLineRec.COPY(Rec);
                                 RequisitionLineRec.SETRANGE(Type,Type::"G/L Account");
                                 PrintDoc.PrintReqWksh(RequisitionLineRec);
                               END;
                                }
      { 1900000006;0 ;ActionContainer;
                      ActionContainerType=Reports }
      { 1901091106;1 ;Action    ;
                      CaptionML=ENU=Inventory Availability;
                      RunObject=Report 705;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report }
      { 1901254106;1 ;Action    ;
                      CaptionML=ENU=Status;
                      RunObject=Report 706;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report }
      { 1906212206;1 ;Action    ;
                      CaptionML=ENU=Inventory - Availability Plan;
                      RunObject=Report 707;
                      Promoted=Yes;
                      Image=ItemAvailability;
                      PromotedCategory=Report }
      { 1903262806;1 ;Action    ;
                      CaptionML=ENU=Inventory Order Details;
                      RunObject=Report 708;
                      Promoted=No;
                      Image=Report;
                      PromotedCategory=Report }
      { 1904739806;1 ;Action    ;
                      CaptionML=ENU=Inventory Purchase Orders;
                      RunObject=Report 709;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 25  ;1   ;Field     ;
                Lookup=Yes;
                CaptionML=ENU=Name;
                SourceExpr=CurrentJnlBatchName;
                OnValidate=BEGIN
                             ReqJnlManagement.CheckName(CurrentJnlBatchName,Rec);
                             CurrentJnlBatchNameOnAfterVali;
                           END;

                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           ReqJnlManagement.LookupName(CurrentJnlBatchName,Rec);
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1100528204;1;Field  ;
                Lookup=Yes;
                CaptionML=ENU=Purchaser;
                SourceExpr=PurchaserFilter;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             CurrPage.UPDATE(FALSE);
                           END;

                OnLookup=VAR
                           lSalespersonPurchaser@1100528201 : Record 13;
                         BEGIN
                           IF (PurchaserFilter <> '') THEN
                             IF lSalespersonPurchaser.GET(PurchaserFilter) THEN;

                           IF PAGE.RUNMODAL(0,lSalespersonPurchaser) = ACTION::LookupOK THEN
                             PurchaserFilter := lSalespersonPurchaser.Code;

                           CurrPage.SAVERECORD;
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 1100525001;2;Field  ;
                Name=Warning;
                CaptionML=ENU=Warning;
                OptionCaptionML=ENU=" ,Emergency,Exception,Attention";
                SourceExpr=Warning;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              PlanningTransparency.SetCurrReqLine(Rec);
                              PlanningTransparency.DrillDownUntrackedQty('');
                            END;
                             }

    { 2   ;2   ;Field     ;
                SourceExpr=Type;
                OnValidate=BEGIN
                             ReqJnlManagement.GetDescriptionAndRcptName(Rec,Description2,BuyFromVendorName);
                           END;
                            }

    { 4   ;2   ;Field     ;
                SourceExpr="No.";
                OnValidate=BEGIN
                             ReqJnlManagement.GetDescriptionAndRcptName(Rec,Description2,BuyFromVendorName);
                             ShowShortcutDimCode(ShortcutDimCode);
                           END;
                            }

    { 1101200002;2;Field  ;
                SourceExpr=Manufacturer;
                Visible=ManufacturerVisible;
                OnLookup=BEGIN
                           //**4PS
                           GabiVendorRec.HandleVendorLookup(1, Manufacturer);
                         END;
                          }

    { 1101200000;2;Field  ;
                SourceExpr="Basic Item";
                Visible="Basic ItemVisible";
                OnLookup=VAR
                           BasicItemRec@1100485001 : Record 11012316;
                           BasicItemFrm@1100485000 : Page 11012333;
                         BEGIN
                           //**4PS
                           CLEAR(BasicItemFrm);
                           BasicItemFrm.LOOKUPMODE(TRUE);

                           BasicItemFrm.SetSelection(DATABASE::"Requisition Line",
                            "Project No.",Element,"Extension Contract","Service Order No.",
                            0,'','',"Line No.",'','');

                           BasicItemRec.InitLookup(BasicItemRec, "Basic Item", Manufacturer);
                           BasicItemFrm.SETRECORD(BasicItemRec);

                           IF BasicItemFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             BasicItemFrm.GETRECORD(BasicItemRec);
                             Manufacturer := BasicItemRec.Manufacturer;
                             VALIDATE("Basic Item", BasicItemRec."Product Code");
                           END;
                         END;
                          }

    { 1101200006;2;Field  ;
                SourceExpr="Vendor (Trade Item)";
                Visible="Vendor (Trade Item)Visible";
                OnLookup=VAR
                           lvItem@1100525000 : Code[20];
                         BEGIN
                           lvItem := "Vendor (Trade Item)";
                           GabiVendorRec.HandleVendorLookup(2, lvItem);
                           VALIDATE("Vendor (Trade Item)", lvItem);
                         END;
                          }

    { 1101200004;2;Field  ;
                SourceExpr="Trade Item";
                Visible="Trade ItemVisible";
                OnLookup=VAR
                           TradeItemRec@1100485001 : Record 11012317;
                           TradeItemFrm@1100485000 : Page 11012334;
                           lvTempRequisitionLine@1100525002 : TEMPORARY Record 246;
                         BEGIN
                           //**4PS
                           IF "No." <> '' THEN BEGIN
                             lvTempRequisitionLine.COPY(Rec);  //db, 21-08-09: M15801
                             lvTempRequisitionLine.VALIDATE("No.","No.");
                             g_ItemCode := lvTempRequisitionLine."Trade Item";
                             g_Vendor := lvTempRequisitionLine."Vendor (Trade Item)";
                             COMMIT;
                           END ELSE BEGIN
                             g_ItemCode := '';
                             g_Vendor := '';
                           END;


                           CLEAR(TradeItemFrm);
                           TradeItemFrm.LOOKUPMODE(TRUE);

                           TradeItemFrm.SetSelection(DATABASE::"Requisition Line",
                             "Project No.",Element,"Extension Contract","Service Order No.",
                             0,'','',"Line No.",'','',
                             "Vendor (Trade Item)", "Trade Item", Manufacturer, "Basic Item", g_ItemCode, g_Vendor);

                           TradeItemRec.InitLookup(TradeItemRec, "Basic Item", Manufacturer, "Trade Item", "Vendor (Trade Item)");
                           TradeItemFrm.SETRECORD(TradeItemRec);

                           IF TradeItemFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             TradeItemFrm.GETRECORD(TradeItemRec);
                             Manufacturer := TradeItemRec.Manufacturer;
                             "Basic Item" := TradeItemRec."Product Code";
                             "Vendor (Trade Item)" := TradeItemRec.Vendor;
                             VALIDATE("Trade Item", TradeItemRec."Item Code");
                             CheckVendorRelation(FIELDNO("Vendor (Trade Item)"));  //db, 21-08-09
                           END;
                         END;
                          }

    { 60  ;2   ;Field     ;
                SourceExpr="Action Message";
                OnValidate=BEGIN
                             ActionMessageOnAfterValidate;
                           END;
                            }

    { 65  ;2   ;Field     ;
                SourceExpr="Accept Action Message" }

    { 92  ;2   ;Field     ;
                SourceExpr="Transfer-from Code";
                Visible=FALSE }

    { 44  ;2   ;Field     ;
                SourceExpr="Location Code";
                Visible=FALSE }

    { 1100526200;2;Field  ;
                SourceExpr="Bin Code";
                Visible=FALSE }

    { 1100485005;2;Field  ;
                SourceExpr="Shelf No. (Item)";
                Visible=FALSE;
                HideValue="Shelf No. (Item)HideValue" }

    { 1100528400;2;Field  ;
                SourceExpr="Shelf No. (SKU)";
                Visible=FALSE;
                HideValue="Shelf No. (SKU)HideValue" }

    { 62  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr=Description }

    { 36  ;2   ;Field     ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 1210190012;2;Field  ;
                CaptionML=ENU=Inventory;
                SourceExpr=InventoryQuan;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrillDownInventory(ShowLocations::All);
                            END;
                             }

    { 1100528201;2;Field  ;
                CaptionML=ENU=Qty. on Purch. Order (Inv.);
                DecimalPlaces=2:2;
                SourceExpr=Item."Qty. on Purch. Order (Inv.)";
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=VAR
                              PurchaseLine@1100528200 : Record 39;
                              PurchaseLines@1100528201 : Page 518;
                            BEGIN
                              //**4PS
                              IF (Type = Type::Item) AND ("No." <> '') THEN BEGIN
                                PurchaseLine.SETRANGE("Document Type", PurchaseLine."Document Type"::Order);
                                PurchaseLine.SETRANGE(Type, PurchaseLine.Type::Item);
                                PurchaseLine.SETRANGE("Item No.", "No.");
                                PurchaseLines.SETTABLEVIEW(PurchaseLine);
                                PurchaseLines.RUNMODAL;
                              END;
                            END;
                             }

    { 1210190014;2;Field  ;
                CaptionML=ENU=Location Inventory;
                SourceExpr=LocInventoryQuan;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrillDownInventory(ShowLocations::Location);
                            END;
                             }

    { 1210190009;2;Field  ;
                SourceExpr="Text Block";
                Visible=FALSE }

    { 1100525008;2;Field  ;
                SourceExpr="Price Agreement";
                Visible=FALSE }

    { 1100485000;2;Field  ;
                SourceExpr="Additional Cost (Service)";
                Visible=FALSE }

    { 69  ;2   ;Field     ;
                SourceExpr="Original Quantity" }

    { 8   ;2   ;Field     ;
                SourceExpr=Quantity }

    { 66  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code" }

    { 1100525020;2;Field  ;
                CaptionML=ENU=Quantity (Base);
                SourceExpr=BaseQuan;
                Visible=FALSE;
                Editable=FALSE }

    { 1100525022;2;Field  ;
                CaptionML=ENU=Base Unit of Measure;
                SourceExpr=BaseUnit;
                Visible=FALSE;
                Editable=FALSE }

    { 16  ;2   ;Field     ;
                SourceExpr="Direct Unit Cost";
                OnValidate=BEGIN
                             DirectUnitCostOnAfterValidate;
                           END;
                            }

    { 27  ;2   ;Field     ;
                AssistEdit=Yes;
                SourceExpr="Currency Code";
                Visible=FALSE;
                OnAssistEdit=BEGIN
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);

                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 1100525006;2;Field  ;
                SourceExpr="Unit Price (LCY)";
                OnValidate=BEGIN
                             UnitPriceLCYOnAfterValidate;
                           END;
                            }

    { 1100525012;2;Field  ;
                SourceExpr="Discount % (Item)";
                OnValidate=BEGIN
                             Discount37ItemOnAfterValidate;
                           END;
                            }

    { 1100525002;2;Field  ;
                SourceExpr="Unit Cost (LCY)";
                OnValidate=BEGIN
                             UnitCostLCYOnAfterValidate;
                           END;
                            }

    { 1100525010;2;Field  ;
                SourceExpr="Cost Amount" }

    { 46  ;2   ;Field     ;
                SourceExpr="Line Discount %";
                Visible=FALSE }

    { 73  ;2   ;Field     ;
                SourceExpr="Original Due Date" }

    { 14  ;2   ;Field     ;
                SourceExpr="Due Date" }

    { 48  ;2   ;Field     ;
                SourceExpr="Order Date";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr="Vendor No.";
                OnValidate=BEGIN
                             ReqJnlManagement.GetDescriptionAndRcptName(Rec,Description2,BuyFromVendorName);
                             ShowShortcutDimCode(ShortcutDimCode);
                           END;
                            }

    { 1100528202;2;Field  ;
                CaptionML=ENU=Purchaser;
                SourceExpr=SalesPersonPurchaser.Code;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528203;2;Field  ;
                CaptionML=ENU=Name Purchaser;
                SourceExpr=SalesPersonPurchaser.Name;
                Visible=FALSE;
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                SourceExpr="Vendor Item No." }

    { 54  ;2   ;Field     ;
                SourceExpr="Order Address Code";
                Visible=FALSE }

    { 56  ;2   ;Field     ;
                SourceExpr="Sell-to Customer No.";
                Visible=FALSE }

    { 1101200010;2;Field  ;
                SourceExpr="Project No." }

    { 1101200012;2;Field  ;
                SourceExpr=Element }

    { 1210190000;2;Field  ;
                SourceExpr="Extension Contract" }

    { 1210190002;2;Field  ;
                SourceExpr="Service Order No." }

    { 1101200014;2;Field  ;
                SourceExpr=Deliver }

    { 1101200016;2;Field  ;
                SourceExpr="Ship To Location" }

    { 58  ;2   ;Field     ;
                SourceExpr="Ship-to Code";
                Visible=FALSE }

    { 1100525000;2;Field  ;
                SourceExpr="Requested Receipt Date" }

    { 70  ;2   ;Field     ;
                SourceExpr="Prod. Order No.";
                Visible=FALSE }

    { 50  ;2   ;Field     ;
                SourceExpr="Requester ID";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr=Confirmed;
                Visible=FALSE }

    { 40  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                           END;
                            }

    { 42  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                LookupPageID=Cost Object List }

    { 1100525036;2;Field  ;
                SourceExpr="Cost Component" }

    { 300 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(3),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 302 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(4),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 304 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(5),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 306 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(6),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 308 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(7),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 310 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(8),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 79  ;2   ;Field     ;
                SourceExpr="Ref. Order No.";
                Visible=FALSE;
                Editable="Ref. Order No.Editable" }

    { 85  ;2   ;Field     ;
                SourceExpr="Ref. Order Type";
                Visible=FALSE }

    { 89  ;2   ;Field     ;
                SourceExpr="Replenishment System" }

    { 87  ;2   ;Field     ;
                SourceExpr="Ref. Line No.";
                Visible=FALSE }

    { 94  ;2   ;Field     ;
                SourceExpr="Planning Flexibility";
                Visible=FALSE }

    { 13  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Blanket Purch. Order Exists";
                Visible=False }

    { 1100485007;2;Field  ;
                SourceExpr="Order Multiple";
                Visible=FALSE;
                HideValue="Order MultipleHideValue" }

    { 1100525004;2;Field  ;
                SourceExpr="Use Blanket Order";
                OnValidate=BEGIN
                             UseBlanketOrderOnAfterValidate;
                           END;
                            }

    { 1100525016;2;Field  ;
                SourceExpr="Contract Type" }

    { 1100525018;2;Field  ;
                CaptionML=ENU=Blanket Order;
                SourceExpr=StrategicPurchMgt.NumberOfBlOrdersReqLine(Rec);
                OnLookup=BEGIN
                           StrategicPurchMgt.LookupBlOrderReqLine(Rec);
                         END;
                          }

    { 1100525026;2;Field  ;
                CaptionML=ENU=Blanket Order Line;
                SourceExpr=StrategicPurchMgt.NumberOfBlOrderLinesReqLine(Rec);
                OnLookup=BEGIN
                           StrategicPurchMgt.LookupBlOrderLinesReqLine(Rec);
                         END;
                          }

    { 1100525014;2;Field  ;
                CaptionML=ENU=Quantity in Blanket Orders;
                SourceExpr=StrategicPurchMgt.QtyInBlanketOrdersReqLine(Rec);
                OnLookup=BEGIN
                           StrategicPurchMgt.LookupBlOrderLinesReqLine(Rec);
                         END;
                          }

    { 1100525024;2;Field  ;
                SourceExpr="Comments for Logistics";
                Visible=FALSE }

    { 1100525028;2;Field  ;
                SourceExpr="Created by";
                Visible=FALSE }

    { 1100525032;2;Field  ;
                SourceExpr="Modified by";
                Visible=FALSE }

    { 20  ;1   ;Group      }

    { 1901776201;2;Group  ;
                GroupType=FixedLayout }

    { 1902759801;3;Group  ;
                CaptionML=ENU=Description }

    { 21  ;4   ;Field     ;
                SourceExpr=Description2;
                Editable=FALSE }

    { 1901652601;3;Group  ;
                CaptionML=ENU=Buy-from Vendor Name }

    { 23  ;4   ;Field     ;
                CaptionML=ENU=Buy-from Vendor Name;
                SourceExpr=BuyFromVendorName;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1903326807;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page9090;
                Visible=TRUE;
                PartType=Page }

    { 1100528200;1;Part   ;
                SubPageLink=Worksheet Template Name=FIELD(Worksheet Template Name),
                            Journal Batch Name=FIELD(Journal Batch Name),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11126622;
                Visible=TRUE;
                PartType=Page }

  }
  CODE
  {
    VAR
      SalesHeader@1000 : Record 36;
      ChangeExchangeRate@1001 : Page 511;
      SalesOrder@1002 : Page 42;
      GetSalesOrder@1003 : Report 698;
      CalculatePlan@1004 : Report 699;
      ReqJnlManagement@1005 : Codeunit 330;
      ItemAvailFormsMgt@1011 : Codeunit 353;
      CurrentJnlBatchName@1006 : Code[10];
      Description2@1007 : Text[50];
      BuyFromVendorName@1008 : Text[50];
      ShortcutDimCode@1009 : ARRAY [8] OF Code[20];
      OpenedFromBatch@1010 : Boolean;
      Text11012001@1210190001 : TextConst 'ENU=Before editing text enter the line first';
      Text11012002@1100525007 : TextConst 'ENU=Only Purchase Order Lines with a filled Job Number or Service Order will be showed';
      GeneratedtTxtConst1@1100000998 : TextConst 'ENU=You are not authorized for Department Code %1.';
      ItemSetup@1100525003 : Record 11012300;
      RequisitionLineRec@1100485000 : Record 246;
      GabiVendorRec@1100525000 : Record 11012304;
      PrintDoc@1100485001 : Codeunit 229;
      g_ItemCode@1100525002 : Code[20];
      g_Vendor@1100525001 : Code[20];
      StrategicPurchMgt@1100525004 : Codeunit 11020211;
      BaseQuan@1100525006 : Decimal;
      BaseUnit@1100525005 : Code[20];
      InventoryQuan@1210190000 : Decimal;
      LocInventoryQuan@1210190004 : Decimal;
      ShowLocations@1210190003 : 'All,PrefLocations,Location';
      DPA_IsHardFilter@1100000999 : Boolean;
      "Ref. Order No.Editable"@19038314 : Boolean INDATASET;
      "Basic ItemVisible"@19042756 : Boolean INDATASET;
      ManufacturerVisible@19015155 : Boolean INDATASET;
      "Trade ItemVisible"@19042429 : Boolean INDATASET;
      "Vendor (Trade Item)Visible"@19043796 : Boolean INDATASET;
      "Shelf No. (Item)HideValue"@19064238 : Boolean INDATASET;
      "Shelf No. (SKU)HideValue"@19046372 : Boolean INDATASET;
      "Order MultipleHideValue"@19004126 : Boolean INDATASET;
      PlanningTransparency@1100525009 : Codeunit 99000856;
      Warning@1100525008 : ',Emergency,Exception,Attention';
      Item@1100528200 : Record 27;
      SalesPersonPurchaser@1100528201 : Record 13;
      PurchaserFilter@1100528202 : Text[50];

    PROCEDURE EditText@1210190001();
    VAR
      TextFrm@1210190001 : Page 11012120;
    BEGIN
      //**4PS
      IF "Line No." = 0 THEN
        ERROR(Text11012001);

      TextFrm.SetSelection(DATABASE::"Requisition Line","Worksheet Template Name", "Journal Batch Name",
        '','','','',"Line No.", 0);

      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    PROCEDURE UpdateVendor@1100485000();
    VAR
      RequisitionLine@1100525000 : Record 246;
      ModifyItemVendor@1100485000 : Page 11020420;
    BEGIN
      //**4PS
      RequisitionLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(RequisitionLine);
      ModifyItemVendor.SetRequisitionLineRec(RequisitionLine);
      ModifyItemVendor.RUNMODAL;
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE InventoryReservation@4(lItem@11012000 : Code[20]);
    VAR
      ItemRec@1210190000 : Record 27;
    BEGIN
      //**4PS, Call 19099
      LocInventoryQuan := 0;
      InventoryQuan := 0;

      IF ItemRec.GET(lItem) THEN BEGIN
        IF "Project No." <> '' THEN
          ItemRec.SETRANGE("Project Filter","Project No.");
        ItemRec.CALCFIELDS(Inventory, "Qty. on Item Journal Project", "Qty. on Item Journal Service");
        LocInventoryQuan := GetInventory("Location Code",ItemRec,FALSE);
        InventoryQuan := GetInventory('',ItemRec,TRUE);
      END;
    END;

    PROCEDURE DrillDownInventory@1100525002(ShowLocations@1100525003 : 'All,PrefLocations,Location');
    VAR
      ItemAvailByLoc@1210190000 : Page 492;
      PrefLocationRec@1210190002 : Record 11020353;
      LocationRec@1210190001 : Record 14;
      ItemRec@1210190003 : Record 27;
    BEGIN
      //**4PS, Call 19099
      TESTFIELD("No.");
      CASE ShowLocations OF
        ShowLocations::PrefLocations:
          BEGIN
            IF "Project No." <> '' THEN BEGIN
              PrefLocationRec.SETRANGE(Type,PrefLocationRec.Type::Job);
              PrefLocationRec.SETRANGE("No.","Project No.");
            END;
            IF "Service Order No." <> '' THEN BEGIN
              PrefLocationRec.SETRANGE(Type,PrefLocationRec.Type::"Service Order");
              PrefLocationRec.SETRANGE("No.","Service Order No.");
            END;
            IF PrefLocationRec.FINDSET THEN
              REPEAT
                IF LocationRec.GET(PrefLocationRec."Location Code") THEN
                  LocationRec.MARK(TRUE);
              UNTIL PrefLocationRec.NEXT = 0;
            LocationRec.MARKEDONLY(TRUE);
          END;
        ShowLocations::Location:
          BEGIN
            LocationRec.GET("Location Code");
            LocationRec.SETRECFILTER;
          END;
      END;
      ItemAvailByLoc.SetLocations(LocationRec);
      ItemRec.GET("No.");
      IF "Project No." <> '' THEN
        ItemRec.SETRANGE("Project Filter","Project No.");
      ItemRec.SETRANGE("Date Filter","Due Date");
      ItemAvailByLoc.SETRECORD(ItemRec);
      ItemAvailByLoc.SETTABLEVIEW(ItemRec);
      ItemAvailByLoc.RUN;
      ItemRec.SETRANGE("Date Filter");
    END;

    LOCAL PROCEDURE ActionMessageOnAfterValidate@19060929();
    BEGIN
      "Ref. Order No.Editable" := ("Use Blanket Order" AND ("Action Message" = "Action Message"::New)); //**4PS.n
    END;

    LOCAL PROCEDURE DirectUnitCostOnAfterValidate@19017786();
    BEGIN
      CurrPage.UPDATE;  //**4PS.n
    END;

    LOCAL PROCEDURE UnitPriceLCYOnAfterValidate@19059853();
    BEGIN
      CurrPage.UPDATE;  //**4PS.n
    END;

    LOCAL PROCEDURE Discount37ItemOnAfterValidate@19057692();
    BEGIN
      CurrPage.UPDATE;  //**4PS.n
    END;

    LOCAL PROCEDURE UnitCostLCYOnAfterValidate@19001329();
    BEGIN
      CurrPage.UPDATE;  //**4PS.n
    END;

    LOCAL PROCEDURE UseBlanketOrderOnAfterValidate@19063887();
    BEGIN
      "Ref. Order No.Editable" := ("Use Blanket Order" AND ("Action Message" = "Action Message"::New)); //**4PS.n
    END;

    LOCAL PROCEDURE CurrentJnlBatchNameOnAfterVali@19002411();
    BEGIN
      CurrPage.SAVERECORD;
      ReqJnlManagement.SetName(CurrentJnlBatchName,Rec);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ShelfNoItemOnFormat@19023429();
    BEGIN
      //**4PS
      IF Type <> Type::Item THEN
        "Shelf No. (Item)HideValue" := TRUE;
    END;

    LOCAL PROCEDURE ShelfNoSKUOnFormat@19043337();
    BEGIN
      //**4PS
      IF Type <> Type::Item THEN
        "Shelf No. (SKU)HideValue" := TRUE;
    END;

    LOCAL PROCEDURE OrderMultipleOnFormat@19028640();
    BEGIN
      //**4PS
      IF Type <> Type::Item THEN
        "Order MultipleHideValue" := TRUE;
    END;

    LOCAL PROCEDURE PlanningWarningLevel1OnFormat@19030151();
    BEGIN
      //**4PS
      PlanningWarningLevel;
    END;

    PROCEDURE PlanningWarningLevel@40() : Integer;
    VAR
      Transparency@1001 : Codeunit 99000856;
    BEGIN
      //**4PS
      Warning := Transparency.ReqLineWarningLevel(Rec);
    END;

    PROCEDURE GetItemInfo@1100525001();
    BEGIN
      //**4PS
      Item.INIT;
      IF Type = Type::Item THEN BEGIN
        IF Item.GET("No.") THEN BEGIN
          Item.CALCFIELDS("Qty. on Purch. Order (Inv.)");
        END;
      END;
    END;

    PROCEDURE GetPurchaser@1100525000(lRequisitionLine@1100525000 : Record 246) Purchaser : Code[20];
    VAR
      Vendor@1100525001 : Record 23;
    BEGIN
      //**4PS
      SalesPersonPurchaser.INIT;
      SalesPersonPurchaser.Code := '';
      IF lRequisitionLine."Vendor No." <> '' THEN BEGIN
        IF Vendor.GET(lRequisitionLine."Vendor No.") THEN BEGIN
          IF SalesPersonPurchaser.GET(Vendor."Purchaser Code") THEN BEGIN
            Purchaser := SalesPersonPurchaser.Code;
          END
        END
      END;
    END;

    PROCEDURE FindPosition@1100525026(Which@1100525000 : Text[30]) : Boolean;
    VAR
      lRequisitionLine@1100525001 : Record 246;
      i@1100525002 : Integer;
    BEGIN
      //**4PS
      lRequisitionLine.COPY(Rec);
      IF Which = '' THEN Which := '=';
      FOR i := 1 TO STRLEN(Which) DO
      CASE Which[i] OF
        '-': BEGIN
          IF Rec.FIND('-') THEN REPEAT
            IF ShowThisRecord(Rec) THEN EXIT(TRUE);
          UNTIL Rec.NEXT = 0;
        END;
        '+': BEGIN
          IF Rec.FIND('+') THEN REPEAT
            IF ShowThisRecord(Rec) THEN EXIT(TRUE);
          UNTIL Rec.NEXT(-1) = 0;
        END;
        '=': BEGIN
          IF Rec.FIND THEN
            IF ShowThisRecord(Rec) THEN EXIT(TRUE);
        END;
        '>': BEGIN
          IF NextPosition(Rec, 1) <> 0 THEN
            EXIT(TRUE);
        END;
        '<': BEGIN
          IF NextPosition(Rec, -1) <> 0 THEN
            EXIT(TRUE);
        END;
      END;
      Rec.COPY(lRequisitionLine);
      EXIT(FALSE);
    END;

    PROCEDURE NextPosition@1100525034(VAR lRequisitionLine@1100525000 : Record 246;Steps@1100525001 : Integer) StepsCount : Integer;
    VAR
      RecRef2@1100525002 : Record 246;
      RecRef3@1100525003 : Record 246;
      Direction@1100525004 : Integer;
    BEGIN
      //**4PS
      IF Steps = 0 THEN EXIT;
      IF Steps > 0 THEN
        Direction := 1
      ELSE
        Direction := -1;
      RecRef2.COPY(lRequisitionLine);
      RecRef3.COPY(lRequisitionLine);
      REPEAT
        IF lRequisitionLine.NEXT(Direction) = 0 THEN BEGIN
          lRequisitionLine.COPY(RecRef3);
          EXIT;
        END;
        IF ShowThisRecord(lRequisitionLine) THEN BEGIN
          RecRef3.COPY(lRequisitionLine);
          StepsCount += Direction;
        END;
      UNTIL ABS(StepsCount) >= ABS(Steps);
      IF StepsCount = 0 THEN
        lRequisitionLine.COPY(RecRef2)
      ELSE
        lRequisitionLine.COPY(RecRef3);
    END;

    PROCEDURE ShowThisRecord@1100525032(lRequisitionLine@1100525001 : Record 246) : Boolean;
    BEGIN
      //**4PS
      IF PurchaserFilter <> '' THEN
        IF NOT CheckPurchaserFilter(lRequisitionLine) THEN
         EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE CheckPurchaserFilter@1100525038(lRequisitionLine@1100525001 : Record 246) : Boolean;
    BEGIN
      //**4PS
      IF GetPurchaser(lRequisitionLine) = PurchaserFilter  THEN
        EXIT(TRUE)
      ELSE
        EXIT(FALSE);
    END;

    BEGIN
    {
      4PS HBK 15-04-2010 Ref. Order No. Condition editable. Changed:
        Ref. Order No. - OnBeforeInput
        Use Blanket Order - OnAfterValidate
        Action Message - OnAfterValidate
        Form - OnAfterGetCurrRecord
      4PS, 30-08-10, Form 11012114 is a copy of this form. Keep this in mind when making changes here.
    }
    END.
  }
}

