OBJECT Page 353 Item Availability Lines
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    LinksAllowed=No;
    SourceTable=Table2000000007;
    PageType=ListPart;
    OnInit=BEGIN
             SetItemFilter;
           END;

    OnOpenPage=BEGIN
                 RESET;
               END;

    OnFindRecord=BEGIN
                   EXIT(PeriodFormMgt.FindDate(Which,Rec,ItemPeriodLength));
                 END;

    OnNextRecord=BEGIN
                   EXIT(PeriodFormMgt.NextDate(Steps,Rec,ItemPeriodLength));
                 END;

    OnAfterGetRecord=BEGIN
                       CalcAvailQuantities(
                         Item,GrossRequirement,PlannedOrderRcpt,ScheduledRcpt,
                         PlannedOrderReleases,ProjAvailableBalance,ExpectedInventory,QtyAvailable);

                       //**4PS.sn
                       SubtractSalesBudgetFromExpectedInv; //DP00120
                       //**4PS.en
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                CaptionML=ENU=Period Start;
                SourceExpr="Period Start" }

    { 12  ;2   ;Field     ;
                CaptionML=ENU=Period Name;
                SourceExpr="Period Name" }

    { 22  ;2   ;Field     ;
                CaptionML=ENU=Gross Requirement;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=GrossRequirement;
                OnDrillDown=BEGIN
                              ShowItemAvailLineList(0)
                            END;
                             }

    { 24  ;2   ;Field     ;
                CaptionML=ENU=Scheduled Receipt;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=ScheduledRcpt;
                OnDrillDown=BEGIN
                              ShowItemAvailLineList(2);
                            END;
                             }

    { 26  ;2   ;Field     ;
                CaptionML=ENU=Planned Order Receipt;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=PlannedOrderRcpt;
                OnDrillDown=BEGIN
                              ShowItemAvailLineList(1);
                            END;
                             }

    { 28  ;2   ;Field     ;
                CaptionML=ENU=Projected Available Balance;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=ProjAvailableBalance;
                OnDrillDown=BEGIN
                              ShowItemAvailLineList(4);
                            END;
                             }

    { 14  ;2   ;Field     ;
                CaptionML=ENU=Inventory;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=Item.Inventory;
                Visible=FALSE;
                OnDrillDown=BEGIN
                              ItemAvailFormsMgt.SetCompany(gCompany); //**4PS.n
                              ItemAvailFormsMgt.ShowItemLedgerEntries(Item,FALSE);
                            END;
                             }

    { 1100525006;2;Field  ;
                CaptionML=ENU=Project Inventory;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=Item."Inventory for Projects";
                OnDrillDown=BEGIN
                              //**4PS
                              ItemAvailFormsMgt.SetCompany(gCompany);
                              ItemAvailFormsMgt.ShowProjectInvEntries(Item);
                            END;
                             }

    { 1100528900;2;Field  ;
                CaptionML=ENU=Quantity on Sales Budget;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=Item."Quantity on Sales Budget";
                OnDrillDown=BEGIN
                              //**4PS DP00120
                              ItemAvailFormsMgt.SetCompany(gCompany);
                              ItemAvailFormsMgt.ShowBudgetEntries(Item);
                            END;
                             }

    { 1100525000;2;Field  ;
                CaptionML=ENU=Qty. on Purch. Order (Inv.);
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=Item."Qty. on Purch. Order (Inv.)";
                OnDrillDown=BEGIN
                              //**4PS
                              ItemAvailFormsMgt.SetCompany(gCompany);
                              ItemAvailFormsMgt.ShowPurchLines(Item);
                            END;
                             }

    { 1100525004;2;Field  ;
                CaptionML=ENU=Qty. on Purch. Order (Project);
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=Item."Qty. on Purch. Order (Project)";
                OnDrillDown=BEGIN
                              //**4PS
                              ItemAvailFormsMgt.SetCompany(gCompany);
                              ItemAvailFormsMgt.ShowProjServPurchLines(Item);
                            END;
                             }

    { 6   ;2   ;Field     ;
                DrillDown=Yes;
                CaptionML=ENU=Qty. on Sales Order;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=Item."Qty. on Sales Order";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              ItemAvailFormsMgt.SetCompany(gCompany); //**4PS
                              ItemAvailFormsMgt.ShowSalesLines(Item);
                            END;
                             }

    { 1100485000;2;Field  ;
                CaptionML=ENU=Qty. on Plant Order;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=Item."Qty. on Plant Order";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              //**4PS
                              ItemAvailFormsMgt.SetCompany(gCompany);
                              ItemAvailFormsMgt.ShowPlantOrderItemLines(Item);
                            END;
                             }

    { 1210190000;2;Field  ;
                CaptionML=ENU=Reserved for Project;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=Item."Qty. on Item Journal Project";
                OnDrillDown=BEGIN
                              //**4PS
                              ItemAvailFormsMgt.SetCompany(gCompany);
                              ItemAvailFormsMgt.ShowItemJournalLines(Item,1);
                            END;
                             }

    { 1210190004;2;Field  ;
                CaptionML=ENU=Reserved for Service;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=Item."Qty. on Item Journal Service";
                OnDrillDown=BEGIN
                              //**4PS
                              ItemAvailFormsMgt.SetCompany(gCompany);
                              ItemAvailFormsMgt.ShowItemJournalLines(Item,2);
                            END;
                             }

    { 30  ;2   ;Field     ;
                CaptionML=ENU=Trans. Ord. Shipment (Qty.);
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=Item."Trans. Ord. Shipment (Qty.)";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              ItemAvailFormsMgt.SetCompany(gCompany); //**4PS.n
                              ItemAvailFormsMgt.ShowTransLines(Item,Item.FIELDNO("Trans. Ord. Shipment (Qty.)"));
                            END;
                             }

    { 32  ;2   ;Field     ;
                CaptionML=ENU=Qty. in Transit;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=Item."Qty. in Transit";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              ItemAvailFormsMgt.SetCompany(gCompany); //**4PS.n
                              ItemAvailFormsMgt.ShowTransLines(Item,Item.FIELDNO("Qty. in Transit"));
                            END;
                             }

    { 34  ;2   ;Field     ;
                CaptionML=ENU=Trans. Ord. Receipt (Qty.);
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=Item."Trans. Ord. Receipt (Qty.)";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              ItemAvailFormsMgt.SetCompany(gCompany); //**4PS.n
                              ItemAvailFormsMgt.ShowTransLines(Item,Item.FIELDNO("Trans. Ord. Receipt (Qty.)"));
                            END;
                             }

    { 3   ;2   ;Field     ;
                CaptionML=ENU=Qty. on Asm. Comp. Lines;
                SourceExpr=Item."Qty. on Asm. Component";
                Visible=false;
                OnDrillDown=VAR
                              ItemAvailFormsMgt@1001 : Codeunit 353;
                            BEGIN
                              ItemAvailFormsMgt.SetCompany(gCompany); //**4PS.n
                              ItemAvailFormsMgt.ShowAsmCompLines(Item);
                            END;
                             }

    { 5   ;2   ;Field     ;
                CaptionML=ENU=Qty. on Assembly Order;
                SourceExpr=Item."Qty. on Assembly Order";
                Visible=False;
                OnDrillDown=VAR
                              ItemAvailFormsMgt@1001 : Codeunit 353;
                            BEGIN
                              ItemAvailFormsMgt.SetCompany(gCompany); //**4PS.n
                              ItemAvailFormsMgt.ShowAsmOrders(Item);
                            END;
                             }

    { 8   ;2   ;Field     ;
                CaptionML=ENU=Expected Inventory;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=ExpectedInventory;
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                CaptionML=ENU=Available Inventory;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=QtyAvailable;
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                DrillDown=Yes;
                CaptionML=ENU=Scheduled Receipt (Qty.);
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=Item."Scheduled Receipt (Qty.)";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              ItemAvailFormsMgt.SetCompany(gCompany); //**4PS.n
                              ItemAvailFormsMgt.ShowSchedReceipt(Item);
                            END;
                             }

    { 18  ;2   ;Field     ;
                DrillDown=Yes;
                CaptionML=ENU=Scheduled Issue (Qty.);
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=Item."Scheduled Need (Qty.)";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              ItemAvailFormsMgt.SetCompany(gCompany); //**4PS.n
                              ItemAvailFormsMgt.ShowSchedNeed(Item);
                            END;
                             }

    { 20  ;2   ;Field     ;
                CaptionML=ENU=Planned Order Releases;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=PlannedOrderReleases;
                Visible=TRUE;
                OnDrillDown=BEGIN
                              ShowItemAvailLineList(3);
                            END;
                             }

    { 1100525008;2;Field  ;
                CaptionML=ENU=Quantity in Budget Lines;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=QtyBudgetLines;
                OnDrillDown=BEGIN
                              //**4PS
                              ItemAvailFormsMgt.SetCompany(gCompany);
                              ItemAvailFormsMgt.ShowBudgetLines(Item);
                            END;
                             }

    { 1100525001;2;Field  ;
                Name=ProjMatReqLine;
                CaptionML=ENU=Qty. on Project Material Requirement;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=QtyProjMatReqLines;
                OnDrillDown=BEGIN
                              //**4PS
                              ItemAvailFormsMgt.SetCompany(gCompany);
                              ItemAvailFormsMgt.ShowProjMatReqLines(Item);  //db, 01-10-15
                            END;
                             }

    { 1100525010;2;Field  ;
                CaptionML=ENU=Quantity in Advice Orders;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=QtyAdviceOrders;
                OnDrillDown=BEGIN
                              //**4PS
                              ItemAvailFormsMgt.SetCompany(gCompany);
                              ItemAvailFormsMgt.ShowAdviceOrderLines(Item);
                            END;
                             }

    { 1100525002;2;Field  ;
                CaptionML=ENU=Blanket Orders;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=QtyBlanketOrder;
                OnDrillDown=BEGIN
                              //**4PS
                              ItemAvailFormsMgt.SetCompany(gCompany);
                              ItemAvailFormsMgt.ShowBlanketOrderLines(Item);
                            END;
                             }

    { 38  ;2   ;Field     ;
                DrillDown=Yes;
                CaptionML=ENU=Net Change;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=Item."Net Change";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              ItemAvailFormsMgt.SetCompany(gCompany); //**4PS.n
                              ItemAvailFormsMgt.ShowItemLedgerEntries(Item,TRUE);
                            END;
                             }

  }
  CODE
  {
    VAR
      Item@1000 : Record 27;
      ItemAvailFormsMgt@1001 : Codeunit 353;
      PeriodFormMgt@1006 : Codeunit 359;
      ItemPeriodLength@1009 : 'Day,Week,Month,Quarter,Year,Period';
      AmountType@1010 : 'Net Change,Balance at Date';
      ExpectedInventory@1013 : Decimal;
      QtyAvailable@1014 : Decimal;
      PlannedOrderReleases@1015 : Decimal;
      GrossRequirement@1016 : Decimal;
      PlannedOrderRcpt@1017 : Decimal;
      ScheduledRcpt@1018 : Decimal;
      ProjAvailableBalance@1019 : Decimal;
      PrevItem@1100525004 : Record 27;
      gCompany@1100485000 : Text[30];
      QtyBlanketOrder@1100525000 : Decimal;
      QtyBudgetLines@1100525001 : Decimal;
      PrevQtyBudgetLines@1100525005 : Decimal;
      QtyAdviceOrders@1100525002 : Decimal;
      QtyAdviceOrdersPurchase@1100525006 : Decimal;
      QtyAdviceOrdersInventory@1100525007 : Decimal;
      QtyProjMatReqLines@1100525008 : Decimal;

    PROCEDURE Set@1(VAR NewItem@1000 : Record 27;NewItemPeriodLength@1001 : Integer;NewAmountType@1002 : 'Net Change,Balance at Date');
    BEGIN
      Item.COPY(NewItem);
      ItemPeriodLength := NewItemPeriodLength;
      AmountType := NewAmountType;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE SetItemFilter@4();
    BEGIN
      IF AmountType = AmountType::"Net Change" THEN
        Item.SETRANGE("Date Filter","Period Start","Period End")
      ELSE
        Item.SETRANGE("Date Filter",0D,"Period End");

      Item.CHANGECOMPANY(gCompany); //**4PS.n
    END;

    LOCAL PROCEDURE ShowItemAvailLineList@2(What@1000 : Integer);
    BEGIN
      SetItemFilter;
      ItemAvailFormsMgt.SetCompany(gCompany); //**4PS.n
      ItemAvailFormsMgt.ShowItemAvailLineList(Item,What);
    END;

    LOCAL PROCEDURE CalcAvailQuantities@3(VAR Item@1001 : Record 27;VAR GrossRequirement@1002 : Decimal;VAR PlannedOrderRcpt@1003 : Decimal;VAR ScheduledRcpt@1004 : Decimal;VAR PlannedOrderReleases@1005 : Decimal;VAR ProjAvailableBalance@1006 : Decimal;VAR ExpectedInventory@1007 : Decimal;VAR QtyAvailable@1008 : Decimal);
    VAR
      ProjMatReqLine@1100525000 : Record 11012526;
    BEGIN
      SetItemFilter;
      ItemAvailFormsMgt.SetCompany(gCompany); //**4PS.n
      ItemAvailFormsMgt.CalcAvailQuantities(
        Item,AmountType = AmountType::"Balance at Date",
        GrossRequirement,PlannedOrderRcpt,ScheduledRcpt,
        PlannedOrderReleases,ProjAvailableBalance,ExpectedInventory,QtyAvailable);

      //**4PS.sn
      IF (Item."No." = PrevItem."No.") AND (Item.GETFILTER("Project Filter") = PrevItem.GETFILTER("Project Filter")) THEN
        QtyBudgetLines := PrevQtyBudgetLines
      ELSE
        QtyBudgetLines := Item.QtyOnBudgetLines;
      QtyAdviceOrders := Item.QtyOnAdviceOrderLines(QtyAdviceOrdersPurchase, QtyAdviceOrdersInventory);
      QtyProjMatReqLines := Item.QtyOnProjMatReqLines;  //db, 09-10-15
      PrevItem.COPY(Item);
      PrevQtyBudgetLines := QtyBudgetLines;
      //**4PS.en
    END;

    PROCEDURE SetCompany@1100485001(ICompany@1100485000 : Text[30]);
    BEGIN
      //**4PS
      IF (ICompany = '') OR (ICompany = COMPANYNAME) THEN
        gCompany := ''
      ELSE
        gCompany := ICompany;
    END;

    PROCEDURE CreatePurchaseProposal@1100528901();
    VAR
      ProjSetup@1100528900 : Record 315;
      Date@1100528903 : Record 2000000007;
      ReqLine@1100528902 : Record 246;
      NewLine@1100528901 : Integer;
      QtyAvailable@1100528904 : Decimal;
      QtyProposal@1100528905 : Decimal;
    BEGIN
      //**4PS (DP00120)
      ProjSetup.GET;
      Date.COPY(Rec);
      Date.MARKEDONLY(TRUE);
      IF NOT Date.FINDFIRST THEN
        Date.MARKEDONLY(FALSE);
      IF Date.FINDSET THEN BEGIN
        REPEAT
          CalcAvailQuantities(
            Item,GrossRequirement,PlannedOrderRcpt,ScheduledRcpt,
            PlannedOrderReleases,ProjAvailableBalance,ExpectedInventory,QtyAvailable);

          SubtractSalesBudgetFromExpectedInv; //**4PS.n (DP00120)
          IF ExpectedInventory < 0 THEN BEGIN
            QtyProposal := AdjustReorderQty(-ExpectedInventory, 0);
            ReqLine.SETRANGE("Worksheet Template Name", ProjSetup."Purchase Journal Template");
            ReqLine.SETRANGE("Journal Batch Name", ProjSetup."Purchase Journal Batch");
            IF ReqLine.FINDLAST THEN
              NewLine := ReqLine."Line No.";
            NewLine := NewLine + 1;

            ReqLine.INIT;
            ReqLine."Worksheet Template Name" := ProjSetup."Purchase Journal Template";
            ReqLine."Journal Batch Name" := ProjSetup."Purchase Journal Batch";
            ReqLine."Line No." := NewLine;
            ReqLine.INSERT(TRUE);

            ReqLine.Type := ReqLine.Type::Item;
            ReqLine.VALIDATE("No.", Item."No.");
            ReqLine.VALIDATE("Vendor No.", Item."Vendor No.");
            ReqLine.VALIDATE(Quantity, QtyProposal);
            ReqLine."Due Date" := Date."Period Start";
            ReqLine.MODIFY(TRUE);
          END;
        UNTIL Date.NEXT = 0;
      END;

      IF NewLine <> 0 THEN BEGIN
        COMMIT;
        PAGE.RUNMODAL(0, ReqLine);
      END;

      CLEARMARKS;
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE AdjustReorderQty@20(OrderQty@1001 : Decimal;MinQty@1005 : Decimal) : Decimal;
    VAR
      DeltaQty@1000 : Decimal;
      Rounding@1004 : Decimal;
    BEGIN
      //**4PS (DP00120)
      //- derived from codeunit 99000854

      IF OrderQty <= 0 THEN
        EXIT(0);

      IF (Item."Maximum Order Quantity" < OrderQty) AND
         (Item."Maximum Order Quantity" <> 0) AND
         (Item."Maximum Order Quantity" > MinQty)
      THEN
        DeltaQty := Item."Maximum Order Quantity" - OrderQty;

      IF Item."Minimum Order Quantity" > (OrderQty + DeltaQty) THEN
        DeltaQty := Item."Minimum Order Quantity" - OrderQty;

      IF Item."Order Multiple" <> 0 THEN BEGIN
        Rounding := ROUND(OrderQty + DeltaQty, Item."Order Multiple",'>') - (OrderQty + DeltaQty);
        DeltaQty += Rounding;
      END;

      EXIT(DeltaQty + OrderQty);
    END;

    LOCAL PROCEDURE SubtractSalesBudgetFromExpectedInv@1100525000();
    BEGIN
      //**4PS DP00120
      Item.CALCFIELDS("Quantity on Sales Budget");
      ExpectedInventory := ExpectedInventory - Item."Quantity on Sales Budget";
    END;

    BEGIN
    {
      4PS HBK 06-05-2010 Added QtyBlanketOrder
      db, 30-10-15: TotQtyAvailable removed
        - formula: QtyAvailable - QtyBudgetLines - QtyProjMatReqLines + QtyAdviceOrdersInventory + QtyAdviceOrdersPurchase
        - QtyProjMatReqLines inclued in Grossrequirement
        - QtyBudgetLines not related to DateFilter; missing field+index on BudgetLine
    }
    END.
  }
}

