OBJECT Page 38 Item Ledger Entries
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00.00.43402,4PS9.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Item Ledger Entries;
    SourceTable=Table32;
    DataCaptionExpr=GetCaption;
    DataCaptionFields=Item No.;
    PageType=List;
    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
               END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 60      ;1   ;ActionGroup;
                      CaptionML=ENU=Ent&ry;
                      Image=Entry }
      { 61      ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 64      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=&Value Entries;
                      RunObject=Page 5802;
                      RunPageView=SORTING(Item Ledger Entry No.);
                      RunPageLink=Item Ledger Entry No.=FIELD(Entry No.);
                      Image=ValueLedger }
      { 30      ;1   ;ActionGroup;
                      CaptionML=ENU=&Application;
                      Image=Apply }
      { 58      ;2   ;Action    ;
                      CaptionML=ENU=Applied E&ntries;
                      Image=Approve;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Show Applied Entries",Rec);
                               END;
                                }
      { 56      ;2   ;Action    ;
                      AccessByPermission=TableData 27=R;
                      CaptionML=ENU=Reservation Entries;
                      Image=ReservationLedger;
                      OnAction=BEGIN
                                 ShowReservationEntries(TRUE);
                               END;
                                }
      { 86      ;2   ;Action    ;
                      CaptionML=ENU=Application Worksheet;
                      Image=ApplicationWorksheet;
                      OnAction=VAR
                                 Worksheet@1000 : Page 521;
                               BEGIN
                                 CLEAR(Worksheet);
                                 Worksheet.SetRecordToShow(Rec);
                                 Worksheet.RUN;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 57      ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 59      ;2   ;Action    ;
                      CaptionML=ENU=Order &Tracking;
                      Image=OrderTracking;
                      OnAction=VAR
                                 TrackingForm@1001 : Page 99000822;
                               BEGIN
                                 TrackingForm.SetItemLedgEntry(Rec);
                                 TrackingForm.RUNMODAL;
                               END;
                                }
      { 32      ;1   ;Action    ;
                      CaptionML=ENU=&Navigate;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Navigate.SetDoc("Posting Date","Document No.");
                                 Navigate.RUN;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Posting Date" }

    { 4   ;2   ;Field     ;
                SourceExpr="Entry Type" }

    { 76  ;2   ;Field     ;
                SourceExpr="Document Type" }

    { 6   ;2   ;Field     ;
                SourceExpr="Document No." }

    { 78  ;2   ;Field     ;
                SourceExpr="Document Line No.";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                SourceExpr="Item No." }

    { 16  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 1100485000;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr=Description }

    { 1100485002;2;Field  ;
                DrillDown=No;
                SourceExpr="Item Description";
                Visible=FALSE }

    { 1100485004;2;Field  ;
                DrillDown=No;
                SourceExpr="Item Description 2";
                Visible=FALSE }

    { 1101200000;2;Field  ;
                SourceExpr="Job No.";
                Visible=FALSE }

    { 1101200002;2;Field  ;
                SourceExpr=Element;
                Visible=FALSE }

    { 1100525000;2;Field  ;
                SourceExpr="Extension Contract";
                Visible=FALSE }

    { 1210190002;2;Field  ;
                SourceExpr="Service Contract No.";
                Visible=FALSE }

    { 1210190000;2;Field  ;
                SourceExpr="Service Order No.";
                Visible=FALSE }

    { 1100528400;2;Field  ;
                SourceExpr="Employee No.";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr="Return Reason Code";
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                SourceExpr="Global Dimension 1 Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                           END;
                            }

    { 36  ;2   ;Field     ;
                SourceExpr="Global Dimension 2 Code";
                Visible=FALSE;
                LookupPageID=Cost Object List }

    { 82  ;2   ;Field     ;
                SourceExpr="Expiration Date";
                Visible=FALSE }

    { 68  ;2   ;Field     ;
                SourceExpr="Serial No.";
                Visible=FALSE }

    { 70  ;2   ;Field     ;
                SourceExpr="Lot No.";
                Visible=FALSE }

    { 1100528502;2;Field  ;
                SourceExpr="Warranty Code Vendor";
                Visible=FALSE }

    { 1100528503;2;Field  ;
                SourceExpr="Warranty Start Date Vendor";
                Visible=FALSE }

    { 1100528504;2;Field  ;
                SourceExpr="Warranty Period Vendor";
                Visible=FALSE }

    { 1100528505;2;Field  ;
                SourceExpr="Warranty Code Customer";
                Visible=FALSE }

    { 1100528506;2;Field  ;
                SourceExpr="Warranty Start Date Customer";
                Visible=FALSE }

    { 1100528507;2;Field  ;
                SourceExpr="Warranty Period Customer";
                Visible=FALSE }

    { 1100528508;2;Field  ;
                SourceExpr="Warranty Date Customer";
                Visible=FALSE }

    { 1100528509;2;Field  ;
                SourceExpr="Good Customs";
                Visible=FALSE }

    { 1100528500;2;Field  ;
                SourceExpr="Shipment with T1";
                Visible=FALSE }

    { 1100528501;2;Field  ;
                SourceExpr="Customs Destination Code";
                Visible=FALSE }

    { 38  ;2   ;Field     ;
                SourceExpr="Location Code" }

    { 12  ;2   ;Field     ;
                SourceExpr=Quantity }

    { 42  ;2   ;Field     ;
                SourceExpr="Invoiced Quantity";
                Visible=TRUE }

    { 44  ;2   ;Field     ;
                SourceExpr="Remaining Quantity";
                Visible=TRUE }

    { 84  ;2   ;Field     ;
                SourceExpr="Shipped Qty. Not Returned";
                Visible=FALSE }

    { 117 ;2   ;Field     ;
                SourceExpr="Reserved Quantity";
                Visible=FALSE }

    { 52  ;2   ;Field     ;
                SourceExpr="Qty. per Unit of Measure";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr="Sales Amount (Expected)";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Sales Amount (Actual)" }

    { 31  ;2   ;Field     ;
                SourceExpr="Cost Amount (Expected)";
                Visible=FALSE }

    { 41  ;2   ;Field     ;
                SourceExpr="Cost Amount (Actual)" }

    { 47  ;2   ;Field     ;
                SourceExpr="Cost Amount (Non-Invtbl.)" }

    { 49  ;2   ;Field     ;
                SourceExpr="Cost Amount (Expected) (ACY)";
                Visible=FALSE }

    { 72  ;2   ;Field     ;
                SourceExpr="Cost Amount (Actual) (ACY)";
                Visible=FALSE }

    { 74  ;2   ;Field     ;
                SourceExpr="Cost Amount (Non-Invtbl.)(ACY)";
                Visible=FALSE }

    { 66  ;2   ;Field     ;
                SourceExpr="Completely Invoiced";
                Visible=FALSE }

    { 24  ;2   ;Field     ;
                SourceExpr=Open }

    { 80  ;2   ;Field     ;
                SourceExpr="Drop Shipment";
                Visible=FALSE }

    { 5   ;2   ;Field     ;
                SourceExpr="Assemble to Order";
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr="Applied Entry to Adjust";
                Visible=FALSE }

    { 3   ;2   ;Field     ;
                SourceExpr="Order Type" }

    { 54  ;2   ;Field     ;
                SourceExpr="Order No.";
                Visible=FALSE }

    { 51  ;2   ;Field     ;
                SourceExpr="Order Line No.";
                Visible=FALSE }

    { 63  ;2   ;Field     ;
                SourceExpr="Prod. Order Comp. Line No.";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                SourceExpr="Entry No." }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Navigate@1000 : Page 344;
      DPA_IsHardFilter@1100000999 : Boolean;

    LOCAL PROCEDURE GetCaption@3() : Text;
    VAR
      GLSetup@1010 : Record 98;
      ObjTransl@1009 : Record 377;
      Item@1008 : Record 27;
      ProdOrder@1007 : Record 5405;
      Cust@1006 : Record 18;
      Vend@1005 : Record 23;
      Dimension@1004 : Record 348;
      DimValue@1003 : Record 349;
      SourceTableName@1002 : Text;
      SourceFilter@1001 : Text[200];
      Description@1000 : Text[100];
    BEGIN
      Description := '';

      CASE TRUE OF
        GETFILTER("Item No.") <> '':
          BEGIN
            SourceTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,27);
            SourceFilter := GETFILTER("Item No.");
            IF MAXSTRLEN(Item."No.") >= STRLEN(SourceFilter) THEN
              IF Item.GET(SourceFilter) THEN
                Description := Item.Description;
          END;
        (GETFILTER("Order No.") <> '') AND ("Order Type" = "Order Type"::Production):
          BEGIN
            SourceTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,5405);
            SourceFilter := GETFILTER("Order No.");
            IF MAXSTRLEN(ProdOrder."No.") >= STRLEN(SourceFilter) THEN
              IF ProdOrder.GET(ProdOrder.Status::Released,SourceFilter) OR
                 ProdOrder.GET(ProdOrder.Status::Finished,SourceFilter)
              THEN BEGIN
                SourceTableName := STRSUBSTNO('%1 %2',ProdOrder.Status,SourceTableName);
                Description := ProdOrder.Description;
              END;
          END;
        GETFILTER("Source No.") <> '':
          CASE "Source Type" OF
            "Source Type"::Customer:
              BEGIN
                SourceTableName :=
                  ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,18);
                SourceFilter := GETFILTER("Source No.");
                IF MAXSTRLEN(Cust."No.") >= STRLEN(SourceFilter) THEN
                  IF Cust.GET(SourceFilter) THEN
                    Description := Cust.Name;
              END;
            "Source Type"::Vendor:
              BEGIN
                SourceTableName :=
                  ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,23);
                SourceFilter := GETFILTER("Source No.");
                IF MAXSTRLEN(Vend."No.") >= STRLEN(SourceFilter) THEN
                  IF Vend.GET(SourceFilter) THEN
                    Description := Vend.Name;
              END;
          END;
        GETFILTER("Global Dimension 1 Code") <> '':
          BEGIN
            GLSetup.GET;
            Dimension.Code := GLSetup."Global Dimension 1 Code";
            SourceFilter := GETFILTER("Global Dimension 1 Code");
            SourceTableName := Dimension.GetMLName(GLOBALLANGUAGE);
            IF MAXSTRLEN(DimValue.Code) >= STRLEN(SourceFilter) THEN
              IF DimValue.GET(GLSetup."Global Dimension 1 Code",SourceFilter) THEN
                Description := DimValue.Name;
          END;
        GETFILTER("Global Dimension 2 Code") <> '':
          BEGIN
            GLSetup.GET;
            Dimension.Code := GLSetup."Global Dimension 2 Code";
            SourceFilter := GETFILTER("Global Dimension 2 Code");
            SourceTableName := Dimension.GetMLName(GLOBALLANGUAGE);
            IF MAXSTRLEN(DimValue.Code) >= STRLEN(SourceFilter) THEN
              IF DimValue.GET(GLSetup."Global Dimension 2 Code",SourceFilter) THEN
                Description := DimValue.Name;
          END;
        GETFILTER("Document Type") <> '':
          BEGIN
            SourceTableName := GETFILTER("Document Type");
            SourceFilter := GETFILTER("Document No.");
            Description := GETFILTER("Document Line No.");
          END;
      END;
      EXIT(STRSUBSTNO('%1 %2 %3',SourceTableName,SourceFilter,Description));
    END;

    BEGIN
    END.
  }
}

