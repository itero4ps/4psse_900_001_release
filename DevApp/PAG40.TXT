OBJECT Page 40 Item Journal
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Item Journal;
    SaveValues=Yes;
    SourceTable=Table83;
    DelayedInsert=Yes;
    DataCaptionFields=Journal Batch Name;
    PageType=Worksheet;
    AutoSplitKey=Yes;
    OnOpenPage=VAR
                 JnlSelected@1000 : Boolean;
               BEGIN
                 IF IsOpenedFromBatch THEN BEGIN
                   CurrentJnlBatchName := "Journal Batch Name";
                   ItemJnlMgt.OpenJnl(CurrentJnlBatchName,Rec);
                   EXIT;
                 END;
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01

                 IF NOT TemplAndBatchSelectionSet THEN BEGIN  //**4PS.n (C005928)
                   ItemJnlMgt.TemplateSelection(PAGE::"Item Journal",0,FALSE,Rec,JnlSelected);
                   IF NOT JnlSelected THEN
                     ERROR('');
                   ItemJnlMgt.OpenJnl(CurrentJnlBatchName,Rec);
                 END;  //**4PS.n  (C005928)

                 //**4PS.sn
                 IF NOT PlantSetup.READPERMISSION THEN BEGIN
                   ToPlantInventoryEditable := FALSE;
                   ToPlantLocationEditable := FALSE;
                   ToPlantTypeEditable := FALSE;
                 END ELSE BEGIN
                   ToPlantInventoryEditable := TRUE;
                   ToPlantLocationEditable := TRUE;
                   ToPlantTypeEditable := TRUE;
                 END;

                 ProjSetup.GET;

                 InvtSetup.GET;
                 ProjectStockEditable := TRUE;
                 IF NOT InvtSetup.JobInventoryByStockRelease('') THEN
                   ProjectStockEditable := FALSE;

                 UnitCostEditable := InvtSetup."Cost Price Item Jnl. Editable"; //mg.c, 28-12-10: M23310
                 //**4PS.en
               END;

    OnAfterGetRecord=BEGIN
                       DetermineInventory(Rec);  //**4PS.n
                       ShowShortcutDimCode(ShortcutDimCode);
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                  xRec."Entry Type" := "Entry Type"::Sale;  //**4PS.n (adjust initial value only for this form)
                  SetUpNewLine(xRec);
                  CLEAR(ShortcutDimCode);
                  DetermineInventory(Rec);  //**4PS.n
                  "Origin Type Line" := "Origin Type Line"::ItemJnlManual;  //**4PS.n
                END;

    OnInsertRecord=BEGIN
                     //** 4PS.so
                     //IF "Entry Type" > "Entry Type"::"Negative Adjmt." THEN
                     //  ERROR(Text000,"Entry Type");
                     //** 4PS.eo
                   END;

    OnDeleteRecord=VAR
                     ReserveItemJnlLine@1000 : Codeunit 99000835;
                   BEGIN
                     COMMIT;
                     IF NOT ReserveItemJnlLine.DeleteLineConfirm(Rec) THEN
                       EXIT(FALSE);
                     ReserveItemJnlLine.DeleteLine(Rec);
                   END;

    OnAfterGetCurrRecord=BEGIN
                           ItemJnlMgt.GetItem("Item No.",ItemDescription);
                           GetOtherDescriptions;  //**4PS.n
                           QuantityToPostEditable := (NOT ItemJournalLineIsSplitLine(Rec));   //**4PS.n
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 81      ;1   ;ActionGroup;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 82      ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      Promoted=Yes;
                      Image=Dimensions;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowDimensions;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 6500    ;2   ;Action    ;
                      Name=ItemTrackingLines;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Item &Tracking Lines;
                      Promoted=Yes;
                      Image=ItemTrackingLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 OpenItemTrackingLines(FALSE);
                               END;
                                }
      { 69      ;2   ;Action    ;
                      CaptionML=ENU=Bin Contents;
                      RunObject=Page 7305;
                      RunPageView=SORTING(Location Code,Item No.,Variant Code);
                      RunPageLink=Location Code=FIELD(Location Code),
                                  Item No.=FIELD(Item No.),
                                  Variant Code=FIELD(Variant Code);
                      Image=BinContent }
      { 1210190026;2 ;Action    ;
                      CaptionML=ENU=&Text Block;
                      Image=Text;
                      OnAction=BEGIN
                                 //**4PS
                                 EditText();
                               END;
                                }
      { 80      ;2   ;Separator ;
                      CaptionML=ENU=- }
      { 83      ;2   ;Action    ;
                      CaptionML=ENU=&Recalculate Unit Amount;
                      Image=UpdateUnitCost;
                      OnAction=BEGIN
                                 RecalculateUnitAmount;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 1100528000;2 ;Action    ;
                      CaptionML=ENU=Recalculate Unit Amount selected lines;
                      Image=UpdateUnitCost;
                      OnAction=VAR
                                 ItemJournalLine@1100528000 : Record 83;
                               BEGIN
                                 //**4PS
                                 CurrPage.SETSELECTIONFILTER(ItemJournalLine);
                                 IF ItemJournalLine.FINDSET THEN
                                   REPEAT
                                     ItemJournalLine.RecalculateUnitAmount;
                                     ItemJournalLine.MODIFY;
                                   UNTIL ItemJournalLine.NEXT = 0;

                                 CurrPage.UPDATE;
                               END;
                                }
      { 29      ;1   ;ActionGroup;
                      CaptionML=ENU=&Item;
                      Image=Item }
      { 30      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Card;
                      RunObject=Page 30;
                      RunPageLink=No.=FIELD(Item No.);
                      Image=EditLines }
      { 31      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Ledger E&ntries;
                      RunObject=Page 38;
                      RunPageView=SORTING(Item No.);
                      RunPageLink=Item No.=FIELD(Item No.);
                      Promoted=No;
                      Image=ItemLedger;
                      PromotedCategory=Process }
      { 77      ;2   ;ActionGroup;
                      CaptionML=ENU=Item Availability by;
                      Image=ItemAvailability }
      { 3       ;3   ;Action    ;
                      CaptionML=ENU=Event;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItemJnlLine(Rec,ItemAvailFormsMgt.ByEvent)
                               END;
                                }
      { 78      ;3   ;Action    ;
                      CaptionML=ENU=Period;
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItemJnlLine(Rec,ItemAvailFormsMgt.ByPeriod)
                               END;
                                }
      { 79      ;3   ;Action    ;
                      CaptionML=ENU=Variant;
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItemJnlLine(Rec,ItemAvailFormsMgt.ByVariant)
                               END;
                                }
      { 76      ;3   ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=ENU=Location;
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItemJnlLine(Rec,ItemAvailFormsMgt.ByLocation)
                               END;
                                }
      { 5       ;3   ;Action    ;
                      CaptionML=ENU=BOM Level;
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItemJnlLine(Rec,ItemAvailFormsMgt.ByBOM)
                               END;
                                }
      { 1100528303;1 ;Action    ;
                      CaptionML=ENU=I&tem Inventory by Company;
                      Image=ItemWorksheet;
                      OnAction=BEGIN
                                 ShowItemInventoryByCompany;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 71      ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 72      ;2   ;Action    ;
                      CaptionML=ENU=E&xplode BOM;
                      RunObject=Codeunit 246;
                      Promoted=Yes;
                      Image=ExplodeBOM;
                      PromotedCategory=Process }
      { 7300    ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=&Calculate Whse. Adjustment;
                      Image=CalculateWarehouseAdjustment;
                      OnAction=BEGIN
                                 CalcWhseAdjmt.SetItemJnlLine(Rec);
                                 CalcWhseAdjmt.RUNMODAL;
                                 CLEAR(CalcWhseAdjmt);
                               END;
                                }
      { 73      ;2   ;Separator ;
                      CaptionML=ENU=- }
      { 74      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=&Get Standard Journals;
                      Promoted=Yes;
                      Image=GetStandardJournal;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 StdItemJnl@1001 : Record 752;
                               BEGIN
                                 StdItemJnl.FILTERGROUP := 2;
                                 StdItemJnl.SETRANGE("Journal Template Name","Journal Template Name");
                                 StdItemJnl.FILTERGROUP := 0;
                                 IF PAGE.RUNMODAL(PAGE::"Standard Item Journals",StdItemJnl) = ACTION::LookupOK THEN BEGIN
                                   StdItemJnl.CreateItemJnlFromStdJnl(StdItemJnl,CurrentJnlBatchName);
                                   MESSAGE(Text001,StdItemJnl.Code);
                                 END
                               END;
                                }
      { 75      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=&Save as Standard Journal;
                      Image=SaveasStandardJournal;
                      OnAction=VAR
                                 ItemJnlBatch@1007 : Record 233;
                                 ItemJnlLines@1006 : Record 83;
                                 StdItemJnl@1005 : Record 752;
                                 SaveAsStdItemJnl@1004 : Report 751;
                               BEGIN
                                 ItemJnlLines.SETFILTER("Journal Template Name","Journal Template Name");
                                 ItemJnlLines.SETFILTER("Journal Batch Name",CurrentJnlBatchName);
                                 CurrPage.SETSELECTIONFILTER(ItemJnlLines);
                                 ItemJnlLines.COPYFILTERS(Rec);

                                 ItemJnlBatch.GET("Journal Template Name",CurrentJnlBatchName);
                                 SaveAsStdItemJnl.Initialise(ItemJnlLines,ItemJnlBatch);
                                 SaveAsStdItemJnl.RUNMODAL;
                                 IF NOT SaveAsStdItemJnl.GetStdItemJournal(StdItemJnl) THEN
                                   EXIT;

                                 MESSAGE(Text002,StdItemJnl.Code);
                               END;
                                }
      { 1000000000;2 ;Action    ;
                      CaptionML=ENU=Generate Production Orders;
                      Image=MakeOrder;
                      OnAction=BEGIN
                                 //**4PS
                                 GenerateProductionOrders;
                               END;
                                }
      { 1100525001;2 ;Action    ;
                      CaptionML=ENU=Generate Requisition Lines;
                      Image=CreateDocument;
                      OnAction=VAR
                                 lvReqLine@1100525002 : Record 246;
                               BEGIN
                                 //**4PS
                                 GeneratePurchaseProposal;
                                 COMMIT;

                                 lvReqLine.FILTERGROUP := 2;
                                 lvReqLine.SETRANGE("Worksheet Template Name", ProjSetup."Purchase Journal Template");
                                 lvReqLine.SETRANGE("Journal Batch Name", ProjSetup."Purchase Journal Batch");
                                 lvReqLine.FILTERGROUP := 0;
                                 PAGE.RUN(PAGE::"Req. Worksheet", lvReqLine);
                               END;
                                }
      { 1210190040;2 ;Action    ;
                      CaptionML=ENU=Split Item Journal Line;
                      Image=SplitChecks;
                      OnAction=BEGIN
                                 //**4PS
                                 SplitLines;
                               END;
                                }
      { 1100485027;2 ;Action    ;
                      CaptionML=ENU=Deblock;
                      Image=ReopenCancelled;
                      OnAction=BEGIN
                                 //**4PS
                                 Deblock;
                               END;
                                }
      { 1100528304;2 ;ActionGroup;
                      CaptionML=ENU=Import IC Inventory &Lines;
                      Image=Setup }
      { 1100528301;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Orders;
                      Image=Order;
                      OnAction=BEGIN
                                 //**4PS
                                 ImportInventoryOrderLines(1);
                               END;
                                }
      { 1100528305;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Transfers;
                      Image=TransferOrder;
                      OnAction=BEGIN
                                 //**4PS
                                 ImportInventoryOrderLines(3);
                               END;
                                }
      { 32      ;1   ;ActionGroup;
                      CaptionML=ENU=P&osting;
                      Image=Post }
      { 33      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Test Report;
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintItemJnlLine(Rec);
                               END;
                                }
      { 34      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=ENU=P&ost;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CheckStatusAndRun(FALSE);  //**4PS.n
                                 //**4PS.so
                                 //CODEUNIT.RUN(CODEUNIT::"Item Jnl.-Post",Rec);
                                 //CurrentJnlBatchName := GETRANGEMAX("Journal Batch Name");
                                 //CurrPage.UPDATE(FALSE);
                                 //**4PS.eo
                               END;
                                }
      { 35      ;2   ;Action    ;
                      ShortCutKey=Shift+F9;
                      CaptionML=ENU=Post and &Print;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CheckStatusAndRun(TRUE);  //**4PS.n
                                 //**4PS.so
                                 //CODEUNIT.RUN(CODEUNIT::"Item Jnl.-Post+Print",Rec);
                                 //CurrentJnlBatchName := GETRANGEMAX("Journal Batch Name");
                                 //CurrPage.UPDATE(FALSE);
                                 //**4PS.eo
                               END;
                                }
      { 1210190006;1 ;ActionGroup;
                      CaptionML=ENU=&Print;
                      Image=Print }
      { 1210190007;2 ;Action    ;
                      CaptionML=ENU=Report Selection;
                      Image=Print;
                      OnAction=VAR
                                 ItemJnlLine@1210190002 : Record 83;
                                 PrintDoc@1210190001 : Codeunit 229;
                               BEGIN
                                 //**4PS
                                 //db.sn, 11-12-14: C019287
                                 CurrPage.SETSELECTIONFILTER(ItemJnlLine);
                                 ItemJnlLine.SETFILTER("Line No.", '<>%1', "Line No.");  //check if more then 1 line marked
                                 ItemJnlLine.MARKEDONLY(TRUE);
                                 IF NOT ItemJnlLine.FINDFIRST THEN
                                   ItemJnlLine.COPY(Rec);  //use predefined filter on template+batch, may be extended by user with filter on other tablefields
                                 ItemJnlLine.SETRANGE("Line No.");
                                 //db.en, 11-12-14: C019287
                                 PrintDoc.PrintItemJnl(ItemJnlLine);
                               END;
                                }
      { 1210190008;2 ;Action    ;
                      CaptionML=ENU=Item &Tracking Lines;
                      Image=Print;
                      OnAction=VAR
                                 ItemJnlLine@1100525001 : Record 83;
                               BEGIN
                                 //**4PS
                                 ItemJnlLine.COPY(Rec);  //db, 05-12-14: C019287
                                 ItemJnlLine.SETRANGE("Journal Template Name", "Journal Template Name");
                                 ItemJnlLine.SETRANGE("Journal Batch Name", "Journal Batch Name");
                                 REPORT.RUN(REPORT::"Project Dispatch Note",TRUE,FALSE,ItemJnlLine);
                               END;
                                }
      { 70      ;2   ;Action    ;
                      CaptionML=ENU=Inventory Movement;
                      Image=Print;
                      OnAction=VAR
                                 ItemJnlLine@1001 : Record 83;
                                 DocumentPrint@1100528400 : Codeunit 229;
                               BEGIN
                                 //**4PS
                                 //db, 05-05-06: deze optie zit in standaard versie onder aparte button afdrukken.
                                 ItemJnlLine.COPY(Rec);
                                 ItemJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
                                 ItemJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
                                 //REPORT.RUNMODAL(REPORT::"Inventory Movement",TRUE,TRUE,ItemJnlLine); //**4PS.o
                                 DocumentPrint.PrintInventoryMovement(ItemJnlLine); //**4PS.n
                               END;
                                }
      { 1100528402;2 ;Action    ;
                      CaptionML=ENU=Picking List;
                      Image=Print;
                      OnAction=VAR
                                 ItemJournalLine@1100528400 : Record 83;
                               BEGIN
                                 //**4PS.sn
                                 // This report cannot be added to "Report Selection",
                                 // because a filter must be set on "Job No.".
                                 // Rec has a filter (filtergroup > 0) on template name and batch name, so
                                 // in the report you will see only lines within the current template and batch.
                                 ItemJournalLine.COPY(Rec);
                                 ItemJournalLine.SETRANGE("Job No.", "Job No.");
                                 REPORT.RUNMODAL(REPORT::"Picking List (Item Journal)", TRUE, TRUE, ItemJournalLine);
                                 //**4PS.en
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 25  ;1   ;Field     ;
                Lookup=Yes;
                CaptionML=ENU=Batch Name;
                SourceExpr=CurrentJnlBatchName;
                OnValidate=BEGIN
                             ItemJnlMgt.CheckName(CurrentJnlBatchName,Rec);
                             CurrentJnlBatchNameOnAfterVali;
                           END;

                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           ItemJnlMgt.LookupName(CurrentJnlBatchName,Rec);
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Posting Date" }

    { 39  ;2   ;Field     ;
                SourceExpr="Document Date";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                OptionCaptionML=ENU=Purchase,Sale,Positive Adjmt.,Negative Adjmt.;
                SourceExpr="Entry Type" }

    { 6   ;2   ;Field     ;
                SourceExpr="Document No." }

    { 27  ;2   ;Field     ;
                SourceExpr="External Document No.";
                Visible=FALSE }

    { 1210190034;2;Field  ;
                SourceExpr="Receiving Company";
                Visible=FALSE;
                OnValidate=BEGIN
                             ReceivingCompanyOnAfterValidat;
                           END;
                            }

    { 1210190013;2;Field  ;
                SourceExpr="Service Order No.";
                OnValidate=BEGIN
                             ServiceOrderNoOnAfterValidate;
                           END;
                            }

    { 1210190023;2;Field  ;
                SourceExpr="Service Contract No.";
                Visible=FALSE }

    { 1100528300;2;Field  ;
                SourceExpr="Service Object No.";
                Visible=false }

    { 1210190015;2;Field  ;
                SourceExpr="Service Location No.";
                Visible=FALSE }

    { 1100485021;2;Field  ;
                SourceExpr="Service Control Year";
                Visible=FALSE }

    { 1100485008;2;Field  ;
                SourceExpr="Additional Cost (Service)";
                Visible=FALSE }

    { 1101200000;2;Field  ;
                SourceExpr="Job No.";
                OnValidate=BEGIN
                             JobNoOnAfterValidate;
                           END;
                            }

    { 1100485019;2;Field  ;
                SourceExpr="Project Stock";
                Visible=FALSE;
                Editable=ProjectStockEditable }

    { 1101200002;2;Field  ;
                SourceExpr=Element;
                Visible=FALSE }

    { 1210190036;2;Field  ;
                SourceExpr="Extension Contract";
                Visible=FALSE }

    { 1100485017;2;Field  ;
                SourceExpr="Rental Unit";
                Visible=FALSE }

    { 1100485906;2;Field  ;
                SourceExpr="Plant Type";
                Visible=FALSE }

    { 1100485908;2;Field  ;
                SourceExpr="Plant No.";
                Visible=FALSE }

    { 1100485910;2;Field  ;
                SourceExpr="Cost Component Plant";
                Visible=FALSE }

    { 1100485912;2;Field  ;
                SourceExpr="Delivery Account No.";
                Visible=FALSE }

    { 1100485914;2;Field  ;
                SourceExpr="Delivery Dimension 1 Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                           END;
                            }

    { 1210190045;2;Field  ;
                SourceExpr=Deliver;
                Visible=FALSE }

    { 1210190011;2;Field  ;
                SourceExpr="Ship To Location";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                SourceExpr="Item No.";
                OnValidate=BEGIN
                             ItemJnlMgt.GetItem("Item No.",ItemDescription);
                             ShowShortcutDimCode(ShortcutDimCode);
                               ItemNoOnAfterValidate;
                           END;
                            }

    { 1100485006;2;Field  ;
                SourceExpr="Shelf No." }

    { 63  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr=Description }

    { 1101200004;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 1210190027;2;Field  ;
                SourceExpr="Text Block";
                Visible=FALSE }

    { 41  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                           END;
                            }

    { 1100485015;2;Field  ;
                CaptionML=ENU=Department Code Project/Service Order;
                SourceExpr=GetReceivingDept;
                Visible=FALSE;
                Editable=FALSE }

    { 43  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                LookupPageID=Cost Object List }

    { 1100525012;2;Field  ;
                SourceExpr="Cost Type";
                Visible=FALSE }

    { 1100485011;2;Field  ;
                SourceExpr="Cost Component" }

    { 300 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(3),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 302 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(4),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 304 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(5),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 306 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(6),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 308 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(7),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 310 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(8),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 37  ;2   ;Field     ;
                SourceExpr="Location Code";
                Visible=TRUE;
                OnValidate=VAR
                             WMSManagement@1001 : Codeunit 7302;
                           BEGIN
                             WMSManagement.CheckItemJnlLineLocation(Rec,xRec);
                               LocationCodeOnAfterValidate;
                           END;
                            }

    { 65  ;2   ;Field     ;
                SourceExpr="Bin Code";
                Visible=FALSE }

    { 1100526200;2;Field  ;
                SourceExpr="Bin Code (Project Inventory)";
                Visible=FALSE }

    { 47  ;2   ;Field     ;
                SourceExpr="Salespers./Purch. Code";
                Visible=FALSE }

    { 45  ;2   ;Field     ;
                SourceExpr="Gen. Bus. Posting Group";
                Visible=FALSE }

    { 53  ;2   ;Field     ;
                SourceExpr="Gen. Prod. Posting Group";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;
                            }

    { 1100528400;2;Field  ;
                SourceExpr="Quantity to Post";
                Editable=QuantityToPostEditable }

    { 67  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code" }

    { 14  ;2   ;Field     ;
                SourceExpr="Unit Amount" }

    { 16  ;2   ;Field     ;
                SourceExpr=Amount }

    { 84  ;2   ;Field     ;
                SourceExpr="Discount Amount" }

    { 49  ;2   ;Field     ;
                SourceExpr="Indirect Cost %";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr="Unit Cost";
                Editable=UnitCostEditable }

    { 20  ;2   ;Field     ;
                SourceExpr="Applies-to Entry" }

    { 51  ;2   ;Field     ;
                SourceExpr="Applies-from Entry";
                Visible=FALSE }

    { 55  ;2   ;Field     ;
                SourceExpr="Transaction Type";
                Visible=FALSE }

    { 57  ;2   ;Field     ;
                SourceExpr="Transport Method";
                Visible=FALSE }

    { 59  ;2   ;Field     ;
                SourceExpr="Country/Region Code";
                Visible=FALSE }

    { 61  ;2   ;Field     ;
                SourceExpr="Reason Code";
                Visible=FALSE }

    { 1101200014;2;Field  ;
                SourceExpr="New Location Code";
                Visible=FALSE }

    { 1210190043;2;Field  ;
                SourceExpr="New Bin Code";
                Visible=FALSE }

    { 1101200006;2;Field  ;
                CaptionML=ENU=Inventory;
                DecimalPlaces=0:5;
                SourceExpr=InventoryDec;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              //**4PS
                              DrillDownInventory;
                            END;
                             }

    { 1210190000;2;Field  ;
                SourceExpr="Inventory Status";
                Editable=FALSE }

    { 1101200008;2;Field  ;
                SourceExpr="Delivery Date" }

    { 1100528302;2;Field  ;
                SourceExpr="Delivery Time";
                Visible=false }

    { 1210190009;2;Field  ;
                SourceExpr=Blocked;
                OnValidate=BEGIN
                             BlockedOnAfterValidate;
                           END;
                            }

    { 1100485004;2;Field  ;
                SourceExpr="To Plant Inventory";
                Visible=FALSE;
                Editable=ToPlantInventoryEditable }

    { 1100485002;2;Field  ;
                SourceExpr="To Plant Type";
                Visible=FALSE;
                Editable=ToPlantTypeEditable }

    { 1100485000;2;Field  ;
                SourceExpr="To Plant Location";
                Visible=FALSE;
                Editable=ToPlantLocationEditable }

    { 1210190002;2;Field  ;
                SourceExpr="Production Order" }

    { 1210190004;2;Field  ;
                SourceExpr="Production Status";
                Editable=FALSE }

    { 1210190038;2;Field  ;
                SourceExpr="Quantity (Produced)" }

    { 1210190041;2;Field  ;
                SourceExpr="Quantity (Released)";
                Visible=FALSE }

    { 1100526100;2;Field  ;
                SourceExpr="Yard No.";
                Visible=FALSE }

    { 1100525004;2;Field  ;
                SourceExpr="System No.";
                Visible=FALSE }

    { 1100525002;2;Field  ;
                SourceExpr="Entity Type";
                Visible=FALSE }

    { 1100525006;2;Field  ;
                SourceExpr="Entity No.";
                Visible=FALSE }

    { 1100525008;2;Field  ;
                SourceExpr="Cable Transit Pos.";
                Visible=FALSE }

    { 1100525010;2;Field  ;
                SourceExpr="Comments for Logistics";
                Visible=FALSE }

    { 1100528306;2;Field  ;
                SourceExpr="IC Inventory Line Type";
                Visible=false }

    { 1100528401;2;Field  ;
                SourceExpr="FSC Type Code";
                Visible=FALSE }

    { 1100528403;2;Field  ;
                SourceExpr="Employee No.";
                Visible=FALSE }

    { 1100525003;2;Field  ;
                SourceExpr="Input by" }

    { 22  ;1   ;Group      }

    { 1900669001;2;Group  ;
                GroupType=FixedLayout }

    { 23  ;2   ;Field     ;
                CaptionML=ENU=Item;
                SourceExpr=ItemDescription;
                Editable=FALSE }

    { 1210190029;2;Field  ;
                CaptionML=ENU=Project;
                SourceExpr=ProjDescription;
                Editable=FALSE }

    { 1210190031;2;Field  ;
                CaptionML=ENU=Service Order;
                SourceExpr=ServOrderDescription;
                Editable=FALSE }

    { 1210190033;2;Field  ;
                CaptionML=ENU=Service Location;
                SourceExpr=ServLocDescription;
                Editable=FALSE }

    { 1100485023;2;Field  ;
                Name=InventoryDec2;
                DrillDown=Yes;
                CaptionML=ENU=Inventory;
                DecimalPlaces=0:5;
                SourceExpr=InventoryDec;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              //**4PS
                              DrillDownInventory;
                            END;
                             }

    { 1100485025;2;Field  ;
                DrillDown=No;
                CaptionML=ENU=Inventory - released;
                DecimalPlaces=0:5;
                SourceExpr=InventoryDec-QuantityToPost;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1903326807;1;Part   ;
                SubPageLink=No.=FIELD(Item No.);
                PagePartID=Page9090;
                Visible=FALSE;
                PartType=Page }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot use entry type %1 in this journal.';
      ItemJnlMgt@1001 : Codeunit 240;
      ReportPrint@1002 : Codeunit 228;
      ItemAvailFormsMgt@1010 : Codeunit 353;
      CalcWhseAdjmt@1006 : Report 7315;
      CurrentJnlBatchName@1003 : Code[10];
      ItemDescription@1004 : Text[50];
      ShortcutDimCode@1005 : ARRAY [8] OF Code[20];
      Text001@1007 : TextConst 'ENU=Item Journal lines have been successfully inserted from Standard Item Journal %1.';
      Text002@1008 : TextConst 'ENU=Standard Item Journal %1 has been successfully created.';
      Text11012001@1210190001 : TextConst 'ENU=First select records.';
      Text11012002@1210190002 : TextConst 'ENU=Before editing text enter the line first';
      ProjSetup@1100525001 : Record 315;
      PlantSetup@1100485000 : Record 11012550;
      InvtSetup@1100525000 : Record 313;
      InventoryDec@1100485005 : Decimal;
      QuantityToPost@1100485009 : Decimal;
      ProjDescription@1100485004 : Text[50];
      ServOrderDescription@1100485003 : Text[50];
      ServLocDescription@1100485002 : Text[50];
      Text11012003@1100485007 : TextConst 'ENU=Ignore Stock?';
      Text11012004@1100485010 : TextConst 'ENU=Inventory may not become negative.';
      Text11012005@1100485011 : TextConst 'ENU=Do you want to deblock?';
      Text11012006@1100528400 : TextConst 'ENU=%1 should be filled.';
      GeneratedtTxtConst1@1100000998 : TextConst 'ENU=You are not authorized for Department Code %1.';
      IgnoreStock@1100485008 : Boolean;
      DPA_IsHardFilter@1100000999 : Boolean;
      TemplAndBatchSelectionSet@1100526200 : Boolean;
      ToPlantInventoryEditable@1100525002 : Boolean INDATASET;
      ToPlantLocationEditable@1100525003 : Boolean INDATASET;
      ToPlantTypeEditable@1100525004 : Boolean INDATASET;
      ProjectStockEditable@1100525005 : Boolean INDATASET;
      UnitCostEditable@1100525006 : Boolean INDATASET;
      QuantityToPostEditable@1100525007 : Boolean INDATASET;

    PROCEDURE DetermineInventory@1(iItemJnlLine@1100485001 : Record 83);
    VAR
      lvItemRec@11012010 : Record 27;
      lvItemJnlLine@1100485000 : Record 83;
    BEGIN
      //**4PS
      InventoryDec := 0;
      QuantityToPost := 0;

      WITH iItemJnlLine DO BEGIN
        IF NOT lvItemRec.GET("Item No.") THEN
          EXIT;

        lvItemRec.SETRANGE("Location Filter", "Location Code");
        lvItemRec.SETRANGE("Variant Filter", "Variant Code");
        lvItemRec.CALCFIELDS(Inventory);
        InventoryDec := lvItemRec.Inventory;

        lvItemJnlLine.RESET;
        lvItemJnlLine.SETCURRENTKEY("Entry Type","Item No.", Blocked);
        lvItemJnlLine.SETRANGE("Entry Type", lvItemJnlLine."Entry Type"::Sale);
        lvItemJnlLine.SETRANGE("Item No.", "Item No.");
        lvItemJnlLine.SETRANGE(Blocked, FALSE);
        lvItemJnlLine.SETRANGE("Location Code", "Location Code");
        lvItemJnlLine.SETRANGE("Variant Code", "Variant Code");
        //lvItemJnlLine.SETFILTER("Shipment Date",'>%1&<=%2',0D, "Shipment Date");
        IF lvItemJnlLine.FINDSET THEN
          REPEAT
            QuantityToPost := QuantityToPost + lvItemJnlLine.CalcQuantityToPostBase;
          UNTIL lvItemJnlLine.NEXT = 0;
      END;
    END;

    PROCEDURE GeneratePurchaseProposal@4();
    VAR
      lvItemJnlLine@1100525000 : Record 83;
      lvReqLine@11012000 : Record 246;
      LineNumber@11012001 : Integer;
    BEGIN
      //**4PS
      lvItemJnlLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(lvItemJnlLine);
      IF lvItemJnlLine.COUNT = 0 THEN BEGIN
        MESSAGE(Text11012001);
      END ELSE BEGIN
        lvReqLine.LOCKTABLE;
        lvReqLine.SETRANGE("Worksheet Template Name", ProjSetup."Purchase Journal Template");
        lvReqLine.SETRANGE("Journal Batch Name", ProjSetup."Purchase Journal Batch");
        IF lvReqLine.FIND('+') THEN
          LineNumber := lvReqLine."Line No."
        ELSE
          LineNumber := 0;
        IF lvItemJnlLine.FIND('-') THEN BEGIN
          REPEAT
            lvReqLine.INIT;
            lvReqLine."Worksheet Template Name" := ProjSetup."Purchase Journal Template";
            lvReqLine."Journal Batch Name"      := ProjSetup."Purchase Journal Batch";
            lvReqLine."Line No." := LineNumber + 1;
            lvReqLine.Quantity := lvItemJnlLine.Quantity;
            lvReqLine.Type := lvReqLine.Type::Item;
            lvReqLine.VALIDATE("No.", lvItemJnlLine."Item No.");
            lvReqLine.Description := lvItemJnlLine.Description;
            lvReqLine."Description 2" := lvItemJnlLine."Description 2";
            lvReqLine.VALIDATE("Unit of Measure Code", lvItemJnlLine."Unit of Measure Code");
            lvReqLine."Shortcut Dimension 2 Code" := lvItemJnlLine."Shortcut Dimension 2 Code";
            lvReqLine."Cost Component" := lvItemJnlLine."Cost Component";
            lvReqLine."Due Date" := lvItemJnlLine."Delivery Date";
            lvReqLine."Comments for Logistics" := lvItemJnlLine."Comments for Logistics";  //db, 03-10-13: C009866
            lvReqLine."Location Code" := lvItemJnlLine."Location Code";  //db, 18-02-14: C008202
            lvReqLine.INSERT;
            LineNumber := lvReqLine."Line No.";  //db, 18-02-13: C005930
          UNTIL lvItemJnlLine.NEXT = 0;
        END;
      END;
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE GenerateProductionOrders@1000000000();
    VAR
      lvItemJnlLine@1100485001 : Record 83;
      lvItemRec@1000000001 : Record 27;
      ConfirmedQuestion@1100485000 : Boolean;
    BEGIN
      //**4PS
      lvItemJnlLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(lvItemJnlLine);
      IF lvItemJnlLine.COUNT = 0 THEN BEGIN
        MESSAGE(Text11012001);
      END ELSE BEGIN
        lvItemJnlLine.SETRANGE("Journal Template Name", "Journal Template Name");
        lvItemJnlLine.SETRANGE("Journal Batch Name", "Journal Batch Name");
        lvItemJnlLine.SETFILTER("Inventory Status", '<%1', "Inventory Status"::"in production");
        IF lvItemJnlLine.FIND('-') THEN BEGIN
          ConfirmedQuestion := FALSE;
          IgnoreStock := FALSE;
          REPEAT
            TESTFIELD("Delivery Date");
            IF InvtSetup."Location Mandatory" = TRUE THEN
              TESTFIELD("Location Code");
            lvItemRec.GET(lvItemJnlLine."Item No.");
            IF lvItemRec."Replenishment System" = lvItemRec."Replenishment System"::"Prod. Order" THEN BEGIN
              DetermineInventory(lvItemJnlLine);
              IF InventoryDec >= lvItemJnlLine.Quantity THEN BEGIN
                IgnoreStock := CONFIRM(Text11012003);
                ConfirmedQuestion := TRUE;
              END;
            END;
          UNTIL (lvItemJnlLine.NEXT = 0) OR ConfirmedQuestion;
        END;

        IF lvItemJnlLine.FIND('-') THEN BEGIN
          REPEAT
            TESTFIELD("Delivery Date");
            IF InvtSetup."Location Mandatory" = TRUE THEN
              TESTFIELD("Location Code");
            lvItemRec.GET(lvItemJnlLine."Item No.");
            IF lvItemRec."Replenishment System" = lvItemRec."Replenishment System"::"Prod. Order" THEN BEGIN
              DetermineInventory(lvItemJnlLine);
              IF (NOT IgnoreStock) AND (InventoryDec >= lvItemJnlLine.Quantity) THEN BEGIN
                lvItemJnlLine."Inventory Status" := "Inventory Status"::"on stock";
                lvItemJnlLine.MODIFY;
              END ELSE BEGIN
                lvItemJnlLine."Production Order" := CreateProductionOrder(lvItemJnlLine);
                lvItemJnlLine."Production Status" := lvItemJnlLine."Production Status"::"Firm Planned";
                lvItemJnlLine."Inventory Status" := "Inventory Status"::"in production";
                lvItemJnlLine.VALIDATE("Quantity (Reserved)");
                lvItemJnlLine.Blocked := TRUE;
      //          lvItemJnlLine.CalcOverheadSurchargeOLD(lvItemJnlLine);  //** 4PS 15-06-2010 o
                lvItemJnlLine.CalcOverheadSurcharge;                      //** 4PS 15-06-2010 n
                lvItemJnlLine.MODIFY;
              END;
            END;
          UNTIL lvItemJnlLine.NEXT = 0;
        END;
      END;

      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE CreateProductionOrder@1000000004(iItemJnlLine@1000000003 : Record 83) : Code[20];
    VAR
      ProdHeader@1000000000 : Record 5405;
      ProdSetup@1000000002 : Record 99000765;
      NoSeriesMgt@1210190006 : Codeunit 396;
      CreateProdOrderLines@1210190000 : Codeunit 99000787;
    BEGIN
      //**4PS
      WITH iItemJnlLine DO BEGIN
        //create header production order
        ProdHeader.INIT;
        ProdSetup.GET;
        ProdSetup.TESTFIELD("Firm Planned Order Nos.");
        NoSeriesMgt.InitSeries(ProdSetup."Firm Planned Order Nos.",ProdHeader."No. Series",0D,ProdHeader."No.",ProdHeader."No. Series");

        ProdHeader."Source Type" := ProdHeader."Source Type"::Item;
        ProdHeader.VALIDATE("Source No.", "Item No.");
        ProdHeader.Status := ProdHeader.Status::"Firm Planned";
        ProdHeader.Description := Description;
        ProdHeader."Description 2" := "Description 2";
        ProdHeader."Search Description" := "Job No.";
        ProdHeader."Starting Date" := "Posting Date";
        ProdHeader."Starting Time" := ProdSetup."Normal Starting Time";
        ProdHeader."Ending Date" := "Delivery Date" - 1;
        ProdHeader."Ending Time" := ProdSetup."Normal Ending Time";
        ProdHeader."Due Date" := ProdHeader."Ending Date";
        ProdHeader."Creation Date" := TODAY;
        ProdHeader.UpdateDatetime;
        ProdHeader.VALIDATE(Quantity, Quantity);

        ProdHeader."Location Code" := "Location Code";
        ProdHeader."Inventory Posting Group" := "Inventory Posting Group";
        ProdHeader."Gen. Prod. Posting Group" := "Gen. Prod. Posting Group";
        ProdHeader."Gen. Bus. Posting Group" := "Gen. Bus. Posting Group";
        ProdHeader.INSERT;
        ProdHeader.VALIDATE("Shortcut Dimension 1 Code", "Shortcut Dimension 1 Code");  //db, 24-09-04
        ProdHeader.VALIDATE("Shortcut Dimension 2 Code", "Shortcut Dimension 2 Code");  //db, 24-09-04
        ProdHeader.MODIFY;

        //create line production order
        ProdHeader.SETRANGE("No.",ProdHeader."No.");
        CreateProdOrderLines.Copy(ProdHeader,1,"Variant Code",FALSE);
      END;

      EXIT(ProdHeader."No.");
    END;

    PROCEDURE CheckStatusAndRun@1210190000(lvPrint@1210190007 : Boolean);
    VAR
      ItemRec@1210190000 : Record 27;
      lvItemJnlLine@1210190003 : Record 83;
      ItemJnlTemplate@1100485001 : Record 233;
      NoSeriesMgt@1100485000 : Codeunit 396;
      lvItemJnlLineDocument@1210190004 : Code[20];
      TempItemJournalLine@1100528400 : TEMPORARY Record 83;
    BEGIN
      //**4PS
      lvItemJnlLine.COPY(Rec);

      lvItemJnlLine.SETRANGE("Journal Template Name", lvItemJnlLine."Journal Template Name");
      lvItemJnlLine.SETRANGE("Journal Batch Name", lvItemJnlLine."Journal Batch Name");
      IF lvItemJnlLine.FIND('-') THEN BEGIN
        REPEAT
          HandlePartialPost(lvItemJnlLine, TempItemJournalLine);
          ItemRec.GET(lvItemJnlLine."Item No.");
          IF ItemRec."Replenishment System" = ItemRec."Replenishment System"::"Prod. Order" THEN BEGIN
            //db.sn, 14-01-08
            IF (lvItemJnlLine."Entry Type" = lvItemJnlLine."Entry Type"::"Positive Adjmt.") OR
               (lvItemJnlLine."Entry Type" = lvItemJnlLine."Entry Type"::"Negative Adjmt.") THEN BEGIN
              IF lvItemJnlLine."Inventory Status" < lvItemJnlLine."Inventory Status"::"on stock" THEN
                lvItemJnlLine."Inventory Status" := lvItemJnlLine."Inventory Status"::"on stock";
            END;
            //db.en, 14-01-08
            IF lvItemJnlLine."Inventory Status" = lvItemJnlLine."Inventory Status"::free THEN BEGIN
              DetermineInventory(lvItemJnlLine);
              IF InventoryDec >= lvItemJnlLine.Quantity THEN
                lvItemJnlLine."Inventory Status" := "Inventory Status"::"on stock";
            END;
            IF lvItemJnlLine."Inventory Status" = lvItemJnlLine."Inventory Status"::produced THEN
              lvItemJnlLine."Inventory Status" := lvItemJnlLine."Inventory Status"::"on stock";
          END ELSE BEGIN
            IF lvItemJnlLine."Inventory Status" < lvItemJnlLine."Inventory Status"::"on stock" THEN
              lvItemJnlLine."Inventory Status" := lvItemJnlLine."Inventory Status"::"on stock";
          END;
          IF lvItemJnlLine."Quantity (Released)" <> 0 THEN BEGIN
            IF lvItemJnlLine.Quantity = lvItemJnlLine."Quantity (Released)" THEN
              lvItemJnlLine."Inventory Status" := lvItemJnlLine."Inventory Status"::processed;
            //IF lvItemJnlLine."Inventory Status" = lvItemJnlLine."Inventory Status"::"on stock" THEN BEGIN
            IF lvItemJnlLine.Blocked = FALSE THEN BEGIN  //db, 10-02-11: M24242 (same check as next setrange)
              lvItemJnlLine.Quantity := lvItemJnlLine.Quantity - lvItemJnlLine."Quantity (Released)";
              lvItemJnlLine."Quantity (Released)" := 0;
              lvItemJnlLine.VALIDATE(Quantity);
            END;
          END;

          //when new mutation are added in Item Journal with more recent document no.
          //then (default) posting run complains that document no. does not match with last one in journal serie.

          IF ItemJnlTemplate.GET(lvItemJnlLine."Journal Template Name", lvItemJnlLine."Journal Batch Name") THEN BEGIN
            IF ItemJnlTemplate."No. Series" <> '' THEN BEGIN
              IF lvItemJnlLineDocument = '' THEN BEGIN
                CLEAR(NoSeriesMgt);
                lvItemJnlLineDocument := NoSeriesMgt.GetNextNo(ItemJnlTemplate."No. Series", lvItemJnlLine."Posting Date", FALSE);
              END;
              lvItemJnlLine."Document No." := lvItemJnlLineDocument;
            END;
          END;
          lvItemJnlLine.MODIFY;
          IF lvItemJnlLine."Inventory Status" = lvItemJnlLine."Inventory Status"::processed THEN
            lvItemJnlLine.DELETE(TRUE);
        UNTIL lvItemJnlLine.NEXT = 0;
      END;

      //lvItemJnlLine.SETRANGE("Inventory Status", lvItemJnlLine."Inventory Status"::"on stock"); //db, 30-09-08 (check blocked)
      CreateJnlLinesForPartialPosts(TempItemJournalLine);
      lvItemJnlLine.SETRANGE(Blocked, FALSE);
      COMMIT;
      IF lvPrint = FALSE THEN
        CODEUNIT.RUN(CODEUNIT::"Item Jnl.-Post", lvItemJnlLine)
      ELSE
        CODEUNIT.RUN(CODEUNIT::"Item Jnl.-Post+Print", lvItemJnlLine);

      IF NOT InvtSetup."Default Blocked" THEN
        UnblockNewJnlLinesForPartPosts(TempItemJournalLine);

      CurrentJnlBatchName := GETRANGEMAX("Journal Batch Name");
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE EditText@1210190001();
    VAR
      TextFrm@1210190000 : Page 11012120;
    BEGIN
      //**4PS
      IF "Line No." = 0 THEN
        ERROR(Text11012002);

      TextFrm.SetSelection(DATABASE::"Item Journal Line","Journal Template Name", "Journal Batch Name",
        '','','','',"Line No.", 0);

      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    PROCEDURE GetOtherDescriptions@1210190002();
    VAR
      ProjRec@1210190000 : Record 11072003;
      ServOrderRec@1210190001 : Record 11012823;
      ServLocRec@1210190004 : Record 11012801;
    BEGIN
      //**4PS
      ProjDescription := '';
      ServOrderDescription := '';
      ServLocDescription := '';

      IF "Job No." <> '' THEN BEGIN
        IF "Receiving Company" <> '' THEN
          ProjRec.CHANGECOMPANY("Receiving Company")
        ELSE
          ProjRec.CHANGECOMPANY(COMPANYNAME);
        IF ProjRec.GET("Job No.") THEN
          ProjDescription := ProjRec.Description;
      END;
      IF "Service Order No." <> '' THEN BEGIN
        IF "Receiving Company" <> '' THEN
          ServOrderRec.CHANGECOMPANY("Receiving Company")
        ELSE
          ServOrderRec.CHANGECOMPANY(COMPANYNAME);
        IF ServOrderRec.GET("Service Order No.") THEN
          ServOrderDescription := ServOrderRec.Description;
      END;
      IF "Service Location No." <> '' THEN BEGIN
        IF "Receiving Company" <> '' THEN
          ServLocRec.CHANGECOMPANY("Receiving Company")
        ELSE
          ServLocRec.CHANGECOMPANY(COMPANYNAME);
        IF ServLocRec.GET("Service Location No.") THEN
          ServLocDescription := ServLocRec.Description;
      END;
    END;

    PROCEDURE SplitLines@9();
    VAR
      LineNumber@11012000 : Integer;
      ItemJournalLine@1100528400 : Record 83;
      ItemJournalLine2@1210190006 : Record 83;
      TempItemJournalLine@1100528401 : TEMPORARY Record 83;
    BEGIN
      //**4PS
      ItemJournalLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(ItemJournalLine);
      IF NOT ItemJournalLine.FINDSET THEN BEGIN
        MESSAGE(Text11012001);
        EXIT;
      END;

      REPEAT
        ItemJournalLine."Related Document (Parent)" :=
          ItemJournalLine."Document No." + '~' + STRSUBSTNO('%1', ItemJournalLine."Line No.");
        ItemJournalLine.MODIFY(TRUE);
        TempItemJournalLine := ItemJournalLine;
        TempItemJournalLine.INSERT;
      UNTIL ItemJournalLine.NEXT = 0;

      IF TempItemJournalLine.FINDSET THEN
        REPEAT
          LineNumber := TempItemJournalLine."Line No." + 1;
          WHILE ItemJournalLine2.GET(
            TempItemJournalLine."Journal Template Name", TempItemJournalLine."Journal Batch Name", LineNumber)
          DO
            LineNumber := LineNumber + 1;

          ItemJournalLine2 := TempItemJournalLine;
          ItemJournalLine2."Line No." := LineNumber;
          ItemJournalLine2.INSERT(TRUE);
          ItemJournalLine2.VALIDATE("Shortcut Dimension 1 Code");
          ItemJournalLine2.VALIDATE("Shortcut Dimension 2 Code");
          ItemJournalLine2.Blocked := InvtSetup."Default Blocked";
          ItemJournalLine2."Inventory Status" := ItemJournalLine2."Inventory Status"::free;
          ItemJournalLine2."Production Status" := ItemJournalLine2."Production Status"::Finished;
          ItemJournalLine2."Production Order" := '';
          ItemJournalLine2.Quantity := 0;
          ItemJournalLine2."Quantity (Produced)" := 0;
          ItemJournalLine2."Quantity (Released)" := 0;
          ItemJournalLine2."Related Document (Parent)" := '';
          ItemJournalLine2."Related Document (Child)" := TempItemJournalLine."Related Document (Parent)";
          ItemJournalLine2.MODIFY(TRUE);
        UNTIL TempItemJournalLine.NEXT = 0;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE GetReceivingDept@1100485000() DepartmentCode : Code[20];
    VAR
      ProjRec@1100485001 : Record 11072003;
      ServOrderRec@1100485003 : Record 11012823;
    BEGIN
      //**4PS
      DepartmentCode := '';
      IF "Job No." <> '' THEN BEGIN
        IF "Receiving Company" <> '' THEN
          ProjRec.CHANGECOMPANY("Receiving Company")
        ELSE
          ProjRec.CHANGECOMPANY(COMPANYNAME);
        IF ProjRec.GET("Job No.") THEN
          DepartmentCode := ProjRec."Global Dimension 1 Code";
      END;
      IF "Service Order No." <> '' THEN BEGIN
        IF "Receiving Company" <> '' THEN
          ServOrderRec.CHANGECOMPANY("Receiving Company")
        ELSE
          ServOrderRec.CHANGECOMPANY(COMPANYNAME);
        IF ServOrderRec.GET("Service Order No.") THEN
          DepartmentCode := ServOrderRec."Global Dimension 1 Code";
      END;

      EXIT(DepartmentCode);
    END;

    PROCEDURE Deblock@1100485001();
    VAR
      lvItemJnlLine@1100485000 : Record 83;
      lvDeblock@1100485001 : Boolean;
    BEGIN
      //**4PS
      IF NOT CONFIRM(Text11012005) THEN
        EXIT;

      WITH lvItemJnlLine DO BEGIN
        COPY(Rec);
        SETRANGE("Journal Template Name", "Journal Template Name");
        SETRANGE("Journal Batch Name", "Journal Batch Name");
        CurrPage.SETSELECTIONFILTER(lvItemJnlLine);
        IF ISEMPTY THEN
          MESSAGE(Text11012001);
        SETCURRENTKEY("Delivery Date","Journal Template Name","Journal Batch Name");
        SETRANGE(Blocked, TRUE);
        IF FINDSET(TRUE, FALSE) THEN
        REPEAT
          lvDeblock := TRUE;
          IF InvtSetup."Block Deblock Insuff. Invent." THEN BEGIN
            DetermineInventory(lvItemJnlLine);
            IF "Quantity to Post" > InventoryDec - QuantityToPost THEN
              lvDeblock := FALSE;
          END;
          IF lvDeblock THEN BEGIN
            Blocked := FALSE;
            MODIFY;
          END;
        UNTIL lvItemJnlLine.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE HandlePartialPost@1100528400(VAR ItemJournalLine@1100528400 : Record 83;VAR TempItemJournalLine@1100528401 : Record 83);
    VAR
      RestQuantity@1100528403 : Decimal;
      LineNo@1210190000 : Integer;
    BEGIN
      //**4PS.sn
      IF ItemJournalLine.Blocked = TRUE THEN
        EXIT;

      IF ItemJournalLineIsSplitLine(ItemJournalLine) THEN
        EXIT;

      IF ItemJournalLine."Quantity to Post" = 0 THEN
        ERROR(Text11012006, ItemJournalLine.FIELDCAPTION("Quantity to Post"));

      IF ItemJournalLine."Quantity to Post" > ItemJournalLine.Quantity THEN
        ItemJournalLine.VALIDATE(Quantity, ItemJournalLine."Quantity to Post");

      IF ItemJournalLine."Quantity to Post" < ItemJournalLine.Quantity THEN BEGIN
        RestQuantity := ItemJournalLine.Quantity - ItemJournalLine."Quantity to Post";
        ItemJournalLine.VALIDATE(Quantity, ItemJournalLine."Quantity to Post");
        ItemJournalLine.MODIFY;

        TempItemJournalLine := ItemJournalLine;
        //TempItemJournalLine."Line No." := // C000709.o
        LineNo := // C000709.n
          GetFirstFreeLineNo(ItemJournalLine, TempItemJournalLine);
        TempItemJournalLine := ItemJournalLine; // C000709.n
        TempItemJournalLine."Line No." := LineNo; // C000709.n
        TempItemJournalLine.VALIDATE(Quantity, RestQuantity);
        TempItemJournalLine.Blocked := TRUE;
        TempItemJournalLine.INSERT(TRUE);
      END;
      //**4PS.en
    END;

    LOCAL PROCEDURE CreateJnlLinesForPartialPosts@1100528402(VAR TempItemJournalLine@1100528400 : Record 83);
    VAR
      ItemJournalLine@1100528401 : Record 83;
    BEGIN
      //**4PS.sn
      IF TempItemJournalLine.FINDSET THEN
        REPEAT
          ItemJournalLine := TempItemJournalLine;
          ItemJournalLine.INSERT(TRUE);
        UNTIL TempItemJournalLine.NEXT = 0;
      //**4PS.en
    END;

    LOCAL PROCEDURE GetFirstFreeLineNo@1100528405(ItemJournalLine@1100528400 : Record 83;VAR TempItemJournalLine@1100528401 : Record 83) LineNo : Integer;
    BEGIN
      //**4PS.sn
      LineNo := ItemJournalLine."Line No." + 1;
      WHILE ItemJournalLine.GET(
              ItemJournalLine."Journal Template Name",
              ItemJournalLine."Journal Batch Name",
              LineNo) OR
            TempItemJournalLine.GET(
              ItemJournalLine."Journal Template Name",
              ItemJournalLine."Journal Batch Name",
              LineNo)
      DO
        LineNo := LineNo + 1;
      //**4PS.en
    END;

    LOCAL PROCEDURE ItemJournalLineIsSplitLine@1100528401(ItemJournalLine@1100528400 : Record 83) : Boolean;
    BEGIN
      //**4PS.sn
      EXIT(
        (ItemJournalLine."Quantity (Released)" > 0) OR
        (ItemJournalLine."Related Document (Parent)" <> '') OR
        (ItemJournalLine."Related Document (Child)" <> ''));
      //**4PS.en
    END;

    LOCAL PROCEDURE UnblockNewJnlLinesForPartPosts@1100528403(VAR TempItemJournalLine@1100528400 : Record 83);
    VAR
      ItemJournalLine@1100528401 : Record 83;
    BEGIN
      //**4PS.sn
      IF InvtSetup."Default Blocked" THEN
        EXIT;

      IF TempItemJournalLine.FINDSET THEN
        REPEAT
          IF ItemJournalLine.GET(
              TempItemJournalLine."Journal Template Name",
              TempItemJournalLine."Journal Batch Name",
              TempItemJournalLine."Line No.")
          THEN BEGIN
            ItemJournalLine.Blocked := FALSE;
            ItemJournalLine.MODIFY;
          END;
        UNTIL TempItemJournalLine.NEXT = 0;
      //**4PS.en
    END;

    PROCEDURE ImportInventoryOrderLines@1100528300(LineType@1100528301 : Option);
    VAR
      ImportICIventoryLines@1100528300 : Report 11012655;
    BEGIN
      //**4PS
      ImportICIventoryLines.SetLineType(LineType); //1=Order,2=Delivery,3=Transfer
      ImportICIventoryLines.SetTemplateAndBatch("Journal Template Name", CurrentJnlBatchName); //C018816
      ImportICIventoryLines.RUNMODAL;
    END;

    LOCAL PROCEDURE ReceivingCompanyOnAfterValidat@19023184();
    BEGIN
      CurrPage.SAVERECORD;  //**4PS.n
    END;

    LOCAL PROCEDURE ServiceOrderNoOnAfterValidate@19042308();
    BEGIN
      GetOtherDescriptions;  //**4PS.n
    END;

    LOCAL PROCEDURE JobNoOnAfterValidate@19070084();
    BEGIN
      GetOtherDescriptions;  //**4PS.n
    END;

    LOCAL PROCEDURE ItemNoOnAfterValidate@19061248();
    BEGIN
      //**4PS.sn
      DetermineInventory(Rec);
      GetOtherDescriptions;
      //**4PS.en
    END;

    LOCAL PROCEDURE LocationCodeOnAfterValidate@19034787();
    BEGIN
      DetermineInventory(Rec);  //**4PS.n
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      CurrPage.UPDATE(TRUE);  //**4PS.n  (update quantity released)
    END;

    LOCAL PROCEDURE BlockedOnAfterValidate@19012791();
    BEGIN
      //**4PS
      CurrPage.SAVERECORD;
      DetermineInventory(Rec);
      IF NOT Blocked AND InvtSetup."Block Deblock Insuff. Invent." AND
        ("Entry Type" = "Entry Type"::Sale) THEN
        IF (InventoryDec - QuantityToPost) < 0 THEN BEGIN
          Blocked := TRUE;
          CurrPage.UPDATE(TRUE);
          MESSAGE(Text11012004);
        END;
    END;

    LOCAL PROCEDURE CurrentJnlBatchNameOnAfterVali@19002411();
    BEGIN
      CurrPage.SAVERECORD;
      ItemJnlMgt.SetName(CurrentJnlBatchName,Rec);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE ShowItemInventoryByCompany@1100409000();
    VAR
      AdviceOrderMgt@1100528300 : Codeunit 11012041;
    BEGIN
      AdviceOrderMgt.RunItemInventoryByCompany("Item No.");
    END;

    PROCEDURE SetSelectionTemplateAndBatch@1100526200(TemplName@1100526200 : Code[10];BatchName@1100526201 : Code[10]);
    BEGIN
      //**4PS (C005928)
      FILTERGROUP := 2;
      SETRANGE("Journal Template Name", TemplName);
      SETRANGE("Journal Batch Name", BatchName);
      FILTERGROUP := 0;
      CurrentJnlBatchName := BatchName;
      TemplAndBatchSelectionSet := TRUE;
    END;

    BEGIN
    END.
  }
}

