OBJECT Page 50 Purchase Order
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00.00.45243,NAVSE9.FI9.DK9.NO9,4PS9.00,4PSSE.DK.NO.FI,EXF400000,PE6;
  }
  PROPERTIES
  {
    CaptionML=ENU=Purchase Order;
    SourceTable=Table38;
    PopulateAllFields=Yes;
    SourceTableView=WHERE(Document Type=FILTER(Order));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=ENU=New,Process,Report,ICM,Mail Documents;
    OnInit=VAR
             PurchSetup@1100528000 : Record 312;
           BEGIN
             SetExtDocNoMandatoryCondition;

             //**4PS.sn
             //Fields which are set with variable FieldsEditable
             //"ICM StatusEditable","ICM ProcedureEditable","Reference (ICM)Editable",ShipmentInstruct1Editable,ShipmentInstruct2Editable
             FieldsEditable := TRUE;
             GS1Editable := TRUE;

             "Induction Note No.Editable" := TRUE;
             "Payment AgreementEditable" := TRUE;

             PurchSetup.GET;
             LinkItemDocsToPurchHeadEnabled := PurchSetup."Allow Link Item Docs to Purch.";
             //**4PS.en
           END;

    OnOpenPage=VAR
                 EXApprovalSetup@1100285500 : Record 12013601;
               BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01

                 SetDocNoVisible;

                 IF UserMgt.GetPurchasesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetPurchasesFilter);
                   FILTERGROUP(0);

                 END;
                 //4PSSE
                 GLSetup.GET;
                 DKinfoEnable := GLSetup."Danish localization active";
                 FIinfoEnable := GLSetup."Finnish localization active";
                 NORlocalizationEnable := GLSetup."Norwegian Localization Active";
                 ExFlowVisible := EXApprovalSetup.READPERMISSION;
               END;

    OnAfterGetRecord=VAR
                       Vendor@1100528300 : Record 23;
                       DummyAmount@1210190000 : Decimal;
                     BEGIN
                       SetControlAppearance;

                       //**4PS.sn
                       "Payment AgreementEditable" := VendorIsSubcontractor;
                       "Induction Note No.Editable" := "Invoice Conduction Note";
                       GetReceivedInvoicedAmounts(
                         DummyAmount, DummyAmount,
                         AmountReceived, AmountInvoiced, DummyAmount, DummyAmount,
                         0,'',''); //call 26769

                       CALCFIELDS("ICM Login Code");
                       FieldsEditable := ("ICM Login Code"<>'');
                       GS1Editable := FieldsEditable;
                       IF (NOT FieldsEditable) THEN BEGIN
                         IF (Vendor.GET("Buy-from Vendor No.")) THEN BEGIN
                           GS1Editable := (Vendor."Electronic Order Type" = Vendor."Electronic Order Type"::"GS1 (SOAP)") OR
                                          (Vendor."Electronic Order Type" = Vendor."Electronic Order Type"::"GS1 (XML-RPC)");
                         END;
                       END;

                       IF gFromReference THEN BEGIN
                         gFromReference := FALSE;
                         CurrPage.PurchLines.PAGE.InitSelectionFromReference(gOrderLineNo);
                       END;

                       PurchaseHeaderExtension.GetPurchHeadExtension("Document Type", "No."); //kzwerver, 110929, n, #28914
                       //**4PS.en
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                  //"Responsibility Center" := UserMgt.GetPurchasesFilter; //**4PS.o
                  //**4PS.sn
                  "Responsibility Center" := UserMgt.GetPurchasesDefault;
                  AmountReceived := 0;
                  AmountInvoiced := 0;
                  //**4PS.en
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    OnAfterGetCurrRecord=BEGIN
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                           ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);
                           OnAfterGetCurrRec; //**4PS.n
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 61      ;1   ;ActionGroup;
                      CaptionML=ENU=O&rder;
                      Image=Order }
      { 129     ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      Promoted=No;
                      PromotedIsBig=No;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 63      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=ENU=Statistics;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 OpenPurchaseOrderStatistics;
                                 PurchCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 64      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Vendor Card;
                      RunObject=Page 26;
                      RunPageLink=No.=FIELD(Buy-from Vendor No.);
                      Promoted=No;
                      PromotedIsBig=No;
                      Image=EditLines }
      { 53      ;2   ;Action    ;
                      CaptionML=ENU=Approvals;
                      Image=Approvals;
                      OnAction=VAR
                                 ApprovalEntries@1001 : Page 658;
                               BEGIN
                                 ApprovalEntries.Setfilters(DATABASE::"Purchase Header","Document Type","No.");
                                 ApprovalEntries.RUN;
                               END;
                                }
      { 65      ;2   ;Action    ;
                      CaptionML=ENU=Co&mments;
                      RunObject=Page 66;
                      RunPageLink=Document Type=FIELD(Document Type),
                                  No.=FIELD(No.),
                                  Document Line No.=CONST(0);
                      Image=ViewComments }
      { 1210190006;2 ;Action    ;
                      CaptionML=ENU=Blanket Scheme;
                      Image=BlanketOrder;
                      OnAction=VAR
                                 PurchHead@1210190002 : Record 38;
                               BEGIN
                                 //**4PS (RTC.c)
                                 TESTFIELD("No.");
                                 TESTFIELD("Document Type", "Document Type"::Order);
                                 TESTFIELD("Purchase Order Type", "Purchase Order Type"::"Blanket Order");
                                 PurchHead.SETRANGE("No.", "No.");
                                 //Note: Filters on "Document Type" and "Purchase Order Type" not needed, because hard filters in Blanket Scheme
                                 PAGE.RUNMODAL(PAGE::"Blanket Scheme", PurchHead);
                               END;
                                }
      { 9       ;1   ;ActionGroup;
                      CaptionML=ENU=Documents;
                      Image=Documents }
      { 66      ;2   ;Action    ;
                      CaptionML=ENU=Receipts;
                      RunObject=Page 145;
                      RunPageView=SORTING(Order No.);
                      RunPageLink=Order No.=FIELD(No.);
                      Image=PostedReceipts }
      { 67      ;2   ;Action    ;
                      CaptionML=ENU=Invoices;
                      Promoted=No;
                      PromotedIsBig=No;
                      Image=Invoice;
                      OnAction=VAR
                                 lPurchReceiptLine@1210190002 : Record 121;
                                 lPurchInvLine@1210190001 : Record 123;
                                 lPurchInvHeader@1210190000 : Record 122;
                               BEGIN
                                 //**4PS
                                 lPurchReceiptLine.SETCURRENTKEY("Order No.");
                                 lPurchReceiptLine.SETRANGE("Order No.","No.");
                                 IF lPurchReceiptLine.FINDSET THEN
                                   REPEAT
                                     lPurchInvLine.SETCURRENTKEY("Receipt No.", "Receipt Line No.");
                                     lPurchInvLine.SETRANGE("Receipt No.",lPurchReceiptLine."Document No.");
                                     lPurchInvLine.SETRANGE("Receipt Line No.",lPurchReceiptLine."Line No.");
                                     IF lPurchInvLine.FINDSET THEN
                                       REPEAT
                                         IF lPurchInvHeader.GET(lPurchInvLine."Document No.") THEN
                                           lPurchInvHeader.MARK(TRUE);
                                       UNTIL lPurchInvLine.NEXT = 0;
                                   UNTIL lPurchReceiptLine.NEXT = 0;

                                 lPurchInvHeader.MARKEDONLY(TRUE);

                                 PAGE.RUNMODAL(PAGE::"Posted Purchase Invoices",lPurchInvHeader);
                               END;
                                }
      { 1210190001;2 ;Action    ;
                      CaptionML=ENU=Credit Memos;
                      Image=CreditMemo;
                      OnAction=VAR
                                 lPurchReceiptLine@1210190002 : Record 121;
                                 lPurchCredMemoLine@1210190001 : Record 125;
                                 lPurchCredMemoHeader@1210190000 : Record 124;
                               BEGIN
                                 //**4PS
                                 lPurchReceiptLine.SETCURRENTKEY("Order No.");
                                 lPurchReceiptLine.SETRANGE("Order No.","No.");
                                 IF lPurchReceiptLine.FINDSET THEN
                                   REPEAT
                                     lPurchCredMemoLine.SETCURRENTKEY("Receipt No.", "Receipt Line No.");
                                     lPurchCredMemoLine.SETRANGE("Receipt No.",lPurchReceiptLine."Document No.");
                                     lPurchCredMemoLine.SETRANGE("Receipt Line No.",lPurchReceiptLine."Line No.");
                                     IF lPurchCredMemoLine.FINDSET THEN
                                       REPEAT
                                         IF lPurchCredMemoHeader.GET(lPurchCredMemoLine."Document No.") THEN
                                           lPurchCredMemoHeader.MARK(TRUE);
                                       UNTIL lPurchCredMemoLine.NEXT = 0;
                                   UNTIL lPurchReceiptLine.NEXT = 0;

                                 //add credit headers (document copy of invoice). These do not have receipts.
                                 lPurchCredMemoHeader.SETCURRENTKEY("Related Purch. Order No.");
                                 lPurchCredMemoHeader.SETRANGE("Related Purch. Order No.", "No.");
                                 IF lPurchCredMemoHeader.FINDSET THEN
                                   REPEAT
                                     lPurchCredMemoHeader.MARK(TRUE);
                                   UNTIL lPurchCredMemoHeader.NEXT = 0;

                                 lPurchCredMemoHeader.SETCURRENTKEY("No."); //Always primary key when using MARKEDONLY
                                 lPurchCredMemoHeader.SETRANGE("Related Purch. Order No.");
                                 lPurchCredMemoHeader.MARKEDONLY(TRUE);

                                 PAGE.RUNMODAL(PAGE::"Posted Purchase Credit Memos",lPurchCredMemoHeader);
                               END;
                                }
      { 205     ;2   ;Action    ;
                      Name=PostedPrepaymentInvoices;
                      CaptionML=ENU=Prepa&yment Invoices;
                      Description=**4PS.o;
                      RunObject=Page 146;
                      RunPageView=SORTING(Prepayment Order No.);
                      RunPageLink=Prepayment Order No.=FIELD(No.);
                      Visible=FALSE;
                      Image=PrepaymentInvoice }
      { 206     ;2   ;Action    ;
                      Name=PostedPrepaymentCrMemos;
                      CaptionML=ENU=Prepayment Credi&t Memos;
                      Description=**4PS.o;
                      RunObject=Page 147;
                      RunPageView=SORTING(Prepayment Order No.);
                      RunPageLink=Prepayment Order No.=FIELD(No.);
                      Visible=FALSE;
                      Image=PrepaymentCreditMemo }
      { 1100525010;2 ;Action    ;
                      CaptionML=ENU=Inward Processing Relief;
                      Image=SubcontractingWorksheet;
                      OnAction=BEGIN
                                 //**4PS
                                 ShowInwardLines;
                               END;
                                }
      { 1210190027;2 ;Action    ;
                      CaptionML=ENU=Warranty Data;
                      RunObject=Page 11124856;
                      RunPageLink=Document Type=FIELD(Document Type),
                                  Document No.=FIELD(No.);
                      Image=BeginningText }
      { 11      ;1   ;ActionGroup;
                      CaptionML=ENU=Warehouse;
                      Image=Warehouse }
      { 181     ;2   ;Separator  }
      { 180     ;2   ;Action    ;
                      CaptionML=ENU=In&vt. Put-away/Pick Lines;
                      RunObject=Page 5774;
                      RunPageView=SORTING(Source Document,Source No.,Location Code);
                      RunPageLink=Source Document=CONST(Purchase Order),
                                  Source No.=FIELD(No.);
                      Image=PickLines }
      { 148     ;2   ;Action    ;
                      CaptionML=ENU=Whse. Receipt Lines;
                      RunObject=Page 7342;
                      RunPageView=SORTING(Source Type,Source Subtype,Source No.,Source Line No.);
                      RunPageLink=Source Type=CONST(39),
                                  Source Subtype=FIELD(Document Type),
                                  Source No.=FIELD(No.);
                      Image=ReceiptLines }
      { 182     ;2   ;Separator  }
      { 12013597;2   ;Action    ;
                      Name=<Action1100285004>;
                      ShortCutKey=Ctrl+I;
                      CaptionML=ENU=Show document;
                      Visible=ExFlowVisible;
                      Image=Document;
                      OnAction=BEGIN
                                 // ExFlow
                                 ExFlow.ShowImageDocument("Document Type","No.");
                               END;
                                }
      { 12013598;2   ;Action    ;
                      Name=<Action1100285005>;
                      CaptionML=ENU=Attached Fil&es;
                      RunObject=Page 12013644;
                      RunPageView=SORTING(Document Type,Document No.,Attached);
                      RunPageLink=Document Type=FIELD(Document Type),
                                  Document No.=FIELD(No.);
                      Image=Documents }
      { 183     ;2   ;ActionGroup;
                      CaptionML=ENU=Dr&op Shipment;
                      Image=Delivery }
      { 226     ;3   ;Action    ;
                      CaptionML=ENU=Get &Sales Order;
                      RunObject=Codeunit 76;
                      Image=Order }
      { 227     ;2   ;ActionGroup;
                      CaptionML=ENU=Speci&al Order;
                      Image=SpecialOrder }
      { 228     ;3   ;Action    ;
                      AccessByPermission=TableData 110=R;
                      CaptionML=ENU=Get &Sales Order;
                      Image=Order;
                      OnAction=VAR
                                 PurchHeader@1000 : Record 38;
                                 DistIntegration@1001 : Codeunit 5702;
                               BEGIN
                                 PurchHeader.COPY(Rec);
                                 DistIntegration.GetSpecialOrders(PurchHeader);
                                 Rec := PurchHeader;
                               END;
                                }
      { 1100525032;1 ;ActionGroup;
                      CaptionML=ENU=Consent;
                      Image=BOMLedger }
      { 1100525024;2 ;Action    ;
                      CaptionML=ENU=Consent Lines;
                      RunObject=Page 11071870;
                      RunPageLink=Document Type=CONST(Order),
                                  Document No.=FIELD(No.);
                      Image=BOMLedger }
      { 1100525025;2 ;Action    ;
                      CaptionML=ENU=Insert Consent Lines;
                      Image=BOMLedger;
                      OnAction=VAR
                                 ConsentLine@1100525000 : Record 11012226;
                               BEGIN
                                 //**4PS
                                 IF ConsentLine.READPERMISSION THEN
                                   EditConsentLines;
                               END;
                                }
      { 1210190034;1 ;Action    ;
                      CaptionML=ENU=Document &Relations;
                      RunObject=Page 11012413;
                      RunPageLink=Document Type=CONST(Purchase Order),
                                  No.=FIELD(No.);
                      Image=Relationship }
      { 1100528402;1 ;Action    ;
                      CaptionML=ENU=Doc&uments;
                      Image=Documents;
                      OnAction=VAR
                                 RecRef@1100528701 : RecordRef;
                                 DocumentFilters@1100528702 : Codeunit 11012432;
                               BEGIN
                                 //**4PS
                                 RecRef.GETTABLE(Rec);
                                 DocumentFilters.CreateTempFilterAndExecute1(RecRef, "Shortcut Dimension 1 Code", FALSE, TRUE);
                               END;
                                }
      { 1100485006;1 ;Action    ;
                      CaptionML=ENU=Progress Scheme;
                      RunObject=Page 11020299;
                      RunPageLink=Type=CONST(PurchOrder),
                                  Scheme=FIELD(Progress Scheme),
                                  Document No.=FIELD(No.);
                      Visible=FALSE }
      { 1100525023;1 ;Action    ;
                      CaptionML=ENU=Phase List;
                      RunObject=Page 11072630;
                      RunPageLink=Document Type=FIELD(Document Type),
                                  Document No.=FIELD(No.);
                      Image=List }
      { 1210190043;1 ;Action    ;
                      CaptionML=ENU=Purchase Texts;
                      RunObject=Page 11012126;
                      RunPageLink=Line Type=CONST(Purchase Order),
                                  No.=FIELD(No.);
                      Image=Text }
      { 1100409004;1 ;Action    ;
                      CaptionML=ENU=Guarantee;
                      RunObject=Page 11229267;
                      RunPageLink=Purchase Order=FIELD(No.);
                      Image=Splitlines }
      { 1100485903;1 ;ActionGroup;
                      CaptionML=ENU=Complaint Management }
      { 1100485904;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create New Complaint;
                      Image=EditReminder;
                      OnAction=VAR
                                 lvComplDocRec@1100485001 : Record 11012457;
                                 lvComplMgtCU@1100485000 : Codeunit 11012418;
                               BEGIN
                                 //**4PS
                                 TESTFIELD("No.");
                                 lvComplMgtCU.CreateNewComplaintOnDocument(lvComplDocRec."Document Type"::"O-P", "No.");
                               END;
                                }
      { 1100485905;2 ;Action    ;
                      CaptionML=ENU=Open Complaints;
                      Image=Reminder;
                      OnAction=VAR
                                 lvComplDocRec@1100485001 : Record 11012457;
                                 lvComplMgtCU@1100485000 : Codeunit 11012418;
                               BEGIN
                                 //**4PS
                                 lvComplMgtCU.ShowComplaintOnDocument(lvComplDocRec."Document Type"::"O-P", "No.", TRUE);
                               END;
                                }
      { 1100485906;2 ;Action    ;
                      CaptionML=ENU=Complaints;
                      Image=ReminderTerms;
                      OnAction=VAR
                                 lvComplDocRec@1100485001 : Record 11012457;
                                 lvComplMgtCU@1100485000 : Codeunit 11012418;
                               BEGIN
                                 //**4PS
                                 lvComplMgtCU.ShowComplaintOnDocument(lvComplDocRec."Document Type"::"O-P", "No.", FALSE);
                               END;
                                }
      { 1210190030;2 ;Action    ;
                      CaptionML=ENU=&Documents;
                      Image=Documents;
                      OnAction=VAR
                                 RecRef@1210190001 : RecordRef;
                                 DocumentFilters@1210190000 : Codeunit 11012432;
                               BEGIN
                                 //**4PS
                                 RecRef.GETTABLE(Rec);
                                 DocumentFilters.CreateTempFilterAndExecute1(RecRef, "Shortcut Dimension 1 Code", FALSE, TRUE);
                               END;
                                }
      { 1210190053;1 ;ActionGroup;
                      CaptionML=ENU=GS1 Loggings }
      { 1210190054;2 ;Action    ;
                      CaptionML=ENU=GS1 Errors;
                      Image=ErrorFALedgerEntries;
                      OnAction=BEGIN
                                 GS1ErrorLogDrillDown;
                               END;
                                }
      { 1210190055;2 ;Action    ;
                      CaptionML=ENU=GS1 Changes;
                      Image=LedgerEntries;
                      OnAction=BEGIN
                                 GS1PurchaseOrderLogDrillDown;
                               END;
                                }
      { 1100285003;1 ;ActionGroup;
                      CaptionML=ENU=In&ward Registration }
      { 1070000 ;2   ;Action    ;
                      CaptionML=ENU=In&ward Registration;
                      Promoted=Yes;
                      Image=InwardEntry;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 // NTR Start
                                 TESTFIELD("Buy-from Vendor No.");
                                 TESTFIELD("Pay-to Vendor No.");
                                 TESTFIELD("VAT Bus. Posting Group");
                                 TESTFIELD("Gen. Bus. Posting Group");
                                 InwRegList.PurchHeaderKey("Document Type","No.");
                                 InwRegList.RUN;
                                 // NTR End
                               END;
                                }
      { 1070001 ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Inward Reg. &Entries;
                      RunObject=Page 11128015;
                      RunPageView=SORTING(Source Type,Source No.);
                      RunPageLink=Source Type=FIELD(Document Type),
                                  Source No.=FIELD(No.);
                      Image=InwardEntry }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 37      ;1   ;ActionGroup;
                      CaptionML=ENU=Approval }
      { 35      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=ENU=Approve;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 33      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=ENU=Reject;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 31      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=ENU=Delegate;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 29      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=ENU=Comments;
                      RunObject=Page 660;
                      RunPageLink=Table ID=CONST(38),
                                  Document Type=FIELD(Document Type),
                                  Document No.=FIELD(No.);
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category4 }
      { 13      ;1   ;ActionGroup;
                      CaptionML=ENU=Release;
                      Image=ReleaseDoc }
      { 73      ;2   ;Separator  }
      { 137     ;2   ;Action    ;
                      Name=Release;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=ENU=Re&lease;
                      Promoted=Yes;
                      Image=ReleaseDoc;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReleasePurchDoc@1000 : Codeunit 415;
                               BEGIN
                                 ReleasePurchDoc.PerformManualRelease(Rec);
                               END;
                                }
      { 138     ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=ENU=Re&open;
                      Image=ReOpen;
                      OnAction=VAR
                                 ReleasePurchDoc@1001 : Codeunit 415;
                               BEGIN
                                 ReleasePurchDoc.PerformManualReopen(Rec);
                               END;
                                }
      { 1100525026;2 ;Action    ;
                      CaptionML=ENU=Finish Manual Fase;
                      ToolTipML=ENU=Finish Manual Fase;
                      Promoted=No;
                      Image=Confirm;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //**4PS
                                 FinishManualPhase;
                               END;
                                }
      { 1210190044;2 ;Action    ;
                      CaptionML=ENU=Close;
                      Image=Close;
                      OnAction=VAR
                                 ReleasePurchDoc@1210190001 : Codeunit 415;
                               BEGIN
                                 //**4PS
                                 ReleasePurchDoc.Close(Rec);
                               END;
                                }
      { 611     ;2   ;Separator  }
      { 68      ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 12047964;2   ;Action    ;
                      CaptionML=ENU=Get latest coding from vendor;
                      Promoted=Yes;
                      Image=CopyWorksheet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 // PEB0042
                                 gBaseMgt.GetLatestCodingFromVendor(Rec);
                                 // 0042
                               END;
                                }
      { 69      ;2   ;Action    ;
                      Name=CalculateInvoiceDiscount;
                      AccessByPermission=TableData 24=R;
                      CaptionML=ENU=Calculate &Invoice Discount/Charge;
                      Image=CalculateInvoiceDiscount;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                                 PurchCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 190     ;2   ;Separator  }
      { 179     ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Get St&d. Vend. Purchase Codes;
                      Image=VendorCode;
                      OnAction=VAR
                                 StdVendPurchCode@1000 : Record 175;
                               BEGIN
                                 StdVendPurchCode.InsertPurchLines(Rec);
                               END;
                                }
      { 75      ;2   ;Separator  }
      { 70      ;2   ;Action    ;
                      Name=CopyDocument;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy Document;
                      Promoted=Yes;
                      Image=CopyDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CopyPurchDoc.SetPurchHeader(Rec);
                                 CopyPurchDoc.RUNMODAL;
                                 CLEAR(CopyPurchDoc);
                                 IF GET("Document Type","No.") THEN;
                               END;
                                }
      { 142     ;2   ;Action    ;
                      Name=MoveNegativeLines;
                      Ellipsis=Yes;
                      CaptionML=ENU=Move Negative Lines;
                      Image=MoveNegativeLines;
                      OnAction=BEGIN
                                 CLEAR(MoveNegPurchLines);
                                 MoveNegPurchLines.SetPurchHeader(Rec);
                                 MoveNegPurchLines.RUNMODAL;
                                 MoveNegPurchLines.ShowDocument;
                               END;
                                }
      { 1100528000;2 ;Action    ;
                      CaptionML=ENU=Link Item Doucments to Order;
                      Visible=LinkItemDocsToPurchHeadEnabled;
                      Enabled=LinkItemDocsToPurchHeadEnabled;
                      Image=LinkWithExisting;
                      OnAction=VAR
                                 PurchLine@1100528000 : Record 39;
                               BEGIN
                                 //**4PS
                                 PurchLine.LinkItemDocumentsToPurchHead(Rec, PurchLine, FALSE);
                               END;
                                }
      { 1100285002;2 ;Separator  }
      { 1100285001;2 ;Action    ;
                      CaptionML=ENU=In&ward Registration;
                      Promoted=Yes;
                      Image=Document;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //NTR Start
                                 TESTFIELD("Buy-from Vendor No.");
                                 TESTFIELD("Pay-to Vendor No.");
                                 TESTFIELD("VAT Bus. Posting Group");
                                 TESTFIELD("Gen. Bus. Posting Group");
                                 IF ISSERVICETIER THEN BEGIN
                                   InwRegList.PurchHeaderKey("Document Type","No.");
                                   InwRegList.RUN;
                                 END ELSE BEGIN
                                   InwRegForm.PurchHeaderKey("Document Type","No.");
                                   InwRegForm.RUN;
                                 END;
                                 //NTR End
                               END;
                                }
      { 1100285000;2 ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Inward Reg. &Entries;
                      RunObject=Page 11128010 }
      { 225     ;2   ;ActionGroup;
                      CaptionML=ENU=Dr&op Shipment;
                      Image=Delivery }
      { 184     ;3   ;Action    ;
                      CaptionML=ENU=Get &Sales Order;
                      RunObject=Codeunit 76;
                      Image=Order }
      { 186     ;2   ;ActionGroup;
                      CaptionML=ENU=Speci&al Order;
                      Image=SpecialOrder }
      { 187     ;3   ;Action    ;
                      AccessByPermission=TableData 110=R;
                      CaptionML=ENU=Get &Sales Order;
                      Image=Order;
                      OnAction=VAR
                                 DistIntegration@1001 : Codeunit 5702;
                                 PurchHeader@1000 : Record 38;
                               BEGIN
                                 PurchHeader.COPY(Rec);
                                 DistIntegration.GetSpecialOrders(PurchHeader);
                                 Rec := PurchHeader;
                               END;
                                }
      { 173     ;2   ;Action    ;
                      Name=Archive Document;
                      CaptionML=ENU=Archi&ve Document;
                      Image=Archive;
                      OnAction=BEGIN
                                 ArchiveManagement.ArchivePurchDocument(Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 189     ;2   ;Separator  }
      { 51      ;2   ;ActionGroup;
                      Name=IncomingDocument;
                      CaptionML=ENU=Incoming Document;
                      ActionContainerType=NewDocumentItems;
                      Image=Documents }
      { 47      ;3   ;Action    ;
                      Name=IncomingDocCard;
                      CaptionML=ENU=View Incoming Document;
                      Enabled=HasIncomingDocument;
                      Image=ViewOrder;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IncomingDocument.ShowCardFromEntryNo("Incoming Document Entry No.");
                               END;
                                }
      { 45      ;3   ;Action    ;
                      Name=SelectIncomingDoc;
                      AccessByPermission=TableData 130=R;
                      CaptionML=ENU=Select Incoming Document;
                      Image=SelectLineToApply;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 VALIDATE("Incoming Document Entry No.",IncomingDocument.SelectIncomingDocument("Incoming Document Entry No."));
                               END;
                                }
      { 43      ;3   ;Action    ;
                      Name=IncomingDocAttachFile;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Incoming Document from File;
                      Enabled=NOT HasIncomingDocument;
                      Image=Attach;
                      OnAction=VAR
                                 IncomingDocumentAttachment@1000 : Record 133;
                               BEGIN
                                 IncomingDocumentAttachment.NewAttachmentFromPurchaseDocument(Rec);
                               END;
                                }
      { 41      ;3   ;Action    ;
                      Name=RemoveIncomingDoc;
                      CaptionML=ENU=Remove Incoming Document;
                      Enabled=HasIncomingDocument;
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 "Incoming Document Entry No." := 0;
                               END;
                                }
      { 1100525003;2 ;ActionGroup;
                      CaptionML=ENU=Additional;
                      Image=Versions }
      { 1100485031;3 ;Action    ;
                      CaptionML=ENU=Create Purchase Lines for Sub Projects;
                      Image=Purchase;
                      OnAction=BEGIN
                                 //**4PS
                                 DistrPurchLinesOverSubProjects(Rec);
                               END;
                                }
      { 1210190048;3 ;Action    ;
                      CaptionML=ENU=Select Blanket Order;
                      Image=BlanketOrder;
                      OnAction=BEGIN
                                 //**4PS
                                 SelectBlanketOrder;
                               END;
                                }
      { 1100485004;3 ;Action    ;
                      CaptionML=ENU=Calculate Removal Contribution;
                      Image=Calculate;
                      OnAction=BEGIN
                                 //**4PS
                                 DetermineRemovalContribution;
                               END;
                                }
      { 15      ;1   ;ActionGroup;
                      CaptionML=ENU=Request Approval;
                      Visible=FALSE }
      { 57      ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=ENU=Send A&pproval Request;
                      Description=**4PS.o;
                      Promoted=Yes;
                      Visible=FALSE;
                      Enabled=NOT OpenApprovalEntriesExist;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category9;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.CheckPurchaseApprovalsWorkflowEnabled(Rec) THEN
                                   ApprovalsMgmt.OnSendPurchaseDocForApproval(Rec);
                               END;
                                }
      { 55      ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=ENU=Cancel Approval Re&quest;
                      Description=**4PS.o;
                      Promoted=Yes;
                      Visible=FALSE;
                      Enabled=OpenApprovalEntriesExist;
                      Image=Cancel;
                      PromotedCategory=Category9;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.OnCancelPurchaseApprovalRequest(Rec);
                               END;
                                }
      { 17      ;1   ;ActionGroup;
                      CaptionML=ENU=Warehouse;
                      Image=Warehouse }
      { 149     ;2   ;Action    ;
                      AccessByPermission=TableData 7316=R;
                      CaptionML=ENU=Create &Whse. Receipt;
                      Image=NewReceipt;
                      OnAction=VAR
                                 GetSourceDocInbound@1001 : Codeunit 5751;
                               BEGIN
                                 GetSourceDocInbound.CreateFromPurchOrder(Rec);

                                 IF NOT FIND('=><') THEN
                                   INIT;
                               END;
                                }
      { 150     ;2   ;Action    ;
                      AccessByPermission=TableData 7340=R;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Inventor&y Put-away/Pick;
                      Promoted=Yes;
                      Image=CreateInventoryPickup;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CreateInvtPutAwayPick;

                                 IF NOT FIND('=><') THEN
                                   INIT;
                               END;
                                }
      { 74      ;2   ;Separator  }
      { 77      ;1   ;ActionGroup;
                      CaptionML=ENU=P&osting;
                      Image=Post }
      { 79      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      Ellipsis=Yes;
                      CaptionML=ENU=P&ost;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //"Markedonly Receipt Run" := CurrPage.PurchLines.PAGE.SetReceiveMarkedOnly;  //**4PS.n DP00556
                                 Post(CODEUNIT::"Purch.-Post (Yes/No)");
                                 //CurrPage.PurchLines.PAGE.ReSetReceiveMarkedOnly;  //**4PS.n DP00556
                                 //**4PS.sn
                                 CurrPage.UPDATE(FALSE);
                                 COMMIT;
                                 CheckInwardLines("No.",TRUE);
                                 //**4PS.en
                               END;
                                }
      { 21      ;2   ;Action    ;
                      Name=Preview;
                      CaptionML=ENU=Preview Posting;
                      Visible=FALSE;
                      Image=ViewPostedOrder;
                      OnAction=VAR
                                 PurchPostYesNo@1000 : Codeunit 91;
                               BEGIN
                                 PurchPostYesNo.Preview(Rec);
                               END;
                                }
      { 1210190049;2 ;Action    ;
                      CaptionML=ENU=Send Order Electronically;
                      Image=ExportElectronicDocument;
                      OnAction=BEGIN
                                 CurrPage.UPDATE(TRUE);
                                 SendOrderElectronic(FALSE);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100525012;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Send Order Electronically (with options);
                      Image=ExportElectronicDocument;
                      OnAction=BEGIN
                                 //**4PS.sn [jhoek]
                                 //**4PS.c //kzwerver, 110623, c, #RfC Electr. Purchase Order
                                 CurrPage.UPDATE(TRUE);
                                 SendOrderElectronic(TRUE);
                                 CurrPage.UPDATE(FALSE);
                                 //**4PS.en
                               END;
                                }
      { 1210190028;2 ;Action    ;
                      CaptionML=ENU=&Reminders;
                      RunObject=Page 11020225;
                      RunPageLink=Document Type=FIELD(Document Type),
                                  Document No.=FIELD(No.);
                      Image=Reminder }
      { 80      ;2   ;Action    ;
                      ShortCutKey=Shift+F9;
                      Ellipsis=Yes;
                      CaptionML=ENU=Post and &Print;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //"Markedonly Receipt Run" := CurrPage.PurchLines.PAGE.SetReceiveMarkedOnly;  //**4PS.sn DP00556
                                 Post(CODEUNIT::"Purch.-Post + Print");
                                 //CurrPage.PurchLines.PAGE.ReSetReceiveMarkedOnly;  //**4PS.n DP00556
                                 //**4PS.sn
                                 CurrPage.UPDATE(FALSE);
                                 COMMIT;
                                 CheckInwardLines("No.",TRUE);
                                 //**4PS.en
                               END;
                                }
      { 78      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Test Report;
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintPurchHeader(Rec);
                               END;
                                }
      { 81      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Post &Batch;
                      Image=PostBatch;
                      OnAction=BEGIN
                                 REPORT.RUNMODAL(REPORT::"Batch Post Purchase Orders",TRUE,TRUE,Rec);
                                 CurrPage.UPDATE(FALSE);
                                 //**4PS.sn
                                 COMMIT;
                                 CheckInwardLines("No.", FALSE);
                                 //**4PS.en
                               END;
                                }
      { 5       ;2   ;Action    ;
                      CaptionML=ENU=Remove From Job Queue;
                      Visible=JobQueueVisible;
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 CancelBackgroundPosting;
                               END;
                                }
      { 1100409003;2 ;Action    ;
                      Name=PostSelected;
                      ShortCutKey=F9;
                      Ellipsis=Yes;
                      CaptionML=ENU=Post Selected Lines;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostingEntries;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 PurchSetup@1100525000 : Record 312;
                               BEGIN
                                 //**4PS //DP00556
                                 PurchSetup.GET; //C026873
                                 PurchSetup.TESTFIELD("Post with Job Queue",FALSE); //C026873
                                 "Markedonly Receipt Run" := CurrPage.PurchLines.PAGE.SetReceiveMarkedOnly;
                                 Post(CODEUNIT::"Purch.-Post (Yes/No)");
                                 "Markedonly Receipt Run" := FALSE; //C026873
                                 CurrPage.PurchLines.PAGE.ReSetReceiveMarkedOnly;
                                 CurrPage.UPDATE(FALSE);
                                 COMMIT;
                                 CheckInwardLines("No.",TRUE);
                               END;
                                }
      { 201     ;2   ;Separator  }
      { 209     ;2   ;ActionGroup;
                      CaptionML=ENU=Prepa&yment;
                      Image=Prepayment }
      { 202     ;3   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Prepayment Test &Report;
                      Image=PrepaymentSimulation;
                      OnAction=BEGIN
                                 ReportPrint.PrintPurchHeaderPrepmt(Rec);
                               END;
                                }
      { 203     ;3   ;Action    ;
                      Name=PostPrepaymentInvoice;
                      Ellipsis=Yes;
                      CaptionML=ENU=Post Prepayment &Invoice;
                      Image=PrepaymentPost;
                      OnAction=VAR
                                 ApprovalsMgmt@1002 : Codeunit 1535;
                                 PurchPostYNPrepmt@1000 : Codeunit 445;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckPurch(Rec) THEN
                                   PurchPostYNPrepmt.PostPrepmtInvoiceYN(Rec,FALSE);
                               END;
                                }
      { 210     ;3   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Post and Print Prepmt. Invoic&e;
                      Image=PrepaymentPostPrint;
                      OnAction=VAR
                                 ApprovalsMgmt@1002 : Codeunit 1535;
                                 PurchPostYNPrepmt@1000 : Codeunit 445;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckPurch(Rec) THEN
                                   PurchPostYNPrepmt.PostPrepmtInvoiceYN(Rec,TRUE);
                               END;
                                }
      { 204     ;3   ;Action    ;
                      Name=PostPrepaymentCreditMemo;
                      Ellipsis=Yes;
                      CaptionML=ENU=Post Prepayment &Credit Memo;
                      Image=PrepaymentPost;
                      OnAction=VAR
                                 ApprovalsMgmt@1002 : Codeunit 1535;
                                 PurchPostYNPrepmt@1000 : Codeunit 445;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckPurch(Rec) THEN
                                   PurchPostYNPrepmt.PostPrepmtCrMemoYN(Rec,FALSE);
                               END;
                                }
      { 211     ;3   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Post and Print Prepmt. Cr. Mem&o;
                      Image=PrepaymentPostPrint;
                      OnAction=VAR
                                 ApprovalsMgmt@1002 : Codeunit 1535;
                                 PurchPostYNPrepmt@1000 : Codeunit 445;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckPurch(Rec) THEN
                                   PurchPostYNPrepmt.PostPrepmtCrMemoYN(Rec,TRUE);
                               END;
                                }
      { 19      ;1   ;ActionGroup;
                      CaptionML=ENU=Print;
                      Image=Print }
      { 82      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Print Order;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 // ExFlow ->
                                 IF Approve THEN
                                   BEGIN
                                     DocHead.RetrieveRecord(DocHead, "Document Type","No.");

                                     IF DocHead.Status < 2 THEN
                                       MESSAGE(EXF01);
                                   END;
                                 // <- ExFlow
                                 //**4PS
                                 DocPrint.PrintPurchHeader(Rec);
                               END;
                                }
      { 1101200031;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Edit Word Documents;
                      Image=Word;
                      OnAction=VAR
                                 Contact@1100528701 : Record 5050;
                                 DocumentTemplate@1100528702 : Record 11012401;
                               BEGIN
                                 //**4PS
                                 TESTFIELD("Buy-from Vendor No.");
                                 IF Contact.GetContactByVendor("Buy-from Vendor No.", Contact, TRUE) THEN
                                   EditDocuments(
                                     "Document Type", STRSUBSTNO('%1', DocumentTemplate.Type::"Purchase Order"),
                                     Contact."No.", "Buy-from Contact Person No.", FALSE, '');
                               END;
                                }
      { 1100485014;2 ;Action    ;
                      CaptionML=ENU=Print Word Document;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 Contact@1100528701 : Record 5050;
                                 DocumentTemplate@1100528702 : Record 11012401;
                               BEGIN
                                 //**4PS
                                 TESTFIELD("Buy-from Vendor No.");
                                 IF Contact.GetContactByVendor("Buy-from Vendor No.", Contact, TRUE) THEN
                                   EditDocuments(
                                     "Document Type", STRSUBSTNO('%1', DocumentTemplate.Type::"Purchase Order"),
                                     Contact."No.", "Buy-from Contact Person No.", FALSE, '');
                               END;
                                }
      { 1100409000;1 ;ActionGroup;
                      CaptionML=ENU=Mail Documents;
                      ActionContainerType=NewDocumentItems;
                      Image=Email }
      { 1100485011;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=E-mail Documents;
                      Image=ExportElectronicDocument;
                      OnAction=VAR
                                 EmailDoc@1100485001 : Codeunit 11012408;
                               BEGIN
                                 //DP00556 Call 30183
                                 IF "E-Mail Sent on" <> 0D THEN BEGIN
                                   IF NOT CONFIRM(Text11012009, TRUE, "E-Mail Sent on") THEN
                                     ERROR('');
                                 END;
                                 //DP00556 Call 30183

                                 EmailDoc.EmailDocuments(Rec); // **4PS.n
                               END;
                                }
      { 1100409002;2 ;Action    ;
                      CaptionML=ENU=Buy-from Vendor;
                      Promoted=Yes;
                      Image=MailAttachment;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 Contact@1100409000 : Record 5050;
                                 Vendor@1100409001 : Record 23;
                                 DocumentTemplate@1100409002 : Record 11012401;
                               BEGIN
                                 //**4PS
                                 TESTFIELD("Buy-from Vendor No.");
                                 IF Contact.GetContactByVendor("Buy-from Vendor No.", Contact, TRUE) THEN BEGIN
                                   Vendor.GET("Buy-from Vendor No.");
                                   EditDocuments(
                                     "Document Type", STRSUBSTNO('%1', DocumentTemplate.Type::"Purchase Order"),
                                     Contact."No.", '', TRUE, Vendor."E-Mail");
                                 END;
                               END;
                                }
      { 1100409001;2 ;Action    ;
                      CaptionML=ENU=Buy-from Contact;
                      Promoted=Yes;
                      Image=MailAttachment;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 Contact@1100409000 : Record 5050;
                                 DocumentTemplate@1100409001 : Record 11012401;
                               BEGIN
                                 //**4PS
                                 TESTFIELD("Buy-from Contact No.");
                                 IF Contact.GET("Buy-from Contact No.") THEN BEGIN
                                   IF Contact.IsContactPerson THEN
                                     EditDocuments(
                                       "Document Type", STRSUBSTNO('%1', DocumentTemplate.Type::"Purchase Order"),
                                       Contact."Company No.", Contact."No.", TRUE, Contact."E-Mail")
                                   ELSE
                                     EditDocuments(
                                       "Document Type", STRSUBSTNO('%1', DocumentTemplate.Type::"Purchase Order"),
                                       Contact."No.", '', TRUE, Contact."E-Mail");
                                 END;
                               END;
                                }
      { 1100525000;1 ;ActionGroup;
                      Name=Plant;
                      CaptionML=ENU=Plant }
      { 1210190038;2 ;ActionGroup;
                      CaptionML=ENU=Plant;
                      Image=Resource }
      { 1100525020;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=PLant - Get Transport Ride Cost;
                      Image=Cost;
                      OnAction=VAR
                                 lvShippingAgentRec@1100525003 : Record 291;
                                 lvTransRideRec@1100525002 : Record 11020517;
                                 lvCreatePurchOrderTransRideRpt@1100525000 : Report 11020511;
                               BEGIN
                                 //**4PS
                                 TESTFIELD("No.");
                                 TESTFIELD("Buy-from Vendor No.");

                                 lvShippingAgentRec.SETRANGE("Vendor No.", "Buy-from Vendor No.");
                                 IF "Order Date" <> 0D THEN
                                   lvShippingAgentRec.SETFILTER("Transport Date Filter", '..%1', "Order Date");
                                 lvCreatePurchOrderTransRideRpt.SETTABLEVIEW(lvShippingAgentRec);
                                 lvCreatePurchOrderTransRideRpt.SETTABLEVIEW(lvTransRideRec);  //* Make filters of this dataitem empty
                                 lvCreatePurchOrderTransRideRpt.SetOnExistingPurchOrder("No.");
                                 lvCreatePurchOrderTransRideRpt.RUNMODAL;
                               END;
                                }
      { 1100485901;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Plant - Get Transport Order Cost;
                      Image=Cost;
                      OnAction=VAR
                                 lvShippingAgentRec@1100485002 : Record 291;
                                 lvTransOrderRec@1100485004 : Record 11020505;
                                 lvPostedTransOrderRec@1100485003 : Record 11020507;
                                 lvCreatePurchOrderTransportRpt@1100485000 : Report 11020505;
                               BEGIN
                                 //**4PS
                                 TESTFIELD("No.");
                                 TESTFIELD("Buy-from Vendor No.");

                                 lvShippingAgentRec.SETRANGE("Vendor No.", "Buy-from Vendor No.");
                                 IF "Order Date" <> 0D THEN
                                   lvShippingAgentRec.SETFILTER("Transport Date Filter", '..%1', "Order Date");
                                 lvCreatePurchOrderTransportRpt.SETTABLEVIEW(lvShippingAgentRec);
                                 lvCreatePurchOrderTransportRpt.SETTABLEVIEW(lvTransOrderRec);       //* Make filters of this dataitem empty
                                 lvCreatePurchOrderTransportRpt.SETTABLEVIEW(lvPostedTransOrderRec); //* Make filters of this dataitem empty
                                 lvCreatePurchOrderTransportRpt.SetOnExistingPurchOrder("No.");
                                 lvCreatePurchOrderTransportRpt.RUNMODAL;
                               END;
                                }
      { 1100525035;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create &Unique Plant Numbers ();
                      Image=CreateSerialNo;
                      OnAction=VAR
                                 CreatePlant@1100525000 : Codeunit 11012243;
                               BEGIN
                                 IF NOT CreatePlant.ConfirmCreate() THEN
                                   EXIT;
                                 CurrPage.PurchLines.PAGE.CreatePlantNumbersUnique();
                               END;
                                }
      { 1100525001;1 ;ActionGroup;
                      CaptionML=ENU=E-commerce }
      { 1210190046;2 ;ActionGroup;
                      CaptionML=ENU=E-commerce;
                      Image=ExportElectronicDocument }
      { 1100525017;3 ;Action    ;
                      ShortCutKey=Ctrl+K;
                      CaptionML=ENU=Create ICK Order Files;
                      Promoted=Yes;
                      Image=Export;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 lPurchHeaderRec@1100525000 : Record 38;
                               BEGIN
                                 //**4PS
                                 IF "ICM Login Code" = '' THEN
                                   ERROR(Text11012006);

                                 lPurchHeaderRec.SETRANGE("No.","No.");
                                 lPurchHeaderRec.SETRANGE("Buy-from Vendor No.","Buy-from Vendor No.");
                                 lPurchHeaderRec.SETRANGE("ICM Status", "ICM Status"::Create);
                                 REPORT.RUNMODAL(REPORT::"Create ICK Files",TRUE,FALSE,lPurchHeaderRec);
                               END;
                                }
      { 1210190017;3 ;Action    ;
                      ShortCutKey=Ctrl+M;
                      CaptionML=ENU=Create ICM Order Files;
                      Promoted=Yes;
                      Image=Export;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 lPurchHeaderRec@1210190000 : Record 38;
                               BEGIN
                                 //**4PS
                                 IF "ICM Login Code" = '' THEN
                                   ERROR(Text11012006);

                                 lPurchHeaderRec.SETRANGE("No.","No.");
                                 lPurchHeaderRec.SETRANGE("Buy-from Vendor No.","Buy-from Vendor No.");
                                 lPurchHeaderRec.SETRANGE("ICM Status", "ICM Status"::Create);
                                 REPORT.RUNMODAL(REPORT::"Create ICM Files",TRUE,FALSE,lPurchHeaderRec);
                               END;
                                }
      { 1210190019;3 ;Action    ;
                      ShortCutKey=Ctrl+B;
                      CaptionML=ENU=Import ICM Order Confirmations;
                      Promoted=Yes;
                      Image=Import;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 lPurchHeaderRec@1210190000 : Record 38;
                               BEGIN
                                 //**4PS
                                 lPurchHeaderRec.SETRANGE("No.","No.");
                                 lPurchHeaderRec.SETRANGE("Buy-from Vendor No.","Buy-from Vendor No.");
                                 //lPurchHeaderRec.SETRANGE("ICM Order Confirm. Received",FALSE);  //db, 16-03-09: M13962
                                 REPORT.RUNMODAL(REPORT::"Import ICM Order Confirmations",TRUE,FALSE,lPurchHeaderRec);
                               END;
                                }
      { 1210190045;3 ;Action    ;
                      ShortCutKey=Ctrl+G;
                      CaptionML=ENU=Print ICM Order Confirmations;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 lPurchHeaderRec@1210190000 : Record 38;
                               BEGIN
                                 //**4PS
                                 lPurchHeaderRec.SETRANGE("No.","No.");
                                 lPurchHeaderRec.SETRANGE("Purchaser Code","Purchaser Code");
                                 REPORT.RUNMODAL(REPORT::"ICM Messages by Purchaser",TRUE,FALSE,lPurchHeaderRec);
                               END;
                                }
      { 195     ;3   ;Action    ;
                      AccessByPermission=TableData 410=R;
                      CaptionML=ENU=Send IC Purchase Order;
                      Image=IntercompanyOrder;
                      OnAction=VAR
                                 ICInOutboxMgt@1000 : Codeunit 427;
                                 ApprovalsMgmt@1003 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckPurch(Rec) THEN
                                   ICInOutboxMgt.SendPurchDoc(Rec,FALSE);
                               END;
                                }
      { 1100528405;1 ;ActionGroup;
                      CaptionML=ENU=&Order Confirmation;
                      Image=Email }
      { 1100525009;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Email Confirmation;
                      Image=Email;
                      OnAction=VAR
                                 PurchaseHeader@1100528400 : Record 38;
                               BEGIN
                                 //**4PS
                                 PurchaseHeader.COPY(Rec);
                                 PurchaseHeader.SETRECFILTER;
                                 REPORT.RUNMODAL(REPORT::"Purchase - E-Mail Order", TRUE, FALSE, PurchaseHeader);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=ENU=General }

    { 2   ;2   ;Field     ;
                Lookup=No;
                SourceExpr="No.";
                Importance=Promoted;
                Visible=DocNoVisible;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1210190005;2;Field  ;
                SourceExpr="Purchase Order Type";
                OnValidate=BEGIN
                             PurchaseOrderTypeOnAfterValida;
                           END;
                            }

    { 4   ;2   ;Field     ;
                SourceExpr="Buy-from Vendor No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             BuyfromVendorNoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           //**4PS.sn
                           LookupVendor(xRec);
                           BuyfromVendorNoOnAfterValidate;
                           //**4PS.en
                         END;

                ShowMandatory=TRUE }

    { 174 ;2   ;Field     ;
                SourceExpr="Buy-from Contact No.";
                Importance=Additional }

    { 6   ;2   ;Field     ;
                SourceExpr="Buy-from Vendor Name";
                Importance=Promoted;
                OnValidate=BEGIN
                             //**4PS
                             IF "Buy-from Vendor No." = '' THEN
                               IF VendorRec.ValidateBuyFromVendor(Rec,xRec) THEN
                                 CurrPage.UPDATE;
                           END;

                OnAssistEdit=BEGIN
                               //**4PS
                               EditDetailsBuyerAddress;
                             END;
                              }

    { 89  ;2   ;Field     ;
                SourceExpr="Buy-from Address";
                Importance=Additional }

    { 1100285004;2;Field  ;
                SourceExpr="Buy-from Address 2" }

    { 76  ;2   ;Field     ;
                SourceExpr="Buy-from Post Code";
                Importance=Additional }

    { 93  ;2   ;Field     ;
                SourceExpr="Buy-from City" }

    { 8   ;2   ;Field     ;
                SourceExpr="Buy-from Contact";
                Importance=Additional;
                OnLookup=BEGIN
                           //**4PS
                           LookupContactPerson;
                         END;
                          }

    { 1100409008;2;Field  ;
                SourceExpr="E-Mail for Purch. Order" }

    { 16  ;2   ;Field     ;
                SourceExpr="Vendor Order No.";
                Importance=Additional }

    { 12047961;2;Field    ;
                SourceExpr="Note of Goods" }

    { 9100;2   ;Field     ;
                SourceExpr="Invoice Conduction Note";
                Importance=Additional;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;  //**4PS.n
                           END;
                            }

    { 1101200000;2;Field  ;
                SourceExpr="Induction Note No.";
                Importance=Additional;
                Editable="Induction Note No.Editable";
                OnValidate=BEGIN
                             InductionNoteNoOnAfterValidate;
                           END;
                            }

    { 1210190014;2;Field  ;
                SourceExpr="Amounts only";
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1210190015;2;Field  ;
                SourceExpr="Job No.";
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE); //mg, 30-10-12: T000118
                           END;
                            }

    { 1100525005;2;Field  ;
                SourceExpr="Project Description" }

    { 1100485032;2;Field  ;
                SourceExpr="Service Order No.";
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE); //mg, 27-03-13: C006681
                           END;
                            }

    { 1100525007;2;Field  ;
                SourceExpr="Service Order Description" }

    { 1100528500;2;Field  ;
                CaptionML=ENU=Service Warranty Code;
                SourceExpr=PurchaseHeaderExtension."Service Warranty Code";
                TableRelation="Service Warranty";
                OnValidate=BEGIN
                             //**4PS DP00121
                             PurchaseHeaderExtension.VALIDATE("Service Warranty Code");
                             PurchaseHeaderExtension.UpdatePurchHeadExtension("Document Type", "No.");
                             CurrPage.SAVERECORD;
                           END;
                            }

    { 1100525029;2;Field  ;
                SourceExpr="Purchase Plan";
                Importance=Additional }

    { 1100525031;2;Field  ;
                Lookup=Yes;
                SourceExpr=PhasePlanMgt.ShowPlanStatus(Rec);
                Importance=Additional;
                OnLookup=VAR
                           DocumentPhase@1100525001 : Record 11020418;
                           DocumentPhaseListForm@1100525000 : Page 11072630;
                         BEGIN
                           IF "Purchase Plan" = '' THEN
                             EXIT;

                           DocumentPhase.SETRANGE("Document Type", "Document Type");
                           DocumentPhase.SETRANGE("Document No.", "No.");
                           PAGE.RUNMODAL(PAGE::"Document Phase List", DocumentPhase);
                         END;
                          }

    { 12  ;2   ;Field     ;
                SourceExpr="Posting Date" }

    { 14  ;2   ;Field     ;
                SourceExpr="Order Date";
                Importance=Standard }

    { 49  ;2   ;Field     ;
                SourceExpr="Document Date" }

    { 237 ;2   ;Field     ;
                SourceExpr="Quote No.";
                Importance=Additional }

    { 20  ;2   ;Field     ;
                SourceExpr="Vendor Invoice No.";
                Importance=Additional;
                ShowMandatory=VendorInvoiceNoMandatory }

    { 96  ;2   ;Field     ;
                SourceExpr="Order Address Code";
                Importance=Additional }

    { 10  ;2   ;Field     ;
                SourceExpr="Purchaser Code";
                Importance=Standard }

    { 1100525027;2;Field  ;
                DrillDown=No;
                SourceExpr="Name Purchaser";
                Importance=Additional }

    { 131 ;2   ;Field     ;
                SourceExpr="Responsibility Center";
                Importance=Additional }

    { 7   ;2   ;Field     ;
                SourceExpr="Job Queue Status";
                Importance=Additional }

    { 133 ;2   ;Field     ;
                SourceExpr=Status;
                Importance=Standard }

    { 12013587;2;Field    ;
                SourceExpr=Approve }

    { 12013588;2;Field    ;
                SourceExpr="Requisition No." }

    { 12013589;2;Field    ;
                CaptionML=ENU=Approval Status;
                SourceExpr=ExFlowStatusFromPO;
                Visible=ExFlowVisible;
                OnDrillDown=BEGIN
                              ExFlowStatusDrillDownFromPO;
                            END;
                             }

    { 1100485034;2;Field  ;
                CaptionML=ENU=Amount Received;
                BlankZero=Yes;
                SourceExpr=AmountReceived;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Importance=Additional;
                Editable=FALSE }

    { 1210190041;2;Field  ;
                Name=AmountInvoiced;
                CaptionML=ENU=Invoiced Amount;
                BlankZero=Yes;
                SourceExpr=AmountInvoiced;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Importance=Additional;
                Editable=FALSE }

    { 1100528408;2;Field  ;
                CaptionML=ENU=Documents;
                SourceExpr=HasDocumentLinks;
                Editable=FALSE }

    { 60  ;1   ;Part      ;
                Name=PurchLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page54;
                UpdatePropagation=Both }

    { 1905885101;1;Group  ;
                CaptionML=ENU=Invoicing }

    { 22  ;2   ;Field     ;
                SourceExpr="Pay-to Vendor No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             PaytoVendorNoOnAfterValidate;
                           END;
                            }

    { 176 ;2   ;Field     ;
                SourceExpr="Pay-to Contact No.";
                Importance=Additional }

    { 24  ;2   ;Field     ;
                SourceExpr="Pay-to Name";
                Importance=Promoted }

    { 26  ;2   ;Field     ;
                SourceExpr="Pay-to Address";
                Importance=Additional }

    { 28  ;2   ;Field     ;
                SourceExpr="Pay-to Address 2";
                Importance=Additional }

    { 97  ;2   ;Field     ;
                SourceExpr="Pay-to Post Code";
                Importance=Additional }

    { 30  ;2   ;Field     ;
                SourceExpr="Pay-to City" }

    { 32  ;2   ;Field     ;
                SourceExpr="Pay-to Contact";
                Importance=Additional }

    { 1090000;2;Field     ;
                SourceExpr="Message Type";
                Visible=FIinfoEnable;
                ShowMandatory=TRUE }

    { 1090002;2;Field     ;
                SourceExpr="Invoice Message";
                Importance=Promoted;
                Visible=FIinfoEnable;
                ShowMandatory=TRUE }

    { 1101200001;2;Field  ;
                SourceExpr="Your Reference" }

    { 1100525021;2;Field  ;
                SourceExpr="Order Consent Lines Available" }

    { 1080000;2;Field     ;
                SourceExpr=KID;
                Visible=NORlocalizationEnable }

    { 1100528400;2;Field  ;
                SourceExpr="Consented Date-Time" }

    { 100 ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                             ShortcutDimension1CodeOnAfterV;
                           END;
                            }

    { 102 ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                LookupPageID=Cost Object List;
                OnValidate=BEGIN
                             //**4PS02.sn
                             //The test below is the same as the test in the OnValidate of PurchaseOrderLine.No.
                             IF ("Document Type" <> "Document Type"::Quote) THEN
                               TESTFIELD("Buy-from Vendor No.")
                             ELSE BEGIN
                               IF ("Buy-from Vendor No." = '') AND ("Buy-from Contact No." = '') THEN
                                 TESTFIELD("Buy-from Vendor No.");
                             END;
                             //**4PS02.en
                               ShortcutDimension2CodeOnAfterV;
                           END;
                            }

    { 34  ;2   ;Field     ;
                SourceExpr="Payment Terms Code";
                Importance=Standard }

    { 36  ;2   ;Field     ;
                SourceExpr="Due Date";
                Importance=Standard;
                ShowMandatory=TRUE }

    { 38  ;2   ;Field     ;
                SourceExpr="Payment Discount %";
                Importance=Additional }

    { 40  ;2   ;Field     ;
                SourceExpr="Pmt. Discount Date";
                Importance=Additional }

    { 117 ;2   ;Field     ;
                SourceExpr="Payment Method Code";
                Importance=Additional;
                Visible=DKinfoEnable }

    { 27  ;2   ;Field     ;
                SourceExpr="Payment Reference" }

    { 25  ;2   ;Field     ;
                SourceExpr="Creditor No." }

    { 1060000;2;Field     ;
                SourceExpr="Giro Acc. No.";
                Visible=DKinfoEnable }

    { 106 ;2   ;Field     ;
                SourceExpr="On Hold";
                Importance=Additional }

    { 191 ;2   ;Field     ;
                SourceExpr="VAT Bus. Posting Group";
                Importance=Additional }

    { 1100285005;2;Field  ;
                SourceExpr="Prices Including VAT" }

    { 1101200003;2;Field  ;
                AssistEdit=Yes;
                SourceExpr="Payment Agreement";
                Editable="Payment AgreementEditable";
                OnAssistEdit=BEGIN
                               //**4PS
                               IF NOT VendorIsSubcontractor THEN
                                 EXIT;

                               CLEAR(PaymentAgreementForm);
                               PaymentAgreementRec.SETRANGE(Code,"No.");
                               PaymentAgreementRec.SETRANGE("Sub Contractor","Buy-from Vendor No.");
                               PaymentAgreementForm.SETRECORD(PaymentAgreementRec);
                               PaymentAgreementForm.SETTABLEVIEW(PaymentAgreementRec);
                               PaymentAgreementForm.LOOKUPMODE(TRUE);
                               IF PaymentAgreementForm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                 PaymentAgreementForm.GETRECORD(PaymentAgreementRec);
                                 VALIDATE("Payment Agreement", PaymentAgreementRec.Code);
                               END;
                               CLEAR(PaymentAgreementForm);
                             END;
                              }

    { 1210190000;2;Field  ;
                SourceExpr="Price Agreement" }

    { 1210190009;2;Field  ;
                SourceExpr="Agreed Amount" }

    { 1100409006;2;Field  ;
                SourceExpr="Tolerate Exceeding Invoice Qu." }

    { 1906801201;1;Group  ;
                CaptionML=ENU=Shipping }

    { 1101200005;2;Field  ;
                SourceExpr="Received on Project" }

    { 1101200009;2;Field  ;
                SourceExpr=Deliver }

    { 1101200007;2;Field  ;
                SourceExpr="Ship To Location";
                OnAssistEdit=BEGIN
                               OnAssistShipToLocation();  //**4PS.n
                             END;
                              }

    { 42  ;2   ;Field     ;
                SourceExpr="Ship-to Name";
                Importance=Promoted }

    { 1210190039;2;Field  ;
                SourceExpr="Ship-to Name 2";
                Importance=Additional }

    { 44  ;2   ;Field     ;
                SourceExpr="Ship-to Address";
                Importance=Additional }

    { 46  ;2   ;Field     ;
                SourceExpr="Ship-to Address 2";
                Importance=Additional }

    { 109 ;2   ;Field     ;
                SourceExpr="Ship-to Post Code";
                Importance=Additional }

    { 48  ;2   ;Field     ;
                SourceExpr="Ship-to City" }

    { 1100485028;2;Field  ;
                SourceExpr="Ship-to Country/Region Code";
                Importance=Additional }

    { 50  ;2   ;Field     ;
                SourceExpr="Ship-to Contact" }

    { 1210190003;2;Field  ;
                SourceExpr=Expediter;
                Importance=Additional }

    { 104 ;2   ;Field     ;
                SourceExpr="Location Code";
                Importance=Standard }

    { 144 ;2   ;Field     ;
                SourceExpr="Inbound Whse. Handling Time";
                Importance=Additional }

    { 1100528300;2;Field  ;
                CaptionML=ENU=Delivery Time;
                SourceExpr=PurchaseHeaderExtension."Delivery Time";
                OnValidate=BEGIN
                             PurchaseHeaderExtensionDeliver;
                           END;
                            }

    { 52  ;2   ;Field     ;
                SourceExpr="Shipment Method Code";
                Importance=Additional }

    { 146 ;2   ;Field     ;
                SourceExpr="Lead Time Calculation";
                Importance=Additional }

    { 127 ;2   ;Field     ;
                SourceExpr="Requested Receipt Date";
                Importance=Additional }

    { 139 ;2   ;Field     ;
                SourceExpr="Promised Receipt Date";
                Importance=Additional }

    { 54  ;2   ;Field     ;
                SourceExpr="Expected Receipt Date";
                Importance=Promoted }

    { 87  ;2   ;Field     ;
                SourceExpr="Sell-to Customer No.";
                Importance=Additional }

    { 85  ;2   ;Field     ;
                SourceExpr="Ship-to Code";
                Importance=Additional }

    { 1210190008;2;Field  ;
                SourceExpr="Extra Receipts Allowed" }

    { 1100525002;2;Field  ;
                SourceExpr="Vendor Authorization No.";
                Importance=Additional }

    { 1100525004;2;Field  ;
                SourceExpr="Original Order No.";
                Importance=Additional }

    { 1100525006;2;Field  ;
                SourceExpr="Shipping Agent Code";
                Importance=Additional }

    { 1100525008;2;Field  ;
                SourceExpr="Package Tracking No.";
                Importance=Additional }

    { 1100528406;2;Field  ;
                SourceExpr="Vendor Shipment No." }

    { 1907468901;1;Group  ;
                CaptionML=ENU=Foreign Trade }

    { 119 ;2   ;Field     ;
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             PurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               IF "Posting Date" <> 0D THEN
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               ELSE
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 1000003;2;Field     ;
                SourceExpr="EU 3-Party Trade" }

    { 56  ;2   ;Field     ;
                SourceExpr="Transaction Type";
                Importance=Additional }

    { 115 ;2   ;Field     ;
                SourceExpr="Transaction Specification";
                Importance=Additional }

    { 58  ;2   ;Field     ;
                SourceExpr="Transport Method";
                Importance=Additional }

    { 111 ;2   ;Field     ;
                SourceExpr="Entry Point";
                Importance=Additional }

    { 113 ;2   ;Field     ;
                SourceExpr=Area;
                Importance=Additional }

    { 1080002;2;Field     ;
                SourceExpr="Payment Type Code Abroad";
                Visible=NORlocalizationEnable }

    { 1080004;2;Field     ;
                SourceExpr="Specification (Norges Bank)";
                Visible=NORlocalizationEnable }

    { 1100485010;2;Field  ;
                SourceExpr="Company VAT Registration No." }

    { 1100485026;2;Field  ;
                SourceExpr="VAT Registration No." }

    { 1100485022;2;Field  ;
                SourceExpr="Country of Origin" }

    { 1100485024;2;Field  ;
                SourceExpr="Country of Destination" }

    { 1903104001;1;Group  ;
                CaptionML=ENU=ICM }

    { 1000000036;2;Field  ;
                SourceExpr="ICM Login Code" }

    { 1000000044;2;Field  ;
                SourceExpr="ICM Status";
                Editable=FieldsEditable }

    { 1000000032;2;Field  ;
                SourceExpr="ICM Procedure";
                Editable=FieldsEditable }

    { 1000000046;2;Field  ;
                SourceExpr="Reference (ICM)";
                Editable=FieldsEditable }

    { 1100525018;2;Field  ;
                Name=PhoneICM;
                CaptionML=ENU=Phone No. (ICM);
                SourceExpr=[PhoneICM ];
                OnValidate=BEGIN
                             PhoneICMOnAfterValidate;
                           END;
                            }

    { 1100525013;2;Field  ;
                Name=ShipmentInstruct1;
                CaptionML=ENU=Shipment Instruction 1;
                SourceExpr=ShipmentInstruct1;
                Editable=GS1Editable;
                OnValidate=BEGIN
                             ShipmentInstruct1OnAfterValida;
                           END;
                            }

    { 1100525015;2;Field  ;
                Name=ShipmentInstruct2;
                CaptionML=ENU=Shipment Instruction 2;
                SourceExpr=ShipmentInstruct2;
                Editable=GS1Editable;
                OnValidate=BEGIN
                             ShipmentInstruct2OnAfterValida;
                           END;
                            }

    { 1000000034;2;Field  ;
                SourceExpr="ICM File Created on" }

    { 1100525033;2;Field  ;
                SourceExpr="ICM File Sent" }

    { 1000000038;2;Field  ;
                SourceExpr="ICM Order Confirm. Received on" }

    { 1000000040;2;Field  ;
                SourceExpr="ICM Confirmations" }

    { 1000000042;2;Field  ;
                SourceExpr="ICM Errors" }

    { 1901254101;1;Group  ;
                CaptionML=ENU=Status }

    { 1000000048;2;Field  ;
                SourceExpr="Input by" }

    { 1000000050;2;Field  ;
                SourceExpr="Input Date" }

    { 171 ;2   ;Field     ;
                SourceExpr="No. of Archived Versions";
                Importance=Additional }

    { 1000000060;2;Field  ;
                SourceExpr="Document Confirmation Received" }

    { 1100409007;2;Field  ;
                SourceExpr="Electronic Order Type" }

    { 1100529002;2;Field  ;
                SourceExpr="FSC Type Code" }

    { 1000000052;2;Field  ;
                SourceExpr="Modified by" }

    { 1000000054;2;Field  ;
                SourceExpr="Last Date Modified" }

    { 1000000064;2;Field  ;
                SourceExpr="E-Mail Sent by";
                Editable=FALSE }

    { 1000000062;2;Field  ;
                SourceExpr="E-Mail Sent on";
                Editable=FALSE }

    { 1100528403;2;Field  ;
                CaptionML=ENU=GS1 Sent by;
                SourceExpr=PurchaseHeaderExtension."GS1 Sent by";
                Editable=FALSE }

    { 1100528401;2;Field  ;
                CaptionML=ENU=GS1 Sent on;
                SourceExpr=PurchaseHeaderExtension."GS1 Sent on";
                Editable=FALSE }

    { 1210190060;2;Field  ;
                CaptionML=ENU=GS1 Error Logs;
                SourceExpr=CheckIfGS1ErrorLogsExist;
                Editable=FALSE }

    { 1900776401;1;Group  ;
                CaptionML=ENU=Contract }

    { 1000000066;2;Field  ;
                CaptionML=ENU=Starting Date;
                SourceExpr="Starting Date Subcontracting" }

    { 1000000068;2;Field  ;
                CaptionML=ENU=Finishing Date;
                SourceExpr="Finishing Date Subcontracting" }

    { 1000000070;2;Field  ;
                CaptionML=ENU=Renewal Date;
                SourceExpr="Renewal Date Subcontracting" }

    { 1100525036;2;Field  ;
                SourceExpr="Contract Applicable" }

    { 1100525038;2;Field  ;
                SourceExpr="Return Date Signed Contract" }

    { 1100525040;2;Field  ;
                CaptionML=ENU=Letter of Credit Applicable;
                SourceExpr=LetterOfCreditIsApplicable }

    { 1100409005;2;Field  ;
                SourceExpr="Letter of Credit Applied" }

    { 1100525042;2;Field  ;
                SourceExpr="Return Date Letter of Credit" }

    { 1210190018;2;Field  ;
                SourceExpr="Return Date Safety/Health-plan" }

    { 1100525044;2;Field  ;
                SourceExpr="Reminder Terms Code" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 23  ;1   ;Part      ;
                SubPageLink=Table ID=CONST(38),
                            Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.);
                PagePartID=Page9103;
                Visible=OpenApprovalEntriesExistForCurrUser;
                PartType=Page }

    { 1100529901;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                PartType=Page }

    { 1210190002;1;Part   ;
                SubPageLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(Document No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11130181;
                ProviderID=60;
                PartType=Page }

    { 1903326807;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page9090;
                ProviderID=60;
                Visible=FALSE;
                PartType=Page }

    { 1906354007;1;Part   ;
                SubPageLink=Table ID=CONST(38),
                            Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.);
                PagePartID=Page9092;
                Visible=FALSE;
                PartType=Page }

    { 1901138007;1;Part   ;
                SubPageLink=No.=FIELD(Buy-from Vendor No.);
                PagePartID=Page9093;
                Visible=FALSE;
                PartType=Page }

    { 1904651607;1;Part   ;
                SubPageLink=No.=FIELD(Pay-to Vendor No.);
                PagePartID=Page9094;
                Visible=TRUE;
                PartType=Page }

    { 39  ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                PagePartID=Page193;
                Visible=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1903435607;1;Part   ;
                SubPageLink=No.=FIELD(Buy-from Vendor No.);
                PagePartID=Page9095;
                Visible=TRUE;
                PartType=Page }

    { 1906949207;1;Part   ;
                SubPageLink=No.=FIELD(Pay-to Vendor No.);
                PagePartID=Page9096;
                Visible=FALSE;
                PartType=Page }

    { 3   ;1   ;Part      ;
                SubPageLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(Document No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page9100;
                ProviderID=60;
                PartType=Page }

    { 59  ;1   ;Part      ;
                Name=WorkflowStatus;
                PagePartID=Page1528;
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ChangeExchangeRate@1001 : Page 511;
      Text11012000@11012010 : TextConst 'ENU=First Associate a Prospect to Customer %1.';
      PurchaseHeaderExtension@1100528400 : Record 11020398;
      CopyPurchDoc@1002 : Report 492;
      MoveNegPurchLines@1006 : Report 6698;
      ReportPrint@1003 : Codeunit 228;
      DocPrint@1004 : Codeunit 229;
      UserMgt@1005 : Codeunit 5700;
      ArchiveManagement@1007 : Codeunit 5063;
      PaymentAgreementRec@11012005 : Record 11012028;
      PaymentAgreementForm@11012006 : Page 11012058;
      VendorRec@11012007 : Record 23;
      PurchCalcDiscByType@1009 : Codeunit 66;
      JobQueueVisible@1000 : Boolean INDATASET;
      HasIncomingDocument@1012 : Boolean;
      DocNoVisible@1008 : Boolean;
      VendorInvoiceNoMandatory@1010 : Boolean;
      OpenApprovalEntriesExistForCurrUser@1011 : Boolean;
      OpenApprovalEntriesExist@1014 : Boolean;
      ShowWorkflowStatus@1013 : Boolean;
      AmountReceived@1100485006 : Decimal;
      AmountInvoiced@1210190002 : Decimal;
      Text11012004@1210190003 : TextConst 'ENU=Generate Order Line(s) not allowed, Blanket Order %1 valid until %2.';
      gFromReference@1210190006 : Boolean;
      gOrderLineNo@1210190004 : Integer;
      Text11012005@1100485000 : TextConst 'ENU=Credit the administrative costs for the Return Order?';
      Text11012006@1100485001 : TextConst 'ENU=ICM Login Code is empty';
      DepAuthRec@1100000997 : Record 11012466;
      Text11012007@1100485005 : TextConst 'ENU=%1 Managers Sheet(s) iimported / purchase order(s) created.';
      Text11012008@1100525000 : TextConst 'ENU=Disapprove of Returnorders is not possible';
      GeneratedtTxtConst1@1100000998 : TextConst 'ENU=You are not authorized for Department Code %1.';
      PhasePlanMgt@1100525006 : Codeunit 11012242;
      DocumentRec@1100485004 : Record 11012401;
      ShipmentInstruct1@1100525001 : Text[38];
      ShipmentInstruct2@1100525002 : Text[38];
      PhoneICM@1100525003 : Text[13];
      DPA_IsHardFilter@1100000999 : Boolean;
      "Payment AgreementEditable"@19078437 : Boolean INDATASET;
      "Induction Note No.Editable"@19050615 : Boolean INDATASET;
      FieldsEditable@1210190000 : Boolean INDATASET;
      GS1Editable@1100528300 : Boolean INDATASET;
      Text11012009@1100409000 : TextConst 'ENU=Email has been sent on %1. Do you wish to continue?';
      LinkItemDocsToPurchHeadEnabled@1100528000 : Boolean INDATASET;
      InwRegForm@1100285003 : Page 11128010;
      InwRegList@1070000 : Page 11128014;
      VendledgEntry@1100285001 : Record 25;
      GenJnlLine@1100285000 : Record 81;
      GLSetup@111285700 : Record 98;
      DKinfoEnable@11128570 : Boolean INDATASET;
      FIinfoEnable@11128200 : Boolean INDATASET;
      NORlocalizationEnable@1100285300 : Boolean INDATASET;
      "*** ExFlow ***"@12013591 : Integer;
      DocHead@12013592 : Record 12013608;
      ExFlow@12013595 : Codeunit 12013601;
      EXF01@12013596 : TextConst 'ENU=Warning! The purchase order is not approved!';
      ExFlowVisible@1100285500 : Boolean INDATASET;
      "*** PEB ***"@12047960 : Integer;
      gBaseMgt@12047958 : Codeunit 11128082;

    LOCAL PROCEDURE Post@4(PostingCodeunitID@1000 : Integer);
    BEGIN
      SendToPosting(PostingCodeunitID);
      IF "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting" THEN
        CurrPage.CLOSE;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CurrPage.PurchLines.PAGE.ApproveCalcInvDisc;
    END;

    PROCEDURE BuyfromVendorNoOnAfterValidate@19032492();
    BEGIN
      //**4PS.n Procedure made global
      IF GETFILTER("Buy-from Vendor No.") = xRec."Buy-from Vendor No." THEN
        IF "Buy-from Vendor No." <> xRec."Buy-from Vendor No." THEN
          SETRANGE("Buy-from Vendor No.");
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PurchaserCodeOnAfterValidate@19046120();
    BEGIN
      CurrPage.PurchLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE PaytoVendorNoOnAfterValidate@19048314();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@19029405();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@19008725();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PricesIncludingVATOnAfterValid@19009096();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE Prepayment37OnAfterValidate@19040510();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SetDocNoVisible@2();
    VAR
      DocumentNoVisibility@1000 : Codeunit 1400;
      DocType@1003 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Reminder,FinChMemo';
    BEGIN
      DocNoVisible := DocumentNoVisibility.PurchaseDocumentNoIsVisible(DocType::Order,"No.");
    END;

    LOCAL PROCEDURE SetExtDocNoMandatoryCondition@3();
    VAR
      PurchasesPayablesSetup@1000 : Record 312;
    BEGIN
      PurchasesPayablesSetup.GET;
      VendorInvoiceNoMandatory := PurchasesPayablesSetup."Ext. Doc. No. Mandatory"
    END;

    LOCAL PROCEDURE SetControlAppearance@5();
    VAR
      ApprovalsMgmt@1002 : Codeunit 1535;
    BEGIN
      JobQueueVisible := "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting";
      HasIncomingDocument := "Incoming Document Entry No." <> 0;
      SetExtDocNoMandatoryCondition;
      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
    END;

    PROCEDURE VendorIsSubcontractor@1210190003() : Boolean;
    BEGIN
      {
      <changelog>
        <add id="NL0001" dev="SPLINTER" date="2004-05-12" area="TELEBANK"  request="NL-START-40"
          releaseversion="NL4.00">Electronic Banking</add>
        <add id="NL0002" dev="SPLINTER" date="2006-06-01" area="EXTSPCOD" feature="PSCORS274"
          releaseversion="NL5.00">Extended Std. Cust. Sales and Vend. Purchase Codes</add>
      </changelog>
      }
      //**4PS
      VendorRec.SETRANGE("No.","Buy-from Vendor No.");
      VendorRec.SETRANGE(Subcontractor,TRUE);
      EXIT(VendorRec.FIND('-'));
    END;

    PROCEDURE SelectBlanketOrder@1210190001();
    VAR
      lvPurchHeadRec@1210190009 : Record 38;
      lvPurchLine@1210190008 : Record 39;
      lvPurchLine2@1210190007 : Record 39;
      lvMarkedLineRec@1100485001 : Record 39;
      lvPurchLinesFrm@1100485000 : Page 518;
      lvRouteRefMgtCU@1210190010 : Codeunit 11012045;
      DimMgt@1100525001 : Codeunit 408;
      LastLino@1210190000 : Integer;
      lvLastRefNo@1210190002 : Code[20];
    BEGIN
      //**4PS
      lvPurchLine.FILTERGROUP(9);
      lvPurchLine.SETRANGE("Document Type", lvPurchLine."Document Type"::"Blanket Order");
      lvPurchLine.SETRANGE("Buy-from Vendor No.", "Buy-from Vendor No.");
      lvPurchLine.SETRANGE("Purchase Order Status",
        lvPurchLine."Purchase Order Status"::Open, lvPurchLine."Purchase Order Status"::Released);
      lvPurchLine.FILTERGROUP(0);
      lvPurchLine.SETFILTER("Valid Until", '%1|>%2', 0D, TODAY);
      lvPurchLinesFrm.SETTABLEVIEW(lvPurchLine);
      lvPurchLinesFrm.LOOKUPMODE(TRUE);
      IF lvPurchLinesFrm.RUNMODAL() = ACTION::LookupOK THEN BEGIN
        IF NOT lvPurchLinesFrm.GetMarkedLines(lvMarkedLineRec) THEN BEGIN
          lvPurchLinesFrm.GETRECORD(lvPurchLine);
          lvPurchLine.SETRANGE("Document Type", lvPurchLine."Document Type");
          lvPurchLine.SETRANGE("Document No.", lvPurchLine."Document No.");
          lvPurchLine.SETRANGE("Line No.", lvPurchLine."Line No.");
        END ELSE BEGIN
          lvPurchLine.COPY(lvMarkedLineRec);
        END;
        IF lvPurchLine.FINDSET(TRUE,FALSE) THEN BEGIN
          REPEAT
            lvPurchHeadRec.GET(lvPurchLine."Document Type", lvPurchLine."Document No.");
            IF (lvPurchHeadRec."Valid Until" <> 0D) AND (lvPurchHeadRec."Valid Until" <= TODAY) THEN
              ERROR(Text11012004, lvPurchHeadRec."No.", lvPurchHeadRec."Valid Until");

            lvPurchLine2.RESET;
            lvPurchLine2.SETRANGE("Document Type", "Document Type"::Order);
            lvPurchLine2.SETRANGE("Document No.", "No.");
            IF lvPurchLine2.FINDLAST THEN
              LastLino := lvPurchLine2."Line No."
            ELSE
              LastLino := 0;

            lvPurchLine2 := lvPurchLine;
            lvPurchLine2."Document Type" := "Document Type"::Order;
            lvPurchLine2."Document No." := "No.";
            lvPurchLine2."Line No." := LastLino + 10000;
            lvPurchLine2."Blanket Order No." := lvPurchLine."Document No.";
            lvPurchLine2."Blanket Order Line No." := lvPurchLine."Line No.";
            lvPurchLine2.Quantity := 0;
            lvPurchLine2."Quantity Received" := 0;
            lvPurchLine2."Quantity Invoiced" := 0;
            lvPurchLine2."Quantity (Base)" := 0;
            lvPurchLine2."Qty. Received (Base)" := 0;
            lvPurchLine2."Qty. Invoiced (Base)" := 0;
            lvPurchLine2.INSERT(TRUE);

            lvPurchLine2.Quantity := lvPurchLine.Quantity;  //however incorrect, but reset by next function
            lvPurchLine2.Quantity := lvPurchLine2.CheckBlanketOrder(FALSE);
            lvPurchLine2.VALIDATE(Quantity);
            IF (lvPurchLine."Purchase Route Reference" <> '') THEN BEGIN
              lvPurchLine2."Purchase Route Reference" := lvPurchLine."Purchase Route Reference";
            END ELSE BEGIN
              lvLastRefNo := lvRouteRefMgtCU.GetLastRefNo();
              lvLastRefNo := INCSTR(lvLastRefNo);
              lvPurchLine2."Purchase Route Reference" := lvLastRefNo;
              lvPurchLine."Purchase Route Reference" := lvLastRefNo;
              lvRouteRefMgtCU.WriteLastRefNo(lvLastRefNo);
            END;
            lvPurchLine2.MODIFY(TRUE);

            //lvPurchLine."Qty. to Receive" := lvPurchLine.Quantity - lvPurchLine2.Quantity;
            //lvPurchLine.MODIFY;  //db, 19-04-10: M19112

          UNTIL lvPurchLine.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE InitSelectionFromReference@1210190002(IOrderLineNo@1210190000 : Integer);
    BEGIN
      //**4PS
      gFromReference := TRUE;
      gOrderLineNo := IOrderLineNo;
    END;

    PROCEDURE EditDetailsBuyerAddress@1100485001();
    VAR
      lvPurchHeaderRec@1100485000 : Record 38;
      NameDetails@1210190000 : Page 11072501;
    BEGIN
      //**4PS
      IF WRITEPERMISSION THEN BEGIN
        MODIFY;
        COMMIT;
      END;

      lvPurchHeaderRec.SETRANGE("Document Type","Document Type");
      lvPurchHeaderRec.SETRANGE("No.","No.");

      CLEAR(NameDetails);
      NameDetails.SETTABLEVIEW(lvPurchHeaderRec);
      NameDetails.SETRECORD(lvPurchHeaderRec);
      NameDetails.RUNMODAL;
      NameDetails.GETRECORD(lvPurchHeaderRec);

      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShowDocuments@1100528400();
    VAR
      DocumentFilters@1100528400 : Codeunit 11012432;
      RecRef@1100528401 : RecordRef;
    BEGIN
      //**4PS.sn
      RecRef.GETTABLE(Rec);
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, "Shortcut Dimension 1 Code", FALSE, TRUE);
      //**4PS.en
    END;

    PROCEDURE GS1ErrorLogDrillDown@1210190005();
    VAR
      GS1ErrorLog@1210190000 : Record 11072078;
    BEGIN
      //**4PS
      GS1ErrorLog.SETRANGE("Document Type", "Document Type");
      GS1ErrorLog.SETRANGE("Document No.", "No.");
      GS1ErrorLog.TableDrillDown(GS1ErrorLog);
    END;

    PROCEDURE GS1PurchaseOrderLogDrillDown@1210190007();
    VAR
      GS1PurchaseOrderLog@1210190000 : Record 11072079;
    BEGIN
      //**4PS
      GS1PurchaseOrderLog.SETRANGE("Document Type", "Document Type");
      GS1PurchaseOrderLog.SETRANGE("Document No.", "No.");
      GS1PurchaseOrderLog.TableDrillDown(GS1PurchaseOrderLog);
    END;

    LOCAL PROCEDURE InductionNoteNoOnAfterValidate@19013542();
    BEGIN
      //**4PS
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE PurchaseOrderTypeOnAfterValida@19048848();
    VAR
      lvPurchLineRec@1100525001 : Record 39;
    BEGIN
      //**4PS
      IF "Purchase Order Type" = "Purchase Order Type"::"Blanket Order" THEN BEGIN
        lvPurchLineRec.SETRANGE("Document Type", lvPurchLineRec."Document Type"::Order);
        lvPurchLineRec.SETRANGE("Document No.","No.");
        IF lvPurchLineRec.FINDSET THEN
         CurrPage.UPDATE;
      END;
    END;

    LOCAL PROCEDURE PurchaseHeaderExtensionDeliver@19002753();
    BEGIN
      //**4PS
      PurchaseHeaderExtension.UpdatePurchHeadExtension("Document Type", "No.");
      CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE ShipmentInstruct1OnAfterValida@19023030();
    BEGIN
      //**4PS
      HandleShipmentInstruction(1, ShipmentInstruct1, ShipmentInstruct2);
    END;

    LOCAL PROCEDURE ShipmentInstruct2OnAfterValida@19004685();
    BEGIN
      //**4PS
      HandleShipmentInstruction(1, ShipmentInstruct1, ShipmentInstruct2);
    END;

    LOCAL PROCEDURE PhoneICMOnAfterValidate@19008432();
    BEGIN
      //**4PS
      HandlePhoneICM(1, PhoneICM);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRec@19077479();
    VAR
      RecRef@1100529900 : RecordRef;
    BEGIN
      //**4PS
      HandlePhoneICM(0, PhoneICM);
      HandleShipmentInstruction(0, ShipmentInstruct1, ShipmentInstruct2);

      RecRef.GETTABLE(Rec);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(TRUE);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode("Shortcut Dimension 1 Code");
    END;

    BEGIN
    {
      --- ExFlow --->
      Field General : Approve
      Field General : ExFlowStatus
      Field General : Requisition No.
      Action        : Show Document (Code)
      Action        : Attachments
      Code          : Action Print
      Text Const.   : EXF01
      Globals
      <-- ExFlow ---
      Version List=NAVW19.00.00.45834,NAVSE9.00.00.45834;
      Version List=NAVW19.00.00.45834,NAVDK9.00.00.45834;
      Version List=NAVW19.00.00.45834,NAVNO9.00.00.45834;
      PEB *** Begin ***
      PEB0012 "Note of Goods" field added
      PEB0042 Get Coding from Latest Invoice
      PEB
        New field on Page
        General:
         - Note of Goods
      PEB *** End ***
    }
    END.
  }
}

