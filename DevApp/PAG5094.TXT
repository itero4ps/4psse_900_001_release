OBJECT Page 5094 Marketing Setup
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Marketing Setup;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table5079;
    PageType=Card;
    OnInit=BEGIN
             //**4PS.sn
             VendorsEditable := TRUE;
             CustomersEditable := TRUE;
             PersonsEditable := TRUE;
             CompaniesEditable := TRUE;
             CBinitButtonVisible := TRUE;
             //**4PS.en
           END;

    OnOpenPage=BEGIN
                 RESET;
                 IF NOT GET THEN BEGIN
                   INIT;
                   INSERT;
                 END;

                 CheckCompanyRelationCentralMgt();  //**4PS.n

                 AttachmentStorageLocationEnabl := "Attachment Storage Type" = "Attachment Storage Type"::"Disk File";
                 GlobalSynchronizationIsEnabled := IntegrationManagement.IsIntegrationServicesEnabled;
                 ExchangeAccountPasswordTemp := '';
                 IF ("Exchange Account User Name" <> '') AND (NOT ISNULLGUID("Exchange Account Password Key")) THEN
                   ExchangeAccountPasswordTemp := '**********';
               END;

    OnAfterGetRecord=BEGIN
                       IF "Enable Connector" AND NOT GlobalSynchronizationIsEnabled THEN BEGIN
                         IntegrationManagement.DisableConnector;
                         "Enable Connector" := FALSE;
                       END;
                     END;

    OnAfterGetCurrRecord=BEGIN
                           //**4PS.sn
                           LeadingCompany := CompRelationRec.GetLeadingCompany(DATABASE::"Marketing Setup","Central Management");

                           AllowDecentralCompPersEDITABLE := ((LeadingCompany = COMPANYNAME) AND (Companies OR Persons) );
                           AllowDecentralCustomersEDITABL := ((LeadingCompany = COMPANYNAME) AND Customers);
                           AllowDecentralVendorsEDITABLE := ((LeadingCompany = COMPANYNAME) AND Vendors);

                           CBinitButtonVisible := "Central Management";
                           CompaniesEditable := (LeadingCompany = COMPANYNAME);
                           "Company FeaturesEDITABLE" := ((LeadingCompany = COMPANYNAME) AND (Companies) );
                           "Company Alt. AddressesEDITABLE" := ((LeadingCompany = COMPANYNAME) AND (Companies) );
                           "Industry GroupsEDITABLE" := ((LeadingCompany = COMPANYNAME) AND (Companies) );
                           TradenamesEDITABLE := ((LeadingCompany = COMPANYNAME) AND (Companies) );
                           PersonsEditable := (LeadingCompany = COMPANYNAME);
                           "Contactperson FeaturesEDITABLE" := ((LeadingCompany = COMPANYNAME) AND (Persons));
                           "Person FeaturesEDITABLE" := ((LeadingCompany = COMPANYNAME) AND (Persons));
                           "Person Alt. AddressesEDITABLE" := ((LeadingCompany = COMPANYNAME) AND (Persons) );
                           "Function GroupsEDITABLE" := ((LeadingCompany = COMPANYNAME) AND (Persons) );
                           "Mailing GroupsEDITABLE" := ((LeadingCompany = COMPANYNAME) AND (Companies OR Persons) );
                           CustomersEditable :=  (LeadingCompany = COMPANYNAME);
                           "Customer AddressesEDITABLE" := ((LeadingCompany = COMPANYNAME) AND Customers);
                           CreditLimitbyDateEDITABLE := ((LeadingCompany = COMPANYNAME) AND Customers);
                           CustomerDefaultDimensionsEDITABLE := ((LeadingCompany = COMPANYNAME) AND Customers);
                           VendorsEditable := (LeadingCompany = COMPANYNAME);
                           "Order AddressesEDITABLE" := ((LeadingCompany = COMPANYNAME) AND Vendors);
                           "Payment AgreementsEDITABLE" := ((LeadingCompany = COMPANYNAME) AND Vendors);
                           "Vendor EmployeesEDITABLE" := ((LeadingCompany = COMPANYNAME) AND Vendors);
                           "Vendor CategoriesEDITABLE" := ((LeadingCompany = COMPANYNAME) AND Vendors);  //DP00268
                           CommentsEDITABLE := ((LeadingCompany = COMPANYNAME) AND (Vendors OR Customers OR Persons));
                           SalespersonsEDITABLE := ((LeadingCompany = COMPANYNAME) AND (Vendors OR Customers));
                           //**4PS.en
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 100     ;1   ;ActionGroup;
                      CaptionML=ENU=&Setup;
                      Image=Setup }
      { 10      ;2   ;Action    ;
                      CaptionML=ENU=Social Engagement Setup;
                      RunObject=Page 870;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SocialListening;
                      PromotedCategory=Process }
      { 101     ;2   ;Action    ;
                      CaptionML=ENU=Duplicate Search String Setup;
                      RunObject=Page 5138;
                      Image=CompareContacts }
      { 1100525000;2 ;Action    ;
                      CaptionML=ENU=Central Management Field Setup;
                      RunObject=Page 11072437;
                      Image=Setup }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 50      ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 7       ;2   ;Action    ;
                      Name=Validate EmailLogging Setup;
                      CaptionML=ENU=Validate Email Logging Setup;
                      Image=ValidateEmailLoggingSetup;
                      OnAction=VAR
                                 ErrorMessage@1001 : Text;
                               BEGIN
                                 IF ValidateEmailLoggingSetup(Rec,ErrorMessage) THEN
                                   MESSAGE(Text012)
                                 ELSE
                                   ERROR(ErrorMessage);
                               END;
                                }
      { 51      ;2   ;Action    ;
                      Name=Clear EmailLogging Setup;
                      CaptionML=ENU=Clear Email Logging Setup;
                      Image=ClearLog;
                      OnAction=BEGIN
                                 IF CONFIRM(Text009,TRUE) THEN
                                   ClearEmailLoggingSetup(Rec);
                               END;
                                }
      { 52      ;2   ;Action    ;
                      CaptionML=ENU=Generate Integration IDs for Connector for Microsoft Dynamics;
                      Image=CreateSerialNo;
                      OnAction=VAR
                                 IntegrationManagement@1000 : Codeunit 5150;
                               BEGIN
                                 TESTFIELD("Enable Connector");
                                 IF CONFIRM(Text004,TRUE) THEN BEGIN
                                   IntegrationManagement.SetupIntegrationTables;
                                   MESSAGE(Text005);
                                 END;
                               END;
                                }
      { 1101200014;1 ;Action    ;
                      Name=CBinitButton;
                      CaptionML=ENU=&Initialise Central Management;
                      Visible=CBinitButtonVisible;
                      Image=Track;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CentralMgt@11012000 : Codeunit 11012010;
                               BEGIN
                                 //**4PS
                                 CentralMgt.InitContactManagement;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=ENU=General }

    { 2   ;2   ;Field     ;
                SourceExpr="Attachment Storage Type";
                OnValidate=BEGIN
                             AttachmentStorageTypeOnAfterVa;
                           END;
                            }

    { 4   ;2   ;Field     ;
                SourceExpr="Attachment Storage Location";
                Enabled=AttachmentStorageLocationEnabl;
                OnValidate=BEGIN
                             AttachmentStorageLocationOnAft;
                           END;
                            }

    { 11012000;2;Field    ;
                SourceExpr="Mailing Groups for Contact" }

    { 11012002;2;Field    ;
                SourceExpr="Sector for Relation" }

    { 1100485002;2;Field  ;
                SourceExpr="Required Features Alert" }

    { 1210190007;2;Field  ;
                SourceExpr="Default Ext. Doc. Directory";
                OnAssistEdit=BEGIN
                               //**4PS
                               FileMgt.SelectDirectoryNameWithBackSlash("Default Ext. Doc. Directory");
                             END;
                              }

    { 1210190008;2;Field  ;
                SourceExpr="Default Source Dir.Ext.Doc";
                OnAssistEdit=BEGIN
                               //**4PS
                               FileMgt.SelectDirectoryNameWithBackSlash("Default Source Dir.Ext.Doc");
                             END;
                              }

    { 1100485060;2;Field  ;
                SourceExpr="Remove SourceFile" }

    { 1210190010;2;Field  ;
                SourceExpr="Show only own documents" }

    { 1210190012;2;Field  ;
                SourceExpr="Generate Project allowed" }

    { 1100485000;2;Field  ;
                SourceExpr="Contact Feature Gr. Funnel" }

    { 1100528401;2;Field  ;
                SourceExpr="Only Create Obl. Features Aut." }

    { 1100485006;2;Field  ;
                SourceExpr="Document Group" }

    { 1100485048;2;Field  ;
                ToolTipML=[ENU="%1 = Document No. ; %2 = Name Abbrev. Sender ; %3 = Name Abbrev. Editor ; %4=Project No. ; %5=Nr."];
                SourceExpr="Custom Reference Format" }

    { 1100525003;2;Field  ;
                SourceExpr="Relational Structure" }

    { 1210190016;2;Field  ;
                SourceExpr="Format Full Name Person" }

    { 1100525007;2;Field  ;
                SourceExpr="Tradenames in Name Validation" }

    { 1100528700;2;Field  ;
                SourceExpr="Phone Number Meta Data XML";
                OnAssistEdit=VAR
                               FileManagement@1100528704 : Codeunit 419;
                               FilterString@1100525000 : Text;
                             BEGIN
                               //**4PS
                               FilterString := FileManagement.GetToFilterText('', '.xml');
                               "Phone Number Meta Data XML" := FileManagement.OpenFileDialog('', "Phone Number Meta Data XML", FilterString);
                             END;
                              }

    { 1100409000;2;Field  ;
                SourceExpr="Document Type for Inv. Doc." }

    { 1100285301;2;Field  ;
                SourceExpr="Activate Bankgiro" }

    { 1100285001;2;Field  ;
                SourceExpr="Path to Bankgiro" }

    { 1904626001;1;Group  ;
                CaptionML=ENU=Inheritance }

    { 6   ;2   ;Group     ;
                CaptionML=ENU=Inherit }

    { 13  ;3   ;Field     ;
                CaptionML=ENU=Salesperson Code;
                SourceExpr="Inherit Salesperson Code" }

    { 1100528702;3;Field  ;
                CaptionML=ENU=Sales Representative Code;
                SourceExpr="Inherit Sales Rep. Code" }

    { 1100528704;3;Field  ;
                CaptionML=ENU=Purchaser Code;
                SourceExpr="Inherit Purchaser Code" }

    { 14  ;3   ;Field     ;
                CaptionML=ENU=Territory Code;
                SourceExpr="Inherit Territory Code" }

    { 15  ;3   ;Field     ;
                CaptionML=ENU=Country/Region Code;
                SourceExpr="Inherit Country/Region Code" }

    { 16  ;3   ;Field     ;
                CaptionML=ENU=Language Code;
                SourceExpr="Inherit Language Code" }

    { 17  ;3   ;Field     ;
                CaptionML=ENU=Address Details;
                SourceExpr="Inherit Address Details" }

    { 79  ;3   ;Field     ;
                CaptionML=ENU=Communication Details;
                SourceExpr="Inherit Communication Details" }

    { 1100525001;3;Field  ;
                CaptionML=ENU=Visit Address Details;
                SourceExpr="Inherit Visit Address Details" }

    { 1210190001;3;Field  ;
                SourceExpr="Inherit No. at Successor" }

    { 1902985101;1;Group  ;
                CaptionML=ENU=Defaults }

    { 80  ;2   ;Group     ;
                CaptionML=ENU=Default }

    { 30  ;3   ;Field     ;
                CaptionML=ENU=Salesperson Code;
                SourceExpr="Default Salesperson Code" }

    { 28  ;3   ;Field     ;
                CaptionML=ENU=Territory Code;
                SourceExpr="Default Territory Code" }

    { 26  ;3   ;Field     ;
                CaptionML=ENU=Country/Region Code;
                SourceExpr="Default Country/Region Code" }

    { 24  ;3   ;Field     ;
                CaptionML=ENU=Language Code;
                SourceExpr="Default Language Code" }

    { 102 ;3   ;Field     ;
                CaptionML=ENU=Correspondence Type;
                SourceExpr="Default Correspondence Type" }

    { 22  ;3   ;Field     ;
                CaptionML=ENU=Company Salutation Code;
                SourceExpr="Def. Company Salutation Code" }

    { 86  ;3   ;Field     ;
                CaptionML=ENU=Person Salutation Code;
                SourceExpr="Default Person Salutation Code" }

    { 1210190000;3;Field  ;
                CaptionML=ENU=Male Salutation Code;
                SourceExpr="Default Male Salutation Code" }

    { 1210190004;3;Field  ;
                CaptionML=ENU=Female Salutation Code;
                SourceExpr="Default Female Salutation Code" }

    { 20  ;3   ;Field     ;
                CaptionML=ENU=Sales Cycle Code;
                SourceExpr="Default Sales Cycle Code" }

    { 1210190003;3;Field  ;
                CaptionML=ENU=Due Date Activities;
                SourceExpr="Default Due Date Activities" }

    { 124 ;3   ;Field     ;
                CaptionML=ENU=To-do Date Calculation;
                SourceExpr="Default To-do Date Calculation" }

    { 1906323901;1;Group  ;
                CaptionML=ENU=Interactions }

    { 55  ;2   ;Field     ;
                SourceExpr="Mergefield Language ID";
                OnLookup=VAR
                           LanguageManagement@1000 : Codeunit 43;
                         BEGIN
                           LanguageManagement.LookupApplicationLanguage("Mergefield Language ID");
                         END;
                          }

    { 1100525005;2;Field  ;
                SourceExpr="By-pass Phone Call Wizard" }

    { 1903203501;1;Group  ;
                CaptionML=ENU=Synchronization }

    { 9   ;2   ;Field     ;
                Name=EnableSynchronization;
                CaptionML=ENU=Enable Synchronization;
                SourceExpr=GlobalSynchronizationIsEnabled;
                OnValidate=BEGIN
                             IF GlobalSynchronizationIsEnabled = IntegrationManagement.IsIntegrationServicesEnabled THEN
                               EXIT;

                             IF GlobalSynchronizationIsEnabled THEN BEGIN
                               IF NOT CONFIRM(EnableIntegrationServicesQst) THEN
                                 ERROR('');
                               IntegrationManagement.EnableIntegrationServices
                             END ELSE BEGIN
                               IF NOT CONFIRM(DisableIntegrationServicesQst) THEN
                                 ERROR('');
                               IntegrationManagement.DisableIntegrationServices;
                               IntegrationManagement.DisableConnector;
                               "Enable Connector" := FALSE;
                             END;
                           END;
                            }

    { 83  ;2   ;Group     ;
                CaptionML=ENU=Bus. Relation Code for;
                GroupType=Group }

    { 56  ;3   ;Field     ;
                CaptionML=ENU=Customers;
                SourceExpr="Bus. Rel. Code for Customers" }

    { 58  ;3   ;Field     ;
                CaptionML=ENU=Vendors;
                SourceExpr="Bus. Rel. Code for Vendors" }

    { 60  ;3   ;Field     ;
                CaptionML=ENU=Bank Accounts;
                SourceExpr="Bus. Rel. Code for Bank Accs." }

    { 1100485046;3;Field  ;
                CaptionML=ENU=Employers;
                SourceExpr="Bus. Rel. Code for Employers" }

    { 1210190059;3;Field  ;
                CaptionML=ENU=Employees;
                SourceExpr="Bus. Rel. Code for Employees" }

    { 33  ;3   ;Field     ;
                SourceExpr="Enable Connector";
                Enabled=GlobalSynchronizationIsEnabled }

    { 1210190006;3;Field  ;
                CaptionML=ENU=Shortcut Dimension Employees;
                SourceExpr="Shortcut Dimension Employees" }

    { 1904569201;1;Group  ;
                CaptionML=ENU=Numbering }

    { 1210190002;2;Field  ;
                SourceExpr="Company Nos." }

    { 62  ;2   ;Field     ;
                SourceExpr="Contact Nos." }

    { 1210190005;2;Field  ;
                SourceExpr="Person Nos." }

    { 64  ;2   ;Field     ;
                SourceExpr="Campaign Nos." }

    { 66  ;2   ;Field     ;
                SourceExpr="Segment Nos." }

    { 68  ;2   ;Field     ;
                SourceExpr="To-do Nos." }

    { 70  ;2   ;Field     ;
                SourceExpr="Opportunity Nos." }

    { 1210190044;2;Field  ;
                SourceExpr="Try-out Nos." }

    { 1210190043;2;Field  ;
                SourceExpr="Try-out Quote Nos." }

    { 1210190018;2;Field  ;
                SourceExpr="Reference Tool Nos." }

    { 1210190042;2;Field  ;
                SourceExpr="Document Nos." }

    { 1100485008;2;Field  ;
                SourceExpr="External Document Nos." }

    { 1100485042;2;Field  ;
                SourceExpr="Contact Nos. Employers" }

    { 1100485044;2;Field  ;
                SourceExpr="Contact Nos. Employees" }

    { 1903832701;1;Group  ;
                CaptionML=ENU=Duplicates }

    { 75  ;2   ;Field     ;
                SourceExpr="Maintain Dupl. Search Strings" }

    { 77  ;2   ;Field     ;
                SourceExpr="Autosearch for Duplicates" }

    { 73  ;2   ;Field     ;
                SourceExpr="Search Hit %" }

    { 1900887301;1;Group  ;
                CaptionML=ENU=E-Mail Logging }

    { 3   ;2   ;Field     ;
                SourceExpr="Autodiscovery E-Mail Address";
                OnValidate=BEGIN
                             IF "Autodiscovery E-Mail Address" <> xRec."Autodiscovery E-Mail Address" THEN
                               ExchangeWebServicesClient.InvalidateService;
                           END;
                            }

    { 12  ;2   ;Field     ;
                SourceExpr="Exchange Service URL";
                OnValidate=BEGIN
                             IF "Exchange Service URL" <> xRec."Exchange Service URL" THEN
                               ExchangeWebServicesClient.InvalidateService;
                           END;
                            }

    { 11  ;2   ;Field     ;
                SourceExpr="Exchange Account User Name";
                OnValidate=BEGIN
                             IF "Exchange Account User Name" <> xRec."Exchange Account User Name" THEN
                               ExchangeWebServicesClient.InvalidateService;
                           END;
                            }

    { 18  ;2   ;Field     ;
                ExtendedDatatype=Masked;
                CaptionML=ENU=Exchange Account Password;
                SourceExpr=ExchangeAccountPasswordTemp;
                OnValidate=BEGIN
                             SetExchangeAccountPassword(ExchangeAccountPasswordTemp);
                             COMMIT;
                             ExchangeWebServicesClient.InvalidateService;
                           END;
                            }

    { 8   ;2   ;Field     ;
                SourceExpr="Email Batch Size" }

    { 5   ;2   ;Group     ;
                GroupType=Group }

    { 104 ;3   ;Field     ;
                SourceExpr="Queue Folder Path";
                OnAssistEdit=VAR
                               ExchangeFolder@1002 : Record 5320;
                             BEGIN
                               IF GetExchangeFolder(ExchangeFolder,Text014) THEN
                                 SetQueueFolder(ExchangeFolder);
                             END;
                              }

    { 19  ;3   ;Field     ;
                SourceExpr="Storage Folder Path";
                OnAssistEdit=VAR
                               ExchangeFolder@1002 : Record 5320;
                             BEGIN
                               IF GetExchangeFolder(ExchangeFolder,Text015) THEN
                                 SetStorageFolder(ExchangeFolder);
                             END;
                              }

    { 1904248801;1;Group  ;
                CaptionML=ENU=Central Management }

    { 1000000030;2;Field  ;
                SourceExpr="Central Management";
                OnValidate=BEGIN
                             CentralManagementOnAfterValida;
                           END;
                            }

    { 1000000028;2;Field  ;
                CaptionML=ENU=Leading Company;
                SourceExpr=LeadingCompany;
                Editable=FALSE;
                OnValidate=BEGIN
                             LeadingCompanyOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               //**4PS
                               CurrPage.SAVERECORD;
                               COMMIT;
                               PAGE.RUNMODAL(0, CompRelationRec);
                               CurrPage.UPDATE;
                             END;
                              }

    { 1000000023;2;Field  ;
                SourceExpr=Companies;
                Editable=CompaniesEditable;
                OnValidate=BEGIN
                             CompaniesOnAfterValidate;
                           END;
                            }

    { 1100528400;2;Field  ;
                SourceExpr="Allow Decentral Comp./Pers.";
                Editable=AllowDecentralCompPersEDITABLE }

    { 1000000016;2;Field  ;
                SourceExpr="Company Features";
                Editable="Company FeaturesEDITABLE" }

    { 1100485010;2;Field  ;
                SourceExpr="Company Alt. Addresses";
                Editable="Company Alt. AddressesEDITABLE" }

    { 1100485014;2;Field  ;
                SourceExpr="Industry Groups";
                Editable="Industry GroupsEDITABLE" }

    { 1100525008;2;Field  ;
                SourceExpr=Tradenames;
                Editable=TradenamesEDITABLE }

    { 1000000022;2;Field  ;
                SourceExpr=Persons;
                Editable=PersonsEditable;
                OnValidate=BEGIN
                             PersonsOnAfterValidate;
                           END;
                            }

    { 1100528701;2;Field  ;
                SourceExpr="Contactperson Features";
                Editable="Contactperson FeaturesEDITABLE" }

    { 1000000018;2;Field  ;
                SourceExpr="Person Features";
                Editable="Person FeaturesEDITABLE" }

    { 1100485018;2;Field  ;
                SourceExpr="Person Alt. Addresses";
                Editable="Person Alt. AddressesEDITABLE" }

    { 1100485016;2;Field  ;
                SourceExpr="Function Groups";
                Editable="Function GroupsEDITABLE" }

    { 1100485012;2;Field  ;
                SourceExpr="Mailing Groups";
                Editable="Mailing GroupsEDITABLE" }

    { 1000000020;2;Field  ;
                SourceExpr=Customers;
                Editable=CustomersEditable;
                OnValidate=BEGIN
                             CustomersOnAfterValidate;
                           END;
                            }

    { 1100528402;2;Field  ;
                SourceExpr="Allow Decentral Customers";
                Editable=AllowDecentralCustomersEDITABL }

    { 1210190014;2;Field  ;
                SourceExpr="Customer Addresses";
                Editable="Customer AddressesEDITABLE" }

    { 1100528600;2;Field  ;
                SourceExpr="Customer Default Dimensions";
                Editable=CustomerDefaultDimensionsEDITABLE }

    { 1100528300;2;Field  ;
                SourceExpr="Credit Limit by Date";
                Editable=CreditLimitbyDateEDITABLE }

    { 1000000021;2;Field  ;
                SourceExpr=Vendors;
                Editable=VendorsEditable;
                OnValidate=BEGIN
                             VendorsOnAfterValidate;
                           END;
                            }

    { 1100528404;2;Field  ;
                SourceExpr="Allow Decentral Vendors";
                Editable=AllowDecentralVendorsEDITABLE }

    { 1100485024;2;Field  ;
                SourceExpr="Order Addresses";
                Editable="Order AddressesEDITABLE" }

    { 1100485050;2;Field  ;
                SourceExpr="Payment Agreements";
                Editable="Payment AgreementsEDITABLE" }

    { 1100528703;2;Field  ;
                SourceExpr="Vendor Employees";
                Editable="Vendor EmployeesEDITABLE" }

    { 1100528900;2;Field  ;
                SourceExpr="Vendor Categories";
                Editable="Vendor CategoriesEDITABLE" }

    { 1100485022;2;Field  ;
                SourceExpr=Comments;
                Editable=CommentsEDITABLE }

    { 1100485030;2;Field  ;
                SourceExpr=Salespersons;
                Editable=SalespersonsEDITABLE }

    { 1100525006;1;Group  ;
                CaptionML=ENU=DMS }

    { 1100525004;2;Field  ;
                SourceExpr="D3 Folder Code" }

    { 1100525002;2;Field  ;
                SourceExpr="D3 Field No." }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ExchangeWebServicesClient@1000 : Codeunit 5320;
      IntegrationManagement@1016 : Codeunit 5150;
      ExchangeAccountPasswordTemp@1018 : Text;
      AttachmentStorageLocationEnabl@19012985 : Boolean INDATASET;
      Text004@1003 : TextConst 'ENU=You are about to add integration data to tables. This process may take several minutes. Do you want to continue?';
      Text005@1004 : TextConst 'ENU=The integration data has been added to the tables.';
      Text006@1005 : TextConst 'ENU=A valid email address is needed to find an instance of Exchange Server.';
      Text007@1006 : TextConst 'ENU=Exchange Server cannot be found.';
      Text008@1002 : TextConst 'ENU=The specified Exchange folder does not exist.';
      Text009@1001 : TextConst 'ENU=This clears the fields in your email logging setup. Do you want to continue?';
      Text010@1007 : TextConst 'ENU=The specified Queue folder does not exist or cannot be accessed.';
      Text011@1008 : TextConst 'ENU=The specified Storage folder does not exist or cannot be accessed.';
      Text012@1009 : TextConst 'ENU=Email logging setup was successfully validated and completed.';
      Text013@1010 : TextConst 'ENU=Validating #1#';
      Text014@1011 : TextConst 'ENU=Select Queue folder';
      Text015@1012 : TextConst 'ENU=Select Storage folder';
      Text016@1015 : TextConst 'ENU=Interaction Template Setup';
      GlobalSynchronizationIsEnabled@1013 : Boolean;
      DisableIntegrationServicesQst@1014 : TextConst 'ENU=Disabling integration services will disable the feature for all companies and tenants. The operation requires SUPER user permissions. Do you want to continue?';
      EnableIntegrationServicesQst@1017 : TextConst 'ENU=Enabling integration services will enable all companies and tenants to enable the connector. The operation requires SUPER user permissions. Do you want to continue?';
      FileMgt@1100525000 : Codeunit 419;
      CompRelationRec@1210190001 : Record 11012059;
      LeadingCompany@1210190002 : Text[50];
      CBinitButtonVisible@19068158 : Boolean INDATASET;
      CompaniesEditable@19063993 : Boolean INDATASET;
      PersonsEditable@19060297 : Boolean INDATASET;
      CustomersEditable@19000338 : Boolean INDATASET;
      VendorsEditable@19018639 : Boolean INDATASET;
      "Company FeaturesEDITABLE"@1210190101 : Boolean INDATASET;
      "Mailing GroupsEDITABLE"@1210190102 : Boolean INDATASET;
      "Industry GroupsEDITABLE"@1210190003 : Boolean INDATASET;
      TradenamesEDITABLE@1100525001 : Boolean;
      "Company Alt. AddressesEDITABLE"@1210190004 : Boolean INDATASET;
      "Contactperson FeaturesEDITABLE"@1100528700 : Boolean INDATASET;
      "Person FeaturesEDITABLE"@1210190005 : Boolean INDATASET;
      "Function GroupsEDITABLE"@1210190006 : Boolean INDATASET;
      "Person Alt. AddressesEDITABLE"@1210190007 : Boolean INDATASET;
      "Customer AddressesEDITABLE"@1210190008 : Boolean INDATASET;
      "Order AddressesEDITABLE"@1210190009 : Boolean INDATASET;
      CommentsEDITABLE@1210190010 : Boolean INDATASET;
      "Payment AgreementsEDITABLE"@1210190011 : Boolean INDATASET;
      "Vendor EmployeesEDITABLE"@1100528701 : Boolean INDATASET;
      "Vendor CategoriesEDITABLE"@1100528900 : Boolean INDATASET;
      SalespersonsEDITABLE@1210190012 : Boolean INDATASET;
      AllowDecentralCompPersEDITABLE@1210190013 : Boolean INDATASET;
      AllowDecentralCustomersEDITABL@1210190014 : Boolean INDATASET;
      AllowDecentralVendorsEDITABLE@1210190015 : Boolean INDATASET;
      CustomerDefaultDimensionsEDITABLE@1100528600 : Boolean;
      CreditLimitbyDateEDITABLE@1100528601 : Boolean;

    PROCEDURE SetAttachmentStorageType@1();
    BEGIN
      IF ("Attachment Storage Type" = "Attachment Storage Type"::Embedded) OR
         ("Attachment Storage Location" <> '')
      THEN BEGIN
        MODIFY;
        COMMIT;
        REPORT.RUN(REPORT::"Relocate Attachments");
      END;
    END;

    PROCEDURE SetAttachmentStorageLocation@3();
    BEGIN
      IF "Attachment Storage Location" <> '' THEN BEGIN
        MODIFY;
        COMMIT;
        REPORT.RUN(REPORT::"Relocate Attachments");
      END;
    END;

    LOCAL PROCEDURE AttachmentStorageTypeOnAfterVa@19041025();
    BEGIN
      AttachmentStorageLocationEnabl := "Attachment Storage Type" = "Attachment Storage Type"::"Disk File";
      SetAttachmentStorageType;
    END;

    LOCAL PROCEDURE AttachmentStorageLocationOnAft@19001696();
    BEGIN
      SetAttachmentStorageLocation;
    END;

    PROCEDURE InitExchangeService@2();
    VAR
      Credentials@1001 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.NetworkCredential";
      Result@1000 : Boolean;
    BEGIN
      IF "Autodiscovery E-Mail Address" = '' THEN
        ERROR(Text006);

      IF "Exchange Account User Name" <> '' THEN BEGIN
        CreateExchangeAccountCredentials(Credentials);
        Result :=
          ExchangeWebServicesClient.InitializeOnServer("Autodiscovery E-Mail Address","Exchange Service URL",Credentials);
      END ELSE
        Result := ExchangeWebServicesClient.InitializeOnClient("Autodiscovery E-Mail Address","Exchange Service URL");

      IF NOT Result THEN
        ERROR(Text007);
    END;

    LOCAL PROCEDURE GetExchangeFolder@4(VAR ExchangeFolder@1000 : Record 5320;FoldersCaption@1002 : Text) : Boolean;
    VAR
      ExchangeFoldersPage@1001 : Page 5320;
    BEGIN
      InitExchangeService;
      ExchangeFoldersPage.Initialize(ExchangeWebServicesClient,FoldersCaption);
      ExchangeFoldersPage.LOOKUPMODE(TRUE);
      IF ACTION::LookupOK = ExchangeFoldersPage.RUNMODAL THEN BEGIN
        ExchangeFoldersPage.GETRECORD(ExchangeFolder);
        IF NOT ExchangeWebServicesClient.FolderExists(ExchangeFolder.ReadUniqueID) THEN
          ERROR(Text008);
        EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    PROCEDURE ClearEmailLoggingSetup@5(VAR MarketingSetup@1000 : Record 5079);
    VAR
      ServicePassword@1001 : Record 1261;
    BEGIN
      ExchangeWebServicesClient.InvalidateService;

      CLEAR(MarketingSetup."Autodiscovery E-Mail Address");
      CLEAR(MarketingSetup."Email Batch Size");

      CLEAR(MarketingSetup."Queue Folder Path");
      IF MarketingSetup."Queue Folder UID".HASVALUE THEN
        CLEAR(MarketingSetup."Queue Folder UID");

      CLEAR(MarketingSetup."Storage Folder Path");
      IF MarketingSetup."Storage Folder UID".HASVALUE THEN
        CLEAR(MarketingSetup."Storage Folder UID");

      CLEAR(MarketingSetup."Exchange Account User Name");
      CLEAR(MarketingSetup."Exchange Service URL");
      IF NOT ISNULLGUID(MarketingSetup."Exchange Account Password Key") THEN
        IF ServicePassword.GET(MarketingSetup."Exchange Account Password Key") THEN
          ServicePassword.DELETE(TRUE);
      CLEAR(MarketingSetup."Exchange Account Password Key");

      MarketingSetup.MODIFY;
    END;

    LOCAL PROCEDURE ValidateEmailLoggingSetup@6(VAR MarketingSetup@1004 : Record 5079;VAR ErrorMsg@1001 : Text) : Boolean;
    VAR
      EMailLoggingDispatcher@1005 : Codeunit 11072027;
      ProgressWindow@1000 : Dialog;
      Credentials@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.NetworkCredential";
      ValidationCaption@1002 : Text;
      CanInitialize@1003 : Boolean;
    BEGIN
      ExchangeWebServicesClient.InvalidateService;

      ValidationCaption := FIELDCAPTION("Autodiscovery E-Mail Address");
      ProgressWindow.OPEN(Text013,ValidationCaption);

      IF "Exchange Account User Name" <> '' THEN BEGIN
        CreateExchangeAccountCredentials(Credentials);
        CanInitialize := ExchangeWebServicesClient.InitializeOnServer("Autodiscovery E-Mail Address",
            "Exchange Service URL",Credentials);
      END ELSE
        CanInitialize := ExchangeWebServicesClient.InitializeOnClient("Autodiscovery E-Mail Address","Exchange Service URL");

      IF NOT CanInitialize THEN BEGIN
        ErrorMsg := Text006;
        EXIT(FALSE);
      END;

      ValidationCaption := FIELDCAPTION("Queue Folder Path");
      ProgressWindow.UPDATE;
      IF NOT ExchangeWebServicesClient.FolderExists(MarketingSetup.GetQueueFolderUID) THEN BEGIN
        ErrorMsg := Text010;
        EXIT(FALSE);
      END;

      ValidationCaption := FIELDCAPTION("Storage Folder Path");
      ProgressWindow.UPDATE;
      IF NOT ExchangeWebServicesClient.FolderExists(MarketingSetup.GetStorageFolderUID) THEN BEGIN
        ErrorMsg := Text011;
        EXIT(FALSE);
      END;

      // E-Mails cannot be automatically logged unless Interaction Template Setup configured correctly.
      ValidationCaption := Text016;
      ProgressWindow.UPDATE;
      IF NOT EMailLoggingDispatcher.CheckInteractionTemplateSetup(ErrorMsg) THEN
        EXIT(FALSE);

      ProgressWindow.CLOSE;
      CLEAR(ErrorMsg);
      MarketingSetup.MODIFY;

      EXIT(TRUE);
    END;

    PROCEDURE CheckCompanyRelationCentralMgt@1210190000();
    VAR
      lvCompRelRec@1210190000 : Record 11012059;
    BEGIN
      //**4PS
      IF (NOT "Central Management") THEN
        EXIT;

      IF NOT lvCompRelRec.GET(COMPANYNAME) THEN BEGIN
        VALIDATE("Central Management", FALSE);
        MODIFY;
      END;
    END;

    LOCAL PROCEDURE CustomersOnAfterValidate@19063669();
    BEGIN
      //**4PS
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE VendorsOnAfterValidate@19062552();
    BEGIN
      //**4PS
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE PersonsOnAfterValidate@19056432();
    BEGIN
      //**4PS
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE CompaniesOnAfterValidate@19018983();
    BEGIN
      //**4PS
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE LeadingCompanyOnAfterValidate@19048552();
    BEGIN
      //**4PS
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE CentralManagementOnAfterValida@19078251();
    BEGIN
      //**4PS
      CurrPage.UPDATE(TRUE);
    END;

    BEGIN
    {
      X016: Multiple central management companies for 1 operating company (db, 22-08-11)

      *** I0024 ***
      130828 Added field "Path to Bankgiro" General
      151118 Added field "Activate Bankgiro"
    }
    END.
  }
}

