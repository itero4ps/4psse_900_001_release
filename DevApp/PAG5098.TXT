OBJECT Page 5098 To-do Card
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=To-do Card;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table5080;
    PageType=Card;
    OnInit=BEGIN
             "Calc. Due Date FromEnable" := TRUE;
             "Recurring Date IntervalEnable" := TRUE;
             CreateTodoEnable := TRUE; //**4PS.n
             "Completed ByEnable" := TRUE;
             "Attendees Accepted No.Enable" := TRUE;
             "No. of AttendeesEnable" := TRUE;
             MakePhoneCallEnable := TRUE;
             AllDayEventEnable := TRUE;
             LocationEnable := TRUE;
             DurationEnable := TRUE;
             EndingTimeEnable := TRUE;
             StartTimeEnable := TRUE;
             "Completed ByEditable" := TRUE;
             "Calc. Due Date FromEditable" := TRUE;
             RecurringDateIntervalEditable := TRUE;
             "Contact No.Editable" := TRUE;
           END;

    OnOpenPage=BEGIN
                 CreateTodoEnable := NOT CreateTodoNotAllowed; //**4PS.n
                 IF GETFILTER("No.") = '' THEN
                   CurrPage.EDITABLE := FALSE;
               END;

    OnAfterGetRecord=VAR
                       RecRef@1100529900 : RecordRef;
                     BEGIN
                       "Contact Company NameHideValue" := FALSE;
                       "Contact NameHideValue" := FALSE;
                       SwitchCardControls;
                       IF "No." <> "Organizer To-do No." THEN
                         CurrPage.EDITABLE := FALSE
                       ELSE
                         CurrPage.EDITABLE := TRUE;
                       SetRecurringEditable;
                       EnableFields;
                       ContactNoOnFormat(FORMAT("Contact No."));
                       ContactNameOnFormat;
                       ContactCompanyNameOnFormat;

                       //**4PS.sn
                       RecRef.GETTABLE(Rec);
                       CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
                       CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(TRUE);
                       CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode('');
                       //**4PS.en
                     END;

    OnModifyRecord=BEGIN
                     IF ("Team Code" = '') AND ("Salesperson Code" = '') THEN
                       ERROR(
                         Text000,TABLECAPTION,FIELDCAPTION("Salesperson Code"),FIELDCAPTION("Team Code"));

                     IF (Type = Type::Meeting) AND (NOT "All Day Event") THEN BEGIN
                       IF "Start Time" = 0T THEN
                         ERROR(Text002,TABLECAPTION,Type,FIELDCAPTION("Start Time"));
                       IF Duration = 0 THEN
                         ERROR(Text002,TABLECAPTION,Type,FIELDCAPTION(Duration));
                     END;
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 29      ;1   ;ActionGroup;
                      CaptionML=ENU=To-&do;
                      Image=Task }
      { 33      ;2   ;Action    ;
                      CaptionML=ENU=Co&mment;
                      RunObject=Page 5072;
                      RunPageLink=Table Name=CONST(To-do),
                                  No.=FIELD(Organizer To-do No.),
                                  Sub No.=CONST(0);
                      Image=ViewComments }
      { 34      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Interaction Log E&ntries;
                      RunObject=Page 11072053;
                      RunPageView=SORTING(To-do No.);
                      RunPageLink=To-do No.=FIELD(Organizer To-do No.);
                      Image=InteractionLog }
      { 69      ;2   ;Action    ;
                      CaptionML=ENU=Postponed &Interactions;
                      RunObject=Page 5082;
                      RunPageView=SORTING(To-do No.);
                      RunPageLink=To-do No.=FIELD(Organizer To-do No.);
                      Image=PostponedInteractions }
      { 70      ;2   ;Action    ;
                      CaptionML=ENU=A&ttendee Scheduling;
                      Image=ProfileCalender;
                      OnAction=BEGIN
                                 IF Type <> Type::Meeting THEN
                                   ERROR(Text003,FORMAT(Type));

                                 PAGE.RUNMODAL(PAGE::"Attendee Scheduling",Rec);
                               END;
                                }
      { 1210190001;2 ;Action    ;
                      CaptionML=ENU=&Documents;
                      Promoted=Yes;
                      Image=Documents;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Todo@1100528701 : Record 5080;
                                 RecRef@1210190001 : RecordRef;
                                 DocumentFilters@1210190000 : Codeunit 11012432;
                               BEGIN
                                 //**4PS
                                 IF Todo.GET("Organizer To-do No.") THEN BEGIN
                                   RecRef.GETTABLE(Todo);
                                   DocumentFilters.CreateTempFilterAndExecute1(RecRef, '', FALSE, TRUE);
                                 END;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 30      ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 35      ;2   ;Action    ;
                      CaptionML=ENU=Assign Activities;
                      Image=Allocate;
                      OnAction=VAR
                                 TempToDo@1001 : TEMPORARY Record 5080;
                                 Todo@1100528000 : Record 5080;
                               BEGIN
                                 //**4PS.sn
                                 Todo.COPY(Rec);
                                 IF ContactNoWizard <> '' THEN
                                   Todo.SETRANGE("Contact No.", ContactNoWizard);
                                 IF ContactCompanyNoWizard <> '' THEN
                                   Todo.SETRANGE("Contact Company No.", ContactCompanyNoWizard);
                                 TempToDo.AssignActivityFromToDo(Todo);
                                 //**4PS.en
                                 //TempToDo.AssignActivityFromToDo(Rec) //**4PS.o
                               END;
                                }
      { 1100528707;2 ;Action    ;
                      CaptionML=ENU=Create &Interaction;
                      Image=CreateInteraction;
                      OnAction=BEGIN
                                 //**4PS
                                 CreateInteraction;
                               END;
                                }
      { 36      ;2   ;Action    ;
                      CaptionML=ENU=Make &Phone Call;
                      Image=Calls;
                      OnAction=VAR
                                 SegmentLine@1001 : TEMPORARY Record 11072040;
                                 Contact@1100528701 : Record 5050;
                                 SalespersonPurchaser@1100528702 : Record 13;
                                 Campaign@1100528703 : Record 11072034;
                               BEGIN
                                 //**4PS.so
                                 //IF "Contact No." = '' THEN BEGIN
                                 //  IF (Type = Type::Meeting) AND ("Team Code" = '') THEN
                                 //    ERROR(Text005);
                                 //  ERROR(Text006);
                                 //END;
                                 //SegmentLine."To-do No." := "No.";
                                 //SegmentLine."Contact No." := "Contact No.";
                                 //SegmentLine."Contact Company No." := "Contact Company No.";
                                 //SegmentLine."Campaign No." := "Campaign No.";
                                 //SegmentLine.CreateCall;
                                 //**4PS.eo
                                 //**4PS.sn
                                 // See also SegLine.CreateInteractionFromToDo
                                 SegmentLine."To-do No." := "Organizer To-do No.";
                                 IF Contact.GET("Contact No.") THEN
                                   SegmentLine.VALIDATE("Contact No.", Contact."No.")
                                 ELSE BEGIN
                                   IF (Type = Type::Meeting) AND ("Team Code" = '') THEN
                                     ERROR(Text005);
                                   ERROR(Text006);
                                 END;
                                 IF SalespersonPurchaser.GET("Salesperson Code") THEN
                                   SegmentLine."Salesperson Code" := SalespersonPurchaser.Code;
                                 IF Campaign.GET("Campaign No.") THEN
                                   "Campaign No." := Campaign."No.";
                                 SegmentLine.CreateCall;
                                 //**4PS.en
                               END;
                                }
      { 1100528708;2 ;Action    ;
                      CaptionML=ENU=&Call Centre Form;
                      Image=Calls;
                      OnAction=BEGIN
                                 //**4PS
                                 CreateCallInCallCenterPage;
                               END;
                                }
      { 1100528700;2 ;Action    ;
                      CaptionML=ENU=Copy to &Appointment in Outlook;
                      Image=ExportContact;
                      OnAction=VAR
                                 MSOutlookInterface@1100528700 : Codeunit 11012751;
                               BEGIN
                                 //**4PS
                                 MSOutlookInterface.ScheduleAppointment(Rec);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100528701;2 ;Action    ;
                      CaptionML=ENU=Copy to &Task in Outlook;
                      Promoted=Yes;
                      Image=ExportToDo;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MSOutlookInterface@1100528700 : Codeunit 11012751;
                               BEGIN
                                 //**4PS
                                 MSOutlookInterface.ScheduleTask(Rec);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 31      ;1   ;Action    ;
                      Name=CreateTodo;
                      CaptionML=ENU=&Create To-do;
                      Promoted=Yes;
                      Enabled=CreateTodoEnable;
                      PromotedIsBig=Yes;
                      Image=NewToDo;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TempToDo@1001 : TEMPORARY Record 5080;
                                 Todo@1100528700 : Record 5080;
                               BEGIN
                                 //**4PS.sn
                                 Todo.COPY(Rec);
                                 IF ContactNoWizard <> '' THEN
                                   Todo.SETRANGE("Contact No.", ContactNoWizard);
                                 IF ContactCompanyNoWizard <> '' THEN
                                   Todo.SETRANGE("Contact Company No.", ContactCompanyNoWizard);
                                 TempToDo.CreateToDoFromToDo(Todo);
                                 //**4PS.en
                                 //TempToDo.CreateToDoFromToDo(Rec); //**4PS.o
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=ENU=General }

    { 2   ;2   ;Field     ;
                SourceExpr="No.";
                Importance=Promoted }

    { 20  ;2   ;Field     ;
                SourceExpr=Description;
                Importance=Promoted }

    { 67  ;2   ;Field     ;
                SourceExpr=Location;
                Enabled=LocationEnable }

    { 6   ;2   ;Field     ;
                SourceExpr="Salesperson Code";
                OnValidate=BEGIN
                             SalespersonCodeOnAfterValidate;
                           END;
                            }

    { 1100525001;2;Field  ;
                DrillDown=No;
                SourceExpr="Name Sales Person";
                Importance=Additional }

    { 71  ;2   ;Field     ;
                SourceExpr="No. of Attendees";
                Importance=Additional;
                Enabled="No. of AttendeesEnable";
                OnDrillDown=BEGIN
                              MODIFY;
                              COMMIT;
                              PAGE.RUNMODAL(PAGE::"Attendee Scheduling",Rec);
                              GET("No.");
                              CurrPage.UPDATE;
                            END;
                             }

    { 73  ;2   ;Field     ;
                SourceExpr="Attendees Accepted No.";
                Importance=Additional;
                Enabled="Attendees Accepted No.Enable";
                OnDrillDown=BEGIN
                              MODIFY;
                              COMMIT;
                              PAGE.RUNMODAL(PAGE::"Attendee Scheduling",Rec);
                              GET("No.");
                              CurrPage.UPDATE;
                            END;
                             }

    { 10  ;2   ;Field     ;
                SourceExpr="Contact No.";
                Importance=Promoted;
                Editable="Contact No.Editable";
                OnValidate=BEGIN
                             ContactNoOnAfterValidate;
                           END;

                OnLookup=VAR
                           Todo@1005 : Record 5080;
                           AttendeesScheduling@1004 : Page 5199;
                           Cont@1003 : Record 5050;
                         BEGIN
                           IF Type = Type::Meeting THEN BEGIN
                             Todo.SETRANGE("No.","No.");
                             AttendeesScheduling.SETTABLEVIEW(Todo);
                             AttendeesScheduling.RUNMODAL;
                           END ELSE BEGIN
                           //**4PS.sn
                             IF "Try-out No." <> '' THEN
                               PrepareTryoutContactLookup(Cont);
                             IF "Try-out Quote No." <> '' THEN
                               PrepareTryoutQuoteContLookup(Cont);
                           //**4PS.en

                             IF Cont.GET("Contact No.") THEN;
                             IF PAGE.RUNMODAL(0,Cont) = ACTION::LookupOK THEN BEGIN
                               VALIDATE("Contact No.",Cont."No.");
                               CurrPage.UPDATE;
                             END;
                           END;
                         END;
                          }

    { 47  ;2   ;Field     ;
                SourceExpr="Contact Name";
                Importance=Additional;
                Editable=FALSE;
                HideValue="Contact NameHideValue" }

    { 49  ;2   ;Field     ;
                SourceExpr="Contact Company Name";
                Importance=Additional;
                Editable=FALSE;
                HideValue="Contact Company NameHideValue" }

    { 4   ;2   ;Field     ;
                SourceExpr="Team Code";
                Importance=Additional;
                OnValidate=BEGIN
                             TeamCodeOnAfterValidate;
                           END;
                            }

    { 76  ;2   ;Field     ;
                SourceExpr="Completed By";
                Importance=Additional;
                Enabled="Completed ByEnable";
                Editable="Completed ByEditable";
                OnValidate=BEGIN
                             SwitchCardControls
                           END;
                            }

    { 1100528702;2;Field  ;
                SourceExpr=Responsibility }

    { 1100528704;2;Field  ;
                SourceExpr="Responsible Person";
                OnValidate=BEGIN
                             CALCFIELDS("Name Employee"); //**4PS.n
                           END;
                            }

    { 1100525004;2;Field  ;
                DrillDown=No;
                SourceExpr="Name Employee";
                Importance=Additional }

    { 1100528743;2;Field  ;
                SourceExpr=Rubric;
                Importance=Additional }

    { 1100528703;2;Field  ;
                SourceExpr="Standard To-do Code";
                Importance=Additional;
                OnValidate=BEGIN
                             CALCFIELDS("Standard To-do Description"); //**4PS.n
                           END;
                            }

    { 1100528705;2;Field  ;
                SourceExpr="Standard To-do Description";
                Importance=Additional }

    { 16  ;2   ;Field     ;
                SourceExpr=Status;
                Importance=Promoted }

    { 18  ;2   ;Field     ;
                SourceExpr=Priority }

    { 12  ;2   ;Field     ;
                SourceExpr=Type;
                Importance=Promoted;
                OnValidate=BEGIN
                             TypeOnAfterValidate;
                           END;
                            }

    { 64  ;2   ;Field     ;
                Name=AllDayEvent;
                CaptionML=ENU=All Day Event;
                SourceExpr="All Day Event";
                Importance=Additional;
                Enabled=AllDayEventEnable;
                OnValidate=BEGIN
                             AllDayEventOnAfterValidate;
                           END;
                            }

    { 14  ;2   ;Field     ;
                Name=Date;
                SourceExpr=Date }

    { 56  ;2   ;Field     ;
                Name=StartTime;
                SourceExpr="Start Time";
                Enabled=StartTimeEnable }

    { 58  ;2   ;Field     ;
                Name=Duration;
                BlankZero=Yes;
                SourceExpr=Duration;
                Enabled=DurationEnable }

    { 63  ;2   ;Field     ;
                Name=EndingDate;
                CaptionML=ENU=Ending Date;
                SourceExpr="Ending Date" }

    { 61  ;2   ;Field     ;
                Name=EndingTime;
                CaptionML=ENU=Ending Time;
                SourceExpr="Ending Time";
                Enabled=EndingTimeEnable }

    { 26  ;2   ;Field     ;
                SourceExpr=Canceled;
                OnValidate=BEGIN
                             SwitchCardControls
                           END;
                            }

    { 22  ;2   ;Field     ;
                SourceExpr=Closed;
                OnValidate=BEGIN
                             SwitchCardControls
                           END;
                            }

    { 24  ;2   ;Field     ;
                SourceExpr="Date Closed" }

    { 1905354401;1;Group  ;
                CaptionML=ENU=Related Activities }

    { 8   ;2   ;Field     ;
                SourceExpr="Campaign No.";
                OnValidate=BEGIN
                             CampaignNoOnAfterValidate;
                           END;
                            }

    { 51  ;2   ;Field     ;
                SourceExpr="Campaign Description";
                Importance=Promoted;
                Editable=FALSE }

    { 1904441601;1;Group  ;
                CaptionML=ENU=Recurring }

    { 39  ;2   ;Field     ;
                SourceExpr=Recurring;
                OnValidate=BEGIN
                             RecurringOnPush;
                           END;
                            }

    { 41  ;2   ;Field     ;
                SourceExpr="Recurring Date Interval";
                Importance=Promoted;
                Enabled="Recurring Date IntervalEnable";
                Editable=RecurringDateIntervalEditable }

    { 43  ;2   ;Field     ;
                SourceExpr="Calc. Due Date From";
                Enabled="Calc. Due Date FromEnable";
                Editable="Calc. Due Date FromEditable" }

    { 1905885001;1;Group  ;
                CaptionML=ENU=Date }

    { 1100525003;2;Field  ;
                SourceExpr="Modified by" }

    { 1100528709;2;Field  ;
                SourceExpr="Last Date Modified" }

    { 1100528711;2;Field  ;
                SourceExpr="Last Time Modified" }

    { 1100528713;2;Field  ;
                SourceExpr="Planned by";
                Importance=Promoted }

    { 1100528717;2;Field  ;
                SourceExpr="Planned on" }

    { 1100528715;2;Field  ;
                SourceExpr="Planned in Outlook" }

    { 1902156701;1;Group  ;
                CaptionML=ENU=Links }

    { 1100528719;2;Field  ;
                SourceExpr="Try-out No." }

    { 1100528721;2;Field  ;
                SourceExpr="Try-out Quote No." }

    { 1100528741;2;Field  ;
                SourceExpr="Estimate No." }

    { 1100528723;2;Field  ;
                SourceExpr="Project No." }

    { 1100528735;2;Field  ;
                SourceExpr="Parcel No." }

    { 1100525002;2;Field  ;
                SourceExpr="Building Code" }

    { 1100528729;2;Field  ;
                SourceExpr="Service Location No." }

    { 1100528739;2;Field  ;
                SourceExpr="Service Contract No." }

    { 1100528725;2;Field  ;
                SourceExpr="Service Call No." }

    { 1100528727;2;Field  ;
                SourceExpr="Service Order No." }

    { 1100528733;2;Field  ;
                SourceExpr="Customer No.";
                Importance=Promoted;
                Editable=FALSE }

    { 1100528737;2;Field  ;
                SourceExpr="Cust. Ledger Entry No.";
                Editable=FALSE }

    { 1100528731;2;Field  ;
                SourceExpr="Action No.";
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1100529900;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                PartType=Page }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The %1 will always have either the %2 or %3 assigned.';
      Text002@1002 : TextConst 'ENU=The %1 of the %2 type must always have the %3 assigned.';
      Text003@1005 : TextConst 'ENU=You cannot select attendees for a to-do of the ''%1'' type.';
      Text005@1007 : TextConst 'ENU=The Make Phone Call function for this to-do is available only in the Attendee Scheduling window.';
      Text006@1008 : TextConst 'ENU=You must assign a contact to this to-do before you can use the Make Phone Call function.';
      Text007@1009 : TextConst 'ENU=(Multiple)';
      CreateTodoNotAllowed@1100528700 : Boolean;
      Text11012000@1100528701 : TextConst 'ENU=You must select a to-do with a contact assigned to it before you can use the Create Interaction function.';
      "Contact NameHideValue"@19061599 : Boolean INDATASET;
      "Contact Company NameHideValue"@19040407 : Boolean INDATASET;
      "Contact No.Editable"@19030566 : Boolean INDATASET;
      RecurringDateIntervalEditable@19051941 : Boolean INDATASET;
      "Calc. Due Date FromEditable"@19052355 : Boolean INDATASET;
      "Completed ByEditable"@19071171 : Boolean INDATASET;
      StartTimeEnable@19008764 : Boolean INDATASET;
      EndingTimeEnable@19050392 : Boolean INDATASET;
      DurationEnable@19035217 : Boolean INDATASET;
      LocationEnable@19013618 : Boolean INDATASET;
      AllDayEventEnable@19049519 : Boolean INDATASET;
      MakePhoneCallEnable@19032886 : Boolean INDATASET;
      "No. of AttendeesEnable"@19000329 : Boolean INDATASET;
      "Attendees Accepted No.Enable"@19007606 : Boolean INDATASET;
      "Completed ByEnable"@19024761 : Boolean INDATASET;
      CreateTodoEnable@19076373 : Boolean INDATASET;
      "Recurring Date IntervalEnable"@19019953 : Boolean INDATASET;
      "Calc. Due Date FromEnable"@19036769 : Boolean INDATASET;
      ContactNoWizard@1100528702 : Code[10];
      ContactCompanyNoWizard@1100528703 : Code[10];

    PROCEDURE SetRecurringEditable@1();
    BEGIN
      RecurringDateIntervalEditable := Recurring;
      "Calc. Due Date FromEditable" := Recurring;
    END;

    LOCAL PROCEDURE EnableFields@2();
    BEGIN
      "Recurring Date IntervalEnable" := Recurring;
      "Calc. Due Date FromEnable" := Recurring;

      IF NOT Recurring THEN BEGIN
        EVALUATE("Recurring Date Interval",'');
        CLEAR("Calc. Due Date From");
      END;

      IF Type = Type::Meeting THEN BEGIN
        StartTimeEnable := NOT "All Day Event";
        EndingTimeEnable := NOT "All Day Event";
        DurationEnable := NOT "All Day Event";
        LocationEnable := TRUE;
        AllDayEventEnable := TRUE;
      END ELSE BEGIN
        StartTimeEnable := FALSE;
        EndingTimeEnable := FALSE;
        LocationEnable := FALSE;
        DurationEnable := FALSE;
        AllDayEventEnable := FALSE;
      END;

      GetEndDateTime;
    END;

    LOCAL PROCEDURE SwitchCardControls@3();
    BEGIN
      IF Type = Type::Meeting THEN BEGIN
        "Contact No.Editable" := FALSE;
        MakePhoneCallEnable := FALSE;

        "No. of AttendeesEnable" := TRUE;
        "Attendees Accepted No.Enable" := TRUE;
      END ELSE BEGIN
        "Contact No.Editable" := TRUE;
        MakePhoneCallEnable := TRUE;

        "No. of AttendeesEnable" := FALSE;
        "Attendees Accepted No.Enable" := FALSE;
      END;
      IF "Team Code" = '' THEN
        "Completed ByEnable" := FALSE
      ELSE BEGIN
        "Completed ByEnable" := TRUE;
        "Completed ByEditable" := NOT Closed;
      END
    END;

    PROCEDURE SetCreateTodoAllowed@1100528700(NewValue@1100528700 : Boolean);
    BEGIN
      //**4PS
      CreateTodoNotAllowed := NOT NewValue;
    END;

    PROCEDURE SetContactNoWizard@1100528701(No@1100528700 : Code[10]);
    BEGIN
      //**4PS
      ContactNoWizard := No;
    END;

    PROCEDURE SetContactCompanyNoWizard@1100528703(No@1100528700 : Code[10]);
    BEGIN
      //**4PS
      ContactCompanyNoWizard := No;
    END;

    PROCEDURE CreateCallInCallCenterPage@1100525000();
    VAR
      SegLine@1100528702 : Record 11072040;
      Contact@1100528700 : Record 5050;
      SalespersonPurchaser@1100528701 : Record 13;
      Campaign@1100528703 : Record 11072034;
    BEGIN
      //**4PS
      SegLine."To-do No." := "Organizer To-do No.";
      IF Contact.GET("Contact No.") THEN
        SegLine.VALIDATE("Contact No.", Contact."No.")
      ELSE BEGIN
        IF (Type = Type::Meeting) AND ("Team Code" = '') THEN
          ERROR(Text005);
        ERROR(Text006);
      END;
      IF SalespersonPurchaser.GET("Salesperson Code") THEN
        SegLine."Salesperson Code" := SalespersonPurchaser.Code;
      IF Campaign.GET("Campaign No.") THEN
        "Campaign No." := Campaign."No.";
      SegLine."Line No." := 777;
      SegLine.CreateCallUsingCallCenterPage;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE TeamCodeOnAfterValidate@19070305();
    BEGIN
      SwitchCardControls;
      CALCFIELDS(
        "No. of Attendees",
        "Attendees Accepted No.",
        "Contact Name",
        "Contact Company Name",
        "Campaign Description",
        "Opportunity Description")
    END;

    LOCAL PROCEDURE ContactNoOnAfterValidate@19009577();
    BEGIN
      CALCFIELDS("Contact Name","Contact Company Name");
    END;

    LOCAL PROCEDURE TypeOnAfterValidate@19069045();
    BEGIN
      EnableFields;
    END;

    LOCAL PROCEDURE AllDayEventOnAfterValidate@19020274();
    BEGIN
      EnableFields;
    END;

    LOCAL PROCEDURE SalespersonCodeOnAfterValidate@19011896();
    BEGIN
      SwitchCardControls;
      CALCFIELDS(
        "Name Sales Person", //**4PS.n
        "No. of Attendees",
        "Attendees Accepted No.",
        "Contact Name",
        "Contact Company Name",
        "Campaign Description",
        "Opportunity Description");
    END;

    LOCAL PROCEDURE CampaignNoOnAfterValidate@19036822();
    BEGIN
      CALCFIELDS("Campaign Description");
    END;

    LOCAL PROCEDURE OpportunityNoOnAfterValidate@19076180();
    BEGIN
      CALCFIELDS("Opportunity Description");
    END;

    LOCAL PROCEDURE RecurringOnPush@19040619();
    BEGIN
      SetRecurringEditable;
    END;

    LOCAL PROCEDURE ContactNoOnFormat@19025756(Text@19019593 : Text[1024]);
    BEGIN
      IF Type = Type::Meeting THEN
        Text := Text007;
    END;

    LOCAL PROCEDURE ContactNameOnFormat@19032823();
    BEGIN
      IF Type = Type::Meeting THEN
        "Contact NameHideValue" := TRUE;
    END;

    LOCAL PROCEDURE ContactCompanyNameOnFormat@19053256();
    BEGIN
      IF Type = Type::Meeting THEN
        "Contact Company NameHideValue" := TRUE;
    END;

    BEGIN
    END.
  }
}

