OBJECT Page 510 Blanket Purchase Order Subform
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00.00.45480,4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    Description=4PS: Raam  -> Afroep;
    MultipleNewLines=No;
    LinksAllowed=No;
    SourceTable=Table39;
    DelayedInsert=Yes;
    SourceTableView=WHERE(Document Type=FILTER(Blanket Order));
    PageType=ListPart;
    AutoSplitKey=Yes;
    RefreshOnActivate=Yes;
    OnInit=BEGIN
             //**4PS.sn
             "Vendor (Trade Item)Visible" := TRUE;
             ManufacturerVisible := TRUE;
             "Trade ItemVisible" := TRUE;
             "Basic ItemVisible" := TRUE;
             NoIsEditable := TRUE;
             CostTypeEditable := TRUE;
             ItemEditable := TRUE;
             TypeEditable := TRUE;
             //**4PS.en
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 //**4PS.sn
                 IF NOT ItemSetup.READPERMISSION THEN BEGIN
                   "Basic ItemVisible" := (FALSE);
                   "Trade ItemVisible" := (FALSE);
                   ManufacturerVisible := (FALSE);
                   "Vendor (Trade Item)Visible" := (FALSE);
                 END;
                 //**4PS.en
               END;

    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                       CLEAR(DocumentTotals);

                       //**4PS.sn
                       IF gFromReference THEN BEGIN
                         gFromReference := FALSE;
                         SETRANGE("Line No.");
                       END;
                       //**4PS.en
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                  InitType;
                  CLEAR(ShortcutDimCode);

                  //**4PS.sn
                  InitRecord;
                  GetVendorPreferenceAccountNo();
                  ShowShortcutDimCode(ShortcutDimCode);
                  //**4PS.en
                END;

    OnAfterGetCurrRecord=BEGIN
                           IF PurchHeader.GET("Document Type","Document No.") THEN;

                           //**4PS.so C023496
                           //DocumentTotals.PurchaseUpdateTotalsControls(Rec,TotalPurchaseHeader,TotalPurchaseLine,RefreshMessageEnabled,
                           //  TotalAmountStyle,RefreshMessageText,InvDiscAmountEditable,VATAmount);
                           //**4PS.eo

                           //**4PS.sn
                           PurchaseLineExtension.GetPurchLineExtension("Document Type", "Document No.", "Line No.");
                           SetEditable;  //db, 10-01-14
                           //**4PS.en
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 1901312904;2 ;Action    ;
                      AccessByPermission=TableData 90=R;
                      CaptionML=ENU=E&xplode BOM;
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeBOM;
                               END;
                                }
      { 1901313304;2 ;Action    ;
                      AccessByPermission=TableData 279=R;
                      CaptionML=ENU=Insert &Ext. Texts;
                      Image=Text;
                      OnAction=BEGIN
                                 InsertExtendedText(TRUE);
                               END;
                                }
      { 1100528800;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy Budget Lines;
                      Image=Copy;
                      OnAction=VAR
                                 PurchaseHeader@1210190000 : Record 38;
                               BEGIN
                                 //**4PS
                                 IF ("Document No." <> '') THEN BEGIN
                                   PurchaseHeader.GET("Document Type", "Document No.");
                                   SelectBudgetLines(PurchaseHeader);
                                 END;
                               END;
                                }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1901991404;2 ;ActionGroup;
                      CaptionML=ENU=Item Availability by;
                      Image=ItemAvailability }
      { 5       ;3   ;Action    ;
                      CaptionML=ENU=Event;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByEvent)
                               END;
                                }
      { 1900205704;3 ;Action    ;
                      CaptionML=ENU=Period;
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByPeriod)
                               END;
                                }
      { 1901652104;3 ;Action    ;
                      CaptionML=ENU=Variant;
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByVariant)
                               END;
                                }
      { 1901313404;3 ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=ENU=Location;
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByLocation)
                               END;
                                }
      { 3       ;3   ;Action    ;
                      CaptionML=ENU=BOM Level;
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByBOM)
                               END;
                                }
      { 1903868004;2 ;ActionGroup;
                      CaptionML=ENU=Unposted Lines;
                      Image=Order }
      { 1903100004;3 ;Action    ;
                      CaptionML=ENU=Orders;
                      Image=Document;
                      OnAction=BEGIN
                                 ShowOrders;
                               END;
                                }
      { 1900546404;3 ;Action    ;
                      CaptionML=ENU=Invoices;
                      Image=Invoice;
                      OnAction=BEGIN
                                 ShowInvoices;
                               END;
                                }
      { 1903098504;3 ;Action    ;
                      AccessByPermission=TableData 6650=R;
                      CaptionML=ENU=Return Orders;
                      Image=ReturnOrder;
                      OnAction=BEGIN
                                 ShowReturnOrders;
                               END;
                                }
      { 1901992804;3 ;Action    ;
                      CaptionML=ENU=Credit Memos;
                      Image=CreditMemo;
                      OnAction=BEGIN
                                 ShowCreditMemos;
                               END;
                                }
      { 1901314404;2 ;ActionGroup;
                      CaptionML=ENU=Posted Lines;
                      Image=Post }
      { 1900296804;3 ;Action    ;
                      CaptionML=ENU=Receipts;
                      Image=PostedReceipts;
                      OnAction=BEGIN
                                 ShowPostedReceipts;
                               END;
                                }
      { 1904522204;3 ;Action    ;
                      CaptionML=ENU=Invoices;
                      Image=Invoice;
                      OnAction=BEGIN
                                 ShowPostedInvoices;
                               END;
                                }
      { 1903926304;3 ;Action    ;
                      CaptionML=ENU=Return Receipts;
                      Image=ReturnReceipt;
                      OnAction=BEGIN
                                 ShowPostedReturnReceipts;
                               END;
                                }
      { 1902056104;3 ;Action    ;
                      CaptionML=ENU=Credit Memos;
                      Image=CreditMemo;
                      OnAction=BEGIN
                                 ShowPostedCreditMemos;
                               END;
                                }
      { 1906874004;2 ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1900978604;2 ;Action    ;
                      CaptionML=ENU=Co&mments;
                      Image=ViewComments;
                      OnAction=BEGIN
                                 ShowLineComments;
                               END;
                                }
      { 1906995904;2 ;Action    ;
                      CaptionML=ENU=Purchase Route References;
                      OnAction=BEGIN
                                 //**4PS
                                 //This functionality was copied from page #509. Unsupported part was commented. Please check it.
                                 {CurrPage.PurchLines.PAGE.}
                                 ShowPurchRouteRef;
                               END;
                                }
      { 1907335004;2 ;Action    ;
                      CaptionML=ENU=Text Block;
                      OnAction=BEGIN
                                 //**4PS
                                 //This functionality was copied from page #509. Unsupported part was commented. Please check it.
                                 {CurrPage.PurchLines.PAGE.}
                                 EditText;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 1101200000;2;Field  ;
                SourceExpr="Job No." }

    { 1210190020;2;Field  ;
                SourceExpr="Plot No.";
                Visible=FALSE }

    { 1101200002;2;Field  ;
                SourceExpr="Extension Contract" }

    { 1100485002;2;Field  ;
                SourceExpr="Budget Adjustment";
                Visible=FALSE }

    { 1101200004;2;Field  ;
                SourceExpr=Element }

    { 1210190002;2;Field  ;
                SourceExpr="Service Order No." }

    { 1210190010;2;Field  ;
                SourceExpr="Service Contract No.";
                Visible=FALSE }

    { 1210190004;2;Field  ;
                SourceExpr="Service Location No.";
                Visible=FALSE }

    { 1101200006;2;Field  ;
                SourceExpr="Cost Type";
                Editable=CostTypeEditable }

    { 1101200008;2;Field  ;
                SourceExpr="Item No.";
                Editable=ItemEditable;
                OnValidate=BEGIN
                             ItemNoOnAfterValidate;  //db, 26-10-12
                           END;

                OnLookup=BEGIN
                           //**4PS
                           IF HandleLookupItem(FIELDNO("Item No.")) THEN
                             CurrPage.UPDATE(TRUE)  //db, 09-03-07 (melding 8283)
                           ELSE
                             IF "Item No." <> xRec."Item No." THEN
                               InsertExtendedText(FALSE);
                         END;

                OnAssistEdit=BEGIN
                               //**4PS
                               IF AssistEditItem THEN BEGIN
                                 InsertExtendedText(FALSE);
                                 CurrPage.UPDATE(TRUE);
                               END;
                             END;
                              }

    { 1101200010;2;Field  ;
                SourceExpr=Manufacturer;
                Visible=ManufacturerVisible;
                Editable=ItemEditable }

    { 1101200012;2;Field  ;
                SourceExpr="Basic Item";
                Visible="Basic ItemVisible";
                Editable=ItemEditable;
                OnValidate=BEGIN
                             BasicItemOnAfterValidate;  //db, 26-10-12
                           END;

                OnLookup=BEGIN
                           //**4PS
                           IF HandleLookupItem(FIELDNO("Basic Item")) THEN
                             CurrPage.UPDATE(TRUE)  //db, 09-03-07 (melding 8283)
                           ELSE
                             IF "Basic Item" <> xRec."Basic Item" THEN
                               InsertExtendedText(FALSE);
                         END;
                          }

    { 1101200014;2;Field  ;
                SourceExpr="Vendor (Trade Item)";
                Visible="Vendor (Trade Item)Visible";
                Editable=ItemEditable }

    { 1101200016;2;Field  ;
                SourceExpr="Trade Item";
                Visible="Trade ItemVisible";
                Editable=ItemEditable;
                OnValidate=BEGIN
                             TradeItemOnAfterValidate;  //db, 26-10-12
                           END;

                OnLookup=BEGIN
                           //**4PS
                           IF HandleLookupItem(FIELDNO("Trade Item")) THEN
                             CurrPage.UPDATE(TRUE)  //db, 09-03-07 (melding 8283)
                           ELSE
                             IF "Trade Item" <> xRec."Trade Item" THEN
                               InsertExtendedText(FALSE);
                         END;
                          }

    { 1100485008;2;Field  ;
                SourceExpr="Plant Type";
                Visible=FALSE }

    { 1100485014;2;Field  ;
                SourceExpr="Vendor Plant No.";
                Visible=FALSE }

    { 1100485010;2;Field  ;
                SourceExpr="Plant No.";
                Visible=FALSE }

    { 1100485012;2;Field  ;
                SourceExpr="Cost Component Plant";
                Visible=FALSE }

    { 78  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                           END;
                            }

    { 76  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                LookupPageID=Cost Object List }

    { 1100485004;2;Field  ;
                SourceExpr="Cost Component" }

    { 2   ;2   ;Field     ;
                SourceExpr=Type;
                Editable=TypeEditable;
                OnValidate=BEGIN
                             NoOnAfterValidate;
                             GetVendorPreferenceAccountNo; //**4PS.n
                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 4   ;2   ;Field     ;
                SourceExpr="No.";
                Editable=NoIsEditable;
                OnValidate=BEGIN
                             ShowShortcutDimCode(ShortcutDimCode);
                             NoOnAfterValidate;

                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           //**4PS
                           SetEditable;
                           OnLookupFieldNo(NoIsEditable);
                           InsertExtendedText(FALSE);
                         END;
                          }

    { 22  ;2   ;Field     ;
                SourceExpr="Cross-Reference No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             CrossReferenceNoOnAfterValidat;
                           END;

                OnLookup=BEGIN
                           CrossReferenceNoLookUp;
                           InsertExtendedText(FALSE);
                         END;
                          }

    { 36  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 6   ;2   ;Field     ;
                SourceExpr=Description }

    { 1100485000;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 1210190012;2;Field  ;
                SourceExpr="Text Block";
                Visible=FALSE }

    { 1210190018;2;Field  ;
                CaptionML=ENU=Comments;
                SourceExpr=LineCommentPresent();
                Visible=FALSE }

    { 74  ;2   ;Field     ;
                SourceExpr="Location Code" }

    { 8   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate; //**4PS.n
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 10  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code";
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 40  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Direct Unit Cost";
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 28  ;2   ;Field     ;
                SourceExpr="Indirect Cost %";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 30  ;2   ;Field     ;
                SourceExpr="Unit Price (LCY)";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 1100525000;2;Field  ;
                SourceExpr="Discount % (Item)";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 68  ;2   ;Field     ;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 32  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Amount";
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 16  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Discount %";
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 60  ;2   ;Field     ;
                SourceExpr="Line Discount Amount";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 58  ;2   ;Field     ;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE }

    { 1210190000;2;Field  ;
                SourceExpr="Allow Exceeding Order Quantity";
                Visible=FALSE;
                OnValidate=BEGIN
                             AllowExceedingOrderQuantityOnA;
                           END;
                            }

    { 18  ;2   ;Field     ;
                CaptionML=ENU=Quantity To Release;
                BlankZero=Yes;
                SourceExpr="Qty. to Receive";
                OnValidate=BEGIN
                             "Qty. to Receive" := CheckBlanketOrder(TRUE);  //**4PS.n
                           END;
                            }

    { 1210190014;2;Field  ;
                CaptionML=ENU=Quantity Released;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr="Quantity Released";
                Editable=FALSE }

    { 1100525002;2;Field  ;
                CaptionML=ENU=Quantity to be Delivered;
                DecimalPlaces=0:5;
                SourceExpr=GetQuanToBeDelivered;
                Editable=FALSE }

    { 20  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Quantity Received";
                Visible=FALSE }

    { 24  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Quantity Invoiced";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                SourceExpr="Expected Receipt Date";
                Visible=FALSE }

    { 300 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(3),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 302 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(4),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 304 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(5),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 306 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(6),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 308 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(7),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 310 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(8),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 1100485006;2;Field  ;
                SourceExpr="Reserved Quantity" }

    { 1210190016;2;Field  ;
                SourceExpr="Purchase Route Reference";
                Visible=FALSE }

    { 37  ;1   ;Group     ;
                Visible=FALSE;
                GroupType=Group }

    { 33  ;2   ;Group     ;
                GroupType=Group }

    { 31  ;3   ;Field     ;
                Name=Invoice Discount Amount;
                CaptionML=ENU=Invoice Discount Amount;
                SourceExpr=TotalPurchaseLine."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr=TotalPurchaseHeader."Currency Code";
                Editable=InvDiscAmountEditable;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled;
                OnValidate=VAR
                             PurchaseHeader@1000 : Record 38;
                           BEGIN
                             PurchaseHeader.GET("Document Type","Document No.");
                             PurchCalcDiscByType.ApplyInvDiscBasedOnAmt(TotalPurchaseLine."Inv. Discount Amount",PurchaseHeader);
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 29  ;3   ;Field     ;
                Name=Invoice Disc. Pct.;
                CaptionML=ENU=Invoice Discount %;
                DecimalPlaces=0:2;
                SourceExpr=PurchCalcDiscByType.GetVendInvoiceDiscountPct(Rec);
                Visible=TRUE;
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 15  ;2   ;Group     ;
                GroupType=Group }

    { 13  ;3   ;Field     ;
                Name=Total Amount Excl. VAT;
                DrillDown=No;
                CaptionML=ENU=Total Amount Excl. VAT;
                SourceExpr=TotalPurchaseLine.Amount;
                AutoFormatType=1;
                AutoFormatExpr=TotalPurchaseHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalExclVATCaption(PurchHeader."Currency Code");
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 11  ;3   ;Field     ;
                Name=Total VAT Amount;
                CaptionML=ENU=Total VAT;
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr=TotalPurchaseHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalVATCaption(PurchHeader."Currency Code");
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 9   ;3   ;Field     ;
                Name=Total Amount Incl. VAT;
                CaptionML=ENU=Total Amount Incl. VAT;
                SourceExpr=TotalPurchaseLine."Amount Including VAT";
                AutoFormatType=1;
                AutoFormatExpr=TotalPurchaseHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalInclVATCaption(PurchHeader."Currency Code");
                Editable=FALSE;
                StyleExpr=TotalAmountStyle }

    { 7   ;3   ;Field     ;
                Name=RefreshTotals;
                DrillDown=Yes;
                SourceExpr=RefreshMessageText;
                Enabled=RefreshMessageEnabled;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DocumentTotals.PurchaseRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalPurchaseLine);
                              DocumentTotals.PurchaseUpdateTotalsControls(Rec,TotalPurchaseHeader,TotalPurchaseLine,RefreshMessageEnabled,
                                TotalAmountStyle,RefreshMessageText,InvDiscAmountEditable,VATAmount);
                            END;

                ShowCaption=No }

  }
  CODE
  {
    VAR
      TotalPurchaseHeader@1013 : Record 38;
      TotalPurchaseLine@1012 : Record 39;
      PurchHeader@1016 : Record 38;
      PurchLine@1001 : Record 39;
      CurrentPurchLine@1000 : Record 39;
      TransferExtendedText@1002 : Codeunit 378;
      ItemAvailFormsMgt@1004 : Codeunit 353;
      PurchCalcDiscByType@1015 : Codeunit 66;
      DocumentTotals@1014 : Codeunit 57;
      ShortcutDimCode@1003 : ARRAY [8] OF Code[20];
      VATAmount@1011 : Decimal;
      InvDiscAmountEditable@1010 : Boolean;
      TotalAmountStyle@1009 : Text;
      RefreshMessageEnabled@1008 : Boolean;
      RefreshMessageText@1007 : Text;
      ItemSetup@1100525000 : Record 11012300;
      RouteRefMgtCU@1210190003 : Codeunit 11012045;
      gFromReference@1210190002 : Boolean;
      Text11012001@1210190000 : TextConst 'ENU=Before editing text enter the line first';
      PurchaseLineExtension@1100525001 : Record 11020644;
      DPA_IsHardFilter@1100000999 : Boolean;
      "Basic ItemVisible"@19042756 : Boolean INDATASET;
      "Trade ItemVisible"@19042429 : Boolean INDATASET;
      ManufacturerVisible@19015155 : Boolean INDATASET;
      "Vendor (Trade Item)Visible"@19043796 : Boolean INDATASET;
      TypeEditable@1100409003 : Boolean INDATASET;
      NoIsEditable@1100409000 : Boolean INDATASET;
      CostTypeEditable@1100409002 : Boolean INDATASET;
      ItemEditable@1100409001 : Boolean INDATASET;

    PROCEDURE ApproveCalcInvDisc@7();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Purch.-Disc. (Yes/No)",Rec);
    END;

    LOCAL PROCEDURE CalcInvDisc@1();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Purch.-Calc.Discount",Rec);
    END;

    LOCAL PROCEDURE ExplodeBOM@3();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Purch.-Explode BOM",Rec);
    END;

    LOCAL PROCEDURE InsertExtendedText@6(Unconditionally@1000 : Boolean);
    BEGIN
      IF TransferExtendedText.PurchCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        TransferExtendedText.InsertPurchExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        UpdateForm(TRUE);
    END;

    PROCEDURE UpdateForm@12(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    LOCAL PROCEDURE ShowOrders@2();
    BEGIN
      CurrentPurchLine := Rec;
      PurchLine.RESET;
      PurchLine.SETCURRENTKEY("Document Type","Blanket Order No.","Blanket Order Line No.");
      PurchLine.SETRANGE("Document Type",PurchLine."Document Type"::Order);
      PurchLine.SETRANGE("Blanket Order No.",CurrentPurchLine."Document No.");
      PurchLine.SETRANGE("Blanket Order Line No.",CurrentPurchLine."Line No.");
      PAGE.RUNMODAL(PAGE::"Purchase Lines",PurchLine);
    END;

    LOCAL PROCEDURE ShowInvoices@4();
    BEGIN
      CurrentPurchLine := Rec;
      PurchLine.RESET;
      PurchLine.SETCURRENTKEY("Document Type","Blanket Order No.","Blanket Order Line No.");
      PurchLine.SETRANGE("Document Type",PurchLine."Document Type"::Invoice);
      PurchLine.SETRANGE("Blanket Order No.",CurrentPurchLine."Document No.");
      PurchLine.SETRANGE("Blanket Order Line No.",CurrentPurchLine."Line No.");
      PAGE.RUNMODAL(PAGE::"Purchase Lines",PurchLine);
    END;

    LOCAL PROCEDURE ShowReturnOrders@9();
    BEGIN
      CurrentPurchLine := Rec;
      PurchLine.RESET;
      PurchLine.SETCURRENTKEY("Document Type","Blanket Order No.","Blanket Order Line No.");
      PurchLine.SETRANGE("Document Type",PurchLine."Document Type"::"Return Order");
      PurchLine.SETRANGE("Blanket Order No.",CurrentPurchLine."Document No.");
      PurchLine.SETRANGE("Blanket Order Line No.",CurrentPurchLine."Line No.");
      PAGE.RUNMODAL(PAGE::"Purchase Lines",PurchLine);
    END;

    LOCAL PROCEDURE ShowCreditMemos@10();
    BEGIN
      CurrentPurchLine := Rec;
      PurchLine.RESET;
      PurchLine.SETCURRENTKEY("Document Type","Blanket Order No.","Blanket Order Line No.");
      PurchLine.SETRANGE("Document Type",PurchLine."Document Type"::"Credit Memo");
      PurchLine.SETRANGE("Blanket Order No.",CurrentPurchLine."Document No.");
      PurchLine.SETRANGE("Blanket Order Line No.",CurrentPurchLine."Line No.");
      PAGE.RUNMODAL(PAGE::"Purchase Lines",PurchLine);
    END;

    LOCAL PROCEDURE ShowPostedReceipts@17();
    VAR
      PurchRcptLine@1000 : Record 121;
    BEGIN
      CurrentPurchLine := Rec;
      PurchRcptLine.RESET;
      PurchRcptLine.SETCURRENTKEY("Blanket Order No.","Blanket Order Line No.");
      PurchRcptLine.SETRANGE("Blanket Order No.",CurrentPurchLine."Document No.");
      PurchRcptLine.SETRANGE("Blanket Order Line No.",CurrentPurchLine."Line No.");
      PAGE.RUNMODAL(PAGE::"Posted Purchase Receipt Lines",PurchRcptLine);
    END;

    LOCAL PROCEDURE ShowPostedInvoices@14();
    VAR
      PurchInvLine@1000 : Record 123;
    BEGIN
      CurrentPurchLine := Rec;
      PurchInvLine.RESET;
      PurchInvLine.SETCURRENTKEY("Blanket Order No.","Blanket Order Line No.");
      PurchInvLine.SETRANGE("Blanket Order No.",CurrentPurchLine."Document No.");
      PurchInvLine.SETRANGE("Blanket Order Line No.",CurrentPurchLine."Line No.");
      PAGE.RUNMODAL(PAGE::"Posted Purchase Invoice Lines",PurchInvLine);
    END;

    LOCAL PROCEDURE ShowPostedReturnReceipts@13();
    VAR
      ReturnShptLine@1000 : Record 6651;
    BEGIN
      CurrentPurchLine := Rec;
      ReturnShptLine.RESET;
      ReturnShptLine.SETCURRENTKEY("Blanket Order No.","Blanket Order Line No.");
      ReturnShptLine.SETRANGE("Blanket Order No.",CurrentPurchLine."Document No.");
      ReturnShptLine.SETRANGE("Blanket Order Line No.",CurrentPurchLine."Line No.");
      PAGE.RUNMODAL(PAGE::"Posted Return Shipment Lines",ReturnShptLine);
    END;

    LOCAL PROCEDURE ShowPostedCreditMemos@11();
    VAR
      PurchCrMemoLine@1000 : Record 125;
    BEGIN
      CurrentPurchLine := Rec;
      PurchCrMemoLine.RESET;
      PurchCrMemoLine.SETCURRENTKEY("Blanket Order No.","Blanket Order Line No.");
      PurchCrMemoLine.SETRANGE("Blanket Order No.",CurrentPurchLine."Document No.");
      PurchCrMemoLine.SETRANGE("Blanket Order Line No.",CurrentPurchLine."Line No.");
      PAGE.RUNMODAL(PAGE::"Posted Purchase Cr. Memo Lines",PurchCrMemoLine);
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE CrossReferenceNoOnAfterValidat@19048248();
    BEGIN
      InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE RedistributeTotalsOnAfterValidate@8();
    BEGIN
      CurrPage.SAVERECORD;

      PurchHeader.GET("Document Type","Document No.");
      IF DocumentTotals.PurchaseCheckNumberOfLinesLimit(PurchHeader) THEN
        DocumentTotals.PurchaseRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalPurchaseLine);
      CurrPage.UPDATE;
    END;

    PROCEDURE EditText@1210190001();
    VAR
      TextFrm@1210190002 : Page 11012120;
    BEGIN
      //**4PS
      IF "Line No." = 0 THEN
        ERROR(Text11012001);

      TextFrm.SetSelection(DATABASE::"Purchase Line","Document No.",
        '','','','','',"Line No.","Document Type");

      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    PROCEDURE ShowPurchRouteRef@1210190004();
    BEGIN
      //**4PS
      RouteRefMgtCU.ShowReferenceList("Purchase Route Reference");
    END;

    PROCEDURE InitSelectionFromReference@1210190008(IPurchLineNo@1210190000 : Integer);
    BEGIN
      //**4PS
      gFromReference := TRUE;
      SETRANGE("Line No.", IPurchLineNo);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE GetHeader@1000000005();
    BEGIN
      //**4PS
      TESTFIELD("Document No.");
      PurchHeader.GET("Document Type","Document No.");
    END;

    PROCEDURE UpdatePrices@1100485000();
    VAR
      lvPurchLineRec@1100485001 : Record 39;
      lvOldDirectUnitCost@1100485002 : Decimal;
      lvText11012001@1100485000 : TextConst 'ENU=Update prices selected Blanket Order Lines?';
    BEGIN
      //**4PS
      lvPurchLineRec.COPY(Rec);
      lvPurchLineRec.TESTFIELD("Document No.");
      CurrPage.SETSELECTIONFILTER(lvPurchLineRec);
      IF NOT CONFIRM(lvText11012001, TRUE) THEN
        ERROR('');

      IF lvPurchLineRec.FINDSET(TRUE,FALSE) THEN BEGIN
        REPEAT
          lvOldDirectUnitCost := lvPurchLineRec."Direct Unit Cost";
          lvPurchLineRec.UpdateBlanketContractLinePrice();
          IF lvPurchLineRec."Direct Unit Cost" <> lvOldDirectUnitCost THEN
            lvPurchLineRec.MODIFY(TRUE);
        UNTIL lvPurchLineRec.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE ItemNoOnAfterValidate@19061248();
    BEGIN
      //**4PS
      IF ("Cost Type" = "Cost Type"::Material) AND ("No." <> '') THEN
        InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE BasicItemOnAfterValidate@19054956();
    BEGIN
      //**4PS
      IF ("Cost Type" = "Cost Type"::Material) AND ("No." <> '') THEN
        InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE TradeItemOnAfterValidate@19075338();
    BEGIN
      //**4PS
      IF ("Cost Type" = "Cost Type"::Material) AND ("No." <> '') THEN
        InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      //**4PS
      EvaluateReleasedQuantity(Rec,0);
    END;

    LOCAL PROCEDURE AllowExceedingOrderQuantityOnA@19079066();
    BEGIN
      //**4PS
      IF (NOT "Allow Exceeding Order Quantity") AND ("Qty. to Receive" <> 0) THEN
       "Qty. to Receive" := CheckBlanketOrder(TRUE);
    END;

    PROCEDURE SetEditable@1100525003();
    VAR
      ServiceOrder@1210190000 : Record 11012823;
    BEGIN
      //**4PS
      //GetHeader; //db, 13-01-14: T005435

      NoIsEditable := ("Plant Type" = '') AND ("Job No." = '') AND ("Service Order No." = '');
      CostTypeEditable := (("Item No." + "Basic Item" + "Trade Item" = ''));
      ItemEditable := ("Cost Type" = "Cost Type"::Material) OR ("Cost Type" = "Cost Type"::" ");
      TypeEditable := ("Job No." = '') AND ("Service Order No." = '') AND ("Plant Type" = '');
    END;

    PROCEDURE SelectBudgetLines@1210190002(IPurchHeadRec@11012000 : Record 38);
    VAR
      lvBudgetRec@1210190011 : Record 11012001;
      lvBudgetListFrm@11012001 : Page 11012005;
    BEGIN
      //**4PS
      IF IPurchHeadRec."Job No." <> '' THEN
        lvBudgetRec.SETRANGE("Project No.", IPurchHeadRec."Job No.")
      ELSE
        IF "Job No." <> '' THEN
          lvBudgetRec.SETRANGE("Project No.", "Job No.");
      lvBudgetRec.SETFILTER("Cost Type", '%1..%2', lvBudgetRec."Cost Type"::Material, lvBudgetRec."Cost Type"::Sundry);  //db, 22-06-05
      lvBudgetRec.SETRANGE(Advised, FALSE);

      lvBudgetListFrm.InitSelectionCopyToBlanketOrder(Rec);
      lvBudgetListFrm.SETTABLEVIEW(lvBudgetRec);
      lvBudgetListFrm.RUNMODAL;
    END;

    PROCEDURE CopyBudgetLines@6501();
    BEGIN
      //**4PS
      CODEUNIT.RUN(CODEUNIT::"Copy Budget Lines",Rec);
    END;

    BEGIN
    {
      4PS, 18-05-2015, C023496, Group totals set to invisible
    }
    END.
  }
}

