OBJECT Page 515 Item Avail. by Location Lines
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,4PS9.00;
  }
  PROPERTIES
  {
    Editable=Yes;
    CaptionML=ENU=Lines;
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table14;
    SourceTableView=WHERE(Use As In-Transit=CONST(No));
    PageType=ListPart;
    OnInit=BEGIN
             PeriodStart := 0D;
             PeriodEnd := 991231D;
           END;

    OnAfterGetRecord=BEGIN
                       CalcAvailQuantities(
                         GrossRequirement,PlannedOrderRcpt,ScheduledRcpt,
                         PlannedOrderReleases,ProjAvailableBalance,ExpectedInventory,QtyAvailable);
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 5   ;2   ;Field     ;
                SourceExpr=Code }

    { 7   ;2   ;Field     ;
                SourceExpr=Name }

    { 2   ;2   ;Field     ;
                CaptionML=ENU=Gross Requirement;
                DecimalPlaces=0:5;
                SourceExpr=GrossRequirement;
                OnDrillDown=BEGIN
                              ShowItemAvailLineList(0);
                            END;
                             }

    { 18  ;2   ;Field     ;
                CaptionML=ENU=Scheduled Receipt;
                DecimalPlaces=0:5;
                SourceExpr=ScheduledRcpt;
                OnDrillDown=BEGIN
                              ShowItemAvailLineList(2);
                            END;
                             }

    { 26  ;2   ;Field     ;
                CaptionML=ENU=Planned Receipt;
                DecimalPlaces=0:5;
                SourceExpr=PlannedOrderRcpt;
                OnDrillDown=BEGIN
                              ShowItemAvailLineList(1);
                            END;
                             }

    { 28  ;2   ;Field     ;
                CaptionML=ENU=Projected Available Balance;
                DecimalPlaces=0:5;
                SourceExpr=ProjAvailableBalance;
                OnDrillDown=BEGIN
                              ShowItemAvailLineList(4);
                            END;
                             }

    { 4   ;2   ;Field     ;
                DrillDown=Yes;
                CaptionML=ENU=Inventory;
                DecimalPlaces=0:5;
                SourceExpr=Item.Inventory;
                Visible=FALSE;
                OnDrillDown=BEGIN
                              SetItemFilter;
                              ItemAvailFormsMgt.ShowItemLedgerEntries(Item,FALSE);
                            END;
                             }

    { 10  ;2   ;Field     ;
                DrillDown=Yes;
                CaptionML=ENU=Qty. on Purch. Order;
                DecimalPlaces=0:5;
                SourceExpr=Item."Qty. on Purch. Order";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              //SetItemFilter;  //**4PS.o
                              SetItemFilter4PS(0);  //**4PS.n
                              ItemAvailFormsMgt.ShowProjServPurchLines(Item);  //this function disables filter on type while not using filter on project/service order
                            END;
                             }

    { 1100409000;2;Field  ;
                CaptionML=ENU=Qty. on Purch. Order (Inventory);
                SourceExpr=Item."Qty. on Purch. Order (Inv.)";
                OnDrillDown=BEGIN
                              //**4PS
                              SetItemFilter4PS(1);
                              ItemAvailFormsMgt.ShowPurchLines(Item);  //standard function sets filter on type=item
                            END;
                             }

    { 1100409001;2;Field  ;
                CaptionML=ENU=Qty. on Purch. Order (Project);
                SourceExpr=Item."Qty. on Purch. Order (Project)";
                OnDrillDown=BEGIN
                              //**4PS
                              SetItemFilter4PS(2);
                              ItemAvailFormsMgt.ShowProjServPurchLines(Item);  //this function sets filter on type=gl-account while using filter on project
                            END;
                             }

    { 1100409002;2;Field  ;
                CaptionML=ENU=Qty. on Purch. Order (Service);
                SourceExpr=Item."Qty. on Purch. Order (Service)";
                OnDrillDown=BEGIN
                              //**4PS
                              SetItemFilter4PS(3);
                              ItemAvailFormsMgt.ShowProjServPurchLines(Item);  //this function sets filter on type=gl-account while using filter on service order
                            END;
                             }

    { 12  ;2   ;Field     ;
                DrillDown=Yes;
                CaptionML=ENU=Qty. on Sales Order;
                DecimalPlaces=0:5;
                SourceExpr=Item."Qty. on Sales Order";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              SetItemFilter;
                              ItemAvailFormsMgt.ShowSalesLines(Item);
                            END;
                             }

    { 1100485000;2;Field  ;
                CaptionML=ENU=Qty. on Plant Order;
                DecimalPlaces=0:5;
                SourceExpr=Item."Qty. on Plant Order";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              //**4PS
                              SetItemFilter;
                              ItemAvailFormsMgt.ShowPlantOrderItemLines(Item);
                            END;
                             }

    { 1210190000;2;Field  ;
                CaptionML=ENU=Reserved for Project;
                DecimalPlaces=0:5;
                SourceExpr=Item."Qty. on Item Journal Project";
                OnDrillDown=BEGIN
                              //**4PS
                              SetItemFilter;
                              ItemAvailFormsMgt.ShowItemJournalLines(Item, 1);
                            END;
                             }

    { 1210190002;2;Field  ;
                CaptionML=ENU=Reserved for Service;
                DecimalPlaces=0:5;
                SourceExpr=Item."Qty. on Item Journal Service";
                OnDrillDown=BEGIN
                              //**4PS
                              SetItemFilter;
                              ItemAvailFormsMgt.ShowItemJournalLines(Item, 2);
                            END;
                             }

    { 32  ;2   ;Field     ;
                CaptionML=ENU=Trans. Ord. Shipment (Qty.);
                DecimalPlaces=0:5;
                SourceExpr=Item."Trans. Ord. Shipment (Qty.)";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              SetItemFilter;
                              ItemAvailFormsMgt.ShowTransLines(Item,Item.FIELDNO("Trans. Ord. Shipment (Qty.)"));
                            END;
                             }

    { 6   ;2   ;Field     ;
                CaptionML=ENU=Qty. on Asm. Comp. Lines;
                SourceExpr=Item."Qty. on Asm. Component";
                Visible=false;
                OnDrillDown=VAR
                              ItemAvailFormsMgt@1001 : Codeunit 353;
                            BEGIN
                              ItemAvailFormsMgt.ShowAsmCompLines(Item);
                            END;
                             }

    { 3   ;2   ;Field     ;
                CaptionML=ENU=Qty. on Assembly Order;
                SourceExpr=Item."Qty. on Assembly Order";
                Visible=False;
                OnDrillDown=VAR
                              ItemAvailFormsMgt@1001 : Codeunit 353;
                            BEGIN
                              ItemAvailFormsMgt.ShowAsmOrders(Item);
                            END;
                             }

    { 34  ;2   ;Field     ;
                CaptionML=ENU=Qty. in Transit;
                DecimalPlaces=0:5;
                SourceExpr=Item."Qty. in Transit";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              SetItemFilter;
                              ItemAvailFormsMgt.ShowTransLines(Item,Item.FIELDNO("Qty. in Transit"));
                            END;
                             }

    { 30  ;2   ;Field     ;
                CaptionML=ENU=Trans. Ord. Receipt (Qty.);
                DecimalPlaces=0:5;
                SourceExpr=Item."Trans. Ord. Receipt (Qty.)";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              SetItemFilter;
                              ItemAvailFormsMgt.ShowTransLines(Item,Item.FIELDNO("Trans. Ord. Receipt (Qty.)"));
                            END;
                             }

    { 14  ;2   ;Field     ;
                CaptionML=ENU=Expected Inventory;
                DecimalPlaces=0:5;
                SourceExpr=ExpectedInventory;
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                CaptionML=ENU=Available Inventory;
                DecimalPlaces=0:5;
                SourceExpr=QtyAvailable;
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                CaptionML=ENU=Scheduled Receipt (Qty.);
                DecimalPlaces=0:5;
                SourceExpr=Item."Scheduled Receipt (Qty.)";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              SetItemFilter;
                              ItemAvailFormsMgt.ShowSchedReceipt(Item);
                            END;
                             }

    { 22  ;2   ;Field     ;
                CaptionML=ENU=Scheduled Issue (Qty.);
                DecimalPlaces=0:5;
                SourceExpr=Item."Scheduled Need (Qty.)";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              SetItemFilter;
                              ItemAvailFormsMgt.ShowSchedNeed(Item);
                            END;
                             }

    { 24  ;2   ;Field     ;
                CaptionML=ENU=Planned Order Releases;
                DecimalPlaces=0:5;
                SourceExpr=PlannedOrderReleases;
                OnDrillDown=BEGIN
                              ShowItemAvailLineList(3);
                            END;
                             }

    { 36  ;2   ;Field     ;
                DrillDown=Yes;
                CaptionML=ENU=Net Change;
                DecimalPlaces=0:5;
                SourceExpr=Item."Net Change";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              SetItemFilter;
                              ItemAvailFormsMgt.ShowItemLedgerEntries(Item,TRUE);
                            END;
                             }

  }
  CODE
  {
    VAR
      Item@1000 : Record 27;
      ItemAvailFormsMgt@1022 : Codeunit 353;
      ExpectedInventory@1007 : Decimal;
      QtyAvailable@1008 : Decimal;
      AmountType@1010 : 'Net Change,Balance at Date';
      PlannedOrderReleases@1012 : Decimal;
      GrossRequirement@1013 : Decimal;
      PlannedOrderRcpt@1014 : Decimal;
      ScheduledRcpt@1015 : Decimal;
      ProjAvailableBalance@1016 : Decimal;
      PeriodStart@1017 : Date;
      PeriodEnd@1018 : Date;
      AllLocationss@1100525000 : Boolean;

    PROCEDURE Set@1(VAR NewItem@1000 : Record 27;NewAmountType@1002 : 'Net Change,Balance at Date');
    BEGIN
      Item.COPY(NewItem);
      PeriodStart := Item.GETRANGEMIN("Date Filter");
      PeriodEnd := Item.GETRANGEMAX("Date Filter");
      AmountType := NewAmountType;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE SetItemFilter@6();
    BEGIN
      IF AmountType = AmountType::"Net Change" THEN
        Item.SETRANGE("Date Filter",PeriodStart,PeriodEnd)
      ELSE
        Item.SETRANGE("Date Filter",0D,PeriodEnd);
      Item.SETRANGE("Location Filter",Code);

      //**4PS.sn
      IF Item.GETFILTER("Project Filter") = '' THEN
        Item.SETFILTER("Project Filter",'<>%1','');
      IF Item.GETFILTER("Service Order Filter") = '' THEN
        Item.SETFILTER("Service Order Filter",'<>%1','');  //db, 25-07-14: C009041
      //**4PS.en
    END;

    LOCAL PROCEDURE SetItemFilter4PS@1100409000(iAction@1100409000 : Integer);
    BEGIN
      //**4PS
      IF AmountType = AmountType::"Net Change" THEN
        Item.SETRANGE("Date Filter",PeriodStart,PeriodEnd)
      ELSE
        Item.SETRANGE("Date Filter",0D,PeriodEnd);
      Item.SETRANGE("Location Filter",Code);

      CASE iAction OF  //db, 25-08-14: C009041
        0: //all
        BEGIN
          Item.SETRANGE("Project Filter");
          Item.SETRANGE("Service Order Filter");
        END;
        1: //inventory
        BEGIN
          Item.SETFILTER("Project Filter", '%1', '');
          Item.SETFILTER("Service Order Filter", '%1', '');
         END;
        2: //project
        BEGIN
          Item.SETFILTER("Project Filter", '<>%1', '');
          Item.SETFILTER("Service Order Filter", '%1', '');
        END;
        3: //service
        BEGIN
          Item.SETFILTER("Project Filter", '%1', '');
          Item.SETFILTER("Service Order Filter", '<>%1', '');
        END;
      END;
    END;

    LOCAL PROCEDURE ShowItemAvailLineList@3(What@1000 : Integer);
    BEGIN
      SetItemFilter;
      ItemAvailFormsMgt.ShowItemAvailLineList(Item,What);
    END;

    LOCAL PROCEDURE CalcAvailQuantities@2(VAR GrossRequirement@1002 : Decimal;VAR PlannedOrderRcpt@1003 : Decimal;VAR ScheduledRcpt@1004 : Decimal;VAR PlannedOrderReleases@1005 : Decimal;VAR ProjAvailableBalance@1006 : Decimal;VAR ExpectedInventory@1007 : Decimal;VAR QtyAvailable@1008 : Decimal);
    BEGIN
      SetItemFilter;
      ItemAvailFormsMgt.CalcAvailQuantities(
        Item,AmountType = AmountType::"Balance at Date",
        GrossRequirement,PlannedOrderRcpt,ScheduledRcpt,
        PlannedOrderReleases,ProjAvailableBalance,ExpectedInventory,QtyAvailable);
    END;

    PROCEDURE SetCompany@1100485001(Company@1100485000 : Text[30]);
    BEGIN
      //**4PS
      ItemAvailFormsMgt.SetCompany(Company);
    END;

    BEGIN
    END.
  }
}

