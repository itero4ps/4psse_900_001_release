OBJECT Page 52 Purchase Credit Memo
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00.00.44974,NAVSE9,4PS9.00,4PSSE,EXF400000;
  }
  PROPERTIES
  {
    CaptionML=ENU=Purchase Credit Memo;
    SourceTable=Table38;
    SourceTableView=WHERE(Document Type=FILTER(Credit Memo));
    PageType=Document;
    TimerUpdate=1;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=ENU=New,Process,Report,Mail Documents;
    OnInit=BEGIN
             DocAmountVATEnable := TRUE;
             DocAmountEnable := TRUE;
             PurchSetup.GET;

             SetExtDocNoMandatoryCondition;

             //**4PS.sn
             //"Buy-from Vendor No.Editable","Buy-from Vendor NameEditable","Buy-from AddressEditable"
             //"Buy-from Address 2Editable","Buy-from CityEditable","Buy-from ContactEditable","Posting DateEditable"
             //VATProdPostingGroupEditable,"Vendor Cr. Memo No.Editable","Buy-from Post CodeEditable"
             //"Document DateEditable","Buy-from Contact No.Editable"
             FieldsEditable := TRUE;
             "On HoldEditable" := TRUE;
             "Amount excl. VATEditable" := TRUE;
             "VAT AmountEditable" := TRUE;
             MemoWKAEditable := TRUE;
             WageChargetoTaxAuthorityEditab := TRUE;
             WageChargetoBAccountEditable := TRUE;
             "Pay To Tax AuthorityEditable" := TRUE;
             //ContributionPercentageEditable := TRUE;
             "Labor AmountEditable" := TRUE;
             "Avg. Wage RateEditable" := TRUE;
             "Number of HoursEditable" := TRUE;
             "Actual End DateEditable" := TRUE;
             "Actual Effective DateEditable" := TRUE;
             "Payment AgreementEditable" := TRUE;
             DocAmountVATVisible := TRUE;
             DocAmountVisible := TRUE;
             "Ext. Document IDEditable" := TRUE;
             "Ext. Document IDVisible" := TRUE;
             "Interest DateVisible" := TRUE;
             //**4PS.en
           END;

    OnOpenPage=VAR
                 lvInterestCalcMgtCU@1210190000 : Codeunit 11012049;
               BEGIN
                 ////**4PS Generated Code. Do Not Change.sn01
                 //DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 ////**4PS Generated Code.en01
                 SetDocNoVisible;

                 IF UserMgt.GetPurchasesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetPurchasesFilter);
                   FILTERGROUP(0);
                 END;
                 EnableControls;

                 //**4PS.sn
                 PurchSetup.GET;
                 IF NOT lvInterestCalcMgtCU.PermissionInterestGranule() THEN
                   "Interest DateVisible" := (FALSE);
                 BankAccountSelectEditable := PurchSetup."Invoices on Bank Account";
                 BankNoCheckEditable := PurchSetup."Bank Account Check";
                 IF PurchSetup."Scanning Application Purch.Inv" <> PurchSetup."Scanning Application Purch.Inv"::Other THEN BEGIN
                   "Ext. Document IDEditable" := FALSE;
                   "Ext. Document IDVisible" := (FALSE);
                 END;
                 //**4PS.en
                 OnActivateForm;
               END;

    OnAfterGetRecord=BEGIN
                       SetControlAppearance;

                       //**4PS.sn
                       IF gFromReference THEN BEGIN
                         gFromReference := FALSE;
                         CurrPage.PurchLines.PAGE.InitSelectionFromReference(gInvLineNo);
                       END;

                       FillSelectBankAccount;

                       gvAmount := 0;

                       IF ("No." <> xRec."No.") THEN
                         WhiteVisionStop;
                       //**4PS.en
                     END;

    OnNewRecord=BEGIN
                  WhiteVisionStop;

                  "Responsibility Center" := UserMgt.GetPurchasesFilter;
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02

                  SetFieldsEditable(TRUE); //**4PS.n
                  BankAccountSelect := ''; //**4PS.n
                  AfterGetCurrentRecord;
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    OnAfterGetCurrRecord=BEGIN
                           AfterGetCurrentRecord;
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                           ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 47      ;1   ;ActionGroup;
                      CaptionML=ENU=&Credit Memo;
                      Image=CreditMemo }
      { 49      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=ENU=Statistics;
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CalcInvDiscForHeader;
                                 COMMIT;
                                 PAGE.RUNMODAL(PAGE::"Purchase Statistics",Rec);
                                 PurchCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 50      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Vendor;
                      RunObject=Page 26;
                      RunPageLink=No.=FIELD(Buy-from Vendor No.);
                      Image=Vendor }
      { 105     ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 43      ;2   ;Action    ;
                      CaptionML=ENU=Approvals;
                      Description=**4PS.o;
                      Visible=false;
                      Image=Approvals;
                      OnAction=VAR
                                 ApprovalEntries@1001 : Page 658;
                               BEGIN
                                 ApprovalEntries.Setfilters(DATABASE::"Purchase Header","Document Type","No.");
                                 ApprovalEntries.RUN;
                               END;
                                }
      { 12013596;2   ;Separator  }
      { 12013597;2   ;Action    ;
                      Name=<Action1100285004>;
                      ShortCutKey=Ctrl+I;
                      CaptionML=ENU=Show document;
                      Image=Document;
                      OnAction=BEGIN
                                 // ExFlow
                                 ExFlow.ShowImageDocument("Document Type","No.");
                               END;
                                }
      { 12013598;2   ;Action    ;
                      Name=<Action1100285005>;
                      ShortCutKey=Ctrl+B;
                      CaptionML=ENU=Attached Fil&es;
                      RunObject=Page 12013644;
                      RunPageView=SORTING(Document Type,Document No.,Attached);
                      RunPageLink=Document Type=FIELD(Document Type),
                                  Document No.=FIELD(No.);
                      Image=Documents }
      { 51      ;2   ;Action    ;
                      CaptionML=ENU=Co&mments;
                      RunObject=Page 66;
                      RunPageLink=Document Type=FIELD(Document Type),
                                  No.=FIELD(No.),
                                  Document Line No.=CONST(0);
                      Image=ViewComments }
      { 1100485000;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+S;
                      CaptionML=ENU=Scanned Document;
                      Image=Document;
                      OnAction=VAR
                                 lvPurchSetupRec@1100485003 : Record 312;
                               BEGIN
                                 //**4PS
                                 lvPurchSetupRec.GET;
                                 lvPurchSetupRec.ShowScannedDocument(3,"No.","Buy-from Vendor No.","Ext. Document ID");
                               END;
                                }
      { 1100485001;2 ;ActionGroup;
                      CaptionML=ENU=Consenting;
                      Image=BOMLedger }
      { 1100485002;3 ;Action    ;
                      CaptionML=ENU=Consent Lines;
                      OnAction=VAR
                                 ConsentLine@1100485002 : Record 11012226;
                                 ConsentManagement@1100485000 : Codeunit 11012132;
                               BEGIN
                                 //**4PS
                                 IF ConsentLine.READPERMISSION THEN
                                   ConsentManagement.HandlePurchaseHeader(Rec, 3, TRUE);
                               END;
                                }
      { 1100485003;3 ;Action    ;
                      CaptionML=ENU=Insert Consent Lines;
                      Image=Insert;
                      OnAction=VAR
                                 ConsentLine@1100528400 : Record 11012226;
                               BEGIN
                                 //**4PS
                                 IF ConsentLine.READPERMISSION THEN
                                   EditConsentLines;
                               END;
                                }
      { 1210190016;2 ;Action    ;
                      CaptionML=ENU=&Documents;
                      Image=Documents;
                      OnAction=VAR
                                 RecRef@1210190001 : RecordRef;
                                 DocumentFilters@1210190000 : Codeunit 11012432;
                               BEGIN
                                 //**4PS
                                 RecRef.GETTABLE(Rec);
                                 DocumentFilters.CreateTempFilterAndExecute1(RecRef, "Shortcut Dimension 1 Code", FALSE, TRUE);
                               END;
                                }
      { 99      ;1   ;ActionGroup;
                      CaptionML=ENU=&Line }
      { 1210190011;2 ;Action    ;
                      CaptionML=ENU=ICF Specifications;
                      Image=SetupList;
                      OnAction=BEGIN
                                 ShowICFInvoiceLines;  //**4PS
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 23      ;1   ;ActionGroup;
                      CaptionML=ENU=Approval }
      { 25      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=ENU=Approve;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 19      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=ENU=Reject;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 21      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=ENU=Delegate;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 17      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=ENU=Comments;
                      RunObject=Page 660;
                      RunPageLink=Table ID=CONST(38),
                                  Document Type=FIELD(Document Type),
                                  Document No.=FIELD(No.);
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category4 }
      { 9       ;1   ;ActionGroup;
                      CaptionML=ENU=Release;
                      Image=ReleaseDoc }
      { 112     ;2   ;Action    ;
                      Name=Release;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=ENU=Re&lease;
                      Promoted=Yes;
                      Image=ReleaseDoc;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReleasePurchDoc@1000 : Codeunit 415;
                               BEGIN
                                 ReleasePurchDoc.PerformManualRelease(Rec);
                               END;
                                }
      { 113     ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=ENU=Re&open;
                      Image=ReOpen;
                      OnAction=VAR
                                 ReleasePurchDoc@1001 : Codeunit 415;
                               BEGIN
                                 ReleasePurchDoc.PerformManualReopen(Rec);
                               END;
                                }
      { 52      ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 127     ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Get St&d. Vend. Purchase Codes;
                      Image=VendorCode;
                      OnAction=VAR
                                 StdVendPurchCode@1000 : Record 175;
                               BEGIN
                                 StdVendPurchCode.InsertPurchLines(Rec);
                               END;
                                }
      { 53      ;2   ;Action    ;
                      Name=CalculateInvoiceDiscount;
                      AccessByPermission=TableData 24=R;
                      CaptionML=ENU=Calculate &Invoice Discount/Charge;
                      Image=CalculateInvoiceDiscount;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                                 PurchCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 128     ;2   ;Separator  }
      { 93      ;2   ;Action    ;
                      Name=ApplyEntries;
                      ShortCutKey=Shift+F11;
                      Ellipsis=Yes;
                      CaptionML=ENU=Apply Entries;
                      Promoted=Yes;
                      Image=ApplyEntries;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Purchase Header Apply",Rec);
                               END;
                                }
      { 129     ;2   ;Separator  }
      { 1210190007;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Get Allo&cation;
                      Image=LedgerEntries;
                      OnAction=VAR
                                 GetAllocation@1210190000 : Codeunit 11012048;
                               BEGIN
                                 GetAllocation.PurchaseHeader(Rec);
                               END;
                                }
      { 1210190002;2 ;Action    ;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=ENU=Get Receipt Lines;
                      Promoted=Yes;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CurrPage.PurchLines.PAGE.GetReceipt;
                               END;
                                }
      { 143     ;2   ;Action    ;
                      Name=GetPostedDocumentLinesToReverse;
                      Ellipsis=Yes;
                      CaptionML=ENU=Get Posted Doc&ument Lines to Reverse;
                      Image=ReverseLines;
                      OnAction=BEGIN
                                 GetPstdDocLinesToRevere;
                               END;
                                }
      { 54      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy Document;
                      Promoted=Yes;
                      Image=CopyDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CopyPurchDoc.SetPurchHeader(Rec);
                                 CopyPurchDoc.RUNMODAL;
                                 CLEAR(CopyPurchDoc);
                                 IF GET("Document Type","No.") THEN;
                               END;
                                }
      { 131     ;2   ;Separator  }
      { 114     ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Move Negative Lines;
                      Image=MoveNegativeLines;
                      OnAction=BEGIN
                                 CLEAR(MoveNegPurchLines);
                                 MoveNegPurchLines.SetPurchHeader(Rec);
                                 MoveNegPurchLines.RUNMODAL;
                                 MoveNegPurchLines.ShowDocument;
                               END;
                                }
      { 1100485090;2 ;Action    ;
                      CaptionML=ENU=Get Plant Rent Entries;
                      Promoted=Yes;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 GetPlantRentEntries@1100525000 : Report 11012589;
                               BEGIN
                                 TESTFIELD("No.");
                                 TESTFIELD("Buy-from Vendor No.");
                                 GetPlantRentEntries.SetSelections("No.", DATABASE::"Purchase Line", TRUE, FALSE);
                                 GetPlantRentEntries.RUNMODAL;
                               END;
                                }
      { 132     ;2   ;Separator  }
      { 37      ;2   ;ActionGroup;
                      Name=IncomingDocument;
                      CaptionML=ENU=Incoming Document;
                      ActionContainerType=NewDocumentItems;
                      Image=Documents }
      { 35      ;3   ;Action    ;
                      Name=IncomingDocCard;
                      CaptionML=ENU=View Incoming Document;
                      Enabled=HasIncomingDocument;
                      Image=ViewOrder;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IncomingDocument.ShowCardFromEntryNo("Incoming Document Entry No.");
                               END;
                                }
      { 33      ;3   ;Action    ;
                      Name=SelectIncomingDoc;
                      AccessByPermission=TableData 130=R;
                      CaptionML=ENU=Select Incoming Document;
                      Image=SelectLineToApply;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 VALIDATE("Incoming Document Entry No.",IncomingDocument.SelectIncomingDocument("Incoming Document Entry No."));
                               END;
                                }
      { 31      ;3   ;Action    ;
                      Name=IncomingDocAttachFile;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Incoming Document from File;
                      Enabled=NOT HasIncomingDocument;
                      Image=Attach;
                      OnAction=VAR
                                 IncomingDocumentAttachment@1000 : Record 133;
                               BEGIN
                                 IncomingDocumentAttachment.NewAttachmentFromPurchaseDocument(Rec);
                               END;
                                }
      { 41      ;3   ;Action    ;
                      Name=RemoveIncomingDoc;
                      CaptionML=ENU=Remove Incoming Document;
                      Enabled=HasIncomingDocument;
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 "Incoming Document Entry No." := 0;
                               END;
                                }
      { 11      ;1   ;ActionGroup;
                      CaptionML=ENU=Request Approval;
                      Image=Approval }
      { 146     ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=ENU=Send A&pproval Request;
                      Description=**4PS.o;
                      Visible=false;
                      Enabled=NOT OpenApprovalEntriesExist;
                      Image=SendApprovalRequest;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.CheckPurchaseApprovalsWorkflowEnabled(Rec) THEN
                                   ApprovalsMgmt.OnSendPurchaseDocForApproval(Rec);
                               END;
                                }
      { 147     ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=ENU=Cancel Approval Re&quest;
                      Description=**4PS.o;
                      Visible=false;
                      Enabled=OpenApprovalEntriesExist;
                      Image=Cancel;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.OnCancelPurchaseApprovalRequest(Rec);
                               END;
                                }
      { 144     ;2   ;Separator  }
      { 57      ;1   ;ActionGroup;
                      CaptionML=ENU=P&osting;
                      Image=Post }
      { 59      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=ENU=P&ost;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Purch.-Post (Yes/No)");
                               END;
                                }
      { 27      ;2   ;Action    ;
                      Name=Preview;
                      CaptionML=ENU=Preview Posting;
                      Image=ViewPostedOrder;
                      OnAction=VAR
                                 PurchPostYesNo@1000 : Codeunit 91;
                               BEGIN
                                 PurchPostYesNo.Preview(Rec);
                               END;
                                }
      { 1210190012;2 ;Action    ;
                      CaptionML=ENU=&Match ICF Invoice;
                      Image=ElectronicDoc;
                      OnAction=VAR
                                 PurchReceiptCU@1210190000 : Codeunit 74;
                               BEGIN
                                 PurchReceiptCU.MatchReceiptICFInvoice("No.", TRUE);  //**4PS.n
                               END;
                                }
      { 1100525000;2 ;Action    ;
                      CaptionML=ENU=Create Invoice Lines for Sub Projects;
                      Image=CreateJobSalesInvoice;
                      OnAction=BEGIN
                                 //**4PS
                                 DistrPurchLinesOverSubProjects(Rec);
                               END;
                                }
      { 58      ;2   ;Action    ;
                      Name=TestReport;
                      Ellipsis=Yes;
                      CaptionML=ENU=Test Report;
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintPurchHeader(Rec);
                               END;
                                }
      { 1101200045;2 ;Action    ;
                      CaptionML=ENU=Invoice Check List;
                      Image=TestReport;
                      OnAction=VAR
                                 PurchHeaderRec@1000000006 : Record 38;
                                 PurchInvChecklist@1100525000 : Report 11012063;
                               BEGIN
                                 //**4PS
                                 PurchHeaderRec.SETRANGE("Document Type",PurchHeaderRec."Document Type"::"Credit Memo");
                                 PurchInvChecklist.SETTABLEVIEW(PurchHeaderRec);
                                 PurchInvChecklist.RUN;
                               END;
                                }
      { 60      ;2   ;Action    ;
                      ShortCutKey=Shift+F9;
                      CaptionML=ENU=Post and &Print;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Purch.-Post + Print");
                               END;
                                }
      { 61      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Post &Batch;
                      Image=PostBatch;
                      OnAction=VAR
                                 PurchaseHeader@1100528701 : Record 38;
                               BEGIN
                                 //**4PS.en

                                 // jhoek.110411.begin
                                 PurchaseHeader.COPY(Rec);
                                 IF PurchSetup."Registration per User" THEN
                                   PurchaseHeader.SETRANGE("Input by", USERID);
                                 // REPORT.RUNMODAL(REPORT::"Batch Post Purch. Credit Memos",TRUE,TRUE,Rec);
                                 REPORT.RUNMODAL(REPORT::"Batch Post Purch. Credit Memos",TRUE,TRUE,PurchaseHeader);
                                 // jhoek.110411.end

                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 3       ;2   ;Action    ;
                      CaptionML=ENU=Remove From Job Queue;
                      Visible=JobQueueVisible;
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 CancelBackgroundPosting;
                               END;
                                }
      { 1100409001;1 ;ActionGroup;
                      CaptionML=ENU=Mail Documents;
                      ActionContainerType=NewDocumentItems }
      { 1100409000;2 ;Action    ;
                      CaptionML=ENU=Buy-from Vendor;
                      Promoted=Yes;
                      Image=MailAttachment;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 Contact@1100409002 : Record 5050;
                                 Vendor@1100409001 : Record 23;
                                 DocumentTemplate@1100409000 : Record 11012401;
                               BEGIN
                                 //**4PS
                                 TESTFIELD("Buy-from Vendor No.");
                                 IF Contact.GetContactByVendor("Buy-from Vendor No.", Contact, TRUE) THEN BEGIN
                                   Vendor.GET("Buy-from Vendor No.");
                                   EditDocuments(
                                     "Document Type", STRSUBSTNO('%1', DocumentTemplate.Type::"Credit Memo"),
                                     Contact."No.", '', TRUE, Vendor."E-Mail");
                                 END;
                               END;
                                }
      { 1100409002;2 ;Action    ;
                      CaptionML=ENU=Buy-from Contact;
                      Promoted=Yes;
                      Image=MailAttachment;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 Contact@1100409002 : Record 5050;
                                 DocumentTemplate@1100409000 : Record 11012401;
                               BEGIN
                                 //**4PS
                                 TESTFIELD("Buy-from Contact No.");
                                 IF Contact.GET("Buy-from Contact No.") THEN BEGIN
                                   IF Contact.IsContactPerson THEN
                                     EditDocuments(
                                       "Document Type", STRSUBSTNO('%1', DocumentTemplate.Type::"Credit Memo"),
                                       Contact."Company No.", Contact."No.", TRUE, Contact."E-Mail")
                                    ELSE
                                     EditDocuments(
                                       "Document Type", STRSUBSTNO('%1', DocumentTemplate.Type::"Credit Memo"),
                                       Contact."No.", '', TRUE, Contact."E-Mail");
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=ENU=General }

    { 2   ;2   ;Field     ;
                Lookup=No;
                SourceExpr="No.";
                Importance=Promoted;
                Visible=DocNoVisible;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1210190004;2;Field  ;
                SourceExpr="Related Purch. Order No.";
                Editable=FieldsEditable;
                OnValidate=BEGIN
                             //**4PS.n (C006225)
                             ValidateRelatedPurchOrder;
                           END;

                OnLookup=VAR
                           OldRelatedOrderNo@1100525000 : Code[20];
                         BEGIN
                           //**4PS.n (C006225)
                           OldRelatedOrderNo := "Related Purch. Order No.";
                           LookupRelatedOrder();
                           IF ("Related Purch. Order No." <> '') AND ("Related Purch. Order No." <> OldRelatedOrderNo) THEN
                             ValidateRelatedPurchOrder;
                         END;
                          }

    { 1210190006;2;Field  ;
                Name=BankAccountSelect;
                CaptionML=ENU=Bank Account No.;
                SourceExpr=BankAccountSelect;
                Editable=BankAccountSelectEditable;
                OnValidate=BEGIN
                             //**4PS
                             HandleSelectedBankAccount(Rec, BankAccountSelect); //call C000319
                           END;
                            }

    { 4   ;2   ;Field     ;
                CaptionML=ENU=Vendor No.;
                SourceExpr="Buy-from Vendor No.";
                Importance=Standard;
                Editable=FieldsEditable;
                OnValidate=BEGIN
                             BuyfromVendorNoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           //**4PS.sn
                           LookupVendor(xRec);
                           BuyfromVendorNoOnAfterValidate;
                           //**4PS.en
                         END;

                ShowMandatory=TRUE }

    { 123 ;2   ;Field     ;
                SourceExpr="Buy-from Contact No.";
                Importance=Additional;
                Editable=FieldsEditable;
                QuickEntry=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr="Buy-from Vendor Name";
                Importance=Promoted;
                Editable=FieldsEditable;
                OnValidate=BEGIN
                             //**4PS
                             IF "Buy-from Vendor No." = '' THEN
                               IF VendorRec.ValidateBuyFromVendor(Rec,xRec) THEN
                                 CurrPage.UPDATE;
                           END;

                QuickEntry=FALSE }

    { 63  ;2   ;Field     ;
                SourceExpr="Buy-from Address";
                Importance=Additional;
                Editable=FieldsEditable }

    { 65  ;2   ;Field     ;
                SourceExpr="Buy-from Address 2";
                Importance=Additional;
                Editable=FieldsEditable }

    { 68  ;2   ;Field     ;
                SourceExpr="Buy-from Post Code";
                Importance=Additional;
                Editable=FieldsEditable }

    { 67  ;2   ;Field     ;
                SourceExpr="Buy-from City";
                Editable=FieldsEditable;
                QuickEntry=FALSE }

    { 8   ;2   ;Field     ;
                SourceExpr="Buy-from Contact";
                Importance=Additional;
                Editable=FieldsEditable }

    { 14  ;2   ;Field     ;
                SourceExpr="Vendor Cr. Memo No.";
                Editable="FieldsEditable";
                OnAssistEdit=VAR
                               RetVal@1100528301 : Text[250];
                             BEGIN
                               WhiteVisionStart;
                               RetVal := WhiteVisionActivateField('Factuurnummer', 0);
                               IF (RetVal <> '') THEN
                                 EVALUATE("Vendor Cr. Memo No.", COPYSTR(RetVal, 1, 20));
                             END;

                ShowMandatory=VendorCreditMemoNoMandatory }

    { 1100485005;2;Field  ;
                SourceExpr="Ext. Document ID";
                Visible="Ext. Document IDVisible";
                Editable="Ext. Document IDEditable" }

    { 1101200012;2;Field  ;
                CaptionML=ENU=Subcontractor Credit Memo;
                SourceExpr="Subcontracting Invoice";
                OnValidate=BEGIN
                             SubcontractingInvoiceOnAfterVa;
                           END;
                            }

    { 1101200016;2;Field  ;
                SourceExpr="Invoice Lines Input";
                Editable="Invoice Lines InputEditable" }

    { 1000000001;2;Field  ;
                SourceExpr="Amounts only";
                Editable=FieldsEditable }

    { 1210190022;2;Field  ;
                SourceExpr="Bank No. Check";
                Editable=BankNoCheckEditable;
                OnValidate=BEGIN
                             //**4PS
                             FillSelectBankAccount;
                           END;
                            }

    { 1100525006;2;Field  ;
                SourceExpr="Shortcut Dimension 1 Code";
                Editable=FieldsEditable;
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                             ShortcutDimension1CodeOnAfterV;
                           END;
                            }

    { 12  ;2   ;Field     ;
                SourceExpr="Posting Date";
                Importance=Standard;
                Editable=FieldsEditable;
                QuickEntry=FALSE }

    { 39  ;2   ;Field     ;
                SourceExpr="Document Date";
                Editable="FieldsEditable";
                OnAssistEdit=VAR
                               RetVal@1100528301 : Text[250];
                             BEGIN
                               WhiteVisionStart;
                               RetVal := WhiteVisionActivateField('Factuurdatum', 2);
                               IF (RetVal <> '') THEN
                                 EVALUATE("Document Date", RetVal);
                             END;

                QuickEntry=FALSE }

    { 115 ;2   ;Field     ;
                SourceExpr="Vendor Authorization No.";
                Importance=Standard }

    { 13  ;2   ;Field     ;
                SourceExpr="Incoming Document Entry No.";
                Visible=FALSE }

    { 1101200014;2;Field  ;
                SourceExpr="VAT Prod. Posting Group";
                Editable=FieldsEditable;
                OnValidate=BEGIN
                             VATProdPostingGroupOnAfterVali;
                           END;
                            }

    { 1101200002;2;Field  ;
                SourceExpr="Amount excl. VAT";
                Editable="Amount excl. VATEditable" }

    { 1101200004;2;Field  ;
                SourceExpr="VAT Amount";
                Editable="VAT AmountEditable";
                OnValidate=BEGIN
                             VATAmountOnAfterValidate;
                           END;
                            }

    { 1101200000;2;Field  ;
                SourceExpr="Amount incl. VAT";
                Editable=FieldsEditable;
                OnValidate=BEGIN
                             AmountinclVATOnAfterValidate;
                           END;

                OnAssistEdit=VAR
                               RetVal@1100528301 : Text[250];
                             BEGIN
                               WhiteVisionStart;
                               RetVal := WhiteVisionActivateField('BrutoBedrag', 3);
                               IF (RetVal <> '') THEN
                                 EVALUATE("Amount incl. VAT", RetVal);
                             END;
                              }

    { 1101200006;2;Field  ;
                SourceExpr="On Hold";
                Editable="On HoldEditable" }

    { 1101200008;2;Field  ;
                SourceExpr="Approvement Initials";
                Editable=FieldsEditable }

    { 1210190000;2;Field  ;
                SourceExpr="Job No.";
                Editable=FieldsEditable;
                OnValidate=BEGIN
                             //**4PS;
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 7   ;2   ;Field     ;
                SourceExpr="Job Queue Status";
                Importance=Additional }

    { 1100525003;2;Field  ;
                SourceExpr="Service Order No.";
                Editable=FieldsEditable;
                OnValidate=BEGIN
                             //**4PS
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1210190018;2;Field  ;
                SourceExpr="Purchaser Code" }

    { 101 ;2   ;Field     ;
                SourceExpr=Status;
                Importance=Promoted;
                QuickEntry=FALSE }

    { 1100285300;2;Field  ;
                SourceExpr=Approve }

    { 12013587;2;Field    ;
                CaptionML=ENU=Approval Status;
                SourceExpr=ExFlowStatusFromPO;
                OnDrillDown=BEGIN
                              ExFlowStatusDrillDownFromPO;
                            END;
                             }

    { 12013588;2;Field    ;
                SourceExpr="Gross Invoice Amount ExFlow" }

    { 12013589;2;Field    ;
                SourceExpr="Import VAT Amount" }

    { 12013590;2;Field    ;
                SourceExpr="Block Document" }

    { 1102601000;2;Field  ;
                SourceExpr="Campaign No.";
                Importance=Additional }

    { 1100528400;2;Field  ;
                CaptionML=ENU=Open Order Consent Lines;
                SourceExpr=RelatedOrderHasOpenConsentLines }

    { 46  ;1   ;Part      ;
                Name=PurchLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page98;
                UpdatePropagation=Both }

    { 1905885101;1;Group  ;
                CaptionML=ENU=Invoicing }

    { 20  ;2   ;Field     ;
                SourceExpr="Pay-to Vendor No.";
                Importance=Promoted;
                Editable=FieldsEditable;
                OnValidate=BEGIN
                             PaytoVendorNoOnAfterValidate;
                           END;
                            }

    { 125 ;2   ;Field     ;
                SourceExpr="Pay-to Contact No.";
                Importance=Additional;
                Editable=FieldsEditable }

    { 22  ;2   ;Field     ;
                SourceExpr="Pay-to Name";
                Importance=Promoted;
                Editable=FieldsEditable }

    { 24  ;2   ;Field     ;
                SourceExpr="Pay-to Address";
                Importance=Additional;
                Editable=FieldsEditable }

    { 26  ;2   ;Field     ;
                SourceExpr="Pay-to Address 2";
                Importance=Additional;
                Editable=FieldsEditable }

    { 73  ;2   ;Field     ;
                SourceExpr="Pay-to Post Code";
                Importance=Additional;
                Editable=FieldsEditable }

    { 28  ;2   ;Field     ;
                SourceExpr="Pay-to City";
                Editable=FieldsEditable }

    { 30  ;2   ;Field     ;
                SourceExpr="Pay-to Contact";
                Importance=Additional;
                Editable=FieldsEditable }

    { 1101200018;2;Field  ;
                SourceExpr="Your Reference";
                Editable=FieldsEditable }

    { 78  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                Importance=Promoted;
                Editable=FieldsEditable;
                LookupPageID=Cost Object List;
                OnValidate=BEGIN
                             ShortcutDimension2CodeOnAfterV;
                           END;
                            }

    { 16  ;2   ;Field     ;
                SourceExpr="Payment Terms Code";
                Importance=Standard;
                Editable=FieldsEditable }

    { 18  ;2   ;Field     ;
                SourceExpr="Due Date";
                Importance=Standard;
                Editable=FieldsEditable }

    { 94  ;2   ;Field     ;
                SourceExpr="Payment Discount %";
                Editable=FieldsEditable }

    { 139 ;2   ;Field     ;
                SourceExpr="Pmt. Discount Date";
                Importance=Additional;
                Editable=FieldsEditable }

    { 141 ;2   ;Field     ;
                SourceExpr="VAT Bus. Posting Group";
                Editable=FieldsEditable }

    { 1100525001;2;Field  ;
                SourceExpr="Reason Code" }

    { 1210190005;2;Field  ;
                SourceExpr="Interest Date";
                Importance=Additional;
                Visible="Interest DateVisible";
                Editable=FieldsEditable }

    { 1100525005;2;Field  ;
                SourceExpr="Responsibility Center";
                Importance=Additional;
                Editable=FieldsEditable }

    { 1100285001;2;Field  ;
                SourceExpr="Prices Including VAT" }

    { 1100285401;2;Field  ;
                SourceExpr="Export to Symbrio";
                Importance=Additional }

    { 1100285400;2;Field  ;
                SourceExpr="Export to Symbrio Type";
                Importance=Additional }

    { 1100285500;2;Field  ;
                SourceExpr="Payment Reference";
                Visible=FALSE }

    { 1906801201;1;Group  ;
                CaptionML=ENU=Shipping }

    { 32  ;2   ;Field     ;
                SourceExpr="Ship-to Name";
                Importance=Promoted;
                Editable=FieldsEditable }

    { 34  ;2   ;Field     ;
                SourceExpr="Ship-to Address";
                Editable=FieldsEditable }

    { 36  ;2   ;Field     ;
                SourceExpr="Ship-to Address 2";
                Editable=FieldsEditable }

    { 83  ;2   ;Field     ;
                SourceExpr="Ship-to Post Code";
                Editable=FieldsEditable }

    { 38  ;2   ;Field     ;
                SourceExpr="Ship-to City";
                Editable=FieldsEditable }

    { 1100525002;2;Field  ;
                SourceExpr="Ship-to Country/Region Code";
                Editable=FieldsEditable }

    { 40  ;2   ;Field     ;
                SourceExpr="Ship-to Contact";
                Editable=FieldsEditable }

    { 80  ;2   ;Field     ;
                SourceExpr="Location Code";
                Importance=Promoted;
                Editable=FieldsEditable }

    { 96  ;2   ;Field     ;
                SourceExpr="Expected Receipt Date";
                Importance=Promoted;
                Editable=FieldsEditable }

    { 1907468901;1;Group  ;
                CaptionML=ENU=Foreign Trade }

    { 91  ;2   ;Field     ;
                SourceExpr="Currency Code";
                Importance=Promoted;
                Editable=FieldsEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             PurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               IF "Posting Date" <> 0D THEN
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               ELSE
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 1100285000;2;Field  ;
                SourceExpr="EU 3-Party Trade" }

    { 42  ;2   ;Field     ;
                SourceExpr="Transaction Type";
                Importance=Promoted;
                Editable=FieldsEditable }

    { 89  ;2   ;Field     ;
                SourceExpr="Transaction Specification";
                Editable=FieldsEditable }

    { 44  ;2   ;Field     ;
                SourceExpr="Transport Method";
                Editable=FieldsEditable }

    { 85  ;2   ;Field     ;
                SourceExpr="Entry Point";
                Editable=FieldsEditable }

    { 87  ;2   ;Field     ;
                SourceExpr=Area;
                Editable=FieldsEditable }

    { 1100485012;2;Field  ;
                SourceExpr="Company VAT Registration No." }

    { 1100485010;2;Field  ;
                SourceExpr="VAT Registration No.";
                Editable=FieldsEditable }

    { 1100485007;2;Field  ;
                SourceExpr="Country of Origin" }

    { 1100485006;2;Field  ;
                SourceExpr="Country of Destination" }

    { 1904409301;1;Group  ;
                CaptionML=ENU=Application }

    { 135 ;2   ;Field     ;
                SourceExpr="Applies-to Doc. Type";
                Importance=Promoted }

    { 137 ;2   ;Field     ;
                SourceExpr="Applies-to Doc. No.";
                Importance=Promoted }

    { 133 ;2   ;Field     ;
                SourceExpr="Applies-to ID" }

    { 1902686201;1;Group  ;
                CaptionML=ENU=WKA }

    { 1905403901;1;Group  ;
                CaptionML=ENU=Subcontracting }

    { 1000000012;2;Field  ;
                SourceExpr="Payment Agreement";
                Importance=Promoted;
                Editable="Payment AgreementEditable";
                OnValidate=BEGIN
                             PaymentAgreementOnAfterValidat;
                           END;
                            }

    { 1000000022;2;Field  ;
                SourceExpr="Actual Effective Date";
                Importance=Promoted;
                Editable="Actual Effective DateEditable" }

    { 1000000024;2;Field  ;
                SourceExpr="Actual End Date";
                Editable="Actual End DateEditable" }

    { 1000000014;2;Field  ;
                SourceExpr="Number of Hours";
                Editable="Number of HoursEditable";
                OnValidate=BEGIN
                             NumberofHoursOnAfterValidate;
                           END;
                            }

    { 1000000016;2;Field  ;
                SourceExpr="Avg. Wage Rate";
                Editable="Avg. Wage RateEditable" }

    { 1000000018;2;Field  ;
                SourceExpr="Labor Amount";
                Editable="Labor AmountEditable";
                OnValidate=BEGIN
                             LaborAmountOnAfterValidate;
                           END;
                            }

    { 1000000020;2;Field  ;
                SourceExpr="Contribution Percentage Labor";
                Editable=ContributionPercentageLaborEdi;
                OnValidate=BEGIN
                             ContributionPercentageLaborOnA;
                           END;
                            }

    { 1210190014;2;Field  ;
                SourceExpr="Contribution Percentage Total";
                Editable=ContributionPercentageTotalEdi;
                OnValidate=BEGIN
                             ContributionPercentageTotalOnA;
                           END;
                            }

    { 1000000010;2;Field  ;
                SourceExpr="Pay To Tax Authority";
                Editable="Pay To Tax AuthorityEditable";
                OnValidate=BEGIN
                             PayToTaxAuthorityOnAfterValida;
                           END;
                            }

    { 1000000008;2;Field  ;
                SourceExpr="Wage Charge (to B Account)";
                Editable=WageChargetoBAccountEditable;
                OnValidate=BEGIN
                             WageChargetoBAccountOnAfterVal;
                           END;
                            }

    { 1000000006;2;Field  ;
                SourceExpr="Wage Charge (to Tax Authority)";
                Editable=WageChargetoTaxAuthorityEditab }

    { 1100525008;2;Field  ;
                Name=MemoWKA;
                CaptionML=ENU=Text;
                SourceExpr=PurchHeadExtensionRec.Memo;
                Editable=MemoWKAEditable;
                MultiLine=Yes;
                OnValidate=BEGIN
                             PurchHeadExtensionRec.UpdatePurchHeadExtension("Document Type", "No.");
                             CurrPage.SAVERECORD;
                           END;
                            }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 15  ;1   ;Part      ;
                SubPageLink=Table ID=CONST(38),
                            Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.);
                PagePartID=Page9103;
                Visible=OpenApprovalEntriesExistForCurrUser;
                PartType=Page }

    { 1100529900;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                PartType=Page }

    { 1210190001;1;Part   ;
                Name=[Purchase VAT ];
                SubPageLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(Document No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11130181;
                ProviderID=46;
                PartType=Page }

    { 1906354007;1;Part   ;
                SubPageLink=Table ID=CONST(38),
                            Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.);
                PagePartID=Page9092;
                Visible=FALSE;
                PartType=Page }

    { 1901138007;1;Part   ;
                SubPageLink=No.=FIELD(Buy-from Vendor No.);
                PagePartID=Page9093;
                Visible=FALSE;
                PartType=Page }

    { 1904651607;1;Part   ;
                SubPageLink=No.=FIELD(Pay-to Vendor No.);
                PagePartID=Page9094;
                Visible=TRUE;
                PartType=Page }

    { 1903435607;1;Part   ;
                SubPageLink=No.=FIELD(Buy-from Vendor No.);
                PagePartID=Page9095;
                Visible=TRUE;
                PartType=Page }

    { 1906949207;1;Part   ;
                SubPageLink=No.=FIELD(Pay-to Vendor No.);
                PagePartID=Page9096;
                Visible=FALSE;
                PartType=Page }

    { 29  ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                PagePartID=Page193;
                PartType=Page;
                ShowFilter=No }

    { 5   ;1   ;Part      ;
                SubPageLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(Document No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page9100;
                ProviderID=46;
                Visible=FALSE;
                PartType=Page }

    { 45  ;1   ;Part      ;
                Name=WorkflowStatus;
                PagePartID=Page1528;
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1100409004;1;Part   ;
                SubPageLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.);
                PagePartID=Page11130225;
                Visible=FALSE;
                PartType=Page }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      PurchSetup@150000 : Record 312;
      ChangeExchangeRate@1001 : Page 511;
      CopyPurchDoc@1002 : Report 492;
      MoveNegPurchLines@1005 : Report 6698;
      ReportPrint@1003 : Codeunit 228;
      UserMgt@1004 : Codeunit 5700;
      PurchCalcDiscByType@1007 : Codeunit 66;
      VendorRec@11012001 : Record 23;
      ScanAppsSetup@1100525000 : Record 11012134;
      gFromReference@1210190001 : Boolean;
      gInvLineNo@1210190000 : Integer;
      PurchHeadExtensionRec@1100525001 : Record 11020398;
      DepAuthRec@1100000997 : Record 11012466;
      GeneratedtTxtConst1@1100000998 : TextConst 'ENU=You are not authorized for Department Code %1.';
      DPA_IsHardFilter@1100000999 : Boolean;
      Text11012001@1100525002 : TextConst 'ENU=Credit Memo %1 created.';
      BankAccountSelect@1210190002 : Text[34];
      BankAccountSelectEditable@1100525004 : Boolean INDATASET;
      gvAmount@1210190004 : Decimal;
      BankNoCheck@1210190005 : Text[3];
      "Interest DateVisible"@19029017 : Boolean INDATASET;
      "Ext. Document IDVisible"@19068947 : Boolean INDATASET;
      BankNoCheckEditable@19051859 : Boolean INDATASET;
      "Ext. Document IDEditable"@19001168 : Boolean INDATASET;
      DocAmountVisible@19073433 : Boolean INDATASET;
      DocAmountVATVisible@19002035 : Boolean INDATASET;
      "Payment AgreementEditable"@19078437 : Boolean INDATASET;
      "Actual Effective DateEditable"@19052142 : Boolean INDATASET;
      "Actual End DateEditable"@19011700 : Boolean INDATASET;
      "Number of HoursEditable"@19032395 : Boolean INDATASET;
      ContributionPercentageLaborEdi@19054050 : Boolean INDATASET;
      ContributionPercentageTotalEdi@19030746 : Boolean INDATASET;
      "Avg. Wage RateEditable"@19003838 : Boolean INDATASET;
      "Labor AmountEditable"@19041756 : Boolean INDATASET;
      "Pay To Tax AuthorityEditable"@19017584 : Boolean INDATASET;
      WageChargetoBAccountEditable@19062124 : Boolean INDATASET;
      WageChargetoTaxAuthorityEditab@19058677 : Boolean INDATASET;
      MemoWKAEditable@19038952 : Boolean INDATASET;
      "VAT AmountEditable"@19075252 : Boolean INDATASET;
      "Amount excl. VATEditable"@19000869 : Boolean INDATASET;
      "Invoice Lines InputEditable"@1100525003 : Boolean INDATASET;
      DocAmountEnable@19024812 : Boolean INDATASET;
      DocAmountVATEnable@19071676 : Boolean INDATASET;
      JobQueueVisible@1000 : Boolean INDATASET;
      HasIncomingDocument@1010 : Boolean;
      DocNoVisible@1006 : Boolean;
      VendorCreditMemoNoMandatory@1008 : Boolean;
      OpenApprovalEntriesExist@1009 : Boolean;
      OpenApprovalEntriesExistForCurrUser@1012 : Boolean;
      ShowWorkflowStatus@1011 : Boolean;
      FieldsEditable@1210190102 : Boolean INDATASET;
      "On HoldEditable"@1210190103 : Boolean INDATASET;
      "*** ExFlow ***"@12013591 : Integer;
      ExFlow@12013595 : Codeunit 12013601;

    LOCAL PROCEDURE Post@4(PostingCodeunitID@1000 : Integer);
    BEGIN
      SendToPosting(PostingCodeunitID);
      IF "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting" THEN
        CurrPage.CLOSE;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CurrPage.PurchLines.PAGE.ApproveCalcInvDisc;
    END;

    PROCEDURE EnableControls@1101100000();
    BEGIN
      //**4PS.sn  Setup PurchSetup."Check Doc. Total Amounts" not used by 4PS, so always not visible
      DocAmountVisible := (FALSE);
      DocAmountVATVisible := (FALSE);
      //**4PS.en
    END;

    PROCEDURE BuyfromVendorNoOnAfterValidate@19032492();
    BEGIN
      //**4PS.n Procedure made global
      IF GETFILTER("Buy-from Vendor No.") = xRec."Buy-from Vendor No." THEN
        IF "Buy-from Vendor No." <> xRec."Buy-from Vendor No." THEN
          SETRANGE("Buy-from Vendor No.");
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PurchaserCodeOnAfterValidate@19046120();
    BEGIN
      CurrPage.PurchLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE PaytoVendorNoOnAfterValidate@19048314();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@19029405();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@19008725();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PricesIncludingVATOnAfterValid@19009096();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE AfterGetCurrentRecord@19077479();
    VAR
      RecRef@1100528700 : RecordRef;
    BEGIN
      xRec := Rec;
      //**4PS.sn
      PurchHeadExtensionRec.GetPurchHeadExtension("Document Type", "No.");
      SetFieldsEditable(FALSE);

      RecRef.GETTABLE(Rec);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(TRUE);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode("Shortcut Dimension 1 Code");
      //**4PS.en
    END;

    LOCAL PROCEDURE OnActivateForm@19002417();
    BEGIN
      EnableControls;
    END;

    LOCAL PROCEDURE SetDocNoVisible@2();
    VAR
      DocumentNoVisibility@1001 : Codeunit 1400;
      DocType@1000 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Reminder,FinChMemo';
    BEGIN
      DocNoVisible := DocumentNoVisibility.PurchaseDocumentNoIsVisible(DocType::"Credit Memo","No.");
    END;

    LOCAL PROCEDURE SetExtDocNoMandatoryCondition@3();
    VAR
      PurchasesPayablesSetup@1000 : Record 312;
    BEGIN
      PurchasesPayablesSetup.GET;
      VendorCreditMemoNoMandatory := PurchasesPayablesSetup."Ext. Doc. No. Mandatory"
    END;

    LOCAL PROCEDURE SetControlAppearance@5();
    VAR
      ApprovalsMgmt@1002 : Codeunit 1535;
    BEGIN
      JobQueueVisible := "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting";
      HasIncomingDocument := "Incoming Document Entry No." <> 0;
      SetExtDocNoMandatoryCondition;

      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
    END;

    PROCEDURE InitSelectionFromReference@1210190002(IInvLineNo@1210190000 : Integer);
    BEGIN
      //**4PS
      gFromReference := TRUE;
      gInvLineNo := IInvLineNo;
    END;

    PROCEDURE ShowICFInvoiceLines@1210190000();
    VAR
      ICFLineRec@1210190000 : Record 11012327;
    BEGIN
      //**4PS
      ICFLineRec.RESET;
      ICFLineRec.SETRANGE(Vendor, "Pay-to Vendor No.");
      ICFLineRec.SETRANGE("Invoice No.", "No.");
      IF ICFLineRec.FIND('-') THEN
        PAGE.RUNMODAL(PAGE::"ICF Invoices", ICFLineRec);
    END;

    PROCEDURE SetFieldsEditable@1100525001(NewRec@1100525000 : Boolean);
    VAR
      WKA@1100525002 : Boolean;
      RecEditable@1100525001 : Boolean;
    BEGIN
      //**4PS
      IF VendorRec."No." <> "Buy-from Vendor No." THEN
        IF NOT VendorRec.GET("Buy-from Vendor No.") THEN BEGIN
          VendorRec."Security Fund" := FALSE;
          VendorRec.SWP := FALSE;
        END;

      WKA := "Subcontracting Invoice" AND NOT VendorRec."Security Fund" AND
             PurchSetup."Credit Memo by G-Account allow"; // C002607.n

      ContributionPercentageLaborEdi := WKA;
      ContributionPercentageTotalEdi := WKA;
      //"Payment AgreementEditable" := ("Subcontracting Invoice"); // C002607.o
      "Payment AgreementEditable" := ("Subcontracting Invoice" AND PurchSetup."Credit Memo by G-Account allow"); // C002607.n
      "Actual Effective DateEditable" := (WKA);
      "Actual End DateEditable" := (WKA);
      "Number of HoursEditable" := (WKA);
      "Avg. Wage RateEditable" := (WKA AND NOT VendorRec.SWP);
      "Labor AmountEditable" := (WKA AND NOT VendorRec.SWP);
      "Pay To Tax AuthorityEditable" := (WKA AND NOT VendorRec.SWP);
      WageChargetoBAccountEditable := (WKA AND NOT VendorRec.SWP AND NOT "Pay To Tax Authority");
      WageChargetoTaxAuthorityEditab := (WKA AND "Pay To Tax Authority");
      MemoWKAEditable := (WKA);
      "VAT AmountEditable" := ("Manually VAT Posting");
      "Amount excl. VATEditable" := ("Manually VAT Posting");
      "Invoice Lines InputEditable" := (PurchSetup."Approve Purchase Invoices");  //T003810

      BankAccountSelectEditable := PurchSetup."Invoices on Bank Account" AND CurrPage.EDITABLE;

      //Managemind exceptions
      IF PurchSetup."Scanning Application Purch.Inv" <> PurchSetup."Scanning Application Purch.Inv"::Managemind THEN
        EXIT;

      IF NOT ScanAppsSetup.GET THEN
        EXIT;

      RecEditable := NewRec OR ("Ext. Document ID" = '');

      CASE ScanAppsSetup."Permissions Invoice Header" OF
        ScanAppsSetup."Permissions Invoice Header"::"On Hold not editable":
          "On HoldEditable" := RecEditable;
        ScanAppsSetup."Permissions Invoice Header"::"Invoice Header not editable":
          BEGIN

            FieldsEditable := RecEditable;

            "Amount excl. VATEditable" := (RecEditable AND "Manually VAT Posting");
            "VAT AmountEditable" := (RecEditable AND "Manually VAT Posting");
            "Invoice Lines InputEditable" := (RecEditable AND PurchSetup."Approve Purchase Invoices"); //T003810

            "Ext. Document IDEditable" := (RecEditable);
            "On HoldEditable" := RecEditable;
          END;
      END;
    END;

    PROCEDURE ValidateRelatedPurchOrder@1100525002();
    BEGIN
      //**4PS (C006225)
      CurrPage.UPDATE;
      COMMIT; //11-03-2014
      IF GetReceiptsRelatedOrderAutomat(Rec) THEN BEGIN
        GET("Document Type", "No.");
        CurrPage.UPDATE;
      END;
    END;

    PROCEDURE WhiteVisionStart@1100528300();
    VAR
      WhiteVisionMgt@1100528300 : Codeunit 11012084;
    BEGIN
      //**4PS
      IF (PurchSetup."Scanning Application Purch.Inv" <> PurchSetup."Scanning Application Purch.Inv"::Whitevision) THEN
        EXIT;

      WhiteVisionMgt.LoadDocuments("No.", FALSE);
    END;

    PROCEDURE WhiteVisionStop@1100528301();
    VAR
      WhiteVisionMgt@1100528300 : Codeunit 11012084;
    BEGIN
      //**4PS
      IF (PurchSetup."Scanning Application Purch.Inv" <> PurchSetup."Scanning Application Purch.Inv"::Whitevision) THEN
        EXIT;

      WhiteVisionMgt.Stop;
    END;

    PROCEDURE WhiteVisionActivateField@1100528303(FieldName@1100528301 : Text[30];FieldType@1100528302 : Option) : Text[250];
    VAR
      WhiteVisionMgt@1100528300 : Codeunit 11012084;
    BEGIN
      //**4PS
      //FieldType:
      //0: Text
      //1: Decimal
      //2: Date
      //3: Money
      //4: RegEx

      IF (PurchSetup."Scanning Application Purch.Inv" <> PurchSetup."Scanning Application Purch.Inv"::Whitevision) THEN
        EXIT('');

      EXIT(WhiteVisionMgt.ActivateField(FieldName, FieldType));
    END;

    LOCAL PROCEDURE AmountinclVATOnAfterValidate@19037268();
    BEGIN
      //**4PS
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE VATAmountOnAfterValidate@19038655();
    BEGIN
      //**4PS
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SubcontractingInvoiceOnAfterVa@19014981();
    BEGIN
      //**4PS
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE VATProdPostingGroupOnAfterVali@19001691();
    BEGIN
      //**4PS
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE WageChargetoBAccountOnAfterVal@19015148();
    BEGIN
      //**4PS
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE PayToTaxAuthorityOnAfterValida@19033144();
    BEGIN
       //**4PS
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE PaymentAgreementOnAfterValidat@19059474();
    BEGIN
      //**4PS
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE NumberofHoursOnAfterValidate@19014369();
    BEGIN
      //**4PS
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE LaborAmountOnAfterValidate@19042394();
    BEGIN
      //**4PS
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE ContributionPercentageLaborOnA@19007239();
    BEGIN
      //**4PS
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE ContributionPercentageTotalOnA@19018232();
    BEGIN
      //**4PS
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE ActualEffectiveDateOnActivate@19016407();
    BEGIN
      //**4PS
      CurrPage.UPDATE(TRUE); //**4PS.n this is necessary to set fields editable in case a payment agreement is selected with a lookup
    END;

    LOCAL PROCEDURE FillSelectBankAccount@1100525000();
    BEGIN
      //**4PS
      IF PurchSetup."Bank Account Check" AND ("Bank No. Check" = '') THEN
        BankAccountSelect := ''
      ELSE
        BankAccountSelect := "Bank Account No.";
    END;

    BEGIN
    {
      4PS 02-02-2007, Peter Schoenmaker, Function "Get Return &Shipment Lines" disabled.
      4PS 24-09-2009 PS, Approval removed
      --- ExFlow --->
      Field General : Approve
      Field General : ExFlowStatus
      Field General : Gross Invoice Amount
      Field General : Imported VAT Amount
      Field General : Block Document
      Action        : Show Document (Code)
      Action        : Attachments
      Globals
      <-- ExFlow ---

      Version List=NAVW19.00.00.44974,NAVSE9.00.00.44974;
    }
    END.
  }
}

