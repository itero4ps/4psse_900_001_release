OBJECT Page 5353 CRM Sales Order List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Microsoft Dynamics CRM Sales Orders;
    SourceTable=Table5353;
    SourceTableView=WHERE(StateCode=FILTER(Submitted),
                          LastBackofficeSubmit=FILTER(''));
    PageType=List;
    CardPageID=CRM Sales Order;
    OnInit=BEGIN
             CODEUNIT.RUN(CODEUNIT::"CRM Integration Management");
           END;

    OnOpenPage=VAR
                 CRMIntegrationManagement@1000 : Codeunit 5330;
               BEGIN
                 CRMIntegrationEnabled := CRMIntegrationManagement.IsCRMIntegrationEnabled;
                 RecalculateCanCreateInNAV;
               END;

    OnAfterGetCurrRecord=BEGIN
                           RecalculateRecordCouplingStatus;
                         END;

    ActionList=ACTIONS
    {
      { 24      ;    ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 25      ;1   ;ActionGroup;
                      Name=ActionGroupCRM;
                      CaptionML=ENU=Dynamics CRM;
                      Visible=CRMIntegrationEnabled }
      { 11      ;2   ;Action    ;
                      Name=CRMGoToSalesOrder;
                      CaptionML=ENU=Sales Order;
                      ToolTipML=ENU=Open the coupled Microsoft Dynamics CRM sales order.;
                      Image=CoupledOrder;
                      OnAction=VAR
                                 CRMIntegrationManagement@1000 : Codeunit 5330;
                               BEGIN
                                 HYPERLINK(
                                   CRMIntegrationManagement.GetCRMEntityUrlFromCRMID(DATABASE::"CRM Salesorder",SalesOrderId));
                               END;
                                }
      { 28      ;1   ;ActionGroup;
                      Name=ActionGroupNAV;
                      CaptionML=ENU=Dynamics NAV;
                      Visible=CRMIntegrationEnabled }
      { 30      ;2   ;Action    ;
                      Name=NAVOpenSalesOrderCard;
                      CaptionML=ENU=Sales Order;
                      ToolTipML=ENU=Open the sales order card.;
                      Visible=CRMIntegrationEnabled;
                      Enabled=CRMIsCoupledToRecord;
                      Image=Order;
                      OnAction=VAR
                                 SalesHeader@1000 : Record 36;
                                 CRMSalesOrderToSalesOrder@1001 : Codeunit 5343;
                               BEGIN
                                 IF NOT CRMSalesOrderToSalesOrder.GetCoupledSalesHeader(Rec,SalesHeader) THEN
                                   ERROR(GETLASTERRORTEXT);
                                 PAGE.RUNMODAL(PAGE::"Sales Order",SalesHeader);
                                 RecalculateRecordCouplingStatus;
                               END;
                                }
      { 29      ;2   ;Action    ;
                      Name=CreateInNAV;
                      CaptionML=ENU=Create in Dynamics NAV;
                      Promoted=Yes;
                      Enabled=CanCreateInNAV;
                      Image=New;
                      OnAction=VAR
                                 SalesHeader@1005 : Record 36;
                                 CRMCouplingManagement@1001 : Codeunit 5331;
                                 CRMSalesOrderToSalesOrder@1000 : Codeunit 5343;
                               BEGIN
                                 IF CRMSalesOrderToSalesOrder.CreateInNAV(Rec,SalesHeader) THEN BEGIN
                                   COMMIT;
                                   CRMIsCoupledToRecord :=
                                     CRMCouplingManagement.IsRecordCoupledToNAV(SalesOrderId,DATABASE::"Sales Header") AND CRMIntegrationEnabled;
                                   PAGE.RUNMODAL(PAGE::"Sales Order",SalesHeader);
                                 END;
                                 RecalculateRecordCouplingStatus;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 26  ;2   ;Field     ;
                Name=Coupled;
                CaptionML=ENU=Coupled;
                SourceExpr=CRMIsCoupledToRecord }

    { 3   ;2   ;Field     ;
                CaptionML=ENU=Order ID;
                SourceExpr=OrderNumber }

    { 4   ;2   ;Field     ;
                CaptionML=ENU=Name;
                SourceExpr=Name }

    { 5   ;2   ;Field     ;
                CaptionML=ENU=Transaction Currency;
                SourceExpr=TransactionCurrencyIdName }

    { 6   ;2   ;Field     ;
                CaptionML=ENU=Price List;
                SourceExpr=PriceLevelIdName }

    { 7   ;2   ;Field     ;
                CaptionML=ENU=Prices Locked;
                SourceExpr=IsPriceLocked }

    { 8   ;2   ;Field     ;
                CaptionML=ENU=Total Amount;
                SourceExpr=TotalAmount }

    { 9   ;2   ;Field     ;
                CaptionML=ENU=Status;
                SourceExpr=StateCode }

    { 10  ;2   ;Field     ;
                CaptionML=ENU=Status Reason;
                SourceExpr=StatusCode }

    { 12  ;2   ;Field     ;
                CaptionML=ENU=Requested Delivery Date;
                SourceExpr=RequestDeliveryBy }

    { 13  ;2   ;Field     ;
                CaptionML=ENU=Date Fulfilled;
                SourceExpr=DateFulfilled }

    { 14  ;2   ;Field     ;
                CaptionML=ENU=Shipping Method;
                SourceExpr=ShippingMethodCode }

    { 15  ;2   ;Field     ;
                CaptionML=ENU=Payment Terms;
                SourceExpr=PaymentTermsCode }

    { 16  ;2   ;Field     ;
                CaptionML=ENU=Freight Terms;
                SourceExpr=FreightTermsCode }

    { 17  ;2   ;Field     ;
                CaptionML=ENU=Bill To Address;
                SourceExpr=BillTo_Composite }

    { 18  ;2   ;Field     ;
                CaptionML=ENU=Ship To;
                SourceExpr=WillCall }

    { 19  ;2   ;Field     ;
                CaptionML=ENU=Ship To Address;
                SourceExpr=ShipTo_Composite }

    { 20  ;2   ;Field     ;
                CaptionML=ENU=Opportunity;
                SourceExpr=OpportunityIdName }

    { 21  ;2   ;Field     ;
                CaptionML=ENU=Quote;
                SourceExpr=QuoteIdName }

    { 22  ;2   ;Field     ;
                CaptionML=ENU=Account;
                SourceExpr=GetCustomerName }

    { 23  ;2   ;Field     ;
                CaptionML=ENU=Contact;
                SourceExpr=ContactIdName }

  }
  CODE
  {
    VAR
      CRMIntegrationEnabled@1000 : Boolean;
      CRMIsCoupledToRecord@1001 : Boolean;
      CanCreateInNAV@1003 : Boolean;

    LOCAL PROCEDURE RecalculateRecordCouplingStatus@2();
    VAR
      CRMSalesOrderToSalesOrder@1000 : Codeunit 5343;
    BEGIN
      CRMIsCoupledToRecord := CRMSalesOrderToSalesOrder.CRMIsCoupledToValidRecord(Rec,DATABASE::"Sales Header");
      RecalculateCanCreateInNAV;
    END;

    LOCAL PROCEDURE GetCustomerName@1() : Text;
    VAR
      CRMAccount@1000 : Record 5341;
      CRMContact@1001 : Record 5342;
    BEGIN
      IF (CustomerIdType = CustomerIdType::account) AND (NOT ISNULLGUID(CustomerId)) THEN BEGIN
        IF CRMAccount.GET(CustomerId) THEN
          EXIT(CRMAccount.Name);
      END ELSE
        IF CustomerIdType = CustomerIdType::contact THEN
          IF  CRMContact.GET(CustomerId) THEN
            IF CRMAccount.GET(CRMContact.ParentCustomerId) THEN
              EXIT(CRMAccount.Name);
    END;

    LOCAL PROCEDURE RecalculateCanCreateInNAV@9();
    BEGIN
      IF COUNT = 0 THEN
        CanCreateInNAV := FALSE
      ELSE
        CanCreateInNAV := CRMIntegrationEnabled AND NOT CRMIsCoupledToRecord;
    END;

    BEGIN
    END.
  }
}

