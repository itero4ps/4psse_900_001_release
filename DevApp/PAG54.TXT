OBJECT Page 54 Purchase Order Subform
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00.00.45480,NAVSE9,NAVFI9,4PS9.00,EXF400000;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    MultipleNewLines=No;
    LinksAllowed=No;
    SourceTable=Table39;
    DelayedInsert=Yes;
    SourceTableView=WHERE(Document Type=FILTER(Order));
    PageType=ListPart;
    AutoSplitKey=Yes;
    RefreshOnActivate=Yes;
    OnInit=BEGIN
             //**4PS.sn
             TradeItemEnabled := TRUE;
             NoIsEditable := TRUE;
             CostTypeEditable := TRUE;
             ItemEditable := TRUE;
             TariffNoEditable := TRUE;
             NetWeightEditable := TRUE;
             PlantTypeEditable := TRUE;
             PlantNoEditable := TRUE;
             CostComponentEditable := TRUE;
             TypeEditable := TRUE;
             QuantityEditable := TRUE;
             AmountEditable := TRUE;
             QtyToInvoiceEditable := TRUE;
             AmntToInvoiceEditable := TRUE;
             ExpectedBackOrderDateEditable := TRUE;
             AdditionalCostServiceEditable := TRUE;
             StratPurchaseFieldsEditable := TRUE;
             AmountIncludingVATEditable := TRUE;
             //**4PS.en
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 //**4PS.sn
                 IF JobsSetup.GET() THEN;
                 IF ServiceSetup.GET() THEN;

                 PurchSetup.GET;
                 IF NOT ItemSetup.READPERMISSION THEN
                   TradeItemEnabled := FALSE;
                 InvtSetup.GET;  //C021402.n

                 FILTERGROUP(4);
                 PurchHeader.SETRANGE("Document Type", PurchHeader."Document Type"::Order);
                 PurchHeader.SETFILTER("No.", GETFILTER("Document No."));
                 PurchHeader.SETRANGE("Amounts only", TRUE);
                 FILTERGROUP(0);
                 IF PurchHeader.FINDFIRST THEN
                   SCClaimsEnabled := TRUE;
                 //**4PS.en
               END;

    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                       TypeChosen := HasTypeToFillMandatotyFields;
                       CLEAR(DocumentTotals);

                       //**4PS.sn
                       IF "Document No." <> '' THEN BEGIN
                         "UnitCost/BaseUnit" := GetPurchaseUnitPrice(0);
                         "UnitPrice/BaseUnit" := GetPurchaseUnitPrice(1);
                         "UnitCost/PurchUnit":= GetPurchaseUnitPrice(2);
                         GetItemSpecifications;
                       END;
                       GetBaseQuanUnit(BaseQuan, BaseUnit);
                       IF gFromReference THEN BEGIN
                         gFromReference := FALSE;
                         SETRANGE("Line No.");
                       END;
                       DetermineBackOrderQuantity;

                       PurchaseLineExtension.GetPurchLineExtension("Document Type", "Document No.", "Line No.");
                       SetSaveFields(); //Call C020806
                       //**4PS.en
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                  InitType;
                  CLEAR(ShortcutDimCode);

                  //**4PS.sn
                  CALCFIELDS("Balance Excl. VAT","Balance Incl. VAT");
                  RefQuote := '';

                  InitRecord;

                  IF PurchHeader.GET("Document Type","Document No.") THEN  // C001383.n
                    IF PurchHeader.Status = PurchHeader.Status::Open THEN // C001383.n
                      GetVendorPreferenceAccountNo();

                  ShowShortcutDimCode(ShortcutDimCode);
                  //**4PS.en
                END;

    OnDeleteRecord=VAR
                     ReservePurchLine@1000 : Codeunit 99000834;
                   BEGIN
                     IF (Quantity <> 0) AND ItemExists("No.") THEN BEGIN
                       COMMIT;
                       IF NOT ReservePurchLine.DeleteLineConfirm(Rec) THEN
                         EXIT(FALSE);
                       ReservePurchLine.DeleteLine(Rec);
                     END;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           IF PurchHeader.GET("Document Type","Document No.") THEN;

                           //**4PS.so C023496
                           //DocumentTotals.PurchaseUpdateTotalsControls(Rec,TotalPurchaseHeader,TotalPurchaseLine,RefreshMessageEnabled,
                           //  TotalAmountStyle,RefreshMessageText,InvDiscAmountEditable,VATAmount);
                           //**4PS.eo
                           //**4PS.sn
                           RefQuote := RouteRefMgtCU.GetQuoteOfReference("Purchase Route Reference");
                           PurchaseLineExtension.GetPurchLineExtension("Document Type", "Document No.", "Line No.");
                           SetEditable;
                           //**4PS.en
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1906421304;2 ;ActionGroup;
                      CaptionML=ENU=Item Availability by;
                      Image=ItemAvailability }
      { 5       ;3   ;Action    ;
                      CaptionML=ENU=Event;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByEvent)
                               END;
                                }
      { 1902027204;3 ;Action    ;
                      CaptionML=ENU=Period;
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByPeriod)
                               END;
                                }
      { 1901633104;3 ;Action    ;
                      CaptionML=ENU=Variant;
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByVariant)
                               END;
                                }
      { 1902479904;3 ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=ENU=Location;
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByLocation)
                               END;
                                }
      { 3       ;3   ;Action    ;
                      CaptionML=ENU=BOM Level;
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByBOM)
                               END;
                                }
      { 1100528300;2 ;Action    ;
                      CaptionML=ENU=I&tem Inventory by Company;
                      Image=IntercompanyOrder;
                      OnAction=BEGIN
                                 ShowItemInventoryByCompany;
                               END;
                                }
      { 1902085804;2 ;Action    ;
                      AccessByPermission=TableData 27=R;
                      CaptionML=ENU=Reservation Entries;
                      Image=ReservationLedger;
                      OnAction=BEGIN
                                 ShowReservationEntries(TRUE);
                               END;
                                }
      { 1905987604;2 ;Action    ;
                      Name=Item Tracking Lines;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Item &Tracking Lines;
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
      { 1903984904;2 ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1903079404;2 ;Action    ;
                      CaptionML=ENU=Co&mments;
                      Image=ViewComments;
                      OnAction=BEGIN
                                 ShowLineComments;
                               END;
                                }
      { 1907184504;2 ;Action    ;
                      Name=ItemChargeAssignment;
                      AccessByPermission=TableData 5800=R;
                      CaptionML=ENU=Item Charge &Assignment;
                      Image=ItemCosts;
                      OnAction=BEGIN
                                 ShowItemChargeAssgnt;
                               END;
                                }
      { 23      ;2   ;Action    ;
                      Name=DeferralSchedule;
                      CaptionML=ENU=Deferral Schedule;
                      Enabled="Deferral Code" <> '';
                      Image=PaymentPeriod;
                      OnAction=BEGIN
                                 PurchHeader.GET("Document Type","Document No.");
                                 ShowDeferrals(PurchHeader."Posting Date",PurchHeader."Currency Code")
                               END;
                                }
      { 1905243004;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+N;
                      CaptionML=ENU=Rental Rate External Rented Plant;
                      Image=Payment;
                      OnAction=BEGIN
                                 //**4PS   C-013114: Nu onder knop 'Regel', was eerst een verborgen knop (functioneel ongewijzigd).
                                 //This functionality was copied from page #50. Unsupported part was commented. Please check it.
                                 {CurrPage.PurchLines.PAGE.}
                                 ShowPurchOrderPlantRentalRate();
                               END;
                                }
      { 1210190003;2 ;Action    ;
                      CaptionML=ENU=Purchase Line D&etails;
                      Image=ViewCheck;
                      OnAction=BEGIN
                                 //**4PS.n  //kzwerver, 110606, n, #27784
                                 EditLineDetails;
                               END;
                                }
      { 1904103004;2 ;Action    ;
                      CaptionML=ENU=Purchase Route References;
                      Image=ContactReference;
                      OnAction=BEGIN
                                 //**4PS
                                 //This functionality was copied from page #50. Unsupported part was commented. Please check it.
                                 {CurrPage.PurchLines.PAGE.}
                                 ShowPurchRouteRef;
                               END;
                                }
      { 1100409003;2 ;Action    ;
                      CaptionML=ENU=Guarantee;
                      RunObject=Page 11229266;
                      RunPageLink=Purchase Order=FIELD(Document No.),
                                  Purchase Line=FIELD(Line No.);
                      Image=Splitlines }
      { 1100528200;2 ;Action    ;
                      CaptionML=ENU=SC Claims;
                      RunObject=Page 11126620;
                      RunPageLink=Purchase Order=FIELD(Document No.),
                                  Purchase Line=FIELD(Line No.);
                      Enabled=SCClaimsEnabled;
                      Image=Splitlines }
      { 1905888504;2 ;Action    ;
                      CaptionML=ENU=Text Block;
                      Image=Text;
                      OnAction=BEGIN
                                 //**4PS
                                 //This functionality was copied from page #50. Unsupported part was commented. Please check it.
                                 {CurrPage.PurchLines.PAGE.}
                                 EditText;
                               END;
                                }
      { 1100528400;2 ;Action    ;
                      CaptionML=ENU=Insert Consent Lines;
                      Image=BOMLedger;
                      OnAction=BEGIN
                                 //**4PS
                                 EditConsentLines;
                               END;
                                }
      { 1210190006;2 ;ActionGroup;
                      CaptionML=ENU=GS1 Loggings;
                      Image=Journals }
      { 1210190008;3 ;Action    ;
                      CaptionML=ENU=GS1 Errors;
                      Image=ErrorFALedgerEntries;
                      OnAction=BEGIN
                                 //**4PS
                                 GS1ErrorLogDrillDown;
                               END;
                                }
      { 1210190010;3 ;Action    ;
                      CaptionML=ENU=GS1 Changes;
                      Image=ChangeStatus;
                      OnAction=BEGIN
                                 //**4PS
                                 GS1PurchaseOrderLogDrillDown;
                               END;
                                }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 1210190012;2 ;Action    ;
                      CaptionML=ENU=Divide Agreed Amount;
                      Image=AmountByPeriod;
                      OnAction=BEGIN
                                 //**4PS
                                 DivideAgreedAmount;
                               END;
                                }
      { 1210190030;2 ;Action    ;
                      CaptionML=ENU=Calculate &Invoice Discount/Charge;
                      Image=CalculateBalanceAccount;
                      OnAction=VAR
                                 PurchaseHeader@1210190001 : Record 38;
                                 lvPresentBeforeRun@1210190000 : Boolean;
                               BEGIN
                                 //**4PS.sn
                                 PurchaseHeader.GET("Document Type", "Document No.");
                                 IF (PurchaseHeader."Purchase Order Type" = PurchaseHeader."Purchase Order Type"::"Return Order") AND
                                    (PurchaseHeader."Vendor Posting Group" <> '')
                                 THEN
                                   lvPresentBeforeRun := CheckAdminCostLinePresent(FALSE);
                                 //**4PS.en

                                 ApproveCalcInvDisc;

                                 //**4PS.sn
                                 IF (PurchaseHeader."Purchase Order Type" = PurchaseHeader."Purchase Order Type"::"Return Order") AND
                                    (PurchaseHeader."Vendor Posting Group" <> '')
                                 THEN BEGIN
                                   IF NOT lvPresentBeforeRun THEN
                                     CheckAdminCostLinePresent(TRUE);
                                 END;
                                 //**4PS.en
                               END;
                                }
      { 1210190032;2 ;Action    ;
                      CaptionML=ENU=&Rejection Registration;
                      Image=MaintenanceRegistrations;
                      OnAction=VAR
                                 PurchaseHeader@1210190000 : Record 38;
                               BEGIN
                                 //**4PS
                                 PurchaseHeader.GET("Document Type", "Document No.");
                                 IF PurchaseHeader."Purchase Order Type" <> PurchaseHeader."Purchase Order Type"::"Return Order" THEN
                                   RejectRegistration
                                 ELSE
                                   ERROR(Text11012008); //**4PS.n
                               END;
                                }
      { 1901312904;2 ;Action    ;
                      AccessByPermission=TableData 90=R;
                      CaptionML=ENU=E&xplode BOM;
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeBOM;
                               END;
                                }
      { 1901313304;2 ;Action    ;
                      Name=Insert Ext. Texts;
                      AccessByPermission=TableData 279=R;
                      CaptionML=ENU=Insert &Ext. Texts;
                      Image=Text;
                      OnAction=BEGIN
                                 InsertExtendedText(TRUE);
                               END;
                                }
      { 1100525003;2 ;Action    ;
                      CaptionML=ENU=Create Installments;
                      Image=AmountByPeriod;
                      OnAction=BEGIN
                                 CreateInstallmentLines;
                               END;
                                }
      { 1906391504;2 ;Action    ;
                      Name=Reserve;
                      Ellipsis=Yes;
                      CaptionML=ENU=&Reserve;
                      Image=Reserve;
                      OnAction=BEGIN
                                 FIND;
                                 ShowReservation;
                               END;
                                }
      { 1903502504;2 ;Action    ;
                      Name=OrderTracking;
                      CaptionML=ENU=Order &Tracking;
                      Image=OrderTracking;
                      OnAction=BEGIN
                                 ShowTracking;
                               END;
                                }
      { 1904848904;2 ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=ENU=Receive Collectively;
                      Image=Approval;
                      OnAction=BEGIN
                                 //**4PS
                                 //This functionality was copied from page #50. Unsupported part was commented. Please check it.
                                 {CurrPage.PurchLines.PAGE.}
                                 ReceiveCollective;
                               END;
                                }
      { 12013594;2   ;Separator  }
      { 12013595;2   ;Action    ;
                      Name=<Action1100285001>;
                      ShortCutKey=Ctrl+Alt+A;
                      CaptionML=ENU=Approval;
                      Image=Approvals;
                      OnAction=BEGIN
                                 // ExFlow
                                 ExFlow.Approve(Rec);
                               END;
                                }
      { 1210190022;2 ;ActionGroup;
                      CaptionML=ENU=Budget Lines;
                      Image=Journals }
      { 1210190024;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy Budget Lines (by Purchase Action);
                      Image=Copy;
                      OnAction=BEGIN
                                 //**4PS
                                 IF ("Document No." <> '') THEN
                                   CopyBudgetLines;
                               END;
                                }
      { 1210190026;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy Budget Lines;
                      Image=Copy;
                      OnAction=VAR
                                 PurchaseHeader@1210190000 : Record 38;
                               BEGIN
                                 //**4PS
                                 IF ("Document No." <> '') THEN BEGIN
                                   PurchaseHeader.GET("Document Type", "Document No.");
                                   SelectBudgetLines(PurchaseHeader);
                                 END;
                               END;
                                }
      { 1905926804;1 ;ActionGroup;
                      CaptionML=ENU=O&rder;
                      Image=Order }
      { 1903621804;2 ;ActionGroup;
                      CaptionML=ENU=Dr&op Shipment;
                      Image=Delivery }
      { 1903563204;3 ;Action    ;
                      AccessByPermission=TableData 110=R;
                      CaptionML=ENU=Sales &Order;
                      Image=Document;
                      OnAction=BEGIN
                                 OpenSalesOrderForm;
                               END;
                                }
      { 1903169104;2 ;ActionGroup;
                      CaptionML=ENU=Speci&al Order;
                      Image=SpecialOrder }
      { 1901038504;3 ;Action    ;
                      AccessByPermission=TableData 110=R;
                      CaptionML=ENU=Sales &Order;
                      Image=Document;
                      OnAction=BEGIN
                                 OpenSpecOrderSalesOrderForm;
                               END;
                                }
      { 1210190034;1 ;Action    ;
                      CaptionML=ENU=Hyperlink;
                      ToolTipML=ENU=Hyperlink;
                      Image=Link;
                      OnAction=BEGIN
                                 //**4PS
                                 VendorItemHyperlink;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 1100528800;2;Field  ;
                AssistEdit=Yes;
                SourceExpr="Line Type";
                Visible=FALSE;
                OnValidate=BEGIN
                             //**4PS
                             StartFastDataEntryForm;
                           END;

                OnAssistEdit=BEGIN
                               //**4PS
                               StartFastDataEntryForm;
                             END;
                              }

    { 126 ;2   ;Field     ;
                SourceExpr="Job No.";
                OnValidate=BEGIN
                             //**4PS
                             // Entity No. might be changed in OnValidate of Job No.
                             PurchaseLineExtension.GetPurchLineExtension("Document Type", "Document No.", "Line No.");
                             SetEditable;
                             ShowShortcutDimCode(ShortcutDimCode);
                           END;

                OnLookup=BEGIN
                           OnLookupJobNo(TRUE);
                           SetEditable;
                         END;
                          }

    { 1101200002;2;Field  ;
                SourceExpr=Element }

    { 1101200000;2;Field  ;
                SourceExpr="Extension Contract";
                Visible=FALSE }

    { 1100485018;2;Field  ;
                SourceExpr="Plot No.";
                Visible=FALSE }

    { 1100485008;2;Field  ;
                SourceExpr="Budget Adjustment";
                Visible=FALSE }

    { 1100525032;2;Field  ;
                SourceExpr="Tender Paragraph";
                Visible=FALSE }

    { 1100525034;2;Field  ;
                SourceExpr="Description Tender Paragraph";
                Visible=FALSE }

    { 1100525036;2;Field  ;
                SourceExpr="Tender Paragraph Text";
                Visible=FALSE }

    { 1100525038;2;Field  ;
                SourceExpr="Tender Paragraph Part";
                Visible=FALSE }

    { 1100525040;2;Field  ;
                SourceExpr="Descr Tender Paragraph Part";
                Visible=FALSE }

    { 1210190015;2;Field  ;
                SourceExpr="Service Order No.";
                OnValidate=BEGIN
                             ShowShortcutDimCode(ShortcutDimCode);
                             NoOnAfterValidate;
                             SetEditable; //**4PS.n
                           END;

                OnLookup=BEGIN
                           OnLookupServiceOrderNo(TRUE);
                           SetEditable;
                         END;
                          }

    { 1210190023;2;Field  ;
                SourceExpr="Service Contract No.";
                Visible=FALSE }

    { 1210190017;2;Field  ;
                SourceExpr="Service Location No.";
                Visible=FALSE }

    { 1100485030;2;Field  ;
                SourceExpr="Service Control Year";
                Visible=FALSE }

    { 1100485006;2;Field  ;
                SourceExpr="Additional Cost (Service)";
                Visible=FALSE;
                Editable=AdditionalCostServiceEditable }

    { 1100485002;2;Field  ;
                SourceExpr="Rental Unit";
                Visible=FALSE }

    { 1101200004;2;Field  ;
                SourceExpr="Cost Type";
                Editable=CostTypeEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1101200006;2;Field  ;
                SourceExpr="Item No.";
                Editable=ItemEditable;
                OnValidate=BEGIN
                             ItemNoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           //**4PS
                           IF HandleLookupItem(FIELDNO("Item No.")) THEN
                             CurrPage.UPDATE(TRUE)  //db, 09-03-07 (call 8283)
                           ELSE
                             IF "Item No." <> xRec."Item No." THEN
                               InsertExtendedText(FALSE);
                         END;

                OnAssistEdit=BEGIN
                               //**4PS
                               IF AssistEditItem THEN BEGIN
                                 InsertExtendedText(FALSE);
                                 CurrPage.UPDATE(TRUE);
                               END;
                             END;
                              }

    { 1100528500;2;Field  ;
                CaptionML=ENU=Service Warranty Code;
                SourceExpr=PurchaseLineExtension."Service Warranty Code";
                TableRelation="Service Warranty";
                OnValidate=BEGIN
                             //**4PS DP00121
                             PurchaseLineExtension.VALIDATE("Service Warranty Code");
                             PurchaseLineExtension.UpdatePurchLineExtension("Document Type", "Document No.", "Line No.");
                             CurrPage.SAVERECORD;
                           END;
                            }

    { 1210190051;2;Field  ;
                SourceExpr="Item Category Code";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 1101200008;2;Field  ;
                SourceExpr=Manufacturer;
                Visible=False;
                Enabled=TradeItemEnabled;
                Editable=ItemEditable;
                OnLookup=VAR
                           Manufact@1210190002 : Code[20];
                         BEGIN
                           //**4PS
                           //GabiVendorRec.HandleVendorLookup(1, Manufacturer);
                           Manufact := Manufacturer;
                           GabiVendorRec.HandleVendorLookup(1, Manufact);
                           VALIDATE(Manufacturer, Manufact);
                         END;
                          }

    { 1101200010;2;Field  ;
                SourceExpr="Basic Item";
                Visible=False;
                Enabled=TradeItemEnabled;
                Editable=ItemEditable;
                OnValidate=BEGIN
                             BasicItemOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           //**4PS
                           IF HandleLookupItem(FIELDNO("Basic Item")) THEN
                             CurrPage.UPDATE(TRUE)  //db, 09-03-07 (call 8283)
                           ELSE
                             IF "Basic Item" <> xRec."Basic Item" THEN
                               InsertExtendedText(FALSE);
                         END;
                          }

    { 1101200012;2;Field  ;
                SourceExpr="Vendor (Trade Item)";
                Visible=False;
                Enabled=TradeItemEnabled;
                Editable=ItemEditable;
                OnLookup=VAR
                           lvItem@1100485000 : Code[20];
                         BEGIN
                           //**4PS
                           lvItem := "Vendor (Trade Item)";
                           GabiVendorRec.HandleVendorLookup(2, lvItem);
                           VALIDATE("Vendor (Trade Item)", lvItem);
                         END;
                          }

    { 1100529100;2;Field  ;
                SourceExpr="Buy-from Vendor No." }

    { 1101200014;2;Field  ;
                SourceExpr="Trade Item";
                Visible=False;
                Enabled=TradeItemEnabled;
                Editable=ItemEditable;
                OnValidate=BEGIN
                             TradeItemOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           //**4PS
                           IF HandleLookupItem(FIELDNO("Trade Item")) THEN
                             CurrPage.UPDATE(TRUE)  //db, 09-03-07 (call 8283)
                           ELSE
                             IF "Trade Item" <> xRec."Trade Item" THEN
                               InsertExtendedText(FALSE);
                         END;

                OnAssistEdit=BEGIN
                               IF (HandleAssistEditItem(FIELDNO("Trade Item"))) THEN
                                 CurrPage.UPDATE(TRUE);
                             END;
                              }

    { 1100485012;2;Field  ;
                SourceExpr="Item Brand";
                Visible=FALSE }

    { 1100485014;2;Field  ;
                SourceExpr="Item Type";
                Visible=FALSE }

    { 1100485016;2;Field  ;
                SourceExpr="Item Series";
                Visible=FALSE }

    { 1100485020;2;Field  ;
                SourceExpr="Vendor Item No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525000;2;Field  ;
                SourceExpr="Tariff No.";
                Visible=FALSE;
                Editable=TariffNoEditable }

    { 1100525002;2;Field  ;
                SourceExpr="Net Weight";
                Visible=FALSE;
                Editable=NetWeightEditable }

    { 1210190027;2;Field  ;
                SourceExpr="Plant Type";
                Editable=PlantTypeEditable;
                OnValidate=BEGIN
                             PlantTypeOnAfterValidate;
                             SetEditable;
                           END;

                OnLookup=BEGIN
                           OnLookupPlantType(PlantTypeEditable);
                           SetEditable;
                         END;
                          }

    { 1100485000;2;Field  ;
                SourceExpr="Vendor Plant No.";
                Visible=FALSE;
                Editable=PlantTypeEditable;
                OnValidate=BEGIN
                             VendorPlantNoOnAfterValidate;
                           END;
                            }

    { 1210190029;2;Field  ;
                SourceExpr="Plant No.";
                Editable=PlantNoEditable;
                OnValidate=BEGIN
                             PlantNoOnAfterValidate;
                           END;
                            }

    { 1210190031;2;Field  ;
                SourceExpr="Cost Component Plant";
                Editable=PlantNoEditable;
                OnValidate=BEGIN
                             //**4PSmg.sn, 25-05-11: M25024
                             IF "Cost Component Plant" <> xRec."Cost Component Plant" THEN
                               FillShipToLocWithPlantDepot();
                             //**4PSmg.en
                             CostComponentPlantOnAfterValid;
                           END;
                            }

    { 1100409000;2;Field  ;
                SourceExpr="Plant Location";
                Visible=FALSE }

    { 1100485911;2;Field  ;
                SourceExpr="Plant Transport Order No.";
                Visible=FALSE }

    { 1100485902;2;Field  ;
                SourceExpr="Plant Order No.";
                Visible=FALSE }

    { 1100485904;2;Field  ;
                Lookup=No;
                SourceExpr="Plant Order Line No.";
                Visible=FALSE }

    { 1100525005;2;Field  ;
                CaptionML=ENU=Plant Inspection No.;
                SourceExpr=GetPlantInspectionNo;
                Visible=false;
                Editable=false }

    { 1100485028;2;Field  ;
                SourceExpr="Expected Enddate Rent";
                Visible=FALSE }

    { 1100485906;2;Field  ;
                SourceExpr="Direct Delivery Plant";
                Visible=FALSE }

    { 1100525001;2;Field  ;
                SourceExpr="No Project Stock";
                Visible=FALSE;
                Editable=NoProjectStockEditable }

    { 78  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                           END;
                            }

    { 76  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                LookupPageID=Cost Object List;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1100485010;2;Field  ;
                SourceExpr="Cost Component";
                Editable=CostComponentEditable }

    { 1100529000;2;Field  ;
                SourceExpr="FSC Type Code";
                Visible=FALSE }

    { 1101200018;2;Field  ;
                SourceExpr="Purchase Action";
                OnValidate=BEGIN
                             PurchaseActionOnAfterValidate;
                           END;
                            }

    { 1101200020;2;Field  ;
                SourceExpr="Purchase Phase" }

    { 62  ;2   ;Field     ;
                SourceExpr="Cross-Reference No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             CrossReferenceNoOnAfterValidat;
                             NoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           CrossReferenceNoLookUp;
                           InsertExtendedText(FALSE);
                           NoOnAfterValidate;
                         END;
                          }

    { 1108;2   ;Field     ;
                SourceExpr="IC Partner Code";
                Visible=FALSE }

    { 104 ;2   ;Field     ;
                SourceExpr="IC Partner Ref. Type";
                Visible=FALSE }

    { 106 ;2   ;Field     ;
                SourceExpr="IC Partner Reference";
                Visible=FALSE }

    { 82  ;2   ;Field     ;
                SourceExpr=Nonstock;
                Visible=FALSE }

    { 2   ;2   ;Field     ;
                SourceExpr=Type;
                Editable=TypeEditable;
                OnValidate=BEGIN
                             GetVendorPreferenceAccountNo();  //**4PS.n
                             NoOnAfterValidate;
                             TypeChosen := HasTypeToFillMandatotyFields;

                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 4   ;2   ;Field     ;
                SourceExpr="No.";
                Editable=NoIsEditable;
                OnValidate=BEGIN
                             ShowShortcutDimCode(ShortcutDimCode);
                             NoOnAfterValidate;

                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           //**4PS
                           SetEditable;
                           OnLookupFieldNo(NoIsEditable);
                           InsertExtendedText(FALSE);
                         END;

                ShowMandatory=TypeChosen }

    { 6   ;2   ;Field     ;
                SourceExpr=Description;
                Editable=StratPurchaseFieldsEditable }

    { 1101200022;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 1210190025;2;Field  ;
                SourceExpr="Text Block";
                Visible=FALSE }

    { 1210190047;2;Field  ;
                CaptionML=ENU=Comments;
                SourceExpr=LineCommentPresent();
                Visible=FALSE }

    { 1100525008;2;Field  ;
                SourceExpr="Comments for Logistics";
                Visible=FALSE }

    { 1210190033;2;Field  ;
                SourceExpr="Price Agreement";
                Visible=FALSE }

    { 80  ;2   ;Field     ;
                SourceExpr="Drop Shipment";
                Visible=FALSE }

    { 88  ;2   ;Field     ;
                SourceExpr="Return Reason Code";
                Visible=FALSE }

    { 74  ;2   ;Field     ;
                SourceExpr="Location Code" }

    { 102 ;2   ;Field     ;
                SourceExpr="Bin Code";
                Visible=FALSE }

    { 1100485004;2;Field  ;
                SourceExpr="Shelf No.";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=Quantity;
                Editable=QuantityEditable;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ShowMandatory=TypeChosen }

    { 42  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Reserved Quantity";
                Visible=FALSE;
                Editable=QuantityEditable }

    { 9   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Job Remaining Qty.";
                Visible=FALSE }

    { 36  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code";
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 10  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 1100525024;2;Field  ;
                CaptionML=ENU=Quantity (Base);
                SourceExpr=BaseQuan;
                Visible=FALSE;
                Editable=FALSE }

    { 1100525026;2;Field  ;
                CaptionML=ENU=Base Unit of Measure;
                SourceExpr=BaseUnit;
                Visible=FALSE;
                Editable=FALSE }

    { 1210190009;2;Field  ;
                BlankZero=Yes;
                SourceExpr="ICM Quantity";
                Visible=FALSE }

    { 1210190011;2;Field  ;
                SourceExpr="ICM Unit";
                Visible=FALSE }

    { 1210190043;2;Field  ;
                SourceExpr="Extra Receipt Line";
                Visible=FALSE;
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Direct Unit Cost";
                Editable=StratPurchaseFieldsEditable;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ShowMandatory=TypeChosen }

    { 28  ;2   ;Field     ;
                SourceExpr="Indirect Cost %";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 30  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Unit Price (LCY)";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 1210190041;2;Field  ;
                SourceExpr="Discount % (Item)";
                Visible=FALSE;
                OnValidate=BEGIN
                             Discount37ItemOnAfterValidate;
                           END;
                            }

    { 68  ;2   ;Field     ;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 1100485032;2;Field  ;
                CaptionML=ENU=Unit Cost per Item Purchase Unit;
                SourceExpr="UnitCost/PurchUnit";
                Visible=FALSE;
                Editable=FALSE }

    { 1210190039;2;Field  ;
                CaptionML=ENU=Unit Cost per Base Unit;
                SourceExpr="UnitCost/BaseUnit";
                Visible=FALSE;
                Editable=FALSE }

    { 1210190037;2;Field  ;
                CaptionML=ENU=Unit Price per Base Unit;
                SourceExpr="UnitPrice/BaseUnit";
                Visible=FALSE;
                Editable=FALSE }

    { 44  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Amount";
                Editable=StratPurchaseFieldsEditable;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 1100525042;2;Field  ;
                SourceExpr="Currency Code";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525044;2;Field  ;
                SourceExpr="Amount (LCY)";
                Visible=FALSE;
                Editable=FALSE }

    { 16  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Discount %";
                Editable=StratPurchaseFieldsEditable;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 60  ;2   ;Field     ;
                SourceExpr="Line Discount Amount";
                Visible=FALSE;
                Editable=StratPurchaseFieldsEditable;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 108 ;2   ;Field     ;
                SourceExpr="Prepayment %";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 110 ;2   ;Field     ;
                SourceExpr="Prepmt. Line Amount";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 112 ;2   ;Field     ;
                SourceExpr="Prepmt. Amt. Inv.";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 58  ;2   ;Field     ;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                SourceExpr="Inv. Discount Amount";
                Visible=FALSE }

    { 1100409002;2;Field  ;
                BlankZero=Yes;
                SourceExpr=Amount;
                Visible=FALSE }

    { 1100409001;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Amount Including VAT";
                Visible=FALSE;
                Editable=AmountIncludingVATEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;  //**4PS.n
                           END;
                            }

    { 18  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Qty. to Receive";
                Editable=QuantityEditable }

    { 11012000;2;Field    ;
                BlankZero=Yes;
                SourceExpr="Amnt. to Receive";
                Visible=FALSE;
                Editable=AmountEditable }

    { 1100525028;2;Field  ;
                SourceExpr="Approve Receipt";
                Visible=FALSE }

    { 1100525030;2;Field  ;
                SourceExpr="Comment Receipt";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Quantity Received" }

    { 11012002;2;Field    ;
                BlankZero=Yes;
                SourceExpr="Amnt. Received" }

    { 22  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Qty. to Invoice";
                Editable=QtyToInvoiceEditable }

    { 11012004;2;Field    ;
                BlankZero=Yes;
                SourceExpr="Amnt. to Invoice";
                Visible=FALSE;
                Editable=AmntToInvoiceEditable }

    { 24  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Quantity Invoiced" }

    { 11012006;2;Field    ;
                BlankZero=Yes;
                SourceExpr="Amnt. Invoiced" }

    { 114 ;2   ;Field     ;
                SourceExpr="Prepmt Amt to Deduct";
                Visible=FALSE }

    { 116 ;2   ;Field     ;
                SourceExpr="Prepmt Amt Deducted";
                Visible=FALSE }

    { 56  ;2   ;Field     ;
                SourceExpr="Allow Item Charge Assignment";
                Visible=FALSE }

    { 66  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Qty. to Assign";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdateForm(FALSE);
                            END;
                             }

    { 54  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Qty. Assigned";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdateForm(FALSE);
                            END;
                             }

    { 130 ;2   ;Field     ;
                SourceExpr="Job Line Type";
                Visible=FALSE }

    { 128 ;2   ;Field     ;
                SourceExpr="Job Task No.";
                Visible=FALSE }

    { 7   ;2   ;Field     ;
                SourceExpr="Job Planning Line No.";
                Visible=FALSE }

    { 132 ;2   ;Field     ;
                SourceExpr="Job Unit Price";
                Visible=FALSE }

    { 134 ;2   ;Field     ;
                SourceExpr="Job Line Amount";
                Visible=FALSE }

    { 136 ;2   ;Field     ;
                SourceExpr="Job Line Discount Amount";
                Visible=FALSE }

    { 138 ;2   ;Field     ;
                SourceExpr="Job Line Discount %";
                Visible=FALSE }

    { 140 ;2   ;Field     ;
                SourceExpr="Job Total Price";
                Visible=FALSE }

    { 142 ;2   ;Field     ;
                SourceExpr="Job Unit Price (LCY)";
                Visible=FALSE }

    { 144 ;2   ;Field     ;
                SourceExpr="Job Total Price (LCY)";
                Visible=FALSE }

    { 146 ;2   ;Field     ;
                SourceExpr="Job Line Amount (LCY)";
                Visible=FALSE }

    { 148 ;2   ;Field     ;
                SourceExpr="Job Line Disc. Amount (LCY)";
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                SourceExpr="Requested Receipt Date";
                Visible=FALSE }

    { 90  ;2   ;Field     ;
                SourceExpr="Promised Receipt Date";
                Visible=FALSE }

    { 92  ;2   ;Field     ;
                SourceExpr="Planned Receipt Date" }

    { 100 ;2   ;Field     ;
                SourceExpr="Expected Receipt Date" }

    { 94  ;2   ;Field     ;
                SourceExpr="Order Date" }

    { 96  ;2   ;Field     ;
                SourceExpr="Lead Time Calculation";
                Visible=FALSE }

    { 84  ;2   ;Field     ;
                SourceExpr="Planning Flexibility";
                Visible=FALSE }

    { 40  ;2   ;Field     ;
                SourceExpr="Prod. Order No.";
                Visible=FALSE }

    { 86  ;2   ;Field     ;
                SourceExpr="Prod. Order Line No.";
                Visible=FALSE }

    { 64  ;2   ;Field     ;
                SourceExpr="Operation No.";
                Visible=FALSE }

    { 70  ;2   ;Field     ;
                SourceExpr="Work Center No.";
                Visible=FALSE }

    { 72  ;2   ;Field     ;
                SourceExpr=Finished;
                Visible=FALSE }

    { 38  ;2   ;Field     ;
                SourceExpr="Whse. Outstanding Qty. (Base)";
                Visible=FALSE }

    { 98  ;2   ;Field     ;
                SourceExpr="Inbound Whse. Handling Time";
                Visible=FALSE }

    { 46  ;2   ;Field     ;
                SourceExpr="Blanket Order No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             BlanketOrderNoOnAfterValidate;
                           END;
                            }

    { 48  ;2   ;Field     ;
                SourceExpr="Blanket Order Line No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             BlanketOrderLineNoOnAfterValid;
                           END;
                            }

    { 52  ;2   ;Field     ;
                SourceExpr="Appl.-to Item Entry";
                Visible=FALSE }

    { 1090000;2;Field     ;
                SourceExpr="Auto. Acc. Group" }

    { 1090002;2;Field     ;
                SourceExpr="Periodic Template Code" }

    { 1090004;2;Field     ;
                SourceExpr="Periodic Starting Date" }

    { 21  ;2   ;Field     ;
                SourceExpr="Deferral Code";
                TableRelation="Deferral Template"."Deferral Code";
                Enabled=(Type <> Type::"Fixed Asset") AND (Type <> Type::" ") }

    { 300 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(3),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 302 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(4),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 304 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(5),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 306 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(6),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 308 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(7),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 310 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(8),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 25  ;2   ;Field     ;
                SourceExpr="Document No.";
                Visible=FALSE;
                Editable=FALSE }

    { 27  ;2   ;Field     ;
                SourceExpr="Line No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525010;2;Field  ;
                SourceExpr="Sales Price";
                Visible=FALSE }

    { 1101200024;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Risc Coverage Amount (LCY)";
                Visible=FALSE }

    { 1101200026;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Release Risc Coverage (LCY)";
                Visible=FALSE }

    { 1100485026;2;Field  ;
                CaptionML=ENU=Backorder Qty.;
                BlankZero=Yes;
                SourceExpr=BackOrderQuantity;
                Visible=FALSE;
                Editable=FALSE;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1100485024;2;Field  ;
                SourceExpr="Expected Back Order Date";
                Visible=FALSE;
                Editable=ExpectedBackOrderDateEditable }

    { 1101200028;2;Field  ;
                SourceExpr="Posting Date";
                Editable=FALSE }

    { 1101200030;2;Field  ;
                SourceExpr="Gen. Prod. Posting Group";
                Visible=FALSE }

    { 1101200032;2;Field  ;
                SourceExpr="VAT Bus. Posting Group";
                Visible=FALSE;
                OnValidate=BEGIN
                             VATBusPostingGroupOnAfterValid;
                           END;
                            }

    { 1101200034;2;Field  ;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE;
                OnValidate=BEGIN
                             VATProdPostingGroupOnAfterVali;
                           END;
                            }

    { 12013588;2;Field    ;
                SourceExpr=Approve;
                Visible=False }

    { 12013589;2;Field    ;
                SourceExpr="First Approver";
                Visible=False }

    { 12013590;2;Field    ;
                SourceExpr="Applied Template Rule";
                Visible=False }

    { 12013591;2;Field    ;
                SourceExpr="Template Rule";
                Visible=False }

    { 12013592;2;Field    ;
                SourceExpr="Approval Flow Modified";
                Visible=False }

    { 12013593;2;Field    ;
                SourceExpr="Fully Matched";
                Visible=False }

    { 1210190005;2;Field  ;
                SourceExpr="ICM Quantity Confirmed";
                Visible=FALSE }

    { 1210190049;2;Field  ;
                CaptionML=ENU=GS1 Quantity Confirmed;
                SourceExpr=PurchaseLineExtension."GS1 Quantity Confirmed";
                Visible=FALSE;
                Editable=FALSE }

    { 1210190057;2;Field  ;
                CaptionML=ENU=GS1 Error Logs;
                SourceExpr=CheckIfGS1ErrorLogsExist;
                Visible=FALSE;
                Editable=FALSE }

    { 1210190007;2;Field  ;
                SourceExpr="ICM Quantity Error";
                Visible=FALSE }

    { 1210190013;2;Field  ;
                CaptionML=ENU=Quote No.;
                SourceExpr=RefQuote;
                Visible=FALSE;
                Editable=FALSE;
                OnLookup=VAR
                           lvPurchHeadRec@1210190000 : Record 38;
                         BEGIN
                           //**4PS
                           IF (RefQuote = '') THEN
                             EXIT;

                           IF (COPYSTR(RefQuote, 1, 1) = '<') THEN  // IF Quote No. is '<Nr.>', then more than one quote present
                             RouteRefMgtCU.ShowReferenceQuoteList("Purchase Route Reference")
                           ELSE BEGIN
                             lvPurchHeadRec.SETRANGE("Document Type", lvPurchHeadRec."Document Type"::Quote);
                             lvPurchHeadRec.SETRANGE("No.", RefQuote);
                             PAGE.RUNMODAL(PAGE::"Purchase Quote", lvPurchHeadRec);
                           END;
                         END;
                          }

    { 1210190035;2;Field  ;
                SourceExpr="Purchase Route Reference";
                Visible=FALSE }

    { 1100485022;2;Field  ;
                SourceExpr="Scheme Code";
                Visible=FALSE }

    { 1210190045;2;Field  ;
                Name=Yard No.;
                CaptionML=ENU=Yard No.;
                SourceExpr=PurchaseLineExtension."Yard No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525014;2;Field  ;
                Name=System No.;
                CaptionML=ENU=System No.;
                SourceExpr=PurchaseLineExtension."System No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525012;2;Field  ;
                Name=Entity Type;
                CaptionML=ENU=Entity Type;
                SourceExpr="Entity Type";
                Visible=FALSE;
                OnValidate=BEGIN
                             //**4PS
                             // Entity No. might be changed in OnValidate of Entity Type.
                             PurchaseLineExtension.GetPurchLineExtension("Document Type", "Document No.", "Line No.");
                             SetEditable;
                           END;
                            }

    { 1100525016;2;Field  ;
                Name=Entity No.;
                CaptionML=ENU=Entity No.;
                SourceExpr=PurchaseLineExtension."Entity No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             //**4PS
                             //Purchase Line must exist in database before Purchase Line Extension can be created.
                             CurrPage.SAVERECORD;
                             ValidateAndSaveEntityNo(PurchaseLineExtension);
                           END;

                OnLookup=BEGIN
                           //**4PS
                           PurchaseLineExtension."Entity No." := GetLookupEntityNo(PurchaseLineExtension);
                           CurrPage.SAVERECORD;
                           ValidateAndSaveEntityNo(PurchaseLineExtension);
                         END;
                          }

    { 1100525018;2;Field  ;
                Name=Cable Transit Pos.;
                CaptionML=ENU=Cable Transit Postion;
                SourceExpr=PurchaseLineExtension."Cable Transit Pos.";
                Visible=FALSE;
                Editable=FALSE;
                OnValidate=BEGIN
                             //**4PS
                             PurchaseLineExtension.UpdatePurchLineExtension("Document Type", "No.", "Line No.");
                             CurrPage.SAVERECORD;
                           END;
                            }

    { 1100485034;2;Field  ;
                SourceExpr="Inward Processing Relief";
                Visible=FALSE }

    { 1100525004;2;Field  ;
                SourceExpr="Sales Order No.";
                Visible=FALSE }

    { 1100525006;2;Field  ;
                SourceExpr="Sales Order Line No.";
                Visible=FALSE }

    { 1100528801;2;Field  ;
                SourceExpr="Special Order Sales No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525022;2;Field  ;
                SourceExpr="Contract Type";
                Visible=FALSE }

    { 1100528301;2;Field  ;
                SourceExpr="Reason Code";
                Visible=false }

    { 1100409004;2;Field  ;
                CaptionML=ENU=Guarantee lines;
                SourceExpr=HasGuaranteeLines;
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ShowGuaranteeLines;
                            END;
                             }

    { 43  ;1   ;Group     ;
                Visible=FALSE;
                GroupType=Group }

    { 37  ;2   ;Group     ;
                GroupType=Group }

    { 35  ;3   ;Field     ;
                Name=Invoice Discount Amount;
                CaptionML=ENU=Invoice Discount Amount;
                SourceExpr=TotalPurchaseLine."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr=TotalPurchaseHeader."Currency Code";
                Editable=InvDiscAmountEditable;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled;
                OnValidate=VAR
                             PurchaseHeader@1000 : Record 38;
                           BEGIN
                             PurchaseHeader.GET("Document Type","Document No.");
                             PurchCalcDiscByType.ApplyInvDiscBasedOnAmt(TotalPurchaseLine."Inv. Discount Amount",PurchaseHeader);
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 33  ;3   ;Field     ;
                Name=Invoice Disc. Pct.;
                CaptionML=ENU=Invoice Discount %;
                DecimalPlaces=0:2;
                SourceExpr=PurchCalcDiscByType.GetVendInvoiceDiscountPct(Rec);
                Visible=TRUE;
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 19  ;2   ;Group     ;
                GroupType=Group }

    { 17  ;3   ;Field     ;
                Name=Total Amount Excl. VAT;
                DrillDown=No;
                CaptionML=ENU=Total Amount Excl. VAT;
                SourceExpr=TotalPurchaseLine.Amount;
                AutoFormatType=1;
                AutoFormatExpr=TotalPurchaseHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalExclVATCaption(PurchHeader."Currency Code");
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 15  ;3   ;Field     ;
                Name=Total VAT Amount;
                CaptionML=ENU=Total VAT;
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr=TotalPurchaseHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalVATCaption(PurchHeader."Currency Code");
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 13  ;3   ;Field     ;
                Name=Total Amount Incl. VAT;
                CaptionML=ENU=Total Amount Incl. VAT;
                SourceExpr=TotalPurchaseLine."Amount Including VAT";
                AutoFormatType=1;
                AutoFormatExpr=TotalPurchaseHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalInclVATCaption(PurchHeader."Currency Code");
                Editable=FALSE;
                StyleExpr=TotalAmountStyle }

    { 11  ;3   ;Field     ;
                Name=RefreshTotals;
                DrillDown=Yes;
                SourceExpr=RefreshMessageText;
                Enabled=RefreshMessageEnabled;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DocumentTotals.PurchaseRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalPurchaseLine);
                              DocumentTotals.PurchaseUpdateTotalsControls(Rec,TotalPurchaseHeader,TotalPurchaseLine,RefreshMessageEnabled,
                                TotalAmountStyle,RefreshMessageText,InvDiscAmountEditable,VATAmount);
                            END;

                ShowCaption=No }

  }
  CODE
  {
    VAR
      TotalPurchaseHeader@1009 : Record 38;
      TotalPurchaseLine@1008 : Record 39;
      PurchHeader@1005 : Record 38;
      TransferExtendedText@1002 : Codeunit 378;
      ItemAvailFormsMgt@1006 : Codeunit 353;
      Text000@1001 : TextConst 'ENU=Unable to run this function while in View mode.';
      PurchPriceCalcMgt@1004 : Codeunit 7010;
      Text001@1007 : TextConst 'ENU=You cannot use the Explode BOM function because a prepayment of the purchase order has been invoiced.';
      PurchCalcDiscByType@1010 : Codeunit 66;
      DocumentTotals@1017 : Codeunit 57;
      ShortcutDimCode@1003 : ARRAY [8] OF Code[20];
      UpdateAllowedVar@1000 : Boolean;
      VATAmount@1018 : Decimal;
      InvDiscAmountEditable@1016 : Boolean;
      TotalAmountStyle@1015 : Text;
      RefreshMessageEnabled@1014 : Boolean;
      RefreshMessageText@1013 : Text;
      TypeChosen@1019 : Boolean;
      RouteRefMgtCU@1210190006 : Codeunit 11012045;
      InvtSetup@1100525004 : Record 313;
      ItemSetup@1100525000 : Record 11012300;
      PurchSetup@1100485003 : Record 312;
      Text11012001@1210190000 : TextConst 'ENU=Before editing text enter the line first';
      GabiVendorRec@1100485001 : Record 11012304;
      JobsSetup@1100525012 : Record 315;
      ServiceSetup@1100525013 : Record 11012800;
      RefQuote@1100485002 : Code[20];
      gFromReference@1210190010 : Boolean;
      "UnitCost/PurchUnit"@1100485006 : Decimal;
      "UnitCost/BaseUnit"@1210190008 : Decimal;
      "UnitPrice/BaseUnit"@1210190014 : Decimal;
      BaseQuan@1100525002 : Decimal;
      BaseUnit@1100525003 : Code[20];
      Text11012005@1210190003 : TextConst 'ENU=Credit the administrative costs for the Return Order?';
      Text11012008@1210190004 : TextConst 'ENU=Disapprove of Returnorders is not possible';
      PurchaseLineExtension@1100525001 : Record 11020644;
      BackOrderQuantity@1100485005 : Decimal;
      DPA_IsHardFilter@1100000999 : Boolean;
      TradeItemEnabled@19042429 : Boolean INDATASET;
      NoIsEditable@1100525101 : Boolean INDATASET;
      CostTypeEditable@1100525005 : Boolean INDATASET;
      ItemEditable@1100525006 : Boolean INDATASET;
      TariffNoEditable@1100525007 : Boolean INDATASET;
      NetWeightEditable@1100525008 : Boolean INDATASET;
      PlantTypeEditable@1100525009 : Boolean INDATASET;
      PlantNoEditable@1100525010 : Boolean INDATASET;
      CostComponentEditable@1100525011 : Boolean INDATASET;
      TypeEditable@1100525014 : Boolean INDATASET;
      QuantityEditable@1100525015 : Boolean INDATASET;
      AmountEditable@1100525016 : Boolean INDATASET;
      QtyToInvoiceEditable@1100525017 : Boolean INDATASET;
      AmntToInvoiceEditable@1100525018 : Boolean INDATASET;
      ExpectedBackOrderDateEditable@1100525019 : Boolean INDATASET;
      AdditionalCostServiceEditable@1210190001 : Boolean INDATASET;
      StratPurchaseFieldsEditable@1210190002 : Boolean INDATASET;
      AmountIncludingVATEditable@1100409000 : Boolean INDATASET;
      NoProjectStockEditable@1100525020 : Boolean INDATASET;
      "*** ExFlow ***"@12013597 : Integer;
      ExFlow@12013598 : Codeunit 12013601;
      SCClaimsEnabled@1100528200 : Boolean INDATASET;

    PROCEDURE ApproveCalcInvDisc@7();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Purch.-Disc. (Yes/No)",Rec);
    END;

    LOCAL PROCEDURE CalcInvDisc@1();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Purch.-Calc.Discount",Rec);
    END;

    LOCAL PROCEDURE ExplodeBOM@3();
    BEGIN
      IF "Prepmt. Amt. Inv." <> 0 THEN
        ERROR(Text001);
      CODEUNIT.RUN(CODEUNIT::"Purch.-Explode BOM",Rec);
    END;

    LOCAL PROCEDURE OpenSalesOrderForm@5();
    VAR
      SalesHeader@1000 : Record 36;
      SalesOrder@1001 : Page 42;
    BEGIN
      TESTFIELD("Sales Order No.");
      SalesHeader.SETRANGE("No.","Sales Order No.");
      SalesOrder.SETTABLEVIEW(SalesHeader);
      SalesOrder.EDITABLE := FALSE;
      SalesOrder.RUN;
    END;

    LOCAL PROCEDURE InsertExtendedText@6(Unconditionally@1000 : Boolean);
    BEGIN
      IF TransferExtendedText.PurchCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        TransferExtendedText.InsertPurchExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        UpdateForm(TRUE);
    END;

    PROCEDURE ShowTracking@10();
    VAR
      TrackingForm@1000 : Page 99000822;
    BEGIN
      TrackingForm.SetPurchLine(Rec);
      TrackingForm.RUNMODAL;
    END;

    LOCAL PROCEDURE OpenSpecOrderSalesOrderForm@12();
    VAR
      SalesHeader@1000 : Record 36;
      SalesOrder@1001 : Page 42;
    BEGIN
      TESTFIELD("Special Order Sales No.");
      SalesHeader.SETRANGE("No.","Special Order Sales No.");
      SalesOrder.SETTABLEVIEW(SalesHeader);
      SalesOrder.EDITABLE := FALSE;
      SalesOrder.RUN;
    END;

    PROCEDURE UpdateForm@13(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    PROCEDURE SetUpdateAllowed@14(UpdateAllowed@1000 : Boolean);
    BEGIN
      UpdateAllowedVar := UpdateAllowed;
    END;

    LOCAL PROCEDURE UpdateAllowed@4() : Boolean;
    BEGIN
      IF UpdateAllowedVar = FALSE THEN BEGIN
        MESSAGE(Text000);
        EXIT(FALSE);
      END;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE ShowPrices@17();
    BEGIN
      PurchHeader.GET("Document Type","Document No.");
      CLEAR(PurchPriceCalcMgt);
      PurchPriceCalcMgt.GetPurchLinePrice(PurchHeader,Rec);
    END;

    LOCAL PROCEDURE ShowLineDisc@16();
    BEGIN
      PurchHeader.GET("Document Type","Document No.");
      CLEAR(PurchPriceCalcMgt);
      PurchPriceCalcMgt.GetPurchLineLineDisc(PurchHeader,Rec);
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      InsertExtendedText(FALSE);
      IF (Type = Type::"Charge (Item)") AND ("No." <> xRec."No.") AND
         (xRec."No." <> '')
      THEN
        CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE CrossReferenceNoOnAfterValidat@19048248();
    BEGIN
      InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE RedistributeTotalsOnAfterValidate@2();
    BEGIN
      CurrPage.SAVERECORD;

      PurchHeader.GET("Document Type","Document No.");
      IF DocumentTotals.PurchaseCheckNumberOfLinesLimit(PurchHeader) THEN
        DocumentTotals.PurchaseRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalPurchaseLine);
      CurrPage.UPDATE;
    END;

    PROCEDURE CopyBudgetLines@6501();
    BEGIN
      //**4PS
      CODEUNIT.RUN(CODEUNIT::"Copy Budget Lines",Rec);
    END;

    PROCEDURE SelectBudgetLines@1210190002(IPurchHeadRec@11012000 : Record 38);
    VAR
      lvBudgetRec@1210190011 : Record 11012001;
      lvBudgetListFrm@11012001 : Page 11012005;
    BEGIN
      //**4PS
      IF IPurchHeadRec."Job No." <> '' THEN
        lvBudgetRec.SETRANGE("Project No.", IPurchHeadRec."Job No.")
      ELSE
        IF "Job No." <> '' THEN
          lvBudgetRec.SETRANGE("Project No.", "Job No.");
      lvBudgetRec.SETFILTER("Cost Type", '%1..%2', lvBudgetRec."Cost Type"::Material, lvBudgetRec."Cost Type"::Sundry);  //db, 22-06-05
      lvBudgetRec.SETRANGE(Advised, FALSE);

      lvBudgetListFrm.InitSelectionCopyToPurchOrder(Rec);
      lvBudgetListFrm.SETTABLEVIEW(lvBudgetRec);
      lvBudgetListFrm.RUNMODAL;
    END;

    PROCEDURE ReceiveCollective@6502();
    VAR
      lPurchLine@11012000 : Record 39;
    BEGIN
      //**4PS
      lPurchLine.SETRANGE("Document Type", "Document Type");
      lPurchLine.SETRANGE("Document No.", "Document No.");
      IF lPurchLine.FINDSET(TRUE, FALSE) THEN BEGIN
        GetHeader;
        REPEAT
          IF PurchHeader."Amounts only" THEN BEGIN
            lPurchLine."Amnt. to Receive" := lPurchLine."Outst. Amount exc. VAT";
            lPurchLine.InitAmntToInvoice;
          END ELSE BEGIN
            lPurchLine."Qty. to Receive" := lPurchLine."Outstanding Quantity";
            lPurchLine."Qty. to Receive (Base)" := lPurchLine."Outstanding Qty. (Base)";
            lPurchLine.InitQtyToInvoice;
          END;
          //**4PS.sn
          lPurchLine."Modified by" := USERID; //DP00469
          lPurchLine."Last Date Modified" := TODAY;//DP00469
          //**4PS.en
          lPurchLine.MODIFY;
        UNTIL lPurchLine.NEXT = 0
      END;
    END;

    PROCEDURE GetHeader@1000000005();
    BEGIN
      //**4PS
      //TESTFIELD("Document No.");  // for RTC o
      IF "Document No." <> '' THEN  // for RTC n
        PurchHeader.GET("Document Type","Document No.");
    END;

    PROCEDURE DivideAgreedAmount@1210190000();
    VAR
      lPurchLine@1210190002 : Record 39;
    BEGIN
      //**4PS
      GetHeader;
      PurchHeader.TESTFIELD("Document Type", "Document Type"::Order);
      PurchHeader.TESTFIELD("Agreed Amount");
      PurchHeader.CALCFIELDS(Amount);
      PurchHeader.TESTFIELD(Amount);
      lPurchLine.SETRANGE("Document Type", "Document Type");
      lPurchLine.SETRANGE("Document No.", "Document No.");
      lPurchLine.SETFILTER(Type, '>0');
      IF lPurchLine.FINDSET(TRUE, FALSE) THEN BEGIN
        REPEAT
          lPurchLine.VALIDATE("Line Discount Amount",
            lPurchLine."Line Discount Amount" +
            (PurchHeader.Amount - PurchHeader."Agreed Amount") / PurchHeader.Amount * lPurchLine."Line Amount" );
          //**4PS.sn
          lPurchLine."Modified by" := USERID; //DP00469
          lPurchLine."Last Date Modified" := TODAY;//DP00469
          //**4PS.en
          lPurchLine.MODIFY;
        UNTIL lPurchLine.NEXT = 0;
        PurchHeader.CALCFIELDS(Amount);
        IF PurchHeader.Amount <> PurchHeader."Agreed Amount" THEN BEGIN
          lPurchLine.VALIDATE("Line Discount Amount",
            lPurchLine."Line Discount Amount" +
            PurchHeader.Amount - PurchHeader."Agreed Amount");
          //**4PS.sn
          lPurchLine."Modified by" := USERID; //DP00469
          lPurchLine."Last Date Modified" := TODAY;//DP00469
          //**4PS.en
          lPurchLine.MODIFY;
        END;
      END;
    END;

    PROCEDURE EditText@1210190001();
    VAR
      TextFrm@11012001 : Page 11012120;
    BEGIN
      //**4PS
      IF "Line No." = 0 THEN
        ERROR(Text11012001);

      TextFrm.SetSelection(DATABASE::"Purchase Line","Document No.",
        '','','','','',"Line No.","Document Type");

      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    PROCEDURE ShowPurchRouteRef@1210190004();
    BEGIN
      //**4PS
      RouteRefMgtCU.ShowReferenceList("Purchase Route Reference");
    END;

    PROCEDURE InitSelectionFromReference@1210190008(IOrderLineNo@1210190000 : Integer);
    BEGIN
      //**4PS
      gFromReference := TRUE;
      SETRANGE("Line No.", IOrderLineNo);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE VendorItemHyperlink@1100485000();
    VAR
      lvVendorRec@1100485000 : Record 23;
      lvItem@1100485002 : Code[20];
    BEGIN
      //**4PS
      IF "Trade Item" <> '' THEN
        lvItem := "Trade Item"
      ELSE
        IF "Item No." <> '' THEN
          lvItem := "Item No.";

      IF lvItem <> '' THEN BEGIN
        GetHeader;
        IF lvVendorRec.GET(PurchHeader."Buy-from Vendor No.") THEN BEGIN
          lvVendorRec.TESTFIELD("URL Vendor");
          HYPERLINK(lvVendorRec."URL Vendor" + lvItem)
        END;
      END;
    END;

    PROCEDURE DetermineBackOrderQuantity@1100485001();
    BEGIN
      //**4PS
      BackOrderQuantity := Quantity - "Qty. to Receive" - "Quantity Received";
      IF BackOrderQuantity < 0 THEN
        BackOrderQuantity := 0;
      IF BackOrderQuantity = 0 THEN
        "Expected Back Order Date" := 0D;
    END;

    PROCEDURE ShowPurchOrderPlantRentalRate@1100525000();
    VAR
      lvPlantSetupRec@1100525000 : Record 11012550;
    BEGIN
      //**4PS
      TESTFIELD("Plant Type");
      TESTFIELD("Plant No.", '');
      lvPlantSetupRec.GET;
      IF lvPlantSetupRec."Cost Component Rent" <> '' THEN
        TESTFIELD("Cost Component Plant", lvPlantSetupRec."Cost Component Rent")
      ELSE
        TESTFIELD("Cost Component Plant");

      FormPurchOrderPlantRentalRate(Rec,FALSE);
    END;

    PROCEDURE RejectRegistration@1100525001();
    VAR
      PurchaseLine@1100525003 : Record 39;
      RejectionLine@1100525002 : Record 11020374;
      RejectionLines@1100525000 : Page 11072044;
    BEGIN
      //**4PS
      PurchaseLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(PurchaseLine);
      PurchaseLine.SETRANGE("Document Type","Document Type");
      PurchaseLine.SETRANGE("Document No.","Document No.");
      IF PurchaseLine.FINDSET THEN
        REPEAT
          RejectionLine.CreateRejectionLines(PurchaseLine)
        UNTIL PurchaseLine.NEXT = 0;

      RejectionLine.SETCURRENTKEY("Document Type","Document No.","Purchase Receipts No.","Document Line No.");
      RejectionLine.SETRANGE("Document Type",PurchaseLine."Document Type");
      RejectionLine.SETRANGE("Document No.",PurchaseLine."Document No.");
      RejectionLines.SETTABLEVIEW(RejectionLine);
      RejectionLines.RUN;
    END;

    PROCEDURE CreatePlantNumbersUnique@1100525002();
    VAR
      PurchaseLine@1100525000 : Record 39;
    BEGIN
      //**4PS
      PurchaseLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(PurchaseLine);
      PurchaseLine.SETRANGE("Document Type","Document Type");
      PurchaseLine.SETRANGE("Document No.","Document No.");
      CODEUNIT.RUN(CODEUNIT::"Create Plant Nos. Purch. Lines", PurchaseLine);
    END;

    PROCEDURE EditLineDetails@1210190003();
    BEGIN
      //**4PS
      EditPurchaseLineDetails;
    END;

    PROCEDURE StartFastDataEntryForm@1100528800();
    VAR
      PurchLine@1100525000 : Record 39;
      FastDataEntryOrderInvoice@1100525002 : Page 11125017;
    BEGIN
      //**4PS
      IF "Line Type" ='' THEN
        EXIT;

      CurrPage.SAVERECORD;
      COMMIT;
      PurchLine := Rec;
      PurchLine.SETRECFILTER;
      PurchLine.SETRANGE("Line Type", "Line Type");
      FastDataEntryOrderInvoice.SETTABLEVIEW(PurchLine);
      FastDataEntryOrderInvoice.LOOKUPMODE := FALSE;
      FastDataEntryOrderInvoice.SETRECORD(PurchLine);
      FastDataEntryOrderInvoice.RUNMODAL;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE GS1ErrorLogDrillDown@1210190005();
    VAR
      GS1ErrorLog@1210190000 : Record 11072078;
    BEGIN
      //**4PS
      GS1ErrorLog.SETRANGE("Document Type", "Document Type");
      GS1ErrorLog.SETRANGE("Document No.", "Document No.");
      GS1ErrorLog.SETRANGE("Line No.", "Line No.");
      GS1ErrorLog.TableDrillDown(GS1ErrorLog);
    END;

    PROCEDURE GS1PurchaseOrderLogDrillDown@1210190007();
    VAR
      GS1PurchaseOrderLog@1210190000 : Record 11072079;
    BEGIN
      //**4PS
      GS1PurchaseOrderLog.SETRANGE("Document Type", "Document Type");
      GS1PurchaseOrderLog.SETRANGE("Document No.", "Document No.");
      GS1PurchaseOrderLog.SETRANGE("Line No.", "Line No.");
      GS1PurchaseOrderLog.TableDrillDown(GS1PurchaseOrderLog);
    END;

    LOCAL PROCEDURE ItemNoOnAfterValidate@19061248();
    BEGIN
      //**4PS
      SetEditable;
      IF ("Cost Type" = "Cost Type"::Material) AND ("No." <> '') THEN
        InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE BasicItemOnAfterValidate@19054956();
    BEGIN
      //**4PS
      SetEditable;
      IF ("Cost Type" = "Cost Type"::Material) AND ("No." <> '') THEN
        InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE TradeItemOnAfterValidate@19075338();
    BEGIN
      //**4PS
      SetEditable;
      IF ("Cost Type" = "Cost Type"::Material) AND ("No." <> '') THEN
        InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE PlantTypeOnAfterValidate@19013868();
    BEGIN
      //**4PS
    END;

    LOCAL PROCEDURE VendorPlantNoOnAfterValidate@19013893();
    BEGIN
      //**4PS
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PlantNoOnAfterValidate@19064946();
    BEGIN
      //**4PS
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CostComponentPlantOnAfterValid@19054771();
    BEGIN
      //**4PS
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PurchaseActionOnAfterValidate@19042613();
    BEGIN
      //**4PS
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE UnitPriceLCYOnAfterValidate@19059853();
    BEGIN
      //**4PS
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE Discount37ItemOnAfterValidate@19057692();
    BEGIN
      //**4PS
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE BlanketOrderNoOnAfterValidate@19039752();
    BEGIN
      //**4PS
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE BlanketOrderLineNoOnAfterValid@19058835();
    BEGIN
      //**4PS
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE VATBusPostingGroupOnAfterValid@19003591();
    BEGIN
      //**4PS
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE VATProdPostingGroupOnAfterVali@19001691();
    BEGIN
      //**4PS
      CurrPage.UPDATE;
    END;

    PROCEDURE SetEditable@1100525003();
    VAR
      ServiceOrder@1210190000 : Record 11012823;
    BEGIN
      //**4PS
      GetHeader;

      NoIsEditable := ("Plant Type" = '') AND
        ("Job No." = '') AND ("Service Order No." = '');

      CostTypeEditable := (
        ("Item No." + "Basic Item" + "Trade Item" = ''));

      ItemEditable := ("Cost Type" = "Cost Type"::Material) OR ("Cost Type" = "Cost Type"::" ");
      IF (ItemEditable) THEN
        ItemEditable := ("Quantity Received" = 0); //#C013024.n

      TariffNoEditable := ("Item No." = '');
      NetWeightEditable := ("Item No." = '');
      PlantTypeEditable := ("Job No." = '');
      PlantNoEditable := ("Plant Type" <> '');
      CostComponentEditable :=
        (("Job No." <> '') AND JobsSetup."Cost Component Editable") OR
        (("Service Order No." <> '') AND ServiceSetup."Cost Component Editable") OR
        (("Job No." = '') AND ("Service Order No." = ''));
      TypeEditable := ("Job No." = '') AND ("Service Order No." = '') AND ("Plant Type" = '');

      IF "Document No." <> '' THEN
        StratPurchaseFieldsEditable := NOT NonStratPurchaserVendNoContr //**4PS.n 31593
      ELSE
        // When NonStratPurchaserVendNoContr is called in OnNewRecord (Document No. = '')
        // the RTC crashes because in this function TESTFIELD("Document No.") is called.
        StratPurchaseFieldsEditable := TRUE;

      //QuantityEditable := (NOT PurchHeader."Amounts only"); //31593.o
      QuantityEditable := (NOT PurchHeader."Amounts only") AND StratPurchaseFieldsEditable; //31593.n

      AmountEditable := PurchHeader."Amounts only";

      IF PurchSetup."Invoice Purchase Orders" THEN BEGIN
        QtyToInvoiceEditable := (NOT PurchHeader."Amounts only");
        AmntToInvoiceEditable := (PurchHeader."Amounts only");
      END ELSE BEGIN
        QtyToInvoiceEditable :=  FALSE;
        AmntToInvoiceEditable := FALSE;
      END;

      ExpectedBackOrderDateEditable := (BackOrderQuantity <> 0);

      IF "Service Order No." <> '' THEN BEGIN
        IF NOT ServiceOrder.GET("Service Order No.") THEN
          ServiceOrder.INIT;
        IF ServiceOrder."Service Contract No." <> '' THEN
          AdditionalCostServiceEditable := (ServiceOrder."Source Type" <> ServiceOrder."Source Type"::Direct);
      END ELSE
        AdditionalCostServiceEditable := TRUE;
      AmountIncludingVATEditable := ("Manually VAT Posting");

      //C021402.sn
      NoProjectStockEditable := TRUE;
      IF ("Job No." = '') THEN
        NoProjectStockEditable := FALSE
      ELSE BEGIN
        IF (NOT InvtSetup.JobInventoryByLocationShelf("Job No.")) THEN
          NoProjectStockEditable := FALSE;
      END;
      //C021402.en

      SCClaimsEnabled := PurchHeader."Amounts only"
    END;

    LOCAL PROCEDURE CheckAdminCostLinePresent@1100485004(IRewriteAllowed@1210190010 : Boolean) : Boolean;
    VAR
      lvVendPostingGrpRec@1100485002 : Record 93;
      lvPurchLineRec@1100485003 : Record 39;
      PurchaseHeader@1210190000 : Record 38;
    BEGIN
      //**4PS
      PurchaseHeader.GET("Document Type", "Document No.");
      IF NOT lvVendPostingGrpRec.GET(PurchaseHeader."Vendor Posting Group") THEN
        EXIT(FALSE);
      IF (lvVendPostingGrpRec."Service Charge Acc." = '') THEN
        EXIT(FALSE);

      IF IRewriteAllowed THEN
        COMMIT;

      lvPurchLineRec.SETRANGE("Document Type", PurchaseHeader."Document Type");
      lvPurchLineRec.SETRANGE("Document No.", PurchaseHeader."No.");
      lvPurchLineRec.SETRANGE(Type, lvPurchLineRec.Type::"G/L Account");
      lvPurchLineRec.SETRANGE("No.", lvVendPostingGrpRec."Service Charge Acc.");
      IF lvPurchLineRec.FINDFIRST THEN BEGIN
        IF IRewriteAllowed THEN BEGIN
          IF NOT CONFIRM(Text11012005, TRUE) THEN BEGIN
            lvPurchLineRec.VALIDATE(Quantity, -lvPurchLineRec.Quantity);
            //**4PS.sn
            lvPurchLineRec."Modified by" := USERID; //DP00469
            lvPurchLineRec."Last Date Modified" := TODAY;//DP00469
            //**4PS.en
            lvPurchLineRec.MODIFY;
            lvPurchLineRec.CreatePurchOrderControl(FALSE);
          END;
        END;
        EXIT(TRUE);
      END;

      EXIT(FALSE);
    END;

    PROCEDURE ShowItemInventoryByCompany@1100528300();
    VAR
      AdviceOrderMgt@1100528300 : Codeunit 11012041;
    BEGIN
      AdviceOrderMgt.RunItemInventoryByCompany("Item No.");
    END;

    PROCEDURE SetReceiveMarkedOnly@1100525005() : Boolean;
    VAR
      PurchaseLine@1100525000 : Record 39;
      lvTellert@1100409000 : Integer;
    BEGIN
      //**4PS DP00556
      PurchaseLine.COPY(Rec);
      PurchaseLine.SETRANGE("Document Type","Document Type");
      PurchaseLine.SETRANGE("Document No.","Document No.");
      PurchaseLine.MODIFYALL("Marked for Receipt Run", FALSE, FALSE);

      CurrPage.SETSELECTIONFILTER(PurchaseLine);
      PurchaseLine.SETRANGE("Document Type","Document Type");
      PurchaseLine.SETRANGE("Document No.","Document No.");

      IF PurchaseLine.ISEMPTY THEN BEGIN
        EXIT(FALSE);
      END;

      lvTellert :=  PurchaseLine.COUNT;

      PurchaseLine.MODIFYALL("Marked for Receipt Run", TRUE, FALSE);
      EXIT(TRUE);
    END;

    PROCEDURE ReSetReceiveMarkedOnly@1100525006();
    VAR
      PurchaseLine@1100525000 : Record 39;
    BEGIN
      //**4PS DP00556
      PurchaseLine.COPY(Rec);
      PurchaseLine.SETRANGE("Document Type","Document Type");
      PurchaseLine.SETRANGE("Document No.","Document No.");
      PurchaseLine.MODIFYALL("Marked for Receipt Run", FALSE, FALSE);
    END;

    BEGIN
    {
      CC: Form 54
      4PS
      - Switch off MultiNewlines (formparameter) because of misrepresentation after collective copy of items
      4PS, 18-05-2015, C023496, Group totals set to invisible

      --- ExFlow --->
      Field       : Approve
      Field       : First Approver
      Field       : Applied Template Rule
      Field       : Template Rule
      Field       : Approval Flow Modified
      Field       : Fully Matched
      Action      : Approve (Code)
      <-- ExFlow ---

      Version List=NAVW19.00.00.45834,NAVSE9.00.00.45834;
      Version List=NAVW19.00.00.45834,NAVFI9.00.00.45834;
    }
    END.
  }
}

