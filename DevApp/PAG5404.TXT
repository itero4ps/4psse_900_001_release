OBJECT Page 5404 Item Units of Measure
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,4PS9.00;
  }
  PROPERTIES
  {
    Permissions=TableData 27=m,
                TableData 5404=id;
    Editable=Yes;
    CaptionML=ENU=Item Units of Measure;
    SourceTable=Table5404;
    DataCaptionFields=Item No.;
    PageType=List;
    OnInit=BEGIN
             UnitPriceVisible := TRUE;
           END;

    OnOpenPage=BEGIN
                 IF Item.GET("Item No.") THEN
                   ItemBaseUOM := Item."Base Unit of Measure";

                 //**4PS.sn
                 IF CompRel.READPERMISSION THEN BEGIN
                   CentrManagementCU.ItemFormEditable(NavBln,DiscBln,DiscGrpBln,RcpBln);
                   IF NavBln THEN
                     CurrPage.EDITABLE(FALSE);
                 END;
                 UnitPriceVisible := (gvTableNo <> 0);
                 //**4PS.en
               END;

    OnClosePage=VAR
                  ItemUnitRec@1100485000 : Record 5404;
                BEGIN
                  //**4PS
                  IF UpdateItem = TRUE THEN BEGIN
                    ItemRec.GET("Item No.");
                    ItemRec.MODIFY(TRUE);
                  END;

                  IF (gvBasicItem <> '') OR (gvTradeItem <> '') THEN BEGIN
                    IF NOT ItemRec.GET(gvItem) THEN BEGIN
                      ItemUnitRec.SETRANGE("Item No.", gvItem);
                      ItemUnitRec.DELETEALL;
                    END;
                  END;
                END;

    OnAfterGetRecord=BEGIN
                       SetStyle;
                       GetUnitPrice;  //**4PS.n
                     END;

    OnNewRecord=BEGIN
                  SetStyle;
                END;

    OnInsertRecord=BEGIN
                     UpdateItem := TRUE;  //**4PS
                   END;

    OnModifyRecord=BEGIN
                     UpdateItem := TRUE;  //**4PS
                   END;

    OnDeleteRecord=BEGIN
                     UpdateItem := TRUE;  //**4PS
                   END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 6   ;2   ;Field     ;
                SourceExpr="Item No.";
                Visible=FALSE }

    { 2   ;2   ;Field     ;
                SourceExpr=Code;
                StyleExpr=StyleName }

    { 4   ;2   ;Field     ;
                SourceExpr="Qty. per Unit of Measure";
                StyleExpr=StyleName }

    { 15  ;2   ;Field     ;
                SourceExpr=Height;
                Visible=FALSE }

    { 13  ;2   ;Field     ;
                SourceExpr=Width;
                Visible=FALSE }

    { 11  ;2   ;Field     ;
                SourceExpr=Length;
                Visible=FALSE }

    { 17  ;2   ;Field     ;
                SourceExpr=Cubage;
                Visible=FALSE }

    { 19  ;2   ;Field     ;
                SourceExpr=Weight;
                Visible=FALSE }

    { 3   ;1   ;Group     ;
                CaptionML=ENU=Current Base Unit of Measure;
                GroupType=Group }

    { 5   ;2   ;Field     ;
                Name=ItemUnitOfMeasure;
                Lookup=Yes;
                CaptionML=ENU=Base Unit of Measure;
                SourceExpr=ItemBaseUOM;
                TableRelation="Unit of Measure".Code;
                OnValidate=BEGIN
                             Item.VALIDATE("Base Unit of Measure",ItemBaseUOM);
                             Item.MODIFY(TRUE);
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100485000;2;Field  ;
                Name=UnitPrice;
                CaptionML=ENU=Unit Price;
                SourceExpr=UnitPrice;
                Visible=UnitPriceVisible;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Item@1000 : Record 27;
      ItemBaseUOM@1002 : Code[10];
      StyleName@1001 : Text;
      ItemRec@11012000 : Record 27;
      CompRel@11012001 : Record 11012059;
      CentrManagementCU@11012002 : Codeunit 11012010;
      NavBln@11012003 : Boolean;
      DiscBln@1100485003 : Boolean;
      DiscGrpBln@1100528300 : Boolean;
      RcpBln@11012006 : Boolean;
      UpdateItem@11012007 : Boolean;
      gvItem@1210190005 : Code[20];
      gvBasicItem@1210190004 : Code[20];
      gvTradeItem@1210190003 : Code[20];
      gvManufacturer@1210190001 : Code[20];
      gvVendor@1210190000 : Code[20];
      gvTableNo@1100485006 : Integer;
      gvDocType@1100485001 : Option;
      gvDocNo@1100485000 : Code[20];
      gvDocLine@1100485002 : Integer;
      UnitPrice@1100485004 : Decimal;
      UnitPriceVisible@19045982 : Boolean INDATASET;

    LOCAL PROCEDURE SetStyle@2();
    BEGIN
      IF Code = ItemBaseUOM THEN
        StyleName := 'Strong'
      ELSE
        StyleName := '';
    END;

    PROCEDURE SetSelection@1210190000(lvItem@1210190011 : Code[20];lvBasicItem@1210190010 : Code[20];lvTradeItem@1210190009 : Code[20];lvManufacturer@1210190007 : Code[20];lvVendor@1210190006 : Code[20]);
    BEGIN
      //**4PS
      gvItem := lvItem;
      gvBasicItem := lvBasicItem;
      gvTradeItem := lvTradeItem;
      gvManufacturer := lvManufacturer;
      gvVendor := lvVendor;
    END;

    PROCEDURE CheckItem@1210190002(VAR ItemUnitRec@1210190000 : Record 5404);
    VAR
      TradeItemRec@1210190002 : Record 11012317;
      BasicItemRec@1210190001 : Record 11012316;
    BEGIN
      //**4PS
      IF gvTradeItem <> '' THEN BEGIN
        gvItem := gvTradeItem;
        CheckStandardUnit(ItemUnitRec);
        TradeItemRec.GET(gvVendor, gvTradeItem);
        IF TradeItemRec."Application Unit" <> '' THEN
          CheckUnit(ItemUnitRec, gvItem, TradeItemRec."Application Unit", 1, TRUE);
        IF TradeItemRec."Packaging Unit" <> '' THEN
          IF TradeItemRec."Packaging Unit" <> TradeItemRec."Application Unit" THEN
            CheckUnit(ItemUnitRec, gvItem, TradeItemRec."Packaging Unit", TradeItemRec."Qty. per Unit of Measure", TRUE);
        ItemUnitRec.MARKEDONLY(TRUE); //Also needed in RTC, because marks are set by function CheckUnit.
      END;

      IF (gvBasicItem <> '') AND (gvTradeItem = '') THEN BEGIN
        gvItem := gvBasicItem;
        CheckStandardUnit(ItemUnitRec);
        BasicItemRec.GET(gvManufacturer, gvBasicItem);
        IF BasicItemRec."Application Unit" <> '' THEN
          CheckUnit(ItemUnitRec, gvItem, BasicItemRec."Application Unit", 1, TRUE);
        IF BasicItemRec."Packaging Unit" <> '' THEN
          IF BasicItemRec."Packaging Unit" <> BasicItemRec."Application Unit" THEN
            CheckUnit(ItemUnitRec, gvItem, BasicItemRec."Packaging Unit", BasicItemRec."Qty. per Unit of Measure", TRUE);
        ItemUnitRec.MARKEDONLY(TRUE); //Also needed in RTC, because marks are set by function CheckUnit.
      END;

      ItemUnitRec.SETRANGE("Item No.", gvItem);
      COMMIT;
    END;

    PROCEDURE CheckUnit@1210190001(VAR ItemUnitRec@1210190002 : Record 5404;lvItem@1210190001 : Code[20];lvUnit@1210190000 : Code[10];lvFactor@1210190003 : Decimal;lvMark@1210190004 : Boolean);
    BEGIN
      //**4PS
      IF ItemUnitRec.GET(lvItem, lvUnit) THEN BEGIN
        ItemUnitRec."Qty. per Unit of Measure" := lvFactor;
        ItemUnitRec.MODIFY;
      END ELSE BEGIN
        ItemUnitRec.INIT;
        ItemUnitRec."Item No." := lvItem;
        ItemUnitRec.Code := lvUnit;
        ItemUnitRec."Qty. per Unit of Measure" := lvFactor;
        ItemUnitRec.INSERT;
      END;
      ItemUnitRec.MARK := lvMark;
    END;

    PROCEDURE CheckStandardUnit@1210190003(VAR ItemUnitRec@1210190001 : Record 5404);
    VAR
      UnitRec@1210190000 : Record 204;
      ItemSetup@1100485000 : Record 11012300;
    BEGIN
      //**4PS
      IF ItemSetup.READPERMISSION THEN BEGIN
        ItemSetup.GET;
        IF ItemSetup."Check Price/Quantity by Unit" = ItemSetup."Check Price/Quantity by Unit"::Convert THEN EXIT;
      END;

      IF UnitRec.FIND('-') THEN BEGIN
        REPEAT
          CheckUnit(ItemUnitRec, gvItem, UnitRec.Code, 1, FALSE);
        UNTIL UnitRec.NEXT = 0;
      END;
    END;

    PROCEDURE SetDocument@1100485000(lvTableNo@1100485003 : Integer;lvDocType@1100485000 : Option;lvDocNo@1100485001 : Code[20];lvDocLine@1100485002 : Integer);
    BEGIN
      //**4PS
      gvTableNo := lvTableNo;
      gvDocType := lvDocType;
      gvDocNo := lvDocNo;
      gvDocLine := lvDocLine;
    END;

    PROCEDURE GetUnitPrice@1100485002();
    VAR
      PurchLineRec@1100485001 : Record 39;
      PurchRcptRec@1100485000 : Record 121;
      lvFactor@1100485002 : Decimal;
    BEGIN
      //**4PS
      UnitPrice := 0;
      IF gvTableNo <> 0 THEN BEGIN
        CASE gvTableNo OF
          DATABASE::"Purchase Line":
            BEGIN
              IF PurchLineRec.GET(gvDocType, gvDocNo, gvDocLine) THEN BEGIN
                IF PurchLineRec."Qty. per Unit of Measure" = 0 THEN
                  lvFactor := 1
                ELSE
                  lvFactor := PurchLineRec."Qty. per Unit of Measure";
                UnitPrice := "Qty. per Unit of Measure" * PurchLineRec."Direct Unit Cost" / lvFactor;
                GetExchRate(gvDocType, gvDocNo);
              END;
            END;
          DATABASE::"Purch. Rcpt. Line":
            BEGIN
              IF PurchRcptRec.GET(gvDocNo, gvDocLine) THEN BEGIN
                IF PurchRcptRec."Qty. per Unit of Measure" = 0 THEN
                  lvFactor := 1
                ELSE
                  lvFactor := PurchRcptRec."Qty. per Unit of Measure";
                UnitPrice := "Qty. per Unit of Measure" * PurchRcptRec."Direct Unit Cost" / lvFactor;
              END;
              GetExchRate(PurchLineRec."Document Type"::Order, PurchRcptRec."Order No.");
            END;
        END;
      END;
    END;

    PROCEDURE GetExchRate@1100485004(lvDocType@1100485004 : Integer;lvDocNo@1100485003 : Code[20]);
    VAR
      PurchHeaderRec@1100485000 : Record 38;
      CurrencyRec@1100485001 : Record 4;
      CurrExchRate@1100485002 : Record 330;
    BEGIN
      //**4PS
      IF PurchHeaderRec.GET(lvDocType, lvDocNo) THEN BEGIN
        IF PurchHeaderRec."Currency Code" <> '' THEN BEGIN
          CurrencyRec.InitRoundingPrecision;
          UnitPrice :=
            ROUND(
              CurrExchRate.ExchangeAmtFCYToLCY(
                0, '', //**4PS.n
                PurchHeaderRec."Posting Date",PurchHeaderRec."Currency Code",
      //        UnitPrice,PurchHeaderRec."Currency Factor"), //**4PS.o
                UnitPrice,PurchHeaderRec."Currency Factor",TRUE), //**4PS.n
              CurrencyRec."Amount Rounding Precision");
        END;
      END;
    END;

    BEGIN
    END.
  }
}

