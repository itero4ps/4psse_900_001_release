OBJECT Page 6085577 Scanning & OCR
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW17.00.00.4.00.03;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Scanning & OCR;
    SourceTable=Table6085575;
    SourceTableView=WHERE(Scanning Allowed=CONST(Yes));
    PageType=Worksheet;
    CardPageID=Document Category Card;
    ShowFilter=No;
    OnOpenPage=VAR
                 CODC@1160040000 : Codeunit 6085617;
               BEGIN
                 CaptureAddinLib.BuildRefreshScannerListCommand(CaptureXmlDoc);
                 SendCommand(CaptureXmlDoc);

                 CODC.IsCompanyActive(FALSE);

                 DCSetup.GET;
               END;

    OnAfterGetRecord=BEGIN
                       UpdateCounters;
                     END;

    ActionList=ACTIONS
    {
      { 1000000007;  ;ActionContainer;
                      Name=<Action1900000004>;
                      ActionContainerType=ActionItems }
      { 6085582 ;1   ;Action    ;
                      Name=<Action1000000014>;
                      ShortCutKey=Return;
                      CaptionML=ENU=&Scan;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 DCSetup@1000000001 : Record 6085573;
                                 Path@1000000002 : Text[1024];
                                 SubDir@161024013 : Text[1024];
                                 Selection@1000000003 : Integer;
                               BEGIN
                                 TESTFIELD("Scanning Allowed");

                                 DCSetup.GET;
                                 DCSetup.TESTFIELD("Scanned File Path for OCR");

                                 IF DCSetup."Company Code" <> '' THEN
                                   SubDir := STRSUBSTNO(Text007,DCSetup."Company Code",Code)
                                 ELSE
                                   SubDir := Code;

                                 Path := DCSetup."Scanned File Path for OCR" + '\' + SubDir;

                                 Selection := STRMENU(Text006);
                                 IF Selection = 0 THEN
                                   EXIT;

                                 CaptureAddinLib.BuildStartScanningCommand(Path,Text003,Selection IN [2,4],Selection IN [3,4],CaptureXmlDoc);
                                 SendCommand(CaptureXmlDoc);
                               END;
                                }
      { 6085581 ;1   ;Action    ;
                      Name=<Action1000000025>;
                      CaptionML=ENU=&Import Files;
                      RunObject=Codeunit 6085577;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Process }
      { 6085580 ;1   ;Separator  }
      { 6085579 ;1   ;Action    ;
                      Name=<Action1000000011>;
                      CaptionML=ENU=&Update Scanner List;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Refresh;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CaptureAddinLib.BuildRefreshScannerListCommand(CaptureXmlDoc);
                                 SendCommand(CaptureXmlDoc);
                               END;
                                }
      { 6085578 ;1   ;Action    ;
                      Name=<Action1000000024>;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=&Setup;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Setup;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CaptureAddinLib.BuildShowScannerSettingCommand(CaptureXmlDoc);
                                 SendCommand(CaptureXmlDoc);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000008;1;Field  ;
                Name=ScannerAddIn;
                CaptionML=ENU=&Scanner;
                SourceExpr=ScannerAddInSource;
                ControlAddIn=[Akeyto.DocumentCapture.Dynamics.Nav.Scanner;PublicKeyToken=f91149618a388e69];
                OnControlAddIn=VAR
                                 XmlLib@1161054001 : Codeunit 6085573;
                                 InXmlDoc@1161054000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
                               BEGIN
                                 CLEAR(CaptureXmlDoc);
                                 CaptureAddinLib.TextToXml(InXmlDoc,Data);
                                 HandleXmlCommand(XmlLib.GetNodeText(InXmlDoc.DocumentElement,'Command'),InXmlDoc);
                               END;
                                }

    { 1000000001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1000000002;2;Field  ;
                SourceExpr=Code }

    { 1000000003;2;Field  ;
                SourceExpr=Description }

    { 1000000009;2;Field  ;
                BlankZero=Yes;
                SourceExpr="No. of files for OCR";
                OnDrillDown=BEGIN
                              OpenStatusDocument(Status::OCR);
                            END;
                             }

    { 1000000010;2;Field  ;
                BlankZero=Yes;
                SourceExpr="No. of files for Import";
                OnDrillDown=BEGIN
                              OpenStatusDocument(Status::Import);
                            END;
                             }

    { 161024012;2;Field   ;
                SourceExpr="No. of files with Error";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              OpenStatusDocument(Status::Error);
                            END;
                             }

    { 1000000004;2;Field  ;
                SourceExpr="No. of Open Documents";
                Visible=FALSE }

    { 1000000005;2;Field  ;
                SourceExpr="No. of Registered Documents";
                Visible=FALSE }

    { 1000000006;2;Field  ;
                SourceExpr="No. of Rejected Documents";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      DCSetup@1160040001 : Record 6085573;
      CaptureAddinLib@1000000001 : Codeunit 6085660;
      CaptureXmlDoc@1000000002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      Status@1000 : 'OCR,Import,Error';
      ScannerAddInSource@1000000000 : Text;
      Text001@1000000009 : TextConst 'ENU=No scanner was detected.\\If you have a connected scanner, you could try to switch it off and on again.';
      Text003@1000000007 : TextConst 'ENU=The paper is jammed in the document feeder.\\Do you wish to continue?';
      Text004@1000000006 : TextConst 'ENU=Scanning completed.';
      Text005@1000000005 : TextConst 'ENU=Loading Scanner List...';
      Text006@1000000004 : TextConst 'ENU=Scan single-paged documents (front),Scan multi-paged docuemnts (front),Scan single-paged documents (front and back),Scan multi-paged documents (front and back)';
      EnableScanner@1000000003 : Boolean;
      Text007@161024012 : TextConst 'ENU=%1 - %2';

    PROCEDURE HandleXmlCommand@1000000007(Command@1000000000 : Text[1024];VAR InXmlDoc@1000000001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      XmlLib@1000000003 : Codeunit 6085573;
      Node@1000000012 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      i@1000000013 : Integer;
    BEGIN
      CASE Command OF
        'NoScannerFound':
          MESSAGE(Text001);

        'ScanningCompleted':
          MESSAGE(Text004);
      END;

      IF NOT ISNULL(CaptureXmlDoc) THEN
        SendCommand(CaptureXmlDoc);
      CLEAR(CaptureXmlDoc);
    END;

    PROCEDURE SendCommand@1000000002(VAR XmlDoc@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    BEGIN
      CaptureAddinLib.XmlToText(XmlDoc,ScannerAddInSource);
      CLEAR(CaptureXmlDoc);
    END;

    BEGIN
    END.
  }
}

