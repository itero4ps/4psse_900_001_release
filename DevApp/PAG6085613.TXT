OBJECT Page 6085613 Document Capture Setup Wizard
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW17.00.00.4.04;
  }
  PROPERTIES
  {
    CaptionML=ENU=Document Capture Setup Wizard;
    InsertAllowed=No;
    DeleteAllowed=No;
    PageType=NavigatePage;
    OnInit=VAR
             DCSetup@6085573 : Record 6085573;
           BEGIN
             IF (NOT DCSetup.GET) OR (DCSetup."Document Nos." = '') THEN BEGIN
               IsNewCompany := TRUE;
               ActivateCompany := TRUE;
               ExportConfigFiles := TRUE;
             END ELSE
               WizardAction := WizardAction::Setup;

             TestConnection := TRUE;
           END;

    OnOpenPage=BEGIN
                 ShowNextStep(0);
               END;

    ActionList=ACTIONS
    {
      { 1160040012;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1160040011;1 ;Action    ;
                      Name=Back;
                      CaptionML=ENU=&Back;
                      Promoted=Yes;
                      Enabled=BackEnabled;
                      InFooterBar=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowNextStep(-1);
                               END;
                                }
      { 1160040010;1 ;Action    ;
                      Name=Next;
                      CaptionML=ENU=&Next;
                      Promoted=Yes;
                      Enabled=NextEnabled;
                      InFooterBar=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowNextStep(1);
                               END;
                                }
      { 1160040009;1 ;Action    ;
                      Name=Finish;
                      CaptionML=ENU=&Finish;
                      Promoted=Yes;
                      Enabled=FinishEnabled;
                      InFooterBar=Yes;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1160040003;0;Container;
                ContainerType=ContentArea }

    { 1160040000;1;Group  ;
                Name=WizardStart;
                Visible=WizardStartVisible;
                GroupType=Group;
                InstructionalTextML=ENU=This wizard helps you to import or export Document Capture configurations and to set up Document Capture. }

    { 6085573;2;Field     ;
                CaptionML=ENU=Action;
                OptionCaptionML=ENU=Import Configuration,Export Configuration,Set up Company;
                SourceExpr=WizardAction;
                OnValidate=BEGIN
                             EnableWizardStartFields;
                           END;
                            }

    { 1160040002;2;Field  ;
                AssistEdit=Yes;
                CaptionML=ENU=File Name;
                SourceExpr=ClientFilename;
                Enabled=FilenameEnabled;
                OnAssistEdit=BEGIN
                               IF WizardAction = WizardAction::Import THEN
                                 ClientFilename := FileMgt.OpenFileDialog(CurrPage.CAPTION,ClientFilename,'')
                               ELSE
                                 ClientFilename := FileMgt.SaveFileDialog(CurrPage.CAPTION,ClientFilename,'')
                             END;
                              }

    { 1160040004;1;Group  ;
                Name=ImportExportSelection;
                CaptionML=ENU=Configurations;
                Visible=ImportExportSelectionVisible;
                GroupType=Group;
                InstructionalTextML=ENU=You can exclude a configuration by unticking 'Include'. Expand a Document Category to view its Templates. }

    { 1160040007;2;Part   ;
                Name=ConfigLines;
                PagePartID=Page6085612;
                Visible=ConfigLinesVisible;
                PartType=Page }

    { 1160040005;1;Group  ;
                Name=ImportExportCompleted;
                CaptionML=ENU=Import/Export Completed;
                Visible=ImportExportCompletedVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Document Capture configurations have been imported/exported. }

    { 1   ;2   ;Field     ;
                Name=TEMP1;
                CaptionClass='3,' }

    { 6085579;1;Group     ;
                Name=WizardSetupCompanyStory;
                CaptionML=ENU=Set up Document Capture;
                Visible=WizardSetupCompanyStoryVisible;
                GroupType=Group;
                InstructionalTextML=ENU=This wizard will help you set up some of the key Document Capture configurations. Settings will be saved after each step, so at any point you can click 'Finish' to end. }

    { 6085578;2;Field     ;
                Name=TEMP3;
                CaptionClass='3,' }

    { 6085577;1;Group     ;
                Name=SpecifyClientCredentials;
                Visible=SpecifyClientCredentialsVisible;
                GroupType=Group;
                InstructionalTextML=ENU="In order to activate and use Document Capture you will need to specify your Continia client credentials. These should have been received by your reseller. " }

    { 6085576;2;Field     ;
                CaptionML=ENU=Client ID;
                SourceExpr=ClientID }

    { 6085580;2;Field     ;
                CaptionML=ENU=Client Password;
                SourceExpr=ClientPassword }

    { 6085581;2;Field     ;
                CaptionML=ENU=Test Connection;
                SourceExpr=TestConnection }

    { 6085585;1;Group     ;
                Name=SpecifyGeneralDCSetupInfo;
                CaptionML=ENU=General Document Capture Settings;
                Visible=SpecifyGeneralDCSetupInfoVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Please specify general Document Capture settings below. }

    { 6085584;2;Field     ;
                CaptionML=ENU=Company Code;
                CharAllowed=0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ+-;
                SourceExpr=CompanyCode }

    { 6085583;2;Field     ;
                CaptionML=ENU=Document File Path;
                SourceExpr=DocFilePath }

    { 6085582;2;Field     ;
                CaptionML=ENU=Activate Company;
                SourceExpr=ActivateCompany }

    { 6085586;2;Field     ;
                CaptionML=ENU=Use Cloud OCR;
                SourceExpr=UseCloudOCR }

    { 6085587;2;Field     ;
                CaptionML=ENU=Export Configuration Files;
                SourceExpr=ExportConfigFiles;
                OnValidate=BEGIN
                             IF UseCloudOCR THEN
                               ExportConfigFiles := TRUE;
                           END;
                            }

    { 6085574;2;Field     ;
                CaptionML=ENU=Create Document Capture Role Center;
                SourceExpr=CreateDCProfile }

    { 6085575;2;Field     ;
                CaptionML=ENU=Set as Default Role Center;
                SourceExpr=SetDCDefaultProfile }

    { 6085590;1;Group     ;
                Name=SpecifyWebApproval;
                CaptionML=ENU=Web Approval;
                Visible=SpecifyWebApprovalVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Please specify required settings to use Web Approval. You must specify the NAV Web Service URL for the credential types you would like to enable. }

    { 6085589;2;Field     ;
                CaptionML=ENU=Enable Web Approval;
                SourceExpr=EnableWebApproval;
                OnValidate=VAR
                             Environment@6085573 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Environment";
                           BEGIN
                             IF EnableWebApproval THEN BEGIN
                               IF WindowsWSUrl = '' THEN
                                 WindowsWSUrl := 'http://my-nav-server:7047/NAV/WS';
                               IF DatabaseWSUrl = '' THEN
                                 DatabaseWSUrl := 'http://my-nav-server:7047/NAV/WS';

                               IF LocalDomainName = '' THEN BEGIN
                                 IF OnlineMgt.IsDev OR OnlineMgt.IsDemo THEN
                                   LocalDomainName := Environment.MachineName
                                 ELSE
                                   LocalDomainName := Environment.UserDomainName;
                               END;

                               IF OnlineMgt.IsDev OR OnlineMgt.IsDemo THEN
                                 WebSiteUrl := 'https://dev.continiaonline.com'
                               ELSE
                                 WebSiteUrl := 'https://www.continiaonline.com';
                             END;

                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 6085588;2;Field     ;
                CaptionML=ENU=Use Continia Online Web Portal;
                SourceExpr=UseContiniaOnlineWeb;
                Enabled=EnableWebApproval;
                OnValidate=BEGIN
                             IF NOT UseContiniaOnlineWeb THEN
                               EXIT;

                             IF OnlineMgt.IsDev OR OnlineMgt.IsDemo THEN
                               WebSiteUrl := 'https://dev.continiaonline.com'
                             ELSE
                               WebSiteUrl := 'https://www.continiaonline.com';
                           END;
                            }

    { 6085591;2;Field     ;
                CaptionML=ENU=Local Domain Name;
                SourceExpr=LocalDomainName;
                Enabled=EnableWebApproval }

    { 6085592;2;Field     ;
                CaptionML=ENU=Windows Web Service URL;
                SourceExpr=WindowsWSUrl;
                Enabled=EnableWebApproval }

    { 6085593;2;Field     ;
                CaptionML=ENU=Database Web Service URL;
                SourceExpr=DatabaseWSUrl;
                Enabled=EnableWebApproval }

    { 6085594;2;Field     ;
                CaptionML=ENU=Web Site URL;
                SourceExpr=WebSiteUrl;
                Enabled=EnableWebApproval }

    { 6085596;1;Group     ;
                Name=WizardCompleted;
                CaptionML=ENU=Wizard is complete;
                Visible=WizardCompletedVisible;
                GroupType=Group;
                InstructionalTextML=ENU=This wizard has now completed. We hope you will enjoy working with Document Capture. }

    { 6085595;2;Field     ;
                Name=TEMP4;
                CaptionClass='3,' }

  }
  CODE
  {
    VAR
      Text001@1160040008 : TextConst 'ENU=You must specify a filename';
      FileMgt@6085573 : Codeunit 419;
      OnlineMgt@6085602 : Codeunit 6086500;
      WizardAction@6085574 : 'Import,Export,Setup';
      BackEnabled@1160040000 : Boolean INDATASET;
      ConfigLinesVisible@1160040005 : Boolean INDATASET;
      WizardStartVisible@1160040009 : Boolean INDATASET;
      ImportExportSelectionVisible@6085576 : Boolean INDATASET;
      ImportExportCompletedVisible@1160040004 : Boolean INDATASET;
      WizardSetupCompanyStoryVisible@6085593 : Boolean INDATASET;
      SpecifyClientCredentialsVisible@6085594 : Boolean INDATASET;
      SpecifyGeneralDCSetupInfoVisible@6085595 : Boolean INDATASET;
      SpecifyWebApprovalVisible@6085596 : Boolean INDATASET;
      WizardCompletedVisible@6085597 : Boolean INDATASET;
      FinishEnabled@1160040006 : Boolean INDATASET;
      NextEnabled@1160040007 : Boolean INDATASET;
      FilenameEnabled@6085598 : Boolean INDATASET;
      Step@1160040002 : Integer;
      Steps@6085577 : 'WizardStart,ImportExportSelection,ImportExportCompleted,WizardSetupCompanyStory,SpecifyClientCredentials,SpecifyGeneralDCSetupInfo,SpecifyWebApproval,WizardCompleted';
      ClientFilename@1160040010 : Text[250];
      Text002@1160040001 : TextConst 'ENU=Choose the configurations to include in the import:';
      Text003@1160040012 : TextConst 'ENU=Choose the configurations to include in the export:';
      Text004@1160040013 : TextConst 'ENU=The following configurations have been imported:';
      Text005@1160040014 : TextConst 'ENU=The following configurations have been exported:';
      ServerFilename@1001 : Text[250];
      TEMP@1000 : Text INDATASET;
      ClientID@6085591 : Code[20];
      CompanyCode@6085590 : Code[10];
      DocFilePath@6085589 : Text[250];
      ClientPassword@6085588 : Text[50];
      TestConnection@6085587 : Boolean;
      ActivateCompany@6085586 : Boolean;
      CreateDCProfile@6085599 : Boolean;
      SetDCDefaultProfile@6085575 : Boolean;
      EnableWebApproval@6085585 : Boolean;
      UseContiniaOnlineWeb@6085584 : Boolean;
      LocalDomainName@6085583 : Code[50];
      WindowsWSUrl@6085582 : Text[250];
      DatabaseWSUrl@6085581 : Text[250];
      WebSiteUrl@6085580 : Text[80];
      UseCloudOCR@6085579 : Boolean;
      ExportConfigFiles@6085578 : Boolean;
      Text006@6085592 : TextConst 'ENU=<Multiple File Locations>';
      IsNewCompany@6085600 : Boolean;
      Text007@6085601 : TextConst 'ENU=You must specify a Company Code.';

    LOCAL PROCEDURE ShowNextStep@6085573(NextStep@1160040000 : Integer);
    VAR
      COSetup@1160040001 : Record 6086500;
      DCSetup@1160040003 : Record 6085573;
      Profile@6085573 : Record 2000000072;
      OnlineMgt@1160040002 : Codeunit 6086500;
      CODC@1160040004 : Codeunit 6085617;
    BEGIN
      IF (WizardAction = WizardAction::Setup) AND (Step = 0) AND (NextStep <> 0) THEN
        Step := 2;

      CASE (Step + NextStep) OF
        0:
          BEGIN
            CurrPage.ConfigLines.PAGE.ClearTempTable;

            EnableWizardStartFields;
            ShowStep(Steps::WizardStart,FALSE,TRUE,FALSE);
          END;

        1:
          BEGIN
            IF ClientFilename = '' THEN
              ERROR(Text001);

            IF WizardAction = WizardAction::Import THEN BEGIN
              ServerFilename := FileMgt.UploadFileSilent(ClientFilename);
              CurrPage.ConfigLines.PAGE.SetParam(0,ServerFilename);
            END ELSE BEGIN
              ServerFilename := FileMgt.ServerTempFileName('xml');
              CurrPage.ConfigLines.PAGE.SetParam(1,ServerFilename);
            END;

            CurrPage.ConfigLines.PAGE.CreateTempTable;

            ShowStep(Steps::ImportExportSelection,TRUE,TRUE,FALSE);
          END;

        2:
          BEGIN
            CurrPage.ConfigLines.PAGE.PerformAction;

            IF WizardAction = WizardAction::Export THEN BEGIN
              FileMgt.DownloadToFile(ServerFilename,ClientFilename);
              ShowStep(Steps::ImportExportCompleted,FALSE,FALSE,TRUE);
            END ELSE
              ShowStep(Steps::ImportExportCompleted,FALSE,TRUE,FALSE);
          END;

        3:
          ShowStep(Steps::WizardSetupCompanyStory,FALSE,TRUE,TRUE);

        4:
          BEGIN
            IF COSetup.GET THEN BEGIN
              ClientID := COSetup."Client ID";
              IF COSetup."Client Password" <> '' THEN
                ClientPassword := '****************'
              ELSE
                ClientPassword := '';
            END;

            ShowStep(Steps::SpecifyClientCredentials,TRUE,TRUE,TRUE);
          END;

        5:
          BEGIN
            IF NextStep = 1 THEN BEGIN
              // PROCESS THE CONTINIA ONLINE SETTINGS AND TEST THE CONNECTION IF REQUESTED
              IF NOT COSetup.GET THEN
                COSetup.INSERT(TRUE);

              COSetup."Client ID" := ClientID;
              IF ClientPassword <> '****************' THEN
                COSetup."Client Password" := ClientPassword;

              COSetup.MODIFY;

              IF TestConnection THEN
                OnlineMgt.TestConnection;

              CreateDCProfile := TRUE;
              SetDCDefaultProfile := TRUE;
            END;


            // SETUP THE DEFAULT VALUES FOR DC SETUP AND SHOW THE STEP
            DCSetup.GET;
            COSetup.GET;

            IF (NextStep = 1) AND (IsNewCompany) AND (OnlineMgt.IsDev OR OnlineMgt.IsDemo) THEN
              UseCloudOCR := TRUE
            ELSE
              UseCloudOCR := DCSetup."Use Cloud OCR";

            CompanyCode := DCSetup."Company Code";

            IF (GetTopFolder(DCSetup."File Path for OCR-proc. files") = GetTopFolder(DCSetup."Scanned File Path for OCR")) AND
              (GetTopFolder(DCSetup."File Path for OCR-proc. files") = GetTopFolder(DCSetup."PDF File Path for OCR")) AND
              (GetTopFolder(DCSetup."File Path for OCR-proc. files") = GetTopFolder(DCSetup."TIFF File Path")) AND
              (GetTopFolder(DCSetup."File Path for OCR-proc. files") = GetTopFolder(DCSetup."PDF File Path")) AND
              (GetTopFolder(DCSetup."File Path for OCR-proc. files") = GetTopFolder(DCSetup."E-mail File Path")) AND
              (GetTopFolder(DCSetup."File Path for OCR-proc. files") = GetTopFolder(DCSetup."Miscellaneous File Path"))
            THEN
              DocFilePath := GetTopFolder(DCSetup."File Path for OCR-proc. files") + '\'
            ELSE
              DocFilePath := Text002;

            ShowStep(Steps::SpecifyGeneralDCSetupInfo,TRUE,TRUE,TRUE);
          END;

        6:
          BEGIN
            DCSetup.GET;

            IF NextStep = 1 THEN BEGIN
              // PROCESS THE DOCUMENT CAPTURE SETTINGS ACTIVATE THE COMPANY
              IF UseCloudOCR AND (CompanyCode = '') THEN
                ERROR(Text007);

              DCSetup."Company Code" := CompanyCode;
              DCSetup."Use Cloud OCR" := UseCloudOCR;

              IF (GetTopFolder(DCSetup."File Path for OCR-proc. files") <> DocFilePath) AND
                (DocFilePath <> Text002)
              THEN BEGIN
                DocFilePath := DELCHR(DocFilePath,'>','\') + '\';
                DCSetup."Scanned File Path for OCR" := DocFilePath + GetSubFolder(DCSetup."Scanned File Path for OCR");
                DCSetup."PDF File Path for OCR" := DocFilePath + GetSubFolder(DCSetup."PDF File Path for OCR");
                DCSetup."File Path for OCR-proc. files" := DocFilePath + GetSubFolder(DCSetup."File Path for OCR-proc. files");
                DCSetup."TIFF File Path" := DocFilePath + GetSubFolder(DCSetup."TIFF File Path");
                DCSetup."PDF File Path" := DocFilePath + GetSubFolder(DCSetup."PDF File Path");
                DCSetup."E-mail File Path" := DocFilePath + GetSubFolder(DCSetup."E-mail File Path");
                DCSetup."Miscellaneous File Path" := DocFilePath + GetSubFolder(DCSetup."Miscellaneous File Path");
              END;

              DCSetup.MODIFY;

              IF CreateDCProfile THEN BEGIN
                IF NOT Profile.GET('DC') THEN BEGIN
                  Profile."Profile ID" := 'DC';
                  Profile.Description := 'Document Capture';
                  Profile."Role Center ID" := PAGE::"Document Capture Role Center";
                  Profile.INSERT(TRUE);
                END;
              END;

              IF SetDCDefaultProfile THEN BEGIN
                Profile.MODIFYALL("Default Role Center",FALSE);

                Profile.GET('DC');
                Profile."Default Role Center" := TRUE;
                Profile.MODIFY;
              END;

              COMMIT;


              IF ActivateCompany THEN
                IF NOT CODC.ActivateCompany THEN
                  ERROR('');

              ActivateCompany := FALSE;

              IF UseCloudOCR AND ExportConfigFiles THEN BEGIN
                DCSetup.SetHideValidate(TRUE);
                DCSetup.CreateAndAssignConnEndpoints;
              END;

              IF ExportConfigFiles THEN
                CODEUNIT.RUN(CODEUNIT::"Export Doc. Cat. Config. - DC");
            END;


            // SETUP THE DEFAULT VALUES FOR WEB APPROVAL SETUP AND SHOW THE STEP
            COSetup.GET;
            EnableWebApproval := COSetup."Enable Web Approval";
            UseContiniaOnlineWeb := COSetup."Use Continia Online Web Portal";
            WebSiteUrl := COSetup."Web Site Url";
            WindowsWSUrl := COSetup."Windows Web Service URL";
            DatabaseWSUrl := COSetup."Database Web Service URL";
            LocalDomainName := COSetup."Local Domain Name";

            ShowStep(Steps::SpecifyWebApproval,TRUE,TRUE,TRUE);
          END;

        7:
          BEGIN
            COSetup.GET;
            IF UseContiniaOnlineWeb <> COSetup."Use Continia Online Web Portal" THEN
              COSetup.VALIDATE("Use Continia Online Web Portal",UseContiniaOnlineWeb);

            IF WebSiteUrl <> COSetup."Web Site Url" THEN
              COSetup.VALIDATE("Web Site Url",WebSiteUrl);

            IF EnableWebApproval <> COSetup."Enable Web Approval" THEN
              COSetup.VALIDATE("Enable Web Approval",EnableWebApproval);

            COSetup."Windows Web Service URL" := WindowsWSUrl;
            COSetup."Database Web Service URL" := DatabaseWSUrl;
            COSetup."Local Domain Name" := LocalDomainName;
            COSetup.MODIFY;

            ShowStep(Steps::WizardCompleted,TRUE,FALSE,TRUE);
          END;
      END;

      Step += NextStep;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE ShowStep@1160040013(NewStep@1160040000 : Integer;EnableBack@1160040001 : Boolean;EnableNext@1160040002 : Boolean;EnableFinish@1160040003 : Boolean);
    BEGIN
      WizardStartVisible := FALSE;
      ImportExportSelectionVisible := FALSE;
      ImportExportCompletedVisible := FALSE;
      ConfigLinesVisible := FALSE;
      WizardSetupCompanyStoryVisible := FALSE;
      SpecifyClientCredentialsVisible := FALSE;
      SpecifyGeneralDCSetupInfoVisible := FALSE;
      SpecifyWebApprovalVisible := FALSE;
      WizardCompletedVisible := FALSE;

      CASE NewStep OF
        Steps::WizardStart:
          WizardStartVisible := TRUE;

        Steps::ImportExportSelection:
          BEGIN
            ImportExportSelectionVisible := TRUE;
            ConfigLinesVisible := TRUE;
          END;

        Steps::ImportExportCompleted:
          ImportExportCompletedVisible := TRUE;

        Steps::WizardSetupCompanyStory:
          WizardSetupCompanyStoryVisible := TRUE;

        Steps::SpecifyClientCredentials:
          SpecifyClientCredentialsVisible := TRUE;

        Steps::SpecifyGeneralDCSetupInfo:
          SpecifyGeneralDCSetupInfoVisible := TRUE;

        Steps::SpecifyWebApproval:
          SpecifyWebApprovalVisible := TRUE;

        Steps::WizardCompleted:
          WizardCompletedVisible := TRUE;
      END;

      BackEnabled := EnableBack;
      NextEnabled := EnableNext;
      FinishEnabled := EnableFinish;
    END;

    PROCEDURE GetTopFolder@1160040016(Path@1160040000 : Text[250]) : Text[250];
    VAR
      FileSystemMgt@1160040001 : Codeunit 6085584;
    BEGIN
      IF Path = '' THEN
        EXIT;

      Path := DELCHR(Path,'>','\');
      Path := COPYSTR(Path,1,FileSystemMgt.LastIndexOf(Path,'\',TRUE)-1);
      EXIT(DELCHR(Path,'>','\'));
    END;

    PROCEDURE GetSubFolder@1160040035(Path@1160040000 : Text[250]) : Text[250];
    VAR
      FileSystemMgt@1160040001 : Codeunit 6085584;
    BEGIN
      IF Path = '' THEN
        EXIT;

      Path := DELCHR(Path,'<>','\');
      Path := COPYSTR(Path,FileSystemMgt.LastIndexOf(Path,'\',TRUE));
      EXIT(DELCHR(Path,'<>','\'));
    END;

    PROCEDURE EnableWizardStartFields@6085574();
    BEGIN
      FilenameEnabled := WizardAction <> WizardAction::Setup;
    END;

    BEGIN
    END.
  }
}

