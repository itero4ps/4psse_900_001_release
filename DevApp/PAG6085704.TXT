OBJECT Page 6085704 Purch. Credit Memo Match
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW16.00.00.4.00.03;
  }
  PROPERTIES
  {
    CaptionML=ENU=Return Shipment Matching;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table6085590;
    PageType=Card;
    OnOpenPage=BEGIN
                 CurrPage.DocumentLines.PAGE.SetShowMatchedQty(TRUE);

                 Channel := CREATEGUID;
                 CLEAR(EventNotifierSource);
                 EventNotifierSource := FORMAT(Channel);

                 GLSetup.GET;
                 DCSetup.GET;
               END;

    OnAfterGetRecord=VAR
                       ReturnShptLine@1160040000 : Record 6651;
                       PurchLine@1160040003 : Record 39;
                       CurrencyCode@1160040002 : Code[10];
                     BEGIN
                       OurDocNo := COPYSTR(PurchDocMgnt.GetOurDocumentNo(Rec),1,STRLEN(OurDocNo));

                       UpdateInfoBar;

                       IF (PurchDocMgnt.GetCurrencyCode(Rec) = GLSetup."LCY Code") AND (NOT DCSetup."Fill-out LCY") THEN
                         CurrencyCode := ''
                       ELSE
                         CurrencyCode := PurchDocMgnt.GetCurrencyCode(Rec);

                       ReturnShptLine.SETCURRENTKEY("Pay-to Vendor No.");
                       ReturnShptLine.FILTERGROUP(4);
                       ReturnShptLine.SETRANGE("Pay-to Vendor No.",GetSourceID);
                       ReturnShptLine.SETFILTER("Return Qty. Shipped Not Invd.",'<>%1',0);
                       ReturnShptLine.SETRANGE("Currency Code",CurrencyCode);
                       IF FilterOnOrderNo THEN
                         ReturnShptLine.SETRANGE("Return Order No.",OurDocNo)
                       ELSE
                         ReturnShptLine.SETFILTER("Return Order No.",'<>XXX');
                       ReturnShptLine.FILTERGROUP(0);
                       CurrPage.ReturnShptLines.PAGE.SETTABLEVIEW(ReturnShptLine);
                       CurrPage.ReturnShptLines.PAGE.SetDocument(Rec);
                       CurrPage.ReturnShptLines.PAGE.SetChannel(Channel);
                       CurrPage.ReturnShptLines.PAGE.UpdatePage;


                       PurchLine.SETCURRENTKEY("Document Type","Pay-to Vendor No.","Currency Code");
                       PurchLine.FILTERGROUP(4);
                       PurchLine.SETRANGE("Document Type",PurchLine."Document Type"::"Return Order");
                       PurchLine.SETRANGE("Pay-to Vendor No.",GetSourceID);
                       PurchLine.SETRANGE("Currency Code",CurrencyCode);
                       PurchLine.SETFILTER("Outstanding Quantity",'<>%1',0);
                       IF FilterOnOrderNo THEN
                         PurchLine.SETRANGE("Document No.",OurDocNo)
                       ELSE
                         PurchLine.SETFILTER("Document No.",'<>XXX');
                       PurchLine.FILTERGROUP(0);
                       CurrPage.OrderLines.PAGE.SETTABLEVIEW(PurchLine);
                       CurrPage.OrderLines.PAGE.SetDocument(Rec);
                       CurrPage.OrderLines.PAGE.SetChannel(Channel);
                       CurrPage.OrderLines.PAGE.UpdatePage;
                     END;

    ActionList=ACTIONS
    {
      { 1000000018;  ;ActionContainer;
                      Name=<Action1900000003>;
                      ActionContainerType=RelatedInformation }
      { 1000000015;1 ;ActionGroup;
                      Name=<Action1000000024>;
                      CaptionML=ENU=&Template }
      { 1000000014;2 ;Action    ;
                      Name=<Action1000000023>;
                      ShortCutKey=Ctrl+S;
                      CaptionML=ENU=&Template Card;
                      RunObject=Page 6085584;
                      RunPageView=SORTING(No.);
                      RunPageLink=No.=FIELD(Template No.) }
      { 1000000013;2 ;Action    ;
                      Name=<Action1000000027>;
                      ShortCutKey=Ctrl+T;
                      CaptionML=ENU=&Translations;
                      OnAction=VAR
                                 Template@1000000001 : Record 6085579;
                               BEGIN
                                 Template.GET("Template No.");
                                 Template.TESTFIELD("Codeunit ID: Transl. (Doc)");
                                 CODEUNIT.RUN(Template."Codeunit ID: Transl. (Doc)",Rec);
                               END;
                                }
      { 1160040005;1 ;ActionGroup;
                      Name=<Action1160040011>;
                      CaptionML=ENU=Vendor }
      { 1160040002;2 ;Action    ;
                      Name=<Action1160040010>;
                      CaptionML=ENU=Vendor Card;
                      Promoted=Yes;
                      Image=Vendor;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 Vendor@1160040000 : Record 23;
                               BEGIN
                                 Vendor.GET(GetSourceID);
                                 PAGE.RUN(PAGE::"Vendor Card",Vendor);
                               END;
                                }
      { 1160040003;2 ;Action    ;
                      Name=<Action1160040014>;
                      CaptionML=ENU=&Unposted Documents;
                      Promoted=Yes;
                      Image=Invoice;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 PurchHeader@1160040000 : Record 38;
                               BEGIN
                                 PurchHeader.SETRANGE("Pay-to Vendor No.",GetSourceID);
                                 PAGE.RUN(PAGE::"Purchase Documents",PurchHeader);
                               END;
                                }
      { 1160040000;2 ;Action    ;
                      Name=<Action1160040012>;
                      CaptionML=ENU=Ledger E&ntries;
                      Promoted=Yes;
                      Image=VendorLedger;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 VendLedgEntry@1160040000 : Record 25;
                               BEGIN
                                 VendLedgEntry.SETCURRENTKEY("Vendor No.");
                                 VendLedgEntry.SETRANGE("Vendor No.",GetSourceID);
                                 PAGE.RUN(PAGE::"Vendor Ledger Entries",VendLedgEntry);
                               END;
                                }
      { 1000000012;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000011;1 ;ActionGroup;
                      Name=<Action1000000026>;
                      CaptionML=ENU=F&unctions }
      { 1160040004;2 ;Action    ;
                      Name=<Action1160040005>;
                      ShortCutKey=Shift+Ctrl+O;
                      CaptionML=ENU=Filter on Order No.;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=FilterLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FilterOnOrderNo := NOT FilterOnOrderNo;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1000000008;2 ;Action    ;
                      Name=<Action1000000036>;
                      ShortCutKey=Ctrl+M;
                      CaptionML=ENU=Perform &Automatic Match;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Splitlines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 TestStatus;

                                 PurchDocMgnt.AutoMatch(Rec);
                                 CurrPage.DocumentLines.PAGE.UpdatePage;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1000000006;2 ;Action    ;
                      Name=<Action1000000019>;
                      CaptionML=ENU=Remove &All Matches;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Cancel;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 PurchDocMatch@1000000002 : Record 6085700;
                               BEGIN
                                 PurchDocMatch.SETRANGE("Document No.","No.");
                                 PurchDocMatch.DELETEALL;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 161024013;1;Field   ;
                Name=InfoBarAddIn;
                SourceExpr=InfoBarAddInSource;
                ControlAddIn=[Akeyto.DocumentCapture.Dynamics.Nav.MatchInfoBar;PublicKeyToken=3f74cf6929f40a38];
                ShowCaption=No }

    { 161024012;1;Field   ;
                Name=EventNotifier;
                SourceExpr=EventNotifierSource;
                ControlAddIn=[Akeyto.DocumentCapture.Dynamics.Nav.EventNotifier;PublicKeyToken=61f876910b9e346c];
                OnControlAddIn=BEGIN
                                 UpdateInfoBar;
                               END;
                                }

    { 1000000003;1;Part   ;
                Name=ReturnShptLines;
                CaptionML=ENU=Return Shipment Lines;
                PagePartID=Page6085705;
                PartType=Page }

    { 1160040001;1;Part   ;
                Name=OrderLines;
                CaptionML=ENU=Return Order Lines;
                PagePartID=Page6085749;
                PartType=Page }

    { 1000000007;1;Part   ;
                Name=DocumentLines;
                CaptionML=ENU=Document Lines;
                PagePartID=Page6085597;
                Editable=FALSE }

    { 1000000026;;Container;
                ContainerType=FactBoxArea }

    { 1000000025;1;Part   ;
                Name=CaptureUI;
                CaptionML=ENU=Source Document;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page6085593 }

  }
  CODE
  {
    VAR
      GLSetup@1160040002 : Record 98;
      DCSetup@1160040001 : Record 6085573;
      PurchDocMgnt@1000000009 : Codeunit 6085709;
      Text001@1000000016 : TextConst 'ENU=Manual Match';
      Text002@1000000008 : TextConst 'ENU=Do you wish to reset matches for all document lines?';
      CaptureAddinLib@161024016 : Codeunit 6085660;
      CaptureXmlDoc@161024015 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      InfoBarAddInSource@161024014 : Text;
      EventNotifierSource@161024013 : Text;
      Channel@161024012 : GUID;
      Text003@161024018 : TextConst 'ENU=Amount to Match';
      Text004@161024017 : TextConst 'ENU=Matched Amount';
      Text005@1160040000 : TextConst 'ENU=Difference';
      OurDocNo@1160040004 : Code[20];
      FilterOnOrderNo@1160040003 : Boolean;

    PROCEDURE SetDocument@1000000004(VAR NewDocument@1000000001 : Record 6085590);
    VAR
      Value@1000000003 : Record 6085593;
      Field@1000000005 : Record 6085580;
      CaptureMgnt@1000000006 : Codeunit 6085576;
      i@1000000000 : Integer;
      NoOfLines@1000000004 : Integer;
      Arr@1000000002 : ARRAY [100] OF Text[30];
    BEGIN
      GET(NewDocument."No.");
    END;

    PROCEDURE UpdateInfoBar@161024012();
    VAR
      AppMgnt@161024012 : Codeunit 1;
      AmountToMatch@1160040002 : Decimal;
      MatchedAmount@1160040001 : Decimal;
      MatchDiffAmount@1160040000 : Decimal;
    BEGIN
      AmountToMatch := PurchDocMgnt.GetAmountToMatch(Rec);
      MatchedAmount := PurchDocMgnt.GetMatchedAmount(Rec);
      MatchDiffAmount := AmountToMatch - MatchedAmount;

      CaptureAddinLib.BuildMatchInfoBarCommand(CaptureXmlDoc,
        PurchDocMgnt.GetOurDocNoDesc(Rec),OurDocNo,
        Text003,FORMAT(AmountToMatch,0,AppMgnt.AutoFormatTranslate(1,PurchDocMgnt.GetCurrencyCode(Rec))),
        Text004,FORMAT(MatchedAmount,0,AppMgnt.AutoFormatTranslate(1,PurchDocMgnt.GetCurrencyCode(Rec))),
        Text005,FORMAT(MatchDiffAmount,0,AppMgnt.AutoFormatTranslate(1,PurchDocMgnt.GetCurrencyCode(Rec))));

      CaptureAddinLib.XmlToText(CaptureXmlDoc,InfoBarAddInSource);
      CLEAR(CaptureXmlDoc);
    END;

    EVENT CaptureXmlDoc@161024015::ondataavailable@198();
    BEGIN
    END;

    EVENT CaptureXmlDoc@161024015::onreadystatechange@-609();
    BEGIN
    END;

    BEGIN
    END.
  }
}

