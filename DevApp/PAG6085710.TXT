OBJECT Page 6085710 Purch. Approval Entries
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW17.00.00.4.04,4PS9.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Purch. Approval Entries;
    LinksAllowed=No;
    SourceTable=Table454;
    PageType=List;
    SourceTableTemporary=Yes;
    PromotedActionCategoriesML=ENU=0,Approval,2,Show;
    ShowFilter=No;
    OnInit=BEGIN
             RejectVisible := TRUE;
             ApproveVisible := TRUE;

             IF GetIsOutOfOffice THEN
               MESSAGE(Text003);
           END;

    OnOpenPage=VAR
                 Filterstring@1000 : Text[250];
               BEGIN
                 UpdateList(FALSE);  //**4PS CALL C023440
               END;

    OnAfterGetRecord=VAR
                       UserSetup@161024012 : Record 91;
                       Purchaser@161024013 : Record 13;
                       Employee@1100528201 : Record 5200;
                       Desc@1100528200 : Text[100];
                     BEGIN
                       Overdue := Overdue::" ";
                       IF FormatField(Rec) THEN
                         Overdue := Overdue::Yes;

                       //**4PS.so
                       //IF NOT PurchHeader.GET("Document Type","Document No.") THEN
                       //  CLEAR(PurchHeader);
                       //**4PS.eo
                       //**4PS.sn
                       CASE "Table ID" OF
                         DATABASE::"Purchase Header":
                           BEGIN
                             IF NOT PurchHeader.GET("Document Type","Document No.") THEN
                               CLEAR(PurchHeader);
                             Description := PurchHeader."Buy-from Vendor Name";
                           END;
                         DATABASE::"Purch. Inv. Header":
                           BEGIN
                             IF NOT PurchInvHeader.GET("Document No.") THEN
                               CLEAR(PurchInvHeader);
                             Description := PurchInvHeader."Buy-from Vendor Name";
                           END;
                         DATABASE::"Purch. Cr. Memo Hdr.":
                           BEGIN
                             IF NOT PurchCrMemoHdr.GET("Document No.") THEN
                               CLEAR(PurchCrMemoHdr);
                             Description := PurchCrMemoHdr."Buy-from Vendor Name";
                           END;
                       END;
                       //**4PS.en
                       IF "Document Type" = 6 THEN BEGIN
                         _Status := 5;
                         Overdue := Overdue::" ";
                         UserSetup.GET("Approver ID");
                       //**4PS.so
                         //UserSetup.TESTFIELD("Salespers./Purch. Code");
                         //Purchaser.GET(UserSetup."Salespers./Purch. Code");
                         //IF Purchaser.Name = '' THEN
                         //  Purchaser.Name := Purchaser.Code;
                         //IF "Temp. Entry Type" = "Temp. Entry Type"::"Out of Office Sharing" THEN
                         //  Description := STRSUBSTNO(Text005,Purchaser.Name)
                         //ELSE
                         //   Description := STRSUBSTNO(Text006,Purchaser.Name);
                       //**4PS.sn
                         IF UserSetup."Employee No." <> '' THEN BEGIN
                           IF Employee.GET(UserSetup."Employee No.") THEN
                             Desc := Employee."Full Name"
                           ELSE
                             Desc := Employee."No.";
                         END ELSE
                           Desc := UserSetup."Approver ID";
                         IF "Temp. Entry Type" = "Temp. Entry Type"::"Out of Office Sharing" THEN
                           Description := STRSUBSTNO(Text005, Desc)
                         ELSE
                           Description := STRSUBSTNO(Text006, Desc);
                       //
                         IsHeading := TRUE;
                       END ELSE BEGIN
                         _Status := Status;
                         //Description := PurchHeader."Buy-from Vendor Name";
                         IsHeading := FALSE;
                       END;

                       IF ("Temp. Entry Type" <> "Temp. Entry Type"::Normal) AND ("Document No." <> '') THEN
                         Description := '   ' + Description;

                       _DocumentType := "Document Type";
                       CALCFIELDS(Comment);
                     END;

    OnAfterGetCurrRecord=VAR
                           InvoiceApprovalLine@1100528200 : Record 11012032;
                         BEGIN
                           //**4PS
                           CASE "Table ID" OF
                             DATABASE::"Purchase Header":
                               BEGIN
                                 PostedCrMLinesSFVISIBLE := FALSE;
                                 PostedInvLinesSFVISIBLE := FALSE;
                                 ApprovalLinesSFVISIBLE := FALSE;
                                 PurchLinesSFVISIBLE := TRUE;
                                 CurrPage.PurchLinesSF.PAGE.SetView("Document Type","Document No.");
                               END;
                             DATABASE::"Purch. Inv. Header":
                               BEGIN
                                 IF PurchInvHeader.GET("Document No.") THEN;
                                 IF PurchInvHeader."Invoice Approved" THEN BEGIN
                                   PostedCrMLinesSFVISIBLE := FALSE;
                                   ApprovalLinesSFVISIBLE := FALSE;
                                   PurchLinesSFVISIBLE := FALSE;
                                   PostedInvLinesSFVISIBLE := TRUE;
                                   CurrPage.PostedInvLinesSF.PAGE.SetView("Document No.");
                                 END ELSE BEGIN
                                   PostedCrMLinesSFVISIBLE := FALSE;
                                   PostedInvLinesSFVISIBLE := FALSE;
                                   PurchLinesSFVISIBLE := FALSE;
                                   ApprovalLinesSFVISIBLE := TRUE;
                                   InvoiceApprovalLine."Document Type" := InvoiceApprovalLine."Document Type"::"Purchase Invoice";
                                   CurrPage.ApprovalLinesSF.PAGE.SetView(InvoiceApprovalLine."Document Type","Document No.");
                                 END;
                               END;
                             DATABASE::"Purch. Cr. Memo Hdr.":
                               BEGIN
                                 IF PurchCrMemoHdr.GET("Document No.") THEN;
                                 IF PurchCrMemoHdr."Credit Memo Approved" THEN BEGIN
                                   PostedInvLinesSFVISIBLE := FALSE;
                                   ApprovalLinesSFVISIBLE := FALSE;
                                   PurchLinesSFVISIBLE := FALSE;
                                   PostedCrMLinesSFVISIBLE := TRUE;
                                   CurrPage.PostedCrMLinesSF.PAGE.SetView("Document No.");
                                 END ELSE BEGIN
                                   PostedCrMLinesSFVISIBLE := FALSE;
                                   PostedInvLinesSFVISIBLE := FALSE;
                                   PurchLinesSFVISIBLE := FALSE;
                                   ApprovalLinesSFVISIBLE := TRUE;
                                   InvoiceApprovalLine."Document Type" := InvoiceApprovalLine."Document Type"::"Credit Memo";
                                   CurrPage.ApprovalLinesSF.PAGE.SetView(InvoiceApprovalLine."Document Type","Document No.");
                                 END;
                               END;
                           END;
                           //
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 161024021;1  ;ActionGroup;
                      Name=<Action60>;
                      CaptionML=ENU=F&unctions }
      { 33      ;1   ;ActionGroup;
                      CaptionML=ENU=&Show }
      { 161024016;2  ;Action    ;
                      Name=<Action161024017>;
                      ShortCutKey=Shift+Ctrl+P;
                      CaptionML=ENU=&PDF File;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=View;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 Document@161024012 : Record 6085590;
                               BEGIN
                                 IF "Document No." = '' THEN
                                   EXIT;

                                 //**4PS.sn
                                 CASE "Table ID" OF
                                   DATABASE::"Purchase Header":
                                   BEGIN
                                 //**4PS.en
                                     Document.SETCURRENTKEY("Created Doc. Type","Created Doc. Subtype","Created Doc. ID","Created Doc. Ref. No.");
                                     Document.SETRANGE("Created Doc. Type",DATABASE::"Purchase Header");
                                     Document.SETRANGE("Created Doc. Subtype","Document Type");
                                     Document.SETRANGE("Created Doc. ID","Document No.");
                                     IF Document.FINDFIRST THEN
                                       Document.OpenPDFFile;
                                 //**4PS.sn
                                   END;
                                   DATABASE::"Purch. Inv. Header":
                                   BEGIN
                                     PurchInvHeader.GET("Document No.");
                                     IF Document.GET(PurchInvHeader."Ext. Document ID") THEN
                                       Document.OpenPDFFile;
                                   END;
                                   DATABASE::"Purch. Cr. Memo Hdr.":
                                   BEGIN
                                     PurchCrMemoHdr.GET("Document No.");
                                     IF Document.GET(PurchCrMemoHdr."Ext. Document ID") THEN
                                       Document.OpenPDFFile;
                                   END;
                                 END;
                                 //**4PS.en
                               END;
                                }
      { 38      ;2   ;Action    ;
                      CaptionML=ENU=Document;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Edit;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 DCApprovalMgnt@161024013 : Codeunit 6085722;
                               BEGIN
                                 IF "Document No." = '' THEN
                                   EXIT;

                                 DCApprovalMgnt.ShowPurchDocFromApprEntry(Rec);
                                 UpdateList(TRUE); //**4PS C023440
                               END;
                                }
      { 42      ;2   ;Action    ;
                      CaptionML=ENU=Comments;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ViewComments;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalCmtMgnt@1000 : Codeunit 6085600;
                               BEGIN
                                 IF "Document No." = '' THEN
                                   EXIT;

                                 ApprovalCmtMgnt.ShowCmtFromAppvlEntry(Rec);
                               END;
                                }
      { 49      ;2   ;Action    ;
                      CaptionML=ENU=O&verdue Entries;
                      Image=OverdueEntries;
                      OnAction=BEGIN
                                 SETFILTER(Status,'%1|%2',Status::Created,Status::Open);
                                 SETFILTER("Due Date",'<%1',TODAY);
                               END;
                                }
      { 50      ;2   ;Action    ;
                      CaptionML=ENU=All Entries;
                      Image=Entries;
                      OnAction=BEGIN
                                 SETRANGE(Status);
                                 SETRANGE("Due Date");
                               END;
                                }
      { 161024022;2  ;Action    ;
                      Name=<Action61>;
                      CaptionML=ENU=Out of Office Setup;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SendTo;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 PAGE.RUN(PAGE::"Set-up Out of Office");
                               END;
                                }
      { 6085573 ;2   ;Action    ;
                      Name=<Action1160040001>;
                      CaptionML=ENU=Update List;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Refresh;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 //UpdateList; //**4PS.o
                                 UpdateList(TRUE); //**4PS.n
                               END;
                                }
      { 1100409004;2 ;Action    ;
                      CaptionML=ENU=Filter Setup;
                      Promoted=Yes;
                      Image=Filter;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 FilterSetup;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 19      ;1   ;Action    ;
                      Name=Approve;
                      CaptionML=ENU=&Approve;
                      Promoted=Yes;
                      Visible=ApproveVisible;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ApprovalEntry@1001 : Record 454;
                                 ApprovalEntry2@1100528000 : TEMPORARY Record 454;
                               BEGIN
                                 IF "Document No." = '' THEN
                                   EXIT;

                                 //**4PS.sn
                                 ApprovalEntry2.COPY(Rec, TRUE);
                                 CurrPage.SETSELECTIONFILTER(ApprovalEntry2);
                                 IF ApprovalEntry2.COUNT > 1 THEN BEGIN
                                   IF ApprovalEntry2.FINDSET THEN
                                     REPEAT
                                       ApprovalEntry.GET(ApprovalEntry2."Table ID",
                                                         ApprovalEntry2."Document Type",
                                                         ApprovalEntry2."Document No.",
                                                         ApprovalEntry2."Sequence No.");
                                       ApprovalEntry.TESTFIELD(Status, ApprovalEntry.Status::Open);
                                       DCApprovalsBridge.ApproveApprovalRequest(ApprovalEntry);
                                     UNTIL ApprovalEntry2.NEXT = 0;
                                 END ELSE BEGIN
                                   //**4PS.en
                                   ApprovalEntry := Rec;
                                   ApprovalEntry.FIND('=');
                                   ApprovalEntry.TESTFIELD(Status,ApprovalEntry.Status::Open);
                                   DCApprovalsBridge.ApproveApprovalRequest(ApprovalEntry);
                                 END; //**4PS

                                 UpdateList(TRUE); //**4PS C023440
                               END;
                                }
      { 2       ;1   ;Action    ;
                      Name=Reject;
                      CaptionML=ENU=&Reject;
                      Promoted=Yes;
                      Visible=RejectVisible;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 DCAppMgnt@161024013 : Codeunit 6085722;
                                 ApprovalEntry2@1100528000 : TEMPORARY Record 454;
                                 ApprovalsBridge4PSConstruct@1100528200 : Codeunit 11125348;
                               BEGIN
                                 IF "Document No." = '' THEN
                                   EXIT;

                                 //**4PS.so
                                 //PurchHeader.GET("Document Type","Document No.");
                                 //DCAppMgnt.Reject(PurchHeader);
                                 //**4PS.eo

                                 //**4PS.sn
                                 ApprovalEntry2.COPY(Rec, TRUE);
                                 CurrPage.SETSELECTIONFILTER(ApprovalEntry2);
                                 IF ApprovalEntry2.COUNT > 1 THEN BEGIN
                                   IF ApprovalEntry2.FINDSET THEN
                                     REPEAT
                                       CASE ApprovalEntry2."Table ID" OF
                                         DATABASE::"Purchase Header":
                                         BEGIN
                                           PurchHeader.GET(ApprovalEntry2."Document Type",ApprovalEntry2."Document No.");
                                           DCAppMgnt.Reject(PurchHeader);
                                         END;
                                       DATABASE::"Purch. Inv. Header":
                                         BEGIN
                                           PurchInvHeader.GET(ApprovalEntry2."Document No.");
                                           ApprovalsBridge4PSConstruct.Reject(PurchInvHeader);
                                         END;
                                       DATABASE::"Purch. Cr. Memo Hdr.":
                                         BEGIN
                                           PurchCrMemoHdr.GET(ApprovalEntry2."Document No.");
                                           ApprovalsBridge4PSConstruct.Reject(PurchCrMemoHdr);
                                         END;
                                       END;
                                     UNTIL ApprovalEntry2.NEXT = 0;
                                 END ELSE BEGIN
                                 //**4PS.en
                                   CASE "Table ID" OF
                                     DATABASE::"Purchase Header":
                                       BEGIN
                                         PurchHeader.GET("Document Type","Document No.");
                                         DCAppMgnt.Reject(PurchHeader);
                                       END;
                                     DATABASE::"Purch. Inv. Header":
                                       BEGIN
                                         PurchInvHeader.GET("Document No.");
                                         ApprovalsBridge4PSConstruct.Reject(PurchInvHeader);
                                       END;
                                     DATABASE::"Purch. Cr. Memo Hdr.":
                                       BEGIN
                                         PurchCrMemoHdr.GET("Document No.");
                                         ApprovalsBridge4PSConstruct.Reject(PurchCrMemoHdr);
                                       END;
                                   END;
                                 END;
                                 //**4PS.en

                                 UpdateList(TRUE); //**4PS C023440
                               END;
                                }
      { 35      ;1   ;Action    ;
                      Name=<Action35>;
                      CaptionML=ENU=&Forward;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Delegate;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ApprovalEntry@1001 : Record 454;
                                 DCApprovalMgnt@161024014 : Codeunit 6085722;
                                 ApprovalEntry2@1100528000 : TEMPORARY Record 454;
                               BEGIN
                                 IF "Document No." = '' THEN
                                   EXIT;

                                 //**4PS.sn
                                 ApprovalEntry2.COPY(Rec, TRUE);
                                 CurrPage.SETSELECTIONFILTER(ApprovalEntry2);
                                 IF ApprovalEntry2.COUNT > 1 THEN BEGIN
                                   IF ApprovalEntry2.FINDSET THEN
                                     REPEAT
                                       ApprovalEntry.GET(ApprovalEntry2."Table ID",
                                                         ApprovalEntry2."Document Type",
                                                         ApprovalEntry2."Document No.",
                                                         ApprovalEntry2."Sequence No.");
                                       ApprovalEntry.TESTFIELD(Status, ApprovalEntry.Status::Open);
                                       DCApprovalMgnt.DelegateApprovalRequest(ApprovalEntry);
                                     UNTIL ApprovalEntry2.NEXT = 0;
                                 END ELSE BEGIN
                                 //**4PS.en
                                   ApprovalEntry := Rec;
                                   ApprovalEntry.FIND('=');
                                   ApprovalEntry.TESTFIELD(Status,ApprovalEntry.Status::Open);
                                   DCApprovalMgnt.DelegateApprovalRequest(ApprovalEntry);
                                   UpdateList(TRUE); //**4PS C023440;

                                   MESSAGE(Text002);
                                 END; //**4PS
                               END;
                                }
      { 161024019;1  ;Action    ;
                      CaptionML=ENU=On Hold;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Lock;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 DCApprovalMgnt@161024014 : Codeunit 6085722;
                                 ApprovalEntry2@1100528000 : TEMPORARY Record 454;
                               BEGIN
                                 IF "Document No." = '' THEN
                                   EXIT;

                                 //**4PS.sn
                                 ApprovalEntry2.COPY(Rec, TRUE);
                                 CurrPage.SETSELECTIONFILTER(ApprovalEntry2);
                                 IF ApprovalEntry2.COUNT > 1 THEN BEGIN
                                   IF ApprovalEntry2.FINDSET THEN
                                     REPEAT

                                       IF ApprovalEntry2."Table ID" = DATABASE::"Purchase Header" THEN BEGIN   //**4PS
                                         PurchHeader.GET(ApprovalEntry2."Document Type",ApprovalEntry2."Document No.");
                                         IF PurchHeader."On Hold" = '' THEN
                                           DCApprovalMgnt.PutOnHold(PurchHeader)
                                         ELSE
                                           DCApprovalMgnt.RemoveOnHold(PurchHeader);
                                       END ELSE BEGIN
                                         DCApprovalMgnt.SwitchOnHold4PS(ApprovalEntry2."Document Type", ApprovalEntry2."Document No.",TRUE,TRUE);
                                       END;

                                     UNTIL ApprovalEntry2.NEXT = 0;
                                 END ELSE BEGIN
                                   IF "Table ID" = DATABASE::"Purchase Header" THEN BEGIN
                                   //**4PS.en
                                     PurchHeader.GET("Document Type","Document No.");
                                     IF PurchHeader."On Hold" = '' THEN
                                       DCApprovalMgnt.PutOnHold(PurchHeader)
                                     ELSE
                                       DCApprovalMgnt.RemoveOnHold(PurchHeader);
                                 //**4PS.sn
                                   END ELSE BEGIN
                                     DCApprovalMgnt.SwitchOnHold4PS("Document Type", "Document No.",TRUE,TRUE);
                                   END;
                                 END;
                                 //**4PS.en
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 161024023;2;Field   ;
                CaptionML=ENU=Comments;
                SourceExpr=Comment = TRUE }

    { 6   ;2   ;Field     ;
                CaptionML=ENU=Document Type;
                OptionCaptionML=ENU="Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order, ";
                SourceExpr=_DocumentType }

    { 8   ;2   ;Field     ;
                SourceExpr="Document No." }

    { 10  ;2   ;Field     ;
                SourceExpr="Sequence No.";
                Visible=FALSE }

    { 1100528800;2;Field  ;
                CaptionML=ENU=Related Purch. Order No.;
                SourceExpr=GetRelatedPurchaseOrderNo;
                TableRelation="Purchase Header".No. WHERE (Document Type=CONST(Order)) }

    { 161024012;2;Field   ;
                CaptionML=ENU=Buy-from Vendor No.;
                Description='4PS function';
                SourceExpr=GetBuyFromVendor;
                Editable=FALSE }

    { 161024013;2;Field   ;
                CaptionML=ENU=Buy-from Vendor Name;
                SourceExpr=Description;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=IsHeading }

    { 6085577;2;Field     ;
                SourceExpr=PurchHeader."Due Date";
                CaptionClass=PurchHeader.FIELDCAPTION("Due Date") }

    { 161024014;2;Field   ;
                CaptionML=ENU=On Hold;
                Description='4PS function';
                SourceExpr=GetOnHold;
                Editable=FALSE }

    { 1100528200;2;Field  ;
                CaptionML=ENU=Job No.;
                SourceExpr=GetDocumentProject;
                Editable=FALSE }

    { 1100528201;2;Field  ;
                CaptionML=ENU=Documents;
                BlankZero=Yes;
                SourceExpr=GetNoOfDocs;
                OnDrillDown=BEGIN
                              //**4PS
                              CASE "Table ID" OF
                                DATABASE::"Purch. Inv. Header":
                                BEGIN
                                  DocMgt.LookupDocsForDoc(DATABASE::"Purchase Header",2,"Document No.",0)
                                END;
                                DATABASE::"Purch. Cr. Memo Hdr.":
                                BEGIN
                                  DocMgt.LookupDocsForDoc(DATABASE::"Purchase Header",3,"Document No.",0)
                                END;
                                ELSE
                                  DocMgt.LookupDocsForDoc("Table ID", "Document Type", "Document No.", 0);
                                END;
                              //**4PS
                            END;
                             }

    { 1100528202;2;Field  ;
                CaptionML=ENU=Approval entries;
                BlankZero=Yes;
                SourceExpr=DCApprovalMgnt.GetNoOfApprovalEntries4PS("Document Type", "Document No.");
                OnDrillDown=BEGIN
                              //**4PS
                              DCApprovalMgnt.DrillDownApprovalEntries4PS("Document Type","Document No.");
                            END;
                             }

    { 12  ;2   ;Field     ;
                SourceExpr="Approval Code";
                Visible=FALSE }

    { 21  ;2   ;Field     ;
                CaptionML=ENU=Status;
                SourceExpr=_Status;
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr="Sender ID";
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                SourceExpr="Salespers./Purch. Code";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr="Approver ID";
                Visible=FALSE }

    { 36  ;2   ;Field     ;
                SourceExpr="Currency Code" }

    { 161024017;2;Field   ;
                SourceExpr=Amount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 161024018;2;Field   ;
                SourceExpr="Amount Incl. VAT";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 34  ;2   ;Field     ;
                SourceExpr="Amount (LCY)";
                Visible=FALSE }

    { 161024015;2;Field   ;
                SourceExpr="Amount Incl. VAT (LCY)";
                AutoFormatType=1;
                Visible=FALSE }

    { 47  ;2   ;Field     ;
                SourceExpr="Available Credit Limit (LCY)";
                Visible=FALSE }

    { 23  ;2   ;Field     ;
                SourceExpr="Date-Time Sent for Approval";
                Visible=FALSE }

    { 25  ;2   ;Field     ;
                SourceExpr="Last Date-Time Modified";
                Visible=FALSE }

    { 31  ;2   ;Field     ;
                SourceExpr="Due Date";
                Visible=FALSE }

    { 6085575;1;Part      ;
                SubPageView=SORTING(Table ID,Document Type,Document No.)
                            ORDER(Descending);
                SubPageLink=Table ID=CONST(38),
                            Document Type=FIELD(Document Type),
                            Document No.=FIELD(Document No.);
                PagePartID=Page660;
                PartType=Page;
                ShowFilter=No }

    { 1100528211;1;Group  ;
                CaptionML=ENU=" ";
                Visible=PurchLinesSFVISIBLE;
                GroupType=Group }

    { 1100528210;1;Part   ;
                Name=PurchLinesSF;
                SubPageView=SORTING(Document Type,Document No.,Line No.);
                SubPageLink=Document Type=FILTER(Invoice|Credit Memo),
                            Document No.=FIELD(Document No.);
                PagePartID=Page6085740;
                Visible=PurchLinesSFVISIBLE;
                Enabled=PurchLinesSFVISIBLE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1100528208;1;Group  ;
                CaptionML=ENU=" ";
                Visible=ApprovalLinesSFVISIBLE;
                GroupType=Group }

    { 1100528203;1;Part   ;
                Name=ApprovalLinesSF;
                PagePartID=Page11126511;
                Visible=ApprovalLinesSFVISIBLE;
                Enabled=ApprovalLinesSFVISIBLE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1100528206;1;Group  ;
                CaptionML=ENU=" ";
                Visible=PostedInvLinesSFVISIBLE;
                GroupType=Group }

    { 1100528204;1;Part   ;
                Name=PostedInvLinesSF;
                PagePartID=Page11126515;
                Visible=PostedInvLinesSFVISIBLE;
                Enabled=PostedInvLinesSFVISIBLE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1100528209;1;Group  ;
                CaptionML=ENU=" ";
                Visible=PostedCrMLinesSFVISIBLE;
                GroupType=Group }

    { 1100528205;1;Part   ;
                Name=PostedCrMLinesSF;
                PagePartID=Page11126517;
                Visible=PostedCrMLinesSFVISIBLE;
                Enabled=PostedCrMLinesSFVISIBLE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1100409001;1;Group  ;
                CaptionML=ENU=Filters }

    { 1100409000;2;Field  ;
                CaptionML=ENU=Status Filter;
                OptionCaptionML=ENU=,Pending Approval,All (not Posted);
                SourceExpr=StatusFilter;
                Importance=Promoted;
                Editable=FALSE;
                OnLookup=BEGIN
                           FilterSetup;
                         END;
                          }

    { 1100409002;2;Field  ;
                CaptionML=ENU=Job Filter;
                SourceExpr=JobFilter;
                Importance=Promoted;
                Editable=FALSE;
                OnLookup=VAR
                           Job@1100409000 : Record 11072003;
                         BEGIN
                           FilterSetup;
                         END;
                          }

    { 1100409003;2;Field  ;
                CaptionML=ENU=Vendor Filter;
                SourceExpr=VendorFilter;
                Importance=Promoted;
                Editable=FALSE;
                OnLookup=BEGIN
                           FilterSetup;
                         END;
                          }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 6085574;1;Part      ;
                Name=CaptureUI;
                CaptionML=ENU=Document;
                SubPageLink=Table ID=FIELD(Table ID),
                            Document Type=FIELD(Document Type),
                            Document No.=FIELD(Document No.),
                            Sequence No.=FIELD(Sequence No.);
                PagePartID=Page11126590 }

  }
  CODE
  {
    VAR
      PurchHeader@161024012 : Record 38;
      Text001@1004 : TextConst 'ENU=You can only forward open approval entries.';
      Text002@1003 : TextConst 'ENU=The selected approval has been forwarded.';
      DCApprovalsBridge@1006 : Codeunit 6085790;
      Overdue@1005 : 'Yes, ';
      Text003@161024021 : TextConst 'ENU=Out of Office is currently activated.';
      Text004@161024020 : TextConst 'ENU=You must enter a comment.';
      ApproveVisible@19079599 : Boolean INDATASET;
      RejectVisible@19070120 : Boolean INDATASET;
      xCurrencyFactor@161024013 : Decimal;
      _Status@161024016 : 'Created,Open,Canceled,Rejected,Approved, ';
      _DocumentType@161024015 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order, ';
      Description@161024014 : Text[1024];
      Text005@161024018 : TextConst 'ENU=Shared by %1 (Out of Office)';
      Text006@161024017 : TextConst 'ENU=Shared by %1';
      IsHeading@161024019 : Boolean INDATASET;
      PurchInvHeader@1100528205 : Record 122;
      PurchCrMemoHdr@1100528204 : Record 124;
      DocMgt@1100528203 : Codeunit 6085578;
      DCApprovalMgnt@1100528202 : Codeunit 6085722;
      JobFilter@1100528201 : Text[50];
      VendorFilter@1100528200 : Text[50];
      PostedCrMLinesSFVISIBLE@1100528206 : Boolean INDATASET;
      PostedInvLinesSFVISIBLE@1100528207 : Boolean INDATASET;
      ApprovalLinesSFVISIBLE@1100528208 : Boolean INDATASET;
      PurchLinesSFVISIBLE@1100528209 : Boolean INDATASET;
      IndentForDescription@1100409000 : Integer INDATASET;
      DescriptionStrong@1100409001 : Boolean;
      StatusFilter@1100409002 : ',Pending Approval,All';

    PROCEDURE FormatField@2(Rec@1000 : Record 454) OK : Boolean;
    BEGIN
      IF (Status IN [Status::Created,Status::Open]) THEN BEGIN
        IF (Rec."Due Date" < TODAY) THEN
          EXIT(TRUE)
        ELSE
          EXIT(FALSE);
      END;
    END;

    PROCEDURE CalledFrom@3();
    BEGIN
      Overdue := Overdue::" ";
    END;

    PROCEDURE UpdateList@161024013(KeepFilter@1100525000 : Boolean);
    VAR
      DCApprovalMgmt@161024012 : Codeunit 6085722;
      lApprovalEntry@1100525001 : Record 454;
    BEGIN
      IF KeepFilter THEN                 //**4PS CALL C023440
        lApprovalEntry.COPYFILTERS(Rec); //**4PS CALL C023440

      DCApprovalMgmt.BuildApprovalEntriesForUser(Rec,DATABASE::"Purchase Header",TRUE,TRUE);
      SETCURRENTKEY("Temp. Entry Type","Approver ID","Temp. Display Sorting");
      SETRANGE(Status,Status::Open);

      IF KeepFilter THEN                 //**4PS CALL C023440
        Rec.COPYFILTERS(lApprovalEntry); //**4PS CALL C023440

      IF (xRec."Document No." = '') AND (xRec."Temp. Entry Type" = xRec."Temp. Entry Type"::Normal) THEN BEGIN
        IF FINDFIRST THEN;
      END ELSE BEGIN
        Rec := xRec;
      END;

      SetStatusFilter; //**4PS CALL C023440

      IF NOT FIND('=') THEN
        CurrPage.CaptureUI.PAGE.ClearImage;
    END;

    PROCEDURE GetIsOutOfOffice@161024014() IsOutOfOffice : Boolean;
    VAR
      DCApprovalMgnt@161024015 : Codeunit 6085722;
      ForwardToApproverId@161024012 : Code[50];
      FromDate@161024013 : Date;
      ToDate@161024014 : Date;
    BEGIN
      IsOutOfOffice := FALSE;
      IF DCApprovalMgnt.GetOutOfOffice(USERID,ForwardToApproverId,FromDate,ToDate) THEN
        IF ((FromDate = 0D) OR (FromDate <= TODAY)) AND ((ToDate = 0D) OR (ToDate >= TODAY)) THEN
          IsOutOfOffice := TRUE;
    END;

    PROCEDURE GetBuyFromVendor@1100528203() : Text[30];
    BEGIN
      //**4PS
      CASE "Table ID" OF
        DATABASE::"Purchase Header":
        BEGIN
          EXIT(PurchHeader."Buy-from Vendor No.");
        END;
        DATABASE::"Purch. Inv. Header":
        BEGIN
          EXIT(PurchInvHeader."Buy-from Vendor No.");
        END;
        DATABASE::"Purch. Cr. Memo Hdr.":
        BEGIN
          EXIT(PurchCrMemoHdr."Buy-from Vendor No.");
        END;
      END;
    END;

    LOCAL PROCEDURE GetRelatedPurchaseOrderNo@1100528800() : Code[20];
    BEGIN
      //**4PS
      CASE "Table ID" OF
        DATABASE::"Purchase Header":
        BEGIN
          EXIT(PurchHeader."Related Purch. Order No.");
        END;
        DATABASE::"Purch. Inv. Header":
        BEGIN
          EXIT(PurchInvHeader."Related Purch. Order No.");
        END;
        DATABASE::"Purch. Cr. Memo Hdr.":
        BEGIN
          EXIT(PurchCrMemoHdr."Related Purch. Order No.");
        END;
      END;
    END;

    PROCEDURE GetOnHold@1100528200() : Text[30];
    BEGIN
      //**4PS
      CASE "Table ID" OF
        DATABASE::"Purchase Header":
        BEGIN
          EXIT(PurchHeader."On Hold")
        END;
        DATABASE::"Purch. Inv. Header":
        BEGIN
          EXIT(PurchInvHeader."On Hold")
        END;
        DATABASE::"Purch. Cr. Memo Hdr.":
        BEGIN
          EXIT(PurchCrMemoHdr."On Hold")
        END;
      END;
    END;

    PROCEDURE GetDocumentProject@1100528201() : Text[30];
    BEGIN
      //**4PS
      CASE "Table ID" OF
        DATABASE::"Purchase Header":
        BEGIN
          EXIT(PurchHeader."Job No.")
        END;
        DATABASE::"Purch. Inv. Header":
        BEGIN
          EXIT(PurchInvHeader."Job No.")
        END;
        DATABASE::"Purch. Cr. Memo Hdr.":
        BEGIN
          EXIT(PurchCrMemoHdr."Job No.")
        END;
      END;
    END;

    PROCEDURE ShowThisRecord@1100528202(lApprovalEntry@1100528200 : Record 454) : Boolean;
    VAR
      DCApprovalManagement@1100528201 : Codeunit 6085722;
    BEGIN
      //**4PS
      IF lApprovalEntry."Document Type" = 6 THEN
        EXIT(TRUE);
      IF (JobFilter <> '') THEN
        IF NOT DCApprovalManagement.GetDocumentProjectTest(lApprovalEntry, JobFilter) THEN
         EXIT(FALSE);

      IF (VendorFilter <> '') THEN
        IF NOT DCApprovalManagement.GetBuyFromVendorTest(lApprovalEntry, VendorFilter) THEN
         EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE SetStatusFilter@161024015();
    VAR
      PurchHeader2@1100528200 : Record 38;
      PurchLine2@1100528201 : Record 39;
    BEGIN
      FILTERGROUP(2);
      IF StatusFilter IN [0,StatusFilter::"Pending Approval"] THEN BEGIN
        //CurrPage.Status.VISIBLE := FALSE;
        StatusFilter := StatusFilter::"Pending Approval";
        SETRANGE(Status,Status::Open);
      END ELSE BEGIN
        //CurrForm.Status.VISIBLE := TRUE;
        SETRANGE(Status);
      END;

      //**4PS.sn
      CLEARMARKS;
      MARKEDONLY(FALSE);
      IF (VendorFilter <> '') OR (JobFilter <> '') THEN BEGIN
        IF FINDSET THEN
          REPEAT
            IF ShowThisRecord(Rec) THEN
              MARK(TRUE);
          UNTIL NEXT = 0;
        MARKEDONLY(TRUE);
      END;
      //

      CurrPage.UPDATE(FALSE);
      FILTERGROUP(0);

      //**4PS.sn
      IF ISEMPTY THEN BEGIN
        INIT;
        ClearSubforms;
      END;
      //
    END;

    PROCEDURE ClearSubforms@1161054000();
    VAR
      ApplCmtLine@1161054000 : Record 455;
    BEGIN
      ApplCmtLine.SETCURRENTKEY("Table ID","Document Type","Document No.");
      ApplCmtLine.FILTERGROUP(4);
      ApplCmtLine.SETRANGE("Table ID","Table ID");
      ApplCmtLine.SETRANGE("Document Type","Document Type");
      ApplCmtLine.SETRANGE("Document No.",'XXX');
      //CurrPage.Comments.PAGE.SETTABLEVIEW(ApplCmtLine);
      //CurrPage.Comments.PAGE.UPDATE;
      CurrPage.PurchLinesSF.PAGE.SetView(0,'');
      CurrPage.PostedInvLinesSF.PAGE.SetView('');
      CurrPage.ApprovalLinesSF.PAGE.SetView(0,'');
      CurrPage.PostedCrMLinesSF.PAGE.SetView('');
      CurrPage.ApprovalLinesSF.PAGE.SetView(0,'');
    END;

    PROCEDURE FilterSetup@1100409000();
    VAR
      SetFilterDCApproval@1100409003 : Page 11126527;
      lJobFilter@1100409002 : Text[50];
      lVendorFilter@1100409001 : Text[50];
      lStatusFilter@1100409000 : ',Pending Approval,All';
    BEGIN
      CLEAR(SetFilterDCApproval);
      SetFilterDCApproval.FillDefaults(StatusFilter,JobFilter,VendorFilter);
      SetFilterDCApproval.RUNMODAL;
      lStatusFilter := StatusFilter;
      lJobFilter := JobFilter;
      lVendorFilter := VendorFilter;
      IF SetFilterDCApproval.GetDefaults(lStatusFilter,lJobFilter,lVendorFilter) THEN BEGIN
        StatusFilter := lStatusFilter;
        JobFilter := lJobFilter;
        VendorFilter := lVendorFilter;
        CurrPage.UPDATE(TRUE);
        UpdateList(TRUE); //**4PS C023440
      END;
      CLEAR(SetFilterDCApproval);
    END;

    PROCEDURE GetNoOfDocs@1100528204() : Integer;
    BEGIN
      //**4PS
      CASE "Table ID" OF
        DATABASE::"Purch. Inv. Header":
        BEGIN
          EXIT(DocMgt.GetNoOfDocForDoc(DATABASE::"Purchase Header",2,"Document No.",0));
        END;
        DATABASE::"Purch. Cr. Memo Hdr.":
        BEGIN
          EXIT(DocMgt.GetNoOfDocForDoc(DATABASE::"Purchase Header",3,"Document No.",0));
        END;
      END;
      EXIT(DocMgt.GetNoOfDocForDoc("Table ID","Document Type","Document No.",0));
    END;

    PROCEDURE GetDocumentPurchOrder@1100525000() : Text[30];
    BEGIN
      //**4PS
      CASE "Table ID" OF
        DATABASE::"Purchase Header":
        BEGIN
          EXIT(PurchHeader."Related Purch. Order No.")
        END;
        DATABASE::"Purch. Inv. Header":
        BEGIN
          EXIT(PurchInvHeader."Related Purch. Order No.")
        END;
        DATABASE::"Purch. Cr. Memo Hdr.":
        BEGIN
          EXIT(PurchCrMemoHdr."Related Purch. Order No.")
        END;
      END;
    END;

    BEGIN
    END.
  }
}

