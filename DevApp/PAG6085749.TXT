OBJECT Page 6085749 Purch. Match Subpage
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW16.00.00.4.05;
  }
  PROPERTIES
  {
    Permissions=TableData 121=rm;
    CaptionML=ENU=Purch. Match Subpage;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table39;
    PageType=ListPart;
    OnAfterGetRecord=BEGIN
                       DocNoHideValue := NOT IsFirstDocLine;
                       IF PurchHeader."No." <> "No." THEN BEGIN
                         PurchHeader.GET("Document Type","Document No.");

                         IF PurchHeader."Currency Code" <> '' THEN
                           Currency.GET(PurchHeader."Currency Code");
                         Currency.InitRoundingPrecision
                       END;
                       MatchQty := GetMatchedQty(Rec,FALSE);
                       GetMatchedPriceInfo;

                       IsStrong := MatchQty <> 0;
                     END;

    ActionList=ACTIONS
    {
      { 1160040005;  ;ActionContainer;
                      Name=<Action1900000004>;
                      ActionContainerType=ActionItems }
      { 1160040004;1 ;ActionGroup;
                      Name=<Action1907935204>;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1160040002;2 ;Action    ;
                      Name=<Action1902027204>;
                      ShortCutKey=Shift+Ctrl+E;
                      CaptionML=ENU=Card;
                      Image=Edit;
                      OnAction=BEGIN
                                 IF PurchHeader."Document Type" = PurchHeader."Document Type"::Order THEN
                                   PAGE.RUN(PAGE::"Purchase Order",PurchHeader)
                                 ELSE
                                   PAGE.RUN(PAGE::"Purchase Return Order",PurchHeader);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 161024017;1;Field   ;
                Name=EventNotifier;
                SourceExpr=EventNotifierSource;
                ControlAddIn=[Akeyto.DocumentCapture.Dynamics.Nav.EventNotifier;PublicKeyToken=61f876910b9e346c] }

    { 1000000001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1000000002;2;Field  ;
                Lookup=Yes;
                SourceExpr="Document No.";
                Editable=FALSE;
                HideValue=DocNoHideValue;
                Style=Strong;
                StyleExpr=isstrong;
                OnLookup=BEGIN
                           ShowDocument;
                         END;
                          }

    { 1000000004;2;Field  ;
                SourceExpr="Buy-from Vendor No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000005;2;Field  ;
                SourceExpr=Type;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=isstrong }

    { 1000000006;2;Field  ;
                SourceExpr="No.";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=isstrong }

    { 1000000007;2;Field  ;
                SourceExpr="Variant Code";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000008;2;Field  ;
                SourceExpr=Description;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=isstrong }

    { 1160040001;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=IsStrong }

    { 1000000009;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Outstanding Quantity";
                Editable=FALSE }

    { 1000000010;2;Field  ;
                SourceExpr="Currency Code";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000011;2;Field  ;
                CaptionML=ENU=Direct Unit Cost (Receipt);
                SourceExpr="Direct Unit Cost";
                Editable=FALSE }

    { 161024016;2;Field   ;
                CaptionML=ENU=Line Discount % (Receipt);
                BlankZero=Yes;
                SourceExpr="Line Discount %";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000012;2;Field  ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000013;2;Field  ;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000014;2;Field  ;
                SourceExpr="Location Code";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000015;2;Field  ;
                SourceExpr="Unit of Measure Code";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000016;2;Field  ;
                SourceExpr="Unit of Measure";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000017;2;Field  ;
                SourceExpr="Appl.-to Item Entry";
                Visible=FALSE;
                Editable=FALSE }

    { 161024013;2;Field   ;
                CaptionML=ENU=Matched Quantity;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=MatchQty;
                Style=Strong;
                StyleExpr=TRUE;
                OnValidate=BEGIN
                             Match(Rec,TRUE);
                           END;

                OnAssistEdit=BEGIN
                               Match(Rec,FALSE);
                             END;
                              }

    { 161024015;2;Field   ;
                CaptionML=ENU=Direct Unit Cost (Invoice);
                DecimalPlaces=2:5;
                BlankZero=Yes;
                SourceExpr=MatchUnitCost;
                OnValidate=BEGIN
                             Match(Rec,TRUE);
                           END;

                OnAssistEdit=BEGIN
                               Match(Rec,FALSE);
                             END;
                              }

    { 161024012;2;Field   ;
                CaptionML=ENU=Line Discount % (Invoice);
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=MatchLineDiscPct;
                Visible=FALSE;
                OnValidate=BEGIN
                             Match(Rec,TRUE);
                           END;

                OnAssistEdit=BEGIN
                               Match(Rec,FALSE);
                             END;
                              }

    { 1160040000;2;Field  ;
                CaptionML=ENU=Line Amount (Invoice);
                BlankZero=Yes;
                SourceExpr=MatchLineAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 161024014;2;Field   ;
                CaptionML=ENU=Total Matched Quantity;
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=GetMatchedQty(Rec,TRUE);
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ShowMatchSpec;
                            END;
                             }

    { 1000000020;2;Field  ;
                SourceExpr="Job No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000021;2;Field  ;
                SourceExpr="Prod. Order No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000022;2;Field  ;
                SourceExpr="Expected Receipt Date";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000023;2;Field  ;
                SourceExpr="Qty. Rcd. Not Invoiced";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000024;2;Field  ;
                SourceExpr="Quantity Invoiced";
                Editable=FALSE }

  }
  CODE
  {
    VAR
      TempPurchLine@1000000011 : TEMPORARY Record 39;
      PurchHeader@1160040002 : Record 38;
      Currency@1160040000 : Record 4;
      PurchDocMgnt@1000000009 : Codeunit 6085709;
      Text001@1000000016 : TextConst 'ENU=Manual Match';
      Text002@1000000015 : TextConst 'ENU=(%1 pages in total)';
      Text003@1000000014 : TextConst 'ENU=Page %1';
      Text004@1000000010 : TextConst 'ENU=DOCUMENT.TIFF';
      Text005@1000000008 : TextConst 'ENU=Do you want to reset matches for all document lines?';
      Text006@1000000022 : TextConst 'ENU=(%1 pages in total)';
      Text007@1000000021 : TextConst 'ENU=Page %1';
      Document@1000000000 : Record 6085590;
      EventNotifierSource@161024015 : BigText;
      Channel@161024014 : GUID;
      MatchQty@1000000001 : Decimal;
      MatchUnitCost@161024012 : Decimal;
      MatchLineDiscPct@161024013 : Decimal;
      MatchLineAmount@1160040003 : Decimal;
      DocNoHideValue@1000000002 : Boolean INDATASET;
      Text008@1160040001 : TextConst 'ENU="Warehouse handling is required for %1 = %2, %3 = %4, %5 = %6."';
      IsStrong@1160040004 : Boolean INDATASET;

    PROCEDURE Match@1160040007(PurchLine@1160040000 : Record 39;IsValidate@1000000000 : Boolean);
    VAR
      PurchDocMatch@1000000001 : Record 6085700;
      DocumentLine@1000000006 : Record 6085596;
      Comment@1000000004 : Record 6085594;
      Field@1000000005 : Record 6085580;
      Location@1160040001 : Record 14;
      CreateNewMatch@1000000003 : Boolean;
      PrevQty@1000000007 : Decimal;
    BEGIN
      PurchDocMatch.SETRANGE("Document No.",Document."No.");
      PurchDocMatch.SETRANGE("Purch. Doc. No.",PurchLine."Document No.");
      PurchDocMatch.SETRANGE("Purch. Line No.",PurchLine."Line No.");
      PurchDocMatch.CALCSUMS(Quantity);
      PrevQty := PurchDocMatch.Quantity;
      PurchDocMatch.DELETEALL;

      IF NOT IsValidate THEN BEGIN
        IF Location.RequireReceive("Location Code") THEN BEGIN
          MESSAGE(
            Text008,
            PurchLine.FIELDCAPTION("Document Type"),
            PurchLine."Document Type",
            PurchLine.FIELDCAPTION("Document No."),
            PurchLine."Document No.",
            PurchLine.FIELDCAPTION("Line No."),
            PurchLine."Line No.");
          MatchQty := 0;
        END ELSE IF PrevQty <> 0 THEN
          MatchQty := 0
        ELSE BEGIN
          MatchQty := PurchLine."Outstanding Quantity";
          MatchUnitCost := PurchLine."Direct Unit Cost";
          MatchLineDiscPct := PurchLine."Line Discount %";
        END;
      END ELSE IF PrevQty = 0 THEN BEGIN
        IF Location.RequireReceive("Location Code") THEN BEGIN
          ERROR(
            Text008,
            PurchLine.FIELDCAPTION("Document Type"),
            PurchLine."Document Type",
            PurchLine.FIELDCAPTION("Document No."),
            PurchLine."Document No.",
            PurchLine.FIELDCAPTION("Line No."),
            PurchLine."Line No.");
          MatchQty := 0;
        END;

        MatchUnitCost := PurchLine."Direct Unit Cost";
        MatchLineDiscPct := PurchLine."Line Discount %";
      END;


      IF PurchLine."Outstanding Quantity" > 0 THEN BEGIN
        IF MatchQty < 0 THEN
          MatchQty := 0
        ELSE IF MatchQty > PurchLine."Outstanding Quantity" - GetMatchedQty(PurchLine,TRUE) THEN
          MatchQty := PurchLine."Outstanding Quantity" - GetMatchedQty(PurchLine,TRUE);
      END ELSE BEGIN
        IF MatchQty > 0 THEN
          MatchQty := 0
        ELSE IF MatchQty < PurchLine."Outstanding Quantity" - GetMatchedQty(PurchLine,TRUE) THEN
          MatchQty := PurchLine."Outstanding Quantity" - GetMatchedQty(PurchLine,TRUE);
      END;


      IF MatchQty <> 0 THEN BEGIN
        PurchDocMatch.INIT;
        IF IsOrder THEN
          PurchDocMatch."Purch. Doc. Type" := PurchDocMatch."Purch. Doc. Type"::Order
        ELSE
          PurchDocMatch."Purch. Doc. Type" := PurchDocMatch."Purch. Doc. Type"::"Return Order";
        PurchDocMatch."Document No." := Document."No.";
        PurchDocMatch."Purch. Doc. No." := PurchLine."Document No.";
        PurchDocMatch."Purch. Line No." := PurchLine."Line No.";
        PurchDocMatch.Quantity := MatchQty;
        PurchDocMatch."Direct Unit Cost" := MatchUnitCost;
        PurchDocMatch."Line Discount %" := MatchLineDiscPct;
        PurchDocMatch.INSERT(TRUE);
      END ELSE BEGIN
        MatchUnitCost := 0;
        MatchLineDiscPct := 0;
      END;

      Document.FIND('=');
      IF Document."Match Status" <> Document."Match Status"::"Manually Matched" THEN BEGIN
        Document."Match Status" := Document."Match Status"::"Manually Matched";
        Document.MODIFY;
        Document.DeleteComments(Comment.Area::Match);
        Comment.Add(Document,Field,0,Comment.Area::Match,Comment."Comment Type"::Information,Text001);
      END;

      GetMatchedPriceInfo;
      CLEAR(EventNotifierSource);
      EventNotifierSource.ADDTEXT(FORMAT(TIME) + 'RAISEMESSAGE' + FORMAT(Channel));
    END;

    PROCEDURE GetMatchedQty@1000000005(PurchLine@1160040001 : Record 39;All@1000000001 : Boolean) Qty : Decimal;
    VAR
      PurchDocMatch@1000000000 : Record 6085700;
      PurchLineRel@1160040000 : Record 6085702;
    BEGIN
      IF NOT All THEN
        PurchDocMatch.SETRANGE("Document No.",Document."No.");

      IF IsOrder THEN
        PurchDocMatch.SETRANGE("Purch. Doc. Type",PurchDocMatch."Purch. Doc. Type"::Order)
      ELSE
        PurchDocMatch.SETRANGE("Purch. Doc. Type",PurchDocMatch."Purch. Doc. Type"::"Return Order");
      PurchDocMatch.SETRANGE("Purch. Doc. No.",PurchLine."Document No.");
      PurchDocMatch.SETRANGE("Purch. Line No.",PurchLine."Line No.");
      IF NOT PurchDocMatch.ISEMPTY THEN BEGIN
        PurchDocMatch.CALCSUMS(Quantity);
        Qty := PurchDocMatch.Quantity;
      END;

      IF All THEN BEGIN
        PurchLineRel.SETCURRENTKEY("Related Document Type","Related Document No.","Related Line No.");
        PurchLineRel.SETRANGE("Related Document Type","Document Type");
        PurchLineRel.SETRANGE("Related Document No.","Document No.");
        PurchLineRel.SETRANGE("Related Line No.","Line No.");
        IF PurchLineRel.FINDSET THEN
          REPEAT
            Qty := Qty + PurchLineRel.GetQuantity;
          UNTIL PurchLineRel.NEXT = 0;
      END;
    END;

    PROCEDURE GetMatchedPriceInfo@161024012() : Decimal;
    VAR
      PurchDocMatch@1000000000 : Record 6085700;
      LineDiscountAmount@1160040000 : Decimal;
    BEGIN
      PurchDocMatch.SETRANGE("Document No.",Document."No.");
      IF IsOrder THEN
        PurchDocMatch.SETRANGE("Purch. Doc. Type",PurchDocMatch."Purch. Doc. Type"::Order)
      ELSE
        PurchDocMatch.SETRANGE("Purch. Doc. Type",PurchDocMatch."Purch. Doc. Type"::"Return Order");
      PurchDocMatch.SETRANGE("Purch. Doc. No.","Document No.");
      PurchDocMatch.SETRANGE("Purch. Line No.","Line No.");
      IF NOT PurchDocMatch.FINDFIRST THEN
        CLEAR(PurchDocMatch);
      MatchUnitCost := PurchDocMatch."Direct Unit Cost";
      MatchLineDiscPct := PurchDocMatch."Line Discount %";

      LineDiscountAmount :=
        ROUND(
          ROUND(MatchQty * MatchUnitCost,Currency."Amount Rounding Precision") *
          PurchDocMatch."Line Discount %" / 100,
          Currency."Amount Rounding Precision");

      MatchLineAmount :=
        ROUND(MatchQty * MatchUnitCost,Currency."Amount Rounding Precision") - LineDiscountAmount;
    END;

    LOCAL PROCEDURE IsFirstDocLine@2() : Boolean;
    VAR
      PurchLine@1000 : Record 39;
    BEGIN
      TempPurchLine.RESET;
      TempPurchLine.COPYFILTERS(Rec);
      TempPurchLine.SETRANGE("Document Type","Document Type");
      TempPurchLine.SETRANGE("Document No.","Document No.");
      IF NOT TempPurchLine.FIND('-') THEN BEGIN
        PurchLine.COPYFILTERS(Rec);
        PurchLine.SETRANGE("Document Type","Document Type");
        PurchLine.SETRANGE("Document No.","Document No.");
        IF PurchLine.FIND('-') THEN BEGIN
          TempPurchLine := PurchLine;
          TempPurchLine.INSERT;
        END;
      END;

      IF "Line No." = TempPurchLine."Line No." THEN
        EXIT(TRUE);
    END;

    PROCEDURE UpdatePage@1000000002();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE ShowDocument@1000000000();
    BEGIN
      PAGE.RUN(PAGE::"Purchase Order",PurchHeader);
    END;

    PROCEDURE IsOrder@1160040002() : Boolean;
    VAR
      PurchDocMgt@1160040000 : Codeunit 6085709;
    BEGIN
      IF Document."Template No." = '' THEN
        EXIT;
      EXIT(PurchDocMgt.GetIsInvoice(Document));
    END;

    PROCEDURE SetDocument@1000000006(VAR NewDocument@1000000000 : Record 6085590);
    BEGIN
      Document := NewDocument;
    END;

    PROCEDURE SetChannel@161024013(NewChannel@161024012 : GUID);
    BEGIN
      Channel := NewChannel;
    END;

    PROCEDURE ShowMatchSpec@1160040006();
    VAR
      MatchSpec@161024012 : TEMPORARY Record 6085761;
      PurchDocMatch@1160040001 : Record 6085700;
      PurchLineRel@1160040000 : Record 6085702;
    BEGIN
      IF "Document Type" = "Document Type"::Order THEN
        PurchDocMatch.SETRANGE("Purch. Doc. Type",PurchDocMatch."Purch. Doc. Type"::Order)
      ELSE
        PurchDocMatch.SETRANGE("Purch. Doc. Type",PurchDocMatch."Purch. Doc. Type"::"Return Order");
      PurchDocMatch.SETRANGE("Purch. Doc. No.","Document No.");
      PurchDocMatch.SETRANGE("Purch. Line No.","Line No.");
      IF PurchDocMatch.FINDSET THEN
        REPEAT
          MatchSpec.Type := MatchSpec.Type::Document;
          MatchSpec."Document No." := PurchDocMatch."Document No.";
          MatchSpec.Quantity := PurchDocMatch.Quantity;
          MatchSpec.INSERT;
        UNTIL PurchDocMatch.NEXT = 0;

      PurchLineRel.SETCURRENTKEY("Related Document Type","Related Document No.","Related Line No.");
      PurchLineRel.SETRANGE("Related Document Type","Document Type");
      PurchLineRel.SETRANGE("Related Document No.","Document No.");
      PurchLineRel.SETRANGE("Related Line No.","Line No.");
      IF PurchLineRel.FINDSET THEN
        REPEAT
          IF PurchLineRel."Document Type" = PurchLineRel."Document Type"::Invoice THEN
            MatchSpec.Type := MatchSpec.Type::"Purchase Invoice"
          ELSE
            MatchSpec.Type := MatchSpec.Type::"Purchase Credit Memo";

          MatchSpec."Document No." := PurchLineRel."Document No.";
          MatchSpec.Quantity := PurchLineRel.GetQuantity;
          MatchSpec.INSERT;
        UNTIL PurchLineRel.NEXT = 0;

      PAGE.RUN(0,MatchSpec);
    END;

    BEGIN
    END.
  }
}

