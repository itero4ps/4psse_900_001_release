OBJECT Page 6086048 DC Client Addin - Appr. Entry
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW17.00.00.4.00.03;
  }
  PROPERTIES
  {
    CaptionML=ENU=Document Capture Client Addin;
    LinksAllowed=No;
    SourceTable=Table454;
    PageType=List;
    OnOpenPage=BEGIN
                 IF GetContiniaUserProp AND (ContiniaUserProp."Image Zoom" > 0) THEN
                   CurrZoom := ContiniaUserProp."Image Zoom"
                 ELSE
                   CurrZoom := 50;

                 Setup.GET;
                 ShowCaptureUI := TRUE;
               END;

    OnAfterGetRecord=BEGIN
                       IF ("Table ID" <> xRec."Table ID") OR ("Document Type" <> xRec."Document Type") OR ("Document No." <> xRec."Document No.") OR
                          ("Sequence No." <> xRec."Sequence No.")
                       THEN BEGIN
                         Document.SETCURRENTKEY("Created Doc. Type","Created Doc. Subtype","Created Doc. ID","Created Doc. Ref. No.");
                         Document.SETRANGE("Created Doc. Type","Table ID");
                         Document.SETRANGE("Created Doc. Subtype","Document Type");
                         Document.SETRANGE("Created Doc. ID","Document No.");
                         Document.SETRANGE("File Type",Document."File Type"::OCR);
                         IF NOT Document.FINDFIRST THEN
                           CLEAR(Document);
                         UpdateImage;
                         SendCommand(CaptureXmlDoc);
                       END ELSE IF (SendAllPendingCommands AND (NOT ISNULL(CaptureXmlDoc))) THEN BEGIN
                         SendAllPendingCommands := FALSE;
                         SendCommand(CaptureXmlDoc);
                       END;
                       CLEAR(CaptureXmlDoc);
                     END;

  }
  CONTROLS
  {
    { 1000000000;;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Field  ;
                Name=CaptureUI;
                SourceExpr=CaptureUISource;
                Visible=SHOWCAPTUREUI;
                ControlAddIn=[Akeyto.DocumentCapture.Dynamics.Nav.UI;PublicKeyToken=44fe4ac2c6480df6];
                OnControlAddIn=VAR
                                 InXmlDoc@1161054001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
                                 XmlLib@1161054000 : Codeunit 6085573;
                               BEGIN
                                 CLEAR(CaptureXmlDoc);
                                 IF Index = 0 THEN
                                   HandleSimpleCommand(Data)
                                 ELSE BEGIN
                                   CaptureAddinLib.TextToXml(InXmlDoc,Data);
                                   HandleXmlCommand(XmlLib.GetNodeText(InXmlDoc.DocumentElement,'Command'),InXmlDoc);
                                 END;
                               END;
                                }

  }
  CODE
  {
    VAR
      Setup@1000000019 : Record 6085573;
      Document@6085574 : Record 6085590;
      ContiniaUserProp@6085573 : Record 6085780;
      CaptureMgt@1000000014 : Codeunit 6085576;
      CaptureAddinLib@1000000013 : Codeunit 6085660;
      CaptureXmlDoc@1000000010 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      CaptureUISource@1000000000 : Text;
      Channel@1000000011 : Code[50];
      CurrentPageText@1000000005 : Text[250];
      CurrentZoomText@1000000009 : Text[30];
      HeaderFieldsFormName@1000000008 : Text[50];
      LineFieldsFormName@1000000003 : Text[50];
      MatchQty@1000000007 : Decimal;
      CurrZoom@1000000004 : Decimal;
      CurrentPageNo@1000000006 : Integer;
      Text001@1000000002 : TextConst 'ENU=(%1 pages in total)';
      Text002@1000000001 : TextConst 'ENU=Page %1';
      SendAllPendingCommands@1000000012 : Boolean;
      Text003@1000000015 : TextConst 'ENU=2000000000';
      DisableCapture@1000000018 : Boolean;
      ShowCaptureUI@1000000021 : Boolean INDATASET;

    PROCEDURE UpdateImage@1000000006();
    VAR
      TempDocFileInfo@1000 : Record 6085600;
      ThreeTierAut@1000000002 : Codeunit 419;
      Filename@1001 : Text[250];
    BEGIN
      IF Document."No." = '' THEN BEGIN
        IF GetTempDocFileInfo(TempDocFileInfo) THEN
          Filename := 'file://' + TempDocFileInfo."Styled XML Filename";
      END ELSE
        Filename := Document.GetTIFFileName;

      IF Filename = '' THEN BEGIN
        CaptureAddinLib.BuildClearImageCommand(CaptureXmlDoc);
        UpdateCurrPageNo(0);
        EXIT;
      END;

      CaptureAddinLib.BuildSetImageCommand(Filename,TRUE,CaptureXmlDoc);

      UpdateCurrPageNo(1);

      CaptureAddinLib.BuildScrollTopCommand(CaptureXmlDoc);

      Zoom(CurrZoom,FALSE);

      CaptureAddinLib.BuildTotalNoOfPagesTextCommand(STRSUBSTNO(Text001,Document."No. of Pages"),CaptureXmlDoc);
    END;

    PROCEDURE UpdateCurrPageNo@1000000003(PageNo@1000000000 : Integer);
    BEGIN
      Document.CALCFIELDS("No. of Pages");
      CurrentPageNo := PageNo;
      CurrentPageText := STRSUBSTNO(Text002,CurrentPageNo);

      CaptureAddinLib.BuildSetActivePageCommand(PageNo,CurrentPageText,CaptureXmlDoc);
    END;

    PROCEDURE ParsePageText@1000000001(PageText@1000000000 : Text[30]);
    VAR
      NewPageNo@1000000001 : Integer;
    BEGIN
      IF STRPOS(PageText,' ') = 0 THEN BEGIN
        IF EVALUATE(NewPageNo,PageText) THEN;
      END ELSE
        IF EVALUATE(NewPageNo,COPYSTR(PageText,STRPOS(PageText,' '))) THEN;

      Document.CALCFIELDS("No. of Pages");
      IF (NewPageNo <= 0) OR (NewPageNo > Document."No. of Pages") THEN
        UpdateCurrPageNo(CurrentPageNo)
      ELSE
        UpdateCurrPageNo(NewPageNo);
    END;

    PROCEDURE Zoom@1000000000(ZoomPct@1000000000 : Decimal;UpdateUserProp@6085573 : Boolean);
    BEGIN
      IF ZoomPct < 1 THEN
        ZoomPct := 1;
      CurrZoom := ZoomPct;
      CurrentZoomText := FORMAT(CurrZoom) + '%';

      IF UpdateUserProp THEN BEGIN
        IF NOT GetContiniaUserProp THEN BEGIN
          ContiniaUserProp."User ID" := USERID;
          ContiniaUserProp."Image Zoom" := CurrZoom;
          ContiniaUserProp.INSERT;
        END ELSE BEGIN
          IF ContiniaUserProp."Image Zoom" <> CurrZoom THEN BEGIN
            ContiniaUserProp."Image Zoom" := CurrZoom;
            ContiniaUserProp.MODIFY;
          END;
        END;
      END;

      CaptureAddinLib.BuildZoomCommand(CurrZoom,CaptureXmlDoc);
      CaptureAddinLib.BuildZoomTextCommand(CurrentZoomText,CaptureXmlDoc);
    END;

    PROCEDURE SendCommand@1000000002(VAR XmlDoc@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      NewXmlDoc@161024012 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
    BEGIN
      CaptureAddinLib.XmlToText(XmlDoc,CaptureUISource);

      CaptureAddinLib.TextToXml(NewXmlDoc,CaptureUISource);
    END;

    PROCEDURE SetConfig@1000000004(NewHeaderFieldsFormName@1000000001 : Text[50];NewLineFieldsFormName@1000000000 : Text[50];NewChannel@1000000002 : Code[50]);
    BEGIN
      HeaderFieldsFormName := NewHeaderFieldsFormName;
      LineFieldsFormName := NewLineFieldsFormName;
      Channel := NewChannel;
    END;

    PROCEDURE HandleSimpleCommand@1000000011(Command@1000000000 : Text[1024]);
    BEGIN
      CASE Command OF
        'ZoomIn':
          Zoom(CurrZoom + 5,TRUE);

        'ZoomOut':
          Zoom(CurrZoom - 5,TRUE);

        'FirstPage':
          BEGIN
            Document.CALCFIELDS("No. of Pages");
            IF Document."No. of Pages" > 0 THEN
              UpdateCurrPageNo(1);
          END;

        'NextPage':
          BEGIN
            Document.CALCFIELDS("No. of Pages");
            IF CurrentPageNo < Document."No. of Pages" THEN
              UpdateCurrPageNo(CurrentPageNo + 1);
          END;

        'PrevPage':
          BEGIN
            IF CurrentPageNo > 1 THEN
              UpdateCurrPageNo(CurrentPageNo - 1);
          END;

        'LastPage':
          BEGIN
            Document.CALCFIELDS("No. of Pages");
            UpdateCurrPageNo(Document."No. of Pages");
          END;
      END;

      SendCommand(CaptureXmlDoc);
      CLEAR(CaptureXmlDoc);
    END;

    PROCEDURE HandleXmlCommand@1000000007(Command@1000000000 : Text[1024];VAR InXmlDoc@1000000001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      XmlLib@1000000003 : Codeunit 6085573;
    BEGIN
      CASE Command OF
        'ZoomTextChanged':
          BEGIN
            CurrentZoomText := XmlLib.GetNodeText(InXmlDoc.DocumentElement,'Text');
            IF EVALUATE(CurrZoom,DELCHR(CurrentZoomText,'=','%')) THEN;
            Zoom(CurrZoom,TRUE);
          END;

        'PageTextChanged':
          BEGIN
            CurrentPageText := XmlLib.GetNodeText(InXmlDoc.DocumentElement,'Text');
            ParsePageText(CurrentPageText);
          END;

        'ChangePage':
          UpdateCurrPageNo(XmlLib.Text2Int(XmlLib.GetNodeText(InXmlDoc.DocumentElement,'NewPageNo')));
      END;

      IF NOT ISNULL(CaptureXmlDoc) THEN
        SendCommand(CaptureXmlDoc);
      CLEAR(CaptureXmlDoc);
    END;

    PROCEDURE SetSendAllPendingCommands@1000000005(NewSendAllPendingCommands@1000000000 : Boolean);
    BEGIN
      SendAllPendingCommands := NewSendAllPendingCommands;
    END;

    PROCEDURE SetDisableCapture@1000000010(NewDisableCapture@1000000000 : Boolean);
    BEGIN
      DisableCapture := NewDisableCapture;
    END;

    PROCEDURE ClearImage@1161054000();
    VAR
      TempDocFileInfo@1000 : Record 6085600;
    BEGIN
      IF GetTempDocFileInfo(TempDocFileInfo) THEN
        EXIT;

      CaptureAddinLib.BuildClearImageCommand(CaptureXmlDoc);
      UpdateCurrPageNo(0);
      SendCommand(CaptureXmlDoc);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE UpdatePage@1161054001();
    BEGIN
      UpdateImage;
      CaptureAddinLib.BuildCaptureEnabledCommand(FALSE,CaptureXmlDoc);
      SendCommand(CaptureXmlDoc);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE GetContiniaUserProp@1160040001() : Boolean;
    BEGIN
      IF ContiniaUserProp."User ID" = USERID THEN
        EXIT(TRUE);
      EXIT(ContiniaUserProp.GET(USERID));
    END;

    LOCAL PROCEDURE GetTempDocFileInfo@6(VAR TempDocFileInfo@1000 : Record 6085600) : Boolean;
    VAR
      Object@1001 : Record 2000000001;
    BEGIN
      IF NOT Object.GET(Object.Type::Codeunit,'',6014371) THEN
        EXIT;

      COMMIT;

      TempDocFileInfo."Document Type" := "Table ID";
      TempDocFileInfo."Document Subtype" := "Document Type";
      TempDocFileInfo."Document ID" := "Document No.";
      TempDocFileInfo."Create Styled XML File" := TRUE;
      IF CODEUNIT.RUN(6014371,TempDocFileInfo) THEN
        EXIT(TempDocFileInfo."Styled XML Filename" <> '');
    END;

    BEGIN
    {
      The reason for this form to be a list is to avoide default RTC right-click functionality
    }
    END.
  }
}

