OBJECT Page 6086320 Expense Split and Allocation
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.1.03.00;
  }
  PROPERTIES
  {
    Permissions=TableData 6086320=r;
    CaptionML=ENU=Expense Split and Allocation;
    SourceTable=Table6086321;
    PageType=Worksheet;
    AutoSplitKey=Yes;
    OnOpenPage=VAR
                 ExpMgt@1160040000 : Codeunit 6086301;
                 ExpenseCheck@1160040001 : Codeunit 6086333;
               BEGIN
                 ExpEntryNo := GETRANGEMIN("Expense Entry No.");
                 Expense.GET(ExpEntryNo);

                 Expense.CALCFIELDS("Employee Name");
                 CurrPage.EDITABLE := (NOT Expense.Posted) AND (NOT ReadOnly);

                 IF ISEMPTY AND (NOT Expense.Posted) AND (NOT ReadOnly) THEN BEGIN
                   UpdateRemAmount;
                   InitRecFromExpense;
                   INSERT(TRUE);
                 END;
               END;

    OnClosePage=VAR
                  ExpenseAllocation@1160040000 : Record 6086321;
                BEGIN
                  IF NOT CurrPage.EDITABLE THEN
                    EXIT;

                  UpdateRemAmount;
                  IF (RemainingAmount = 0) AND (RemainingAmountLCY <> 0) THEN BEGIN
                    ExpenseAllocation.SETCURRENTKEY("Expense Entry No.");
                    ExpenseAllocation.SETRANGE("Expense Entry No.",ExpEntryNo);
                    IF ExpenseAllocation.FINDLAST THEN BEGIN
                      ExpenseAllocation."Amount (LCY)" := ExpenseAllocation."Amount (LCY)" + RemainingAmountLCY;
                      ExpenseAllocation.MODIFY;
                    END;
                  END;
                END;

    OnAfterGetRecord=BEGIN
                       UpdateRemAmount;
                     END;

    OnNewRecord=BEGIN
                  UpdateRemAmount;
                  InitRecFromExpense;
                END;

    OnDeleteRecord=VAR
                     SplitAndAllocateMgt@1160040000 : Codeunit 6086301;
                   BEGIN
                   END;

    OnQueryClosePage=VAR
                       SplitAndAllocateMgt@1160040001 : Codeunit 6086301;
                     BEGIN
                       IF NOT CurrPage.EDITABLE THEN
                         EXIT;

                       DeleteAutoGeneratedEntries;

                       IF (NOT ISEMPTY) AND (RemainingAmount <> 0) THEN
                         EXIT(CONFIRM(STRSUBSTNO(ConfRemAmount,Expense."Currency Code",Expense.Amount,Expense.Amount-RemainingAmount),FALSE));

                       IF ZeroAmountLines THEN
                         EXIT(CONFIRM(ConfZeroLines,FALSE));

                       EXIT(TRUE);
                     END;

    ActionList=ACTIONS
    {
      { 1160040018;0 ;ActionContainer;
                      Name=<Action1900000003>;
                      ActionContainerType=RelatedInformation }
      { 1160040016;1 ;ActionGroup;
                      Name=<Action1160040028>;
                      CaptionML=ENU=Line }
      { 1160040014;2 ;Action    ;
                      Name=<Action3>;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Dimensions;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowDimensions(ReadOnly);
                               END;
                                }
      { 1160040010;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1160040011;1 ;Action    ;
                      Name=<Action1160040011>;
                      CaptionML=ENU=Create &New Expense;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NewDocument;
                      OnAction=VAR
                                 ExpenseAllocation@1160040001 : Record 6086321;
                                 SplitAndAllocateMgt@1160040000 : Codeunit 6086301;
                               BEGIN
                                 IF ReadOnly THEN
                                   ERROR('');
                                 Expense.TESTFIELD(Posted,FALSE);
                                 CurrPage.SETSELECTIONFILTER(ExpenseAllocation);
                                 SplitAndAllocateMgt.CreateNewExpenses(ExpenseAllocation);
                                 Expense.GET(ExpEntryNo);
                                 UpdateRemAmount;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1160040012;1;Group  ;
                CaptionML=ENU=General }

    { 1160040004;2;Field  ;
                CaptionML=ENU=Employee No.;
                SourceExpr=Expense."Employee No.";
                Editable=false }

    { 1160040003;2;Field  ;
                CaptionML=ENU=Employee Name;
                SourceExpr=Expense."Employee Name";
                Editable=false }

    { 1160040021;2;Field  ;
                CaptionML=ENU=Description;
                SourceExpr=Expense.Description;
                Editable=FALSE }

    { 1160040008;2;Field  ;
                CaptionML=ENU=Document Date;
                SourceExpr=Expense."Document Date";
                Editable=FALSE }

    { 1160040031;2;Group  ;
                GroupType=Group }

    { 1160040015;3;Field  ;
                CaptionML=ENU=Currency Code;
                SourceExpr=Expense."Currency Code";
                Editable=FALSE }

    { 1160040017;3;Field  ;
                CaptionML=ENU=Amount;
                SourceExpr=Expense.Amount;
                AutoFormatType=1;
                AutoFormatExpr=Expense."Currency Code";
                Editable=FALSE }

    { 1160040019;3;Field  ;
                CaptionML=ENU=Remaining Amount;
                SourceExpr=RemainingAmount;
                AutoFormatType=1;
                AutoFormatExpr=Expense."Currency Code";
                Editable=FALSE }

    { 1160040029;3;Field  ;
                CaptionML=ENU=Amount (LCY);
                SourceExpr=Expense."Amount (LCY)";
                Editable=False }

    { 1160040030;3;Field  ;
                CaptionML=ENU=Remaining Amount (LCY);
                SourceExpr=RemainingAmountLCY;
                AutoFormatType=1;
                Editable=False }

    { 1160040000;1;Group  ;
                GroupType=Repeater }

    { 1160040023;2;Field  ;
                SourceExpr="Employee No." }

    { 1160040020;2;Field  ;
                SourceExpr="Expense Type" }

    { 1160040005;2;Field  ;
                SourceExpr=Description;
                Visible=false }

    { 1160040006;2;Field  ;
                SourceExpr="Description 2";
                Visible=false }

    { 1160040025;2;Field  ;
                SourceExpr=Amount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                             //AmountOnAfterValidate;
                           END;
                            }

    { 1160040013;2;Field  ;
                SourceExpr="Amount (LCY)";
                Editable=FALSE }

    { 1160040001;2;Field  ;
                SourceExpr="Amount %";
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1160040026;2;Field  ;
                SourceExpr="Global Dimension 1 Code" }

    { 1160040027;2;Field  ;
                SourceExpr="Global Dimension 2 Code" }

    { 1160040024;2;Field  ;
                SourceExpr="Job No." }

    { 1160040022;2;Field  ;
                SourceExpr="Job Task No." }

    { 3   ;2   ;Field     ;
                SourceExpr="Cash/Private Card" }

    { 1160040007;2;Field  ;
                SourceExpr="Expense Account" }

    { 1160040002;2;Field  ;
                SourceExpr="Gen. Prod. Posting Group";
                Visible=false }

    { 1160040009;2;Field  ;
                SourceExpr="VAT Prod. Posting Group";
                Visible=false }

    { 1160040028;2;Field  ;
                SourceExpr=Fee }

  }
  CODE
  {
    VAR
      Expense@1160040000 : Record 6086320;
      RemainingAmount@1160040001 : Decimal;
      RemainingAmountLCY@1160040002 : Decimal;
      ExpEntryNo@1160040004 : Integer;
      ConfRemAmount@1160040003 : TextConst 'ENU=The amount on the Expense (%1 %2) and the total allocated Amount (%1 %3) do not match. Do you want to close the page anyway?';
      ConfZeroLines@1160040005 : TextConst 'ENU=Allocations with 0 amount exist. Are you sure you want to keep these?';
      ReadOnly@1160040006 : Boolean;

    LOCAL PROCEDURE AmountOnAfterValidate@19024931();
    BEGIN
      "Amount %" := ReturnPct(Expense.Amount,Amount);
      "Amount (LCY)" := ReturnAmount(Expense."Amount (LCY)","Amount %");
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE PctOnAfterValidate@19011896();
    BEGIN
      Amount := ReturnAmount(Expense.Amount,"Amount %");
      "Amount (LCY)" := ReturnAmount(Expense."Amount (LCY)","Amount %");
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE UpdateRemAmount@1160040006();
    VAR
      ExpenseAllocation@1160040000 : Record 6086321;
    BEGIN
      ExpenseAllocation.SETCURRENTKEY("Expense Entry No.");
      ExpenseAllocation.SETRANGE("Expense Entry No.",ExpEntryNo);
      ExpenseAllocation.CALCSUMS(Amount,"Amount (LCY)");

      RemainingAmount := Expense.Amount - ExpenseAllocation.Amount;
      RemainingAmountLCY := Expense."Amount (LCY)" - ExpenseAllocation."Amount (LCY)";
    END;

    PROCEDURE InitRecFromExpense@1160040002();
    BEGIN
      TRANSFERFIELDS(Expense,FALSE);
      "Expense Entry No." := Expense."Entry No.";
      VALIDATE(Amount,RemainingAmount);
    END;

    LOCAL PROCEDURE ZeroAmountLines@1160040004() : Boolean;
    VAR
      ExpenseAllocation@1160040000 : Record 6086321;
    BEGIN
      ExpenseAllocation.SETCURRENTKEY("Expense Entry No.");
      ExpenseAllocation.SETRANGE("Expense Entry No.",ExpEntryNo);
      ExpenseAllocation.SETRANGE(Amount,0);
      EXIT(NOT ExpenseAllocation.ISEMPTY);
    END;

    LOCAL PROCEDURE DeleteAutoGeneratedEntries@1160040003() : Boolean;
    VAR
      ExpenseAllocation@1160040000 : Record 6086321;
    BEGIN
      ExpenseAllocation.SETCURRENTKEY("Expense Entry No.");
      ExpenseAllocation.SETRANGE("Expense Entry No.",ExpEntryNo);
      ExpenseAllocation.SETRANGE(Modified,FALSE);
      ExpenseAllocation.DELETEALL(TRUE);
    END;

    PROCEDURE SetReadOnly@1160040005();
    BEGIN
      ReadOnly := TRUE;
    END;

    BEGIN
    END.
  }
}

