OBJECT Page 6086338 Table Filter Field List EM
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.1.02.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Table Filters;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table2000000041;
    OnAfterGetRecord=VAR
                       TableFilterField@161024012 : Record 6086348;
                     BEGIN
                       TableFilterField.SETRANGE("Table Filter GUID",TableGUID);
                       TableFilterField.SETRANGE("Field No.","No.");
                       IF NOT TableFilterField.FINDFIRST THEN
                         CLEAR(TableFilterField);
                       TableFilterField.GetValues(Value,FilterType);
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 161024012;1;Group   ;
                GroupType=Repeater }

    { 161024013;2;Field   ;
                CaptionML=ENU=No.;
                SourceExpr="No.";
                Editable=FALSE }

    { 161024025;2;Field   ;
                CaptionML=ENU=Caption;
                SourceExpr="Field Caption";
                Editable=FALSE }

    { 161024017;2;Field   ;
                Name=FilterTypeColumn;
                CaptionML=ENU=Filter Type;
                OptionCaptionML=ENU=Fixed Filter,Field Type;
                SourceExpr=FilterType;
                Visible=FilterTypeColumnVisible;
                OnValidate=BEGIN
                             SetValue('');
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 161024015;2;Field   ;
                Lookup=Yes;
                CaptionML=ENU=Filter;
                SourceExpr=Value;
                OnValidate=BEGIN
                             SetValue(Value);
                             CurrPage.UPDATE(FALSE);
                           END;

                OnLookup=BEGIN
                           EXIT(LookupValue(Text));
                         END;
                          }

  }
  CODE
  {
    VAR
      FieldTypeFilter@1160040002 : Text[1024];
      Value@161024012 : Text[250];
      TableGUID@161024014 : GUID;
      FilterType@161024013 : 'FixedFilter,FieldType';
      FilterTypeColumnVisible@19031655 : Boolean INDATASET;
      Text001@1160040000 : TextConst 'ENU=The primary key of the table cannot contain more than one Field.';
      Text002@1160040001 : TextConst 'ENU=Lookup in this field is not possible.';

    PROCEDURE SetParam@161024012(NewGUID@1160040001 : GUID;NewFieldTypeFilter@1160040002 : Text[1024];ShowType@1160040000 : Boolean);
    BEGIN
      TableGUID := NewGUID;
      FilterTypeColumnVisible := ShowType;
      FieldTypeFilter := NewFieldTypeFilter;
    END;

    LOCAL PROCEDURE SetValue@1160040003(NewValue@1160040000 : Text[250]);
    VAR
      TableFilterField@1160040001 : Record 6086348;
    BEGIN
      TableFilterField.SETRANGE("Table Filter GUID",TableGUID);
      TableFilterField.SETRANGE("Field No.","No.");
      IF (NewValue = '') AND (FilterType = 0) THEN BEGIN
        IF TableFilterField.FINDFIRST THEN
          TableFilterField.DELETE;
        EXIT;
      END;

      IF NOT TableFilterField.FINDFIRST THEN BEGIN
        TableFilterField."Table Filter GUID" := TableGUID;
        TableFilterField."Table No." := TableNo;
        TableFilterField."Field No." := "No.";
        TableFilterField.INSERT;
      END;

      TableFilterField.SetValues(NewValue,FilterType);
      TableFilterField.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE GetTableNo@1160040000() : Integer;
    VAR
      RecRef@1160040000 : RecordRef;
      FieldRef@1160040002 : FieldRef;
      KeyRef@1160040001 : KeyRef;
    BEGIN
      IF FilterType = FilterType::FieldType THEN
        EXIT(DATABASE::"Field Type");

      IF RelationTableNo <> 0 THEN
        EXIT(RelationTableNo);

      RecRef.OPEN(TableNo);
      KeyRef := RecRef.KEYINDEX(RecRef.CURRENTKEYINDEX);
      FieldRef := KeyRef.FIELDINDEX(1);
      IF "No." = FieldRef.NUMBER THEN
        EXIT(TableNo)
      ELSE
        IF RelationTableNo > 0 THEN
          EXIT(RelationTableNo)
        ELSE
          ERROR(Text002);
    END;

    LOCAL PROCEDURE LookupValue@1160040001(VAR NewValue@1160040003 : Text[250]) : Boolean;
    VAR
      LookupRecID@161024012 : Record 6085760;
      FieldType@1160040004 : Record 6086345;
      RecIDMgt@1160040005 : Codeunit 6085604;
      RecRef@1160040000 : RecordRef;
      FieldRef@1160040001 : FieldRef;
      KeyRef@1160040002 : KeyRef;
    BEGIN
      IF FilterType = 0 THEN BEGIN
        LookupRecID."Table No." := GetTableNo;

        LookupRecID."Record ID Tree ID" := RecIDMgt.GetRecIDTreeID2(LookupRecID."Table No.","No.",TableGUID,NewValue);

        CODEUNIT.RUN(CODEUNIT::"Record ID Lookup",LookupRecID);

        IF LookupRecID."Lookup Mode" = LookupRecID."Lookup Mode"::OK THEN BEGIN
          IF RecIDMgt.GetTableNoFromRecID(LookupRecID."Record ID Tree ID") = 0 THEN
            EXIT;
          RecRef.OPEN(RecIDMgt.GetTableNoFromRecID(LookupRecID."Record ID Tree ID"));
          KeyRef := RecRef.KEYINDEX(RecRef.CURRENTKEYINDEX);
          IF KeyRef.FIELDCOUNT > 1 THEN
            ERROR(Text001);
          FieldRef := KeyRef.FIELDINDEX(1);
          NewValue := RecIDMgt.GetKeyValue(LookupRecID."Record ID Tree ID",FieldRef.NUMBER);
          EXIT(TRUE);
        END;
      END ELSE BEGIN
        IF NewValue <> '' THEN
          IF FieldType.GET(NewValue) THEN;

        IF FieldTypeFilter <> '' THEN BEGIN
          FieldType.FILTERGROUP(2);
          FieldType.SETFILTER(Code,FieldTypeFilter);
          FieldType.FILTERGROUP(0);
        END;
        IF PAGE.RUNMODAL(0,FieldType) = ACTION::LookupOK THEN BEGIN
          NewValue := FieldType.Code;
          EXIT(TRUE);
        END;
      END;
    END;

    BEGIN
    END.
  }
}

