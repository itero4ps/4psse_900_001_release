OBJECT Page 6086339 EM Client Addin
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.1.02.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Document Capture Client Add-in;
    LinksAllowed=No;
    SourceTable=Table6086320;
    PageType=List;
    OnOpenPage=BEGIN
                 IF GetContiniaUserProp AND (ContiniaUserProp."Image Zoom" > 0) THEN
                   CurrZoom := ContiniaUserProp."Image Zoom"
                 ELSE
                   CurrZoom := 50;

                 ShowCaptureUI := TRUE;
               END;

    OnAfterGetRecord=BEGIN
                       IF "Entry No." <> xRec."Entry No." THEN BEGIN
                         CaptureAddinLib.BuildInvalidFileTextCommand(InvalidFile,CaptureXmlDoc);
                         ExpenseAttachment.SETCURRENTKEY("Expense Entry No.");
                         ExpenseAttachment.SETRANGE("Expense Entry No.","Entry No.");
                         IF ExpenseAttachment.FINDFIRST THEN
                           UpdateImage(1)
                         ELSE
                           UpdateImage(0);
                         SendCommand(CaptureXmlDoc);
                       END ELSE
                         IF SendAllPendingCommands AND (NOT ISNULL(CaptureXmlDoc)) THEN BEGIN
                           SendAllPendingCommands := FALSE;
                           SendCommand(CaptureXmlDoc);
                         END;
                       CLEAR(CaptureXmlDoc);
                     END;

  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Field  ;
                Name=CaptureUI;
                SourceExpr=CaptureUISource;
                Visible=ShowCaptureUI;
                ControlAddIn=[Akeyto.DocumentCapture.Dynamics.Nav.UI;PublicKeyToken=44fe4ac2c6480df6];
                OnControlAddIn=VAR
                                 XmlLib@1161054000 : Codeunit 6085573;
                                 InXmlDoc@1161054001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
                               BEGIN
                                 CLEAR(CaptureXmlDoc);
                                 IF Index = 0 THEN
                                   HandleSimpleCommand(Data)
                                 ELSE BEGIN
                                   CaptureAddinLib.TextToXml(InXmlDoc,Data);
                                   HandleXmlCommand(XmlLib.GetNodeText(InXmlDoc.DocumentElement,'Command'),InXmlDoc);
                                 END;
                               END;
                                }

  }
  CODE
  {
    VAR
      ContiniaUserProp@1160040000 : Record 6085780;
      ExpenseAttachment@1160040001 : Record 6086326;
      CaptureAddinLib@1000000013 : Codeunit 6085660;
      CaptureXmlDoc@1000000010 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      CurrentAttachmentText@1000000005 : Text[250];
      CurrentZoomText@1000000009 : Text[30];
      CurrZoom@1000000004 : Decimal;
      CurrentAttachmentNo@1000000006 : Integer;
      SendAllPendingCommands@1000000012 : Boolean;
      ShowCaptureUI@1000000021 : Boolean INDATASET;
      InvalidFile@1160040002 : TextConst 'ENU=Preview can only show jpg files. To view the Attachment click here.';
      Text001@1000000002 : TextConst 'ENU=(%1 Attachments in total)';
      Text002@1000000001 : TextConst 'ENU=Attachment %1';
      CaptureUISource@1000000000 : Text;

    LOCAL PROCEDURE UpdateImage@1000000006(AttachmentNo@1160040000 : Integer);
    VAR
      Filename@1160040001 : Text[1024];
    BEGIN
      CurrentAttachmentNo := AttachmentNo;

      IF AttachmentNo = 0 THEN BEGIN
        CurrentAttachmentText := '';
        CaptureAddinLib.BuildTotalNoOfPagesTextCommand(STRSUBSTNO(Text001,0),CaptureXmlDoc);
      END ELSE BEGIN
        ExpenseAttachment.FINDFIRST;
        IF CurrentAttachmentNo > 1 THEN
          ExpenseAttachment.NEXT(CurrentAttachmentNo-1);
        Filename := ExpenseAttachment.GetClientFilenameAndPath;

        CurrentAttachmentText := STRSUBSTNO(Text002,CurrentAttachmentNo);
        CaptureAddinLib.BuildTotalNoOfPagesTextCommand(STRSUBSTNO(Text001,ExpenseAttachment.COUNT),CaptureXmlDoc);
      END;

      CaptureAddinLib.BuildClearImageCommand(CaptureXmlDoc);

      IF Filename = '' THEN
        EXIT;

      CaptureAddinLib.BuildSetImageCommand(Filename,TRUE,CaptureXmlDoc);
      CaptureAddinLib.BuildSetActivePageCommand(1,CurrentAttachmentText,CaptureXmlDoc);
      CaptureAddinLib.BuildScrollTopCommand(CaptureXmlDoc);

      CaptureAddinLib.BuildScrollTopCommand(CaptureXmlDoc);

      Zoom(CurrZoom,FALSE);
    END;

    LOCAL PROCEDURE ParseAttachmentText@1000000001(PageText@1000000000 : Text[30]);
    VAR
      NewPageNo@1000000001 : Integer;
    BEGIN
      IF STRPOS(PageText,' ') = 0 THEN BEGIN
        IF EVALUATE(NewPageNo,PageText) THEN;
      END ELSE
        IF EVALUATE(NewPageNo,COPYSTR(PageText,STRPOS(PageText,' '))) THEN;

      IF (NewPageNo <= 0) OR (NewPageNo > ExpenseAttachment.COUNT) THEN
        UpdateImage(CurrentAttachmentNo)
      ELSE
        UpdateImage(NewPageNo);
    END;

    LOCAL PROCEDURE Zoom@1000000000(ZoomPct@1000000000 : Decimal;UpdateUserProp@6085573 : Boolean);
    BEGIN
      IF ZoomPct < 1 THEN
        ZoomPct := 1;
      CurrZoom := ZoomPct;
      CurrentZoomText := FORMAT(CurrZoom) + '%';

      IF UpdateUserProp THEN
        IF NOT GetContiniaUserProp THEN BEGIN
          ContiniaUserProp."User ID" := USERID;
          ContiniaUserProp."Image Zoom" := CurrZoom;
          ContiniaUserProp.INSERT;
        END ELSE
          IF ContiniaUserProp."Image Zoom" <> CurrZoom THEN BEGIN
            ContiniaUserProp."Image Zoom" := CurrZoom;
            ContiniaUserProp.MODIFY;
          END;

      CaptureAddinLib.BuildZoomCommand(CurrZoom,CaptureXmlDoc);
      CaptureAddinLib.BuildZoomTextCommand(CurrentZoomText,CaptureXmlDoc);
    END;

    LOCAL PROCEDURE SendCommand@1000000002(VAR XmlDoc@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      NewXmlDoc@161024012 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
    BEGIN
      CaptureAddinLib.XmlToText(XmlDoc,CaptureUISource);

      CaptureAddinLib.TextToXml(NewXmlDoc,CaptureUISource);
    END;

    LOCAL PROCEDURE HandleSimpleCommand@1000000011(Command@1000000000 : Text[1024]);
    BEGIN
      CASE Command OF
        'ZoomIn':
          Zoom(CurrZoom + 5,TRUE);

        'ZoomOut':
          Zoom(CurrZoom - 5,TRUE);

        'FirstPage':
          IF ExpenseAttachment.COUNT > 0 THEN
            UpdateImage(1)
          ELSE
            EXIT;

        'NextPage':
          IF CurrentAttachmentNo < ExpenseAttachment.COUNT THEN
            UpdateImage(CurrentAttachmentNo + 1)
          ELSE
            EXIT;

        'PrevPage':
          IF CurrentAttachmentNo > 1 THEN
            UpdateImage(CurrentAttachmentNo - 1)
          ELSE
            EXIT;

        'LastPage':
          UpdateImage(ExpenseAttachment.COUNT);
      END;

      SendCommand(CaptureXmlDoc);
      CLEAR(CaptureXmlDoc);
    END;

    LOCAL PROCEDURE HandleXmlCommand@1000000007(Command@1000000000 : Text[1024];VAR InXmlDoc@1000000001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      XmlLib@1000000003 : Codeunit 6085573;
    BEGIN
      CASE Command OF
        'ZoomTextChanged':
          BEGIN
            CurrentZoomText := XmlLib.GetNodeText(InXmlDoc.DocumentElement,'Text');
            IF EVALUATE(CurrZoom,DELCHR(CurrentZoomText,'=','%')) THEN;
            Zoom(CurrZoom,TRUE);
          END;

        'PageTextChanged':
          BEGIN
            CurrentAttachmentText := XmlLib.GetNodeText(InXmlDoc.DocumentElement,'Text');
            ParseAttachmentText(CurrentAttachmentText);
          END;

        'ChangePage':
          UpdateImage(XmlLib.Text2Int(XmlLib.GetNodeText(InXmlDoc.DocumentElement,'NewPageNo')));
      END;

      IF NOT ISNULL(CaptureXmlDoc) THEN
        SendCommand(CaptureXmlDoc);
      CLEAR(CaptureXmlDoc);
    END;

    PROCEDURE ClearImage@1161054000();
    BEGIN
      CaptureAddinLib.BuildClearImageCommand(CaptureXmlDoc);
      UpdateImage(0);
      SendCommand(CaptureXmlDoc);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE GetContiniaUserProp@1160040001() : Boolean;
    BEGIN
      IF ContiniaUserProp."User ID" = USERID THEN
        EXIT(TRUE)
      ELSE
        EXIT(ContiniaUserProp.GET(USERID));
    END;

    EVENT CaptureXmlDoc@1000000010::ondataavailable@198();
    BEGIN
    END;

    EVENT CaptureXmlDoc@1000000010::onreadystatechange@-609();
    BEGIN
    END;

    BEGIN
    {
      The reason for this form to be a list is to avoide default RTC right-click functionality
    }
    END.
  }
}

