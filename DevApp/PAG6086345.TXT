OBJECT Page 6086345 Bank Transaction Inbox
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.1.03.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Bank Transaction Inbox;
    InsertAllowed=No;
    SourceTable=Table6086331;
    PageType=Worksheet;
    OnOpenPage=BEGIN
                 StatusFilter := StatusFilter::UnProcessed;
                 SetStatusFilter;
               END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1160040064;1 ;ActionGroup;
                      Name=<Action1160040064>;
                      CaptionML=ENU=Bank Transaction }
      { 1160040065;2 ;Action    ;
                      Name=<Action1160040065>;
                      CaptionML=ENU=Assign card to &user;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CreditCard;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MatchCard;
                               END;
                                }
      { 1160040066;2 ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=ENU=&Reprocess;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Reuse;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 BankTransInbox@1160040000 : Record 6086331;
                                 BankTransInbox2@1160040002 : Record 6086331;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(BankTransInbox);
                                 IF BankTransInbox.COUNT = 1 THEN BEGIN
                                   IF NOT CONFIRM(TxtReprocessAll,TRUE) THEN
                                     EXIT;
                                   BankTransInbox.RESET;
                                 END ELSE
                                   IF NOT CONFIRM(TxtReprocessSelected,TRUE) THEN
                                     EXIT;
                                 BankTransInbox.SETFILTER(Status,'%1|%2',Status::Pending,Status::Error);
                                 IF BankTransInbox.FINDFIRST THEN
                                   REPEAT
                                     BankTransInbox2 := BankTransInbox;
                                     COMMIT;
                                     CODEUNIT.RUN(CODEUNIT::"Bank Trans. Inbox-Process",BankTransInbox2);
                                   UNTIL BankTransInbox.NEXT = 0;
                               END;
                                }
      { 1160040010;1 ;ActionGroup;
                      Name=<Action1160040008>;
                      CaptionML=ENU=Bank }
      { 1160040006;2 ;Action    ;
                      Name=<Action1160040002>;
                      CaptionML=ENU=Currency Map;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Currency;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Bank@1160040000 : Record 6086314;
                               BEGIN
                                 Bank.GET("Bank Code","Bank Country/Region");
                                 Bank.ShowCurrencyMap;
                               END;
                                }
      { 1160040008;2 ;Action    ;
                      CaptionML=ENU=Country/Region Map;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CountryRegion;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Bank@1160040000 : Record 6086314;
                               BEGIN
                                 Bank.GET("Bank Code","Bank Country/Region");
                                 Bank.ShowCountryRegionMap;
                               END;
                                }
      { 1160040016;1 ;ActionGroup;
                      CaptionML=ENU=Expense;
                      ActionContainerType=NewDocumentItems }
      { 1160040014;2 ;Action    ;
                      Name=<Action1160040014>;
                      CaptionML=ENU=Employee Expenses;
                      RunObject=Page 6086317;
                      RunPageLink=Employee No.=FIELD(Employee No.),
                                  Posted=FILTER(No);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Employee;
                      PromotedCategory=Process }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1160040004;1;Group  ;
                CaptionML=ENU=General }

    { 1160040002;2;Field  ;
                CaptionML=ENU=Status Filter;
                OptionCaptionML=ENU=All,Not processed,Accepted;
                SourceExpr=StatusFilter;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             SetStatusFilter;
                           END;
                            }

    { 1160040000;1;Group  ;
                GroupType=Repeater }

    { 1160040001;2;Field  ;
                SourceExpr="Card ID" }

    { 1160040003;2;Field  ;
                SourceExpr="Card Name" }

    { 1160040055;2;Field  ;
                SourceExpr="Error Text" }

    { 1   ;2   ;Field     ;
                SourceExpr=Suspect }

    { 1160040059;2;Field  ;
                SourceExpr="Expense Type" }

    { 1160040005;2;Field  ;
                SourceExpr="Posting Date" }

    { 1160040007;2;Field  ;
                SourceExpr="Document Date" }

    { 1160040009;2;Field  ;
                SourceExpr="Currency Code" }

    { 1160040011;2;Field  ;
                SourceExpr="Currency Exch. Rate" }

    { 1160040013;2;Field  ;
                SourceExpr=Amount }

    { 1160040015;2;Field  ;
                SourceExpr="Amount (LCY)" }

    { 1160040017;2;Field  ;
                SourceExpr="Entry Type" }

    { 1160040019;2;Field  ;
                SourceExpr="Business Category ID" }

    { 1160040021;2;Field  ;
                SourceExpr="Business No." }

    { 1160040023;2;Field  ;
                SourceExpr="Business Name" }

    { 1160040025;2;Field  ;
                SourceExpr="Business Address" }

    { 1160040027;2;Field  ;
                SourceExpr="Business Address 2" }

    { 1160040029;2;Field  ;
                SourceExpr="Business Address 3" }

    { 1160040031;2;Field  ;
                SourceExpr="Business Country/Region" }

    { 1160040033;2;Field  ;
                SourceExpr="Business Post Code" }

    { 1160040035;2;Field  ;
                SourceExpr="Bank Entry ID" }

    { 1160040037;2;Field  ;
                SourceExpr="Employee No." }

    { 1160040012;2;Field  ;
                SourceExpr="Exclude Entry" }

    { 1160040045;2;Field  ;
                SourceExpr="Card Transaction Entry No." }

    { 1160040047;2;Field  ;
                SourceExpr="Imported Date/Time" }

    { 1160040049;2;Field  ;
                SourceExpr="Imported by User ID" }

    { 1160040051;2;Field  ;
                SourceExpr="Processed Date/Time" }

    { 1160040053;2;Field  ;
                SourceExpr="Processed by User ID" }

    { 1160040057;2;Field  ;
                SourceExpr=Status }

  }
  CODE
  {
    VAR
      StatusFilter@1160040001 : 'All,UnProcessed,Accepted';
      TxtReprocessAll@1160040004 : TextConst 'ENU=Do you want to process all un-processed bank transactions in the inbox?';
      TxtReprocessSelected@1160040003 : TextConst 'ENU=Do you want to process the selected bank transactions in the inbox?';

    LOCAL PROCEDURE SetStatusFilter@1160040000();
    VAR
      PrevEntryNo@1160040000 : Integer;
    BEGIN
      PrevEntryNo := "Entry No.";

      RESET;
      FILTERGROUP(2);

      CASE StatusFilter OF
        StatusFilter::UnProcessed:
          SETFILTER(Status,'%1|%2',Status::Pending,Status::Error);
        StatusFilter::Accepted:
          SETRANGE(Status,Status::Accepted);
        StatusFilter::All:
          SETRANGE(Status);
      END;

      FILTERGROUP(0);

      ASCENDING(FALSE);

      SETRANGE("Entry No.",PrevEntryNo);
      IF FINDFIRST THEN;
      SETRANGE("Entry No.");

      CurrPage.UPDATE(FALSE);
    END;

    BEGIN
    END.
  }
}

