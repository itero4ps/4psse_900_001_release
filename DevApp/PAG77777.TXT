OBJECT Page 77777 Object Manipulation
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=t.Q7,4PSSE;
  }
  PROPERTIES
  {
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table2000000001;
    SourceTableView=SORTING(Type,Company Name,ID)
                    WHERE(Type=FILTER(Table..),
                          Company Name=CONST());
    PageType=Worksheet;
    PromotedActionCategoriesML=ENU=Merge,Export,a,Types,ID,Edit,Date,b,c;
    ShowFilter=Yes;
    OnInit=BEGIN
             TimeEditable := TRUE;
             DateEditable := TRUE;
             NameEditable := TRUE;
             CompiledEditable := TRUE;
             "BLOB SizeEditable" := TRUE;
             ModifiedEditable := TRUE;
             IDEditable := TRUE;
             TypeEditable := TRUE;
           END;

    OnOpenPage=BEGIN
                 TypeEditable := FALSE;
                 IDEditable := FALSE;
                 //ModifiedEditable := FALSE;
                 "BLOB SizeEditable" := FALSE;
                 CompiledEditable := FALSE;
                 NameEditable := FALSE;

                 //DatabaseFileName.FINDFIRST;
                 //Server.SETRANGE("My Server",TRUE);
                 //Server.FINDFIRST;
                 //DataDatabase.SETRANGE("My Database",TRUE);
                 //DataDatabase.FINDFIRST;
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100485013;1 ;Action    ;
                      CaptionML=ENU=Table;
                      Promoted=Yes;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ApplyFilterObjType(Type::Table);
                               END;
                                }
      { 1100285001;1 ;Action    ;
                      CaptionML=ENU=Page;
                      Promoted=Yes;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ApplyFilterObjType(Type::Page);
                               END;
                                }
      { 1100485017;1 ;Action    ;
                      CaptionML=ENU=Report;
                      Promoted=Yes;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ApplyFilterObjType(Type::Report);
                               END;
                                }
      { 1100485026;1 ;Action    ;
                      CaptionML=ENU=Codeunit;
                      Promoted=Yes;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ApplyFilterObjType(Type::Codeunit);
                               END;
                                }
      { 1100285507;1 ;Action    ;
                      CaptionML=ENU=Query;
                      OnAction=BEGIN
                                 ApplyFilterObjType(Type::Query);
                               END;
                                }
      { 1100485025;1 ;Action    ;
                      CaptionML=ENU=XMLport;
                      Promoted=Yes;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ApplyFilterObjType(Type::XMLport);
                               END;
                                }
      { 1100485027;1 ;Action    ;
                      CaptionML=ENU=MenuSuite;
                      Promoted=Yes;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ApplyFilterObjType(Type::MenuSuite);
                               END;
                                }
      { 1100485028;1 ;Action    ;
                      Name=ButtonShowAll;
                      CaptionML=ENU=All;
                      Promoted=Yes;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 SETRANGE(Type);
                                 FILTERGROUP(2);
                                 SETFILTER(Type,'<>%1',Type::TableData);
                                 FILTERGROUP(0);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100525014;1 ;Action    ;
                      CaptionML=ENU=Marked Only;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MARKEDONLY(TRUE);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100525001;1 ;Action    ;
                      CaptionML=ENU=Version Filter;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetVersionListFilter;
                               END;
                                }
      { 1100525015;1 ;Action    ;
                      Name=ButUp;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IncrVersionListFilter(1);
                                 SetVersionListFilter;
                               END;
                                }
      { 1100525016;1 ;Action    ;
                      Name=ButUp2;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IncrVersionListFilter(-1);
                                 SetVersionListFilter;
                               END;
                                }
      { 1100525000;1 ;Action    ;
                      CaptionML=ENU=Exclude Tools;
                      Promoted=Yes;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 SETFILTER(ID,'..49999|100000..2000000070|2000000072..');
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100525002;1 ;Action    ;
                      CaptionML=ENU=Only Tools;
                      Promoted=Yes;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 SETFILTER(ID,'50000..99999');
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100285003;1 ;Action    ;
                      CaptionML=ENU=ID filter;
                      Promoted=Yes;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 ProjectSettings@1100285000 : Record 77780;
                               BEGIN
                                 IF ProjectSettings.GET(ProjectSettings.Setting::"ID filter product",USERID) THEN
                                 SETFILTER(ID,ProjectSettings.Value);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100525004;1 ;Action    ;
                      CaptionML=ENU=Modified Today;
                      Promoted=Yes;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 SETRANGE(Date,TODAY);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100285000;1 ;Action    ;
                      CaptionML=ENU=Modified Since...;
                      Promoted=Yes;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 ProjectSettings@1100285000 : Record 77780;
                               BEGIN
                                 ProjectSettings.GET(7,USERID);
                                 SETFILTER(Date,ProjectSettings.Value+'..');
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100525003;1 ;Action    ;
                      CaptionML=ENU=Remove Filters;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN

                                 SETRANGE(Type);
                                 SETRANGE(ID);
                                 SETRANGE(Name);
                                 SETRANGE(Compiled);
                                 SETRANGE(Date);
                                 SETRANGE(Time);
                                 SETRANGE(Modified);
                                 SETRANGE("Version List");
                                 MARKEDONLY(FALSE);

                                 FILTERGROUP(2);
                                 SETFILTER(Type,'<>%1',Type::TableData);
                                 FILTERGROUP(0);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100525005;1 ;Action    ;
                      CaptionML=ENU=Export Objects;
                      Promoted=Yes;
                      Image=Export;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ExportObjects3;
                               END;
                                }
      { 1100288000;1 ;Action    ;
                      CaptionML=ENU=Export sourcebased;
                      Promoted=Yes;
                      Image=Export;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MarkObjects;
                               END;
                                }
      { 1100526000;1 ;Action    ;
                      CaptionML=ENU=Br&anch Specs;
                      Visible=FALSE;
                      OnAction=BEGIN
                                 //CreateP4BranchSpec;
                                 ERROR('removed');
                               END;
                                }
      { 1100285501;1 ;Action    ;
                      CaptionML=ENU=Direct Edit;
                      Promoted=Yes;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 //CurrPage."Version List".EDITABLE(NOT CurrPage."Version List".EDITABLE);
                                 DateEditable := "Version ListEditable";
                                 TimeEditable := "Version ListEditable";
                               END;
                                }
      { 1100285500;1 ;Action    ;
                      CaptionML=ENU=Apply Cmd;
                      Promoted=Yes;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 Command@1100485000 : Text[100];
                                 CommandBuffer@1100485001 : Text[100];
                               BEGIN
                                 CommandBuffer := ChangeCommand;
                                 WHILE GetCommand(Command,CommandBuffer) DO
                                   ApplyCommand(Command);
                               END;
                                }
      { 1100285504;1 ;Action    ;
                      ShortCutKey=Ctrl+e;
                      CaptionML=ENU=Compare and Merge;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Export;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 CompareandMerge;
                               END;
                                }
      { 1100285508;1 ;Action    ;
                      ShortCutKey=Shift+Ctrl+e;
                      CaptionML=ENU=Export for edit;
                      Promoted=Yes;
                      PromotedIsBig=No;
                      Image=Export;
                      PromotedCategory=New;
                      OnAction=VAR
                                 ProjectSettings@1100285500 : Record 77780;
                                 Folder1@1100285501 : Text;
                                 tempvar@1100285506 : Integer;
                                 tempbool@1100285505 : Boolean;
                                 WSHshel@1100285502 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
                                 wsCommand@1100285503 : Text;
                               BEGIN
                                 ProjectSettings.GET(ProjectSettings.Setting::Folder1,USERID);
                                 Folder1 := ProjectSettings.Value;

                                 ExportForEdit('"' + Folder1 + '\pag77777in.txt"','','',TRUE);

                                 ProjectSettings.GET(ProjectSettings.Setting::TextEditorPath,USERID);
                                 wsCommand := '"' + ProjectSettings.Value + '" ' +
                                 //wsCommand := '"C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\Uedit32" '+
                                              '"' + Folder1 + '\pag77777in.txt" ';
                                 CREATE(WSHshel,TRUE,TRUE);
                                 WSHshel.Run(wsCommand,tempvar,tempbool);
                               END;
                                }
      { 1100285505;1 ;Action    ;
                      ShortCutKey=Ctrl+r;
                      CaptionML=ENU=Import Merged;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 ImportMerged;
                               END;
                                }
      { 1100285506;1 ;Action    ;
                      CaptionML=ENU=Import New (folder3);
                      Image=Import;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 ImportNew3;
                               END;
                                }
      { 1100285509;1 ;Action    ;
                      CaptionML=ENU=Export all ID-based Objects;
                      Promoted=Yes;
                      Image=Export;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ExportObjects4;
                               END;
                                }
      { 1100285300;1 ;Action    ;
                      ShortCutKey=Ctrl+k;
                      CaptionML=ENU=compile a single object;
                      Promoted=Yes;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 CompileObject;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100285004;1;Field  ;
                SourceExpr=Rec.COUNT }

    { 1100485000;1;Group  ;
                GroupType=Repeater }

    { 1100485001;2;Field  ;
                SourceExpr=Type;
                Editable=TypeEditable }

    { 1100485005;2;Field  ;
                SourceExpr=ID;
                Editable=IDEditable }

    { 1100485007;2;Field  ;
                SourceExpr=Name;
                Editable=NameEditable }

    { 1100485009;2;Field  ;
                SourceExpr=Modified;
                Editable=ModifiedEditable }

    { 1100485023;2;Field  ;
                SourceExpr="Version List" }

    { 1100485019;2;Field  ;
                SourceExpr=Date;
                Editable=DateEditable }

    { 1100485021;2;Field  ;
                SourceExpr=Time;
                Editable=TimeEditable }

    { 1100485015;2;Field  ;
                SourceExpr="BLOB Size";
                Visible=FALSE;
                Editable="BLOB SizeEditable" }

    { 1100485011;2;Field  ;
                SourceExpr=Compiled;
                Editable=CompiledEditable }

    { 1100285502;2;Field  ;
                SourceExpr=Locked }

    { 1100285503;2;Field  ;
                SourceExpr="Locked By" }

    { 1100525008;1;Group   }

    { 1100485031;2;Field  ;
                AssistEdit=Yes;
                SourceExpr=ChangeCommand;
                OnAssistEdit=BEGIN
                               ChangeCommand := SELECTSTR(STRMENU(Text014 + Text015 + Text016),Text004 + Text005 + Text006);
                             END;
                              }

    { 1100525011;2;Field   }

    { 1100525009;1;Group   }

    { 1100525007;2;Part   ;
                Name=SettingsSF;
                PagePartID=Page77781 }

  }
  CODE
  {
    VAR
      Filter@1100485000 : Text[1024];
      ChangeCommand@1100485001 : Text[100];
      Text000@1100485006 : TextConst 'ENU=Select file';
      Text001@1100485007 : TextConst 'ENU=Object filepath is empty.';
      Text004@1100485010 : TextConst 'ENU="$D=[/t];$T=[/t];$M=[/t],$X=[/xp];$V=[/=];$D=[/0];$T=[/0];$M=[/f],$D=[/=111111],$T=[/=111111],$M=[/t]"';
      Text005@1100485011 : TextConst 'ENU=",$X=[/fM],$X=[/ip],$X=[/iN],$X=[/xp],$X=[/pM],$X=[/pM];$V=[/=!~%1]"';
      Text006@1100485012 : TextConst 'ENU=",$V=[/=!~%1],$V=[/r!~/],$V=[/i]"';
      Text007@1100485008 : TextConst 'ENU=Obj. Prop (*.cs?)|*.cs?|Obj. Prop Old (*.tx?)|*.tx?';
      Text008@1100485009 : TextConst 'ENU=Are you absolutely sure you want to delete the selected objects?';
      Text014@1100485014 : TextConst 'ENU=Set Modified NOW,Clear All,Set Date,Set Time,Set Modified';
      Text015@1100485015 : TextConst 'ENU=,Mark Filtered,Imp Obj Prop,Imp Obj Prop (incl. Name),Exp Obj Prop,Mark Obj from Prop File,Mark and Chg Vers. from File';
      Text016@1100485016 : TextConst 'ENU=,Expand Version,Change Version,Incr. Version';
      Text020@1100525000 : TextConst 'ENU=Export %1 objects to %2?';
      Text021@1100525001 : TextConst 'ENU=This format is no longer supported. Pls. use an older version of this tool.';
      ProjectCode@1100525002 : Code[10];
      Text022@1100525003 : TextConst 'ENU=The filename should contain a numeric part.';
      BackupMode@1100525005 : Boolean;
      Text023@1100525006 : TextConst 'ENU="The filterstring does not contain a valid numerical part. "';
      Server@1100285000 : Record 2000000047;
      DataDatabase@1100285001 : Record 2000000048;
      TypeEditable@19028748 : Boolean INDATASET;
      IDEditable@19032788 : Boolean INDATASET;
      ModifiedEditable@19001535 : Boolean INDATASET;
      "BLOB SizeEditable"@19025854 : Boolean INDATASET;
      CompiledEditable@19071114 : Boolean INDATASET;
      NameEditable@19020936 : Boolean INDATASET;
      DateEditable@19044717 : Boolean INDATASET;
      "Version ListEditable"@19033793 : Boolean INDATASET;
      TimeEditable@19021082 : Boolean INDATASET;

    PROCEDURE ApplyFilterObjType@1100485000(ObjectType@1100485000 : Integer);
    BEGIN
      SETRANGE(Type,ObjectType);
      CurrPage.UPDATE;
    END;

    PROCEDURE GetCommand@1100485002(VAR Command@1100485000 : Text[100];VAR CommandBuffer@1100485001 : Text[100]) : Boolean;
    VAR
      CmdStart@1100485002 : Integer;
      CmdEnd@1100485003 : Integer;
    BEGIN
      //FIXME ;$;

      CmdStart := STRPOS(CommandBuffer,'$');
      IF CmdStart = 0 THEN
        EXIT(FALSE);
      CmdEnd := STRPOS(CommandBuffer,';');
      IF CmdEnd = 0 THEN BEGIN
        Command := COPYSTR(CommandBuffer,CmdStart);
        CommandBuffer := '';
      END ELSE BEGIN
        Command := COPYSTR(CommandBuffer,CmdStart,CmdEnd-CmdStart);
        CommandBuffer := COPYSTR(CommandBuffer,CmdEnd+1);
      END;
      IF TRUE THEN;
      EXIT(TRUE);
    END;

    PROCEDURE ApplyCommand@1100485003(Command@1100485000 : Text[100]);
    BEGIN
      CASE COPYSTR(Command,2,1) OF
        'V' : ModifyVersion(Command);
        'M' : ModifyModified(Command);
        'D' : ModifyDate(Command);
        'T' : ModifyTime(Command);
        'X' : ExecuteCmd(Command);
      END;
    END;

    PROCEDURE ModifyVersion@1100485006(Command@1100485000 : Text[100]);
    VAR
      CmdStart@1100485001 : Integer;
      FindStr@1100485002 : Text[30];
      ReplStr@1100485003 : Text[30];
      i@1100485004 : Integer;
      CmdCommand@1100485005 : Text[10];
      CmdArguments@1100485006 : Text[100];
    BEGIN
      CmdStart := STRPOS(Command,'=');
      IF CmdStart = 0 THEN
        EXIT;

      Command := COPYSTR(Command,CmdStart + 1);
      CmdCommand := COPYSTR(Command,3,1);
      CmdArguments := COPYSTR(Command,4,STRPOS(Command,']') - 4);

      IF FINDSET(TRUE) THEN
        CASE CmdCommand OF
          'r' :   //string replace, example: $V=[/rNAVW1/NAVNL]
            BEGIN
              FindStr := COPYSTR(CmdArguments,1,STRPOS(CmdArguments,'/') - 1);
              ReplStr := COPYSTR(CmdArguments,STRPOS(CmdArguments,'/') + 1);
              REPEAT
                i := STRPOS("Version List",FindStr);
                IF i <> 0 THEN BEGIN
                  "Version List" := DELSTR("Version List",i,STRLEN(FindStr));
                  "Version List" := INSSTR("Version List",ReplStr,i);
                  MODIFY;
                END;
              UNTIL NEXT = 0;
            END;
          '=' :   //string substitute, example: $V=[/=pre-%1-post], %1 is current versionstring
              BEGIN
                i := STRPOS(CmdArguments,'%1');
                REPEAT
                  IF i = 0 THEN
                    "Version List" := CmdArguments
                  ELSE IF
                    (i + 2) > STRLEN(CmdArguments) THEN
                      "Version List" := COPYSTR(CmdArguments,1,i-1) + "Version List"
                    ELSE
                      "Version List" := COPYSTR(CmdArguments,1,i-1) + "Version List" + COPYSTR(CmdArguments,i + 2);
                  MODIFY;
                UNTIL NEXT = 0;
              END;
          'i' :   //string increment, example: $V=[/i]
              REPEAT
                "Version List" := INCSTR("Version List");
                 MODIFY;
              UNTIL NEXT = 0;
        END;
    END;

    PROCEDURE ModifyModified@1100485001(Command@1100485000 : Text[100]);
    VAR
      CmdStart@1100485001 : Integer;
      FindStr@1100485002 : Text[30];
      ReplStr@1100485003 : Text[30];
      i@1100485004 : Integer;
      CmdCommand@1100485005 : Text[10];
      CmdArguments@1100485006 : Text[100];
    BEGIN
      CmdStart := STRPOS(Command,'=');
      IF CmdStart = 0 THEN
        EXIT;

      Command := COPYSTR(Command,CmdStart + 1);
      CmdCommand := COPYSTR(Command,3,1);

      IF FINDSET(TRUE) THEN
        CASE CmdCommand OF
          't' :  //set true    $M=[/t]
            BEGIN
              MODIFYALL(Modified,TRUE);
              EXIT;
            END;
          'f' :  //set false
            BEGIN
              MODIFYALL(Modified,FALSE);
              EXIT;
            END;
          'x' :  //toggle
            REPEAT
              Modified := NOT Modified;
              MODIFY;
            UNTIL NEXT = 0;
        END;
    END;

    PROCEDURE ModifyDate@1100485004(Command@1100485000 : Text[100]);
    VAR
      CmdStart@1100485001 : Integer;
      FindStr@1100485002 : Text[30];
      ReplStr@1100485003 : Text[30];
      i@1100485004 : Integer;
      CmdCommand@1100485005 : Text[10];
      CmdArguments@1100485006 : Text[100];
    BEGIN
      CmdStart := STRPOS(Command,'=');
      IF CmdStart = 0 THEN
        EXIT;

      Command := COPYSTR(Command,CmdStart + 1);
      CmdCommand := COPYSTR(Command,3,1);

      IF FINDSET(TRUE) THEN
        CASE CmdCommand OF
          't' :  //set current TODAY    $D=[/t]
            BEGIN
              MODIFYALL(Date,TODAY);
              EXIT;
            END;
          '0' :  //clear
            BEGIN
              MODIFYALL(Date,0D);
              EXIT;
            END;
          '=' :  //fixed date
            BEGIN
              EVALUATE(Date,COPYSTR(Command,4,STRLEN(Command)-4));
              MODIFYALL(Date,Date);
            EXIT;
          END;
        END;
    END;

    PROCEDURE ModifyTime@1100485008(Command@1100485000 : Text[100]);
    VAR
      CmdStart@1100485001 : Integer;
      FindStr@1100485002 : Text[30];
      ReplStr@1100485003 : Text[30];
      i@1100485004 : Integer;
      CmdCommand@1100485005 : Text[10];
      CmdArguments@1100485006 : Text[100];
    BEGIN
      CmdStart := STRPOS(Command,'=');
      IF CmdStart = 0 THEN
        EXIT;

      Command := COPYSTR(Command,CmdStart + 1);
      CmdCommand := COPYSTR(Command,3,1);

      IF FINDSET(TRUE) THEN
        CASE CmdCommand OF
          't' :  //set current time    $D=[/t]
            BEGIN
              MODIFYALL(Time,SYSTEM.TIME);
              EXIT;
            END;
          '0' :  //clear
            BEGIN
              MODIFYALL(Time,0T);
              EXIT;
            END;
          '=' :  //fixed time
            BEGIN
              EVALUATE(Time,COPYSTR(Command,4,STRLEN(Command)-4));
              MODIFYALL(Time,Time);
            EXIT;
          END;
        END;
    END;

    PROCEDURE ExecuteCmd@1100485007(Command@1100485000 : Text[100]);
    VAR
      CmdStart@1100485001 : Integer;
      FindStr@1100485002 : Text[30];
      ReplStr@1100485003 : Text[30];
      i@1100485004 : Integer;
      CmdCommand@1100485005 : Text[10];
      CmdArguments@1100485006 : Text[100];
      Object2@1100485007 : Record 2000000001;
    BEGIN
      CmdStart := STRPOS(Command,'=');
      IF CmdStart = 0 THEN
        EXIT;

      Command := COPYSTR(Command,CmdStart + 1);
      CmdCommand := COPYSTR(Command,3,2);

      CASE CmdCommand OF
        '--' :
          BEGIN
            RESET;
            RemoveObjTypeFilter(Rec);
          END;
        '-F' : RemoveObjTypeFilter(Rec);
        '-M' : MARKEDONLY(FALSE);
        ELSE
          IF FINDSET(TRUE) THEN
            CASE CmdCommand OF
              'fM' :  //mark selected, change filter to marked only
                BEGIN
                  REPEAT
                    MARK(TRUE);
                  UNTIL NEXT = 0;
                  RemoveObjTypeFilter(Rec);
                  MARKEDONLY(TRUE);
                END;
              '-~' :  //remove ~
                ModifyVersion('$V=[/r~/]');
              'xo' :  //export objects
                ExportObjects2;

              'ip' :  //import objectproperties
                HandleObjProp(0);
              'iN' :  //import objectproperties, overwrite Name
                HandleObjProp(3);
              'xp' :  //export objectproperties
                HandleObjProp(1);
              'pM' :  //mark records based on import objectproperties
                BEGIN
                  HandleObjProp(2);
                  MARKEDONLY(TRUE);
                END;
              'Do' :  //delete Objects
                DeleteObjects;
            END;
      END;
    END;

    PROCEDURE DeleteObjects@1100485005();
    VAR
      Object@1100485000 : Record 2000000001;
    BEGIN
      IF CONFIRM(Text008,FALSE) THEN BEGIN
        IF FINDSET(TRUE,TRUE) THEN
          REPEAT
            IF STRPOS("Version List",'!D~') = 1 THEN
              DELETE;
          UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE HandleObjProp@1100485009(Action@1100485000 : 'Read,Write,Mark,Read_ChgName');
    VAR
      f@1100485005 : File;
      ProjectSettings@1100525002 : Record 77780;
      Object2@1100485004 : Record 2000000001;
      Object3@1100485003 : Record 2000000001;
      Object4@1100485006 : Record 2000000001;
      Txt@1100485001 : Text[1024];
      TxtEmbraced@1100485002 : Boolean;
      SepString@1100485007 : Text[5];
      TypeTxt@1100525000 : Text[30];
      IDTxt@1100525001 : Text[30];
      OverwriteName@1100525003 : Boolean;
    BEGIN
      ProjectSettings.GET(ProjectSettings.Setting::"Object Properties File",USERID);

      IF COPYSTR(ProjectSettings.Value,STRLEN(ProjectSettings.Value) - 4,4) = '.txt' THEN
        ERROR(Text021);

      IF Action = Action::Read_ChgName THEN BEGIN
        Action := Action::Read;
        OverwriteName := TRUE;
      END;

      IF Action = Action::Read THEN BEGIN
        BackupMode := TRUE;
        ExecuteCmd('$X=[/xp]');
        BackupMode := FALSE;
      END;

      f.TEXTMODE(TRUE);
      IF Action = Action::Write THEN BEGIN
        IF FINDSET THEN BEGIN
          Object2.COPY(Rec);
          //f.QUERYREPLACE(TRUE);
          IF BackupMode THEN
            f.CREATE(ProjectSettings.Value + '.bak')
          ELSE
            f.CREATE(ProjectSettings.Value);

          REPEAT
            Txt := STRSUBSTNO('"%1"',Type);
            Txt := Txt + STRSUBSTNO(';"%1"',ID);
            Txt := Txt + STRSUBSTNO(';"%1"',Name);
            Txt := Txt + STRSUBSTNO(';"%1"',Modified);
            Txt := Txt + STRSUBSTNO(';"%1"',"Version List");
            Txt := Txt + STRSUBSTNO(';"%1"',Date);
            Txt := Txt + STRSUBSTNO(';"%1"',Time);
            Txt := Txt + STRSUBSTNO(';"%1"',"BLOB Size");
            Txt := Txt + STRSUBSTNO(';"%1"',Compiled);
            f.WRITE(Txt);
          UNTIL NEXT = 0;
          f.CLOSE;
          COPY(Object2);
        END;
      END ELSE BEGIN
        f.OPEN(ProjectSettings.Value);
        f.READ(Txt);
        TxtEmbraced := (COPYSTR(Txt,1,1) = '"');
        IF TxtEmbraced THEN
          SepString := '";"'
        ELSE
          SepString := ';';
        f.SEEK(0);
        REPEAT
          f.READ(Txt);
          IF Txt <> '' THEN BEGIN
            Object2.COPYFILTERS(Rec);
            Object2."Company Name" := '';
            WITH Object2 DO BEGIN
              IF TxtEmbraced THEN
                Txt := COPYSTR(Txt,2,STRLEN(Txt) - 2);

              IF STRPOS(Txt,SepString) <> 0 THEN BEGIN
                EVALUATE(Type,CutHeadFromTail(Txt,SepString));
                EVALUATE(ID,CutHeadFromTail(Txt,SepString));
                IF Action = Action::Read THEN BEGIN
                  EVALUATE(Name,CutHeadFromTail(Txt,SepString));
                  EVALUATE(Modified,CutHeadFromTail(Txt,SepString));
                  EVALUATE("Version List",CutHeadFromTail(Txt,SepString));
                  EVALUATE(Date,CutHeadFromTail(Txt,SepString));
                  EVALUATE(Time,CutHeadFromTail(Txt,SepString));
                  EVALUATE("BLOB Size",CutHeadFromTail(Txt,SepString));
                  EVALUATE(Compiled,CutHeadFromTail(Txt,SepString));
                END;
              END ELSE
                IF Action = Action::Mark THEN
                  IF CutTypeAndID(TypeTxt,IDTxt,Txt) THEN BEGIN
                    IF UPPERCASE(TypeTxt) = 'TAB' THEN
                      Type := Type::Table
                    ELSE
                      EVALUATE(Type,TypeTxt);
                    EVALUATE(ID,IDTxt);
                  END;
            END;
            Object3.COPY(Object2);
            IF Object3.FIND('=') THEN BEGIN
              IF Action = Action::Mark THEN BEGIN
                Rec := Object3;
                MARK(TRUE);
              END ELSE BEGIN
                IF NOT OverwriteName THEN
                  Object2.Name := Object3.Name; //avoid overwriting name
                Object2.MODIFY;
              END;
            END;
          END;
        UNTIL f.POS >= f.LEN;
        f.CLOSE;
      END;
    END;

    PROCEDURE RemoveObjTypeFilter@1100485024(VAR Object@1100485000 : Record 2000000001);
    VAR
      Object2@1100485001 : Record 2000000001;
    BEGIN
      Object2.RESET;
      Object.FILTERGROUP(2);
      Object.SETFILTER(Type,'<>%1',Type::TableData);
      Object.FILTERGROUP(0);
      Object.COPYFILTERS(Object2);
    END;

    PROCEDURE RemoveAllFilters2@1100525004(VAR Object@1100525000 : Record 2000000001);
    BEGIN
      Object.SETRANGE(ID);
      Object.SETRANGE(Name);
      Object.SETRANGE(Compiled);
      Object.SETRANGE(Date);
      Object.SETRANGE(Time);
      Object.SETRANGE(Modified);
      Object.SETRANGE("Version List");
      Object.MARKEDONLY(FALSE);

      RemoveObjTypeFilter(Object);
    END;

    PROCEDURE CutHeadFromTail@1100485014(VAR Tail@1100485001 : Text[1024];Separator@1100485002 : Text[5]) Head : Text[1024];
    BEGIN
      IF STRPOS(Tail,Separator) <> 0 THEN BEGIN
        Head := COPYSTR(Tail,1,STRPOS(Tail,Separator) - 1);
        Tail := COPYSTR(Tail,STRPOS(Tail,Separator) + STRLEN(Separator));
      END ELSE BEGIN
        Head := Tail;
        Tail := '';
      END;
    END;

    PROCEDURE CutTypeAndID@1100525000(VAR Type2@1100525000 : Text[30];VAR ID2@1100525001 : Text[30];Txt@1100525002 : Text[1024]) : Boolean;
    VAR
      LastSlashPos@1100525003 : Integer;
      LastDotPos@1100525004 : Integer;
      hTxt@1100525005 : Text[1024];
    BEGIN
      hTxt := Txt;
      Txt := COPYSTR(Txt,LastStrPos(Txt,'\') + 1);
      IF (hTxt = Txt) THEN
        Txt := COPYSTR(Txt,LastStrPos(Txt,'/') + 1);
      IF STRPOS(Txt,'.') <> 0 THEN
        Txt := COPYSTR(Txt,1,LastStrPos(Txt,'.') - 1);
      IF STRLEN(Txt) < 4 THEN
        EXIT(FALSE);

      Type2 := COPYSTR(Txt,1,3);
      ID2 := COPYSTR(Txt,4);

      EXIT(TRUE);
    END;

    PROCEDURE LastStrPos@1100525001(Str2@1100525000 : Text[1024];SubStr2@1100525001 : Text[30]) Pos2 : Integer;
    VAR
      Pos3@1100525002 : Integer;
    BEGIN
      Pos3 := STRPOS(Str2,SubStr2);
      IF Pos3 <> 0 THEN
        EXIT(Pos3 + LastStrPos(COPYSTR(Str2,Pos3 + 1),SubStr2))
      ELSE
        EXIT(Pos3);
    END;

    PROCEDURE ExportObjects2@1100525003();
    VAR
      ProjectSettings@1100525002 : Record 77780;
      WSHfile@1100525000 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      FileName@1100525001 : Text[101];
      FilePath@1100525004 : Text[151];
      FullFileName@1100525003 : Text[251];
    BEGIN
      CREATE(WSHfile,TRUE,TRUE);

      ProjectSettings.GET(1,USERID);
      FilePath := ProjectSettings.Value;
      IF FilePath = '' THEN
        ERROR(Text001);

      ProjectSettings.GET(2,USERID);
      FileName := STRSUBSTNO(ProjectSettings.Value,FORMAT(WORKDATE,6,6),'1');

      FileName := WSHfile.GetFileName(FileName);
      FullFileName := FilePath + '\' + FileName;

      IF (WSHfile.FileExists(FullFileName) OR WSHfile.FileExists(FullFileName+'.p4c')) THEN
        IF (FileName = INCSTR(FileName)) THEN
          ERROR(Text022);

      WHILE (WSHfile.FileExists(FullFileName) OR WSHfile.FileExists(FullFileName+'.p4c')) DO BEGIN
        FileName := INCSTR(FileName);
        FullFileName := FilePath + '\' + FileName;
      END;

      CLEAR(WSHfile);

      IF NOT CONFIRM(Text020,TRUE,COUNT,FullFileName) THEN
        ERROR('');

      IF FINDSET THEN
        EXPORTOBJECTS(FullFileName,Rec,0);
    END;

    PROCEDURE SetVersionListFilter@1100525002();
    VAR
      ProjectSettings@1100525000 : Record 77780;
    BEGIN
      ProjectSettings.GET(ProjectSettings.Setting::"Version Filter",USERID);
      SETFILTER("Version List",ProjectSettings.Value);
      CurrPage.UPDATE;
    END;

    PROCEDURE IncrVersionListFilter@1100525005(Increment@1100525000 : Integer);
    VAR
      ProjectSettings@1100525001 : Record 77780;
      ValueNew@1100525007 : Text[30];
      IntString@1100525002 : Text[30];
      IntStringNew@1100525006 : Text[30];
      IntValue@1100525003 : Integer;
      IntStrLen@1100525004 : Integer;
      IntStrPos@1100525005 : Integer;
    BEGIN
      ProjectSettings.GET(ProjectSettings.Setting::"Version Filter",USERID);
      IntString := DELCHR(ProjectSettings.Value,'=',DELCHR(ProjectSettings.Value,'=','0123456789'));
      IntStrPos := STRPOS(ProjectSettings.Value,IntString);
      IntStrLen := STRLEN(IntString);
      IF IntStrPos = 0 THEN
        ERROR(Text023);

      EVALUATE(IntValue,IntString);
      IntStringNew := FORMAT(IntValue + Increment);
      IntStringNew := PADSTR('',IntStrLen - STRLEN(IntStringNew),'0') + IntStringNew;
      ValueNew := COPYSTR(ProjectSettings.Value,1,IntStrPos - 1) + IntStringNew;
      IF (IntStrPos + IntStrLen) <= STRLEN(ProjectSettings.Value) THEN
        ValueNew := ValueNew + COPYSTR(ProjectSettings.Value,(IntStrPos + IntStrLen));

      ProjectSettings.Value := ValueNew;
      ProjectSettings.MODIFY;
    END;

    PROCEDURE ExportObjects3@1100285000();
    VAR
      ProjectSettings@1100525002 : Record 77780;
      WSHfile@1100525000 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      FileName@1100525001 : Text[101];
      FilePath@1100525004 : Text[151];
      FullFileName@1100525003 : Text[251];
      Obj@1100285000 : Record 2000000001;
      dial@1100285001 : Dialog;
      ddate@1100290000 : Date;
      ttime@1100290001 : Time;
      Obj2@1100290002 : Record 2000000001;
      wsCommand@1100285506 : Text[1024];
      wsCommand2@1100285505 : Text[1024];
      tempvar@1100285504 : Integer;
      tempbool@1100285503 : Boolean;
      Sess@1100285502 : Record 2000000110;
      modif@1100285501 : Boolean;
      WSHshel@1100285500 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
    BEGIN
      CREATE(WSHfile,TRUE,TRUE);

      ProjectSettings.GET(1,USERID);
      FilePath := ProjectSettings.Value;
      IF FilePath = '' THEN
        ERROR(Text001);


      CLEAR(WSHfile);

      IF NOT CONFIRM(Text020,TRUE,COUNT,FilePath) THEN
        ERROR('');

      Sess.GET(SERVICEINSTANCEID,SESSIONID);

      CREATE(WSHshel,TRUE,TRUE);
        ProjectSettings.GET(ProjectSettings.Setting::"Path to finsql",USERID);
        wsCommand := '"' + ProjectSettings.Value + '\finsql" ';
        wsCommand += 'command=exportobjects, ';

      //  ProjectSettings.GET(ProjectSettings.Setting::"SQL-server",USERID);
        wsCommand += 'servername='+
          //ProjectSettings.Value+
          FindDatabaseServerName+
          ', database='+Sess."Database Name"+
          ', ntauthentication=1, ';

      dial.OPEN('Exporting...\'+
                '#1######################',FileName);
      IF FINDSET THEN
      REPEAT
        Obj.SETRANGE(Type,Type);
        Obj.SETRANGE(ID,ID);
        FileName := COPYSTR(FORMAT(Type),1,3)+FORMAT(ID,0,'<Integer>')+'.txt';
      //  IF ID < 100000 THEN
      //    FileName := COPYSTR(FORMAT(Type),1,3)+FORMAT(ID,0,'<Integer,6><Filler Character,0>')+'.txt';
        dial.UPDATE(1);
        FullFileName := FilePath + '\' + FileName;
        IF EXISTS(FullFileName) THEN
          ERASE(FullFileName);
        Obj2.GET(Type,"Company Name",ID);
        ddate := Obj2.Date;
        ttime := Obj2.Time;
        Obj2.Date := 0D;
        Obj2.Time := 0T;
        IF Obj2.MODIFY(FALSE) THEN;
        Obj2.SETRECFILTER;

        wsCommand2 := 'file="' + FullFileName + '", ';
        wsCommand2 += 'filter=ID='+FORMAT(Obj2.ID,0,2) + ';Type='+FORMAT(Obj2.Type);
        tempvar := 0;
        tempbool := TRUE;
        WSHshel.Run(wsCommand+wsCommand2,tempvar,tempbool);
        //EXPORTOBJECTS(FullFileName,Obj2,0);

        Obj2.Date := ddate;
        Obj2.Time := ttime;
        IF Obj2.MODIFY(FALSE) THEN;
        CLEAR(Obj2);
      UNTIL NEXT=0;
      dial.CLOSE;
    END;

    PROCEDURE MarkObjects@1100288000();
    VAR
      ProjectSettings@1100288005 : Record 77780;
      WSHfile@1100288004 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      FileName@1100288003 : Text[101];
      FilePath@1100288002 : Text[151];
      FullFileName@1100288001 : Text[251];
      Obj@1100288000 : Record 2000000001;
      Obj2@1100288006 : Record 2000000001;
      FilePath2@1100288008 : Text[151];
      FullFileName2@1100288007 : Text[251];
      dial@1100285000 : Dialog;
    BEGIN
      ProjectSettings.GET(8,USERID);
      FilePath := ProjectSettings.Value;
      IF FilePath = '' THEN
        ERROR(Text001);

      ProjectSettings.GET(1,USERID);
      FilePath2 := ProjectSettings.Value;
      IF FilePath2 = '' THEN
        ERROR(Text001);

      dial.OPEN('Exporting...\'+
                '#1######################',FileName);

      Obj.RESET;
      Obj.COPYFILTERS(Rec);
      Obj.SETFILTER(Type,'1..');
      IF Obj.FINDSET THEN
      REPEAT
        //FileName := COPYSTR(FORMAT(Obj.Type),1,3)+FORMAT(Obj.ID,0,'<Integer,10><Filler Character,0>')+'.txt';
        FileName := COPYSTR(FORMAT(Obj.Type),1,3)+FORMAT(Obj.ID,0,'<Integer>')+'.txt';
        IF Obj.ID < 100000 THEN
          FileName := COPYSTR(FORMAT(Obj.Type),1,3)+FORMAT(Obj.ID,0,'<Integer,6><Filler Character,0>')+'.txt';
        FullFileName := FilePath + '\' + FileName;

        IF EXISTS(FullFileName) THEN BEGIN
          dial.UPDATE(1);
          Obj2.SETRANGE(Type,Obj.Type);
          Obj2.SETRANGE(ID,Obj.ID);
          FullFileName2 := FilePath2 + '\' + FileName;
          EXPORTOBJECTS(FullFileName2,Obj2,0);
        END;
      UNTIL Obj.NEXT=0;
      dial.CLOSE;
    END;

    PROCEDURE CompareandMerge@1100285513();
    VAR
      ProjectSettings@1100285500 : Record 77780;
      Folder1@1100285503 : Text;
      Folder2@1100285502 : Text;
      Folder3@1100285501 : Text;
      FileName@1100285504 : Text[101];
      wsCommand@1100285506 : Text[1024];
      wsCommand2@1100285505 : Text[1024];
      WSHshel@1100285507 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
      tempvar@1100285509 : Integer;
      tempbool@1100285508 : Boolean;
      BCompare@1000 : Text;
      addVersion@1100285510 : Text[50];
    BEGIN
      ProjectSettings.GET(ProjectSettings.Setting::Folder2,USERID);
      Folder2 := ProjectSettings.Value;

      ProjectSettings.GET(ProjectSettings.Setting::Folder3,USERID);
      Folder3 := ProjectSettings.Value;

      FileName := COPYSTR(FORMAT(Type),1,3)+FORMAT(ID,0,'<Integer>')+'.txt';
      //IF ID < 100000 THEN  FileName := COPYSTR(FORMAT(Type),1,3)+FORMAT(ID,0,'<Integer,6><Filler Character,0>')+'.txt';


      //IF NOT P4WindowsShellManagement.FileExist(Folder2 + '\'+FileName) THEN EXIT;
      //IF NOT EXISTS(Folder3 + '\'+FileName) THEN EXIT;

      ProjectSettings.GET(ProjectSettings.Setting::Folder1,USERID);
      Folder1 := ProjectSettings.Value;

      ProjectSettings.GET(ProjectSettings.Setting::"Version addition",USERID);
      addVersion := ProjectSettings.Value;

      ExportForEdit('"' + Folder1 + '\pag77777.txt"',FileName,addVersion,FALSE);
      ProjectSettings.GET(ProjectSettings.Setting::CompareToolPath,USERID);
      BCompare := ProjectSettings.Value;

      wsCommand := '"'+BCompare+'" /favorleft '+
                   '"' + Folder1 + '\pag77777.txt" ';
      IF Folder2 <> '' THEN
        wsCommand += '"' + Folder2 + '\'+FileName+'" ';
      IF Folder3 <> '' THEN
        wsCommand += '"' + Folder3 + '\'+FileName+'" ';
      wsCommand += ' /mergeoutput="' + Folder1 + '\pag77777in.txt" ';

      CLEAR(ProjectSettings);
      IF NOT ProjectSettings.GET(ProjectSettings.Setting::cmd3,USERID) THEN BEGIN
        ProjectSettings.INIT;
        ProjectSettings.UserName := USERID;
        ProjectSettings.Setting := ProjectSettings.Setting::cmd3;
        ProjectSettings.INSERT;
      END;
      ProjectSettings.Value := COPYSTR(wsCommand,1,MAXSTRLEN(ProjectSettings.Value));
      ProjectSettings.MODIFY;

      CREATE(WSHshel,TRUE,TRUE);
      WSHshel.Run(wsCommand,tempvar,tempbool);
    END;

    PROCEDURE ExportForEdit@1100285502(_filename@1100285500 : Text[250];FileName@1100285521 : Text[101];versionAdd@1001 : Text[50];keepDates@1002 : Boolean);
    VAR
      WSHfile@1100285522 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      FilePath@1100285520 : Text[151];
      FullFileName@1100285519 : Text[251];
      Obj@1100285518 : Record 2000000001;
      dial@1100285517 : Dialog;
      ddate@1100285516 : Date;
      ttime@1100285515 : Time;
      Obj2@1100285514 : Record 2000000001;
      Folder1@1100285513 : Text;
      Folder2@1100285512 : Text;
      Folder3@1100285511 : Text;
      wsCommand@1100285510 : Text[1024];
      wsCommand2@1100285509 : Text[1024];
      tempvar@1100285508 : Integer;
      tempbool@1100285507 : Boolean;
      Sess@1100285506 : Record 2000000110;
      WSHshel@1100285505 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
      ProjectSettings@1100285503 : Record 77780;
      ObjectManagement@1000 : Codeunit 55310;
    BEGIN
      Obj.SETRANGE(Type,Type);
      Obj.SETRANGE(ID,ID);

      //Sess.SETRANGE("My Session",TRUE);
      IF Sess.FIND THEN;
      //Sess.SETRANGE("User ID",USERID);
      Sess.SETRANGE("Session ID",SESSIONID);
      Sess.SETRANGE("Server Instance ID",SERVICEINSTANCEID);
      IF Sess.FIND THEN;
      Sess.GET(SERVICEINSTANCEID,SESSIONID);

      CREATE(WSHshel,TRUE,TRUE);
      ProjectSettings.GET(ProjectSettings.Setting::"Path to finsql",USERID);
      wsCommand := '"' + ProjectSettings.Value + '\finsql" ';
      wsCommand2 := 'command=exportobjects, ';


      // ProjectSettings.GET(ProjectSettings.Setting::"SQL-server",USERID);
      wsCommand2 += 'servername='+
        //ProjectSettings.Value+
        FindDatabaseServerName+
        ', database='+Sess."Database Name"+
        ', ntauthentication=1, ';

      dial.OPEN('Exporting...\'+
                '#1######################',FileName);
      dial.UPDATE(1);

      Obj2.GET(Type,"Company Name",ID);
      ddate := Obj2.Date;
      ttime := Obj2.Time;
      IF NOT keepDates THEN BEGIN
        Obj2.Date := TODAY;
        Obj2.Time := 100000T;
        IF (versionAdd<>'') AND (STRPOS(Obj2."Version List",versionAdd)=0) THEN
          Obj2."Version List" += ','+versionAdd;
        IF Obj2.MODIFY(FALSE) THEN;
      END;
      Obj2.SETRECFILTER;

      wsCommand2 += 'file=' + _filename +', ';
      wsCommand2 += 'filter="ID='+FORMAT(Obj2.ID,0,2) + ';Type='+FORMAT(Obj2.Type)+'"';
      tempvar := 0;
      tempbool := TRUE;
      //WSHshel.Run(wsCommand+wsCommand2,tempvar,tempbool);


      CLEAR(ProjectSettings);
      ProjectSettings.INIT;
      ProjectSettings.UserName := USERID;
      ProjectSettings.Setting := ProjectSettings.Setting::cmd1;
      ProjectSettings.Value := wsCommand;
      IF NOT ProjectSettings.INSERT THEN ProjectSettings.MODIFY;
      ProjectSettings.Setting := ProjectSettings.Setting::cmd2;
      ProjectSettings.Value := wsCommand2;
      IF NOT ProjectSettings.INSERT THEN ProjectSettings.MODIFY;

      ObjectManagement.ExecuteShellCommand(wsCommand,wsCommand2,'');


      Obj2.Date := ddate;
      Obj2.Time := ttime;
      IF Obj2.MODIFY(FALSE) THEN;
      CLEAR(Obj2);

      dial.CLOSE;
    END;

    LOCAL PROCEDURE CompileObject@1100285300();
    VAR
      WSHfile@1100285318 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      FilePath@1100285317 : Text[151];
      FullFileName@1100285316 : Text[251];
      Obj@1100285315 : Record 2000000001;
      dial@1100285314 : Dialog;
      ddate@1100285313 : Date;
      ttime@1100285312 : Time;
      Obj2@1100285311 : Record 2000000001;
      Folder1@1100285310 : Text;
      Folder2@1100285309 : Text;
      Folder3@1100285308 : Text;
      wsCommand@1100285307 : Text[1024];
      wsCommand2@1100285306 : Text[1024];
      tempvar@1100285305 : Integer;
      tempbool@1100285304 : Boolean;
      Sess@1100285303 : Record 2000000110;
      WSHshel@1100285302 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
      ProjectSettings@1100285301 : Record 77780;
      ObjectManagement@1100285300 : Codeunit 55310;
    BEGIN
      Obj.SETRANGE(Type,Type);
      Obj.SETRANGE(ID,ID);

      //Sess.SETRANGE("My Session",TRUE);
      IF Sess.FIND THEN;
      //Sess.SETRANGE("User ID",USERID);
      Sess.SETRANGE("Session ID",SESSIONID);
      Sess.SETRANGE("Server Instance ID",SERVICEINSTANCEID);
      IF Sess.FIND THEN;
      Sess.GET(SERVICEINSTANCEID,SESSIONID);

      CREATE(WSHshel,TRUE,TRUE);
      ProjectSettings.GET(ProjectSettings.Setting::"Path to finsql",USERID);
      wsCommand := '"' + ProjectSettings.Value + '\finsql" ';
      wsCommand2 := 'command=compileobjects, ';


      // ProjectSettings.GET(ProjectSettings.Setting::"SQL-server",USERID);
      wsCommand2 += 'servername='+
        //ProjectSettings.Value+
        FindDatabaseServerName+
        ', database='+Sess."Database Name"+
        ', ntauthentication=1, ';

      dial.OPEN('Compiling...\'+
                '#1######################',Obj.Name);
      dial.UPDATE(1);


      //wsCommand2 += 'file=' + _filename +', ';
      wsCommand2 += 'filter="ID='+FORMAT(ID,0,2) + ';Type='+FORMAT(Type)+'"';
      tempvar := 0;
      tempbool := TRUE;
      //WSHshel.Run(wsCommand+wsCommand2,tempvar,tempbool);


      CLEAR(ProjectSettings);
      ProjectSettings.INIT;
      ProjectSettings.UserName := USERID;
      ProjectSettings.Setting := ProjectSettings.Setting::cmd1;
      ProjectSettings.Value := wsCommand;
      IF NOT ProjectSettings.INSERT THEN ProjectSettings.MODIFY;
      ProjectSettings.Setting := ProjectSettings.Setting::cmd2;
      ProjectSettings.Value := wsCommand2;
      IF NOT ProjectSettings.INSERT THEN ProjectSettings.MODIFY;

      ObjectManagement.ExecuteShellCommand(wsCommand,wsCommand2,'');

      dial.CLOSE;
    END;

    PROCEDURE ImportMerged@1100285522();
    VAR
      WSHfile@1100285519 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      FileName@1100285518 : Text[101];
      FilePath@1100285517 : Text[151];
      FullFileName@1100285516 : Text[251];
      Obj@1100285515 : Record 2000000001;
      dial@1100285514 : Dialog;
      ddate@1100285513 : Date;
      ttime@1100285512 : Time;
      Obj2@1100285511 : Record 2000000001;
      Folder1@1100285510 : Text;
      Folder2@1100285509 : Text;
      Folder3@1100285508 : Text;
      wsCommand@1100285507 : Text[1024];
      wsCommand2@1100285506 : Text[1024];
      tempvar@1100285505 : Integer;
      tempbool@1100285504 : Boolean;
      Sess@1100285503 : Record 2000000110;
      WSHshel@1100285502 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
      ProjectSettings@1100285500 : Record 77780;
    BEGIN
      dial.OPEN('import');
      ProjectSettings.GET(ProjectSettings.Setting::Folder1,USERID);
      Folder1 := ProjectSettings.Value;


      //IF NOT EXISTS(Folder1 + '\pag77777.txt') THEN EXIT;

      //Sess.SETRANGE("My Session",TRUE);
      //Sess.FIND;
      Sess.GET(SERVICEINSTANCEID,SESSIONID);

      CREATE(WSHshel,TRUE,TRUE);
      ProjectSettings.GET(ProjectSettings.Setting::"Path to finsql",USERID);
      wsCommand := '"' + ProjectSettings.Value + '\finsql" ';
      wsCommand += 'command=importobjects, ';

      // ProjectSettings.GET(ProjectSettings.Setting::"SQL-server",USERID);
      wsCommand += 'servername='+
        //ProjectSettings.Value+
        FindDatabaseServerName+
        ', database='+Sess."Database Name"+
        ', ntauthentication=1, ';

      wsCommand2 := 'file="' + Folder1 + '\pag77777in.txt", ';
      tempvar := 0;
      tempbool := TRUE;
      WSHshel.Run(wsCommand+wsCommand2,tempvar,tempbool);
      dial.CLOSE;

      IF ProjectSettings.GET(ProjectSettings.Setting::cmd2,USERID) THEN
        ProjectSettings.DELETE;
      IF ProjectSettings.GET(ProjectSettings.Setting::cmd1,USERID) THEN
        ProjectSettings.DELETE;
    END;

    PROCEDURE ImportNew3@1100285500();
    VAR
      WSHfile@1100285519 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      FileName@1100285518 : Text[101];
      FilePath@1100285517 : Text[151];
      FullFileName@1100285516 : Text[251];
      Obj@1100285515 : Record 2000000001;
      dial@1100285514 : Dialog;
      ddate@1100285513 : Date;
      ttime@1100285512 : Time;
      Obj2@1100285511 : Record 2000000001;
      Folder@1100285510 : Text;
      wsCommand@1100285507 : Text[1024];
      wsCommand2@1100285506 : Text[1024];
      tempvar@1100285505 : Integer;
      tempbool@1100285504 : Boolean;
      Sess@1100285503 : Record 2000000110;
      WSHshel@1100285502 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
      ProjectSettings@1100285500 : Record 77780;
    BEGIN
      IF STRPOS("Version List",'SE') <> 0 THEN EXIT;

      ProjectSettings.GET(ProjectSettings.Setting::Folder3,USERID);
      Folder := ProjectSettings.Value;




      FileName := COPYSTR(FORMAT(Type),1,3)+FORMAT(ID,0,'<Integer>')+'.txt';
      //IF ID < 100000 THEN
      //  FileName := COPYSTR(FORMAT(Type),1,3)+FORMAT(ID,0,'<Integer,6><Filler Character,0>')+'.txt';

      //IF NOT EXISTS(Folder + '\' + FileName) THEN EXIT;
      //IF EXISTS(Folder + '\' + FileName + '.imp') THEN EXIT;


      //Sess.SETRANGE("My Session",TRUE);
      //Sess.FIND;
      Sess.GET(SERVICEINSTANCEID,SESSIONID);

      CREATE(WSHshel,TRUE,TRUE);
      ProjectSettings.GET(ProjectSettings.Setting::"Path to finsql",USERID);
      wsCommand := '"' + ProjectSettings.Value + '\finsql" ';
      wsCommand += 'command=importobjects, ';

      // ProjectSettings.GET(ProjectSettings.Setting::"SQL-server",USERID);
      wsCommand += 'servername='+
        //ProjectSettings.Value+
        FindDatabaseServerName+
        ', database='+Sess."Database Name"+
        ', ntauthentication=1, ';

      wsCommand2 := 'file="' + Folder + '\' + FileName + '" ';
      tempvar := 1;
      tempbool := TRUE;
      WSHshel.Run(wsCommand+wsCommand2,tempvar,tempbool);

      //FILE.RENAME(Folder + '\' + FileName , Folder + '\' + FileName + '.imp');
    END;

    PROCEDURE ExportObjects4@1100285505();
    VAR
      ProjectSettings@1100525002 : Record 77780;
      WSHfile@1100525000 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      FileName@1100525001 : Text[101];
      FilePath@1100525004 : Text[151];
      FullFileName@1100525003 : Text[251];
      Obj@1100285000 : Record 2000000001;
      dial@1100285001 : Dialog;
      ddate@1100290000 : Date;
      ttime@1100290001 : Time;
      Obj2@1100290002 : Record 2000000001;
      wsCommand@1100285506 : Text[1024];
      wsCommand2@1100285505 : Text[1024];
      tempvar@1100285504 : Integer;
      tempbool@1100285503 : Boolean;
      Sess@1100285502 : Record 2000000110;
      modif@1100285501 : Boolean;
      WSHshel@1100285500 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
      filemgnt@1100285507 : Codeunit 419;
      LicensePermission@1100285508 : Record 2000000043;
      objFilterStr@1100285509 : Text;
    BEGIN
      //150424
      CREATE(WSHfile,TRUE,TRUE);

      ProjectSettings.GET(1,USERID);
      FilePath := ProjectSettings.Value;
      IF FilePath = '' THEN
        ERROR(Text001);


      FullFileName := filemgnt.SaveFileDialog('','','Text File *.txt| *.txt');
      IF FullFileName = '' THEN
        EXIT;
      FilePath := filemgnt.GetDirectoryName(FullFileName);

      ProjectSettings.GET(ProjectSettings.Setting::"ID filter product",USERID);
      Obj.SETRANGE(Type,Obj.Type::Table,Obj.Type::Query);
      Obj.SETFILTER(ID,ProjectSettings.Value);

      objFilterStr := Obj.GETFILTER(ID);
      IF Obj.FINDSET(FALSE) THEN
      REPEAT
        LicensePermission.GET(Obj.Type,Obj.ID);
        IF LicensePermission."Read Permission" = LicensePermission."Read Permission"::" " THEN
          objFilterStr += '&<>' + FORMAT(Obj.ID,0,2);
      UNTIL Obj.NEXT=0;

      Obj.SETFILTER(ID,objFilterStr);


      CLEAR(WSHfile);

      IF NOT CONFIRM(Text020,TRUE,Obj.COUNT,FilePath) THEN
        ERROR('');

      Sess.GET(SERVICEINSTANCEID,SESSIONID);

      CREATE(WSHshel,TRUE,TRUE);

      ProjectSettings.GET(ProjectSettings.Setting::"Path to finsql",USERID);
      wsCommand := '"' + ProjectSettings.Value + '\finsql" ';
      wsCommand += 'command=exportobjects, ';

      // ProjectSettings.GET(ProjectSettings.Setting::"SQL-server",USERID);
      wsCommand += 'servername='+
        //ProjectSettings.Value+
        FindDatabaseServerName+
        ', database='+Sess."Database Name"+
        ', ntauthentication=1, ';

      dial.OPEN('Exporting...\'+
                '#1######################',FileName);


      dial.UPDATE(1);
      IF EXISTS(FullFileName) THEN
        ERASE(FullFileName);

      wsCommand2 := 'file="' + FullFileName + '", ';
      wsCommand2 += 'filter=ID='+ Obj.GETFILTER(ID) + ';Type=' + Obj.GETFILTER(Type);
      tempvar := 0;
      tempbool := TRUE;
      WSHshel.Run(wsCommand+wsCommand2,tempvar,tempbool);


      dial.CLOSE;
    END;

    LOCAL PROCEDURE FindDatabaseServerName@1100285501() DatabaseServerName : Text[1024];
    VAR
      ActiveSession@1100285500 : Record 2000000110;
      ServerFile@1100285501 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.File";
      XMLDoc@1100285502 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      XMLNode@1100285503 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DatabaseServer@1100285504 : Text;
      DatabaseInstance@1100285505 : Text;
    BEGIN
      ActiveSession.SETRANGE("Session ID",SESSIONID);
      ActiveSession.FINDFIRST;

      XMLDoc := XMLDoc.XmlDocument;
      IF ServerFile.Exists(APPLICATIONPATH + 'Instances\' + ActiveSession."Server Instance Name" + '\CustomSettings.config') THEN
        XMLDoc.Load(APPLICATIONPATH + 'Instances\' + ActiveSession."Server Instance Name" + '\CustomSettings.config')
      ELSE
        XMLDoc.Load(APPLICATIONPATH + 'CustomSettings.config');

      XMLNode := XMLDoc.SelectSingleNode('//appSettings/add[@key=''DatabaseServer'']');
      IF NOT ISNULL(XMLNode) THEN
        DatabaseServer := XMLNode.Attributes.Item(1).InnerText;

      XMLNode := XMLDoc.SelectSingleNode('//appSettings/add[@key=''DatabaseInstance'']');
      IF NOT ISNULL(XMLNode) THEN
        DatabaseInstance := XMLNode.Attributes.Item(1).InnerText;

      CLEAR(XMLDoc);

      IF DatabaseInstance = '' THEN
        DatabaseServerName := DatabaseServer
      ELSE
        DatabaseServerName := DatabaseServer + '\' + DatabaseInstance;
    END;

    BEGIN
    {
      FIXME:


      TODO:



      WISH:
      - create emptyobjects
        -option to base tables on existing data structure

      140410 ITERO.DL rename ObjectType to ObjType, pre NAV2013R2
    }
    END.
  }
}

