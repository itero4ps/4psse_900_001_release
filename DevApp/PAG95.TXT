OBJECT Page 95 Sales Quote Subform
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00.00.45480,4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    MultipleNewLines=Yes;
    LinksAllowed=No;
    SourceTable=Table37;
    DelayedInsert=Yes;
    SourceTableView=WHERE(Document Type=FILTER(Quote));
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
               END;

    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                       CLEAR(DocumentTotals);

                       //**4PS.sn
                       DescriptionIndent := 0;
                       DescriptionOnFormat;
                       //**4PS.en
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                  InitType;
                  CLEAR(ShortcutDimCode);
                  //**4PS.sn
                  InitRecord;
                  ShowShortcutDimCode(ShortcutDimCode);
                  //**4PS.en
                END;

    OnDeleteRecord=VAR
                     ReserveSalesLine@1000 : Codeunit 99000832;
                   BEGIN
                     IF (Quantity <> 0) AND ItemExists("No.") THEN BEGIN
                       COMMIT;
                       IF NOT ReserveSalesLine.DeleteLineConfirm(Rec) THEN
                         EXIT(FALSE);
                       ReserveSalesLine.DeleteLine(Rec);
                     END;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           IF SalesHeader.GET("Document Type","Document No.") THEN;

                           //**4PS.so C023496
                           //DocumentTotals.SalesUpdateTotalsControls(Rec,TotalSalesHeader,TotalSalesLine,RefreshMessageEnabled,
                           // TotalAmountStyle,RefreshMessageText,InvDiscAmountEditable,CurrPage.EDITABLE,VATAmount);
                           //**4PS.eo

                           TypeChosen := HasTypeToFillMandatotyFields;
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1901743104;2 ;ActionGroup;
                      CaptionML=ENU=Item Availability by;
                      Image=ItemAvailability }
      { 5       ;3   ;Action    ;
                      CaptionML=ENU=Event;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByEvent)
                               END;
                                }
      { 1907981204;3 ;Action    ;
                      CaptionML=ENU=Period;
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByPeriod)
                               END;
                                }
      { 1903587104;3 ;Action    ;
                      CaptionML=ENU=Variant;
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByVariant)
                               END;
                                }
      { 1903134404;3 ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=ENU=Location;
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByLocation)
                               END;
                                }
      { 26      ;3   ;Action    ;
                      CaptionML=ENU=BOM Level;
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByBOM)
                               END;
                                }
      { 1100528300;2 ;Action    ;
                      CaptionML=ENU=I&tem Inventory by Company;
                      OnAction=BEGIN
                                 ShowItemInventoryByCompany;
                               END;
                                }
      { 1901092104;2 ;Action    ;
                      CaptionML=ENU=Select Item Substitution;
                      Image=SelectItemSubstitution;
                      OnAction=BEGIN
                                 ShowItemSub;
                               END;
                                }
      { 1907075804;2 ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1902027204;2 ;Action    ;
                      CaptionML=ENU=Co&mments;
                      Image=ViewComments;
                      OnAction=BEGIN
                                 ShowLineComments;
                               END;
                                }
      { 1907184504;2 ;Action    ;
                      AccessByPermission=TableData 5800=R;
                      CaptionML=ENU=Item Charge &Assignment;
                      Image=ItemCosts;
                      OnAction=BEGIN
                                 ItemChargeAssgnt;
                               END;
                                }
      { 1905987604;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Item &Tracking Lines;
                      Image=ItemTrackingLines;
                      OnAction=VAR
                                 Item@1001 : Record 27;
                               BEGIN
                                 Item.GET("No.");
                                 Item.TESTFIELD("Assembly Policy",Item."Assembly Policy"::"Assemble-to-Stock");
                                 TESTFIELD("Qty. to Asm. to Order (Base)",0);
                                 OpenItemTrackingLines;
                               END;
                                }
      { 1907335004;2 ;Action    ;
                      CaptionML=ENU=Text Block;
                      OnAction=BEGIN
                                 //**4PS
                                 EditText;
                               END;
                                }
      { 1100525007;2 ;Action    ;
                      CaptionML=ENU=Sales Recipe;
                      OnAction=BEGIN
                                 EditSalesRecipe;
                               END;
                                }
      { 15      ;2   ;ActionGroup;
                      CaptionML=ENU=Assemble to Order;
                      ActionContainerType=NewDocumentItems;
                      Image=AssemblyBOM }
      { 3       ;3   ;Action    ;
                      AccessByPermission=TableData 90=R;
                      CaptionML=ENU=Assemble-to-Order Lines;
                      OnAction=BEGIN
                                 ShowAsmToOrderLines;
                               END;
                                }
      { 9       ;3   ;Action    ;
                      AccessByPermission=TableData 90=R;
                      Ellipsis=Yes;
                      CaptionML=ENU=Roll Up &Price;
                      OnAction=BEGIN
                                 RollupAsmPrice;
                               END;
                                }
      { 7       ;3   ;Action    ;
                      AccessByPermission=TableData 90=R;
                      Ellipsis=Yes;
                      CaptionML=ENU=Roll Up &Cost;
                      OnAction=BEGIN
                                 RollUpAsmCost;
                               END;
                                }
      { 25      ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 23      ;2   ;Action    ;
                      AccessByPermission=TableData 7002=R;
                      Ellipsis=Yes;
                      CaptionML=ENU=Get &Price;
                      Image=Price;
                      OnAction=BEGIN
                                 ShowPrices
                               END;
                                }
      { 21      ;2   ;Action    ;
                      AccessByPermission=TableData 7004=R;
                      Ellipsis=Yes;
                      CaptionML=ENU=Get Li&ne Discount;
                      Image=LineDiscount;
                      OnAction=BEGIN
                                 ShowLineDisc
                               END;
                                }
      { 19      ;2   ;Action    ;
                      AccessByPermission=TableData 90=R;
                      CaptionML=ENU=E&xplode BOM;
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeBOM;
                               END;
                                }
      { 17      ;2   ;Action    ;
                      AccessByPermission=TableData 279=R;
                      CaptionML=ENU=Insert &Ext. Texts;
                      Image=Text;
                      OnAction=BEGIN
                                 InsertExtendedText(TRUE);
                               END;
                                }
      { 13      ;2   ;Action    ;
                      AccessByPermission=TableData 5718=R;
                      CaptionML=ENU=Nonstoc&k Items;
                      Image=NonStockItem;
                      OnAction=BEGIN
                                 ShowNonstockItems;
                                 ShowPrices
                               END;
                                }
      { 1210190005;2 ;Action    ;
                      CaptionML=ENU=Modify BOM Discount;
                      OnAction=BEGIN
                                 UpgradeBOMDiscount;
                               END;
                                }
      { 1210190003;2 ;Action    ;
                      CaptionML=ENU=Modify BOM Amount;
                      OnAction=BEGIN
                                 UpgradeBOMAmount;
                               END;
                                }
      { 1210190001;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Remove Zero-Lines BOM;
                      OnAction=BEGIN
                                 RemoveZeroLinesBOM;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                GroupType=Repeater }

    { 1100525006;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1210190028;2;Field  ;
                SourceExpr="Job No." }

    { 1210190002;2;Field  ;
                SourceExpr=Element;
                Visible=FALSE }

    { 1210190004;2;Field  ;
                SourceExpr="Extension Contract";
                Visible=FALSE }

    { 1210190006;2;Field  ;
                SourceExpr="Service Contract No.";
                Visible=FALSE }

    { 1210190010;2;Field  ;
                SourceExpr="Service Order No." }

    { 1210190014;2;Field  ;
                SourceExpr="Service Location No.";
                Visible=FALSE }

    { 1100485002;2;Field  ;
                SourceExpr="Additional Cost (Service)";
                Visible=FALSE }

    { 1210190016;2;Field  ;
                SourceExpr="Employee No." }

    { 1210190018;2;Field  ;
                SourceExpr="Item No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             ItemNoOnAfterValidate;  //db, 26-10-12
                           END;
                            }

    { 1210190020;2;Field  ;
                SourceExpr=Manufacturer;
                Visible=FALSE }

    { 1210190024;2;Field  ;
                SourceExpr="Basic Item";
                Visible=FALSE;
                OnValidate=BEGIN
                             BasicItemOnAfterValidate;  //db, 26-10-12
                           END;
                            }

    { 1210190022;2;Field  ;
                SourceExpr="Vendor (Trade Item)";
                Visible=FALSE }

    { 1210190026;2;Field  ;
                SourceExpr="Trade Item";
                Visible=FALSE;
                OnValidate=BEGIN
                             TradeItemOnAfterValidate;  //db, 26-10-12
                           END;
                            }

    { 20  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                           END;
                            }

    { 22  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code" }

    { 1100485004;2;Field  ;
                SourceExpr="Cost Component" }

    { 2   ;2   ;Field     ;
                SourceExpr=Type;
                OnValidate=BEGIN
                             TypeOnAfterValidate;
                             NoOnAfterValidate;
                             TypeChosen := HasTypeToFillMandatotyFields;

                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 4   ;2   ;Field     ;
                SourceExpr="No.";
                OnValidate=BEGIN
                             ShowShortcutDimCode(ShortcutDimCode);
                             NoOnAfterValidate;

                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;
                           END;

                ShowMandatory=TypeChosen }

    { 6   ;2   ;Field     ;
                SourceExpr=Description }

    { 1100485000;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 1210190000;2;Field  ;
                SourceExpr="Text Block";
                Visible=FALSE }

    { 1210190036;2;Field  ;
                CaptionML=ENU=Comments;
                SourceExpr=LineCommentPresent;
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                SourceExpr="Cross-Reference No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             CrossReferenceNoOnAfterValidat;
                             NoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           CrossReferenceNoLookUp;
                           InsertExtendedText(FALSE);
                           NoOnAfterValidate;
                         END;
                          }

    { 76  ;2   ;Field     ;
                SourceExpr="Work Type Code";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             VariantCodeOnAfterValidate
                           END;
                            }

    { 42  ;2   ;Field     ;
                SourceExpr="Blanket Order No.";
                Visible=FALSE }

    { 46  ;2   ;Field     ;
                SourceExpr="Blanket Order Line No.";
                Visible=FALSE }

    { 24  ;2   ;Field     ;
                SourceExpr="Location Code";
                OnValidate=BEGIN
                             LocationCodeOnAfterValidate;
                           END;
                            }

    { 8   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                             RedistributeTotalsOnAfterValidate;
                           END;

                ShowMandatory=TypeChosen }

    { 11  ;2   ;Field     ;
                SourceExpr="Qty. to Assemble to Order";
                Visible=FALSE;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             CurrPage.UPDATE(TRUE);
                           END;

                OnDrillDown=BEGIN
                              ShowAsmToOrderLines;
                            END;
                             }

    { 1100525002;2;Field  ;
                SourceExpr="Original Quantity";
                Visible=FALSE;
                OnValidate=BEGIN
                             OriginalQuantityOnAfterValidat;
                           END;
                            }

    { 1100525004;2;Field  ;
                SourceExpr="Part of Line";
                Visible=FALSE }

    { 56  ;2   ;Field     ;
                SourceExpr="Appl.-to Item Entry";
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code";
                OnValidate=BEGIN
                             UnitofMeasureCodeOnAfterValida;
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 10  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Unit Price";
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ShowMandatory=TypeChosen }

    { 50  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Amount";
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 1100525000;2;Field  ;
                CaptionML=ENU=Line Price;
                SourceExpr=LinePrice;
                Visible=FALSE;
                Editable=FALSE }

    { 16  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Discount %";
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 64  ;2   ;Field     ;
                SourceExpr="Line Discount Amount";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 62  ;2   ;Field     ;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE }

    { 54  ;2   ;Field     ;
                SourceExpr="Allow Item Charge Assignment";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr="Substitution Available";
                Visible=FALSE }

    { 36  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Qty. to Assign";
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdateForm(FALSE);
                            END;
                             }

    { 48  ;2   ;Field     ;
                SourceExpr=Nonstock;
                Visible=FALSE }

    { 58  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Qty. Assigned";
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdateForm(FALSE);
                            END;
                             }

    { 1210190032;2;Field  ;
                SourceExpr="Requested Delivery Date";
                Visible=FALSE }

    { 1210190034;2;Field  ;
                SourceExpr="Promised Delivery Date";
                Visible=FALSE }

    { 1210190030;2;Field  ;
                SourceExpr="Planned Shipment Date";
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE }

    { 38  ;2   ;Field     ;
                CaptionML=ENU=Sales Price Exists;
                SourceExpr=PriceExists;
                Visible=FALSE;
                Editable=FALSE }

    { 60  ;2   ;Field     ;
                CaptionML=ENU=Sales Line Disc. Exists;
                SourceExpr=LineDiscExists;
                Visible=FALSE;
                Editable=FALSE }

    { 300 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(3),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 302 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(4),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 304 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(5),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 306 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(6),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 308 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(7),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 310 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(8),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 1100525001;2;Field  ;
                SourceExpr="Recipe Group";
                Visible=FALSE }

    { 1100525003;2;Field  ;
                SourceExpr=Recipe;
                Visible=FALSE;
                OnValidate=BEGIN
                             //**4PS  DP00481
                             IF (Recipe <> '') THEN
                               InsertSalesRecipeLines(FALSE);

                             IF (Recipe <> '') THEN
                               InsertExtendedText(FALSE);
                           END;
                            }

    { 53  ;1   ;Group     ;
                Visible=FALSE;
                GroupType=Group }

    { 49  ;2   ;Group     ;
                GroupType=Group }

    { 47  ;3   ;Field     ;
                Name=Invoice Discount Amount;
                CaptionML=ENU=Invoice Discount Amount;
                SourceExpr=TotalSalesLine."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr=TotalSalesHeader."Currency Code";
                Editable=InvDiscAmountEditable;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled;
                OnValidate=VAR
                             SalesHeader@1000 : Record 36;
                           BEGIN
                             SalesHeader.GET("Document Type","Document No.");
                             SalesCalcDiscByType.ApplyInvDiscBasedOnAmt(TotalSalesLine."Inv. Discount Amount",SalesHeader);
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 45  ;3   ;Field     ;
                Name=Invoice Disc. Pct.;
                CaptionML=ENU=Invoice Discount %;
                DecimalPlaces=0:2;
                SourceExpr=SalesCalcDiscByType.GetCustInvoiceDiscountPct(Rec);
                Visible=TRUE;
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 35  ;2   ;Group     ;
                GroupType=Group }

    { 33  ;3   ;Field     ;
                Name=Total Amount Excl. VAT;
                DrillDown=No;
                CaptionML=ENU=Total Amount Excl. VAT;
                SourceExpr=TotalSalesLine.Amount;
                AutoFormatType=1;
                AutoFormatExpr=TotalSalesHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalExclVATCaption(SalesHeader."Currency Code");
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 31  ;3   ;Field     ;
                Name=Total VAT Amount;
                CaptionML=ENU=Total VAT;
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr=TotalSalesHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalVATCaption(SalesHeader."Currency Code");
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 29  ;3   ;Field     ;
                Name=Total Amount Incl. VAT;
                CaptionML=ENU=Total Amount Incl. VAT;
                SourceExpr=TotalSalesLine."Amount Including VAT";
                AutoFormatType=1;
                AutoFormatExpr=TotalSalesHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalInclVATCaption(SalesHeader."Currency Code");
                Editable=FALSE;
                StyleExpr=TotalAmountStyle }

    { 27  ;3   ;Field     ;
                Name=RefreshTotals;
                DrillDown=Yes;
                SourceExpr=RefreshMessageText;
                Enabled=RefreshMessageEnabled;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DocumentTotals.SalesRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalSalesLine);
                              DocumentTotals.SalesUpdateTotalsControls(Rec,TotalSalesHeader,TotalSalesLine,RefreshMessageEnabled,
                                TotalAmountStyle,RefreshMessageText,InvDiscAmountEditable,CurrPage.EDITABLE,VATAmount);
                            END;

                ShowCaption=No }

  }
  CODE
  {
    VAR
      TotalSalesHeader@1017 : Record 36;
      TotalSalesLine@1016 : Record 37;
      SalesHeader@1000 : Record 36;
      TransferExtendedText@1002 : Codeunit 378;
      SalesPriceCalcMgt@1004 : Codeunit 7000;
      ItemAvailFormsMgt@1001 : Codeunit 353;
      SalesCalcDiscByType@1015 : Codeunit 56;
      DocumentTotals@1014 : Codeunit 57;
      VATAmount@1013 : Decimal;
      ShortcutDimCode@1003 : ARRAY [8] OF Code[20];
      Text11012001@1210190001 : TextConst 'ENU=Before editing text enter the line first';
      Text11012002@1210190000 : TextConst 'ENU=Remove Zero Lines BOM ?';
      GeneratedtTxtConst1@1100000998 : TextConst 'ENU=You are not authorized for Department Code %1.';
      ChangedAmountBOM@1100525000 : Decimal;
      ItemPanelVisible@19014573 : Boolean INDATASET;
      InvDiscAmountEditable@1010 : Boolean;
      TotalAmountStyle@1009 : Text;
      RefreshMessageEnabled@1008 : Boolean;
      RefreshMessageText@1007 : Text;
      TypeChosen@1022 : Boolean;
      DescriptionIndent@19057867 : Integer INDATASET;
      "Original QuantityEDITABLE"@1210190002 : Boolean INDATASET;
      DPA_IsHardFilter@1100000999 : Boolean;

    PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Disc. (Yes/No)",Rec);
    END;

    LOCAL PROCEDURE CalcInvDisc@5();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Calc. Discount",Rec);
    END;

    LOCAL PROCEDURE ExplodeBOM@3();
    VAR
      SalesLine@1100525000 : Record 37;
    BEGIN
      //CODEUNIT.RUN(CODEUNIT::"Sales-Explode BOM",Rec); //**4PS.o
      //**4PS.sn
      CurrPage.SETSELECTIONFILTER(SalesLine);
      IF SalesLine.FINDSET THEN
        REPEAT
          ChangedAmountBOM := SalesLine."Line Amount";
          CODEUNIT.RUN(CODEUNIT::"Sales-Explode BOM",SalesLine);
          UpgradeBOMAmountAfter(SalesLine);
          COMMIT;
        UNTIL SalesLine.NEXT = 0;
      //**4PS.en
    END;

    LOCAL PROCEDURE InsertExtendedText@4(Unconditionally@1000 : Boolean);
    BEGIN
      IF TransferExtendedText.SalesCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        COMMIT;
        TransferExtendedText.InsertSalesExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        UpdateForm(TRUE);
    END;

    PROCEDURE InsertSalesRecipeLines@1100525004(Unconditionally@1000 : Boolean);
    BEGIN
      IF (Recipe <> xRec.Recipe) AND (Recipe <> '') THEN BEGIN
        CurrPage.SAVERECORD;
        COMMIT;
        CopyRecipe;
        UpdateForm(TRUE);
      END;
    END;

    LOCAL PROCEDURE ShowItemSub@8();
    BEGIN
      ShowItemSub;
    END;

    LOCAL PROCEDURE ShowNonstockItems@10();
    BEGIN
      ShowNonstock;
    END;

    LOCAL PROCEDURE ItemChargeAssgnt@5800();
    BEGIN
      ShowItemChargeAssgnt;
    END;

    PROCEDURE UpdateForm@12(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    LOCAL PROCEDURE ShowPrices@15();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLinePrice(SalesHeader,Rec);
    END;

    LOCAL PROCEDURE ShowLineDisc@16();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLineLineDisc(SalesHeader,Rec);
    END;

    LOCAL PROCEDURE TypeOnAfterValidate@19069045();
    BEGIN
      ItemPanelVisible := Type = Type::Item;
      "Original QuantityEDITABLE" := ((Type = Type::" ") AND ("BOM Item No." <> '')); //**4PS.n
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      InsertExtendedText(FALSE);
      IF (Type = Type::"Charge (Item)") AND ("No." <> xRec."No.") AND
         (xRec."No." <> '')
      THEN
        CurrPage.SAVERECORD;

      SaveAndAutoAsmToOrder;
    END;

    LOCAL PROCEDURE LocationCodeOnAfterValidate@2();
    BEGIN
      SaveAndAutoAsmToOrder;
    END;

    LOCAL PROCEDURE VariantCodeOnAfterValidate@9();
    BEGIN
      SaveAndAutoAsmToOrder;
    END;

    LOCAL PROCEDURE CrossReferenceNoOnAfterValidat@19048248();
    BEGIN
      InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      IF Reserve = Reserve::Always THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
      END;

      IF (Type = Type::Item) AND
         (Quantity <> xRec.Quantity)
      THEN
        CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE UnitofMeasureCodeOnAfterValida@19057939();
    BEGIN
      IF Reserve = Reserve::Always THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
      END;
    END;

    LOCAL PROCEDURE SaveAndAutoAsmToOrder@13();
    BEGIN
      IF (Type = Type::Item) AND IsAsmToOrderRequired THEN BEGIN
        CurrPage.SAVERECORD;
        AutoAsmToOrder;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE RedistributeTotalsOnAfterValidate@7();
    BEGIN
      CurrPage.SAVERECORD;

      SalesHeader.GET("Document Type","Document No.");
      IF DocumentTotals.SalesCheckNumberOfLinesLimit(SalesHeader) THEN
        DocumentTotals.SalesRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalSalesLine);
      CurrPage.UPDATE;
    END;

    PROCEDURE EditText@1210190001();
    VAR
      TextFrm@11012001 : Page 11012120;
    BEGIN
      //**4PS
      IF "Line No." = 0 THEN
        ERROR(Text11012001);

      TextFrm.SetSelection(DATABASE::"Sales Line","Document No.",
        '','','','','',"Line No.","Document Type");

      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    PROCEDURE UpgradeBOMDiscount@1100525000();
    VAR
      SalesLine@1100525000 : Record 37;
      ProcessBOMDiscount@1100525001 : Report 11012549;
    BEGIN
      //**4PS
      SalesLine.COPY(Rec);
      SalesLine.SETRECFILTER;
      ProcessBOMDiscount.SetSelection(DATABASE::"Sales Line");
      ProcessBOMDiscount.SetSelectionSales(SalesLine);
      ProcessBOMDiscount.SETTABLEVIEW(SalesLine);
      ProcessBOMDiscount.RUNMODAL;
      CurrPage.UPDATE;
    END;

    PROCEDURE RemoveZeroLinesBOM@1100525001();
    VAR
      SalesLine@1100525000 : Record 37;
      RemoveZeroLinesBOM@1100525002 : Report 11012358;
    BEGIN
      //26253.sn
      IF NOT CONFIRM(Text11012002,FALSE) THEN
        EXIT;

      CurrPage.SETSELECTIONFILTER(SalesLine);
      IF SalesLine.FINDSET THEN BEGIN
        REPEAT
          RemoveZeroLinesBOM.SetSelection(DATABASE::"Sales Line");
          RemoveZeroLinesBOM.SetSelectionSales(SalesLine);
          RemoveZeroLinesBOM.SETTABLEVIEW(SalesLine);
          RemoveZeroLinesBOM.USEREQUESTPAGE(FALSE);
          RemoveZeroLinesBOM.RUNMODAL;
          COMMIT;
          CLEAR(RemoveZeroLinesBOM);
        UNTIL SalesLine.NEXT = 0;
      END;
      //26253.en
    END;

    PROCEDURE UpgradeBOMAmount@1100525002();
    VAR
      SalesLine@1100525000 : Record 37;
      ProcessBOMAmount@1100525001 : Report 11012359;
    BEGIN
      //**4PS
      SalesLine.COPY(Rec);
      SalesLine.SETRECFILTER;
      ProcessBOMAmount.SetSelection(DATABASE::"Sales Line");
      ProcessBOMAmount.SetSelectionSales(SalesLine);
      ProcessBOMAmount.SETTABLEVIEW(SalesLine);
      ProcessBOMAmount.RUNMODAL;
      CurrPage.UPDATE;
    END;

    PROCEDURE UpgradeBOMAmountAfter@1100525003(VAR SalesLine2@1100525002 : Record 37);
    VAR
      SalesLine@1100525000 : Record 37;
      ProcessBOMAmount@1100525001 : Report 11012359;
    BEGIN
      //**4PS
      SalesLine.COPY(SalesLine2);
      SalesLine.SETRECFILTER;
      ProcessBOMAmount.SetSelection(DATABASE::"Sales Line");
      ProcessBOMAmount.SetSelectionSalesAmount(SalesLine,ChangedAmountBOM);
      ProcessBOMAmount.SETTABLEVIEW(SalesLine);
      ProcessBOMAmount.USEREQUESTPAGE(FALSE);
      ProcessBOMAmount.RUNMODAL;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ItemNoOnAfterValidate@19061248();
    BEGIN
      //**4PS
      CALCFIELDS("Cost Type");
      IF ("Cost Type" = "Cost Type"::Material) AND ("No." <> '') THEN
        InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE BasicItemOnAfterValidate@19054956();
    BEGIN
      //**4PS
      CALCFIELDS("Cost Type");
      IF ("Cost Type" = "Cost Type"::Material) AND ("No." <> '') THEN
        InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE TradeItemOnAfterValidate@19075338();
    BEGIN
      //**4PS
      CALCFIELDS("Cost Type");
      IF ("Cost Type" = "Cost Type"::Material) AND ("No." <> '') THEN
        InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE OriginalQuantityOnAfterValidat@19021056();
    BEGIN
      //**4PS
      IF (xRec."Original Quantity" <> "Original Quantity") AND (xRec."Original Quantity" <> 0) THEN BEGIN
        ChangeQuantityExplodedLines("Original Quantity" / xRec."Original Quantity");
        CurrPage.UPDATE;
      END;
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      //**4PS
      IF "Level BOM" < 10 THEN
        DescriptionIndent := "Level BOM";
    END;

    PROCEDURE ShowItemInventoryByCompany@1100528300();
    VAR
      AdviceOrderMgt@1100528300 : Codeunit 11012041;
    BEGIN
      AdviceOrderMgt.RunItemInventoryByCompany("Item No.");
    END;

    BEGIN
    {
      4PS, 18-05-2015, C023496, Group totals set to invisible
    }
    END.
  }
}

