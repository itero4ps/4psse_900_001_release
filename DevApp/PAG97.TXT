OBJECT Page 97 Purchase Quote Subform
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00.00.45480,4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    MultipleNewLines=Yes;
    LinksAllowed=No;
    SourceTable=Table39;
    DelayedInsert=Yes;
    SourceTableView=WHERE(Document Type=FILTER(Quote));
    PageType=ListPart;
    AutoSplitKey=Yes;
    RefreshOnActivate=Yes;
    OnInit=BEGIN
             //**4PS.sn
             "Vendor (Trade Item)Visible" := TRUE;
             ManufacturerVisible := TRUE;
             "Trade ItemVisible" := TRUE;
             "Basic ItemVisible" := TRUE;
             "Price AgreementEditable" := TRUE;
             QuantityEditable := TRUE; //C015688
             //**4PS.en
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 //**4PS.sn
                 PurchSetup.GET;

                 IF NOT ItemSetup.READPERMISSION THEN BEGIN
                   "Basic ItemVisible" := (FALSE);
                   "Trade ItemVisible" := (FALSE);
                   ManufacturerVisible := (FALSE);
                   "Vendor (Trade Item)Visible" := (FALSE);
                 END;
                 //**4PS.en
               END;

    OnAfterGetRecord=BEGIN
                       CALCFIELDS("Balance Excl. VAT", "Balance Incl. VAT");  //**4PS.n
                       ShowShortcutDimCode(ShortcutDimCode);
                       CLEAR(DocumentTotals);

                       //**4PS.sn
                       GetItemSpecifications;
                       IF gFromReference THEN BEGIN
                         gFromReference := FALSE;
                         SETRANGE("Line No.");
                       END;

                       PurchaseLineExtension.GetPurchLineExtension("Document Type", "Document No.", "Line No.");
                       //**4PS.en
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                  InitType;
                  CLEAR(ShortcutDimCode);

                  //**4PS.sn
                  InitRecord;
                  GetVendorPreferenceAccountNo();
                  ShowShortcutDimCode(ShortcutDimCode);
                  PurchaseLineExtension.GetPurchLineExtension("Document Type", "Document No.", "Line No.");
                  //**4PS.en
                END;

    OnDeleteRecord=VAR
                     ReservePurchLine@1000 : Codeunit 99000834;
                   BEGIN
                     IF (Quantity <> 0) AND ItemExists("No.") THEN BEGIN
                       COMMIT;
                       IF NOT ReservePurchLine.DeleteLineConfirm(Rec) THEN
                         EXIT(FALSE);
                       ReservePurchLine.DeleteLine(Rec);
                     END;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           IF PurchHeader.GET("Document Type","Document No.") THEN;

                           //**4PS.so C023496
                           //DocumentTotals.PurchaseUpdateTotalsControls(Rec,TotalPurchaseHeader,TotalPurchaseLine,RefreshMessageEnabled,
                           //  TotalAmountStyle,RefreshMessageText,InvDiscAmountEditable,VATAmount);
                           //**4PS.eo

                           //C015688.sn
                           GetHeader;
                           QuantityEditable := (NOT PurchHeader."Amounts only");
                           //C015688.en
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 1901991404;2 ;Action    ;
                      AccessByPermission=TableData 90=R;
                      CaptionML=ENU=E&xplode BOM;
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeBOM;
                               END;
                                }
      { 1900295904;2 ;Action    ;
                      AccessByPermission=TableData 279=R;
                      CaptionML=ENU=Insert &Ext. Texts;
                      Image=Text;
                      OnAction=BEGIN
                                 InsertExtendedText(TRUE);
                               END;
                                }
      { 1210190007;2 ;Action    ;
                      CaptionML=ENU=Calculate &Invoice Discount/Charge;
                      Image=CalculateBalanceAccount;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                               END;
                                }
      { 1905527604;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy Budget Lines (by Purchase Action);
                      Image=CopyDocument;
                      OnAction=BEGIN
                                 //**4PS
                                 //This functionality was copied from page #49. Unsupported part was commented. Please check it.
                                 {CurrPage.PurchLines.PAGE.}
                                 CopyBudgetLines;
                               END;
                                }
      { 1100528800;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Copy Budget Lines;
                      Image=Copy;
                      OnAction=VAR
                                 PurchaseHeader@1210190000 : Record 38;
                               BEGIN
                                 //**4PS
                                 IF ("Document No." <> '') THEN BEGIN
                                   PurchaseHeader.GET("Document Type", "Document No.");
                                   SelectBudgetLines(PurchaseHeader);
                                 END;
                               END;
                                }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1903134404;2 ;ActionGroup;
                      CaptionML=ENU=Item Availability by;
                      Image=ItemAvailability }
      { 5       ;3   ;Action    ;
                      CaptionML=ENU=Event;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByEvent)
                               END;
                                }
      { 1900609704;3 ;Action    ;
                      CaptionML=ENU=Period;
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByPeriod)
                               END;
                                }
      { 1904945204;3 ;Action    ;
                      CaptionML=ENU=Variant;
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByVariant)
                               END;
                                }
      { 1902740304;3 ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=ENU=Location;
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByLocation)
                               END;
                                }
      { 3       ;3   ;Action    ;
                      CaptionML=ENU=BOM Level;
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByBOM)
                               END;
                                }
      { 1901033504;2 ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1901288104;2 ;Action    ;
                      CaptionML=ENU=Co&mments;
                      Image=ViewComments;
                      OnAction=BEGIN
                                 ShowLineComments;
                               END;
                                }
      { 1907184504;2 ;Action    ;
                      AccessByPermission=TableData 5800=R;
                      CaptionML=ENU=Item Charge &Assignment;
                      Image=ItemCosts;
                      OnAction=BEGIN
                                 ItemChargeAssgnt;
                               END;
                                }
      { 1905987604;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Item &Tracking Lines;
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
      { 1907424704;2 ;Action    ;
                      CaptionML=ENU=Purchase Route References;
                      Image=ViewCheck;
                      OnAction=BEGIN
                                 //**4PS
                                 //This functionality was copied from page #49. Unsupported part was commented. Please check it.
                                 {CurrPage.PurchLines.PAGE.}
                                 ShowPurchRouteRef;
                               END;
                                }
      { 1907335004;2 ;Action    ;
                      CaptionML=ENU=Text Block;
                      OnAction=BEGIN
                                 //**4PS
                                 //This functionality was copied from page #49. Unsupported part was commented. Please check it.
                                 {CurrPage.PurchLines.PAGE.}
                                 EditText;
                               END;
                                }
      { 1100528401;2 ;Action    ;
                      CaptionML=ENU=Insert Consent Lines;
                      Image=BOMLedger;
                      OnAction=BEGIN
                                 //**4PS
                                 EditConsentLines;
                               END;
                                }
      { 1210190005;2 ;ActionGroup;
                      CaptionML=ENU=GS1 Loggings;
                      Image=Journals }
      { 1210190003;3 ;Action    ;
                      CaptionML=ENU=GS1 Errors;
                      Image=ErrorFALedgerEntries;
                      OnAction=BEGIN
                                 //**4PS
                                 GS1ErrorLogDrillDown;
                               END;
                                }
      { 1210190001;3 ;Action    ;
                      CaptionML=ENU=GS1 Changes;
                      Image=CalculatePlanChange;
                      OnAction=BEGIN
                                 //**4PS
                                 GS1PurchaseOrderLogDrillDown;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 1101200022;2;Field  ;
                SourceExpr="Job No." }

    { 1101200002;2;Field  ;
                SourceExpr=Element }

    { 1101200000;2;Field  ;
                SourceExpr="Extension Contract";
                Visible=FALSE }

    { 1100485012;2;Field  ;
                SourceExpr="Plot No.";
                Visible=FALSE }

    { 1100485002;2;Field  ;
                SourceExpr="Budget Adjustment";
                Visible=FALSE }

    { 1100525002;2;Field  ;
                SourceExpr="Tender Paragraph";
                Visible=FALSE }

    { 1100525004;2;Field  ;
                SourceExpr="Description Tender Paragraph";
                Visible=FALSE }

    { 1100525006;2;Field  ;
                SourceExpr="Tender Paragraph Text";
                Visible=FALSE }

    { 1100525008;2;Field  ;
                SourceExpr="Tender Paragraph Part";
                Visible=FALSE }

    { 1100525010;2;Field  ;
                SourceExpr="Descr Tender Paragraph Part";
                Visible=FALSE }

    { 1210190000;2;Field  ;
                SourceExpr="Estimate No.";
                Visible=FALSE }

    { 1210190002;2;Field  ;
                SourceExpr="Service Order No." }

    { 1210190012;2;Field  ;
                SourceExpr="Service Contract No.";
                Visible=FALSE }

    { 1210190016;2;Field  ;
                SourceExpr="Service Location No.";
                Visible=FALSE }

    { 1100485000;2;Field  ;
                SourceExpr="Additional Cost (Service)";
                Visible=FALSE }

    { 1101200004;2;Field  ;
                SourceExpr="Cost Type" }

    { 1101200006;2;Field  ;
                SourceExpr="Item No.";
                OnValidate=BEGIN
                             ItemNoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           //**4PS
                           IF HandleLookupItem(FIELDNO("Item No.")) THEN
                             CurrPage.UPDATE(TRUE)  //db, 09-03-07 (Call 8283)
                           ELSE
                             IF "Item No." <> xRec."Item No." THEN
                               InsertExtendedText(FALSE);
                         END;

                OnAssistEdit=BEGIN
                               //**4PS
                               IF AssistEditItem THEN BEGIN
                                 InsertExtendedText(FALSE);
                                 CurrPage.UPDATE(TRUE);
                               END;
                             END;
                              }

    { 1101200008;2;Field  ;
                SourceExpr=Manufacturer;
                Visible=ManufacturerVisible;
                OnLookup=VAR
                           Manufact@1210190002 : Code[20];
                         BEGIN
                           //**4PS
                           //GabiVendorRec.HandleVendorLookup(1, Manufacturer);
                           Manufact := Manufacturer;
                           GabiVendorRec.HandleVendorLookup(1, Manufact);
                           VALIDATE(Manufacturer, Manufact);
                         END;
                          }

    { 1101200010;2;Field  ;
                SourceExpr="Basic Item";
                Visible="Basic ItemVisible";
                OnValidate=BEGIN
                             BasicItemOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           //**4PS
                           IF HandleLookupItem(FIELDNO("Basic Item")) THEN
                             CurrPage.UPDATE(TRUE)  //db, 09-03-07 (call 8283)
                           ELSE
                             IF "Basic Item" <> xRec."Basic Item" THEN
                               InsertExtendedText(FALSE);
                         END;
                          }

    { 1101200012;2;Field  ;
                SourceExpr="Vendor (Trade Item)";
                Visible="Vendor (Trade Item)Visible";
                OnLookup=VAR
                           lvItem@1100485000 : Code[20];
                         BEGIN
                           //**4PS
                           lvItem := "Vendor (Trade Item)";
                           GabiVendorRec.HandleVendorLookup(2, lvItem);
                           VALIDATE("Vendor (Trade Item)", lvItem);
                         END;
                          }

    { 1101200014;2;Field  ;
                SourceExpr="Trade Item";
                Visible="Trade ItemVisible";
                OnValidate=BEGIN
                             TradeItemOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           //**4PS
                           IF HandleLookupItem(FIELDNO("Trade Item")) THEN
                             CurrPage.UPDATE(TRUE)  //db, 09-03-07 (call 8283)
                           ELSE
                             IF "Trade Item" <> xRec."Trade Item" THEN
                               InsertExtendedText(FALSE);
                         END;

                OnAssistEdit=BEGIN
                               IF (HandleAssistEditItem(FIELDNO("Trade Item"))) THEN
                                 CurrPage.UPDATE(TRUE);
                             END;
                              }

    { 1100485006;2;Field  ;
                SourceExpr="Item Brand";
                Visible=FALSE }

    { 1100485008;2;Field  ;
                SourceExpr="Item Type";
                Visible=FALSE }

    { 1100485010;2;Field  ;
                SourceExpr="Item Series";
                Visible=FALSE }

    { 66  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                           END;
                            }

    { 64  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                LookupPageID=Cost Object List }

    { 1100485004;2;Field  ;
                SourceExpr="Cost Component" }

    { 1100529000;2;Field  ;
                SourceExpr="FSC Type Code";
                Visible=FALSE }

    { 1101200018;2;Field  ;
                SourceExpr="Purchase Action" }

    { 1101200020;2;Field  ;
                SourceExpr="Purchase Phase" }

    { 2   ;2   ;Field     ;
                SourceExpr=Type;
                OnValidate=BEGIN
                             NoOnAfterValidate;
                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;

                             GetVendorPreferenceAccountNo();  //**4PS.n
                           END;
                            }

    { 4   ;2   ;Field     ;
                SourceExpr="No.";
                OnValidate=BEGIN
                             ShowShortcutDimCode(ShortcutDimCode);
                             NoOnAfterValidate;

                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           //**4PS
                           //OnLookupFieldNo("No.EDITABLE");
                           OnLookupFieldNo(TRUE);  //temporary RTC
                           InsertExtendedText(FALSE);
                         END;
                          }

    { 6   ;2   ;Field     ;
                SourceExpr=Description }

    { 1210190020;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 1210190004;2;Field  ;
                SourceExpr="Text Block";
                Visible=FALSE }

    { 1210190032;2;Field  ;
                CaptionML=ENU=Comments;
                SourceExpr=LineCommentPresent();
                Visible=FALSE }

    { 1210190006;2;Field  ;
                SourceExpr="Price Agreement";
                Editable="Price AgreementEditable" }

    { 28  ;2   ;Field     ;
                SourceExpr="Prod. Order No.";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr="Blanket Order No.";
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                SourceExpr="Blanket Order Line No.";
                Visible=FALSE }

    { 42  ;2   ;Field     ;
                SourceExpr="Appl.-to Item Entry";
                Visible=FALSE }

    { 36  ;2   ;Field     ;
                SourceExpr="Cross-Reference No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             CrossReferenceNoOnAfterValidat;
                             NoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           CrossReferenceNoLookUp;
                           InsertExtendedText(FALSE);
                           NoOnAfterValidate;
                         END;
                          }

    { 20  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 38  ;2   ;Field     ;
                SourceExpr=Nonstock;
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 300 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(3),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 302 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(4),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 304 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(5),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 306 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(6),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 308 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(7),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 310 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(8),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 62  ;2   ;Field     ;
                SourceExpr="Location Code" }

    { 8   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=Quantity;
                Editable=QuantityEditable;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 24  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code";
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 10  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 12  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Direct Unit Cost";
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 58  ;2   ;Field     ;
                SourceExpr="Indirect Cost %";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 60  ;2   ;Field     ;
                SourceExpr="Unit Price (LCY)";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 1100525000;2;Field  ;
                SourceExpr="Discount % (Item)";
                Visible=FALSE;
                OnValidate=BEGIN
                             Discount37ItemOnAfterValidate;
                           END;
                            }

    { 56  ;2   ;Field     ;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 1100525001;2;Field  ;
                SourceExpr="Amount (LCY)";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Amount";
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 16  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Discount %";
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 50  ;2   ;Field     ;
                SourceExpr="Line Discount Amount";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 48  ;2   ;Field     ;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Allow Item Charge Assignment";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Qty. to Assign";
                Editable=QuantityEditable;
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdateForm(FALSE);
                            END;
                             }

    { 26  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Qty. Assigned";
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdateForm(FALSE);
                            END;
                             }

    { 1210190024;2;Field  ;
                SourceExpr="Requested Receipt Date";
                Visible=FALSE }

    { 1210190026;2;Field  ;
                SourceExpr="Promised Receipt Date";
                Visible=FALSE }

    { 1210190028;2;Field  ;
                SourceExpr="Planned Receipt Date";
                Visible=FALSE }

    { 1210190022;2;Field  ;
                SourceExpr="Expected Receipt Date";
                Visible=FALSE }

    { 1210190030;2;Field  ;
                SourceExpr="Lead Time Calculation" }

    { 1210190018;2;Field  ;
                SourceExpr="Purchase Route Reference";
                Visible=FALSE }

    { 1210190034;2;Field  ;
                SourceExpr="ICM Quantity Confirmed" }

    { 1210190041;2;Field  ;
                CaptionML=ENU=GS1 Quantity Confirmed;
                SourceExpr=PurchaseLineExtension."GS1 Quantity Confirmed";
                Editable=FALSE }

    { 1210190043;2;Field  ;
                CaptionML=ENU=GS1 Error logs;
                SourceExpr=CheckIfGS1ErrorLogsExist;
                Visible=FALSE;
                Editable=FALSE }

    { 1210190010;2;Field  ;
                SourceExpr="Quote Selected";
                OnValidate=BEGIN
                             QuoteSelectedOnAfterValidate;
                           END;
                            }

    { 1100528300;2;Field  ;
                SourceExpr="Comments for Logistics" }

    { 40  ;1   ;Group     ;
                Visible=FALSE;
                GroupType=Group }

    { 31  ;2   ;Group     ;
                GroupType=Group }

    { 33  ;3   ;Field     ;
                Name=Invoice Discount Amount;
                CaptionML=ENU=Invoice Discount Amount;
                SourceExpr=TotalPurchaseLine."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr=TotalPurchaseHeader."Currency Code";
                Editable=InvDiscAmountEditable;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled;
                OnValidate=VAR
                             PurchaseHeader@1000 : Record 38;
                           BEGIN
                             PurchaseHeader.GET("Document Type","Document No.");
                             PurchCalcDiscByType.ApplyInvDiscBasedOnAmt(TotalPurchaseLine."Inv. Discount Amount",PurchaseHeader);
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 27  ;3   ;Field     ;
                Name=Invoice Disc. Pct.;
                CaptionML=ENU=Invoice Discount %;
                DecimalPlaces=0:2;
                SourceExpr=PurchCalcDiscByType.GetVendInvoiceDiscountPct(Rec);
                Visible=TRUE;
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 17  ;2   ;Group     ;
                GroupType=Group }

    { 11  ;3   ;Field     ;
                Name=Total Amount Excl. VAT;
                DrillDown=No;
                CaptionML=ENU=Total Amount Excl. VAT;
                SourceExpr=TotalPurchaseLine.Amount;
                AutoFormatType=1;
                AutoFormatExpr=TotalPurchaseHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalExclVATCaption(PurchHeader."Currency Code");
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 13  ;3   ;Field     ;
                Name=Total VAT Amount;
                CaptionML=ENU=Total VAT;
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr=TotalPurchaseHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalVATCaption(PurchHeader."Currency Code");
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 7   ;3   ;Field     ;
                Name=Total Amount Incl. VAT;
                CaptionML=ENU=Total Amount Incl. VAT;
                SourceExpr=TotalPurchaseLine."Amount Including VAT";
                AutoFormatType=1;
                AutoFormatExpr=TotalPurchaseHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalInclVATCaption(PurchHeader."Currency Code");
                Editable=FALSE;
                StyleExpr=TotalAmountStyle }

    { 9   ;3   ;Field     ;
                Name=RefreshTotals;
                DrillDown=Yes;
                SourceExpr=RefreshMessageText;
                Enabled=RefreshMessageEnabled;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DocumentTotals.PurchaseRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalPurchaseLine);
                              DocumentTotals.PurchaseUpdateTotalsControls(Rec,TotalPurchaseHeader,TotalPurchaseLine,RefreshMessageEnabled,
                                TotalAmountStyle,RefreshMessageText,InvDiscAmountEditable,VATAmount);
                            END;

                ShowCaption=No }

  }
  CODE
  {
    VAR
      TotalPurchaseHeader@1013 : Record 38;
      TotalPurchaseLine@1012 : Record 39;
      PurchHeader@1014 : Record 38;
      PurchCalcDiscByType@1016 : Codeunit 66;
      DocumentTotals@1015 : Codeunit 57;
      PurchaseLineExtension@1100525001 : Record 11020644;
      TransferExtendedText@1002 : Codeunit 378;
      ItemAvailFormsMgt@1004 : Codeunit 353;
      ShortcutDimCode@1003 : ARRAY [8] OF Code[20];
      UpdateAllowedVar@1000 : Boolean;
      Text000@1001 : TextConst 'ENU=Unable to run this function while in View mode.';
      VATAmount@1011 : Decimal;
      InvDiscAmountEditable@1010 : Boolean;
      TotalAmountStyle@1009 : Text;
      RefreshMessageEnabled@1008 : Boolean;
      RefreshMessageText@1007 : Text;
      Text11012001@1210190002 : TextConst 'ENU=Before editing text enter the line first';
      ItemSetup@1100525000 : Record 11012300;
      PurchSetup@1210190001 : Record 312;
      GabiVendorRec@1100485001 : Record 11012304;
      gFromReference@1210190000 : Boolean;
      GeneratedtTxtConst1@1100000998 : TextConst 'ENU=You are not authorized for Department Code %1.';
      DPA_IsHardFilter@1100000999 : Boolean;
      "Price AgreementEditable"@19020391 : Boolean INDATASET;
      "Basic ItemVisible"@19042756 : Boolean INDATASET;
      "Trade ItemVisible"@19042429 : Boolean INDATASET;
      ManufacturerVisible@19015155 : Boolean INDATASET;
      "Vendor (Trade Item)Visible"@19043796 : Boolean INDATASET;
      QuantityEditable@1100409000 : Boolean INDATASET;

    PROCEDURE ApproveCalcInvDisc@6();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Purch.-Disc. (Yes/No)",Rec);
    END;

    LOCAL PROCEDURE CalcInvDisc@1();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Purch.-Calc.Discount",Rec);
    END;

    LOCAL PROCEDURE ExplodeBOM@3();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Purch.-Explode BOM",Rec);
    END;

    LOCAL PROCEDURE InsertExtendedText@5(Unconditionally@1000 : Boolean);
    BEGIN
      IF TransferExtendedText.PurchCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        TransferExtendedText.InsertPurchExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE ItemChargeAssgnt@5800();
    BEGIN
      ShowItemChargeAssgnt;
    END;

    LOCAL PROCEDURE OpenItemTrackingLines@6500();
    BEGIN
      OpenItemTrackingLines;
    END;

    PROCEDURE UpdateForm@12(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    PROCEDURE SetUpdateAllowed@2(UpdateAllowed@1000 : Boolean);
    BEGIN
      UpdateAllowedVar := UpdateAllowed;
    END;

    LOCAL PROCEDURE UpdateAllowed@9() : Boolean;
    BEGIN
      IF UpdateAllowedVar = FALSE THEN BEGIN
        MESSAGE(Text000);
        EXIT(FALSE);
      END;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE ShowPrices@15();
    VAR
      PurchHeader@1102628001 : Record 38;
      PurchPriceCalcMgt@1102628000 : Codeunit 7010;
    BEGIN
      PurchHeader.GET("Document Type","Document No.");
      CLEAR(PurchPriceCalcMgt);
      PurchPriceCalcMgt.GetPurchLinePrice(PurchHeader,Rec);
    END;

    LOCAL PROCEDURE ShowLineDisc@16();
    VAR
      PurchHeader@1102628001 : Record 38;
      PurchPriceCalcMgt@1102628000 : Codeunit 7010;
    BEGIN
      PurchHeader.GET("Document Type","Document No.");
      CLEAR(PurchPriceCalcMgt);
      PurchPriceCalcMgt.GetPurchLineLineDisc(PurchHeader,Rec);
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      InsertExtendedText(FALSE);
      IF (Type = Type::"Charge (Item)") AND ("No." <> xRec."No.") AND
         (xRec."No." <> '')
      THEN
        CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE CrossReferenceNoOnAfterValidat@19048248();
    BEGIN
      InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE RedistributeTotalsOnAfterValidate@8();
    BEGIN
      CurrPage.SAVERECORD;

      PurchHeader.GET("Document Type","Document No.");
      IF DocumentTotals.PurchaseCheckNumberOfLinesLimit(PurchHeader) THEN
        DocumentTotals.PurchaseRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalPurchaseLine);
      CurrPage.UPDATE;
    END;

    PROCEDURE CopyBudgetLines@6501();
    BEGIN
      //**4PS
      CODEUNIT.RUN(CODEUNIT::"Copy Budget Lines",Rec);
    END;

    PROCEDURE SelectBudgetLines@1210190002(IPurchHeadRec@11012000 : Record 38);
    VAR
      lvBudgetRec@1210190011 : Record 11012001;
      lvBudgetListFrm@11012001 : Page 11012005;
    BEGIN
      //**4PS
      IF IPurchHeadRec."Job No." <> '' THEN
        lvBudgetRec.SETRANGE("Project No.", IPurchHeadRec."Job No.")
      ELSE
        IF "Job No." <> '' THEN
          lvBudgetRec.SETRANGE("Project No.", "Job No.");
      lvBudgetRec.SETFILTER("Cost Type", '%1..%2', lvBudgetRec."Cost Type"::Material, lvBudgetRec."Cost Type"::Sundry);  //db, 22-06-05
      IF IPurchHeadRec."Document Type" <> IPurchHeadRec."Document Type"::Quote THEN
        lvBudgetRec.SETRANGE(Advised, FALSE);

      lvBudgetListFrm.InitSelectionCopyToPurchaseQuote(Rec);
      lvBudgetListFrm.SETTABLEVIEW(lvBudgetRec);
      lvBudgetListFrm.RUNMODAL;
    END;

    PROCEDURE EditText@1210190001();
    VAR
      TextFrm@1210190003 : Page 11012120;
    BEGIN
      //**4PS
      IF "Line No." = 0 THEN
        ERROR(Text11012001);

      TextFrm.SetSelection(DATABASE::"Purchase Line","Document No.",
        '','','','','',"Line No.","Document Type");

      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    PROCEDURE GetHeader@1000000005();
    BEGIN
      //**4PS
      //TESTFIELD("Document No.");  // For RTC o
      IF "Document No." <> '' THEN  // For RTC n
        PurchHeader.GET("Document Type","Document No.");
    END;

    PROCEDURE ShowPurchRouteRef@1210190004();
    VAR
      lvRouteRefMgtCU@1210190000 : Codeunit 11012045;
    BEGIN
      //**4PS
      lvRouteRefMgtCU.ShowReferenceList("Purchase Route Reference");
    END;

    PROCEDURE InitSelectionFromReference@1210190008(IQuoteLineNo@1210190000 : Integer);
    BEGIN
      //**4PS
      gFromReference := TRUE;
      SETRANGE("Line No.", IQuoteLineNo);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE GS1ErrorLogDrillDown@1210190000();
    VAR
      GS1ErrorLog@1210190000 : Record 11072078;
    BEGIN
      //**4PS
      GS1ErrorLog.SETRANGE("Document Type", "Document Type");
      GS1ErrorLog.SETRANGE("Document No.", "Document No.");
      GS1ErrorLog.SETRANGE("Line No.", "Line No.");
      GS1ErrorLog.TableDrillDown(GS1ErrorLog);
    END;

    PROCEDURE GS1PurchaseOrderLogDrillDown@1210190007();
    VAR
      GS1PurchaseOrderLog@1210190000 : Record 11072079;
    BEGIN
      //**4PS
      GS1PurchaseOrderLog.SETRANGE("Document Type", "Document Type");
      GS1PurchaseOrderLog.SETRANGE("Document No.", "Document No.");
      GS1PurchaseOrderLog.SETRANGE("Line No.", "Line No.");
      GS1PurchaseOrderLog.TableDrillDown(GS1PurchaseOrderLog);
    END;

    LOCAL PROCEDURE ItemNoOnAfterValidate@19061248();
    BEGIN
      //**4PS
      IF ("Cost Type" = "Cost Type"::Material) AND ("No." <> '') THEN
        InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE BasicItemOnAfterValidate@19054956();
    BEGIN
      //**4PS
      IF ("Cost Type" = "Cost Type"::Material) AND ("No." <> '') THEN
        InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE TradeItemOnAfterValidate@19075338();
    BEGIN
      //**4PS
      IF ("Cost Type" = "Cost Type"::Material) AND ("No." <> '') THEN
        InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE Discount37ItemOnAfterValidate@19057692();
    BEGIN
      //**4PS
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE QuoteSelectedOnAfterValidate@19031255();
    BEGIN
      //**4PS
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PriceAgreementOnActivate@19033268();
    BEGIN
      //**4PS
      "Price AgreementEditable" := (PurchSetup."Price Agreement" = PurchSetup."Price Agreement"::Order);
    END;

    BEGIN
    {
      4PS, 18-05-2015, C023496, Group totals set to invisible
    }
    END.
  }
}

