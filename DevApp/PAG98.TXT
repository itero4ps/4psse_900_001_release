OBJECT Page 98 Purch. Cr. Memo Subform
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00.00.45480,NAVSE9,NAVFI9,4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    MultipleNewLines=Yes;
    LinksAllowed=No;
    SourceTable=Table39;
    DelayedInsert=Yes;
    SourceTableView=WHERE(Document Type=FILTER(Credit Memo));
    PageType=ListPart;
    AutoSplitKey=Yes;
    RefreshOnActivate=Yes;
    OnInit=BEGIN
             //**4PS.sn
             TradeItemEnabled := TRUE;
             PlantEnabled := TRUE;

             ShortcutDimension2CodeEditable := TRUE;
             CostTypeEditable := TRUE;
             BoolIsEditable := TRUE;
             EntityEditable := TRUE;
             DataEditable := TRUE;
             JobNoEditable := TRUE;
             ServiceOrderNoEditable := TRUE;
             ItemEditable := TRUE;
             TariffNoEditable := TRUE;
             NetWeightEditable := TRUE;
             PlantTypeEditable := TRUE;
             PlantNoEditable := TRUE;
             CostComponentEditable := TRUE;
             TypeEditable := TRUE;
             QuantityEditable := TRUE;
             UnitCostLCYEditable := TRUE;
             AmountIncludingVATEditable := TRUE;
             //**4PS.en
           END;

    OnOpenPage=BEGIN
                 PurchSetup.GET;

                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01

                 //**4PS.sn
                 PurchSetupRec.GET;
                 IF PurchSetupRec."Approve Purchase Invoices" THEN
                   PurchSetupRec.TESTFIELD("Purchase Registration Account");

                 IF NOT ItemSetup.READPERMISSION THEN
                   TradeItemEnabled := FALSE;

                 IF NOT PlantSetup.READPERMISSION THEN
                   PlantEnabled := FALSE
                 ELSE
                   PlantSetup.GET;
                 //**4PS.en
               END;

    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                       AfterGetCurrentRecord;
                       CLEAR(DocumentTotals);

                       //**4PS.sn
                       JobDescrOtherCompany; //kkleermaker.n, 130902, C004024
                       IF gFromReference THEN BEGIN
                         gFromReference := FALSE;
                         SETRANGE("Line No.");
                       END;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                  InitType;
                  CLEAR(ShortcutDimCode);

                  //**4PS.sn
                  CALCFIELDS("Balance Incl. VAT","Balance Excl. VAT");

                  InitRecord;
                  GetVendorPreferenceAccountNo();
                  ShowShortcutDimCode(ShortcutDimCode);
                  AfterGetCurrentRecord;

                  PurchaseLineExtension.GetPurchLineExtension("Document Type", "Document No.", "Line No.");
                  //**4PS.en
                END;

    OnDeleteRecord=VAR
                     ReservePurchLine@1000 : Codeunit 99000834;
                   BEGIN
                     IF (Quantity <> 0) AND ItemExists("No.") THEN BEGIN
                       COMMIT;
                       IF NOT ReservePurchLine.DeleteLineConfirm(Rec) THEN
                         EXIT(FALSE);
                       ReservePurchLine.DeleteLine(Rec);
                     END;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           TypeChosen := HasTypeToFillMandatotyFields;
                           IF PurchHeader.GET("Document Type","Document No.") THEN;

                           //**4PS.so C023496
                           //DocumentTotals.PurchaseUpdateTotalsControls(Rec,TotalPurchaseHeader,TotalPurchaseLine,RefreshMessageEnabled,
                           //  TotalAmountStyle,RefreshMessageText,InvDiscAmountEditable,VATAmount);
                           //**4PS.eo
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 1903098704;2 ;Action    ;
                      AccessByPermission=TableData 90=R;
                      CaptionML=ENU=E&xplode BOM;
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeBOM;
                               END;
                                }
      { 1901742204;2 ;Action    ;
                      AccessByPermission=TableData 279=R;
                      CaptionML=ENU=Insert &Ext. Texts;
                      Image=Text;
                      OnAction=BEGIN
                                 InsertExtendedText(TRUE);
                               END;
                                }
      { 1907528504;2 ;Action    ;
                      Name=GetReturnShipmentLines;
                      AccessByPermission=TableData 6650=R;
                      Ellipsis=Yes;
                      CaptionML=ENU=Get Return &Shipment Lines;
                      Visible=FALSE;
                      Image=ReturnShipment;
                      OnAction=BEGIN
                                 GetReturnShipment;
                               END;
                                }
      { 1100528501;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Get Allocation per Line;
                      Description=4PS-Intern;
                      Image=Import;
                      OnAction=VAR
                                 PurchGetAllocation@1100527000 : Codeunit 11012048;
                               BEGIN
                                 //**4PS DP00951
                                 PurchGetAllocation.PurchaseLine(Rec);
                               END;
                                }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1903645704;2 ;ActionGroup;
                      CaptionML=ENU=Item Availability by;
                      Image=ItemAvailability }
      { 5       ;3   ;Action    ;
                      CaptionML=ENU=Event;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByEvent)
                               END;
                                }
      { 1903587104;3 ;Action    ;
                      CaptionML=ENU=Period;
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByPeriod)
                               END;
                                }
      { 1903193004;3 ;Action    ;
                      CaptionML=ENU=Variant;
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByVariant)
                               END;
                                }
      { 1900296704;3 ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=ENU=Location;
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByLocation)
                               END;
                                }
      { 13      ;3   ;Action    ;
                      CaptionML=ENU=BOM Level;
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByBOM)
                               END;
                                }
      { 1902740304;2 ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1902395304;2 ;Action    ;
                      CaptionML=ENU=Co&mments;
                      Image=ViewComments;
                      OnAction=BEGIN
                                 ShowLineComments;
                               END;
                                }
      { 1907184504;2 ;Action    ;
                      AccessByPermission=TableData 5800=R;
                      CaptionML=ENU=Item Charge &Assignment;
                      Image=ItemCosts;
                      OnAction=BEGIN
                                 ItemChargeAssgnt;
                               END;
                                }
      { 1905987604;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Item &Tracking Lines;
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
      { 27      ;2   ;Action    ;
                      Name=DeferralSchedule;
                      CaptionML=ENU=Deferral Schedule;
                      Enabled="Deferral Code" <> '';
                      Image=PaymentPeriod;
                      OnAction=BEGIN
                                 PurchHeader.GET("Document Type","Document No.");
                                 ShowDeferrals(PurchHeader."Posting Date",PurchHeader."Currency Code");
                               END;
                                }
      { 1907424604;2 ;Action    ;
                      CaptionML=ENU=Purchase Route References;
                      Image=ContactReference;
                      OnAction=BEGIN
                                 //**4PS
                                 //This functionality was copied from page #52. Unsupported part was commented. Please check it.
                                 ShowPurchRouteRef;
                               END;
                                }
      { 1907335004;2 ;Action    ;
                      CaptionML=ENU=Text Block;
                      Image=Text;
                      OnAction=BEGIN
                                 //**4PS
                                 //This functionality was copied from page #52. Unsupported part was commented. Please check it.
                                 EditText;
                               END;
                                }
      { 12013589;2   ;Separator  }
      { 12013590;2   ;Action    ;
                      Name=<Action1100285001>;
                      ShortCutKey=Ctrl+Alt+A;
                      CaptionML=ENU=Approval;
                      Image=Approvals;
                      OnAction=VAR
                                 ExFlow@12013591 : Codeunit 12013601;
                               BEGIN
                                 // ExFlow
                                 ExFlow.Approve(Rec);
                               END;
                                }
      { 1100528401;2 ;Action    ;
                      CaptionML=ENU=Insert Consent Lines;
                      Image=Insert;
                      OnAction=BEGIN
                                 //**4PS
                                 EditConsentLines;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=PurchDetailLine;
                GroupType=Repeater }

    { 1100528400;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525000;2;Field  ;
                SourceExpr="Receiving Company";
                Visible=FALSE;
                Editable=DataEditable;
                OnValidate=BEGIN
                             SetEditable;
                             ReceivingCompanyOnAfterValidat;
                           END;
                            }

    { 42  ;2   ;Field     ;
                SourceExpr="Job No.";
                Editable=JobNoEditable;
                OnValidate=BEGIN
                             //**4PS.sn
                             SetEditable;
                             ShowShortcutDimCode(ShortcutDimCode);
                           END;

                OnLookup=BEGIN
                           OnLookupJobNo(JobNoEditable);
                           SetEditable;
                         END;
                          }

    { 1100525002;2;Field  ;
                SourceExpr="Job Description";
                Visible=FALSE }

    { 1100525004;2;Field  ;
                SourceExpr=Element }

    { 1101200004;2;Field  ;
                SourceExpr="Extension Contract" }

    { 1100485012;2;Field  ;
                SourceExpr="Plot No.";
                Visible=FALSE }

    { 1210190006;2;Field  ;
                SourceExpr="Service Order No.";
                Editable=ServiceOrderNoEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;

                OnLookup=BEGIN
                           OnLookupServiceOrderNo(ServiceOrderNoEditable);
                           SetEditable;
                         END;
                          }

    { 1100485016;2;Field  ;
                SourceExpr="Service Order Description";
                Visible=FALSE }

    { 1210190008;2;Field  ;
                SourceExpr="Service Contract No.";
                Visible=FALSE;
                Editable=ServiceOrderNoEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1210190010;2;Field  ;
                SourceExpr="Service Location No.";
                Visible=FALSE }

    { 1100525006;2;Field  ;
                SourceExpr="Service Control Year";
                Visible=FALSE }

    { 1100485006;2;Field  ;
                SourceExpr="Additional Cost (Service)";
                Visible=FALSE }

    { 1100485002;2;Field  ;
                SourceExpr="Rental Unit";
                Visible=FALSE }

    { 1101200008;2;Field  ;
                SourceExpr="Cost Type";
                Editable=CostTypeEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1101200010;2;Field  ;
                SourceExpr="Item No.";
                Editable=ItemEditable;
                OnValidate=BEGIN
                             SetEditable;
                             ItemNoOnAfterValidate;  //db, 26-10-12
                           END;
                            }

    { 1101200012;2;Field  ;
                SourceExpr=Manufacturer;
                Enabled=TradeItemEnabled;
                Editable=ItemEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1101200014;2;Field  ;
                SourceExpr="Basic Item";
                Enabled=TradeItemEnabled;
                Editable=ItemEditable;
                OnValidate=BEGIN
                             SetEditable;
                             BasicItemOnAfterValidate;  //db, 26-10-12
                           END;
                            }

    { 1101200016;2;Field  ;
                SourceExpr="Vendor (Trade Item)";
                Enabled=TradeItemEnabled;
                Editable=ItemEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1101200018;2;Field  ;
                SourceExpr="Trade Item";
                Enabled=TradeItemEnabled;
                Editable=ItemEditable;
                OnValidate=BEGIN
                             SetEditable;
                             TradeItemOnAfterValidate;  //db, 26-10-12
                           END;
                            }

    { 1210190022;2;Field  ;
                SourceExpr="Tariff No.";
                Visible=FALSE;
                Editable=TariffNoEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1210190024;2;Field  ;
                SourceExpr="Net Weight";
                Visible=FALSE;
                Editable=NetWeightEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1210190000;2;Field  ;
                SourceExpr="Plant Type";
                Enabled=PlantEnabled;
                Editable=PlantTypeEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;

                OnLookup=BEGIN
                           OnLookupPlantType(PlantTypeEditable);
                           SetEditable;
                         END;
                          }

    { 1210190002;2;Field  ;
                SourceExpr="Plant No.";
                Enabled=PlantEnabled;
                Editable=PlantNoEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1210190004;2;Field  ;
                SourceExpr="Cost Component Plant";
                Enabled=PlantEnabled;
                Editable=PlantNoEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1100409000;2;Field  ;
                SourceExpr="Plant Location";
                Visible=FALSE }

    { 1100485018;2;Field  ;
                Lookup=No;
                SourceExpr="Plant Order No.";
                Visible=FALSE }

    { 1100485092;2;Field  ;
                SourceExpr="Ext. Rented Plant Invoiced to";
                Enabled=PlantEnabled;
                Editable=PlantNoEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1100485010;2;Field  ;
                CaptionML=ENU=Prev. Ext.Rented Plant Inv. to;
                SourceExpr=Rec.PrevExtRentedPlantInvoicedTo();
                Visible=FALSE }

    { 64  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                           END;
                            }

    { 62  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                Editable=ShortcutDimension2CodeEditable;
                LookupPageID=Cost Object List;
                OnValidate=BEGIN
                             //**4PS.sn
                             SetEditable;
                             //**4PS.en
                           END;
                            }

    { 1100485008;2;Field  ;
                SourceExpr="Cost Component";
                Editable=CostComponentEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1100529000;2;Field  ;
                SourceExpr="FSC Type Code";
                Visible=FALSE }

    { 2   ;2   ;Field     ;
                SourceExpr=Type;
                Editable=TypeEditable;
                OnValidate=BEGIN
                             //**4PS.sn
                             SetEditable;
                             GetVendorPreferenceAccountNo;
                             //**4PS.en
                             NoOnAfterValidate;
                             TypeChosen := HasTypeToFillMandatotyFields;

                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 4   ;2   ;Field     ;
                SourceExpr="No.";
                Editable=BoolIsEditable;
                OnValidate=BEGIN
                             //**4PS.sn
                             SetEditable;
                             //**4PS.en
                             ShowShortcutDimCode(ShortcutDimCode);
                             NoOnAfterValidate;

                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           //**4PS
                           OnLookupFieldNo(BoolIsEditable);
                           InsertExtendedText(FALSE);
                         END;

                ShowMandatory=TypeChosen }

    { 6   ;2   ;Field     ;
                SourceExpr=Description }

    { 1100485000;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 1100485004;2;Field  ;
                SourceExpr="Text Block";
                Visible=FALSE }

    { 1210190020;2;Field  ;
                CaptionML=ENU=Comments;
                SourceExpr=LineCommentPresent();
                Visible=FALSE }

    { 72  ;2   ;Field     ;
                SourceExpr="Cross-Reference No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             CrossReferenceNoOnAfterValidat;
                             NoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           CrossReferenceNoLookUp;
                           InsertExtendedText(FALSE);
                           NoOnAfterValidate;
                         END;
                          }

    { 82  ;2   ;Field     ;
                SourceExpr="IC Partner Code";
                Visible=FALSE }

    { 46  ;2   ;Field     ;
                SourceExpr="IC Partner Ref. Type";
                Visible=FALSE }

    { 78  ;2   ;Field     ;
                SourceExpr="IC Partner Reference";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 74  ;2   ;Field     ;
                SourceExpr=Nonstock;
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 56  ;2   ;Field     ;
                SourceExpr="Return Reason Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             ReturnReasonCodeOnAfterValidat;
                           END;
                            }

    { 60  ;2   ;Field     ;
                SourceExpr="Location Code";
                Visible=FALSE }

    { 38  ;2   ;Field     ;
                SourceExpr="Bin Code";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=Quantity;
                Editable=QuantityEditable;
                OnValidate=BEGIN
                             //**4PS.sn
                             SetEditable;
                             //**4PS.en
                             RedistributeTotalsOnAfterValidate;
                           END;

                ShowMandatory=TypeChosen }

    { 36  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code";
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 10  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 12  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Direct Unit Cost";
                OnValidate=BEGIN
                             DirectUnitCostOnAfterValidate;
                             RedistributeTotalsOnAfterValidate;
                           END;

                ShowMandatory=TypeChosen }

    { 24  ;2   ;Field     ;
                SourceExpr="Indirect Cost %";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 58  ;2   ;Field     ;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE;
                Editable=UnitCostLCYEditable;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                             //**4PS.sn
                             SetEditable;
                             //**4PS.en
                           END;
                            }

    { 68  ;2   ;Field     ;
                SourceExpr="Unit Price (LCY)";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 76  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Amount";
                OnValidate=BEGIN
                             LineAmountOnAfterValidate;
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 16  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Discount %";
                OnValidate=BEGIN
                             LineDiscount37OnAfterValidate;
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 52  ;2   ;Field     ;
                SourceExpr="Line Discount Amount";
                Visible=FALSE;
                OnValidate=BEGIN
                             LineDiscountAmountOnAfterValid;
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 50  ;2   ;Field     ;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE;
                OnValidate=BEGIN
                             AllowInvoiceDiscOnPush;
                             AllowInvoiceDiscOnAfterValidat;
                           END;
                            }

    { 80  ;2   ;Field     ;
                SourceExpr="Inv. Discount Amount";
                Visible=FALSE;
                OnValidate=BEGIN
                             InvDiscountAmountOnAfterValida;
                           END;
                            }

    { 34  ;2   ;Field     ;
                SourceExpr="Allow Item Charge Assignment";
                Visible=FALSE }

    { 48  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Qty. to Assign";
                Visible=FALSE;
                Editable=QuantityEditable;
                OnValidate=BEGIN
                             //**4PS.sn
                             SetEditable;
                             //**4PS.en
                           END;

                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdateForm(FALSE);
                            END;
                             }

    { 54  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Qty. Assigned";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdateForm(FALSE);
                            END;
                             }

    { 86  ;2   ;Field     ;
                SourceExpr="Job Task No.";
                Visible=FALSE }

    { 3   ;2   ;Field     ;
                SourceExpr="Job Line Type";
                Visible=FALSE }

    { 90  ;2   ;Field     ;
                SourceExpr="Job Unit Price";
                Visible=FALSE }

    { 11  ;2   ;Field     ;
                SourceExpr="Job Line Amount";
                Visible=FALSE }

    { 9   ;2   ;Field     ;
                SourceExpr="Job Line Discount Amount";
                Visible=FALSE }

    { 7   ;2   ;Field     ;
                SourceExpr="Job Line Discount %";
                Visible=FALSE }

    { 92  ;2   ;Field     ;
                SourceExpr="Job Total Price";
                Visible=FALSE }

    { 100 ;2   ;Field     ;
                SourceExpr="Job Unit Price (LCY)";
                Visible=FALSE }

    { 102 ;2   ;Field     ;
                SourceExpr="Job Total Price (LCY)";
                Visible=FALSE }

    { 104 ;2   ;Field     ;
                SourceExpr="Job Line Amount (LCY)";
                Visible=FALSE }

    { 106 ;2   ;Field     ;
                SourceExpr="Job Line Disc. Amount (LCY)";
                Visible=FALSE }

    { 40  ;2   ;Field     ;
                SourceExpr="Prod. Order No.";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr="Insurance No.";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                SourceExpr="Budgeted FA No.";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr="FA Posting Type";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Depr. until FA Posting Date";
                Visible=FALSE }

    { 1210190016;2;Field  ;
                CaptionML=ENU=Account Description;
                SourceExpr=AccountDescription;
                Visible=FALSE;
                Editable=FALSE }

    { 28  ;2   ;Field     ;
                SourceExpr="Depreciation Book Code";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                SourceExpr="Depr. Acquisition Cost";
                Visible=FALSE }

    { 66  ;2   ;Field     ;
                SourceExpr="Blanket Order No.";
                Visible=FALSE }

    { 70  ;2   ;Field     ;
                SourceExpr="Blanket Order Line No.";
                Visible=FALSE }

    { 44  ;2   ;Field     ;
                SourceExpr="Appl.-to Item Entry";
                Visible=FALSE }

    { 1090000;2;Field     ;
                SourceExpr="Auto. Acc. Group" }

    { 1090002;2;Field     ;
                SourceExpr="Periodic Template Code" }

    { 1090004;2;Field     ;
                SourceExpr="Periodic Starting Date" }

    { 25  ;2   ;Field     ;
                SourceExpr="Deferral Code";
                TableRelation="Deferral Template"."Deferral Code";
                Enabled=(Type <> Type::"Fixed Asset") AND (Type <> Type::" ") }

    { 300 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(3),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 302 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(4),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 304 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(5),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 306 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(6),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 308 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(7),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 310 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(8),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 1101200029;2;Field  ;
                SourceExpr="Purchase Action" }

    { 1101200031;2;Field  ;
                SourceExpr="Purchase Phase" }

    { 1210190018;2;Field  ;
                SourceExpr="Purchase Route Reference";
                Visible=FALSE }

    { 1100528601;2;Field  ;
                Name=Expense Allowance Scheme;
                CaptionML=ENU=Expense Allowance Scheme;
                SourceExpr=PurchaseLineExtension."Expense Allowance Scheme";
                Visible=FALSE;
                OnValidate=BEGIN
                             //**4PS
                             CurrPage.SAVERECORD;
                             ValidateAndSaveEntityNo(PurchaseLineExtension);
                           END;
                            }

    { 47  ;1   ;Group     ;
                Visible=FALSE;
                GroupType=Group }

    { 41  ;2   ;Group     ;
                GroupType=Group }

    { 39  ;3   ;Field     ;
                Name=Invoice Discount Amount;
                CaptionML=ENU=Invoice Discount Amount;
                SourceExpr=TotalPurchaseLine."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr=TotalPurchaseHeader."Currency Code";
                Editable=InvDiscAmountEditable;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled;
                OnValidate=VAR
                             PurchaseHeader@1000 : Record 38;
                           BEGIN
                             PurchaseHeader.GET("Document Type","Document No.");
                             PurchCalcDiscByType.ApplyInvDiscBasedOnAmt(TotalPurchaseLine."Inv. Discount Amount",PurchaseHeader);
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 37  ;3   ;Field     ;
                Name=Invoice Disc. Pct.;
                CaptionML=ENU=Invoice Discount %;
                DecimalPlaces=0:2;
                SourceExpr=PurchCalcDiscByType.GetVendInvoiceDiscountPct(Rec);
                Visible=TRUE;
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 23  ;2   ;Group     ;
                GroupType=Group }

    { 21  ;3   ;Field     ;
                Name=Total Amount Excl. VAT;
                DrillDown=No;
                CaptionML=ENU=Total Amount Excl. VAT;
                SourceExpr=TotalPurchaseLine.Amount;
                AutoFormatType=1;
                AutoFormatExpr=TotalPurchaseHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalExclVATCaption(PurchHeader."Currency Code");
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 19  ;3   ;Field     ;
                Name=Total VAT Amount;
                CaptionML=ENU=Total VAT;
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr=TotalPurchaseHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalVATCaption(PurchHeader."Currency Code");
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 17  ;3   ;Field     ;
                Name=Total Amount Incl. VAT;
                CaptionML=ENU=Total Amount Incl. VAT;
                SourceExpr=TotalPurchaseLine."Amount Including VAT";
                AutoFormatType=1;
                AutoFormatExpr=TotalPurchaseHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalInclVATCaption(PurchHeader."Currency Code");
                Editable=FALSE;
                StyleExpr=TotalAmountStyle }

    { 15  ;3   ;Field     ;
                Name=RefreshTotals;
                DrillDown=Yes;
                SourceExpr=RefreshMessageText;
                Enabled=RefreshMessageEnabled;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DocumentTotals.PurchaseRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalPurchaseLine);
                              DocumentTotals.PurchaseUpdateTotalsControls(Rec,TotalPurchaseHeader,TotalPurchaseLine,RefreshMessageEnabled,
                                TotalAmountStyle,RefreshMessageText,InvDiscAmountEditable,VATAmount);
                            END;

                ShowCaption=No }

    { 12013587;2;Field    ;
                SourceExpr=Approve }

    { 12013588;2;Field    ;
                SourceExpr="First Approver" }

  }
  CODE
  {
    VAR
      TotalPurchaseHeader@1014 : Record 38;
      TotalPurchaseLine@1013 : Record 39;
      PurchHeader@1012 : Record 38;
      PurchSetup@1010004 : Record 312;
      TransferExtendedText@1002 : Codeunit 378;
      ItemAvailFormsMgt@1004 : Codeunit 353;
      PurchCalcDiscByType@1016 : Codeunit 66;
      DocumentTotals@1015 : Codeunit 57;
      ShortcutDimCode@1003 : ARRAY [8] OF Code[20];
      UpdateAllowedVar@1000 : Boolean;
      Text000@1001 : TextConst 'ENU=Unable to run this function while in View mode.';
      JobsSetup@1100525009 : Record 315;
      ServiceSetup@1100525010 : Record 11012800;
      AutoFormatCurrency@1005 : Code[10];
      PurchTotalFrameVisible@19001055 : Boolean INDATASET;
      VATAmount@1011 : Decimal;
      InvDiscAmountEditable@1010 : Boolean;
      TotalAmountStyle@1009 : Text;
      RefreshMessageEnabled@1008 : Boolean;
      RefreshMessageText@1007 : Text;
      TypeChosen@1017 : Boolean;
      PurchSetupRec@11012001 : Record 312;
      ItemSetup@1100525000 : Record 11012300;
      PlantSetup@1210190005 : Record 11012550;
      RouteRefMgtCU@1210190000 : Codeunit 11012045;
      gFromReference@1210190007 : Boolean;
      Text11012001@1210190004 : TextConst 'ENU=Before editing text enter the line first';
      DepAuthRec@1100000997 : Record 11012466;
      GeneratedtTxtConst1@1100000998 : TextConst 'ENU=You are not authorized for Department Code %1.';
      PurchaseLineExtension@1100525001 : Record 11020644;
      DPA_IsHardFilter@1100000999 : Boolean;
      BoolIsEditable@1100525022 : Boolean INDATASET;
      CostTypeEditable@1100525021 : Boolean INDATASET;
      ShortcutDimension2CodeEditable@1100525020 : Boolean INDATASET;
      DataEditable@1100525011 : Boolean INDATASET;
      ItemEditable@1100525004 : Boolean INDATASET;
      TariffNoEditable@1100525015 : Boolean INDATASET;
      NetWeightEditable@1100525014 : Boolean INDATASET;
      JobNoEditable@1100525012 : Boolean INDATASET;
      EntityEditable@1100525016 : Boolean INDATASET;
      PlantTypeEditable@1100525005 : Boolean INDATASET;
      ServiceOrderNoEditable@1100525013 : Boolean INDATASET;
      PlantNoEditable@1100525006 : Boolean INDATASET;
      CostComponentEditable@1100525007 : Boolean INDATASET;
      TypeEditable@1100525008 : Boolean INDATASET;
      QuantityEditable@1100525019 : Boolean INDATASET;
      UnitCostLCYEditable@1100525017 : Boolean INDATASET;
      AmountIncludingVATEditable@1100525018 : Boolean INDATASET;
      PlantEnabled@1100525003 : Boolean INDATASET;
      TradeItemEnabled@1100525002 : Boolean INDATASET;

    PROCEDURE ApproveCalcInvDisc@6();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Purch.-Disc. (Yes/No)",Rec);
    END;

    PROCEDURE CalcInvDisc@1();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Purch.-Calc.Discount",Rec);
    END;

    PROCEDURE ExplodeBOM@3();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Purch.-Explode BOM",Rec);
    END;

    PROCEDURE GetReturnShipment@2();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Purch.-Get Return Shipments",Rec);
    END;

    PROCEDURE InsertExtendedText@5(Unconditionally@1000 : Boolean);
    BEGIN
      IF TransferExtendedText.PurchCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        TransferExtendedText.InsertPurchExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        UpdateForm(TRUE);
    END;

    PROCEDURE ItemChargeAssgnt@5800();
    BEGIN
      ShowItemChargeAssgnt;
    END;

    PROCEDURE OpenItemTrackingLines@6500();
    BEGIN
      OpenItemTrackingLines;
    END;

    PROCEDURE UpdateForm@12(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    PROCEDURE SetUpdateAllowed@4(UpdateAllowed@1000 : Boolean);
    BEGIN
      UpdateAllowedVar := UpdateAllowed;
    END;

    PROCEDURE UpdateAllowed@9() : Boolean;
    BEGIN
      IF UpdateAllowedVar = FALSE THEN BEGIN
        MESSAGE(Text000);
        EXIT(FALSE);
      END;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      InsertExtendedText(FALSE);
      IF (Type = Type::"Charge (Item)") AND ("No." <> xRec."No.") AND
         (xRec."No." <> '')
      THEN
        CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE CrossReferenceNoOnAfterValidat@19048248();
    BEGIN
      InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE DirectUnitCostOnAfterValidate@19017786();
    BEGIN
      CurrPage.UPDATE;  //**4PS.n
    END;

    LOCAL PROCEDURE LineAmountOnAfterValidate@19023652();
    BEGIN
      CurrPage.UPDATE;  //**4PS.n
    END;

    LOCAL PROCEDURE LineDiscount37OnAfterValidate@19052660();
    BEGIN
      CurrPage.UPDATE;  //**4PS.n
    END;

    LOCAL PROCEDURE LineDiscountAmountOnAfterValid@19033431();
    BEGIN
    END;

    LOCAL PROCEDURE AllowInvoiceDiscOnAfterValidat@19020304();
    BEGIN
    END;

    LOCAL PROCEDURE InvDiscountAmountOnAfterValida@19002339();
    BEGIN
    END;

    LOCAL PROCEDURE AfterGetCurrentRecord@19077479();
    BEGIN
      xRec := Rec;
      CALCFIELDS("Balance Excl. VAT", "Balance Incl. VAT"); //**4PS.n
      //**4PS.sn
      PurchaseLineExtension.GetPurchLineExtension("Document Type", "Document No.", "Line No.");
      SetEditable;
      //**4PS.en
    END;

    LOCAL PROCEDURE TypeOnBeforeInput@19031429();
    BEGIN
    END;

    LOCAL PROCEDURE CrossReferenceNoOnBeforeInput@19065332();
    BEGIN
    END;

    LOCAL PROCEDURE VariantCodeOnBeforeInput@19026151();
    BEGIN
    END;

    LOCAL PROCEDURE GenBusPostingGroupOnBeforeInpu@19061871();
    BEGIN
    END;

    LOCAL PROCEDURE GenProdPostingGroupOnBeforeInp@19030080();
    BEGIN
    END;

    LOCAL PROCEDURE VATBusPostingGroupOnBeforeInpu@19044684();
    BEGIN
    END;

    LOCAL PROCEDURE VATProdPostingGroupOnBeforeInp@19005522();
    BEGIN
    END;

    LOCAL PROCEDURE LocationCodeOnBeforeInput@19009895();
    BEGIN
    END;

    LOCAL PROCEDURE QuantityOnBeforeInput@19028302();
    BEGIN
    END;

    LOCAL PROCEDURE UnitofMeasureCodeOnBeforeInput@19075518();
    BEGIN
    END;

    LOCAL PROCEDURE DirectUnitCostOnBeforeInput@19003402();
    BEGIN
    END;

    LOCAL PROCEDURE LineAmountOnBeforeInput@19001340();
    BEGIN
    END;

    LOCAL PROCEDURE LineDiscount37OnBeforeInput@19046220();
    BEGIN
    END;

    LOCAL PROCEDURE LineDiscountAmountOnBeforeInpu@19046046();
    BEGIN
    END;

    LOCAL PROCEDURE InvDiscountAmountOnBeforeInput@19047547();
    BEGIN
    END;

    LOCAL PROCEDURE NoOnInputChange@19036568(VAR Text@19028590 : Text[1024]);
    BEGIN
      //OrgLineAmt := "Line Amount"; //**4PS.o
    END;

    LOCAL PROCEDURE AllowInvoiceDiscOnPush@19076295();
    BEGIN
      //OrgLineAmt := "Line Amount"; //**4PS.o
    END;

    LOCAL PROCEDURE RedistributeTotalsOnAfterValidate@8();
    BEGIN
      CurrPage.SAVERECORD;

      PurchHeader.GET("Document Type","Document No.");
      IF DocumentTotals.PurchaseCheckNumberOfLinesLimit(PurchHeader) THEN
        DocumentTotals.PurchaseRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalPurchaseLine);
      CurrPage.UPDATE;
    END;

    PROCEDURE SetCurrency@1011303(CurrCode@1010006 : Code[10]);
    BEGIN
      AutoFormatCurrency := CurrCode;
    END;

    PROCEDURE GetReceipt@1210190102();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Purch.-Get Receipt",Rec);
    END;

    PROCEDURE SetEditable@1100525003();
    BEGIN
      //**4PS
      GetHeader;

      DataEditable := (NOT PurchSetup."Approve Purchase Invoices") OR
                      ("No." <> PurchSetup."Purchase Registration Account");

      JobNoEditable := (
        ("Plant Type" = '') AND
        ("Service Order No." = '') AND ("Service Contract No." = '') AND
        DataEditable);

      IF PurchHeader."Preregister WIP" THEN BEGIN
        BoolIsEditable := FALSE;
        CostTypeEditable := FALSE;
        ShortcutDimension2CodeEditable := FALSE;
      END ELSE BEGIN
        BoolIsEditable := (
          ("Plant Type" = '') AND
          ("Service Order No." = '') AND
          ("Job No." = '') AND
          (("No." <> PurchSetup."Purchase Registration Account") OR
          (NOT PurchSetup."Approve Purchase Invoices")));
        CostTypeEditable := TRUE;
        ShortcutDimension2CodeEditable := TRUE;
      END;

      EntityEditable := (
        "Entity Type" IN ["Entity Type"::Cable,"Entity Type"::Device,"Entity Type"::ExtraNeed,"Entity Type"::CableTransit]);

      ServiceOrderNoEditable := ("Plant Type" = '');

      ItemEditable :=((("Cost Type" = "Cost Type"::Material) OR ("Cost Type" = "Cost Type"::" "))AND
                     (NOT PurchHeader."Amounts only"));

      TariffNoEditable := ("Item No." = '');
      NetWeightEditable := ("Item No." = '');

      PlantTypeEditable :=  (
        ("Job No." = '') AND
          ("Service Order No." = '') AND
          DataEditable);

      PlantNoEditable := (("Plant Type" <> '') AND PlantTypeEditable );

      CostComponentEditable := ((("Job No." <> '') AND JobsSetup."Cost Component Editable") OR
                                (("Service Order No." <> '') AND ServiceSetup."Cost Component Editable") OR
                                (("Job No." = '') AND ("Service Order No." = '')));

      TypeEditable := ("Job No." = '') AND ("Service Order No." = '') AND ("Plant Type" = '');

      QuantityEditable := (NOT PurchHeader."Amounts only");
      UnitCostLCYEditable := (("Job No." = '') AND ("Service Order No." = '')); //**4PS.n
      AmountIncludingVATEditable := ("Manually VAT Posting");
    END;

    PROCEDURE GetHeader@1000000005();
    BEGIN
      //**4PS
      PurchHeader.GET("Document Type","Document No.");
    END;

    LOCAL PROCEDURE PlantFieldsEditable@1210190002() : Boolean;
    BEGIN
      //**4PS
      EXIT(
        ("Job No." = '') AND
        ("Service Order No." = '') AND
        (("No." <> PurchSetupRec."Purchase Registration Account") OR
         (NOT PurchSetupRec."Approve Purchase Invoices")));
    END;

    PROCEDURE EditText@1210190001();
    VAR
      TextFrm@1210190006 : Page 11012120;
    BEGIN
      //**4PS
      IF "Line No." = 0 THEN
        ERROR(Text11012001);

      TextFrm.SetSelection(DATABASE::"Purchase Line","Document No.",
        '','','','','',"Line No.","Document Type");

      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    PROCEDURE ShowPurchRouteRef@1210190004();
    BEGIN
      //**4PS
      RouteRefMgtCU.ShowReferenceList("Purchase Route Reference");
    END;

    PROCEDURE InitSelectionFromReference@1210190008(IInvLineNo@1210190006 : Integer);
    BEGIN
      //**4PS
      gFromReference := TRUE;
      SETRANGE("Line No.", IInvLineNo);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ReceivingCompanyOnAfterValidat@19023184();
    BEGIN
      //**4PS
      CurrPage.UPDATE;  //31332
    END;

    LOCAL PROCEDURE ItemNoOnAfterValidate@19061248();
    BEGIN
      //**4PS
      IF ("Cost Type" = "Cost Type"::Material) AND ("No." <> '') THEN
        InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE BasicItemOnAfterValidate@19054956();
    BEGIN
      //**4PS
      IF ("Cost Type" = "Cost Type"::Material) AND ("No." <> '') THEN
        InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE TradeItemOnAfterValidate@19075338();
    BEGIN
      //**4PS
      IF ("Cost Type" = "Cost Type"::Material) AND ("No." <> '') THEN
        InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE ReturnReasonCodeOnAfterValidat@19024885();
    BEGIN
      //**4PS
      CurrPage.UPDATE;
    END;

    BEGIN
    {
      4PS, 18-05-2015, C023496, Group totals set to invisible

      --- ExFlow --->
      Field       : Approve
      Field       : First Approver
      Action      : Approval (Code)
      <-- ExFlow ---

      Version List=NAVW19.00.00.45480,NAVSE9.00.00.45480;
      Version List=NAVW19.00.00.45480,NAVFI9.00.00.45480;
    }
    END.
  }
}

