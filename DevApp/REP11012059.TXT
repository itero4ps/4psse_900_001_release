OBJECT Report 11012059 Project Resource Graph
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Project Resource Graph;
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF gvScaleUnit = gvScaleUnit::Week THEN
                    "Increment-by No." := 7
                  ELSE
                    IF gvScaleUnit = gvScaleUnit::Month THEN
                      "Increment-by No." := 30
                    ELSE
                      "Increment-by No." := 1;
                END;

  }
  DATASET
  {
    { 5115;    ;DataItem;                    ;
               DataItemTable=Table11012001;
               OnAfterGetRecord=BEGIN
                                  "Budget Line".SETFILTER(Hours, '<>0');

                                  IF ProjectElementRec.GET("Budget Line"."Project No.","Budget Line".Element) THEN
                                  BEGIN
                                    IF (ProjectElementRec."Starting Date" >= gvStartDate) OR
                                       (ProjectElementRec."Ending Date" <= gvEndDate) THEN
                                    BEGIN
                                      IF ProjectElementRec."Ending Date" < gvEndDate THEN
                                        edat := ProjectElementRec."Ending Date"
                                      ELSE
                                        edat := gvEndDate;
                                      IF ProjectElementRec."Starting Date" < gvStartDate THEN
                                        sdat := gvStartDate
                                      ELSE
                                        sdat := ProjectElementRec."Starting Date";
                                      MaxPer := (edat - sdat) DIV "Increment-by No.";
                                      CurPer := (sdat - gvStartDate) DIV "Increment-by No.";
                                      IF MaxPer < 1 THEN MaxPer := 1;
                                      Counter := 1;
                                      REPEAT
                                        TempBudget.SETRANGE("Project No.", USERID);
                                        TempBudget.SETRANGE("Line No.", CurPer);
                                        IF NOT TempBudget.FIND('-') THEN
                                        BEGIN
                                          TempBudget.INIT();
                                          TempBudget."Project No." := USERID;
                                          TempBudget."Line No." := CurPer;
                                          TempBudget.Description := FORMAT(Text000) + STRSUBSTNO('%1', CurPer);
                                          TempBudget.Hours := ROUND(("Budget Line".Hours / MaxPer), 0.01);
                                          TempBudget.INSERT();
                                        END ELSE BEGIN
                                          TempBudget.Hours := TempBudget.Hours + ROUND(("Budget Line".Hours / MaxPer), 0.01);
                                          TempBudget.MODIFY();
                                        END;
                                        CurPer := CurPer + 1;
                                        Counter := Counter + 1;
                                      UNTIL Counter > MaxPer
                                    END;
                                  END;
                                END;

               ReqFilterFields=Project No.,Element }

    { 5444;    ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               ExcelAutomation.InitExcel;
                               ExcelAutomation.InitWorkbook(Text001);

                               TempBudget.RESET;
                               TempBudget."Project No." := USERID;
                               SETRANGE(Number,1,TempBudget.COUNT);

                               ExcelAutomation.WriteCell(1, 1, Text003);
                               ExcelAutomation.WriteCell(1, 3, Text005);
                               ExcelAutomation.WriteCell(2, 3, Text007);

                               Counter := 4;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    TempBudget.FIND('-');
                                  END ELSE BEGIN
                                    TempBudget.NEXT;
                                  END;

                                  ExcelAutomation.WriteCell(1, Counter, TempBudget.Description);
                                  ExcelAutomation.WriteCell(2, Counter, FORMAT(TempBudget.Hours));

                                  Counter := Counter + 1;
                                END;

               OnPostDataItem=BEGIN
                                ExcelAutomation.AutoFit(1, 2);
                                ExcelAutomation.AddChart(
                                  Text011,
                                  1, 1, 2, Counter,
                                  ExcelEnumeration.XlChartType_xl3DColumn,
                                  7,
                                  ExcelEnumeration.XlRowCol_xlColumns,
                                  1,
                                  1,
                                  TRUE,
                                  Text012);

                                ExcelAutomation.GiveUserControl;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100528703;;Container;
                  ContainerType=ContentArea }

      { 1100528702;1;Group  ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 1100528704;2;Field  ;
                  CaptionML=ENU=Starting Date;
                  SourceExpr=gvStartDate;
                  OnValidate=BEGIN
                               IF gvStartDate = 0D THEN
                                 ERROR(Text013);
                             END;
                              }

      { 1100528701;2;Field  ;
                  CaptionML=ENU=Ending Date;
                  SourceExpr=gvEndDate;
                  OnValidate=BEGIN
                               IF gvEndDate = 0D THEN
                                 ERROR(Text014);
                             END;
                              }

      { 1100528700;2;Field  ;
                  CaptionML=ENU=Scale Unit in;
                  OptionCaptionML=ENU=Day,Week,Month;
                  SourceExpr=gvScaleUnit }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@11012017 : TextConst 'ENU="Period "';
      Text001@11012018 : TextConst 'ENU=Budget Hours Overview';
      Text003@11012020 : TextConst 'ENU=Budget Hour List for Period:';
      Text005@11012022 : TextConst 'ENU=Period';
      Text007@11012024 : TextConst 'ENU=Hour Quantity';
      Text011@11012028 : TextConst 'ENU=Graph';
      Text012@11012029 : TextConst 'ENU=Project Resource';
      Text013@11012030 : TextConst 'ENU=Start Date not Entered';
      Text014@11012031 : TextConst 'ENU=End Date not Entered';
      DotNetManagement@1100528704 : Codeunit 11012374;
      ExcelEnumeration@1100528703 : Codeunit 11012375;
      ExcelAutomation@1100528700 : Codeunit 11012402;
      gvStartDate@11012006 : Date;
      gvEndDate@11012007 : Date;
      gvScaleUnit@11012008 : 'Day,Week,Month';
      ProjectElementRec@11012009 : Record 11012010;
      TempBudget@11012010 : TEMPORARY Record 11012001;
      Counter@11012011 : Integer;
      CurPer@11012012 : Integer;
      MaxPer@11012013 : Integer;
      sdat@11012014 : Date;
      edat@11012015 : Date;
      "Increment-by No."@11012016 : Integer;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

