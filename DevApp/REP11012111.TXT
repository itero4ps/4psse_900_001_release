OBJECT Report 11012111 Update Project Addresses
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Update Project Addresses;
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF (NOT UpdateCustomer) AND (NOT UpdateEstateOwner) THEN
                    ERROR(Text000);

                  IF ("Ship-to Address".GETFILTER("Customer No.") = '') THEN
                    ERROR(Text007);

                  CustRec.RESET;
                  "Ship-to Address".COPYFILTER("Customer No.", CustRec."No.");
                  IF (CustRec.COUNT <> 1) THEN
                    ERROR(Text008)
                  ELSE BEGIN
                    CustRec.FINDFIRST;
                    CustomerOld := CustRec."No.";
                  END;

                  IF (CustomerOld = '') THEN
                    ERROR(Text001, ShipToAddressRec.FIELDCAPTION("Customer No."));

                  IF UpdateCustomer THEN BEGIN
                    IF (CustomerNew = '') THEN
                      ERROR(Text001, Text002);
                    IF (CustomerNew = CustomerOld) THEN
                      ERROR(Text006);
                    CustRec.GET(CustomerNew);
                  END;

                  IF UpdateEstateOwner THEN BEGIN
                    IF (EstateOwnerNew = EstateOwnerOld) THEN
                      ERROR(Text003);
                    IF (EstateOwnerNew <> '') THEN
                      ContRec.GET(EstateOwnerNew)
                    ELSE BEGIN
                      IF NOT CONFIRM(Text004) THEN
                        ERROR('');
                    END;
                  END;
                END;

  }
  DATASET
  {
    { 8635;    ;DataItem;                    ;
               DataItemTable=Table222;
               DataItemTableView=SORTING(Customer No.,Code);
               OnAfterGetRecord=BEGIN
                                  IF UpdateCustomer THEN BEGIN
                                    IF NOT ShipToAddressRec.GET(CustomerNew, Code) THEN
                                      NewAddressCode := Code
                                    ELSE BEGIN
                                      ShipToAddressRec.SETRANGE("Customer No.", CustomerNew);
                                      ShipToAddressRec.FIND('+');
                                      NewAddressCode := INCSTR(ShipToAddressRec.Code);
                                      IF (NewAddressCode = '') OR (STRLEN(NewAddressCode) > 10) THEN
                                        ERROR(Text005);
                                    END;
                                    ShipToAddressRec.INIT;
                                    ShipToAddressRec."Customer No." := CustomerNew;
                                    ShipToAddressRec.Code := NewAddressCode;
                                    ShipToAddressRec.INSERT(TRUE);
                                    //C016337.so
                                    //ShipToAddressRec := "Ship-to Address";
                                    //ShipToAddressRec."Customer No." := CustomerNew;
                                    //ShipToAddressRec.Code := NewAddressCode;
                                    //C016337.eo
                                    ShipToAddressRec.TRANSFERFIELDS("Ship-to Address", FALSE);  //C016337.n
                                    IF UpdateEstateOwner AND (ShipToAddressRec."Estate Owner" = EstateOwnerOld) THEN
                                      ShipToAddressRec."Estate Owner" := EstateOwnerNew;
                                    ShipToAddressRec.MODIFY(TRUE);
                                    DELETE(TRUE);
                                  END;

                                  IF (NOT UpdateCustomer) AND UpdateEstateOwner AND ("Estate Owner" = EstateOwnerOld) THEN BEGIN
                                    "Estate Owner" := EstateOwnerNew;
                                    MODIFY(TRUE);
                                  END
                                END;

               ReqFilterFields=Customer No.,Code }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1210190008;2;Field  ;
                  CaptionML=ENU=Update Customer No.;
                  SourceExpr=UpdateCustomer;
                  OnValidate=BEGIN
                               IF NOT UpdateCustomer THEN
                                 CustomerNew := '';
                             END;
                              }

      { 1210190002;2;Field  ;
                  CaptionML=ENU=New Customer No.;
                  SourceExpr=CustomerNew;
                  TableRelation=Customer;
                  OnValidate=BEGIN
                               IF NOT UpdateCustomer THEN
                                 CustomerNew := '';
                             END;
                              }

      { 1210190010;2;Field  ;
                  CaptionML=ENU=Update Complex Owner;
                  SourceExpr=UpdateEstateOwner;
                  OnValidate=BEGIN
                               IF NOT UpdateEstateOwner THEN BEGIN
                                 EstateOwnerOld := '';
                                 EstateOwnerNew := '';
                               END;
                             END;
                              }

      { 1210190005;2;Field  ;
                  CaptionML=ENU=Old Complex Owner;
                  SourceExpr=EstateOwnerOld;
                  TableRelation=Contact;
                  OnValidate=BEGIN
                               IF NOT UpdateEstateOwner THEN
                                 EstateOwnerOld := '';
                             END;
                              }

      { 1210190004;2;Field  ;
                  CaptionML=ENU=New Complex Owner;
                  SourceExpr=EstateOwnerNew;
                  TableRelation=Contact;
                  OnValidate=BEGIN
                               IF NOT UpdateEstateOwner THEN
                                 EstateOwnerNew := '';
                             END;
                              }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CustRec@1210190008 : Record 18;
      ContRec@1210190009 : Record 5050;
      ShipToAddressRec@1210190006 : Record 222;
      UpdateCustomer@1210190004 : Boolean;
      UpdateEstateOwner@1210190005 : Boolean;
      CustomerOld@1210190000 : Code[20];
      CustomerNew@1210190001 : Code[20];
      EstateOwnerOld@1210190003 : Code[20];
      EstateOwnerNew@1210190002 : Code[20];
      NewAddressCode@1210190007 : Code[11];
      Text000@1210190010 : TextConst 'ENU=Nothing selected.';
      Text001@1210190011 : TextConst 'ENU=%1 must be filled in.';
      Text002@1210190012 : TextConst 'ENU=New Customer No.';
      Text003@1210190013 : TextConst 'ENU=Old and new Complex Owner may not be the same.';
      Text004@1210190014 : TextConst 'ENU="Estate Owner will be made empty. Are you sure ? "';
      Text005@1210190015 : TextConst 'ENU=The first free address code of the new customer can not be determined.';
      Text006@1210190016 : TextConst 'ENU=Old and new Customer may not be the same.';
      Text007@1210190017 : TextConst 'ENU=Customer No. must be filled in, select one customer.';
      Text008@1210190018 : TextConst 'ENU=None or more than one customers selected, there must be one customer.';

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

