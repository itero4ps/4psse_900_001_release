OBJECT Report 11012135 WKA - Data Request Process
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=WKA - Data Request Process;
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   SetApplyVendorFilterToOtherCompaniesEditable;
                 END;

  }
  DATASET
  {
    { 1100525000;;DataItem;                  ;
               DataItemTable=Table2000000006;
               DataItemTableView=SORTING(Name);
               OnPreDataItem=BEGIN
                               CompanyFilters.COPYFILTERS(Company);
                               SETRANGE(Name, COMPANYNAME);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF ApplyVendorFilterToOtherCompanies THEN BEGIN
                                    Company2.COPYFILTERS(CompanyFilters);
                                    Company2.FINDSET;
                                    REPEAT
                                      TmpCompany3.Name := Company2.Name;
                                      TmpCompany3.INSERT;
                                    UNTIL Company2.NEXT = 0;
                                  END;

                                  IF NOT TmpCompany3.GET(COMPANYNAME) THEN BEGIN
                                    TmpCompany3.Name := COMPANYNAME;
                                    TmpCompany3.INSERT;
                                  END;
                                END;

               ReqFilterFields=Name }

    { 3182;1   ;DataItem;                    ;
               DataItemTable=Table23;
               DataItemTableView=SORTING(No.)
                                 WHERE(Subcontractor=CONST(Yes),
                                       WKA Check Not Active=CONST(No));
               OnPreDataItem=VAR
                               DocumentPrint@1100528400 : Codeunit 229;
                               Vendor2@1100525000 : Record 23;
                             BEGIN
                               DocumentPrint.GetReportSelection(6005, TmpReportSelections, FALSE);

                               VendorFilters.COPYFILTERS(Vendor);
                               Vendor.RESET;

                               IF TmpCompany3.FINDSET THEN BEGIN
                                 REPEAT
                                   Vendor2.CHANGECOMPANY(TmpCompany3.Name);
                                   Vendor2.COPYFILTERS(VendorFilters);
                                   IF Vendor2.FINDSET THEN
                                     REPEAT
                                       IF Vendor.GET(Vendor2."No.") THEN
                                         Vendor.MARK(TRUE);
                                     UNTIL Vendor2.NEXT = 0
                                 UNTIL TmpCompany3.NEXT = 0;
                                 MARKEDONLY(TRUE);
                               END;
                             END;

               OnAfterGetRecord=VAR
                                  Vendor2@1100528402 : Record 23;
                                  EMailSetup@1100528401 : Record 11229911;
                                  TempEmailAttachment@1100528403 : TEMPORARY Record 11229294;
                                  DocumentPrint@1100528400 : Codeunit 229;
                                  DocumentMailing@1100528405 : Codeunit 260;
                                  DataPrintedForVendor@1100528404 : Boolean;
                                BEGIN
                                  Vendor2.COPY(Vendor);
                                  Vendor2.SETRECFILTER;
                                  IF ("WKA Data Request by E-mail") AND ("E-Mail for WKA Data Request" <> '') THEN BEGIN
                                    StoreReportParameters;
                                    IF DocumentPrint.SaveAnyRecordReportAsPdf(
                                      Vendor2, EMailSetup.Usage::"90", Vendor2."Global Dimension 1 Code",
                                      TmpReportSelections."Report ID", FALSE, TempEmailAttachment)
                                    THEN
                                      DataPrintedForVendor := TRUE
                                    ELSE
                                      DataPrintedForVendor := FALSE;
                                    ReportParameterManagement.FlushReportParameters(TmpReportSelections."Report ID");
                                    IF NOT DataPrintedForVendor THEN
                                      CurrReport.SKIP;
                                    COMMIT;
                                    DocumentMailing.SetTempEmailAttachments(
                                      TempEmailAttachment);
                                    IF TempEmailAttachment.FINDFIRST THEN;
                                    DocumentMailing.EmailWKADataRequestFileFromVendor(
                                      Vendor2, TempEmailAttachment."Attachment Server File Path", FALSE);
                                  END ELSE BEGIN
                                    StoreReportParameters;
                                    REPORT.RUNMODAL(TmpReportSelections."Report ID", FALSE, FALSE, Vendor2);
                                    ReportParameterManagement.FlushReportParameters(TmpReportSelections."Report ID");
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                Vendor.COPYFILTERS(VendorFilters);
                              END;

               ReqFilterFields=No.,Blocked,Balance }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnInit=BEGIN
               DueDate := WORKDATE;
             END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1100485000;2;Field  ;
                  CaptionML=ENU=Due Date;
                  ToolTipML=ENU=You can select a Due Date here. All WKA Checks with a Due Date prior to the selected Due Date are printed.;
                  SourceExpr=DueDate }

      { 1100485002;2;Field  ;
                  CaptionML=ENU=Ignore Due Date Older Than;
                  SourceExpr=IgnoreDueDateOlderThan }

      { 1100525000;2;Field  ;
                  CaptionML=ENU=Apply Vendor Filter in other Companies;
                  SourceExpr=ApplyVendorFilterToOtherCompanies;
                  Editable=ApplyVendorFilterToOtherCompaniesEditable }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Company2@1100525005 : Record 2000000006;
      TmpCompany3@1100525000 : TEMPORARY Record 2000000006;
      VendorFilters@1100525002 : Record 23;
      CompanyFilters@1100525004 : Record 2000000006;
      TmpReportSelections@1100528500 : TEMPORARY Record 77;
      ReportParameterManagement@1100528503 : Codeunit 11012356;
      DueDate@1100485002 : Date;
      IgnoreDueDateOlderThan@1100485003 : Date;
      ApplyVendorFilterToOtherCompanies@1100525001 : Boolean INDATASET;
      ApplyVendorFilterToOtherCompaniesEditable@1100525003 : Boolean INDATASET;

    LOCAL PROCEDURE StoreReportParameters@1100528400();
    BEGIN
      ReportParameterManagement.StoreReportParameter(
        TmpReportSelections."Report ID", 'DueDate', DueDate, 0);
      ReportParameterManagement.StoreReportParameter(
        TmpReportSelections."Report ID", 'IgnoreDueDateOlderThan', IgnoreDueDateOlderThan, 0);
    END;

    PROCEDURE SetApplyVendorFilterToOtherCompaniesEditable@1100525004();
    VAR
      MarketingSetup@1100525000 : Record 5079;
    BEGIN
      MarketingSetup.GET;
      ApplyVendorFilterToOtherCompaniesEditable := MarketingSetup.Vendors;
    END;

    BEGIN
    {
      4PS01 JD 9 jan 2007 call 7371, execute WKA check using due date
    }
    END.
  }
  RDLDATA
  {
  }
}

