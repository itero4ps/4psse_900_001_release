OBJECT Report 11012199 Sel. Export Ref. Data (FSA)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Export Reference Data FSA (Selection);
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   FSASetupRec.GET('');
                   InitExport();
                 END;

    OnPreReport=BEGIN
                  CheckExportSelection();
                  ImportExportMgtCU.ExportReferenceData(
                    "Unit of Measure",
                    CostObject,
                    CostCentre,
                    "Cost Component",
                    OrderKind,
                    OrderType,
                    Problem,
                    Cause,
                    Solution,
                    Discipline,
                    "Trade Speciality",
                    "Trade Expertise",
                    "Wage Component",
                    "Cost Code",
                    "Reference Point",
                    "Debrief Text Rubric",
                    "Trade Association",
                    Territory
                    );
                  COMMIT;
                  CurrReport.QUIT;
                END;

  }
  DATASET
  {
    { 7182;    ;DataItem;                    ;
               DataItemTable=Table204;
               DataItemTableView=SORTING(Code);
               ReqFilterHeadingML=ENU=Unit;
               ReqFilterFields=Code }

    { 6608;    ;DataItem;CostObject          ;
               DataItemTable=Table349;
               DataItemTableView=SORTING(Code,Global Dimension No.)
                                 WHERE(Global Dimension No.=CONST(2));
               ReqFilterHeadingML=ENU=Cst.Obj.;
               ReqFilterFields=Code }

    { 5941;    ;DataItem;CostCentre          ;
               DataItemTable=Table349;
               DataItemTableView=SORTING(Code,Global Dimension No.)
                                 WHERE(Global Dimension No.=CONST(1));
               ReqFilterHeadingML=ENU=Cst.Centre;
               ReqFilterFields=Code }

    { 7040;    ;DataItem;                    ;
               DataItemTable=Table11012012;
               DataItemTableView=SORTING(Code);
               ReqFilterHeadingML=ENU=Cst.Comp.;
               ReqFilterFields=Code }

    { 9512;    ;DataItem;OrderKind           ;
               DataItemTable=Table11012837;
               DataItemTableView=SORTING(Indication,Code)
                                 WHERE(Indication=CONST(Kind));
               ReqFilterHeadingML=ENU=Order Kind;
               ReqFilterFields=Code }

    { 4228;    ;DataItem;OrderType           ;
               DataItemTable=Table11012837;
               DataItemTableView=SORTING(Indication,Code)
                                 WHERE(Indication=CONST(Type));
               ReqFilterHeadingML=ENU=Order Type;
               ReqFilterFields=Code }

    { 2182;    ;DataItem;Problem             ;
               DataItemTable=Table11012842;
               DataItemTableView=SORTING(Analysis Type,Code)
                                 WHERE(Analysis Type=CONST(Problem));
               ReqFilterHeadingML=ENU=Problem;
               ReqFilterFields=Code }

    { 6932;    ;DataItem;Cause               ;
               DataItemTable=Table11012842;
               DataItemTableView=SORTING(Analysis Type,Code)
                                 WHERE(Analysis Type=CONST(Cause));
               ReqFilterHeadingML=ENU=Cause;
               ReqFilterFields=Code }

    { 2134;    ;DataItem;Solution            ;
               DataItemTable=Table11012842;
               DataItemTableView=SORTING(Analysis Type,Code)
                                 WHERE(Analysis Type=CONST(Solution));
               ReqFilterHeadingML=ENU=Solution;
               ReqFilterFields=Code }

    { 5837;    ;DataItem;                    ;
               DataItemTable=Table11020204;
               DataItemTableView=SORTING(Code);
               ReqFilterFields=Code }

    { 9125;    ;DataItem;                    ;
               DataItemTable=Table11020285;
               DataItemTableView=SORTING(Code);
               ReqFilterFields=Code }

    { 8184;    ;DataItem;                    ;
               DataItemTable=Table11020286;
               DataItemTableView=SORTING(Code);
               ReqFilterHeadingML=ENU=Expertise;
               ReqFilterFields=Code }

    { 8732;    ;DataItem;                    ;
               DataItemTable=Table11012014;
               DataItemTableView=SORTING(Code);
               ReqFilterHeadingML=ENU=Wage Comp.;
               ReqFilterFields=Code }

    { 3069;    ;DataItem;                    ;
               DataItemTable=Table11012083;
               DataItemTableView=SORTING(Code);
               ReqFilterHeadingML=ENU=Cst.Code;
               ReqFilterFields=Code }

    { 5165;    ;DataItem;                    ;
               DataItemTable=Table11020271;
               DataItemTableView=SORTING(No.);
               ReqFilterFields=No. }

    { 5753;    ;DataItem;                    ;
               DataItemTable=Table11012885;
               DataItemTableView=SORTING(Code);
               ReqFilterHeadingML=ENU=Text Rubric;
               ReqFilterFields=Code }

    { 7175;    ;DataItem;                    ;
               DataItemTable=Table11012015;
               DataItemTableView=SORTING(Code);
               ReqFilterHeadingML=ENU=Trade Ass.;
               ReqFilterFields=Code }

    { 5016;    ;DataItem;                    ;
               DataItemTable=Table286;
               DataItemTableView=SORTING(Code);
               ReqFilterHeadingML=ENU=Terr.;
               ReqFilterFields=Code }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  Name=Units of Measure;
                  CaptionML=ENU=Units of Measure;
                  SourceExpr=ExportUnits }

      { 1100525003;2;Field  ;
                  Name=Cost Objects;
                  CaptionML=ENU=Cost Objects;
                  SourceExpr=ExportCostObjects }

      { 1100525004;2;Field  ;
                  Name=Cost Centres;
                  CaptionML=ENU=Cost Centres;
                  SourceExpr=ExportCostCentres;
                  OnValidate=BEGIN
                               IF ExportCostCentres THEN BEGIN
                                 IF FSASetupRec."Field Service Administration" = FSASetupRec."Field Service Administration"::FieldVision THEN BEGIN
                                   ERROR(Text001, FSASetupRec."Field Service Administration");  //*Uitgeschakeld voor FV (zie verder XML-port 11012022)
                                 END;
                               END;
                             END;
                              }

      { 1100525005;2;Field  ;
                  Name=Cost Components;
                  CaptionML=ENU=Cost Components;
                  SourceExpr=ExportCostComponents }

      { 1100525006;2;Field  ;
                  Name=Order Kinds;
                  CaptionML=ENU=Order Kinds;
                  SourceExpr=ExportOrderKinds }

      { 1100525007;2;Field  ;
                  Name=Order Types;
                  CaptionML=ENU=Order Types;
                  SourceExpr=ExportOrderTypes }

      { 1100525008;2;Field  ;
                  Name=Problems;
                  CaptionML=ENU=Problems;
                  SourceExpr=ExportProblems }

      { 1100525009;2;Field  ;
                  Name=Causes;
                  CaptionML=ENU=Causes;
                  SourceExpr=ExportCauses }

      { 1100525010;2;Field  ;
                  Name=Solutions;
                  CaptionML=ENU=Solutions;
                  SourceExpr=ExportSolutions }

      { 1100525011;2;Field  ;
                  Name=Disciplines;
                  CaptionML=ENU=Disciplines;
                  SourceExpr=ExportDisciplines }

      { 1100525012;2;Field  ;
                  Name=Trade Specialities;
                  CaptionML=ENU=Trade Specialities;
                  SourceExpr=ExportTradeSpecialities }

      { 1100525013;2;Field  ;
                  Name=Trade Expertises;
                  CaptionML=ENU=Trade Expertises;
                  SourceExpr=ExportTradeExpertise }

      { 1100525014;2;Field  ;
                  Name=Wage Components;
                  CaptionML=ENU=Wage Components;
                  SourceExpr=ExportWageComponents }

      { 1100525015;2;Field  ;
                  Name=CostCodes;
                  CaptionML=ENU=CostCodes;
                  SourceExpr=ExportCostCodes }

      { 1100525016;2;Field  ;
                  Name=Reference Points;
                  CaptionML=ENU=Reference Points;
                  SourceExpr=ExportRefPoints;
                  OnValidate=BEGIN
                               IF ExportRefPoints THEN BEGIN
                                 IF FSASetupRec."Field Service Administration" = FSASetupRec."Field Service Administration"::FieldVision THEN BEGIN
                                   ERROR(Text001, FSASetupRec."Field Service Administration");  //*Uitgeschakeld voor FV (zie verder XML-port 11012022)
                                 END;
                               END;
                             END;
                              }

      { 1100525017;2;Field  ;
                  Name=Debrief Text Rubric;
                  CaptionML=ENU=Debrief Text Rubric;
                  SourceExpr=ExportDebrTextRubric }

      { 1100525018;2;Field  ;
                  Name=Trade Associations;
                  CaptionML=ENU=Trade Associations;
                  SourceExpr=ExportTradeAssociations;
                  OnValidate=BEGIN
                               IF ExportTradeAssociations THEN BEGIN
                                 IF FSASetupRec."Field Service Administration" = FSASetupRec."Field Service Administration"::FieldVision THEN BEGIN
                                   ERROR(Text001, FSASetupRec."Field Service Administration");  //*Uitgeschakeld voor FV (zie verder XML-port 11012022)
                                 END;
                               END;
                             END;
                              }

      { 1100525019;2;Field  ;
                  Name=Territories;
                  CaptionML=ENU=Territories;
                  SourceExpr=ExportTerritories;
                  OnValidate=BEGIN
                               IF ExportTerritories THEN BEGIN
                                 IF FSASetupRec."Field Service Administration" = FSASetupRec."Field Service Administration"::FieldVision THEN BEGIN
                                   ERROR(Text001, FSASetupRec."Field Service Administration");  //*Uitgeschakeld voor FV (zie verder XML-port 11012022)
                                 END;
                               END;
                             END;
                              }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FSASetupRec@1100485016 : Record 11012138;
      ImportExportMgtCU@1100485000 : Codeunit 11012090;
      ExportUnits@1100485001 : Boolean;
      ExportCostObjects@1100485002 : Boolean;
      ExportCostCentres@1100485018 : Boolean;
      ExportCostComponents@1100485012 : Boolean;
      ExportOrderKinds@1100485003 : Boolean;
      ExportOrderTypes@1100485004 : Boolean;
      ExportProblems@1100485005 : Boolean;
      ExportCauses@1100485006 : Boolean;
      ExportSolutions@1100485007 : Boolean;
      ExportDisciplines@1100485008 : Boolean;
      ExportTradeSpecialities@1100485009 : Boolean;
      ExportTradeExpertise@1100485010 : Boolean;
      ExportWageComponents@1100485011 : Boolean;
      ExportCostCodes@1100485013 : Boolean;
      ExportRefPoints@1100485014 : Boolean;
      ExportDebrTextRubric@1100485015 : Boolean;
      Text001@1100485017 : TextConst 'ENU=Export of this dat to ''%1'' is not allowed.';
      ExportTradeAssociations@1100485019 : Boolean;
      ExportTerritories@1100485020 : Boolean;

    PROCEDURE InitExport@1100485000();
    BEGIN
      //* Moeten elke keer bewust gezet worden, daarom bij aanroep deze selecties altijd uit zetten
      ExportUnits := FALSE;
      ExportCostObjects := FALSE;
      ExportCostCentres := FALSE;
      ExportCostComponents := FALSE;
      ExportOrderKinds := FALSE;
      ExportOrderTypes := FALSE;
      ExportProblems := FALSE;
      ExportCauses := FALSE;
      ExportSolutions := FALSE;
      ExportDisciplines := FALSE;
      ExportTradeSpecialities := FALSE;
      ExportTradeExpertise := FALSE;
      ExportWageComponents := FALSE;
      ExportCostCodes := FALSE;
      ExportRefPoints := FALSE;
      ExportDebrTextRubric := FALSE;
      ExportTradeAssociations := FALSE;
      ExportTerritories := FALSE;
    END;

    PROCEDURE CheckExportSelection@1100485002();
    BEGIN
      //* Als selectie niet aan staat dan filter zo zetten dat geen enkele binnen filter valt.
      //* In het filter '&' (AND) gebruiken, veld kan nooit gelijkertijd voldoen aan twee verschillende waarden.
      IF NOT ExportUnits THEN
        "Unit of Measure".SETFILTER(Code, '%1&%2', 'A', 'B');
      IF NOT ExportCostObjects THEN
        CostObject.SETFILTER(Code, '%1&%2', 'A', 'B');
      IF NOT ExportCostCentres THEN
        CostCentre.SETFILTER(Code, '%1&%2', 'A', 'B');
      IF NOT ExportCostComponents THEN
        "Cost Component".SETFILTER(Code, '%1&%2', 'A', 'B');
      IF NOT ExportOrderKinds THEN
        OrderKind.SETFILTER(Code, '%1&%2', 'A', 'B');
      IF NOT ExportOrderTypes THEN
        OrderType.SETFILTER(Code, '%1&%2', 'A', 'B');
      IF NOT ExportProblems THEN
        Problem.SETFILTER(Code, '%1&%2', 'A', 'B');
      IF NOT ExportCauses THEN
        Cause.SETFILTER(Code, '%1&%2', 'A', 'B');
      IF NOT ExportSolutions THEN
        Solution.SETFILTER(Code, '%1&%2', 'A', 'B');
      IF NOT ExportDisciplines THEN
        Discipline.SETFILTER(Code, '%1&%2', 'A', 'B');
      IF NOT ExportTradeSpecialities THEN
        "Trade Speciality".SETFILTER(Code, '%1&%2', 'A', 'B');
      IF NOT ExportTradeExpertise THEN
        "Trade Expertise".SETFILTER(Code, '%1&%2', 'A', 'B');
      IF NOT ExportWageComponents THEN
        "Wage Component".SETFILTER(Code, '%1&%2', 'A', 'B');
      IF NOT ExportCostCodes THEN
        "Cost Code".SETFILTER(Code, '%1&%2', 'A', 'B');
      IF NOT ExportRefPoints THEN
        "Reference Point".SETFILTER("No.", '%1&%2', -1, -2);
      IF NOT ExportDebrTextRubric THEN
        "Debrief Text Rubric".SETFILTER(Code, '%1&%2', 'A', 'B');
      IF NOT ExportTradeAssociations THEN
        "Trade Association".SETFILTER(Code, '%1&%2', 'A', 'B');
      IF NOT ExportTerritories THEN
        Territory.SETFILTER(Code, '%1&%2', 'A', 'B');
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

