OBJECT Report 11012304 Update Item Data
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Update Item Data;
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   //db, 08-03-07: SaveValues=Yes at RequestForm; otherwise set defaults by SetSelection
                   //CheckBasicItem := TRUE;
                   //CheckNavisionItem := TRUE;
                   //LimitPriceDate := TODAY;

                   InvtSetup.GET;
                   //X016.sn
                   LeadingCompany := CompRelationRec.GetLeadingCompany(DATABASE::"Inventory Setup",InvtSetup."Central Management");
                   IF (InvtSetup."Central Management") AND (LeadingCompany <> COMPANYNAME) THEN
                   //X016.en
                     ERROR(Text000);
                 END;

  }
  DATASET
  {
    { 4881;    ;DataItem;                    ;
               DataItemTable=Table11012317;
               OnPreDataItem=BEGIN
                               status.OPEN(Text001);
                               LastUpdateTime := TIME;
                               NoOfLines := COUNT;
                               StatusCounter := 0;

                               SetFilterOnImportDateTime; //C026504

                               StartDateLog := CURRENTDATETIME;  //db, 08-03-13: C006329
                             END;

               OnAfterGetRecord=BEGIN
                                  StatusCounter := StatusCounter+1;

                                  IF (TIME > LastUpdateTime + 1000) THEN BEGIN
                                    status.UPDATE(1,ROUND(StatusCounter/NoOfLines*10000,1));
                                    LastUpdateTime := TIME;
                                  END;

                                  CalculatePricesCU.ProcessTradeItem("Trade Item",CheckNavisionItem);

                                  CommitCounter := CommitCounter + 1;
                                  IF CommitCounter = 50000 THEN BEGIN
                                    CommitCounter := 0;
                                    COMMIT;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                LogRec.UpdateLogbook(Text010, NoOfLines, 0, 0, StartDateLog);  //db, 08-03-13: C006329
                              END;

               ReqFilterFields=Vendor,Item Code }

    { 8148;    ;DataItem;                    ;
               DataItemTable=Table11012316;
               OnPreDataItem=BEGIN
                               IF NOT CheckBasicItem THEN CurrReport.BREAK;

                               status.OPEN(Text002);
                               NoOfLines := COUNT;
                               StatusCounter := 0;

                               StartDateLog := CURRENTDATETIME;  //db, 08-03-13: C006329
                             END;

               OnAfterGetRecord=BEGIN
                                  StatusCounter := StatusCounter+1;
                                  status.UPDATE(1,ROUND(StatusCounter/NoOfLines*10000,1));

                                  CalculatePricesCU.ProcessBasicItem("Basic Item",CheckNavisionItem);

                                  CommitCounter := CommitCounter + 1;
                                  IF CommitCounter = 50000 THEN BEGIN
                                    CommitCounter := 0;
                                    COMMIT;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                IF CheckBasicItem THEN BEGIN
                                  LogRec.UpdateLogbook(Text011, NoOfLines, 0, 0, StartDateLog);  //db, 08-03-13: C006329
                                  status.CLOSE;
                                END;
                              END;

               ReqFilterFields=Manufacturer,Product Code }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   CheckSelection;
                 END;

    }
    CONTROLS
    {
      { 1210190010;;Container;
                  ContainerType=ContentArea }

      { 1210190011;1;Group  ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 1210190012;2;Field  ;
                  CaptionML=ENU=Update Basic Item;
                  SourceExpr=CheckBasicItem }

      { 1210190013;2;Field  ;
                  CaptionML=ENU=Update Navision Item;
                  SourceExpr=CheckNavisionItem }

      { 1100525000;2;Field  ;
                  CaptionML=ENU=Import Date-Time Filter;
                  SourceExpr=ImportDateTimeFilter }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@11012023 : TextConst 'ENU=Transaction only allowed in company used as source for central itemmanagement';
      Text001@11012024 : TextConst 'ENU=Update Trade Item @1@@@@@@@@@@@@@@@@@@';
      status@11012010 : Dialog;
      NoOfLines@11012011 : Integer;
      StatusCounter@11012012 : Integer;
      CommitCounter@1100485004 : Integer;
      Text002@1100485000 : TextConst 'ENU=Update Basic Item @1@@@@@@@@@@@@@@@@@@';
      LastUpdateTime@1100485007 : Time;
      CalculatePricesCU@1100485011 : Codeunit 11012303;
      CheckNavisionItem@1100485003 : Boolean;
      CheckBasicItem@1100485001 : Boolean;
      InvtSetup@1100485002 : Record 313;
      LogRec@1100525002 : Record 11012335;
      Text010@1100525003 : TextConst 'ENU=Update Trade Item';
      Text011@1100525000 : TextConst 'ENU=Update Basic Item';
      StartDateLog@1100525001 : DateTime;
      LeadingCompany@1210190000 : Text[50];
      CompRelationRec@1210190001 : Record 11012059;
      ImportDateTimeFilter@1100525004 : DateTime;

    PROCEDURE CheckSelection@1100485001();
    VAR
      ImportSetup@1100485001 : Record 11012301;
    BEGIN
      IF CheckNavisionItem = FALSE THEN BEGIN
        ImportSetup.GET;
        CheckNavisionItem := ImportSetup."Update Navision Items";
      END;
    END;

    LOCAL PROCEDURE SetFilterOnImportDateTime@1100525000();
    VAR
      ApplicationMgt@1100525003 : Codeunit 1;
      DateTimeStr@1100525002 : Text;
      DateTimeDecimal@1100525001 : Decimal;
      SourceUsed@1100525000 : Integer;
    BEGIN
      //C026504
      IF ImportDateTimeFilter <> 0DT THEN BEGIN
        DateTimeStr := FORMAT(ImportDateTimeFilter,0,'<Standard Format,3>');
        DateTimeDecimal := ApplicationMgt."Eval Decimal"(DateTimeStr,STRLEN(DateTimeStr),SourceUsed,'DATETIME');
        "Trade Item".SETRANGE("Import Date-Time",DateTimeDecimal-0.5,DateTimeDecimal+0.5);
      END;
      //
    END;

    BEGIN
    {
      X016: multiple central management companies for 1 operating company (db, 22-08-11)
    }
    END.
  }
  RDLDATA
  {
  }
}

