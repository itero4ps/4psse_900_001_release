OBJECT Report 11012308 Create ICM Files
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Create ICM Files;
    ProcessingOnly=Yes;
    OnPostReport=VAR
                   ErrorRec@1210190000 : Record 11012051;
                   PurchaseHeader@1100525000 : Record 38;
                   Command@1100525004 : Text[1024];
                 BEGIN
                   IF SendToVendor THEN  BEGIN
                     IF TempVendorRec.FIND('-') THEN BEGIN
                       REPEAT
                         IF TempVendorRec."ICM Batch" <> '' THEN BEGIN
                           Command := STRSUBSTNO('"%1"', TempVendorRec."ICM Batch");
                           OperatingSystemMgt.ClientShell(Command, '', FALSE);

                           //mg.sn, 07-12-10: M23782
                           TempPurchaseHeader.SETRANGE("Buy-from Vendor No.", TempVendorRec."No.");
                           IF TempPurchaseHeader.FINDSET THEN
                             REPEAT
                               IF PurchaseHeader.GET(TempPurchaseHeader."Document Type", TempPurchaseHeader."No.") THEN BEGIN
                                 PurchaseHeader."ICM File Sent" := TRUE;
                                 PurchaseHeader.MODIFY;
                               END;
                             UNTIL TempPurchaseHeader.NEXT = 0;
                           //mg.en, 07-12-10: M23782
                         END;
                       UNTIL TempVendorRec.NEXT = 0;
                     END;
                   END;

                   COMMIT;

                   ErrorRec.SETRANGE("User ID", USERID);
                   ErrorRec.SETRANGE("Source Type", ErrorRec."Source Type"::"ICM Export");
                   IF ErrorRec.FIND('-') THEN
                     PAGE.RUNMODAL(PAGE::Errors, ErrorRec);
                 END;

  }
  DATASET
  {
    { 4458;    ;DataItem;                    ;
               DataItemTable=Table38;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Order),
                                       ICM Login Code=FILTER(<>''));
               OnAfterGetRecord=VAR
                                  ExportICMOrders@1100525000 : XMLport 11012343;
                                  OrderOkay@1210190001 : Boolean;
                                  TempBlob@1100525002 : Record 99008535;
                                  PurchLine@1210190000 : Record 39;
                                  Vendor@1100485000 : Record 23;
                                  PurchPost@1100409000 : Codeunit 90;
                                  ThreeTierAutomationMgt@1100525003 : Codeunit 419;
                                  OStream@1100525004 : OutStream;
                                  PurchaseHeaderIsOK@1100525001 : Boolean;
                                BEGIN
                                  IF "ICM Status" > "ICM Status"::Create THEN
                                    IF NOT CONFIRM(Text000,FALSE,"No.","Buy-from Vendor No.") THEN
                                      CurrReport.SKIP;

                                  ExportICMOrders.SetSelection(
                                    "Purchase Header"."No.","Purchase Header"."Buy-from Vendor No.",FALSE,TruncateAddress);
                                  PurchaseHeaderIsOK := ExportICMOrders.CheckPurchHeader("Purchase Header");

                                  IF PurchaseHeaderIsOK THEN BEGIN
                                    PurchLine.SETRANGE("Document Type",PurchLine."Document Type"::Order);
                                    PurchLine.SETRANGE("Document No.","No.");
                                    PurchLine.SETRANGE("Removal Contribution",FALSE);
                                    IF PurchLine.FINDSET THEN BEGIN
                                      REPEAT
                                        OrderOkay := ExportICMOrders.CheckPurchLine(PurchLine);
                                        IF NOT OrderOkay THEN
                                          EXIT;
                                      UNTIL PurchLine.NEXT = 0;
                                    END;

                                    IF OrderOkay THEN BEGIN
                                      TempBlob.Blob.CREATEOUTSTREAM(OStream);
                                      ExportICMOrders.SETDESTINATION(OStream);
                                      ExportICMOrders.EXPORT;
                                      ThreeTierAutomationMgt.BLOBExport4PS(TempBlob, ExportICMOrders.FILENAME, FALSE, TRUE);
                                      //FIND('='); //call 27410 call C003195
                                      GET("Document Type", "Purchase Header"."No."); //call C003195
                                      IF SendToVendor THEN BEGIN
                                        IF NOT TempVendorRec.GET("Buy-from Vendor No.") THEN BEGIN
                                          IF Vendor.GET("Buy-from Vendor No.") THEN BEGIN
                                            TempVendorRec.TRANSFERFIELDS(Vendor);
                                            IF TempVendorRec.INSERT THEN;
                                          END;
                                        END;
                                        //mg.sn, 07-12-10: M23782
                                        TempPurchaseHeader.TRANSFERFIELDS("Purchase Header");
                                        TempPurchaseHeader.INSERT;
                                        //mg.en, 07-12-10: M23782
                                      END;
                                      //C000138
                                      IF (DirectPostOrder = DirectPostOrder::Default) THEN
                                        IF Vendor.GET("Buy-from Vendor No.") THEN
                                          IF Vendor."Direct Receipt" = Vendor."Direct Receipt"::Yes THEN
                                            IF Vendor."Direct Post Order ICM" THEN BEGIN
                                              Receive := TRUE;
                                              PurchPost.RUN("Purchase Header");
                                              //FIND('='); //call 27410 call C003195
                                              GET("Document Type", "Purchase Header"."No."); //call C003195
                                            END;
                                      //C000138
                                      CASE ChangeStatus OF
                                        ChangeStatus::Released:
                                          ReleasePurchDoc.RUN("Purchase Header");
                                        ChangeStatus::Closed:
                                          ReleasePurchDoc.Close("Purchase Header");
                                      END;
                                    END;
                                  END;
                                END;

               ReqFilterFields=No.,Buy-from Vendor No.,ICM Status }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   DirectPostOrder := DirectPostOrder::Default;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1100485000;2;Field  ;
                  Name=SendToVendor;
                  CaptionML=ENU=Send to Vendor;
                  SourceExpr=SendToVendor }

      { 1100485003;2;Field  ;
                  Name=ChangeStatus;
                  CaptionML=ENU=Change Status;
                  OptionCaptionML=ENU=None,Released,Closed;
                  SourceExpr=ChangeStatus }

      { 1100485002;2;Field  ;
                  Name=DirectPostOrder;
                  CaptionML=ENU=Direct Post Order;
                  OptionCaptionML=ENU=Default,Not;
                  SourceExpr=DirectPostOrder }

      { 1100525000;2;Field  ;
                  Name=TruncateAddress;
                  CaptionML=ENU=Truncate Address;
                  SourceExpr=TruncateAddress }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@11012000 : TextConst 'ENU=ICM file for Order %1 Vendor %2 already created, again ?';
      SendToVendor@1100485000 : Boolean;
      TempVendorRec@1100485001 : TEMPORARY Record 23;
      TempPurchaseHeader@1100525001 : TEMPORARY Record 38;
      ChangeStatus@1100485002 : 'None,Released,Closed';
      ReleasePurchDoc@1100485003 : Codeunit 415;
      FileMgt@1100525500 : Codeunit 419;
      OperatingSystemMgt@1100409000 : Codeunit 11012364;
      DirectPostOrder@1100485004 : 'Default,Not';
      TruncateAddress@1100525000 : Boolean;

    PROCEDURE SetSendToVendor@1210190000(YesNo@1210190000 : Boolean);
    BEGIN
      SendToVendor := YesNo;
    END;

    BEGIN
    {
      db, 25-02-10: options for TrialOrder moved to report 11012323 (create ICK-files)
    }
    END.
  }
  RDLDATA
  {
  }
}

