OBJECT Report 11012389 Create Project Material Req.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Create Project Material Req.;
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  Project@1100528400 : Record 11072003;
                BEGIN
                  Project.GET(ProjectNo); //kkleermaker.n, 110908, M29021
                  CheckProcessedProjMatReqLines;
                  DeleteCurrentProjMatReqLines(ProjectNo);
                END;

  }
  DATASET
  {
    { 5077;    ;DataItem;                    ;
               DataItemTable=Table11020663;
               DataItemTableView=SORTING(Project No.,Yard No.,Entity Type,System No.,Entity No.,Line No.);
               OnPreDataItem=BEGIN
                               SETRANGE("Project No.", ProjectNo);
                               SETFILTER("Item Category Code", ItemCategoryFilter);
                             END;

               OnAfterGetRecord=BEGIN
                                  CheckItemData("Item No.", "Variant Code");
                                END;
                                 }

    { 8372;1   ;DataItem;                    ;
               DataItemTable=Table11012010;
               DataItemTableView=SORTING(Project No.,Element);
               OnPreDataItem=BEGIN
                               IF ElementFilter <> '' THEN
                                 SETFILTER(Element, ElementFilter);
                               SetElmntTypeFilterOnProjElmnt("Project Element");
                             END;

               OnAfterGetRecord=BEGIN
                                  CreateProjMatReqLineForElmnt("Assembly Object Mat. Req. Line", "Project Element");
                                END;

               DataItemLink=Project No.=FIELD(Project No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  Name=Project No.;
                  CaptionML=ENU=Project No.;
                  SourceExpr=ProjectNo;
                  TableRelation=Job.No.;
                  Editable=FALSE }

      { 1100525003;2;Field  ;
                  Name=Element Type Filter;
                  CaptionML=ENU=Element Type Filter;
                  OptionCaptionML=ENU=" ,Production,Installation";
                  SourceExpr=ElementTypeFilter }

      { 1100525004;2;Field  ;
                  Name=Element Filter;
                  CaptionML=ENU=Element Filter;
                  SourceExpr=ElementFilter;
                  OnLookup=VAR
                             ProjectElement@1100525000 : Record 11012010;
                           BEGIN
                             //kkleermaker, 110908, M29021
                             ProjectElement.SETRANGE("Project No.", ProjectNo);
                             IF ElementTypeFilter = ElementTypeFilter::Production THEN
                               ProjectElement.SETRANGE("Element Type", ProjectElement."Element Type"::Production);
                             IF ElementTypeFilter = ElementTypeFilter::Installation THEN
                               ProjectElement.SETRANGE("Element Type", ProjectElement."Element Type"::Installation);
                             IF PAGE.RUNMODAL(0, ProjectElement) = ACTION::LookupOK THEN
                               ElementFilter := ProjectElement.Element;
                           END;
                            }

      { 1100525005;2;Field  ;
                  Name=Item Category Filter;
                  CaptionML=ENU=Item Category Filter;
                  SourceExpr=ItemCategoryFilter;
                  OnLookup=VAR
                             ItemCategory@1100525000 : Record 5722;
                           BEGIN
                             //kkleermaker, 110929, M29189
                             IF PAGE.RUNMODAL(0, ItemCategory) = ACTION::LookupOK THEN
                               ItemCategoryFilter := ItemCategory.Code;
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1210190000 : TextConst 'ENU=%1s of more than 1 %2 have been selected.';
      Text001@1100528400 : TextConst 'ENU=No %1 has been found.';
      ProjectNo@1210190001 : Code[20];
      ElementFilter@1210190002 : Code[250];
      ElementTypeFilter@1210190003 : ' ,Production,Installation';
      ItemCategoryFilter@1210190004 : Code[250];
      Text002@1100528401 : TextConst 'ENU=There are already processed %1s for %2 %3 and %4 %5. Do you want to continue?';

    LOCAL PROCEDURE CheckItemData@1210190001(ItemNo@1210190000 : Code[20];VariantCode@1210190001 : Code[10]);
    VAR
      Item@1210190002 : Record 27;
      ItemVariant@1210190003 : Record 5401;
    BEGIN
      Item.GET(ItemNo);
      IF VariantCode <> '' THEN
        ItemVariant.GET(ItemNo, VariantCode);
    END;

    LOCAL PROCEDURE CreateProjMatReqLineForElmnt@1100528405(AssemblyObjectMatReqLine@1210190000 : Record 11020663;ProjectElement@1100528400 : Record 11012010);
    VAR
      AssemblyYardNumberObject@1100528402 : Record 11020596;
      AssignedQty@1100528401 : Decimal;
    BEGIN
      AssignedQty := GetObjectElementAssignedQty(ProjectElement, AssemblyObjectMatReqLine);
      IF AssignedQty > 0 THEN
        CreateProjMatReqLine(
          AssemblyObjectMatReqLine,
          ProjectElement,
          AssignedQty);
    END;

    LOCAL PROCEDURE CreateProjMatReqLine@1100528415(AssemblyObjectMatReqLine@1210190000 : Record 11020663;ProjectElement@1100528401 : Record 11012010;AssignedQuantity@1100528403 : Decimal);
    VAR
      ProjectMaterialReqLine@1100528402 : Record 11012526;
    BEGIN
      ProjectMaterialReqLine."Project No." := AssemblyObjectMatReqLine."Project No.";
      ProjectMaterialReqLine."Yard No." := AssemblyObjectMatReqLine."Yard No.";
      ProjectMaterialReqLine."Entity Type" := AssemblyObjectMatReqLine."Entity Type";
      ProjectMaterialReqLine."System No." := AssemblyObjectMatReqLine."System No.";
      ProjectMaterialReqLine."Entity No." := AssemblyObjectMatReqLine."Entity No.";
      ProjectMaterialReqLine.VALIDATE("Item No.", '');//Necessary to activate OnValidate.
      ProjectMaterialReqLine.VALIDATE("Item No.", AssemblyObjectMatReqLine."Item No.");
      ProjectMaterialReqLine.Description:= AssemblyObjectMatReqLine.Description;
      ProjectMaterialReqLine.Description2:= AssemblyObjectMatReqLine."Description 2";
      //kkleermaker.sn, 110823, M28683
      ProjectMaterialReqLine."Item Category Code" := AssemblyObjectMatReqLine."Item Category Code";
      //kkleermaker.en, 110823, M28683
      ProjectMaterialReqLine."Variant Code" := AssemblyObjectMatReqLine."Variant Code";
      ProjectMaterialReqLine.Element := ProjectElement.Element;
      ProjectMaterialReqLine."Delivery Date" := ProjectElement."Starting Date";
      ProjectMaterialReqLine.Quantity := AssignedQuantity * AssemblyObjectMatReqLine.Quantity;
      ProjectMaterialReqLine."Line No." := GetFirstFreeLineNo(ProjectMaterialReqLine);
      //kkleermaker.sn, 110930, M29193
      ProjectMaterialReqLine.Origin := ProjectMaterialReqLine.Origin::"Assembly Object Material Requirement";
      //kkleermaker.en, 110930, M29193
      ProjectMaterialReqLine."Unique Traceable" := TRUE;
      ProjectMaterialReqLine."Exclude Logistics" := FALSE;
      ProjectMaterialReqLine.FillCreatedByOn();
      ProjectMaterialReqLine.INSERT;
      //kkleermaker.sn, 110908, M29019
      AssemblyObjectMatReqLine.CopyPurLineDetailToMatReqLine(ProjectMaterialReqLine."Line No.");
      //kkleermaker.en, 110908, M29019
      //kkleermaker.sn, 110929, M29188
      AssemblyObjectMatReqLine.CopyDocLinksToMatReqLine(ProjectMaterialReqLine);
      //kkleermaker.en, 110929, M29188
    END;

    LOCAL PROCEDURE GetFirstFreeLineNo@1100528400(ProjectMaterialReqLine@1100528400 : Record 11012526) : Integer;
    VAR
      ProjectMaterialReqLine2@1100528401 : Record 11012526;
    BEGIN
      ProjectMaterialReqLine2.SETRANGE("Project No.", ProjectMaterialReqLine."Project No.");
      ProjectMaterialReqLine2.SETRANGE("Yard No.", ProjectMaterialReqLine."Yard No.");
      ProjectMaterialReqLine2.SETRANGE("System No.", ProjectMaterialReqLine."System No.");
      ProjectMaterialReqLine2.SETRANGE("Entity Type", ProjectMaterialReqLine."Entity Type");
      ProjectMaterialReqLine2.SETRANGE("Entity No.", ProjectMaterialReqLine."Entity No.");

      IF ProjectMaterialReqLine2.FINDLAST THEN
        EXIT(ProjectMaterialReqLine2."Line No." + 10000)
      ELSE
        EXIT(10000);
    END;

    LOCAL PROCEDURE DeleteCurrentProjMatReqLines@1210190004(ProjectNo@1210190000 : Code[20]);
    VAR
      ProjectMaterialReqLine@1210190001 : Record 11012526;
      ProjectElement@1210190002 : Record 11012010;
    BEGIN
      ProjectMaterialReqLine.SETRANGE("Project No.", ProjectNo);
      ProjectMaterialReqLine.SETRANGE(Origin, ProjectMaterialReqLine.Origin::"Assembly Object Material Requirement");
      //ProjectMaterialReqLine.SETRANGE(Processed, FALSE);  //db.o, 09-10-15
      ProjectMaterialReqLine.SETFILTER("Advice Order Line No.", '%1', 0);  //db.n, 09-10-15
      ProjectMaterialReqLine.SETFILTER("Item Category Code", ItemCategoryFilter); //kkleermaker.n, 110929, M29189

      //kkleermaker.sn, 110929, M29189
      ProjectElement.SETRANGE("Project No.", ProjectNo);
      IF ElementFilter <> '' THEN
        ProjectElement.SETFILTER(Element, ElementFilter);
      SetElmntTypeFilterOnProjElmnt(ProjectElement);

      IF ProjectElement.FINDSET THEN
        REPEAT
          ProjectMaterialReqLine.SETRANGE(Element, ProjectElement.Element);
      //kkleermaker.en, 110929, M29189
          ProjectMaterialReqLine.DELETEALL(TRUE);
        UNTIL ProjectElement.NEXT = 0; //kkleermaker.n, 110929, M29189
    END;

    PROCEDURE SetProjectNo@1210190003(ProjectNo2@1210190000 : Code[20]);
    BEGIN
      //kkleermaker, 110908, M29021
      ProjectNo := ProjectNo2;
    END;

    LOCAL PROCEDURE SetElmntTypeFilterOnProjElmnt@1100528402(VAR ProjectElement@1100528400 : Record 11012010);
    BEGIN
      IF ElementTypeFilter = ElementTypeFilter::Production THEN
        ProjectElement.SETRANGE("Element Type", ProjectElement."Element Type"::Production);
      IF ElementTypeFilter = ElementTypeFilter::Installation THEN
        ProjectElement.SETRANGE("Element Type", ProjectElement."Element Type"::Installation);
    END;

    LOCAL PROCEDURE CheckProcessedProjMatReqLines@1100528404();
    VAR
      AssemblyObjectMatReqLine@1100528402 : Record 11020663;
      ProjectMaterialReqLine@1100528400 : Record 11012526;
      ProjectElement@1100528401 : Record 11012010;
    BEGIN
      // This function checks if there are already processed project material req. lines
      // for an element and item category code for which new project material req. lines
      // will be created. This is to prevent that a project material req. line will be
      // ordered twice.
      AssemblyObjectMatReqLine.SETRANGE("Project No.", ProjectNo);
      AssemblyObjectMatReqLine.SETFILTER("Item Category Code", ItemCategoryFilter);

      ProjectElement.SETRANGE("Project No.", ProjectNo);
      IF ElementFilter <> '' THEN
        ProjectElement.SETFILTER(Element, ElementFilter);
      SetElmntTypeFilterOnProjElmnt(ProjectElement);

      IF ProjectElement.FINDSET THEN
        REPEAT
          IF AssemblyObjectMatReqLine.FINDSET THEN
            REPEAT
              IF (GetObjectElementAssignedQty(ProjectElement, AssemblyObjectMatReqLine) > 0) AND
                 LinesExistForElmntAndItemCat(ProjectElement, AssemblyObjectMatReqLine)
              THEN
                IF CONFIRM(
                    Text002,
                    FALSE,
                    ProjectMaterialReqLine.TABLECAPTION,
                    ProjectMaterialReqLine.FIELDCAPTION(Element),
                    ProjectElement.Element,
                    ProjectMaterialReqLine.FIELDCAPTION("Item Category Code"),
                    AssemblyObjectMatReqLine."Item Category Code")
                THEN
                  EXIT
                ELSE
                  ERROR('');
            UNTIL AssemblyObjectMatReqLine.NEXT = 0;
        UNTIL ProjectElement.NEXT = 0;
    END;

    LOCAL PROCEDURE GetObjectElementAssignedQty@1100528410(ProjectElement@1100528400 : Record 11012010;AssemblyObjectMatReqLine@1100528401 : Record 11020663) : Decimal;
    VAR
      AssemblyYardNumberObject@1100528402 : Record 11020596;
    BEGIN
      AssemblyYardNumberObject.GET(
        AssemblyObjectMatReqLine."Project No.",
        AssemblyObjectMatReqLine."Yard No.",
        AssemblyObjectMatReqLine."Entity Type",
        AssemblyObjectMatReqLine."System No.",
        AssemblyObjectMatReqLine."Entity No.");
      AssemblyYardNumberObject.SETFILTER("Element Filter", ProjectElement.Element);
      AssemblyYardNumberObject.CALCFIELDS("Assigned Quantity");
      EXIT(AssemblyYardNumberObject."Assigned Quantity");
    END;

    LOCAL PROCEDURE LinesExistForElmntAndItemCat@1100528409(ProjectElement@1100528401 : Record 11012010;AssemblyObjectMatReqLine@1100528400 : Record 11020663) : Boolean;
    VAR
      ProjectMaterialReqLine@1100528402 : Record 11012526;
    BEGIN
      ProjectMaterialReqLine.SETRANGE("Project No.", ProjectElement."Project No.");
      ProjectMaterialReqLine.SETRANGE(Origin, ProjectMaterialReqLine.Origin::"Assembly Object Material Requirement");
      //ProjectMaterialReqLine.SETRANGE(Processed, TRUE); //db.o, 09-10-15
      ProjectMaterialReqLine.SETFILTER("Advice Order Line No.", '<>%1', 0);  //db.n, 09-10-15
      ProjectMaterialReqLine.SETRANGE("Item Category Code", AssemblyObjectMatReqLine."Item Category Code");
      ProjectMaterialReqLine.SETRANGE(Element, ProjectElement.Element);
      EXIT(NOT ProjectMaterialReqLine.ISEMPTY);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

