OBJECT Report 11012526 Copy Buyer Management Data
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Copy Buyer Management Data;
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 6687;    ;DataItem;                    ;
               DataItemTable=Table11012501;
               DataItemTableView=SORTING(Project No.,Model);
               OnPreDataItem=BEGIN
                               IF NOT CopyHouseModel THEN
                                 CurrReport.BREAK;

                               SETRANGE("Project No.", ProjectFrom);
                               SETFILTER(Model, HouseModelFromFilter);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF HouseModelRec.GET(ProjectTo, Model) THEN
                                    CurrReport.SKIP;

                                  HouseModelRec := "House Model";
                                  HouseModelRec.VALIDATE("Project No.",ProjectTo);
                                  HouseModelRec.INSERT;
                                END;
                                 }

    { 1892;1   ;DataItem;HouseModelText      ;
               DataItemTable=Table11012511;
               DataItemTableView=SORTING(Table,Text Type,Project No.,House Model,Option Main Group,Option Sub Group,Option Group,Plot No.,Option,Quote No.,Quote Line No.,Text Line No.)
                                 WHERE(Table=CONST(House Model));
               OnAfterGetRecord=BEGIN
                                  BuyerMgtTextRec := HouseModelText;
                                  BuyerMgtTextRec."Project No." := ProjectTo;
                                  BuyerMgtTextRec.INSERT;
                                END;

               DataItemLink=Project No.=FIELD(Project No.),
                            House Model=FIELD(Model) }

    { 1791;1   ;DataItem;                    ;
               DataItemTable=Table11012508;
               DataItemTableView=SORTING(Project No.,Model,Unit);
               OnAfterGetRecord=BEGIN
                                  UnitsPerHouseModelRec := "Units per House Model";
                                  UnitsPerHouseModelRec."Project No." := ProjectTo;
                                  UnitsPerHouseModelRec.INSERT;
                                END;

               DataItemLink=Project No.=FIELD(Project No.),
                            Model=FIELD(Model) }

    { 7505;    ;DataItem;                    ;
               DataItemTable=Table11012509;
               DataItemTableView=SORTING(Project No.,Code);
               OnPreDataItem=BEGIN
                               IF NOT CopyMainGroup THEN
                                 CurrReport.BREAK;

                               SETRANGE("Project No.", ProjectFrom);
                               SETFILTER(Code, MainGroupFromFilter);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF MainGroupRec.GET(ProjectTo, Code) THEN
                                    CurrReport.SKIP;

                                  MainGroupRec := "Option Main Group";
                                  MainGroupRec."Project No." := ProjectTo;
                                  MainGroupRec.INSERT;
                                END;
                                 }

    { 3804;1   ;DataItem;MainGroupText       ;
               DataItemTable=Table11012511;
               DataItemTableView=SORTING(Table,Text Type,Project No.,House Model,Option Main Group,Option Sub Group,Option Group,Plot No.,Option,Quote No.,Quote Line No.,Text Line No.)
                                 WHERE(Table=CONST(Option Main Group));
               OnAfterGetRecord=BEGIN
                                  BuyerMgtTextRec := MainGroupText;
                                  BuyerMgtTextRec."Project No." := ProjectTo;
                                  BuyerMgtTextRec.INSERT;
                                END;

               DataItemLink=Project No.=FIELD(Project No.),
                            Option Main Group=FIELD(Code) }

    { 6030;    ;DataItem;                    ;
               DataItemTable=Table11012504;
               DataItemTableView=SORTING(Project No.,Code);
               OnPreDataItem=BEGIN
                               IF NOT CopyGroup THEN
                                 CurrReport.BREAK;

                               SETRANGE("Project No.", ProjectFrom);
                               SETFILTER(Code, GroupFromFilter);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF GroupRec.GET(ProjectTo, Code) THEN
                                    CurrReport.SKIP;

                                  GroupRec := "Option Group";
                                  GroupRec."Project No." := ProjectTo;
                                  GroupRec.INSERT;
                                END;
                                 }

    { 1680;1   ;DataItem;GroupText           ;
               DataItemTable=Table11012511;
               DataItemTableView=SORTING(Table,Text Type,Project No.,House Model,Option Main Group,Option Sub Group,Option Group,Plot No.,Option,Quote No.,Quote Line No.,Text Line No.)
                                 WHERE(Table=CONST(Option Group));
               OnAfterGetRecord=BEGIN
                                  BuyerMgtTextRec := GroupText;
                                  BuyerMgtTextRec."Project No." := ProjectTo;
                                  BuyerMgtTextRec.INSERT;
                                END;

               DataItemLink=Project No.=FIELD(Project No.),
                            Option Group=FIELD(Code) }

    { 5604;    ;DataItem;                    ;
               DataItemTable=Table11012505;
               DataItemTableView=SORTING(Project No.,Code);
               OnPreDataItem=BEGIN
                               IF NOT CopySubGroup THEN
                                 CurrReport.BREAK;

                               SETRANGE("Project No.", ProjectFrom);
                               SETFILTER(Code, SubGroupFromFilter);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF SubGroupRec.GET(ProjectTo, Code) THEN
                                    CurrReport.SKIP;

                                  SubGroupRec := "Option Sub Group";
                                  SubGroupRec."Project No." := ProjectTo;
                                  SubGroupRec.INSERT;
                                END;
                                 }

    { 4247;1   ;DataItem;SubGroupText        ;
               DataItemTable=Table11012511;
               DataItemTableView=SORTING(Table,Text Type,Project No.,House Model,Option Main Group,Option Sub Group,Option Group,Plot No.,Option,Quote No.,Quote Line No.,Text Line No.)
                                 WHERE(Table=CONST(Option Sub Group));
               OnAfterGetRecord=BEGIN
                                  BuyerMgtTextRec := SubGroupText;
                                  BuyerMgtTextRec."Project No." := ProjectTo;
                                  BuyerMgtTextRec.INSERT;
                                END;

               DataItemLink=Project No.=FIELD(Project No.),
                            Option Sub Group=FIELD(Code) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1210190001;2;Field  ;
                  Name=Project No.;
                  CaptionML=ENU=Project No.;
                  SourceExpr=ProjectFrom;
                  OnValidate=BEGIN
                               IF ProjectFrom <> '' THEN
                                 ProjectRec.GET(ProjectFrom);
                             END;

                  OnLookup=BEGIN
                             LookupProject(ProjectFrom);
                           END;
                            }

      { 1210190003;2;Field  ;
                  Name=Project To;
                  CaptionML=ENU=Project To;
                  SourceExpr=ProjectTo;
                  Editable=FALSE }

      { 1210190014;2;Field  ;
                  Name=House Type;
                  CaptionML=ENU=House Type;
                  SourceExpr=CopyHouseModel }

      { 1210190015;2;Field  ;
                  Name=Option Main Group;
                  CaptionML=ENU=Option Main Group;
                  SourceExpr=CopyMainGroup }

      { 1210190016;2;Field  ;
                  Name=Option Group;
                  CaptionML=ENU=Option Group;
                  SourceExpr=CopyGroup }

      { 1210190017;2;Field  ;
                  Name=Option Sub Group;
                  CaptionML=ENU=Option Sub Group;
                  SourceExpr=CopySubGroup }

      { 1100525000;1;Group  ;
                  CaptionML=ENU=Filters;
                  GroupType=Group }

      { 1210190011;2;Field  ;
                  Name=Model;
                  CaptionML=ENU=House Type;
                  SourceExpr=HouseModelFromFilter;
                  Editable=CopyHouseModel;
                  OnLookup=BEGIN
                             LookupHouseModelFilter(ProjectFrom, HouseModelFromFilter);
                           END;
                            }

      { 1210190010;2;Field  ;
                  Name=MGrp;
                  CaptionML=ENU=Option Main Group;
                  SourceExpr=MainGroupFromFilter;
                  Editable=CopyMainGroup;
                  OnLookup=BEGIN
                             LookupMainGroupFilter(ProjectFrom, MainGroupFromFilter);
                           END;
                            }

      { 1210190009;2;Field  ;
                  Name=Grp;
                  CaptionML=ENU=Option Group;
                  SourceExpr=GroupFromFilter;
                  Editable=CopyGroup;
                  OnLookup=BEGIN
                             LookupGroupFilter(ProjectFrom, GroupFromFilter);
                           END;
                            }

      { 1210190012;2;Field  ;
                  Name=SGrp;
                  CaptionML=ENU=Option Sub Group;
                  SourceExpr=SubGroupFromFilter;
                  Editable=CopySubGroup;
                  OnLookup=BEGIN
                             LookupSubgroupFilter(ProjectFrom, SubGroupFromFilter);
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ProjectRec@1210190006 : Record 11072003;
      HouseModelRec@1210190010 : Record 11012501;
      MainGroupRec@1210190009 : Record 11012509;
      GroupRec@1210190008 : Record 11012504;
      SubGroupRec@1210190007 : Record 11012505;
      BuyerMgtTextRec@1210190015 : Record 11012511;
      UnitsPerHouseModelRec@1100485000 : Record 11012508;
      CopyHouseModel@1210190011 : Boolean INDATASET;
      CopyMainGroup@1210190012 : Boolean INDATASET;
      CopyGroup@1210190013 : Boolean INDATASET;
      CopySubGroup@1210190014 : Boolean INDATASET;
      ProjectFrom@1210190005 : Code[20];
      ProjectTo@1210190004 : Code[20];
      HouseModelFromFilter@1210190003 : Code[250];
      MainGroupFromFilter@1210190002 : Code[250];
      GroupFromFilter@1210190001 : Code[250];
      SubGroupFromFilter@1210190000 : Code[250];

    PROCEDURE SetDefaults@1210190001(IProjectTo@1210190005 : Code[20];ICopyHouseModel@1210190003 : Boolean;ICopyMainGroup@1210190002 : Boolean;ICopyGroup@1210190001 : Boolean;ICopySubGroup@1210190000 : Boolean);
    BEGIN
      ProjectFrom := '';
      ProjectTo := IProjectTo;
      CopyHouseModel := ICopyHouseModel;
      CopyMainGroup := ICopyMainGroup;
      CopyGroup := ICopyGroup;
      CopySubGroup := ICopySubGroup;
      HouseModelFromFilter := '';
      MainGroupFromFilter := '';
      GroupFromFilter := '';
      SubGroupFromFilter := '';
    END;

    PROCEDURE LookupProject@1210190009(VAR IOProjectNo@1210190000 : Code[20]);
    BEGIN
      WITH ProjectRec DO BEGIN
        RESET;
        SETRANGE("Housebuilding Project", TRUE);
        "No." := IOProjectNo;
        IF PAGE.RUNMODAL(PAGE::"Job List",ProjectRec) = ACTION::LookupOK THEN
          IOProjectNo := "No.";
      END;
    END;

    PROCEDURE LookupHouseModelFilter@1210190010(IProjectNo@1210190001 : Code[20];VAR IOHouseModelFilter@1210190000 : Code[250]);
    BEGIN
      WITH HouseModelRec DO BEGIN
        RESET;
        IF IProjectNo <> '' THEN
          SETRANGE("Project No.", IProjectNo)
         ELSE
          SETRANGE("Project No.", '');
        IF IOHouseModelFilter <> '' THEN BEGIN
          SETFILTER(Model, IOHouseModelFilter);
          IF FIND('-') THEN;
          SETRANGE(Model);
        END;
        IF IProjectNo <> '' THEN BEGIN
          IF PAGE.RUNMODAL(PAGE::"House Models by Project List", HouseModelRec) = ACTION::LookupOK THEN
            IOHouseModelFilter := IOHouseModelFilter + Model;
        END ELSE BEGIN
          IF PAGE.RUNMODAL(PAGE::"House Model List", HouseModelRec) = ACTION::LookupOK THEN
            IOHouseModelFilter := IOHouseModelFilter + Model;
        END;
      END;
    END;

    PROCEDURE LookupMainGroupFilter@1210190008(IProjectNo@1210190001 : Code[20];VAR IOMainGroupFilter@1210190000 : Code[250]);
    BEGIN
      WITH MainGroupRec DO BEGIN
        RESET;
        IF ProjectFrom <> '' THEN
          SETRANGE("Project No.", IProjectNo)
         ELSE
          SETRANGE("Project No.", '');
        IF IOMainGroupFilter <> '' THEN BEGIN
          SETFILTER(Code, IOMainGroupFilter);
          IF FIND('-') THEN;
          SETRANGE(Code);
        END;
        IF IProjectNo <> '' THEN BEGIN
          IF PAGE.RUNMODAL(PAGE::"Project Option Main Group List", MainGroupRec) = ACTION::LookupOK THEN
            IOMainGroupFilter := IOMainGroupFilter + Code;
        END ELSE BEGIN
          IF PAGE.RUNMODAL(PAGE::"Option Main Group List", MainGroupRec) = ACTION::LookupOK THEN
            IOMainGroupFilter := IOMainGroupFilter + Code;
        END;
      END;
    END;

    PROCEDURE LookupGroupFilter@1210190007(IProjectNo@1210190001 : Code[20];VAR IOGroupFilter@1210190000 : Code[250]);
    BEGIN
      WITH GroupRec DO BEGIN
        RESET;
        IF ProjectFrom <> '' THEN
          SETRANGE("Project No.", IProjectNo)
         ELSE
          SETRANGE("Project No.", '');
        IF IOGroupFilter <> '' THEN BEGIN
          SETFILTER(Code, IOGroupFilter);
          IF FIND('-') THEN;
          SETRANGE(Code);
        END;
        IF IProjectNo <> '' THEN BEGIN
          IF PAGE.RUNMODAL(PAGE::"Project Option Groups", GroupRec) = ACTION::LookupOK THEN
            IOGroupFilter := IOGroupFilter + Code;
        END ELSE BEGIN
          IF PAGE.RUNMODAL(PAGE::"Option Groups", GroupRec) = ACTION::LookupOK THEN
            IOGroupFilter := IOGroupFilter + Code;
        END;
      END;
    END;

    PROCEDURE LookupSubgroupFilter@1210190006(IProjectNo@1210190001 : Code[20];VAR IOSubGroupFilter@1210190000 : Code[250]);
    BEGIN
      WITH SubGroupRec DO BEGIN
        RESET;
        IF ProjectFrom <> '' THEN
          SETRANGE("Project No.", IProjectNo)
         ELSE
          SETRANGE("Project No.", '');
        IF IOSubGroupFilter <> '' THEN BEGIN
          SETFILTER(Code, IOSubGroupFilter);
          IF FIND('-') THEN;
          SETRANGE(Code);
        END;
        IF IProjectNo <> '' THEN BEGIN
          IF PAGE.RUNMODAL(PAGE::"Project Option Sub Groups", SubGroupRec) = ACTION::LookupOK THEN
            IOSubGroupFilter := IOSubGroupFilter + Code;
        END ELSE BEGIN
          IF PAGE.RUNMODAL(PAGE::"Option Sub Groups", SubGroupRec) = ACTION::LookupOK THEN
            IOSubGroupFilter := IOSubGroupFilter + Code;
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

