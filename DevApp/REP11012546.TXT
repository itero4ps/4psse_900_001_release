OBJECT Report 11012546 Update Function Role Perm.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Update Function Role Permissions;
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 7966;    ;DataItem;                    ;
               DataItemTable=Table11020569;
               DataItemTableView=SORTING(Role ID);
               OnPreDataItem=BEGIN
                               LastUpdateTime := TIME;
                             END;

               OnAfterGetRecord=VAR
                                  FunctionProfileRole@1100525002 : Record 11020572;
                                  RoleGroupRole@1100525001 : Record 11020571;
                                  Permission@1100525000 : Record 2000000005;
                                  FunctionProfile@1100525004 : Record 11020569;
                                  TempUserRole@1210190000 : TEMPORARY Record 2000000004;
                                  FunctProfileOverwritePerm@1100525003 : Record 11229293;
                                BEGIN
                                  Permission.SETRANGE("Role ID","Role ID");
                                  IF NOT Permission.ISEMPTY THEN
                                    Permission.DELETEALL;

                                  PermissionLineCounter := 0;

                                  NoOfPermissionLines := CountNoOfPermissionLines("Role ID");
                                  Window.OPEN(STRSUBSTNO(Text002,"Role ID"));

                                  FunctionProfileRole.SETRANGE("Function Profile Role ID", "Role ID");
                                  IF FunctionProfileRole.FINDSET THEN
                                    REPEAT
                                      IF FunctionProfileRole.Type = FunctionProfileRole.Type::"Role Group" THEN BEGIN
                                        RoleGroupRole.SETRANGE("Role Group Code",FunctionProfileRole.Code);
                                        RoleGroupRole.SETRANGE("Role Disabled",FALSE);
                                        IF RoleGroupRole.FINDSET THEN
                                          REPEAT
                                            TempUserRole."Role ID" := RoleGroupRole."Role ID";
                                            IF TempUserRole.INSERT THEN
                                              UpdatePermissionLines(RoleGroupRole."Role ID", "Role ID");
                                          UNTIL RoleGroupRole.NEXT = 0;
                                      END ELSE BEGIN
                                        TempUserRole."Role ID" := FunctionProfileRole.Code;
                                        IF TempUserRole.INSERT THEN
                                          UpdatePermissionLines(FunctionProfileRole.Code, "Role ID");
                                      END;
                                    UNTIL FunctionProfileRole.NEXT = 0;

                                  FunctProfileOverwritePerm.SETRANGE("Function Profile ID","Role ID");
                                  IF FunctProfileOverwritePerm.FINDSET THEN
                                    REPEAT
                                      ReplaceTableDataPermission(FunctProfileOverwritePerm);
                                    UNTIL FunctProfileOverwritePerm.NEXT = 0;

                                  Window.CLOSE;
                                  CLEAR(TempUserRole);

                                  IF FunctionProfile.GET("Role ID") THEN BEGIN
                                    FunctionProfile."No. Of Roles in Profile Role" := TempUserRole.COUNT;
                                    FunctionProfile."Content Changed" := FALSE;
                                    FunctionProfile.MODIFY;
                                  END;
                                END;

               OnPostDataItem=VAR
                                Permission@1100525000 : Record 2000000005;
                              BEGIN
                                MESSAGE(Text001, Permission.TABLECAPTION);
                              END;

               ReqFilterFields=Role ID,Content Changed }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text001@1100525000 : TextConst 'ENU=%1s are updated';
      NoOfPermissionLines@1210190001 : Integer;
      PermissionLineCounter@1210190000 : Integer;
      Progress@1210190003 : Integer;
      LastUpdateTime@1210190002 : Time;
      Window@1210190004 : Dialog;
      Text002@1210190006 : TextConst 'ENU=Update Function Profile %1 @1@@@@@@@@@@@@@';

    PROCEDURE UpdatePermissionLines@1100525004(SourceRoleID@1100525001 : Code[20];TargetRoleID@1100525000 : Code[20]);
    VAR
      SourcePermission@1100525002 : Record 2000000005;
      TargetPermission@1100525003 : Record 2000000005;
    BEGIN
      WITH SourcePermission DO BEGIN
        SETRANGE("Role ID",SourceRoleID);
        IF FINDSET THEN
          REPEAT
            PermissionLineCounter := PermissionLineCounter + 1;
            UpdateProgressWindow(NoOfPermissionLines,PermissionLineCounter);
            IF NOT TargetPermission.GET(TargetRoleID,"Object Type","Object ID") THEN BEGIN
              TargetPermission.COPY(SourcePermission);
              TargetPermission."Role ID" := TargetRoleID;
              TargetPermission.INSERT(TRUE);
            END ELSE BEGIN
              CumulatePermission("Read Permission", TargetPermission."Read Permission");
              CumulatePermission("Insert Permission", TargetPermission."Insert Permission");
              CumulatePermission("Modify Permission", TargetPermission."Modify Permission");
              CumulatePermission("Delete Permission", TargetPermission."Delete Permission");
              CumulatePermission("Execute Permission", TargetPermission."Execute Permission");
              TargetPermission.MODIFY(TRUE);
            END;
          UNTIL NEXT =0;
      END;
    END;

    PROCEDURE CumulatePermission@1100525009(RoleOpt@1100525001 : ' ,Yes,Indirect';VAR FunctOpt@1100525000 : ' ,Yes,Indirect');
    BEGIN
      CASE FunctOpt OF
        FunctOpt::" ":
          FunctOpt := RoleOpt;
        FunctOpt::Indirect:
          IF RoleOpt = RoleOpt::Yes THEN
            FunctOpt := RoleOpt;
      END;
    END;

    PROCEDURE CountNoOfPermissionLines@1210190000(FunctionProfileRoleID@1210190000 : Code[20]) : Integer;
    VAR
      FunctionProfileRole@1210190004 : Record 11020572;
      RoleGroupRole@1210190003 : Record 11020571;
      Permission@1210190002 : Record 2000000005;
      NoOfPermissionLines@1210190001 : Integer;
    BEGIN
      FunctionProfileRole.SETRANGE("Function Profile Role ID",FunctionProfileRoleID);
      IF FunctionProfileRole.FINDSET THEN
        REPEAT
          IF FunctionProfileRole.Type = FunctionProfileRole.Type::"Role Group" THEN BEGIN
            RoleGroupRole.SETRANGE("Role Group Code",FunctionProfileRole.Code);
            RoleGroupRole.SETRANGE("Role Disabled",FALSE);
            IF RoleGroupRole.FINDSET THEN
              REPEAT
                Permission.SETRANGE("Role ID",RoleGroupRole."Role ID");
                NoOfPermissionLines := NoOfPermissionLines + Permission.COUNT;
              UNTIL RoleGroupRole.NEXT = 0;
          END ELSE BEGIN
            Permission.SETRANGE("Role ID",FunctionProfileRole.Code);
            NoOfPermissionLines := NoOfPermissionLines + Permission.COUNT;
          END;
        UNTIL FunctionProfileRole.NEXT = 0;

      EXIT(NoOfPermissionLines);
    END;

    PROCEDURE UpdateProgressWindow@9(NoOfRecords@1210190000 : Integer;NewProgress@11012000 : Integer);
    BEGIN
      IF NoOfRecords > 0 THEN BEGIN
        NewProgress := ROUND(NewProgress / NoOfRecords * 100,1);
        IF (NewProgress <> Progress) OR (TIME > LastUpdateTime + 5000) THEN BEGIN
          Window.UPDATE(1,100 * NewProgress);
          LastUpdateTime := TIME;
          Progress := NewProgress;
        END;
      END;
    END;

    PROCEDURE ReplaceTableDataPermission@1100525002(FunctProfileReplacePerm@1210190000 : Record 11229293);
    VAR
      Permission@1210190001 : Record 2000000005;
    BEGIN
      IF NOT Permission.GET(
       FunctProfileReplacePerm."Function Profile ID",
       FunctProfileReplacePerm."Object Type",
       FunctProfileReplacePerm."Object ID") THEN BEGIN
        Permission."Role ID" := FunctProfileReplacePerm."Function Profile ID";
        Permission."Object Type" := FunctProfileReplacePerm."Object Type";
        Permission."Object ID" := FunctProfileReplacePerm."Object ID";
        Permission.INSERT;
      END;
      Permission."Read Permission" := FunctProfileReplacePerm."Read Permission";
      Permission."Insert Permission" := FunctProfileReplacePerm."Insert Permission";
      Permission."Modify Permission" := FunctProfileReplacePerm."Modify Permission";
      Permission."Delete Permission" := FunctProfileReplacePerm."Delete Permission";
      Permission."Execute Permission" := FunctProfileReplacePerm."Execute Permission";
      Permission.MODIFY;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

