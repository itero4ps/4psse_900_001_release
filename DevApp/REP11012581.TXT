OBJECT Report 11012581 Create Plant Book Word Doc.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Create Plant Book (Word Document);
    ShowPrintStatus=No;
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   PlantSetupRec.GET;
                   PlantSetupRec.TESTFIELD("Contact No. Plant Book");
                   ContRec.GET(PlantSetupRec."Contact No. Plant Book");
                   ContRec.TESTFIELD("Document Group");

                   IF NOT UserRec.GET(USERID) THEN
                     UserRec.INIT;

                   DocTemplRec.SETRANGE("Document Group", ContRec."Document Group");
                   DocTemplRec.SETRANGE(Type, DocTemplRec.Type::Plant);
                   IF NOT DocTemplRec.FIND('-') THEN BEGIN
                     DocTemplRec.Type := DocTemplRec.Type::Plant;
                     ERROR(Text000, DocTemplRec.Type, ContRec."Document Group");
                   END;
                   IF (DocTemplRec.COUNT = 1) THEN
                     DocTemplate := DocTemplRec."Template Code"
                   ELSE BEGIN
                     IF (DocTemplate = '') THEN
                       DocTemplate := DocTemplRec."Template Code";
                   END;

                   PathTmpFiles := OperatingSystemMgt.ClientEnviron('TEMP');
                   FileMgt.AddBackSlashToDirectoryName(PathTmpFiles);
                 END;

    OnPreReport=BEGIN
                  DocDataItemRec.RESET;
                  DocDataItemRec.SETRANGE("Document Group", ContRec."Document Group");
                  DocDataItemRec.SETRANGE(Document, DocTemplate);
                  DocDataItemRec.SETRANGE("Table No.", DATABASE::"Rental Rate");  //* Rental Rates (also Sales/Buy Back)
                  IF DocDataItemRec.FINDFIRST THEN BEGIN
                    IF ReferenceDateRates = 0D THEN
                      ERROR(Text001);
                    REPEAT
                      DocDataItemFilterRec.SETRANGE("Document Group", DocDataItemRec."Document Group");
                      DocDataItemFilterRec.SETRANGE(Document, DocDataItemRec.Document);
                      DocDataItemFilterRec.SETRANGE("Data Item Line No.", DocDataItemRec."Line No.");
                      DocDataItemFilterRec.SETRANGE("Table No.", DocDataItemRec."Table No.");
                      DocDataItemFilterRec.SETRANGE("Field No.", 20);  //* Starting Date
                      DocDataItemFilterRec.DELETEALL;
                      DocDataItemFilterRec.SETRANGE("Field No.");  //* Reset Filter
                      IF DocDataItemFilterRec.FINDLAST THEN
                        NextLineNo := DocDataItemFilterRec."Line No." + 10000
                      ELSE
                        NextLineNo := 10000;
                      DocDataItemFilterRec.INIT;
                      DocDataItemFilterRec."Document Group" := DocDataItemRec."Document Group";
                      DocDataItemFilterRec.Document := DocDataItemRec.Document;
                      DocDataItemFilterRec."Data Item Line No." := DocDataItemRec."Line No.";
                      DocDataItemFilterRec."Table No." := DocDataItemRec."Table No.";
                      DocDataItemFilterRec."Line No." := NextLineNo;
                      DocDataItemFilterRec."Field No." := 20;  //* Starting Date
                      DocDataItemFilterRec.Filter := '<=' + FORMAT(ReferenceDateRates);
                      DocDataItemFilterRec.INSERT;
                    UNTIL DocDataItemRec.NEXT = 0;
                  END;

                  DocTemplRec.GET(ContRec."Document Group", DocTemplate);
                  DocTemplRec.TESTFIELD(Type, DocTemplRec.Type::Plant);
                  //DocTemplRec."No." := '';
                  //DocTemplRec.Prospect := PlantSetupRec."Contact No. Plant Book";
                  //DocTemplRec.Prospect := PlantSetupRec."Contact No. Plant Book";
                  //DocTemplRec.Project := '';
                  //DocTemplRec.Employee := UserRec."Employee No.";
                  //DocTemplRec."Contact (Person)" := '';
                  //DocTemplRec."Try-Out" := '';
                  //DocTemplRec."Try-Out Quote" := '';
                  //DocTemplRec.Plot := '';
                  //DocTemplRec."Responsibility Center" := '';
                  DocTemplRec.Subject := '';

                  Window.OPEN(Text002);
                END;

    OnPostReport=BEGIN
                   Window.CLOSE;
                 END;

  }
  DATASET
  {
    { 8651;    ;DataItem;                    ;
               DataItemTable=Table11012551;
               OnPreDataItem=BEGIN
                               LineCount := 0;
                               NoOfRecords := COUNT;
                               PlantBookTextFile := ''
                             END;

               OnAfterGetRecord=BEGIN
                                  LineCount := LineCount + 1;
                                  Window.UPDATE(1, Code);
                                  Window.UPDATE(2, ROUND(LineCount / NoOfRecords * 10000,1));

                                  //*29002.sn  Set filter on the current Plant Type Code for dataitem 'Plant Type' (as StartingDate for Rates in OnPreReport)
                                  DocDataItemRec.RESET;
                                  DocDataItemRec.SETRANGE("Document Group", ContRec."Document Group");
                                  DocDataItemRec.SETRANGE(Document, DocTemplate);
                                  DocDataItemRec.SETRANGE("Table No.", DATABASE::"Plant Type");
                                  IF DocDataItemRec.FINDFIRST THEN BEGIN
                                    REPEAT
                                      DocDataItemFilterRec.SETRANGE("Document Group", DocDataItemRec."Document Group");
                                      DocDataItemFilterRec.SETRANGE(Document, DocDataItemRec.Document);
                                      DocDataItemFilterRec.SETRANGE("Data Item Line No.", DocDataItemRec."Line No.");
                                      DocDataItemFilterRec.SETRANGE("Table No.", DocDataItemRec."Table No.");
                                      DocDataItemFilterRec.SETRANGE("Field No.", 10);  //* Code (Plant Type)
                                      DocDataItemFilterRec.DELETEALL;
                                      DocDataItemFilterRec.SETRANGE("Field No.");  //* Reset Filter
                                      IF DocDataItemFilterRec.FINDLAST THEN
                                        NextLineNo := DocDataItemFilterRec."Line No." + 10000
                                      ELSE
                                        NextLineNo := 10000;
                                      DocDataItemFilterRec.INIT;
                                      DocDataItemFilterRec."Document Group" := DocDataItemRec."Document Group";
                                      DocDataItemFilterRec.Document := DocDataItemRec.Document;
                                      DocDataItemFilterRec."Data Item Line No." := DocDataItemRec."Line No.";
                                      DocDataItemFilterRec."Table No." := DocDataItemRec."Table No.";
                                      DocDataItemFilterRec."Line No." := NextLineNo;
                                      DocDataItemFilterRec."Field No." := 10;  //* Code (Plant Type)
                                      DocDataItemFilterRec.Filter := "Plant Type".Code;
                                      DocDataItemFilterRec.INSERT;
                                    UNTIL DocDataItemRec.NEXT = 0;
                                  END;
                                  //*29002.en

                                  PlantProfileMgtCU.UpdateLineNoQuestion(Code, '', '');
                                  CreatePlantTypeWordDoc();
                                END;

               ReqFilterFields=Code }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   ReferenceDateRates := 0D;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1210190000;2;Field  ;
                  CaptionML=ENU=Reference Date Rates;
                  SourceExpr=ReferenceDateRates }

      { 1210190002;2;Field  ;
                  CaptionML=ENU=Document Template;
                  SourceExpr=DocTemplate;
                  OnValidate=BEGIN
                               DocTemplRec.GET(ContRec."Document Group", DocTemplate);
                               DocTemplRec.TESTFIELD(Type, DocTemplRec.Type::Plant);
                             END;

                  OnLookup=VAR
                             lvDocTemplRec@1210190000 : Record 11012401;
                             lvDocTemplPage@1210190001 : Page 11012401;
                           BEGIN
                             lvDocTemplRec."Document Group" := ContRec."Document Group";
                             lvDocTemplRec."Template Code" := DocTemplate;
                             lvDocTemplRec.FILTERGROUP(6);
                             lvDocTemplRec.SETRANGE("Document Group", ContRec."Document Group");
                             lvDocTemplRec.SETRANGE(Type, DocTemplRec.Type::Plant);
                             lvDocTemplRec.FILTERGROUP(0);

                             lvDocTemplPage.SETTABLEVIEW(lvDocTemplRec);
                             lvDocTemplPage.SETRECORD(lvDocTemplRec);
                             lvDocTemplPage.LOOKUPMODE(TRUE);
                             IF lvDocTemplPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
                               lvDocTemplPage.GETRECORD(lvDocTemplRec);
                               IF (lvDocTemplRec."Template Code" <> '') THEN
                                 DocTemplate := lvDocTemplRec."Template Code";
                             END;
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      PlantSetupRec@1210190011 : Record 11012550;
      UserRec@1210190012 : Record 91;
      ContRec@1210190014 : Record 5050;
      DocTemplRec@1210190013 : Record 11012401;
      DocTemplRec2@1210190016 : Record 11012401;
      DocDataItemRec@1100485002 : Record 11012140;
      DocDataItemFilterRec@1100485003 : Record 11012143;
      PlantProfileMgtCU@1100485001 : Codeunit 11012577;
      OperatingSystemMgt@1100525000 : Codeunit 11012364;
      FileMgt@1100525001 : Codeunit 419;
      Window@1210190002 : Dialog;
      ReferenceDateRates@1210190001 : Date;
      NoOfRecords@1210190003 : Integer;
      LineCount@1210190004 : Integer;
      NextLineNo@1210190017 : Integer;
      DocTemplate@1210190015 : Code[20];
      Text000@1210190007 : TextConst 'ENU=No template present with type ''%1'' in document group ''%2''.';
      Text001@1210190008 : TextConst 'ENU=Reference Date Rates must be filled in.';
      Text002@1210190000 : TextConst 'ENU=Plant Type  #1##########  @2@@@@@@@@@@@@@@@@@@@@';
      DocumentNo@1100485000 : Code[20];
      PathTmpFiles@1210190005 : Text[200];
      PlantBookTextFile@1210190006 : Text[250];
      PlantBookTextFile2@1210190009 : Text[250];

    PROCEDURE CreatePlantTypeWordDoc@1210190001();
    VAR
      lvWordInterfaceCdu@1210190000 : Codeunit 11012406;
      RecRef@1100525000 : RecordRef;
      DocLinkRID@1100525001 : ARRAY [5] OF RecordID;
    BEGIN
      DocTemplRec2.COPY(DocTemplRec);
      lvWordInterfaceCdu.InitPlantBook((PlantBookTextFile = ''), "Plant Type".Code, ReferenceDateRates, PathTmpFiles, DocumentNo);
      //lvWordInterfaceCdu.GenerateDoc(DocTemplRec2);

      RecRef.GETTABLE("Plant Type");
      DocLinkRID[1] := RecRef.RECORDID();

      lvWordInterfaceCdu.GenerateDoc(
        DocTemplRec2, DocLinkRID, "Plant Type"."Department Code",
        DocumentNo, PlantSetupRec."Contact No. Plant Book", '', '', FALSE, FALSE);


      IF (PlantBookTextFile = '') THEN
        lvWordInterfaceCdu.GetPlantBookFile(PlantBookTextFile, DocumentNo, TRUE)
      ELSE BEGIN
        lvWordInterfaceCdu.GetPlantBookFile(PlantBookTextFile2, DocumentNo, FALSE);
        lvWordInterfaceCdu.MergePlantBookFiles(PlantBookTextFile, PlantBookTextFile2)
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

