OBJECT Report 11012592 Archive Plant Locations
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Archive Plant Locations;
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 9306;    ;DataItem;                    ;
               DataItemTable=Table11012554;
               OnPreDataItem=BEGIN
                               ArchiveBln := ProcessType IN [ProcessType::"Archive Only", ProcessType::"Archive and Delete"];
                               DeleteBln := ProcessType IN [ProcessType::"Delete only", ProcessType::"Archive and Delete"];
                               IF ProcessType = ProcessType::"Archive Only" THEN
                                 SETRANGE(Status, Status::Archive)
                               ELSE
                                 SETFILTER(Status, '%1..', Status::Archive);

                               PlantLocRec.COPYFILTERS("Plant Location");
                               IF NOT PlantLocRec.FINDFIRST THEN
                                 MESSAGE(Text000)
                               ELSE
                                 IF DeleteBln THEN BEGIN
                                   //* Verwijderen laatste materieelpost niet toegestaan (ivm bepalen eerste vrije postnummer), want dan worden
                                   //* volgnummers opnieuw gebruikt bij andere materieellocaties.
                                   //* Als die projecten dan later gearchiveerd worden krijg je melding 'Volgnummer bestaat al'.
                                   IF PlantLedgerRec.FINDLAST THEN BEGIN
                                     PlantLocLastLedgerEntry := PlantLedgerRec."Plant Location";

                                     PlantLocRec.FILTERGROUP(10);
                                     PlantLocRec.SETRANGE(Code, PlantLocLastLedgerEntry);
                                     PlantLocRec.FILTERGROUP(0);
                                     IF NOT PlantLocRec.ISEMPTY THEN
                                       ERROR(Text004, PlantLocRec.Code);
                                   END;
                                 END;

                               PlantSetup.GET;
                               PlantSetup.TESTFIELD("Archive Company");

                               Window.OPEN(Text001 +
                                           Text002);

                               IF ArchiveBln THEN
                                 ArchiveCommonData;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF ArchiveBln THEN
                                    ArchivePlantLocation;

                                  IF DeleteBln THEN
                                    DeletePlantLocation;
                                END;

               OnPostDataItem=BEGIN
                                Window.CLOSE;
                              END;

               ReqFilterFields=Code }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1100485000;2;Field  ;
                  CaptionML=ENU=Process Type;
                  OptionCaptionML=ENU=Archive Only,Archive and Delete,Delete only;
                  SourceExpr=ProcessType }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@11012064 : TextConst 'ENU=There are no Plant Locations with Status Archive';
      Text001@11012065 : TextConst 'ENU=Plant Location        #1##########\\';
      Text002@11012066 : TextConst 'ENU=Busy With Table       #2#################### @3@@@@@@@@@@@@@';
      PlantSetup@1100485005 : Record 11012550;
      PlantLocRec@1100485012 : Record 11012554;
      PlantLocRec2@11012002 : Record 11012554;
      PlantTypeRec@1100485000 : Record 11012551;
      PlantTypeRec2@1100485002 : Record 11012551;
      PlantNumberRec@1100485001 : Record 11012552;
      PlantNumberRec2@1100485003 : Record 11012552;
      PlantLedgerRec@1100485006 : Record 11012572;
      PlantLedgerRec2@1100485007 : Record 11012572;
      PlantLocAddressRec@1100485009 : Record 11012590;
      PlantLocAddressRec2@1100485010 : Record 11012590;
      Window@11012061 : Dialog;
      LineCount@11012062 : Integer;
      NoOfRecords@11012063 : Integer;
      Text003@1100485008 : TextConst 'ENU=Plant Location %1 already exists in Archive Company';
      Text004@1100485004 : TextConst 'ENU=The last PLant Ledger Entry is an Entry of Plant Location ''%1'', delete of the last Plant Ledger Entry is not allowed.\Wait until there is posted a Project Entry on another project.';
      Text005@1100485011 : TextConst 'ENU=Delete';
      PlantLocLastLedgerEntry@1100485013 : Code[20];
      ProcessType@1100485014 : 'Archive Only,Archive and Delete,Delete only';
      ArchiveBln@1100485015 : Boolean;
      DeleteBln@1100485016 : Boolean;
      DocumentLinkManagement@1100528700 : Codeunit 11012401;

    PROCEDURE ArchiveCommonData@1();
    VAR
      DocumentLink@1100528700 : Record 11012747;
      RecRef@1100528701 : RecordRef;
    BEGIN
      LineCount := 0;
      PlantTypeRec2.CHANGECOMPANY(PlantSetup."Archive Company");
      IF PlantTypeRec.FINDSET THEN BEGIN
        Window.UPDATE(2, PlantTypeRec.TABLECAPTION);
        NoOfRecords := PlantTypeRec.COUNT;
        REPEAT
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
          PlantTypeRec2 := PlantTypeRec;
          IF NOT PlantTypeRec2.FIND('=') THEN
            PlantTypeRec2.INSERT;

          IF DocumentLink.READPERMISSION THEN BEGIN
            RecRef.GETTABLE(PlantTypeRec);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, PlantSetup."Archive Company", DeleteBln);
          END;
        UNTIL PlantTypeRec.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      PlantNumberRec2.CHANGECOMPANY(PlantSetup."Archive Company");
      IF PlantNumberRec.FINDSET THEN BEGIN
        Window.UPDATE(2, PlantNumberRec.TABLECAPTION);
        NoOfRecords := PlantNumberRec.COUNT;
        REPEAT
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
          PlantNumberRec2 := PlantNumberRec;
          IF NOT PlantNumberRec2.FIND('=') THEN
            PlantNumberRec2.INSERT;

          IF DocumentLink.READPERMISSION THEN BEGIN
            RecRef.GETTABLE(PlantNumberRec);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, PlantSetup."Archive Company", DeleteBln);
          END;
        UNTIL PlantNumberRec.NEXT = 0;
        Window.UPDATE(3,0);
      END;
    END;

    PROCEDURE ArchivePlantLocation@2();
    VAR
      DocumentLink@1100528701 : Record 11012747;
      RecRef@1100528700 : RecordRef;
    BEGIN
      Window.UPDATE(1,"Plant Location".Code);

      "Plant Location".Status := "Plant Location".Status::Archived;
      "Plant Location".MODIFY;

      PlantLocRec2.CHANGECOMPANY(PlantSetup."Archive Company");
      PlantLocRec2 := "Plant Location";
      IF PlantLocRec2.FIND('=') THEN
        ERROR(Text003,"Plant Location".Code)
      ELSE
        PlantLocRec2.INSERT;

      IF DocumentLink.READPERMISSION THEN BEGIN
        RecRef.GETTABLE("Plant Location");
        DocumentLinkManagement.ArchiveDocumentLinks(RecRef, PlantSetup."Archive Company", DeleteBln);
      END;

      LineCount := 0;
      PlantLocAddressRec2.CHANGECOMPANY(PlantSetup."Archive Company");
      PlantLocAddressRec.SETRANGE(Location,"Plant Location".Code);
      IF PlantLocAddressRec.FINDSET THEN BEGIN
        Window.UPDATE(2, PlantLocAddressRec.TABLECAPTION);
        NoOfRecords := PlantLocAddressRec.COUNT;
        REPEAT
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
          PlantLocAddressRec2 := PlantLocAddressRec;
          PlantLocAddressRec2.INSERT;

          IF DocumentLink.READPERMISSION THEN BEGIN
            RecRef.GETTABLE(PlantLocAddressRec);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, PlantSetup."Archive Company", DeleteBln);
          END;
        UNTIL PlantLocAddressRec.NEXT = 0;
        Window.UPDATE(3,0);
      END;

      LineCount := 0;
      PlantLedgerRec2.CHANGECOMPANY(PlantSetup."Archive Company");
      PlantLedgerRec.SETCURRENTKEY("Plant Location");
      PlantLedgerRec.SETRANGE("Plant Location","Plant Location".Code);
      IF PlantLedgerRec.FINDSET THEN BEGIN
        Window.UPDATE(2, PlantLedgerRec.TABLECAPTION);
        NoOfRecords := PlantLedgerRec.COUNT;
        REPEAT
          Window.UPDATE(3,ROUND(LineCount / NoOfRecords * 10000,1));
          LineCount := LineCount + 1;
          PlantLedgerRec2 := PlantLedgerRec;
          PlantLedgerRec2.INSERT;

          IF DocumentLink.READPERMISSION THEN BEGIN
            RecRef.GETTABLE(PlantLedgerRec);
            DocumentLinkManagement.ArchiveDocumentLinks(RecRef, PlantSetup."Archive Company", DeleteBln);
          END;
        UNTIL PlantLedgerRec.NEXT = 0;
        Window.UPDATE(3,0);
      END;
    END;

    PROCEDURE DeletePlantLocation@1100485002();
    BEGIN
      Window.UPDATE(2,Text005);
      Window.UPDATE(3,0);
      "Plant Location".DELETE(TRUE);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

