OBJECT Report 11012653 Date Compress Leave Ledger
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    Permissions=TableData 87=rimd,
                TableData 11020235=rimd;
    CaptionML=ENU=Date Compress Leave Ledger;
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  LeaveLedgerEntryFilter := COPYSTR("Leave Ledger Entry (4PS)".GETFILTERS,1,MAXSTRLEN(DateComprReg.Filter));
                END;

  }
  DATASET
  {
    { 5086;    ;DataItem;                    ;
               DataItemTable=Table11020235;
               DataItemTableView=SORTING(Employee No.,Leave Type,Posting Date);
               OnPreDataItem=BEGIN
                               IF NOT
                                  CONFIRM(
                                    Text000 +
                                    Text001 +
                                    Text002,FALSE)
                               THEN
                                 CurrReport.BREAK;

                               IF EntrdDateComprReg."Ending Date" = 0D THEN
                                 ERROR(STRSUBSTNO(Text003,EntrdDateComprReg.FIELDCAPTION("Ending Date")));

                               Window.OPEN(
                                 Text004 +
                                 Text005 +
                                 Text006 +
                                 Text007 +
                                 Text008);

                               SourceCodeSetup.GET;
                               SourceCodeSetup.TESTFIELD("Compress Leave Ledger");

                               NewLeaveLedgerEntry.LOCKTABLE;
                               DateComprReg.LOCKTABLE;

                               IF LeaveLedgerEntry2.FIND('+') THEN;
                               LastEntryNo := LeaveLedgerEntry2."Entry No.";
                               SETRANGE("Entry No.",0,LastEntryNo);
                               SETRANGE("Posting Date",EntrdDateComprReg."Starting Date",EntrdDateComprReg."Ending Date");

                               InitRegister;
                             END;

               OnAfterGetRecord=VAR
                                  Employee@1100528801 : Record 5200;
                                BEGIN
                                  IF Employee."No." <> "Employee No." THEN
                                    IF NOT Employee.GET("Employee No.") THEN
                                      CurrReport.SKIP;

                                  LeaveLedgerEntry2 := "Leave Ledger Entry (4PS)";
                                  WITH LeaveLedgerEntry2 DO BEGIN
                                    SETCURRENTKEY("Employee No.","Leave Type","Posting Date");
                                    COPYFILTERS("Leave Ledger Entry (4PS)");
                                    SETRANGE("Employee No.","Employee No.");
                                    SETRANGE("Leave Type","Leave Type");
                                    SETFILTER("Posting Date",DateComprMgt.GetDateFilter("Posting Date",EntrdDateComprReg,FALSE));

                                    IF RetainNo(FIELDNO("Document No.")) THEN
                                      SETRANGE("Document No.","Document No.");
                                    IF RetainNo(FIELDNO("Reason Code")) THEN
                                      SETRANGE("Reason Code","Reason Code");
                                    IF RetainNo(FIELDNO("Entry Type")) THEN
                                      SETRANGE("Entry Type","Entry Type");

                                    InitNewEntry(NewLeaveLedgerEntry);

                                    SummarizeEntry(NewLeaveLedgerEntry,LeaveLedgerEntry2);
                                    WHILE NEXT <> 0 DO BEGIN
                                      SummarizeEntry(NewLeaveLedgerEntry,LeaveLedgerEntry2);
                                    END;

                                    InsertNewEntry(NewLeaveLedgerEntry);
                                  END;

                                  IF DateComprReg."No. Records Deleted" >= NoOfDeleted + 10 THEN BEGIN
                                    NoOfDeleted := DateComprReg."No. Records Deleted";
                                    InsertRegister(DateComprReg);
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                IF DateComprReg."No. Records Deleted" > NoOfDeleted THEN
                                  InsertRegister(DateComprReg);
                              END;

               ReqFilterFields=Employee No.,Leave Type }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN

                   IF EntrdDateComprReg."Ending Date" = 0D THEN
                     EntrdDateComprReg."Ending Date" := TODAY;
                   IF EntrdLeaveLedgerEntry.Description = '' THEN
                     EntrdLeaveLedgerEntry.Description := Text009;

                   WITH "Leave Ledger Entry (4PS)" DO BEGIN
                     InsertField(FIELDNO("Document No."),FIELDCAPTION("Document No."));
                     InsertField(FIELDNO("Reason Code"),FIELDCAPTION("Reason Code"));
                     InsertField(FIELDNO("Entry Type"),FIELDCAPTION("Entry Type"));
                   END;
                 END;

    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  CaptionML=ENU=Starting Date;
                  SourceExpr=EntrdDateComprReg."Starting Date" }

      { 1100525003;2;Field  ;
                  CaptionML=ENU=Ending Date;
                  SourceExpr=EntrdDateComprReg."Ending Date" }

      { 1100525004;2;Field  ;
                  CaptionML=ENU=Period Length;
                  OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Period;
                  SourceExpr=EntrdDateComprReg."Period Length" }

      { 1100525005;2;Field  ;
                  CaptionML=ENU=Posting Description;
                  SourceExpr=EntrdLeaveLedgerEntry.Description }

      { 1100525006;2;Group  ;
                  CaptionML=ENU=Retain Field Contents;
                  GroupType=Group }

      { 1100525007;3;Field  ;
                  CaptionML=ENU=Document No.;
                  SourceExpr=Retain[1] }

      { 1100525008;3;Field  ;
                  CaptionML=ENU=Reason Code;
                  SourceExpr=Retain[2] }

      { 1100525009;3;Field  ;
                  CaptionML=ENU=Entry Type;
                  SourceExpr=Retain[3] }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU="This batch job deletes Leave Entries. "';
      Text001@1001 : TextConst 'ENU=Therefore, it is important that you make a backup of the database before you run the batch job.\\';
      Text002@1002 : TextConst 'ENU=Do you want to date compress the Leave Entries?';
      Text003@1003 : TextConst 'ENU=%1 must be specified.';
      Text004@1004 : TextConst 'ENU=Date compressing Leave Ledger Entries...\\';
      Text005@1005 : TextConst 'ENU=Employee No.             #1##########\';
      Text006@1006 : TextConst 'ENU=Date                    #2######\\';
      Text007@1007 : TextConst 'ENU=No. of new entries      #3######\';
      Text008@1008 : TextConst 'ENU=No. of entries deleted  #4######';
      Text009@1009 : TextConst 'ENU=Date Compressed';
      SourceCodeSetup@1011 : Record 242;
      DateComprReg@1012 : Record 87;
      EntrdDateComprReg@1013 : Record 87;
      EntrdLeaveLedgerEntry@1015 : Record 11020235;
      NewLeaveLedgerEntry@1016 : Record 11020235;
      LeaveLedgerEntry2@1017 : Record 11020235;
      DateComprMgt@1100528802 : Codeunit 356;
      Window@1024 : Dialog;
      LeaveLedgerEntryFilter@1100528800 : Text[250];
      NoOfFields@1026 : Integer;
      Retain@1027 : ARRAY [3] OF Boolean;
      FieldNumber@1028 : ARRAY [3] OF Integer;
      FieldNameArray@1029 : ARRAY [3] OF Text[100];
      LastEntryNo@1030 : Integer;
      NoOfDeleted@1031 : Integer;
      LeaveRegExists@1100528801 : Boolean;
      i@1033 : Integer;

    LOCAL PROCEDURE InitRegister@4();
    BEGIN
      IF DateComprReg.FIND('+') THEN;
      DateComprReg.INIT;
      DateComprReg."No." := DateComprReg."No." + 1;
      DateComprReg."Table ID" := DATABASE::"Leave Ledger Entry (4PS)";
      DateComprReg."Creation Date" := TODAY;
      DateComprReg."Starting Date" := EntrdDateComprReg."Starting Date";
      DateComprReg."Ending Date" := EntrdDateComprReg."Ending Date";
      DateComprReg."Period Length" := EntrdDateComprReg."Period Length";
      FOR i := 1 TO NoOfFields DO
        IF Retain[i] THEN
          DateComprReg."Retain Field Contents" :=
            COPYSTR(
              DateComprReg."Retain Field Contents" + ',' + FieldNameArray[i],1,
              MAXSTRLEN(DateComprReg."Retain Field Contents"));
      DateComprReg."Retain Field Contents" := COPYSTR(DateComprReg."Retain Field Contents",2);
      DateComprReg.Filter := LeaveLedgerEntryFilter;
      DateComprReg."Source Code" := SourceCodeSetup."Compress Leave Ledger";
      DateComprReg."User ID" := USERID;

      LeaveRegExists := FALSE;
      NoOfDeleted := 0;
    END;

    LOCAL PROCEDURE InsertRegister@1(VAR DateComprReg@1001 : Record 87);
    BEGIN
      IF LeaveRegExists THEN BEGIN
        DateComprReg.MODIFY;
      END ELSE BEGIN
        DateComprReg.INSERT;
        LeaveRegExists := TRUE;
      END;
      COMMIT;

      NewLeaveLedgerEntry.LOCKTABLE;
      DateComprReg.LOCKTABLE;

      LeaveLedgerEntry2.RESET;
      IF LeaveLedgerEntry2.FIND('+') THEN;
      IF LastEntryNo <> LeaveLedgerEntry2."Entry No." THEN BEGIN
        LastEntryNo := LeaveLedgerEntry2."Entry No.";
        InitRegister;
      END;
    END;

    LOCAL PROCEDURE InsertField@2(Number@1000 : Integer;Name@1001 : Text[100]);
    BEGIN
      NoOfFields := NoOfFields + 1;
      FieldNumber[NoOfFields] := Number;
      FieldNameArray[NoOfFields] := Name;
    END;

    LOCAL PROCEDURE RetainNo@3(Number@1000 : Integer) : Boolean;
    BEGIN
      EXIT(Retain[Index(Number)]);
    END;

    LOCAL PROCEDURE Index@6(Number@1000 : Integer) : Integer;
    BEGIN
      FOR i := 1 TO NoOfFields DO
        IF Number = FieldNumber[i] THEN
          EXIT(i);
    END;

    PROCEDURE SummarizeEntry@5(VAR NewLeaveLedgerEntry@1000 : Record 11020235;LeaveLedgerEntry@1001 : Record 11020235);
    BEGIN
      WITH LeaveLedgerEntry DO BEGIN
        NewLeaveLedgerEntry."No. of Hours" := NewLeaveLedgerEntry."No. of Hours" + "No. of Hours";
        NewLeaveLedgerEntry.Amount := NewLeaveLedgerEntry.Amount + Amount;
        DELETE;
        DateComprReg."No. Records Deleted" := DateComprReg."No. Records Deleted" + 1;
        Window.UPDATE(4,DateComprReg."No. Records Deleted");
      END;
    END;

    PROCEDURE InitNewEntry@7(VAR NewLeaveLedgerEntry@1000 : Record 11020235);
    BEGIN
      LastEntryNo := LastEntryNo + 1;

      WITH LeaveLedgerEntry2 DO BEGIN
        NewLeaveLedgerEntry.INIT;
        NewLeaveLedgerEntry."Entry No." := LastEntryNo;
        NewLeaveLedgerEntry."Employee No." := "Employee No.";
        NewLeaveLedgerEntry."Posting Date" := GETRANGEMIN("Posting Date");
        NewLeaveLedgerEntry.Description := EntrdLeaveLedgerEntry.Description;
        NewLeaveLedgerEntry."Source Code" := SourceCodeSetup."Compress Leave Ledger";
        NewLeaveLedgerEntry."User ID" := USERID;
        NewLeaveLedgerEntry."Leave Type" := "Leave Type";

        IF RetainNo(FIELDNO("Document No.")) THEN
          NewLeaveLedgerEntry."Document No." := "Document No.";
        IF RetainNo(FIELDNO("Reason Code")) THEN
          NewLeaveLedgerEntry."Reason Code" := "Reason Code";
        IF RetainNo(FIELDNO("Entry Type")) THEN
          NewLeaveLedgerEntry."Entry Type" := "Entry Type";

        Window.UPDATE(1,NewLeaveLedgerEntry."Employee No.");
        Window.UPDATE(2,NewLeaveLedgerEntry."Posting Date");
        DateComprReg."No. of New Records" := DateComprReg."No. of New Records" + 1;
        Window.UPDATE(3,DateComprReg."No. of New Records");
      END;
    END;

    PROCEDURE InsertNewEntry@23(VAR NewLeaveLedgerEntry@1000 : Record 11020235);
    BEGIN
      NewLeaveLedgerEntry.INSERT;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

