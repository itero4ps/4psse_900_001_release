OBJECT Report 11012668 Generate Prognosis
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Generate Prognosis;
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   StartProcess := FALSE;
                 END;

    OnPreReport=BEGIN
                  StartProcess := TRUE;
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   PrognosisDate := SetPrognosisDate;
                   IF PrognosisDate = 0D THEN
                     PrognosisDate := WORKDATE;

                   includeFinishedJobs := FALSE; //IME403
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1100525000;1;Group  ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 1100528801;2;Field  ;
                  CaptionML=ENU=Prognosis Date;
                  SourceExpr=PrognosisDate }

      { 1100285101;2;Field  ;
                  CaptionML=ENU=Include closed jobs;
                  SourceExpr=includeFinishedJobs }

      { 1900000002;2;Group  ;
                  CaptionML=ENU=Next Steps after create Prognosis }

      { 1100528800;3;Field  ;
                  CaptionML=ENU=Copy Previous Cost Prognosis;
                  SourceExpr=CopyPrevCostPrognosis }

      { 1100528802;3;Field  ;
                  CaptionML=ENU=Copy Previous Prognosis &End Result;
                  SourceExpr=CopyPrevPrognosisEndResult }

      { 1100528803;3;Field  ;
                  CaptionML=ENU=Copy Previous Revenue Prognosis;
                  SourceExpr=CopyPrevRevenuePrognosis }

      { 1100528804;3;Field  ;
                  CaptionML=ENU=Copy Previous Prognosis Total Revenues;
                  SourceExpr=CopyPrevPrognosisTotalRev }

      { 1100528805;3;Field  ;
                  CaptionML=ENU=Copy Comments Previous Prognosis;
                  SourceExpr=CopyCommentsPrevPrognosis }

      { 1100528806;3;Field  ;
                  CaptionML=ENU=Fill Prognosis with &Available Cost;
                  SourceExpr=FillProgWithAvailableCost }

      { 1100528807;3;Field  ;
                  CaptionML=ENU=Fill Prognosis with extrapolated Costs;
                  SourceExpr=FillProgWithExtrapolatedCosts }

      { 1100528808;3;Field  ;
                  CaptionML=ENU=Fill Prognosis from Project Planning Activities;
                  SourceExpr=FillProgFromProjPlanningAct }

      { 1100528809;3;Field  ;
                  CaptionML=ENU=Fill Prognosis from Requested Activity Capacity;
                  SourceExpr=FillProgFromRequestedActCap }

      { 1100528810;3;Field  ;
                  CaptionML=ENU=Fill Prognosis from Assigned Activity Capacity;
                  SourceExpr=FillProgFromAssignedActCap }

      { 1100528811;3;Field  ;
                  CaptionML=ENU=Fill Prognosis Revenues;
                  SourceExpr=FillProgRevenues }

      { 1100528812;3;Field  ;
                  CaptionML=ENU=Calculate Surcharges;
                  SourceExpr=CalcSurcharges }

      { 1100525001;3;Field  ;
                  CaptionML=ENU=Calculate Risc Coverage;
                  SourceExpr=CalcRiscCoverage }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      PrognosisDate@1100528800 : Date;
      SetPrognosisDate@1100528813 : Date;
      CopyPrevCostPrognosis@1100528801 : Boolean;
      CopyPrevPrognosisEndResult@1100528802 : Boolean;
      CopyPrevRevenuePrognosis@1100528803 : Boolean;
      CopyPrevPrognosisTotalRev@1100528804 : Boolean;
      CopyCommentsPrevPrognosis@1100528805 : Boolean;
      FillProgWithAvailableCost@1100528806 : Boolean;
      FillProgWithExtrapolatedCosts@1100528807 : Boolean;
      FillProgFromProjPlanningAct@1100528808 : Boolean;
      FillProgFromRequestedActCap@1100528809 : Boolean;
      FillProgFromAssignedActCap@1100528810 : Boolean;
      FillProgRevenues@1100528811 : Boolean;
      CalcSurcharges@1100528812 : Boolean;
      StartProcess@1100528814 : Boolean;
      CalcRiscCoverage@1100525000 : Boolean;
      includeFinishedJobs@1100285100 : Boolean;

    PROCEDURE SetSelections@1100528803(VAR iPrognosisDate@1100528805 : Date);
    BEGIN
      SetPrognosisDate := iPrognosisDate;
    END;

    PROCEDURE GetSelections@1100528800(VAR oStartProcess@1100528813 : Boolean;VAR oPrognosisDate@1100528805 : Date;VAR oCopyPrevCostPrognosis@1100528804 : Boolean;VAR oCopyPrevPrognosisEndResult@1100528803 : Boolean;VAR oCopyPrevRevenuePrognosis@1100528802 : Boolean;VAR oCopyPrevPrognosisTotalRev@1100528801 : Boolean;VAR oCopyCommentsPrevPrognosis@1100528800 : Boolean;VAR oFillProgWithAvailableCost@1100528812 : Boolean;VAR oFillProgWithExtrapolatedCosts@1100528811 : Boolean;VAR oFillProgFromProjPlanningAct@1100528810 : Boolean;VAR oFillProgFromRequestedActCap@1100528809 : Boolean;VAR oFillProgFromAssignedActCap@1100528808 : Boolean;VAR oFillProgRevenues@1100528807 : Boolean;VAR oCalcSurcharges@1100528806 : Boolean;VAR OCalcRiscCoverage@1100525000 : Boolean;VAR oincludeFinishedJobs@1100285100 : Boolean);
    BEGIN
      oStartProcess := StartProcess;
      oPrognosisDate := PrognosisDate;
      oCopyPrevCostPrognosis := CopyPrevCostPrognosis;
      oCopyPrevPrognosisEndResult := CopyPrevPrognosisEndResult;
      oCopyPrevRevenuePrognosis := CopyPrevRevenuePrognosis;
      oCopyPrevPrognosisTotalRev := CopyPrevPrognosisTotalRev;
      oCopyCommentsPrevPrognosis := CopyCommentsPrevPrognosis;
      oFillProgWithAvailableCost := FillProgWithAvailableCost;
      oFillProgWithExtrapolatedCosts := FillProgWithExtrapolatedCosts;
      oFillProgFromProjPlanningAct := FillProgFromProjPlanningAct;
      oFillProgFromRequestedActCap := FillProgFromRequestedActCap;
      oFillProgFromAssignedActCap := FillProgFromAssignedActCap;
      oFillProgRevenues := FillProgRevenues;
      oCalcSurcharges := CalcSurcharges;
      OCalcRiscCoverage := CalcRiscCoverage;
      //IME403
      oincludeFinishedJobs := includeFinishedJobs;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

