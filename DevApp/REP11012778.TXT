OBJECT Report 11012778 Create Service Order Invoice
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Create Service Order Invoice;
    ProcessingOnly=Yes;
    OnPostReport=BEGIN
                   COMMIT;
                   ServiceCollectiveList.MARKEDONLY(TRUE);
                   IF NOT ServiceCollectiveList.ISEMPTY THEN
                     REPORT.RUNMODAL(REPORT::"Process Collective-List", TRUE, FALSE, ServiceCollectiveList);
                 END;

  }
  DATASET
  {
    { 1373;    ;DataItem;                    ;
               DataItemTable=Table11012823;
               OnAfterGetRecord=VAR
                                  ServiceOrder@1100525000 : Record 11012823;
                                  ServiceCollectiveListMgt@1100409000 : Codeunit 11012850;
                                BEGIN
                                  IF "Base Service Order" = FALSE THEN
                                    IF "Collect Invoices By" <> "Collect Invoices By"::ServOrder THEN
                                      CurrReport.SKIP;  //DP01008

                                  IF NOT (Status IN [Status::"Technical Finished", Status::"Administrative Finished", Status::Finished]) THEN
                                    IF NOT CONFIRM(Text002, FALSE, "No.") THEN
                                      ERROR('');
                                  IF NOT NextOrdersMatchPreliminaries("No.") THEN
                                    IF NOT CONFIRM(Text001, FALSE, "No.") THEN
                                      ERROR('');

                                  IF "Collective List No." = '' THEN BEGIN
                                    VALIDATE("Collective List No.",
                                      ServiceCollectiveListMgt.CreateCollectiveListforSO(
                                        "Customer No.", "Bill-to Customer No.", "Alternative Bill-to Address", "No."));
                                    MODIFY(TRUE);
                                  END;

                                  IF ServiceCollectiveList.GET("Collective List No.") THEN BEGIN
                                    ServiceOrder.SETCURRENTKEY("Collective List No.");
                                    ServiceOrder.SETRANGE("Collective List No.", "Collective List No.");
                                    IF ServiceOrder.FINDSET AND (ServiceOrder.NEXT <> 0) THEN
                                      IF NOT CONFIRM(Text000, FALSE, "Collective List No.") THEN
                                        ERROR('');
                                    IF ServiceCollectiveList.Status = ServiceCollectiveList.Status::Open THEN BEGIN
                                      ServiceCollectiveList.Recalculate(TRUE);
                                      ServiceCollectiveList.VALIDATE(Status, ServiceCollectiveList.Status::Released);
                                      ServiceCollectiveList.MODIFY(TRUE);
                                    END;
                                    ServiceCollectiveList.MARK(TRUE);
                                  END;
                                END;

               ReqFilterFields=No.,Customer No.,Subcontractor,Starting Date,Status }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ServiceCollectiveList@1100409000 : Record 11071730;
      Text000@1100525000 : TextConst 'ENU=There are several Service Orders linked to Collective List %1, continue anyway?';
      Text001@1100528600 : TextConst 'ENU=Next Service Orders of Service Order %1 don''t match preliminaries, continue anyway?';
      Text002@1100525001 : TextConst 'ENU=Status of Service Order %1 needs to be at least Technical Finished, continue anyway?';

    PROCEDURE NextOrdersMatchPreliminaries@1100528600(IServiceOrderNo@1100528600 : Code[20]) : Boolean;
    VAR
      ServiceOrder@1100528601 : Record 11012823;
    BEGIN
      ServiceOrder.SETCURRENTKEY("Base Service Order No.");
      ServiceOrder.SETRANGE("Base Service Order No.", IServiceOrderNo);
      ServiceOrder.SETRANGE("Base Service Order", FALSE);
      ServiceOrder.SETFILTER(Status, '<>%1&<>%2&<>%3',
        ServiceOrder.Status::"Technical Finished", ServiceOrder.Status::"Administrative Finished", ServiceOrder.Status::Finished);
      EXIT(ServiceOrder.ISEMPTY);
    END;

    BEGIN
    {
      DP01008: DataItemTableView (WHERE(Base Service Order=CONST(Yes)) removed
    }
    END.
  }
  RDLDATA
  {
  }
}

