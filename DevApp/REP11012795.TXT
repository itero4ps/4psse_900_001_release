OBJECT Report 11012795 Send Service Order Appointment
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Send Service Order Appointment;
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF SeekDate = 0D THEN
                    ERROR(Text000);
                END;

  }
  DATASET
  {
    { 1100528600;;DataItem;                  ;
               DataItemTable=Table11012823;
               DataItemTableView=SORTING(Starting Date,Starting Time)
                                 WHERE(Status=CONST(Open));
               OnPreDataItem=BEGIN
                               SETFILTER("Starting Date", '>%1&<=%2', TODAY, SeekDate);
                               SETRANGE("FLS VisiTour ID", 0);
                             END;

               OnAfterGetRecord=VAR
                                  Customer@1100528601 : Record 18;
                                  ServiceOrderExtension@1100528600 : Record 11071727;
                                BEGIN
                                  ServiceOrderExtension.GetServOrderExtension("No.");
                                  IF (ServiceOrderExtension."Date Appointment Letter Sent" <> 0D) AND
                                     ((ServiceOrderExtension."Resend Appointment Letter") OR ResendAll)
                                  THEN BEGIN
                                    ServiceOrderExtension."Date Appointment Letter Sent" := 0D;
                                    ServiceOrderExtension.UpdateServOrderExtension("No.");
                                  END;
                                  IF ((ServiceOrderExtension."Date Appointment Letter Sent" = 0D) AND NOT OnlyMarkedAsResend) OR
                                     (ServiceOrderExtension."Resend Appointment Letter")
                                  THEN BEGIN
                                    IF NOT Customer.GET("Bill-to Customer No.") THEN
                                      Customer.INIT;
                                    CASE Customer."Maintenance Appointments by" OF
                                      Customer."Maintenance Appointments by"::Letter:
                                        BEGIN
                                          IF OverruleAppointmentLetterCode <> '' THEN
                                            ServiceOrderExtension."Appointment Letter Code" := OverruleAppointmentLetterCode;
                                          IF ServiceOrderExtension."Resend Appointment Letter" THEN
                                            ServiceOrderExtension."Resend Appointment Letter" := FALSE;
                                          ServiceOrderExtension.UpdateServOrderExtension("No.");
                                          IF ServiceOrderExtension."Appointment Letter Code" <> '' THEN BEGIN
                                            ServiceOrderByLetter := "Service Order";
                                            ServiceOrderByLetter.MARK(TRUE);
                                          END;
                                        END;
                                      Customer."Maintenance Appointments by"::"E-Mail":
                                        BEGIN
                                          ServiceOrderByMail := "Service Order";
                                          ServiceOrderByMail.MARK(TRUE);
                                       END;
                                    END;
                                  END;
                                END;

               OnPostDataItem=VAR
                                DocumentPrint@1100528600 : Codeunit 229;
                              BEGIN
                                ServiceOrderByLetter.MARKEDONLY(TRUE);
                                IF NOT ServiceOrderByLetter.ISEMPTY THEN BEGIN
                                  DocumentPrint.SaveSOAppointmentLettersAsExternalDocuments(
                                    ServiceOrderByLetter, OnlyMarkedAsResend);
                                  COMMIT;
                                  DocumentPrint.PrintSOAppointmentLetter(ServiceOrderByLetter);
                                END;
                                ServiceOrderByMail.MARKEDONLY(TRUE);
                                IF NOT ServiceOrderByMail.ISEMPTY THEN BEGIN
                                  COMMIT;
                                  REPORT.RUNMODAL(REPORT::"E-Mail Appointment Letter", FALSE, TRUE, ServiceOrderByMail);
                                END;
                                MESSAGE(Text001, ServiceOrderByLetter.COUNT, ServiceOrderByMail.COUNT);
                              END;

               ReqFilterFields=No.,Customer No.,Bill-to Customer No.,Service Contract No.,Service Location No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100528600;;Container;
                  ContainerType=ContentArea }

      { 1100528601;1;Group  ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 1100528602;2;Field  ;
                  CaptionML=ENU=Seek Date;
                  SourceExpr=SeekDate }

      { 1100528603;2;Field  ;
                  CaptionML=ENU=Overrule Appointment Letter;
                  SourceExpr=OverruleAppointmentLetterCode;
                  TableRelation="SO Appointment Letter" }

      { 1100528605;2;Field  ;
                  CaptionML=ENU=(Re)Send All;
                  SourceExpr=ResendAll;
                  OnValidate=BEGIN
                               IF ResendAll THEN
                                 OnlyMarkedAsResend := FALSE;
                             END;
                              }

      { 1100528604;2;Field  ;
                  CaptionML=ENU=Only Marked as Resend;
                  SourceExpr=OnlyMarkedAsResend;
                  OnValidate=BEGIN
                               IF OnlyMarkedAsResend THEN
                                 ResendAll := FALSE;
                             END;
                              }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ServiceOrderByLetter@1100528602 : Record 11012823;
      ServiceOrderByMail@1100528603 : Record 11012823;
      SeekDate@1100528600 : Date;
      Text000@1100528601 : TextConst 'ENU=Seek Date not given';
      Text001@1100528604 : TextConst 'ENU=%1 Appointments sent by Letter, %2 appointments sent by E-Mail';
      OnlyMarkedAsResend@1100528605 : Boolean INDATASET;
      ResendAll@1100528607 : Boolean INDATASET;
      OverruleAppointmentLetterCode@1100528606 : Code[10];

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

