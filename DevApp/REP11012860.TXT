OBJECT Report 11012860 Get Updated Lab Orders
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Get Updated Lab Orders;
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   // Defaults for use with the NAS
                   StartDate := CALCDATE('<-1D>', TODAY);
                   EndDate := TODAY;
                 END;

    OnPreReport=VAR
                  ServiceOrder@1100525007 : Record 11012823;
                  LabOrderWebservice@1100525000 : Codeunit 11012830;
                  ResultsDocument@1100525001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
                  OrderNoNodeList@1100525002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF82-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNodeList";
                  ServiceOrderNo@1100525006 : Code[20];
                  OrderNoNodeCount@1100525005 : Integer;
                  i@1100525004 : Integer;
                BEGIN
                  Window.OPEN(Text000);

                  LabOrderWebservice.GetOrders(StartDate, EndDate, ResultsDocument);

                  OrderNoNodeList := ResultsDocument.selectNodes('//projectcode[../reported = ''T'']');
                  OrderNoNodeCount := OrderNoNodeList.length;

                  FOR i := 0 TO OrderNoNodeCount - 1 DO BEGIN
                    EVALUATE(ServiceOrderNo, OrderNoNodeList.item(i).text);

                    IF ServiceOrder.GET(ServiceOrderNo) THEN BEGIN
                      ServiceOrder."Get Lab Certificate" := GetLabCertificates;
                      IF NOT CODEUNIT.RUN(CODEUNIT::"Lab Order Management", ServiceOrder) THEN
                        MESSAGE(Text001, ServiceOrder.TABLECAPTION, ServiceOrder."No.");
                    END;
                  END;
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  CaptionML=ENU=Start Date;
                  SourceExpr=StartDate }

      { 1100525003;2;Field  ;
                  CaptionML=ENU=End Date;
                  SourceExpr=EndDate }

      { 1100525004;2;Field  ;
                  CaptionML=ENU=Get Lab Certificates;
                  SourceExpr=GetLabCertificates }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Window@1100525001 : Dialog;
      Text000@1100525002 : TextConst 'ENU=Getting updated lab orders...';
      StartDate@1100525000 : Date;
      EndDate@1100525003 : Date;
      GetLabCertificates@1100525004 : Boolean;
      Text001@1100525005 : TextConst 'ENU=Failed to get lab order results for %1 %2. Please try again from the %1 card.';

    BEGIN
    {
      In this report xml automation variables are still used, because it is difficult to test test this functionality
      after conversion to xml dotnet variables. The automation variables are used on the client and no events are used,
      so it should not be a problem to use automation here.
    }
    END.
  }
  RDLDATA
  {
  }
}

