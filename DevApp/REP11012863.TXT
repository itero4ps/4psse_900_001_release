OBJECT Report 11012863 Create Maint. Prop. Serv.Contr
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Create Maintenance Proposal Service Contract;
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF gvDateUntil = 0D THEN
                    ERROR(Text003);
                END;

    OnPostReport=BEGIN
                   IF ProposalCodeRange <> '' THEN
                     MESSAGE(Text000, ProposalCodeRange)
                   ELSE
                     MESSAGE(Text001);
                 END;

  }
  DATASET
  {
    { 4178;    ;DataItem;                    ;
               DataItemTable=Table11012812;
               DataItemTableView=SORTING(No.);
               OnPreDataItem=VAR
                               MaintenanceManagementCU@1100526200 : Codeunit 11012829;
                             BEGIN
                               IF UseClusterSeqn AND UseContractClusters AND (OriginalContractFilter <> '') THEN
                                 SETFILTER("No.", OriginalContractFilter);
                               ProposalCodeRange :=
                                 MaintenanceManagementCU.CreateMaintProposalFromContr("Service-Contract", gvDateUntil, ClusterFilter, ClusterSeqn, SplitPerContract);
                               CurrReport.BREAK;
                             END;

               ReqFilterFields=No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  CaptionML=ENU=Date Until;
                  SourceExpr=gvDateUntil }

      { 1100528600;2;Field  ;
                  CaptionML=ENU=Split Per Contract;
                  SourceExpr=SplitPerContract }

      { 1100525003;2;Field  ;
                  CaptionML=ENU=By Cluster Seq. No.;
                  SourceExpr=UseClusterSeqn;
                  OnValidate=BEGIN
                               RequestOptionsPage.UPDATE;
                             END;
                              }

      { 1100525004;2;Field  ;
                  CaptionML=ENU=Contract No.;
                  SourceExpr=ContractFilter;
                  TableRelation=Service-Contract.No.;
                  Enabled=UseClusterSeqn AND UseContractClusters;
                  OnValidate=BEGIN
                               SingleContract := CheckSingleContract(ContractFilter);
                               IF NOT SingleContract THEN BEGIN
                                 ClusterFilter := '';
                                 ClusterSeqn := 0;
                               END;
                             END;
                              }

      { 1100525005;2;Field  ;
                  CaptionML=ENU=Cluster Filter;
                  SourceExpr=ClusterFilter;
                  Enabled=UseClusterSeqn;
                  OnValidate=VAR
                               ServiceContractCluster@1100525000 : Record 11071742;
                             BEGIN
                               IF SingleContract THEN
                                 ServiceContractCluster.GET(ContractFilter, ClusterFilter);
                               ClusterSeqn := 0;
                             END;

                  OnLookup=VAR
                             ServiceContractCluster@1100525000 : Record 11071742;
                           BEGIN
                             IF SingleContract THEN BEGIN
                               ServiceContractCluster.SETFILTER("Service Contract No.", ContractFilter);
                               IF PAGE.RUNMODAL(0, ServiceContractCluster) = ACTION::LookupOK THEN BEGIN
                                 ClusterFilter := ServiceContractCluster.Code;
                                 ClusterSeqn := 0;
                               END;
                             END;
                           END;
                            }

      { 1100525006;2;Field  ;
                  CaptionML=ENU=Cluster Seqn.;
                  SourceExpr=ClusterSeqn;
                  Enabled=UseClusterSeqn;
                  OnValidate=VAR
                               ServiceContractClusterSeq@1100525000 : Record 11071966;
                             BEGIN
                               IF SingleContract THEN
                                 ServiceContractClusterSeq.GET(ContractFilter, ClusterFilter, ClusterSeqn);
                             END;

                  OnLookup=VAR
                             ServiceContractClusterSeq@1100525000 : Record 11071966;
                           BEGIN
                             IF SingleContract THEN BEGIN
                               ServiceContractClusterSeq.SETRANGE("Service Contract No.", ContractFilter);
                               ServiceContractClusterSeq.SETRANGE("Cluster Code", ClusterFilter);
                               IF PAGE.RUNMODAL(0, ServiceContractClusterSeq) = ACTION::LookupOK THEN
                                 ClusterSeqn := ServiceContractClusterSeq."Seq. No.";
                             END;
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      gvDateUntil@1100525001 : Date;
      ContractFilter@1100528603 : Text[250];
      OriginalContractFilter@1100525000 : Text[250];
      ProposalCodeRange@1100526201 : Code[50];
      Text000@1100526202 : TextConst 'ENU=Maintenance Proposal created: %1';
      Text001@1100526203 : TextConst 'ENU=No Maintenance Proposal created';
      Text002@1100526205 : TextConst 'ENU=Progress: @1@@@@@@@@@@@';
      Text003@1100528600 : TextConst 'ENU=Please provide Date Until';
      ClusterFilter@1100528601 : Code[10];
      ClusterSeqn@1100528602 : Integer;
      SingleContract@1100528604 : Boolean;
      UseClusterSeqn@1100528605 : Boolean INDATASET;
      UseContractClusters@1100525002 : Boolean INDATASET;
      SplitPerContract@1100528606 : Boolean;

    PROCEDURE SetContractFilter@1100528600(IContractFilter@1100528600 : Text[250]);
    VAR
      ServiceContract@1100525000 : Record 11012812;
    BEGIN
      ContractFilter := IContractFilter;
      OriginalContractFilter := IContractFilter;
      SingleContract := CheckSingleContract(OriginalContractFilter);
      IF SingleContract THEN BEGIN
        IF ServiceContract.GET(IContractFilter) THEN
          UseContractClusters := ServiceContract."Use Contract Clusters";
        IF NOT UseContractClusters THEN
          ContractFilter := '';
      END;
      SingleContract := CheckSingleContract(ContractFilter);
    END;

    PROCEDURE CheckSingleContract@1100528601(IContractFilter@1100528600 : Text[250]) : Boolean;
    VAR
      ServiceContract@1100528601 : Record 11012812;
    BEGIN
      IF ContractFilter = '' THEN
        EXIT(TRUE);
      ServiceContract.SETFILTER("No.", ContractFilter);
      EXIT(ServiceContract.COUNT = 1);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

