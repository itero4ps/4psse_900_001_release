OBJECT Report 11012907 Copy Invest. Proposal Template
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Copy Investment Proposal Template;
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  RubricLineInserted := FALSE;

                  IF ("Investment Proposal Template".GETFILTER(Template) = '') THEN
                    ERROR(Text000, InvPropTemplRec.FIELDCAPTION(Template));
                  IF (SelProject = '') THEN
                    ERROR(Text000, InvPropRec.FIELDCAPTION("Project No."));
                  IF (SelVersion = '') THEN
                    ERROR(Text000, InvPropRec.FIELDCAPTION(Version));

                  InvPropRec.GET(SelProject, SelVersion);

                  InvPropTemplRec.RESET;
                  InvPropTemplRec.SETFILTER(Template, "Investment Proposal Template".GETFILTER(Template));
                  Counter := InvPropTemplRec.COUNT;
                  IF Counter > 1 THEN BEGIN
                    IF NOT CONFIRM(Text001, FALSE, InvPropTemplRec.FIELDCAPTION(Template), Counter) THEN
                      ERROR('');
                  END;
                END;

    OnPostReport=BEGIN
                   IF RubricLineInserted THEN
                     InvPropRubricRec.UpdateSurcharges(InvPropRubricRec, FALSE);
                 END;

  }
  DATASET
  {
    { 2951;    ;DataItem;                    ;
               DataItemTable=Table11012916;
               DataItemTableView=SORTING(Template);
               ReqFilterFields=Template }

    { 4372;1   ;DataItem;                    ;
               DataItemTable=Table11012917;
               DataItemTableView=SORTING(Template,Rubric Code);
               ReqFilterHeadingML=ENU=Template Lie;
               OnAfterGetRecord=BEGIN
                                  IF NOT InvPropRubricRec.GET(SelProject, SelVersion, "Rubric Code") THEN BEGIN
                                    InvPropRubricRec.INIT;
                                    InvPropRubricRec."Project No." := SelProject;
                                    InvPropRubricRec.Version := SelVersion;
                                    InvPropRubricRec."Rubric Code" := "Rubric Code";
                                    InvPropRubricRec.Description := Description;
                                    InvPropRubricRec.Type := Type;
                                    InvPropRubricRec.Percentage := Percentage;
                                    InvPropRubricRec.Totaling := Totaling;
                                    InvPropRubricRec."Percentage Filter" := "Percentage Filter";
                                    InvPropRubricRec."Cost Object Filter" := "Cost Object Filter";
                                    InvPropRubricRec.Indentation := Indentation;
                                    InvPropRubricRec.Bold := Bold;
                                    InvPropRubricRec."Budget Distribution" := "Budget Distribution";
                                    InvPropRubricRec."Tot.Type for Perc. (Sub)Totals" := "Tot.Type for Perc. (Sub)Totals";  //*15625.n
                                    InvPropRubricRec.INSERT;
                                    RubricLineInserted := TRUE;
                                  END;
                                END;

               ReqFilterFields=Rubric Code;
               DataItemLink=Template=FIELD(Template) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   IF SetSelBln THEN BEGIN
                     SelProject := gProject;
                     SelVersion := gVersion;
                   END;
                 END;

    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  CaptionML=ENU=Project No.;
                  SourceExpr=SelProject;
                  OnValidate=BEGIN
                               ValidateInvestmentProposal;
                             END;

                  OnLookup=BEGIN
                             LookupInvestmentProposal(FALSE);
                           END;
                            }

      { 1100525003;2;Field  ;
                  CaptionML=ENU=Version;
                  SourceExpr=SelVersion;
                  OnValidate=BEGIN
                               ValidateInvestmentProposal;
                             END;

                  OnLookup=BEGIN
                             LookupInvestmentProposal(TRUE);
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      InvPropTemplRec@1210190009 : Record 11012916;
      InvPropRec@1100525000 : Record 11012912;
      InvPropRubricRec@1210190001 : Record 11012913;
      SetSelBln@1210190012 : Boolean;
      RubricLineInserted@1210190006 : Boolean;
      Counter@1210190010 : Integer;
      gProject@1210190002 : Code[20];
      gVersion@1210190003 : Code[10];
      SelProject@1210190005 : Code[20];
      SelVersion@1210190004 : Code[10];
      Text000@1210190007 : TextConst 'ENU=%1 must befilled in. Please enter a value.';
      Text001@1210190011 : TextConst 'ENU=More than one (%2) %1 selected. Continue?';

    PROCEDURE SetSelections@1210190003(IProject@1210190001 : Code[20];IVersion@1210190000 : Code[10]);
    BEGIN
      SetSelBln := TRUE;
      gProject := IProject;
      gVersion := IVersion;
    END;

    PROCEDURE ValidateInvestmentProposal@1100525003();
    VAR
      InvestmentProposal@1100525000 : Record 11012912;
    BEGIN
      IF (SelProject <> '') AND (SelVersion <> '') THEN
        InvestmentProposal.GET(SelProject, SelVersion);
    END;

    PROCEDURE LookupInvestmentProposal@1100525000(FromVersion@1100525000 : Boolean);
    VAR
      InvestmentProposal@1100525002 : Record 11012912;
      InvestmentProposalList@1100525001 : Page 11012661;
    BEGIN
      IF FromVersion THEN
        InvestmentProposal.SETRANGE("Project No.", SelProject);
      InvestmentProposal."Project No." := SelProject;
      InvestmentProposal.Version := SelVersion;

      InvestmentProposalList.SETTABLEVIEW(InvestmentProposal);
      InvestmentProposalList.SETRECORD(InvestmentProposal);
      InvestmentProposalList.LOOKUPMODE := TRUE;
      IF InvestmentProposalList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        InvestmentProposalList.GETRECORD(InvestmentProposal);
        SelProject := InvestmentProposal."Project No.";
        SelVersion := InvestmentProposal.Version;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

