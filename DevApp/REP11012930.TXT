OBJECT Report 11012930 Clear Debrief Logbook (Mobile)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Clear Debrief Logbook (4PS Mobiel);
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  ValidateDateTimeTo();
                END;

  }
  DATASET
  {
    { 7380;    ;DataItem;Logbook             ;
               DataItemTable=Table11012677;
               DataItemTableView=SORTING(Work Order No.,Resource No. (Employee),Debrief Type);
               OnAfterGetRecord=VAR
                                  lvDebriefWorkOrderRec@1100485006 : Record 11012679;
                                  lvDebriefBudgetRec@1100485005 : Record 11012680;
                                  lvDebriefCostPlusRec@1100485004 : Record 11012681;
                                  lvDebriefAdviceOrderRec@1100485003 : Record 11012682;
                                  lvDebriefStatusFSRec@1100485002 : Record 11012683;
                                  lvDebriefTextRec@1100485001 : Record 11012684;
                                  lvDebriefHourAccRec@1100485000 : Record 11012685;
                                  lvDebriefDecentralWORec@1100485007 : Record 11012686;
                                  lvDebriefServiceTextRec@1210190000 : Record 11020449;
                                  lvDebriefObjectSpecRec@1210190001 : Record 11020448;
                                  lvDebriefInspectionRec@1210190002 : Record 11020447;
                                  DebriefRestockItem@1100525002 : Record 11125645;
                                  DebriefPlanning@1100525001 : Record 11125646;
                                  lvDebriefCreatePurchOrd@1100525000 : Record 11125648;
                                  DebriefServiceOrderObject@1100528700 : Record 11125652;
                                BEGIN
                                  //* Alleen geboekte regels verwijderen, andere regels moet men eerst maar herstellen/boeken of handmatig verwijderen op forms.
                                  CASE "Debrief Type" OF
                                    "Debrief Type"::WorkOrder:
                                      BEGIN
                                        WITH lvDebriefWorkOrderRec DO BEGIN
                                          SETRANGE("Work Order No.", Logbook."Work Order No.");
                                          SETRANGE("Resource No. (Employee)", Logbook."Resource No. (Employee)");
                                          SETRANGE(Status, Status::Processed);
                                          SETRANGE("Received on", 0DT, EndingDateTime);
                                          DELETEALL(TRUE);
                                        END;
                                      END;
                                    "Debrief Type"::Budget:
                                      BEGIN
                                        WITH lvDebriefBudgetRec DO BEGIN
                                          SETRANGE("Work Order No.", Logbook."Work Order No.");
                                          SETRANGE("Resource No. (Employee)", Logbook."Resource No. (Employee)");
                                          SETRANGE(Status, Status::Processed);
                                          SETRANGE("Received on", 0DT, EndingDateTime);
                                          DELETEALL(TRUE);
                                        END;
                                      END;
                                    "Debrief Type"::CostPlus:
                                      BEGIN
                                        WITH lvDebriefCostPlusRec DO BEGIN
                                          SETRANGE("Work Order No.", Logbook."Work Order No.");
                                          SETRANGE("Resource No. (Employee)", Logbook."Resource No. (Employee)");
                                          SETRANGE(Status, Status::Processed);
                                          SETRANGE("Received on", 0DT, EndingDateTime);
                                          DELETEALL(TRUE);
                                        END;
                                      END;
                                    "Debrief Type"::AdviceOrder:
                                      BEGIN
                                        WITH lvDebriefAdviceOrderRec DO BEGIN
                                          SETRANGE("Work Order No.", Logbook."Work Order No.");
                                          SETRANGE("Resource No. (Employee)", Logbook."Resource No. (Employee)");
                                          SETRANGE(Status, Status::Processed);
                                          SETRANGE("Received on", 0DT, EndingDateTime);
                                          DELETEALL(TRUE);
                                        END;
                                      END;
                                    "Debrief Type"::Status:
                                      BEGIN
                                        WITH lvDebriefStatusFSRec DO BEGIN
                                          SETRANGE("Work Order No.", Logbook."Work Order No.");
                                          SETRANGE("Resource No. (Employee)", Logbook."Resource No. (Employee)");
                                          SETRANGE(Status, Status::Processed);
                                          SETRANGE("Received on", 0DT, EndingDateTime);
                                          DELETEALL(TRUE);
                                        END;
                                      END;
                                    "Debrief Type"::Text:
                                      BEGIN
                                        WITH lvDebriefTextRec DO BEGIN
                                          SETRANGE("Work Order No.", Logbook."Work Order No.");
                                          SETRANGE("Resource No. (Employee)", Logbook."Resource No. (Employee)");
                                          SETRANGE(Status, Status::Processed);
                                          SETRANGE("Received on", 0DT, EndingDateTime);
                                          DELETEALL(TRUE);
                                        END;
                                      END;
                                    "Debrief Type"::Hours:
                                      BEGIN
                                        WITH lvDebriefHourAccRec DO BEGIN
                                          SETRANGE("Work Order No.", Logbook."Work Order No.");
                                          SETRANGE("Resource No. (Employee)", Logbook."Resource No. (Employee)");
                                          SETRANGE(Status, Status::Processed);
                                          SETRANGE("Received on", 0DT, EndingDateTime);
                                          DELETEALL(TRUE);
                                        END;
                                      END;
                                    "Debrief Type"::DecentralWO:
                                      BEGIN
                                        WITH lvDebriefDecentralWORec DO BEGIN
                                          SETRANGE("Mobile Work Order No.", Logbook."Work Order No.");
                                          SETRANGE("Resource No. (Employee)", Logbook."Resource No. (Employee)");
                                          SETRANGE(Status, Status::Processed);
                                          SETRANGE("Received on", 0DT, EndingDateTime);
                                          DELETEALL(TRUE);
                                        END;
                                      END;
                                    "Debrief Type"::InspectionLine:
                                      BEGIN
                                        WITH lvDebriefInspectionRec DO BEGIN
                                          SETRANGE("Work Order No.", Logbook."Work Order No.");
                                          SETRANGE("Resource No. (Employee)", Logbook."Resource No. (Employee)");
                                          SETRANGE(Status, Status::Processed);
                                          SETRANGE("Received on", 0DT, EndingDateTime);
                                          DELETEALL(TRUE);
                                        END;
                                      END;
                                    "Debrief Type"::OrderText:
                                      BEGIN
                                        WITH lvDebriefServiceTextRec DO BEGIN
                                          SETRANGE("Work Order No.", Logbook."Work Order No.");
                                          SETRANGE("Resource No. (Employee)", Logbook."Resource No. (Employee)");
                                          SETRANGE(Status, Status::Processed);
                                          SETRANGE("Received on", 0DT, EndingDateTime);
                                          DELETEALL(TRUE);
                                        END;
                                      END;
                                    "Debrief Type"::ObjectSpecification:
                                      BEGIN
                                        WITH lvDebriefObjectSpecRec DO BEGIN
                                          SETRANGE("Work Order No.", Logbook."Work Order No.");
                                          SETRANGE("Resource No. (Employee)", Logbook."Resource No. (Employee)");
                                          SETRANGE(Status, Status::Processed);
                                          SETRANGE("Received on", 0DT, EndingDateTime);
                                          DELETEALL(TRUE);
                                        END;
                                      END;
                                    "Debrief Type"::RestockItem:
                                      BEGIN
                                        WITH DebriefRestockItem DO BEGIN
                                          SETRANGE("Work Order No.", Logbook."Work Order No.");
                                          SETRANGE("Resource No. (Employee)", Logbook."Resource No. (Employee)");
                                          SETRANGE(Status, Status::Processed);
                                          SETRANGE("Received on", 0DT, EndingDateTime);
                                          DELETEALL(TRUE);
                                        END;
                                      END;
                                    "Debrief Type"::Planning:
                                      BEGIN
                                        WITH DebriefPlanning DO BEGIN
                                          SETRANGE("Work Order No.", Logbook."Work Order No.");
                                          SETRANGE("Resource No. (Employee)", Logbook."Resource No. (Employee)");
                                          SETRANGE(Status, Status::Processed);
                                          SETRANGE("Received on", 0DT, EndingDateTime);
                                          DELETEALL(TRUE);
                                        END;
                                      END;
                                    "Debrief Type"::CreatePurchOrder:
                                      BEGIN
                                        WITH lvDebriefCreatePurchOrd DO BEGIN
                                          SETRANGE("Work Order No.", Logbook."Work Order No.");
                                          SETRANGE("Resource No. (Employee)", Logbook."Resource No. (Employee)");
                                          SETRANGE(Status, Status::Processed);
                                          SETRANGE("Received on", 0DT, EndingDateTime);
                                          DELETEALL(TRUE);
                                        END;
                                      END;
                                    "Debrief Type"::ServiceOrderObject: // dp00276
                                      BEGIN
                                        WITH DebriefServiceOrderObject DO BEGIN
                                          SETRANGE("Work Order No.", Logbook."Work Order No.");
                                          SETRANGE("Resource No. (Employee)", Logbook."Resource No. (Employee)");
                                          SETRANGE(Status, Status::Processed);
                                          SETRANGE("Received on", 0DT, EndingDateTime);
                                          DELETEALL(TRUE);
                                        END;
                                      END;

                                  END;

                                  Logbook.CalcfieldsDebrief(LastReceive,LogbookLines,ProcessedLines,NotProcessedLines);
                                  IF LogbookLines = 0 THEN
                                    DELETE;  //* Alleen verwijderen als geen regels meer aanwezig
                                END;

               ReqFilterFields=Work Order No.,Resource No. (Employee),Debrief Type }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  CaptionML=ENU=Date/Time to;
                  NotBlank=Yes;
                  SourceExpr=EndingDateTime;
                  OnValidate=BEGIN
                               ValidateDateTimeTo();
                             END;
                              }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      EndingDateTime@1100485000 : DateTime;
      Text000@1100485001 : TextConst 'ENU=''Date/Tiime  to'' must be entered.';
      Text001@1100485002 : TextConst 'ENU="Deleting very recent logbook lines not allowed, must be at least 10 minutes old. "';
      LastReceive@1100485003 : DateTime;
      LogbookLines@1100485004 : Integer;
      ProcessedLines@1100485005 : Integer;
      NotProcessedLines@1100485006 : Integer;

    PROCEDURE ValidateDateTimeTo@1100485000();
    BEGIN
      IF (EndingDateTime = 0DT) THEN
        ERROR(Text000);

      //* Heel recente logboekregels moeten we hier niet gaan verwijderen, moet
      //* men eventueel maar heel bewust handmatig in logboekscherm verwijderen.
      IF (EndingDateTime > CREATEDATETIME(TODAY, TIME-(1000*60*10))) THEN  //* 1000msec*60*10 = 10 minuten
        ERROR(Text001);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

