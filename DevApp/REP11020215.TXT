OBJECT Report 11020215 Export Hours Raet
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Export Hours Raet;
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   ProjectSetup.GET;

                   IF ProjectSetup."Exchange Salary Application" = FALSE THEN
                     ERROR(
                       Text000 +
                       Text001,
                       ProjectSetup.TABLECAPTION);

                   //ProjectSetup.TESTFIELD("Salary Application",ProjectSetup."Salary Application"::Raet);
                 END;

    OnPreReport=VAR
                  lWageComponentRec@1100485000 : Record 11012014;
                  lColumNo@1100485001 : Integer;
                  QuitReport@1100485002 : Boolean;
                BEGIN
                  IF DocumentNumberCode = '' THEN
                    ERROR(Text002);
                  IF (StartDateSelection = 0D) OR (EndDateSelection = 0D) THEN
                    ERROR(Text007);
                  IF EndDateSelection < StartDateSelection THEN
                    ERROR(Text008);

                  PostedHoursRec.SETFILTER("Document No.",DocumentNumberCode);
                  PostedHoursRec.SETRANGE("Posting Date", StartDateSelection, EndDateSelection);
                  PostedHoursRec.SETFILTER("Cost Type", '%1|%2',
                                            PostedHoursRec."Cost Type"::Labor,
                                            PostedHoursRec."Cost Type"::Sundry);
                  IF EmployerCde <> '' THEN
                    PostedHoursRec.SETRANGE(Employer,EmployerCde);

                  IF NOT PostedHoursRec.FINDFIRST THEN
                    ERROR(Text004);

                  PathText := ProjectSetup."Pathname Files to Salary";

                  ExcelAutomation.InitExcel;
                  WorkBookName := PathText + DocumentNumberCode + ExcelAutomation.GetVersionDependentFileExtension;
                  WorkSheetName := DocumentNumberCode;

                  QuitReport := FALSE;

                  IF FileMgt.ClientFileExists(WorkBookName) THEN
                    IF NOT CONFIRM(Text006,FALSE,DocumentNumberCode) THEN BEGIN
                      CurrReport.QUIT;
                      QuitReport := TRUE;
                    END;

                  IF NOT QuitReport THEN BEGIN

                  //  ExcelAutomation.InitExcel;
                    ExcelAutomation.InitWorkbook(WorkSheetName);

                    ExcelAutomation.SetSettingBold(TRUE);

                  //  ExcelAutomation.WriteCell(1,1,'Emplnr.');
                    ExcelAutomation.WriteCell(1, 1, '096(60)');    //**jth, 11-04-2005
                    ExcelAutomation.WriteCell(2, 1, 'Afdruknaam');
                    ExcelAutomation.WriteCell(3, 1, 'Afdeling');

                    lWageComponentRec.SETFILTER(lWageComponentRec."Excel Column", '<>%1', '');
                    lWageComponentRec.SETFILTER(lWageComponentRec."Raet/Perman Code", '<>%1', '');
                    IF lWageComponentRec.FIND('-') THEN BEGIN
                      REPEAT
                        lColumNo := FindColumn(lWageComponentRec.Code);
                        IF lColumNo <> 0 THEN BEGIN
                          ExcelAutomation.WriteCell(lColumNo, 1, lWageComponentRec."Raet/Perman Code");
                        END;
                      UNTIL lWageComponentRec.NEXT = 0;
                    END;

                    ExcelAutomation.SetSettingBold(FALSE);

                    RowNo := 2;   //**jth 11-04-2005

                  END;
                END;

    OnPostReport=BEGIN
                   ExcelAutomation.SaveWorkbookAs(WorkBookName);
                   ExcelAutomation.CloseWorkbook;
                   ExcelAutomation.TermExcel;
                 END;

  }
  DATASET
  {
    { 7528;    ;DataItem;                    ;
               DataItemTable=Table5200;
               DataItemTableView=SORTING(No.)
                                 WHERE(External=FILTER(No));
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               LinesExported := FALSE;
                               ExportDateTime := CURRENTDATETIME;
                             END;

               OnAfterGetRecord=VAR
                                  lColumNo@1100485000 : Integer;
                                  lSaveTxt@1100485001 : Text[30];
                                  lSaveDec@1100485002 : Decimal;
                                BEGIN
                                  PostedHoursRec.SETRANGE("Employee No.","No.");
                                  IF PostedHoursRec.FINDSET THEN BEGIN
                                    ExcelAutomation.WriteCell(1, RowNo, STRSUBSTNO('%1', "No."));
                                    ExcelAutomation.WriteCell(2, RowNo, STRSUBSTNO('%1', "Full Name"));
                                    ExcelAutomation.WriteCell(3, RowNo, STRSUBSTNO('%1', "Global Dimension 1 Code"));
                                    REPEAT
                                      CASE PostedHoursRec."Component Type" OF
                                        PostedHoursRec."Component Type"::Hours:
                                          QuantAmountDec := PostedHoursRec."Total Line";
                                        PostedHoursRec."Component Type"::Expenses:
                                          IF PostedHoursRec."Amount (LCY)" = 0 THEN
                                            QuantAmountDec := PostedHoursRec.Quantity
                                          ELSE
                                            QuantAmountDec := PostedHoursRec."Amount (LCY)" - PostedHoursRec."Precalc. Surcharge Expenses";
                                        PostedHoursRec."Component Type"::Days:
                                          QuantAmountDec:= PostedHoursRec.Quantity;
                                      END;
                                      lColumNo := FindColumn(PostedHoursRec."Wage Component");
                                      IF lColumNo <> 0 THEN BEGIN
                                        lSaveTxt := ExcelAutomation.ReadCell(lColumNo, RowNo);
                                        lSaveDec := 0;
                                        IF EVALUATE(lSaveDec, lSaveTxt) THEN;
                                        QuantAmountDec := ROUND(QuantAmountDec + lSaveDec, 0.00001); //Rounding needed in some cases
                                        ExcelAutomation.WriteCell(lColumNo, RowNo, STRSUBSTNO('%1', QuantAmountDec));
                                        UpdateStatus(PostedHoursRec.Year,PostedHoursRec.Week,PostedHoursRec."Employee No.",PostedHoursRec."Line No.");
                                        LinesExported := TRUE;
                                      END;
                                    UNTIL PostedHoursRec.NEXT = 0;
                                    RowNo := RowNo + 1;
                                  END;
                                END;

               OnPostDataItem=VAR
                                lLineNoInt@1100485000 : Integer;
                              BEGIN
                                IF LinesExported THEN BEGIN

                                  IF HoursExportRec.FIND('+') THEN
                                    lLineNoInt := HoursExportRec."Line No." + 1
                                  ELSE
                                    lLineNoInt := 1;

                                  HoursExportRec.INIT;
                                  HoursExportRec."Line No." := lLineNoInt;
                                  HoursExportRec."Document No." := DocumentNumberCode;
                                  HoursExportRec."User ID" := USERID;
                                  HoursExportRec.Date := TODAY;
                                  HoursExportRec.Time := TIME;
                                  HoursExportRec.INSERT;

                                END;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  CaptionML=ENU=Document No.;
                  NotBlank=Yes;
                  SourceExpr=DocumentNumberCode }

      { 1100409001;2;Field  ;
                  Name=StartDateSelection;
                  CaptionML=ENU=From Posting Date;
                  NotBlank=Yes;
                  SourceExpr=StartDateSelection;
                  OnValidate=BEGIN
                               IF EndDateSelection < StartDateSelection THEN
                                 EndDateSelection := StartDateSelection;
                             END;
                              }

      { 1100409000;2;Field  ;
                  CaptionML=ENU=Posting Date To;
                  NotBlank=Yes;
                  SourceExpr=EndDateSelection;
                  OnValidate=BEGIN
                               IF EndDateSelection < StartDateSelection THEN
                                 ERROR(Text008);
                             END;
                              }

      { 1100525003;2;Field  ;
                  CaptionML=ENU=For Employer;
                  SourceExpr=EmployerCde;
                  OnLookup=VAR
                             EmployerPage@1100525003 : Page 11012064;
                             EmployerRec@1100525002 : Record 11012013;
                           BEGIN
                             CLEAR(EmployerPage);
                             EmployerPage.LOOKUPMODE(TRUE);
                             IF EmployerPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
                               EmployerPage.GETRECORD(EmployerRec);
                               EmployerCde := EmployerRec.Code;
                             END;
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ExcelAutomation@1210190000 : Codeunit 11012402;
      FileMgt@1100525500 : Codeunit 419;
      RowNo@1210190001 : Integer;
      DocumentNumberCode@1100485001 : Code[20];
      HoursExportRec@1100485002 : Record 11012041;
      Text000@1100485010 : TextConst 'ENU=Hours may not be exported.';
      Text001@1100485009 : TextConst 'ENU=Go to %1 to activate this function.';
      Text002@1100485008 : TextConst 'ENU=Fill out Document Number.';
      Text003@1100485007 : TextConst 'ENU=.xls';
      Text004@1100485006 : TextConst 'ENU=No hours present for this Document Number';
      Text006@1100485004 : TextConst 'ENU=Document Number %1 has been exported before, again ?';
      PathText@1100485011 : Text[150];
      ProjectSetup@1100485012 : Record 315;
      WorkBookName@1100485013 : Text[250];
      WorkSheetName@1100485017 : Text[50];
      PostedHoursRec@1100485014 : Record 11012085;
      QuantAmountDec@1100485015 : Decimal;
      LinesExported@1100485016 : Boolean;
      EmployerCde@1100485000 : Code[20];
      StartDateSelection@1100409001 : Date;
      EndDateSelection@1100409000 : Date;
      ExportDateTime@1100525000 : DateTime;
      Text007@1100409002 : TextConst 'ENU=Fill Posting Date Selection.';
      Text008@1100409003 : TextConst 'ENU=To Date may not be less than From Date';

    PROCEDURE SetSelection@10(DocumentNo@11012000 : Code[20];StartDate@1100409001 : Date;EndDate@1100409000 : Date);
    BEGIN
      DocumentNumberCode := DocumentNo;
      StartDateSelection := StartDate;
      EndDateSelection := EndDate;
    END;

    PROCEDURE FindColumn@1100485014(WageComponent@1100485000 : Text[30]) oColumnNo : Integer;
    VAR
      lWageComponent@1100485001 : Record 11012014;
      lChar@1100485002 : Char;
      lInteger@1100485003 : Integer;
    BEGIN
      oColumnNo := 0;
      IF lWageComponent.GET(WageComponent) THEN BEGIN
        IF STRLEN(lWageComponent."Excel Column") > 0 THEN BEGIN
          EVALUATE(lChar,COPYSTR(lWageComponent."Excel Column",1,1));
          lInteger := lChar - 64;
          oColumnNo := lInteger;
          IF STRLEN(lWageComponent."Excel Column") = 2 THEN BEGIN
            oColumnNo := oColumnNo * 26;
            EVALUATE(lChar,COPYSTR(lWageComponent."Excel Column",2,1));
            lInteger := lChar - 64;
            oColumnNo := oColumnNo + lInteger
          END;
        END;
      END;
    END;

    PROCEDURE UpdateStatus@1(lvYear@11012001 : Integer;lvWeek@11012002 : Integer;lvEmpl@11012003 : Code[20];lvLine@11012004 : Integer);
    VAR
      lvHourRec@11012005 : Record 11012085;
    BEGIN
      lvHourRec.GET(lvYear, lvWeek, lvEmpl, lvLine);
      lvHourRec.Status := lvHourRec.Status::Export;
      lvHourRec.Exported := TRUE;
      lvHourRec."Exported on" := ExportDateTime;
      lvHourRec.MODIFY;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

