OBJECT Report 11072113 Modify Assembly Data
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Modify Assembly Data;
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   Cancelled := TRUE;
                   GetJobSetup;
                   GetInventorySetup;
                 END;

    OnPostReport=BEGIN
                   Cancelled := FALSE;
                 END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  CaptionML=ENU=Location Code;
                  SourceExpr=LocationCode;
                  OnValidate=BEGIN
                               ValidateLocationCode(LocationCode);
                             END;

                  OnLookup=BEGIN
                             LookupLocation;
                           END;
                            }

      { 1100525003;2;Field  ;
                  CaptionML=ENU=Bin Code;
                  SourceExpr=BinCode;
                  OnValidate=BEGIN
                               ValidateBinCode(ProjectNo, LocationCode, BinCode);
                             END;

                  OnLookup=BEGIN
                             LookupBin;
                           END;
                            }

      { 1100525004;2;Field  ;
                  CaptionML=ENU=Shelf No.;
                  SourceExpr=ShelfCode;
                  OnValidate=BEGIN
                               ValidateShelfCode(ShelfCode);
                             END;

                  OnLookup=BEGIN
                             LookupShelf;
                           END;
                            }

      { 1100525005;2;Field  ;
                  CaptionML=ENU=Cost Object;
                  SourceExpr=CostObject;
                  OnValidate=BEGIN
                               ValidateCostObject(CostObject);
                             END;

                  OnLookup=BEGIN
                             LookupCostObject;
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Location@1210190000 : Record 14;
      JobsSetup@1100526109 : Record 315;
      InventorySetup@1210190004 : Record 313;
      ProjectNo@1100526106 : Code[20];
      LocationCode@1100526100 : Code[20];
      BinCode@1100526104 : Code[20];
      ShelfCode@1100526101 : Code[20];
      CostObject@1100526102 : Code[20];
      Cancelled@1100526103 : Boolean;
      Text000@1210190001 : TextConst 'ENU=%1 is mandatory for this %2.';
      Text001@1210190003 : TextConst 'ENU=%1 is mandatory.';
      JobSetupRead@1210190002 : Boolean;
      InventorySetupRead@1210190005 : Boolean;

    PROCEDURE LookupLocation@1100526109();
    VAR
      PreferenceLocation@1100526100 : Record 11020353;
      Location@1100526102 : Record 14;
      PreferenceLocationPage@1100526101 : Page 11072043;
      LocationPage@1100526103 : Page 15;
    BEGIN
      IF (JobsSetup."Preferred Bin Location Binding") THEN BEGIN
        PreferenceLocation.SETRANGE(Type, PreferenceLocation.Type::Job);
        PreferenceLocation.SETRANGE("No.", ProjectNo);
        PreferenceLocationPage.SETTABLEVIEW(PreferenceLocation);
        PreferenceLocationPage.LOOKUPMODE(TRUE);
        IF PreferenceLocationPage.RUNMODAL = ACTION::LookupOK THEN BEGIN;
          PreferenceLocationPage.GETRECORD(PreferenceLocation);
          LocationCode := PreferenceLocation."Location Code";
        END;
      END ELSE BEGIN
        LocationPage.SETTABLEVIEW(Location);
        LocationPage.LOOKUPMODE(TRUE);
        IF LocationPage.RUNMODAL = ACTION::LookupOK THEN BEGIN;
          LocationPage.GETRECORD(Location);
          LocationCode := Location.Code;
        END;
      END;
    END;

    PROCEDURE LookupBin@1100526107();
    VAR
      Bin@1100526102 : Record 7354;
      PreferenceBinLocation@1100526100 : Record 11020629;
      BinPage@1100526101 : Page 7302;
      PreferenceBinLocationPage@1100526103 : Page 11124943;
    BEGIN
      IF (JobsSetup."Preferred Bin Location Binding") THEN BEGIN
        PreferenceBinLocation.SETRANGE(Type, PreferenceBinLocation.Type::Job);
        PreferenceBinLocation.SETRANGE("No.", ProjectNo);
        PreferenceBinLocation.SETRANGE("Location Code", LocationCode);
        PreferenceBinLocationPage.SETTABLEVIEW(PreferenceBinLocation);
        PreferenceBinLocationPage.LOOKUPMODE(TRUE);
        IF PreferenceBinLocationPage.RUNMODAL = ACTION::LookupOK THEN BEGIN;
          PreferenceBinLocationPage.GETRECORD(PreferenceBinLocation);
          BinCode := PreferenceBinLocation."Bin Code";
        END;
      END ELSE BEGIN
        Bin.SETRANGE("Location Code", LocationCode);
        BinPage.SETTABLEVIEW(Bin);
        BinPage.LOOKUPMODE(TRUE);
        IF BinPage.RUNMODAL = ACTION::LookupOK THEN BEGIN;
          BinPage.GETRECORD(Bin);
          BinCode := Bin.Code;
        END;
      END;
    END;

    PROCEDURE LookupShelf@1100526101();
    VAR
      ShelfPerLocation@1100526100 : Record 11020241;
      ShelfsByLocation@1100526101 : Page 11012125;
    BEGIN
      ShelfPerLocation.SETRANGE("Location Code", LocationCode);
      ShelfsByLocation.SETTABLEVIEW(ShelfPerLocation);
      ShelfsByLocation.LOOKUPMODE(TRUE);
      IF ShelfsByLocation.RUNMODAL = ACTION::LookupOK THEN BEGIN;
        ShelfsByLocation.GETRECORD(ShelfPerLocation);
        ShelfCode := ShelfPerLocation.Code;
      END;
    END;

    PROCEDURE GetDataProjectInventory@1100526100(VAR LocationCodeProjInv@1100526100 : Code[20];VAR BinCodeProjInv@1100526104 : Code[20];VAR ShelfCodeProjInv@1100526105 : Code[20];VAR CostObjectProjInv@1100526102 : Code[20];VAR CancelledInput@1100526103 : Boolean);
    BEGIN
      LocationCodeProjInv := LocationCode;
      BinCodeProjInv := BinCode;
      ShelfCodeProjInv := ShelfCode;
      CostObjectProjInv := CostObject;
      CancelledInput := Cancelled;
    END;

    PROCEDURE LookupCostObject@1100526102();
    VAR
      DimensionValue@1100526100 : Record 349;
      DimensionValueList@1100526101 : Page 560;
    BEGIN
      DimensionValue.SETRANGE("Global Dimension No.",2);
      DimensionValue.SETRANGE("Cost Type", DimensionValue."Cost Type"::Material);
      DimensionValueList.SETTABLEVIEW(DimensionValue);
      DimensionValueList.LOOKUPMODE(TRUE);
      IF DimensionValueList.RUNMODAL = ACTION::LookupOK THEN BEGIN;
        DimensionValueList.GETRECORD(DimensionValue);
        CostObject := DimensionValue.Code;
      END;
    END;

    PROCEDURE SetCostObject@1100526103(DefaultCostObject@1100526100 : Code[20]);
    BEGIN
      CostObject := DefaultCostObject;
    END;

    PROCEDURE SetProjectNo@1100526106("Project No."@1100526100 : Code[20]);
    BEGIN
      ProjectNo := "Project No.";
    END;

    PROCEDURE SetLocationCode@1100526104(DefaultLocationCode@1100526100 : Code[20]);
    BEGIN
      LocationCode := DefaultLocationCode;
    END;

    PROCEDURE SetBinCode@1100526105(DefaultBinCode@1100526100 : Code[20]);
    BEGIN
      BinCode := DefaultBinCode;
    END;

    PROCEDURE ValidateLocationCode@1100526108(VAR LocationCode@1210190000 : Code[20]);
    BEGIN
      GetInventorySetup;
      IF (InventorySetup."Location Mandatory") AND (LocationCode = '') THEN
        ERROR(Text001, Location.TABLECAPTION);
      IF (LocationCode <> '') THEN
        Location.GET(LocationCode);
    END;

    PROCEDURE ValidateBinCode@1100526110(VAR ProjectNo@1210190002 : Code[20];VAR LocationCode@1210190001 : Code[20];VAR BinCode@1210190000 : Code[20]);
    VAR
      PreferenceBinLocation@1100526100 : Record 11020629;
      Bin@1100526101 : Record 7354;
    BEGIN
      GetJobSetup;
      Location.GET(LocationCode);
      IF (Location."Bin Mandatory") AND (BinCode = '') THEN
        ERROR(Text000, Bin.TABLECAPTION, Location.TABLECAPTION);
      IF (BinCode <> '') THEN BEGIN
        IF (JobsSetup."Preferred Bin Location Binding") THEN
          PreferenceBinLocation.GET(PreferenceBinLocation.Type::Job, ProjectNo, LocationCode, BinCode)
        ELSE
          Bin.GET(LocationCode, BinCode);
      END;
    END;

    PROCEDURE ValidateShelfCode@1100526111(VAR ShelfCode@1210190000 : Code[20]);
    VAR
      ShelfPerLocation@1100526101 : Record 11020241;
    BEGIN
      IF (ShelfCode <> '') THEN
        ShelfPerLocation.GET(LocationCode, ShelfCode);
    END;

    PROCEDURE ValidateCostObject@1100526112(VAR CostObject@1210190000 : Code[20]);
    VAR
      DimensionValue@1210190001 : Record 349;
    BEGIN
      IF (CostObject <> '') THEN BEGIN
        DimensionValue.SETCURRENTKEY(Code, "Global Dimension No.");
        DimensionValue.SETRANGE(Code, CostObject);
        DimensionValue.SETRANGE("Global Dimension No.", 2);
        DimensionValue.SETRANGE("Cost Type", DimensionValue."Cost Type"::Material);
        DimensionValue.FINDFIRST;
      END;
    END;

    PROCEDURE GetJobSetup@1210190000();
    BEGIN
      IF (NOT JobSetupRead) THEN
        JobSetupRead := JobsSetup.GET;
    END;

    PROCEDURE GetInventorySetup@1210190001();
    BEGIN
      IF (NOT InventorySetupRead) THEN
        InventorySetupRead := InventorySetup.GET;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

