OBJECT Report 11128060 VP Transfer vendors to VP UPG
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=;
  }
  PROPERTIES
  {
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF LBGiroType = 0 THEN
                    ERROR('LBGiroType m†ste ha ett v„rde');
                END;

  }
  DATASET
  {
    { 1100285300;;DataItem;                  ;
               DataItemTable=Table11128061;
               DataItemTableView=SORTING(Code);
               OnAfterGetRecord=VAR
                                  VPGiroType@1100285300 : Record 11128061;
                                  CompanyInformation@1100285301 : Record 79;
                                BEGIN
                                  VPGiroType.GET("VP Giro Type".Code);
                                  CompanyInformation.GET;

                                  IF (CompanyInformation."Bank Account No." <> '') AND (VPGiroType."Bank Account No." ='' ) THEN VPGiroType."Bank Account No." := CompanyInformation."Bank Account No.";
                                  IF (CompanyInformation."Bank Branch No." <> '') AND (VPGiroType."Bank Branch No." ='' ) THEN VPGiroType."Bank Branch No." := CompanyInformation."Bank Branch No.";
                                  IF (CompanyInformation."Country/Region Code" <> '') AND (VPGiroType."Country/Region Code" ='' ) THEN VPGiroType."Country/Region Code" := CompanyInformation."Country/Region Code";
                                  IF (CompanyInformation."SWIFT Code" <> '') AND (VPGiroType."SWIFT Code" ='' ) THEN VPGiroType."SWIFT Code" := CompanyInformation."SWIFT Code";
                                  IF (CompanyInformation.IBAN <> '') AND (VPGiroType.IBAN ='' ) THEN VPGiroType.IBAN := CompanyInformation.IBAN;
                                  IF (CompanyInformation."Plus Giro Customer No." <> '') AND (VPGiroType."Plus Giro Customer No." ='' ) THEN VPGiroType."Plus Giro Customer No." := CompanyInformation."Plus Giro Customer No.";
                                  IF (CompanyInformation."Plus Giro No." <> '') AND (VPGiroType."Plus Giro No." ='' ) THEN VPGiroType."Plus Giro No." := CompanyInformation."Plus Giro No.";
                                  IF (CompanyInformation."Registration No." <> '') AND (VPGiroType."Registration No." ='' ) THEN VPGiroType."Registration No." := CompanyInformation."Registration No.";
                                  VPGiroType.MODIFY;
                                END;

               ReqFilterFields=Code }

    { 1100285301;1;DataItem;                 ;
               DataItemTable=Table23;
               OnPreDataItem=BEGIN
                               Vendor.SETRANGE("LB Giro Type",LBGiroType);
                             END;

               OnAfterGetRecord=VAR
                                  lVendor@1100285302 : Record 23;
                                  lVendorBankAccount@1100285301 : Record 288;
                                  lVendorBankAccount2@1100285300 : Record 288;
                                BEGIN

                                  lVendor.GET(Vendor."No.");
                                  lVendor.CALCFIELDS(IBAN);

                                  IF NOT lVendorBankAccount.GET(Vendor."No.","VP Giro Type".Code) THEN BEGIN
                                    lVendorBankAccount.INIT;
                                    lVendorBankAccount."Vendor No." := Vendor."No.";
                                    lVendorBankAccount.Code := "VP Giro Type".Code;
                                    lVendorBankAccount."Giro Type Code" := "VP Giro Type".Code;
                                    lVendorBankAccount.INSERT;
                                  END;

                                  //bank details
                                  //IF (lVendor.Address <> '') AND (lVendorBankAccount.Address = '') THEN lVendorBankAccount.Address := lVendor.Address;
                                  //IF (lVendor."Address 2" <> '') AND (lVendorBankAccount."Address 2" = '') THEN lVendorBankAccount."Address 2" := lVendor."Address 2";
                                  //IF (lVendor.City <> '') AND (lVendorBankAccount.City = '') THEN lVendorBankAccount.City := lVendor.City;
                                  //IF (lVendor.Contact <> '') AND (lVendorBankAccount.Contact = '') THEN lVendorBankAccount.Contact := lVendor.Contact;
                                  //IF (lVendor."Country/Region Code" <> '') AND (lVendorBankAccount."Country/Region Code" = '') THEN lVendorBankAccount."Country/Region Code" := lVendor."Country/Region Code";
                                  //IF (lVendor.County <> '') AND (lVendorBankAccount.County = '') THEN lVendorBankAccount.County := lVendor.County;
                                  //IF (lVendor."E-Mail" <> '') AND (lVendorBankAccount."E-Mail" = '') THEN lVendorBankAccount."E-Mail" := lVendor."E-Mail";
                                  //IF (lVendor."Fax No." <> '') AND (lVendorBankAccount."Fax No." = '') THEN lVendorBankAccount."Fax No." := lVendor."Fax No.";
                                  //IF (lVendor."Home Page" <> '') AND (lVendorBankAccount."Home Page" = '') THEN lVendorBankAccount."Home Page" := lVendor."Home Page";
                                  //IF (lVendor.Name <> '') AND (lVendorBankAccount.Name = '') THEN lVendorBankAccount.Name := lVendor.Name;
                                  //IF (lVendor."Name 2" <> '') AND (lVendorBankAccount."Name 2" = '') THEN lVendorBankAccount."Name 2" := lVendor."Name 2";
                                  //IF (lVendor."Phone No." <> '') AND (lVendorBankAccount."Phone No." = '') THEN lVendorBankAccount."Phone No." := lVendor."Phone No.";
                                  //IF (lVendor."Post Code" <> '') AND (lVendorBankAccount."Post Code" = '') THEN lVendorBankAccount."Post Code" := lVendor."Post Code";
                                  //IF (lVendor."Telex Answer Back" <> '') AND (lVendorBankAccount."Telex Answer Back" = '') THEN lVendorBankAccount."Telex Answer Back" := lVendor."Telex Answer Back";
                                  //IF (lVendor."Telex No." <> '') AND (lVendorBankAccount."Telex No." = '') THEN lVendorBankAccount."Telex No." := lVendor."Telex No.";
                                  IF (lVendor.Bank <> '') AND (lVendorBankAccount.Name = '') THEN lVendorBankAccount.Name := lVendor.Bank;
                                  IF (lVendor."Bank Addr. (Post Code + City)" <> '') AND (lVendorBankAccount.Address = '') THEN lVendorBankAccount.Address := lVendor."Bank Addr. (Post Code + City)";

                                  IF (lVendor."Account Payment with Advising") AND (NOT lVendorBankAccount."Account Payment with Advising") THEN lVendorBankAccount."Account Payment with Advising" := lVendor."Account Payment with Advising";
                                  IF (lVendor."Bank Giro No." <> '') AND (lVendorBankAccount."Bank Giro No." = '') THEN lVendorBankAccount."Bank Giro No." := lVendor."Bank Giro No.";
                                  IF (lVendor."Code for Bank of Sweden" <> '') AND (lVendorBankAccount."Code for Bank of Sweden" = '') THEN lVendorBankAccount."Code for Bank of Sweden" := lVendor."Code for Bank of Sweden";
                                  IF (lVendor."Currency Account") AND (NOT lVendorBankAccount."Currency Account") THEN lVendorBankAccount."Currency Account" := lVendor."Currency Account";
                                  IF (lVendor."Currency Code" <> '') AND (lVendorBankAccount."Currency Code" = '') THEN lVendorBankAccount."Currency Code" := lVendor."Currency Code";
                                  IF (lVendor."Language Code" <> '') AND (lVendorBankAccount."Language Code" = '') THEN lVendorBankAccount."Language Code" := lVendor."Language Code";
                                  IF (lVendor."Payment Charge Paid by" <> 0) AND (lVendorBankAccount."Payment Charge Paid by" = 0) THEN lVendorBankAccount."Payment Charge Paid by" := lVendor."Payment Charge Paid by";
                                  IF (lVendor."Payment Method" <> 0) AND (lVendorBankAccount."Payment Method" = 0) THEN lVendorBankAccount."Payment Method" := lVendor."Payment Method";
                                  IF (lVendor."Payment Type" <> 0) AND (lVendorBankAccount."Payment Type" = 0) THEN lVendorBankAccount."Payment Type" := lVendor."Payment Type";
                                  IF (lVendor."Plus Giro No." <> '') AND (lVendorBankAccount."Plus Giro No." = '') THEN lVendorBankAccount."Plus Giro No." := lVendor."Plus Giro No.";
                                  IF (lVendor."SWIFT Address/BIC Code" <> '') AND (lVendorBankAccount."SWIFT Code" = '') THEN lVendorBankAccount."SWIFT Code" := lVendor."SWIFT Address/BIC Code";

                                  //Flowfields
                                  IF (lVendor.IBAN <> '') AND (lVendorBankAccount.IBAN = '') THEN lVendorBankAccount.IBAN := lVendor.IBAN;                                  //finns redan i target
                                  IF (lVendor."Bank Account No." <> '') AND (lVendorBankAccount."Bank Account No." = '') THEN lVendorBankAccount."Bank Account No." := lVendor."Bank Account No.";

                                  lVendorBankAccount2.SETRANGE("Vendor No.",lVendor."No.");
                                  lVendorBankAccount2.SETFILTER(Code,'<>%1',"VP Giro Type".Code);
                                  IF lVendorBankAccount.IBAN = '' THEN BEGIN
                                    lVendorBankAccount2.SETFILTER(IBAN,'<>%1','');
                                    IF lVendorBankAccount2.FINDFIRST THEN
                                      lVendorBankAccount.IBAN := lVendorBankAccount2.IBAN;
                                    lVendorBankAccount2.SETRANGE(IBAN);
                                  END;
                                  IF lVendorBankAccount."Bank Account No." = '' THEN BEGIN
                                    lVendorBankAccount2.SETFILTER("Bank Account No.",'<>%1','');
                                    IF lVendorBankAccount2.FINDFIRST THEN
                                      lVendorBankAccount."Bank Account No." := lVendorBankAccount2."Bank Account No.";
                                    lVendorBankAccount2.SETRANGE("Bank Account No.");
                                  END;


                                  lVendor."Bank Giro No." := '';
                                  lVendor."Plus Giro No." := '';
                                  //lVendor."Bank Account No." := '';
                                  lVendor."Account Payment with Advising" := FALSE;
                                  lVendor."Code for Bank of Sweden" := '';
                                  lVendor."Currency Account" := FALSE;
                                  lVendor."SWIFT Address/BIC Code" := '';
                                  lVendor."Payment Charge Paid by" := 0;
                                  lVendor."Payment Method" := 0;
                                  lVendor."Payment Type":= 0;

                                  lVendor."Preferred Bank Account" := lVendorBankAccount.Code;
                                  lVendor."LB Giro Type" := 0;

                                  lVendor.MODIFY;
                                  lVendorBankAccount.MODIFY;
                                END;

               ReqFilterFields=No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100285300;;Container;
                  Name=options;
                  ContainerType=ContentArea }

      { 1100285301;1;Field  ;
                  CaptionML=ENU=LB Giro Type;
                  OptionCaptionML=ENU=" ,BG Sweden,PG Sweden,BG Foreign,PG Foreign,,SEPA pain.001";
                  SourceExpr=LBGiroType }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      LBGiroType@1100285300 : ' ,BG Sweden,PG Sweden,BG Foreign,PG Foreign,SEPA,SEPA pain.001';

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

