OBJECT Report 297 Batch Post Sales Invoices
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Batch Post Sales Invoices;
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 6640;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Invoice));
               ReqFilterHeadingML=ENU=Sales Invoice;
               OnPreDataItem=BEGIN
                               IF ReplacePostingDate AND (PostingDateReq = 0D) THEN
                                 ERROR(Text000);

                               //**4PS.sn
                               IF varUserID <>'' THEN
                                 SETFILTER("Inserted By",varUserID);

                               IF SalesSetup."Post only released Invoices" THEN BEGIN
                                 FILTERGROUP(9);
                                 SETRANGE(Status,Status::Released);
                                 FILTERGROUP(0);
                               END;
                               //**4PS.en

                               CounterTotal := COUNT;
                               Window.OPEN(Text001);
                             END;

               OnAfterGetRecord=VAR
                                  ApprovalsMgmt@1000 : Codeunit 1535;
                                  SalesInvHeader2@1100525000 : Record 112;
                                BEGIN
                                  IF ApprovalsMgmt.IsSalesApprovalsWorkflowEnabled("Sales Header") OR (Status = Status::"Pending Approval") THEN
                                    CurrReport.SKIP;

                                  IF CalcInvDisc THEN
                                    CalculateInvoiceDiscount;

                                  Counter := Counter + 1;
                                  Window.UPDATE(1,"No.");
                                  Window.UPDATE(2,ROUND(Counter / CounterTotal * 10000,1));
                                  CLEAR(SalesPost);
                                  SalesPost.SetPostingDate(ReplacePostingDate,ReplaceDocumentDate,PostingDateReq);
                                  IF SalesPost.RUN("Sales Header") THEN BEGIN
                                    //**4PS.sn
                                    IF gPrintInvoices THEN BEGIN
                                      IF "Last Posting No." = '' THEN
                                        SalesInvHeader."No." := "No."
                                      ELSE
                                        SalesInvHeader."No." := "Last Posting No.";
                                      SalesInvHeader.FIND('=');

                                      IF (SalesInvHeader."Electronic Invoicing" <> SalesInvHeader."Electronic Invoicing"::Print)
                                      THEN BEGIN
                                        // Send digital document and don't mark it for printing
                                        SalesInvHeader2 := SalesInvHeader;
                                        SalesInvHeader2.SETRECFILTER;
                                        SalesInvHeader2.SendInvoiceElectronic(FALSE,TRUE);
                                      END ELSE
                                        SalesInvHeader.MARK(TRUE);
                                    END;
                                    //**4PS.en
                                    CounterOK := CounterOK + 1;
                                    IF MARKEDONLY THEN
                                      MARK(FALSE);
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                Window.CLOSE;
                                MESSAGE(Text002,CounterOK,CounterTotal);

                                //**4PS.sn
                                IF gPrintInvoices THEN BEGIN
                                  SalesInvHeader.MARKEDONLY(TRUE);
                                  IF SalesInvHeader.FINDSET THEN
                                    IF PrintAttachments THEN
                                      REPEAT
                                        SalesInvHeader.PrintInvoiceIncludingAttachments(TRUE);
                                      UNTIL SalesInvHeader.NEXT = 0
                                    ELSE
                                      PrintReport;
                                END;
                                //**4PS.en
                              END;

               ReqFilterFields=No.,Status }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   SalesSetup.GET;
                   CalcInvDisc := SalesSetup."Calc. Inv. Discount";
                   //**4PS.so
                   //ReplacePostingDate := FALSE;
                   //ReplaceDocumentDate := FALSE;
                   //**4PS.eo
                   //**4PS.sn
                   ReplacePostingDate := SalesSetup."Replace Posting Date";
                   ReplaceDocumentDate := SalesSetup."Replace Document Date";
                   IF SalesSetup."Replace Posting Date" OR SalesSetup."Replace Document Date" THEN
                     PostingDateReq := WORKDATE;
                   //**4PS.en
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  Name=PostingDate;
                  CaptionML=ENU=Posting Date;
                  SourceExpr=PostingDateReq }

      { 2   ;2   ;Field     ;
                  Name=ReplacePostingDate;
                  CaptionML=ENU=Replace Posting Date;
                  SourceExpr=ReplacePostingDate;
                  OnValidate=BEGIN
                               IF ReplacePostingDate THEN
                                 MESSAGE(Text003);
                             END;
                              }

      { 3   ;2   ;Field     ;
                  CaptionML=ENU=Replace Document Date;
                  SourceExpr=ReplaceDocumentDate }

      { 5   ;2   ;Field     ;
                  CaptionML=ENU=Calc. Inv. Discount;
                  SourceExpr=CalcInvDisc;
                  OnValidate=BEGIN
                               SalesSetup.GET;
                               SalesSetup.TESTFIELD("Calc. Inv. Discount",FALSE);
                             END;
                              }

      { 1100485000;2;Field  ;
                  CaptionML=ENU=Inserted By;
                  SourceExpr=varUserID;
                  OnLookup=BEGIN
                             LoginMgt.LookupUserID(varUserID);
                           END;
                            }

      { 1100528400;2;Field  ;
                  CaptionML=ENU=Print Attachment(s);
                  SourceExpr=PrintAttachments }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Enter the posting date.';
      Text001@1001 : TextConst 'ENU=Posting invoices   #1########## @2@@@@@@@@@@@@@';
      Text002@1002 : TextConst 'ENU=%1 invoices out of a total of %2 have now been posted.';
      Text003@1003 : TextConst 'ENU=The exchange rate associated with the new posting date on the sales header will not apply to the sales lines.';
      SalesLine@1005 : Record 37;
      SalesSetup@1006 : Record 311;
      SalesCalcDisc@1007 : Codeunit 60;
      SalesPost@1008 : Codeunit 80;
      Window@1009 : Dialog;
      PostingDateReq@1010 : Date;
      CounterTotal@1011 : Integer;
      Counter@1012 : Integer;
      CounterOK@1013 : Integer;
      ReplacePostingDate@1014 : Boolean;
      ReplaceDocumentDate@1015 : Boolean;
      CalcInvDisc@1016 : Boolean;
      gPrintInvoices@1100485000 : Boolean;
      PrintAttachments@1100528400 : Boolean;
      SalesInvHeader@1100485001 : Record 112;
      varUserID@1100485003 : Code[50];
      LoginMgt@1100485004 : Codeunit 418;

    LOCAL PROCEDURE CalculateInvoiceDiscount@1();
    BEGIN
      SalesLine.RESET;
      SalesLine.SETRANGE("Document Type","Sales Header"."Document Type");
      SalesLine.SETRANGE("Document No.","Sales Header"."No.");
      IF SalesLine.FINDFIRST THEN
        IF SalesCalcDisc.RUN(SalesLine) THEN BEGIN
          "Sales Header".GET("Sales Header"."Document Type","Sales Header"."No.");
          COMMIT;
        END;
    END;

    PROCEDURE PrintInvoices@1100485000();
    BEGIN
      //**4PS.n
      gPrintInvoices := TRUE;
    END;

    LOCAL PROCEDURE PrintReport@1100485001();
    VAR
      DocPrint@1100485001 : Codeunit 229;
      TempReportSelection@1100485000 : TEMPORARY Record 77;
    BEGIN
      //**4PS
      //ReportSelection.RESET;
      //ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"S.Invoice");
      DocPrint.GetReportSelection(TempReportSelection.Usage::"S.Invoice",TempReportSelection,TRUE);
      TempReportSelection.FIND('-');
      REPEAT
        //ReportSelection.TESTFIELD("Report ID");
        REPORT.RUNMODAL(TempReportSelection."Report ID",TRUE,FALSE,SalesInvHeader);
      UNTIL TempReportSelection.NEXT = 0;
    END;

    BEGIN
    {
      4PS
      06-06-2005 Possibility to print during batch posting.

      4PS, dbeekman, 22-10-2008:
        - ReportSelection changed. cod229.GetReportSelection called to select reports to be printed
    }
    END.
  }
  RDLDATA
  {
  }
}

