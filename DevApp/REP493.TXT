OBJECT Report 493 Carry Out Action Msg. - Req.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW17.00,4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Transfer Requisition Lines to Purchase Orders;
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   //**4PS.sn
                   StartProcess := FALSE;
                   PurchSetup.GET;
                   IF NOT PurchSetup."Allow Link Item Docs to Purch." THEN
                     LinkItemDocsToOrder := FALSE;
                   LinkItemDocsToOrderEnabled := PurchSetup."Allow Link Item Docs to Purch.";
                   //**4PS.en
                 END;

    OnPreReport=BEGIN
                  IF NOT gvActivateFromAdviceOrder THEN  //**4PS.n DP00137
                    UseOneJnl(ReqLine);
                  StartProcess := TRUE;  //**4PS.n
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   PurchOrderHeader."Order Date" := WORKDATE;
                   PurchOrderHeader."Posting Date" := WORKDATE;
                   PurchOrderHeader."Expected Receipt Date" := WORKDATE;
                   IF ReqWkshTmpl.Recurring THEN
                     EndOrderDate := WORKDATE
                   ELSE
                     EndOrderDate := 0D;

                   //**4PS.sn
                   SelMethod := SelMethod::"Ship-to Location";
                   SelMethod2 := SelMethod2::"Ship-to Location";

                   IF UserRec.GET(USERID) THEN
                     PurchOrderHeader."Purchaser Code" := UserRec.Purchaser;
                   //**4PS.en

                   TransferCommentLines := TRUE; // **4PS MVOS M28906

                   //CALL 28843 sn
                   Selmethod1VISIBLE := NOT gvActivateFromAdviceOrder;
                   Selmethod2VISIBLE := gvActivateFromAdviceOrder;
                   //CALL 28843 en
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 6   ;2   ;Field     ;
                  CaptionML=ENU=Print Orders/Create ICM files;
                  SourceExpr=PrintOrders }

      { 1210190004;2;Field  ;
                  CaptionML=ENU=Process Based On Electronic Order Type;
                  SourceExpr=ProcBasedOnElectronicOrderType }

      { 1210190001;2;Field  ;
                  Name=SelMethod1;
                  CaptionML=ENU=Collect per;
                  OptionCaptionML=ENU=Vendor,Project,Ship-to Location,Work Order;
                  SourceExpr=SelMethod;
                  Visible=Selmethod1VISIBLE;
                  Enabled=Selmethod1VISIBLE;
                  OnValidate=BEGIN
                               IF NOT gvActivateFromSOAdviceOrder THEN
                                 IF SelMethod = SelMethod::"Work Order" THEN
                                   ERROR(Text11012003);
                             END;
                              }

      { 1100409002;2;Field  ;
                  Name=SelMethod2;
                  CaptionML=ENU=Collect per;
                  OptionCaptionML=ENU=Vendor,Project/Service,Project/Service-Ship-to Location,Ship-to Location,Work Order;
                  SourceExpr=SelMethod2;
                  Visible=Selmethod2VISIBLE;
                  Enabled=Selmethod2VISIBLE;
                  OnValidate=BEGIN
                               IF NOT gvActivateFromSOAdviceOrder THEN
                                 IF SelMethod2 = SelMethod2::"Work Order" THEN
                                   ERROR(Text11012003);
                             END;
                              }

      { 1210190002;2;Field  ;
                  CaptionML=ENU=Split by Blanket Orders or not;
                  SourceExpr=SortPurchaseByBlanketOrders }

      { 1100528400;2;Field  ;
                  CaptionML=ENU=Continue After Unprocessed Line;
                  SourceExpr=ContinueAfterUnprocessedLine }

      { 11012000;2;Group    ;
                  CaptionML=ENU=Copy to Purchase Order }

      { 8   ;3   ;Field     ;
                  CaptionML=ENU=Your Reference;
                  SourceExpr=PurchOrderHeader."Your Reference" }

      { 11012002;3;Field    ;
                  CaptionML=ENU=Purchaser Code;
                  SourceExpr=PurchOrderHeader."Purchaser Code";
                  TableRelation=Salesperson/Purchaser }

      { 1100529802;3;Field  ;
                  CaptionML=ENU=Transfer Comment Lines;
                  SourceExpr=TransferCommentLines }

      { 1100528000;3;Field  ;
                  CaptionML=ENU=Link Item Documents to Order;
                  SourceExpr=LinkItemDocsToOrder;
                  Visible=LinkItemDocsToOrderEnabled;
                  Enabled=LinkItemDocsToOrderEnabled }

      { 1100409001;2;Group  ;
                  CaptionML=ENU=Filter receipt date;
                  Visible=gvActivateFromAdviceOrder }

      { 1100409000;3;Field  ;
                  CaptionML=ENU=Period;
                  SourceExpr=PeriodFilter;
                  OnLookup=BEGIN
                             DateSelectionManagement.GetPeriod(PeriodFilter);
                             Text := PeriodFilter;
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=cannot be filtered when you create orders';
      Text001@1001 : TextConst 'ENU=There is nothing to create.';
      Text003@1003 : TextConst 'ENU=You are now in worksheet %1.';
      ReqWkshTmpl@1007 : Record 244;
      ReqWkshName@1008 : Record 245;
      ReqLine@1009 : Record 246;
      PurchOrderHeader@1010 : Record 38;
      PurchSetup@1100528000 : Record 312;
      ReqWkshMakeOrders@1011 : Codeunit 333;
      EndOrderDate@1012 : Date;
      PrintOrders@1013 : Boolean;
      ProcBasedOnElectronicOrderType@1210190005 : Boolean;
      TempJnlBatchName@1014 : Code[10];
      HideDialog@1017 : Boolean;
      SelMethod@1210190000 : 'Vendor,Project,Ship-to Location,Work Order';
      SelMethod2@1100409008 : 'Vendor,Project,Project-Ship-to Location,Ship-to Location,Work Order';
      UserRec@1210190002 : Record 91;
      gAskForNoSerie@1210190003 : Boolean;
      gNoSeries@1210190004 : Code[10];
      Text11012000@1100485000 : TextConst 'ENU=The orders (%1) have been created.';
      SkipBatchFilter@1100525000 : Boolean;
      SortPurchaseByBlanketOrders@1210190001 : Boolean;
      TransferCommentLines@1100529800 : Boolean;
      gvActivateFromAdviceOrder@1100528900 : Boolean INDATASET;
      Text11012001@1100409000 : TextConst 'ENU=%1 order lines have been cancelled.';
      Text11012002@1100409001 : TextConst 'ENU=%1 order lines have been changed.';
      gvActivateFromSOAdviceOrder@1100528601 : Boolean;
      StartProcess@1100528800 : Boolean;
      Text11012003@1100528600 : TextConst 'ENU=Collect Per not allowed for Work Order';
      LinkItemDocsToOrder@1100528001 : Boolean;
      PeriodFilter@1100409005 : Text[250];
      DateSelectionManagement@1100409004 : Codeunit 11130005;
      DateFilterStart@1100409003 : Date;
      DateFilterEnd@1100409002 : Date;
      Selmethod1VISIBLE@1100409006 : Boolean INDATASET;
      Selmethod2VISIBLE@1100409007 : Boolean INDATASET;
      LinkItemDocsToOrderEnabled@1100528002 : Boolean INDATASET;
      ContinueAfterUnprocessedLine@1100528400 : Boolean;

    PROCEDURE SetReqWkshLine@1(VAR NewReqLine@1000 : Record 246);
    BEGIN
      //**4PS.sn
      NewReqLine.MARKEDONLY(TRUE);  //db, 17-08-07 (melding 6999)
      IF NOT NewReqLine.FINDFIRST THEN
        NewReqLine.MARKEDONLY(FALSE);
      //**4PS.en
      ReqLine.COPY(NewReqLine);
      ReqWkshTmpl.GET(NewReqLine."Worksheet Template Name");
    END;

    PROCEDURE GetReqWkshLine@6(VAR NewReqLine@1000 : Record 246);
    BEGIN
      NewReqLine.COPY(ReqLine);
    END;

    PROCEDURE SetReqWkshName@2(VAR NewReqWkshName@1000 : Record 245);
    BEGIN
      ReqWkshName.COPY(NewReqWkshName);
      ReqWkshTmpl.GET(NewReqWkshName."Worksheet Template Name");
    END;

    LOCAL PROCEDURE UseOneJnl@3(VAR ReqLine@1000 : Record 246);
    VAR
      StrategicPurchMgt@1100525000 : Codeunit 11020211;
      TrCancelCounter@1100409006 : Integer;
      OrdCancelCounter@1100409005 : Integer;
      TrChangeCounter@1100409004 : Integer;
      OrdChangeCounter@1100409003 : Integer;
      TrNewCounter@1100409002 : Integer;
      OrdNewCounter@1100409001 : Integer;
      FirstOrderNo@1100528400 : Code[20];
      LastOrderNo@1100528401 : Code[20];
      NewPurchaseOrdersTxt@1100409000 : Text[50];
    BEGIN
      WITH ReqLine DO BEGIN
        StrategicPurchMgt.CheckStratPurchForReqLine(ReqLine); //**4PS.n
        ReqWkshTmpl.GET("Worksheet Template Name");
        IF ReqWkshTmpl.Recurring AND (GETFILTER("Order Date") <> '') THEN
          FIELDERROR("Order Date",Text000);
        TempJnlBatchName := "Journal Batch Name";

        //**4PS.sn
        IF gAskForNoSerie THEN
          ReqWkshMakeOrders.SetAskForNoSerie(gNoSeries);
        ReqWkshMakeOrders.SetMethod(SelMethod);
        //**4PS.en
        ReqWkshMakeOrders.Set(PurchOrderHeader,EndOrderDate,PrintOrders);
        ReqWkshMakeOrders.SetBasedOnElectronicOrderType(ProcBasedOnElectronicOrderType);
        //**4PS.sn
        IF SkipBatchFilter THEN
          ReqWkshMakeOrders.SetReqWrkshtPerTemplate;
        IF LinkItemDocsToOrder AND LinkItemDocsToOrderEnabled THEN
          ReqWkshMakeOrders.SetLinkItemDocsToOrder();
        //**4PS.en
        //**4PSmg.sn, 21-06-11: M27713
        IF NOT SortPurchaseByBlanketOrders THEN
          ReqWkshMakeOrders.SetSkipSortPurchase;
        //**4PSmg.en

        ReqWkshMakeOrders.SetTransferCommentLines(TransferCommentLines); // **4PS MVOS
        //**4PS.sn
        IF ContinueAfterUnprocessedLine THEN
          ReqWkshMakeOrders.SetPlanningResiliency;
        //**4PS.en
        ReqWkshMakeOrders.CarryOutBatchAction(ReqLine);

        IF "Line No." = 0 THEN
          MESSAGE(Text001)
        ELSE
          IF NOT HideDialog THEN BEGIN  //**4PS.n
            ReqWkshMakeOrders.GetNumbers(
              TrCancelCounter,OrdCancelCounter,TrChangeCounter,
              OrdChangeCounter,TrNewCounter,OrdNewCounter,
              FirstOrderNo,LastOrderNo,NewPurchaseOrdersTxt);     //**4PS melding C002134
            IF NewPurchaseOrdersTxt <> '' THEN BEGIN
              MESSAGE(Text11012000, Description);  //**4PS.n
            END ELSE BEGIN
              IF (TrCancelCounter + OrdCancelCounter) <> 0 THEN
                MESSAGE(Text11012001, (TrCancelCounter + OrdCancelCounter));
              IF (TrChangeCounter + OrdChangeCounter) <> 0 THEN
                MESSAGE(Text11012002, (TrChangeCounter + OrdChangeCounter));
            END;
            IF TempJnlBatchName <> "Journal Batch Name" THEN
              MESSAGE(
                Text003,
                "Journal Batch Name");
          END;  //**4PS.n

        IF NOT FIND('=><') OR (TempJnlBatchName <> "Journal Batch Name") THEN BEGIN
          RESET;
          FILTERGROUP := 2;
          SETRANGE("Worksheet Template Name","Worksheet Template Name");
          SETRANGE("Journal Batch Name","Journal Batch Name");
          FILTERGROUP := 0;
          "Line No." := 1;
        END;
      END;
    END;

    PROCEDURE InitializeRequest@5(ExpirationDate@1000 : Date;OrderDate@1001 : Date;PostingDate@1002 : Date;ExpectedReceiptDate@1003 : Date;YourRef@1004 : Text[50]);
    BEGIN
      EndOrderDate := ExpirationDate;
      PurchOrderHeader."Order Date" := OrderDate;
      PurchOrderHeader."Posting Date" := PostingDate;
      PurchOrderHeader."Expected Receipt Date" := ExpectedReceiptDate;
      PurchOrderHeader."Your Reference" := YourRef;
    END;

    PROCEDURE SetHideDialog@7(NewHideDialog@1000 : Boolean);
    BEGIN
      HideDialog := NewHideDialog;
    END;

    PROCEDURE SetAskForNoSerie@1210190001(INoSeries@1210190005 : Code[10]);
    BEGIN
      //**4PS.n
      gAskForNoSerie := TRUE;
      gNoSeries := INoSeries;
    END;

    PROCEDURE SetReqWrkshtPerTemplate@1100525003();
    BEGIN
      //**4PS
      SkipBatchFilter := TRUE;
    END;

    PROCEDURE SetActivateFromAdviceOrder@1100528900();
    BEGIN
      //**4PS
      gvActivateFromAdviceOrder := TRUE;  //DP00137
    END;

    PROCEDURE SetActivateFromSOAdviceOrder@1100528600();
    BEGIN
      SetActivateFromAdviceOrder;
      gvActivateFromSOAdviceOrder := TRUE;
    END;

    PROCEDURE GetOptionsForAdviceOrder@1100528902(VAR oStartProcess@1100528800 : Boolean;VAR varSelMethod2@1100528900 : 'Vendor,Project,Project-Ship-to Location,Ship-to Location';VAR varPurchOrderHeader@1100528901 : Record 38;VAR varPrintOrders@1100525000 : Boolean;VAR varProcBasedOnElectronicOrderType@1100525001 : Boolean;VAR varTransferCommentLines@1100525002 : Boolean;VAR varPeriodFilterTxt@1100409000 : Text[30];VAR oLinkItemDocsToOrder@1100528000 : Boolean);
    BEGIN
      //**4PS
      oStartProcess := StartProcess;  // C003664.n
      varSelMethod2 := SelMethod2;    //DP00137
      varPrintOrders:= PrintOrders;
      varProcBasedOnElectronicOrderType := ProcBasedOnElectronicOrderType;
      varTransferCommentLines := TransferCommentLines;
      varPurchOrderHeader := PurchOrderHeader;
      varPeriodFilterTxt := PeriodFilter;
      oLinkItemDocsToOrder := (LinkItemDocsToOrder AND LinkItemDocsToOrderEnabled);
    END;

    BEGIN
    {
      DP00137: this report is used for old procedure (ReqLine, codeunit 333) and new procedure (AdviceOrder, codeunit 11012041)
    }
    END.
  }
  RDLDATA
  {
  }
}

