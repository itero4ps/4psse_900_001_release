OBJECT Report 499 Delete Invoiced Purch. Orders
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Delete Invoiced Purch. Orders;
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 4458;    ;DataItem;                    ;
               DataItemTable=Table38;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Order));
               ReqFilterHeadingML=ENU=Purchase Order;
               OnPreDataItem=BEGIN
                               Window.OPEN(Text000);
                             END;

               OnAfterGetRecord=VAR
                                  ReservePurchLine@1000 : Codeunit 99000834;
                                  ApprovalsMgmt@1001 : Codeunit 1535;
                                BEGIN
                                  Window.UPDATE(1,"No.");

                                  AllLinesDeleted := TRUE;
                                  ItemChargeAssgntPurch.RESET;
                                  ItemChargeAssgntPurch.SETRANGE("Document Type","Document Type");
                                  ItemChargeAssgntPurch.SETRANGE("Document No.","No.");
                                  PurchLine.RESET;
                                  PurchLine.SETRANGE("Document Type","Document Type");
                                  PurchLine.SETRANGE("Document No.","No.");
                                  //**4PS.sn
                                  IF (Status = Status::Closed) AND AlwaysDeleteClosedOrders THEN BEGIN
                                  //* If 'AlwaysDeleteClosedOrders' then no checks for closed orders
                                    PurchLine.LOCKTABLE;
                                    IF PurchLine.FINDSET(TRUE,FALSE) THEN
                                      REPEAT
                                        DeletePurchLine();
                                      UNTIL PurchLine.NEXT = 0;
                                    DeletePurchHead();
                                    COMMIT;
                                    CurrReport.SKIP;
                                  END;

                                  IF "Amounts only" THEN
                                    PurchLine.SETFILTER("Amnt. Invoiced",'<>0')
                                  ELSE
                                  //**4PS.en
                                    PurchLine.SETFILTER("Quantity Invoiced",'<>0');
                                  IF PurchLine.FIND('-') THEN BEGIN
                                    //**4PS.sn
                                    IF "Amounts only" THEN BEGIN
                                      PurchLine.SETRANGE("Amnt. Invoiced");
                                      PurchLine.SETFILTER("Outstanding Amount",'<>0');
                                    END ELSE BEGIN
                                    //**4PS.en
                                      PurchLine.SETRANGE("Quantity Invoiced");
                                      PurchLine.SETFILTER("Outstanding Quantity",'<>0');
                                    END; //**4PS.n
                                    IF NOT PurchLine.FIND('-') THEN BEGIN
                                      //**4PS.sn
                                      IF "Amounts only" THEN BEGIN
                                        PurchLine.SETRANGE("Outstanding Amount");
                                        PurchLine.SETFILTER("Amt. Rcd. Not Invoiced",'<>0');
                                      END ELSE BEGIN
                                      //**4PS.en
                                        PurchLine.SETRANGE("Outstanding Quantity");
                                        PurchLine.SETFILTER("Qty. Rcd. Not Invoiced",'<>0');
                                      END; //**4PS.n
                                      IF NOT PurchLine.FIND('-') THEN BEGIN
                                        PurchLine.LOCKTABLE;
                                        IF NOT PurchLine.FIND('-') THEN BEGIN
                                          //**4PS.sn
                                          IF "Amounts only" THEN
                                            PurchLine.SETRANGE("Amt. Rcd. Not Invoiced")
                                          ELSE
                                          //**4PS.en
                                            PurchLine.SETRANGE("Qty. Rcd. Not Invoiced");
                                          IF PurchLine.FIND('-') THEN
                                            REPEAT
                                              PurchLine.CALCFIELDS("Qty. Assigned");
                                              IF ((PurchLine."Qty. Assigned" = PurchLine."Quantity Invoiced") AND
                                                  (PurchLine."Qty. Assigned" <> 0)) OR
                                                 (PurchLine.Type <> PurchLine.Type::"Charge (Item)")
                                                 OR "Amounts only" //**4PS.n
                                              THEN BEGIN
                                                //**4PS.so   Moved to function 'DeletePurchLine' (used more than once, and also special 4PS additions)
                                                {
                                                IF PurchLine.Type = PurchLine.Type::"Charge (Item)" THEN BEGIN
                                                  ItemChargeAssgntPurch.SETRANGE("Document Line No.",PurchLine."Line No.");
                                                  ItemChargeAssgntPurch.DELETEALL;
                                                END;
                                                IF PurchLine.HASLINKS THEN
                                                  PurchLine.DELETELINKS;

                                                PurchLine.DELETE;
                                                }  //**4PS.eo

                                                DeletePurchLine();  //**4PS.n
                                              END ELSE
                                                AllLinesDeleted := FALSE;
                                              UpdateAssSalesOrder;
                                            UNTIL PurchLine.NEXT = 0;

                                          IF AllLinesDeleted THEN BEGIN
                                            //**4PS.so   Moved to function 'DeletePurchHead' (used more than once, and also special 4PS additions)
                                            {
                                            PurchPost.DeleteHeader(
                                              "Purchase Header",PurchRcptHeader,PurchInvHeader,PurchCrMemoHeader,
                                              ReturnShptHeader,PrepmtPurchInvHeader,PrepmtPurchCrMemoHeader);

                                            ReservePurchLine.DeleteInvoiceSpecFromHeader("Purchase Header");

                                            PurchCommentLine.SETRANGE("Document Type","Document Type");
                                            PurchCommentLine.SETRANGE("No.","No.");
                                            PurchCommentLine.DELETEALL;

                                            WhseRequest.SETRANGE("Source Type",DATABASE::"Purchase Line");
                                            WhseRequest.SETRANGE("Source Subtype","Document Type");
                                            WhseRequest.SETRANGE("Source No.","No.");
                                            WhseRequest.DELETEALL(TRUE);

                                            ApprovalsMgmt.DeleteApprovalEntry(DATABASE::"Purchase Header","Document Type","No.");

                                            IF HASLINKS THEN
                                              DELETELINKS;

                                            DELETE;
                                            }  //**4PS.eo

                                            DeletePurchHead;  //**4PS.n
                                          END;
                                          COMMIT;
                                        END;
                                      END;
                                    END;
                                  END;
                                END;

               ReqFilterFields=No.,Buy-from Vendor No.,Pay-to Vendor No.,Posting Date,Order Date,Document Date }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   AlwaysDeleteClosedOrders := FALSE;  //**4PS.n  Default always false, must each time be set by the user
                 END;

    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=ENU=Options }

      { 1100525002;2;Field  ;
                  CaptionML=ENU=Always Remove Closed Orders;
                  SourceExpr=AlwaysDeleteClosedOrders }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Processing purch. orders #1##########';
      PurchLine@1001 : Record 39;
      PurchRcptHeader@1011 : Record 120;
      PurchInvHeader@1010 : Record 122;
      PurchCrMemoHeader@1009 : Record 124;
      ReturnShptHeader@1008 : Record 6650;
      PrepmtPurchInvHeader@1014 : Record 122;
      PrepmtPurchCrMemoHeader@1013 : Record 124;
      PurchCommentLine@1002 : Record 43;
      ItemChargeAssgntPurch@1005 : Record 5805;
      WhseRequest@1007 : Record 5765;
      PurchPost@1012 : Codeunit 90;
      Window@1004 : Dialog;
      AllLinesDeleted@1006 : Boolean;
      AlwaysDeleteClosedOrders@1100525000 : Boolean;

    LOCAL PROCEDURE UpdateAssSalesOrder@1001();
    VAR
      SalesLine@1001 : Record 37;
    BEGIN
      IF NOT PurchLine."Special Order" THEN
        EXIT;
      WITH SalesLine DO BEGIN
        RESET;
        SETRANGE("Special Order Purchase No.",PurchLine."Document No.");
        SETRANGE("Special Order Purch. Line No.",PurchLine."Line No.");
        SETRANGE("Purchasing Code",PurchLine."Purchasing Code");
        IF FINDFIRST THEN BEGIN
          "Special Order Purchase No." := '';
          "Special Order Purch. Line No." := 0;
          MODIFY;
        END;
      END;
    END;

    PROCEDURE DeletePurchLine@1100525001();
    BEGIN
      //**4PS
      IF PurchLine.Type = PurchLine.Type::"Charge (Item)" THEN BEGIN
        ItemChargeAssgntPurch.SETRANGE("Document Line No.",PurchLine."Line No.");
        ItemChargeAssgntPurch.DELETEALL;
      END;
      IF PurchLine.HASLINKS THEN
        PurchLine.DELETELINKS;

      PurchLine.DELETE;

      PurchLine.CreatePurchOrderControl(TRUE);  //**4PS.n
    END;

    PROCEDURE DeletePurchHead@1100525002();
    VAR
      ReservePurchLine@1100525000 : Codeunit 99000834;
    BEGIN
      //**4PS
      WITH "Purchase Header" DO BEGIN
        PurchPost.DeleteHeader(
          "Purchase Header",PurchRcptHeader,PurchInvHeader,PurchCrMemoHeader,
          ReturnShptHeader,PrepmtPurchInvHeader,PrepmtPurchCrMemoHeader);

        ReservePurchLine.DeleteInvoiceSpecFromHeader("Purchase Header");

        PurchCommentLine.SETRANGE("Document Type","Document Type");
        PurchCommentLine.SETRANGE("No.","No.");
        PurchCommentLine.DELETEALL;

        WhseRequest.SETRANGE("Source Type",DATABASE::"Purchase Line");
        WhseRequest.SETRANGE("Source Subtype","Document Type");
        WhseRequest.SETRANGE("Source No.","No.");
        WhseRequest.DELETEALL(TRUE);

        IF HASLINKS THEN
          DELETELINKS;

        Delete4PSAdditions; //**4PS.n

        DELETE;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

