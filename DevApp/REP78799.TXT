OBJECT Report 78799 Functies Imtech INF
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00.BK.OK;
  }
  PROPERTIES
  {
  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {

    PROCEDURE FormatText@1000000000(TextLine@1000000000 : Text[255];TextLineNo@1000000001 : Integer;MaxLineNo@1000000003 : Integer;TextLength@1000000002 : Integer) : Text[100];
    VAR
      InvTxt@1000000004 : ARRAY [99] OF Text[100];
      Teller@1000000005 : Integer;
      TxtLen@1000000006 : Integer;
      Position@1000000007 : Integer;
      TmpTxt@1000000008 : Text[100];
    BEGIN
      //TextLine = Tekstregel
      //TextLineNo = Tekstregel welke hieronder bepaald moet worden en moet worden geretourneerd (max 100 karakters per regel)
      //MaxLineNo = Maximaal aantal tekstregels te bepalen (max = 99)
      //TextLength = Aantal karakters welke maximaal bepaald moeten worden per regel.

      CLEAR(InvTxt);
      IF TextLine = '' THEN
        EXIT('');

      FOR Teller := 1 TO MaxLineNo DO BEGIN
        IF InvTxt[Teller] = '' THEN BEGIN
          TxtLen := TextLength;
          InvTxt[Teller] := COPYSTR(TextLine,1,TxtLen);
          IF Teller > 1 THEN
            IF InvTxt[Teller] = InvTxt[Teller-1] THEN
              InvTxt[Teller] := '';
        END ELSE BEGIN
          TxtLen := TextLength - STRLEN(InvTxt[Teller]);
          InvTxt[Teller] += COPYSTR(TextLine,1,TxtLen);
        END;
        CLEAR(Position);
        IF STRLEN(TextLine) > TxtLen THEN BEGIN
          TextLine := COPYSTR(TextLine,TxtLen+1,STRLEN(TextLine));
          TmpTxt := InvTxt[Teller];
          REPEAT
            Position += STRPOS(TmpTxt,' ');
            TmpTxt := COPYSTR(InvTxt[Teller],Position+1,STRLEN(InvTxt[Teller]));
          UNTIL STRPOS(TmpTxt,' ') = 0;
          IF Teller < MaxLineNo THEN
            InvTxt[Teller+1] := COPYSTR(InvTxt[Teller],Position+1,STRLEN(InvTxt[Teller]));
          IF Position <> 0 THEN
            InvTxt[Teller] := COPYSTR(InvTxt[Teller],1,Position-1);
        END ELSE
          CASE TextLineNo OF
            1: EXIT(InvTxt[1]);
            2: EXIT(InvTxt[2]);
            3: EXIT(InvTxt[3]);
            4: EXIT(InvTxt[4]);
            5: EXIT(InvTxt[5]);
          END;
      END;

      CASE TextLineNo OF
       1: EXIT(InvTxt[1]);
       2: EXIT(InvTxt[2]);
       3: EXIT(InvTxt[3]);
       4: EXIT(InvTxt[4]);
       5: EXIT(InvTxt[5]);
      END;
    END;

    PROCEDURE DocumentSalutation@1000000001(VAR CustVendAddr@1000000003 : ARRAY [8] OF Text[250];ContactNo@1000000000 : Code[20];CustVendNo@1000000007 : Code[20]);
    VAR
      ContRec@1000000001 : Record 5050;
      ContRel@1000000006 : Record 5054;
      Teller@1000000002 : Integer;
      lvSalutFormulaRec@1000000004 : Record 5069;
      Position@1000000005 : Integer;
    BEGIN
      //Aanhef in documenten
        IF ContactNo <> '' THEN BEGIN
          IF ContRec.GET(ContactNo) THEN BEGIN
            Teller := 0;
            IF ContRec.Type = ContRec.Type::Person THEN BEGIN
              IF ContRec."Company No." = '' THEN BEGIN
                //koper
                IF CustVendAddr[2] = ContRec."Name 2" THEN BEGIN
                  FOR Teller := 2 TO 8 DO BEGIN
                    IF Teller <> 8 THEN
                      CustVendAddr[Teller] := CustVendAddr[Teller+1];
                  END;
                END;
                CustVendAddr[1] :=
                ContRec.GetSalutationSpecial(lvSalutFormulaRec."Salutation Type"::"Intended For",ContRec."Language Code",FALSE);
              END ELSE
                //Contactpersoon van een bedrijf
                CustVendAddr[2] :=
                ContRec.GetSalutationSpecial(lvSalutFormulaRec."Salutation Type"::"Intended For",ContRec."Language Code",FALSE);
            END;
          END;
        END ELSE BEGIN
          IF CustVendNo <> '' THEN BEGIN
            ContRel.SETRANGE("No.",CustVendNo);
            IF ContRel.FINDFIRST THEN BEGIN
              IF ContRec.GET(ContRel."Contact No.") THEN BEGIN
                Teller := 0;
                IF ContRec.Type = ContRec.Type::Person THEN BEGIN
                  IF ContRec."Company No." = '' THEN BEGIN
                    //koper
                    IF CustVendAddr[2] = ContRec."Name 2" THEN BEGIN
                      FOR Teller := 2 TO 8 DO BEGIN
                        IF Teller <> 8 THEN
                          CustVendAddr[Teller] := CustVendAddr[Teller+1];
                      END;
                    END;
                    CustVendAddr[1] :=
                    ContRec.GetSalutationSpecial(lvSalutFormulaRec."Salutation Type"::"Intended For",ContRec."Language Code",FALSE);
                  END ELSE
                    //Contactpersoon van een bedrijf
                    CustVendAddr[2] :=
                    ContRec.GetSalutationSpecial(lvSalutFormulaRec."Salutation Type"::"Intended For",ContRec."Language Code",FALSE);
                END;
              END;
            END;
          END;
        END;

        //Indien aanhef > 40 posities
        CLEAR(Position);
        IF STRLEN(CustVendAddr[2]) > 40 THEN BEGIN
          FOR Teller := 1 TO 5 DO
          CustVendAddr[9-Teller] := CustVendAddr[8-Teller];
          Position := STRPOS(CustVendAddr[2],' en ')+4;
          IF Position = 0 THEN
            Position := STRPOS(COPYSTR(CustVendAddr[2],1,(ROUND(STRLEN(CustVendAddr[2])/2,1)-5)), ' ');
          IF Position = 0 THEN
            Position := ROUND(STRLEN(CustVendAddr[2])/2,1);
          CustVendAddr[3] := DELCHR(COPYSTR(CustVendAddr[2],Position),'<',' ');
          CustVendAddr[2] := COPYSTR(CustVendAddr[2],1,Position-1);
        END;

        CLEAR(Position);
        IF STRLEN(CustVendAddr[1]) > 40 THEN BEGIN
          FOR Teller := 1 TO 6 DO
            CustVendAddr[9-Teller] := CustVendAddr[8-Teller];
          Position := STRPOS(CustVendAddr[1],' en ')+4;
          IF Position = 0 THEN
            Position := STRPOS(COPYSTR(CustVendAddr[1],1,(ROUND(STRLEN(CustVendAddr[1])/2,1)-5)), ' ');
          IF Position = 0 THEN
            Position := ROUND(STRLEN(CustVendAddr[1])/2,1);
          CustVendAddr[2] := DELCHR(COPYSTR(CustVendAddr[1],Position),'<',' ');
          CustVendAddr[1] := COPYSTR(CustVendAddr[1],1,Position-1);
        END;
    END;

    PROCEDURE matrix@1000000002(m_col@1000000000 : Integer;m_row@1000000001 : Integer) m_ret : Code[10];
    VAR
      xx@1000000002 : Integer;
      alf@1000000003 : Code[50];
      m_rest@1000000004 : Decimal;
      m_nu@1000000005 : Decimal;
      m_heel@1000000006 : Decimal;
      m_tus@1000000007 : Code[30];
    BEGIN
      IF m_col > 16384 THEN BEGIN
        m_tus := 'XFD';
        ERROR('Selecteer minder kolommen (max 16384)');
      END ELSE BEGIN
        alf := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ ';
        REPEAT
          IF m_col > 676  THEN
            m_heel := ROUND(m_col/(POWER(26.000000001,2)),1,'<')
          ELSE
            m_heel := ROUND(m_col/26.000000001,1,'<');
          IF m_heel > 0 THEN
            m_nu := m_heel
          ELSE
            m_nu := m_col;
          IF m_nu = 0 THEN
            m_nu := 27;
          m_tus := m_tus + COPYSTR(alf,m_nu,1);
          IF m_col > 676 THEN
            m_col := ROUND(m_col-(m_heel*(POWER(26,2))),1)
          ELSE
            m_col := ROUND(m_col-(m_heel*26),1);
        UNTIL m_heel <= 0;
      END;

      m_ret := DELCHR(STRSUBSTNO('%1 %2',m_tus,m_row));
    END;

    PROCEDURE GetServiceText@1000000003(TypeInt@1000000000 : Integer;SoNo@1000000001 : Code[20]) ResultText : Text;
    VAR
      ServiceTextRec@1000000002 : Record 11012882;
      i@1000000003 : Integer;
    BEGIN
      ServiceTextRec.RESET;
      ServiceTextRec.SETRANGE("No.",SoNo);
      ServiceTextRec.SETRANGE("Table Name",ServiceTextRec."Table Name"::"Service Order");
      CASE TypeInt OF
        1:BEGIN    //Probleem
          ServiceTextRec.SETFILTER("Table Field",'90');
        END;
        2:BEGIN    //Interne tekst
          ServiceTextRec.SETFILTER("Table Field",'91');
        END;
        3: BEGIN   //Oplossingstekst
          ServiceTextRec.SETFILTER("Table Field",'92');
        END;
        4: BEGIN   //Oorzaak
          ServiceTextRec.SETFILTER("Table Field",'94');
        END;
      END;
      IF ServiceTextRec.FINDSET THEN BEGIN
        REPEAT
          i := i + 1;
          ResultText := ResultText + ' ' + ServiceTextRec.Comment;
        UNTIL (ServiceTextRec.NEXT = 0) OR (i = 3)
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns:cl="http://schemas.microsoft.com/sqlserver/reporting/2010/01/componentdefinition" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <Code>Public Function BlankZero(ByVal Value As Decimal)
    if Value = 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankPos(ByVal Value As Decimal)
    if Value &gt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankZeroAndPos(ByVal Value As Decimal)
    if Value &gt;= 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNeg(ByVal Value As Decimal)
    if Value &lt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNegAndZero(ByVal Value As Decimal)
    if Value &lt;= 0 then
        Return ""
    end if
    Return Value
End Function
</Code>
  <Language>=User!Language</Language>
  <ConsumeContainerWhitespace>true</ConsumeContainerWhitespace>
  <rd:ReportID>0eeb6585-38ae-40f1-885b-8d50088d51b4</rd:ReportID>
  <rd:ReportUnitType>Inch</rd:ReportUnitType>
</Report>
    END_OF_RDLDATA
  }
}

