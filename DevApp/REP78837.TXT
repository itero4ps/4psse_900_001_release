OBJECT Report 78837 OBF - Peek
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00.SMART.TESTEN;
  }
  PROPERTIES
  {
    ProcessingOnly=Yes;
    OnInitReport=VAR
                   DocumentGroup@1100525000 : Record 11012400;
                 BEGIN
                   GetPath('POBF');
                   IF DocumentGroup.GET('General') THEN BEGIN
                     FileName := DocumentGroup."Template Directory" + 'OBF.xltx';
                     IF NOT EXISTS(FileName) THEN
                       FileName := PathName;
                   END ELSE
                     FileName := PathName;
                 END;

    OnPreReport=BEGIN
                  Popup.OPEN('Status #1####################################################');
                  Popup.UPDATE(1, 'Excelbestand openen');

                  CREATE(xlApp,FALSE,TRUE);
                  xlApp.DisplayAlerts :=  FALSE;
                  xlApp.Workbooks.Open(FileName);
                  xlBook              := xlApp.ActiveWorkbook;
                END;

    OnPostReport=BEGIN
                   OpenDataSheet;
                   xlApp.Visible:=TRUE;
                 END;

  }
  DATASET
  {
    { 1100525000;;DataItem;Try-outQuote      ;
               DataItemTable=Table11012758;
               DataItemTableView=SORTING(Code);
               OnAfterGetRecord=VAR
                                  TryOut@1100525010 : Record 11012750;
                                  Tryoutline@1100525009 : Record 11012755;
                                  StelpostBedrag@1100525008 : Decimal;
                                  OfferteBedrag@1100525007 : Decimal;
                                  Kostprijs@1100525006 : Decimal;
                                  GewogenOfferteBedrag@1100525005 : Decimal;
                                  GewogenKostprijs@1100525004 : Decimal;
                                  lMarge@1100525003 : Decimal;
                                  lMarkup@1100525002 : Decimal;
                                  GewogenMarge@1100525001 : Decimal;
                                  TmpVersion@1100525000 : Integer;
                                  dec@1100525013 : TextConst;
                                  int@1100525012 : TextConst;
                                  txt@1100525011 : TextConst;
                                BEGIN
                                  FilterCode := Code;
                                  IF GETFILTER(Code) = '' THEN
                                    CurrReport.SKIP
                                  ELSE
                                    Popup.UPDATE(1, 'Excelbestand bijwerken vanuit Traject offerte');

                                  CALCFIELDS("Contact Name", "Salesperson Name");
                                  PartCostAmount := 0;

                                  //Calculatie gegevens
                                  CalculateCostPriceData(Code, "Try-outQuote".ShowEstimates(0));
                                  // REKENVELDEN
                                  StelpostBedrag       :=  GetBedragStelpost(Code);
                                  OfferteBedrag        := "Offered Amount (LCY)";
                                  Kostprijs            :=  PartCostAmount - StelpostBedrag;
                                  GewogenOfferteBedrag := (OfferteBedrag / 100) * "Scoring Percentage" ;
                                  GewogenKostprijs     := (Kostprijs / 100) * "Scoring Percentage" ;

                                  CASE TRUE OF
                                    (OfferteBedrag <> 0) AND (Kostprijs <> 0 ) : lMarge       := ((OfferteBedrag - Kostprijs) / OfferteBedrag );
                                    (OfferteBedrag <> 0) AND (Kostprijs  = 0 ) : lMarge  := 1;
                                    (OfferteBedrag  = 0)                       : lMarge  := 0;
                                  END;
                                  CASE TRUE OF
                                    (Kostprijs <> 0)                           : lMarkup := ((OfferteBedrag - Kostprijs) / Kostprijs     );
                                    (Kostprijs  = 0) AND (OfferteBedrag  = 0 ) : lMarkup := 0;
                                    (Kostprijs  = 0) AND (OfferteBedrag <> 0 ) : lMarkup := 1;
                                  END;

                                  IF GewogenOfferteBedrag <> 0 THEN
                                    GewogenMarge := ((GewogenOfferteBedrag - GewogenKostprijs) / GewogenOfferteBedrag )
                                  ELSE
                                    GewogenMarge := 1;

                                  // Excel Dump
                                  OpenDataSheet;  ////////////////////////////////////////////////////////////////////////////////////////////
                                  IF GetCell(1,1) <> 'Order begeleidings formulier' THEN
                                    ERROR('Het geselecteerde document is geen order begeleidings formulier.');

                                  IF GetCell(26,1) = '' THEN BEGIN
                                    xlSheet.Range(Matrix(26, 1)).Value := FORMAT(Code);
                                  END ELSE
                                    IF FORMAT(GetCell(26,1)) <> "Try-outQuote".Code THEN
                                      ERROR('Deze Excelsheet is aangemaakt voor trajectofferte %1. \' +
                                            'U kunt deze sheet niet aanpassen met offerte %2.', FORMAT(GetCell(26,1)), Code );

                                  AddCell("Salesperson Name");                                                       // Accountmanager
                                  NewLine;
                                  CALCFIELDS("Name Estimator");                                               // Behandelaar
                                  AddCell( "Name Estimator");                                               // Behandelaar
                                  NewLine;
                                  AddCell( GetTryOutSuccProjectManager("Try-out No."));                               // Projectmanager
                                  NewLine;
                                                                                                                      // contractmanager
                                  NewLine;

                                                                                                                      // werkvoorbereider
                                  NewLine;

                                  NewLine;
                                  NewLine;

                                  AddCell( FORMAT(WORKDATE));                                                         // Datum uitdraai
                                  NewLine;

                                  IF NOT EVALUATE(TmpVersion, GetCell(3,12)) THEN
                                    TmpVersion := 0;
                                  AddCell( FORMAT(TmpVersion + 1));     //Versie no.

                                  NewLine;
                                  NewLine;
                                  IF TryOut."Single/Main/Sub Tryout" <> TryOut."Single/Main/Sub Tryout"::Single THEN  // Hoofd traject
                                    AddCell(TryOut."Main Try-out")
                                  ELSE
                                    AddCell('');
                                  NewLine;
                                                                                                                      // Traject Omschrijving
                                  NewLine;

                                  AddCell(TryOut.Code);                                                               // Traject
                                  NewLine;
                                  AddCell("Try-outQuote".Description);                                               // Omschrijving
                                  NewLine;
                                  AddCell( Code);                                                                     // Offerte
                                  NewLine;
                                  AddCell( GetEstimates("Try-out No."));                                              // Tellende Calculatie(s)
                                  NewLine;
                                  NewLine; //Projectnr.
                                  AddCell( txt + "Tender No.");                                                       // Bestek
                                  NewLine;
                                  AddCell("Contact Name");                                                  // Klant
                                  NewLine;
                                  //AddCell( Tryoutline."Contact Name (Company)");                                      // Eindklant
                                  AddCell('');
                                  NewLine;
                                  NewLine; //Opdrachtgever
                                  NewLine;
                                  AddCell("Global Dimension 1 Code");                                                 // kostenplaats trajectofferte
                                  NewLine;
                                  NewLine;
                                  AddCell(FORMAT("Send Date"));                                                       // Datum verstuurd
                                  NewLine;
                                  AddCell(FORMAT("Valid Until"));                                                     // Geldigheidsdatum
                                  NewLine;
                                  AddCell(FORMAT("Tender Date"));                                                     // Aanbestedingsdatum
                                  NewLine;
                                  AddCell(FORMAT("Assign Date"));                                                     // Aanwijzingsdatum
                                  NewLine;
                                  AddCell( FORMAT(TryOut."Expected Order Date"));                                     // Verwachtte orderdatum
                                  NewLine;
                                                                                                                      // Opdracht referentienummer
                                  NewLine;
                                                                                                                      // Factuurtekst termijnen
                                  NewLine;
                                  AddCell( FORMAT(TryOut."Expected Starting Date"));                                  // Verwachtte begindatum
                                  NewLine;
                                  AddCell( FORMAT(TryOut."Expected End Date"));                                       // Verw einddatum
                                  NewLine;
                                  AddCell( Getplanningsreservering(Code));                                            // Planningsreservering
                                  NewLine;
                                  AddCell("Installment Scheme Project");                                                      // Termijnschema
                                  NewLine;
                                  NewLine; //Kostekst termijnen
                                  NewLine; //Termijn 01
                                  NewLine; //Termijn 02
                                  NewLine; //Termijn 03
                                  NewLine; //Termijn 04
                                  NewLine; //Termijn 05
                                  NewLine; //Termijn 06
                                  NewLine; //Termijn 07
                                  NewLine; //Termijn 08
                                  NewLine; //Termijn 09
                                  NewLine; //Termijn 10
                                  NewLine;
                                  NewLine;
                                  NewLine;
                                  AddCell( FORMAT(TryOut."Order Amount (LCY)", 0, dec));                                    // Offerte bedrag
                                  NewLine;
                                  AddCell( FORMAT(GetBedragStelpost(Code), 0, dec));                                  // Provisional sum
                                  NewLine;
                                  AddCell( GetMaintenancePeriod(Code));                                               // OH jaren
                                  NewLine;
                                  AddCell( FORMAT(GetOnderhoudsbedrag(Code), 0, dec));                                // OH Bedrag per jaar
                                  NewLine;
                                  NewLine;
                                  NewLine;
                                  AddCell( GetFeature(Code,'Offer Type'));                                            // Offer type
                                  NewLine;
                                  AddCell( GetFeature(Code,'Role Peek'));                                             // Role Peek
                                  NewLine;
                                  AddCell( GetFeature(Code,'Type of work'));                                          // Type of Work
                                  NewLine;
                                  OpenControleSheet;  ////////////////////////////////////////////////////////////////////////////////////////////
                                  ColumnNo := 5;
                                  AddCell( COPYSTR(Status, 1, 3));                                                    // Offerte status
                                  NewLine;
                                  AddCell( FORMAT("Try-outQuote"."Scoring Percentage"));                             // Scoringspercentage
                                  NewLine;
                                  AddCell("Try-outQuote"."Global Dimension 1 Code");                                 // Kostenplaats
                                  NewLine;
                                  AddCell(FORMAT("Try-outQuote"."Valid Until"));                                     // Geldig tot
                                  NewLine;
                                  AddCell("Try-outQuote"."Contact No.");                                   // Relatie
                                  NewLine;
                                  NewLine;                                                                            // Lege regel
                                  IF "Try-outQuote".Leading THEN                                                     // Tellend
                                    AddCell('Ja')
                                  ELSE
                                    AddCell('');
                                  NewLine;
                                  AddCell(FORMAT("Try-outQuote"."Order Date"));                                      // Relatie
                                END;

               OnPostDataItem=BEGIN
                                UpdateHistorieSheet;
                              END;

               ReqFilterFields=Code }

    { 1100525001;1;DataItem;                 ;
               DataItemTable=Table11012750;
               DataItemTableView=SORTING(Code)
                                 ORDER(Ascending);
               OnAfterGetRecord=VAR
                                  TryOutLine@1100525002 : Record 11012755;
                                  SalesPerson@1100525001 : Record 13;
                                  TmpVersion@1100525000 : Integer;
                                  dec@1100525005 : TextConst;
                                  int@1100525004 : TextConst;
                                  txt@1100525003 : TextConst;
                                BEGIN
                                  Popup.UPDATE(1, 'Excelbestand bijwerken vanuit Traject');

                                  TryOutLine.SETRANGE("Try-out No.", Code);
                                  TryOutLine.SETFILTER("Contact Type",'END CUSTOMER');
                                  IF TryOutLine.FINDFIRST THEN
                                    TryOutLine.CALCFIELDS("Contact Name")
                                  ELSE
                                    TryOutLine.INIT;

                                  IF SalesPerson.GET("Try-out"."Salesperson Code") THEN;

                                  // Excel Dump
                                  OpenDataSheet; /////////////////////////////////////////////////////////////////////////////////////////////////////////
                                  AddCell( SalesPerson.Name);                           // Accountmanager
                                  NewLine;
                                  NewLine;
                                  //projectleider
                                  AddCell( GetTryOutSuccProjectManager(Code));          // Projectmanager
                                  NewLine;
                                  //contractmanager
                                  NewLine;
                                  //werkvoorbereider
                                  NewLine;
                                  NewLine;
                                  NewLine;
                                  AddCell( FORMAT(WORKDATE)); // Datum uitdraai
                                  NewLine;
                                  NewLine;
                                  NewLine;
                                  IF "Single/Main/Sub Tryout" <> "Single/Main/Sub Tryout"::Single THEN
                                    AddCell("Main Try-out")                             // Hoofd traject
                                  ELSE
                                    AddCell('');                                        // GEEN Hoofd traject
                                  NewLine;
                                  //Traject omschrijving
                                  NewLine;
                                  AddCell( Code);                                       // Traject
                                  NewLine;
                                  AddCell( Description);                                // Omschrijving
                                  NewLine;
                                  // SKIP Traject offerte
                                  NewLine;
                                  AddCell( GetEstimates(Code));                         // Tellende Calculatie(s)
                                  NewLine;
                                  NewLine; //Projectnr
                                  // SKIP Besteknummer
                                  NewLine;
                                  // SKIP Bedrijfsnaam
                                  NewLine;
                                  AddCell( TryOutLine."Contact Name");        // Eindklant
                                  NewLine;
                                  NewLine; //Opdrachtgever
                                  // kostenplaats 3001 leveranciernaam
                                  NewLine;
                                  //kostenplaats trajectofferte
                                  NewLine;
                                  NewLine;
                                  //Datum verstuurd
                                  NewLine;
                                  // Geldigheidsdatum
                                  NewLine;
                                  //
                                  NewLine;
                                  //Aanwijzingsdatum
                                  NewLine;
                                  AddCell( FORMAT("Expected Order Date"));              // Verwachtte orderdatum
                                  NewLine;
                                  //Opdracht referentienummer
                                  NewLine;
                                  //Factuurtekst termijnen
                                  NewLine;
                                  AddCell( FORMAT("Expected Order Date"));              // Verwachtte orderdatum
                                  NewLine;
                                  AddCell( FORMAT("Expected Starting Date"));           // Verwachtte begindatum
                                  NewLine;
                                  AddCell( Getplanningsreservering(Code));              // Planningsreservering
                                  NewLine;
                                  //Termijnschema
                                  NewLine;
                                  NewLine; //Koptekst termijnen
                                  NewLine; //Termijn 01
                                  NewLine; //Termijn 02
                                  NewLine; //Termijn 03
                                  NewLine; //Termijn 04
                                  NewLine; //Termijn 05
                                  NewLine; //Termijn 06
                                  NewLine; //Termijn 07
                                  NewLine; //Termijn 08
                                  NewLine; //Termijn 09
                                  NewLine; //Termijn 10
                                  NewLine;
                                  NewLine;
                                  NewLine;
                                  AddCell( FORMAT("Order Amount (LCY)", 0, dec));      // Offerte bedrag   // REPLACE JvL 2010-08-19
                                  NewLine;
                                  //Provisional sum
                                  NewLine;
                                  //AddCell( GetMaintenancePeriod(Code));                 // OH jaren
                                  NewLine;
                                  //AddCell( FORMAT(GetOnderhoudsbedrag(Code), 0, dec));  // OH Bedrag per jaar
                                  NewLine;
                                  NewLine;
                                  NewLine;
                                  //dCell( GetFeature(Code,'Offer Type'));              // Offer type
                                  NewLine;
                                  ///Cell( GetFeature(Code,'Role Peek'));               // Role Peek
                                  NewLine;
                                  //dCell( GetFeature(Code,'Type of work'));            // Type of Work
                                  NewLine;
                                  OpenControleSheet;  ////////////////////////////////////////////////////////////////////////////////////////////
                                  ColumnNo := 6;
                                  AddCell( COPYSTR(Status, 1, 3));                                                    // Offerte status
                                  NewLine;
                                  AddCell( FORMAT("Scoring Percentage"));                                             // Scoringspercentage
                                  NewLine;
                                  AddCell("Global Dimension 1 Code");                                                 // Kostenplaats
                                  NewLine;
                                  NewLine;                                                                            // Lege regel
                                  NewLine;                                                                            // Lege regel
                                  NewLine;                                                                            // Lege regel
                                  NewLine;                                                                            // Lege regel
                                  AddCell(FORMAT("Order Date"));                                                      // Relatie
                                END;

               DataItemLink=Code=FIELD(Try-out No.) }

    { 1100525002;2;DataItem;                 ;
               DataItemTable=Table11012761;
               DataItemTableView=SORTING(Try-out No.,Try-out Quote,Line No.)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               SETRANGE("Try-out Quote", "Try-outQuote".Code);
                               SETRANGE("Try-out No.", "Try-out".Code);
                               SETFILTER("Project No.", '<>%1', '');
                             END;
                              }

    { 1100525003;3;DataItem;                 ;
               DataItemTable=Table11072003;
               DataItemTableView=SORTING(No.);
               OnAfterGetRecord=BEGIN
                                  Popup.UPDATE(1, 'Excelbestand bijwerken vanuit Project');

                                  OpenDataSheet();
                                  ColumnNo := 3;
                                  CALCFIELDS("Name Project Manager"); // Projectleider
                                  RowNo               := 6;
                                  AddCell("Name Project Manager");
                                  CALCFIELDS("Name Project Engineer"); // Werkvoorbereider
                                  RowNo               := 8;
                                  AddCell("Name Project Engineer");
                                  RowNo               := 20; //Project nr.
                                  AddCell("No.");
                                  RowNo               := 24; //Opdrachtgever
                                  CALCFIELDS("Principal Name");
                                  AddCell("Principal Name");
                                END;

               DataItemLink=No.=FIELD(Project No.) }

    { 1100525004;4;DataItem;                 ;
               DataItemTable=Table11012005;
               DataItemTableView=SORTING(Project No.,Principal)
                                 ORDER(Ascending);
               OnAfterGetRecord=BEGIN
                                  OpenDataSheet();
                                  ColumnNo := 3;
                                  RowNo    := 38;
                                  AddCell("Installment Scheme"); // Termijnschema
                                END;

               DataItemLink=Project No.=FIELD(No.),
                            Principal=FIELD(Bill-to Customer No.) }

    { 1100525005;4;DataItem;                 ;
               DataItemTable=Table11012018;
               DataItemTableView=SORTING(Project No.,Principal,Plot No.,Installment No.)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               RowNo               := 39; //Koptekst
                             END;

               OnAfterGetRecord=VAR
                                  dec@1100525002 : TextConst;
                                  int@1100525001 : TextConst;
                                  txt@1100525000 : TextConst;
                                BEGIN
                                  NewLine;
                                  ColumnNo := 3;
                                  AddCell(Description);
                                  ColumnNo := 13;
                                  AddCell( FORMAT("Installment Amount (LCY)", 0, dec));                                      // Offerte bedrag
                                  ColumnNo := 16;
                                  AddCell( FORMAT("Percentage Contract Amount", 0, dec));                                    // Offerte bedrag
                                END;

               DataItemLink=Project No.=FIELD(No.) }

    { 1100525006;2;DataItem;Try-out Successor 2;
               DataItemTable=Table11012761;
               DataItemTableView=SORTING(Try-out No.,Try-out Quote,Line No.)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               SETRANGE( "Try-out Quote"   , FilterCode);
                               SETRANGE( "Try-out No."     , "Try-out".Code     );
                               SETRANGE( "Leading Estimate",  TRUE              );
                               SETFILTER("Estimate No."    , '<>%1', ''         );
                             END;
                              }

    { 1100525007;3;DataItem;                 ;
               DataItemTable=Table11012151;
               DataItemTableView=SORTING(No.)
                                 ORDER(Ascending);
               OnAfterGetRecord=VAR
                                  EstimateLine@1100525001 : Record 11012154;
                                  Vendors@1100525000 : Text[1024];
                                BEGIN
                                  SETRANGE("No.", ' skip');
                                  Popup.UPDATE(1, 'Excelbestand bijwerken vanuit Calculatie');

                                  OpenDataSheet();  ////////////////////////////////////////////////////////////////////////////////////////////
                                  ColumnNo := 3;

                                  // Opdracht referentienummer
                                  RowNo               := 3;
                                  AddCell("Order No. Customer");

                                  // Onderaannemers
                                  EstimateLine.SETRANGE("Estimate No.", Estimate."No.");
                                  EstimateLine.SETRANGE("Cost Object Subcontracting", '3001');
                                  IF EstimateLine.FINDSET(FALSE, FALSE) THEN REPEAT
                                    EstimateLine.CALCFIELDS("Vendor Name", "Subcontractor Name");
                                    IF EstimateLine."Vendor Name"        <> '' THEN
                                      IF Vendors = '' THEN
                                        Vendors := EstimateLine."Vendor Name"
                                      ELSE
                                        Vendors := Vendors + ', ' + EstimateLine."Vendor Name";
                                    IF EstimateLine."Subcontractor Name" <> '' THEN
                                      IF Vendors = '' THEN
                                        Vendors := EstimateLine."Subcontractor Name"
                                      ELSE
                                        Vendors := Vendors + ', ' + EstimateLine."Subcontractor Name";
                                  UNTIL EstimateLine.NEXT = 0;

                                  RowNo   := 23;
                                  AddCell(Vendors);
                                  NewLine;
                                  OpenControleSheet;  ////////////////////////////////////////////////////////////////////////////////////////////
                                  ColumnNo := 7;
                                  RowNo   := 5;
                                  AddCell("Global Dimension 1 Code");                                                 // Kostenplaats
                                  NewLine;
                                  NewLine;                                                                            // Lege regel
                                  AddCell("Contact No.");
                                END;

               DataItemLink=No.=FIELD(Estimate No.) }

    { 1100525008;4;DataItem;                 ;
               DataItemTable=Table11012153;
               DataItemTableView=SORTING(Estimate No.,Sub-Estimate No.,Part Group,Part)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               OpenDataSheet();  ////////////////////////////////////////////////////////////////////////////////////////////
                               RowNo               := 83;
                             END;

               OnAfterGetRecord=BEGIN
                                  RowNo               += 1;
                                  ColumnNo            := 1;
                                  AddCell(Description);

                                  ColumnNo            += 1;
                                  AddCell(Text + Part);
                                END;

               DataItemLink=Estimate No.=FIELD(No.) }

    { 1100525009;2;DataItem;Try-out Successor 3;
               DataItemTable=Table11012761;
               DataItemTableView=SORTING(Try-out No.,Try-out Quote,Line No.)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               SETFILTER("Try-out Quote", '<>%1', "Try-outQuote".Code);
                               SETRANGE ("Try-out No."  , "Try-out".Code             );
                             END;
                              }

    { 1100525010;3;DataItem;Try-out Quote 2  ;
               DataItemTable=Table11012758;
               DataItemTableView=SORTING(Code)
                                 WHERE(Status=FILTER(<T70));
               OnAfterGetRecord=BEGIN
                                  OpenControleSheet;  ////////////////////////////////////////////////////////////////////////////////////////////
                                  ColumnNo := 8;

                                  AddCell('FALSE');                                                    // Offerte status
                                  NewLine;
                                END;

               DataItemLink=Code=FIELD(Try-out Quote) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   FilenamelabelEDITABLE := (FALSE);
                 END;

    }
    CONTROLS
    {
      { 1100525000;;Container;
                  Name=Main;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  Name=Opties;
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  Name=Bestaande sheet gebruiken;
                  SourceExpr=UseOtherSheet;
                  OnValidate=BEGIN

                               IF UseOtherSheet THEN
                                 FilenamelabelEDITABLE := TRUE
                               ELSE
                                 FilenamelabelEDITABLE := FALSE
                             END;
                              }

      { 1100525006;2;Group  ;
                  Editable=FilenamelabelEDITABLE;
                  GroupType=Group }

      { 1100525003;3;Field  ;
                  Name=Bestandsnaam;
                  SourceExpr=FileName;
                  OnAssistEdit=VAR
                                 FileMgt@1100525000 : Codeunit 419;
                               BEGIN

                                 FileName := FileMgt.OpenFileDialog('Selecteer calculatiesheet', FileName,'');
                               END;
                                }

      { 1100525004;2;Field  ;
                  Name=Padcode;
                  SourceExpr='POBF';
                  Editable=FALSE }

      { 1100525005;2;Field  ;
                  Name=Templatebestand;
                  SourceExpr=PathName;
                  Editable=FALSE }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FileName@1100525018 : Text[250];
      SheetName@1100525017 : Text[250];
      PathName@1100525016 : Text[250];
      xlApp@1100525015 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024500-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      xlBook@1100525014 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";
      xlSheet@1100525013 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:Unknown Automation Server.Worksheet";
      xlSheets@1100525012 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000208D7-0000-0000-C000-000000000046}:Unknown Automation Server.Sheets";
      xlRange@1100525011 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      xlVPageBreaks@1100525010 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024405-0000-0000-C000-000000000046}:Unknown Automation Server.VPageBreaks";
      RowNo@1100525009 : Integer;
      ColumnNo@1100525008 : Integer;
      newsheetname@1100525007 : Text[30];
      PartCostAmount@1100525006 : Decimal;
      Margin@1100525005 : Decimal;
      Markup@1100525004 : Decimal;
      Onderhoudsbedrag@1100525003 : Decimal;
      Popup@1100525002 : Dialog;
      UseOtherSheet@1100525001 : Boolean;
      FilterCode@1100525000 : Code[20];
      Text005@1100525019 : TextConst;
      FilenamelabelEDITABLE@1100525020 : Boolean INDATASET;

    PROCEDURE OpenDataSheet@1000000003();
    BEGIN
      SheetName           := 'Data';
      xlSheet             := xlApp.Worksheets.Item(SheetName);
      xlSheet.Select;

      RowNo               := 4;
      ColumnNo            := 3;
    END;

    PROCEDURE OpenControleSheet@1000000004();
    BEGIN
      SheetName           := 'Controle';
      xlSheet             := xlApp.Worksheets.Item(SheetName);
      xlSheet.Select;

      RowNo    := 3;
    END;

    PROCEDURE UpdateHistorieSheet@1000000008();
    BEGIN
      SheetName           := 'Historie';
      xlSheet             := xlApp.Worksheets.Item(SheetName);
      xlSheet.Select;

      ColumnNo := 1;
      RowNo    := 2;

      WHILE GetCell( 1, RowNo) <> '' DO
        RowNo += 1;

      AddCell(USERID);
      ColumnNo += 1;
      AddCell(FORMAT(CURRENTDATETIME));
    END;

    PROCEDURE Matrix@1000000001(m_col@1000000000 : Integer;m_row@1000000001 : Integer) m_ret : Code[10];
    VAR
      xx@1000000002 : Integer;
      alf@1000000003 : Code[50];
      m_rest@1000000004 : Decimal;
      m_nu@1000000005 : Decimal;
      m_heel@1000000006 : Decimal;
      m_tus@1000000007 : Code[30];
    BEGIN
      IF m_col > 256 THEN BEGIN
       m_tus:='IV';
       ERROR('Selecteer minder artikelen (max 256)');
      END ELSE BEGIN
       alf:='ABCDEFGHIJKLMNOPQRSTUVWXYZ    ';
       REPEAT
         m_heel:=ROUND(m_col/26.000000001,1,'<');
         IF m_heel>0 THEN
          m_nu:=m_heel
         ELSE
          m_nu:=m_col;
         IF m_nu=0 THEN m_nu:=27;
         m_tus:=m_tus+COPYSTR(alf,m_nu,1);
         m_col:=ROUND(m_col-(m_heel*26),1);
       UNTIL m_heel<=0 ;
      END;
      m_ret:=DELCHR(STRSUBSTNO('%1 %2',m_tus,m_row));
    END;

    PROCEDURE AddCell@1000000006(Value@1000000000 : Text[1024]);
    BEGIN
      xlSheet.Range(Matrix(ColumnNo, RowNo)).Value := Value;
    END;

    PROCEDURE GetCell@1000000002(Column@1000000001 : Integer;Row@1000000000 : Integer) : Text[250];
    BEGIN
      EXIT(FORMAT(xlSheet.Range(Matrix(Column, Row)).Value));
    END;

    PROCEDURE NewLine@1000000007();
    BEGIN
      RowNo += 1;
    END;

    PROCEDURE Getplanningsreservering@1000000022(TryOutQuoteNo@1000000000 : Code[20]) : Text[30];
    VAR
      TryOutQuote@1000000002 : Record 11012758;
    BEGIN
      IF TryOutQuote.GET(TryOutQuoteNo) THEN
        IF TryOutQuote."Planning Informed" <> 0D THEN
          EXIT('YES')
        ELSE
          EXIT(' ');
    END;

    PROCEDURE GetTryOutSuccProjectManager@1000000031(TryOutNo@1000000001 : Code[20]) : Text[50];
    VAR
      TryoutSuccessor@1000000000 : Record 11012761;
      JobRec@1000000002 : Record 11072003;
    BEGIN
      TryoutSuccessor.SETRANGE("Try-out No.",TryOutNo);
      TryoutSuccessor.SETFILTER("Project No.",'<>%1','');
      IF TryoutSuccessor.FINDFIRST THEN BEGIN
        JobRec.GET(TryoutSuccessor."Project No.");
        JobRec.CALCFIELDS("Name Project Manager");
        EXIT(JobRec."Name Project Manager");
      END ELSE
        EXIT(' ');
    END;

    PROCEDURE GetTryOutSuccProjectNumber@1000000040(TryOutNo@1000000001 : Code[20]) : Text[250];
    VAR
      TryoutSuccessor@1000000000 : Record 11012761;
      JobRec@1000000002 : Record 11072003;
      JobNo@1000000003 : Text[1024];
    BEGIN
      TryoutSuccessor.SETRANGE("Try-out No.",TryOutNo);
      TryoutSuccessor.SETFILTER("Project No.",'<>%1','');
      IF TryoutSuccessor.FINDFIRST THEN BEGIN
        JobNo          := TryoutSuccessor."Project No.";
        WHILE TryoutSuccessor.NEXT <> 0 DO
          JobNo := JobNo + ', ' + TryoutSuccessor."Project No.";
        EXIT(JobNo);
      END ELSE
        EXIT(' ');
    END;

    PROCEDURE GetEstimates@1000000005(TryOutNo@1000000001 : Code[20]) EstimateList : Text[250];
    VAR
      TryoutSuccessor@1000000000 : Record 11012761;
      JobRec@1000000002 : Record 11072003;
    BEGIN
      TryoutSuccessor.SETRANGE( "Try-out No."     ,  TryOutNo);
      TryoutSuccessor.SETRANGE("Try-out Quote", FilterCode);
      TryoutSuccessor.SETFILTER("Estimate No.", '<>%1&<>*V', '');

      IF TryoutSuccessor.FINDFIRST THEN BEGIN

        IF TryoutSuccessor."Leading Estimate" THEN
          EstimateList := TryoutSuccessor."Estimate No." + ' [T]'
        ELSE
          EstimateList := TryoutSuccessor."Estimate No.";

        WHILE TryoutSuccessor.NEXT <> 0 DO
          IF TryoutSuccessor."Leading Estimate" THEN
            EstimateList := EstimateList + ', ' + TryoutSuccessor."Estimate No." + ' [T]'
          ELSE
            EstimateList := EstimateList + ', ' + TryoutSuccessor."Estimate No.";
        EXIT;
      END ELSE
        EXIT;
    END;

    PROCEDURE GetFeature@1000000044(TryOutQuoteNo@1000000000 : Code[20];Feature@1000000002 : Text[30]) : Text[30];
    VAR
      ContactFeatureType@1000000001 : Record 11012753;
    BEGIN
      ContactFeatureType.SETRANGE( "Relation Type",  ContactFeatureType."Relation Type"::"Try-out Quote");
      ContactFeatureType.SETRANGE(  Code          ,  TryOutQuoteNo                                      );
      ContactFeatureType.SETFILTER("Feature Group", '@' + Feature                                       );
      IF ContactFeatureType.FINDFIRST THEN BEGIN
        EXIT(ContactFeatureType.Feature);
      END ELSE
        EXIT('');
    END;

    PROCEDURE GetMaintenancePeriod@1000000053(TryOutQuoteNo@1000000000 : Code[20]) : Text[30];
    VAR
      ContactFeatureType@1000000001 : Record 11012753;
    BEGIN
      ContactFeatureType.SETRANGE("Relation Type",ContactFeatureType."Relation Type"::"Try-out Quote");
      ContactFeatureType.SETRANGE(Code, TryOutQuoteNo);
      ContactFeatureType.SETRANGE("Feature Group",'Maintenance period');
      IF ContactFeatureType.FINDFIRST THEN BEGIN
        EXIT(ContactFeatureType.Feature);
      END ELSE
        EXIT(' ');
    END;

    PROCEDURE CalculateCostPriceData@1000000056(TryOutQte@1000000001 : Code[20];EstimateNo@1000000018 : Code[20]);
    VAR
      TryoutSuccessor@1000000000 : Record 11012761;
      SubEstRec@1000000002 : Record 11012152;
      CopyRec@1000000003 : Record 11012153;
      SubEstPart@1000000004 : Record 11012153;
      Estimate@1000000005 : Record 11012151;
      PartSalesHours@1000000006 : Decimal;
      PartSalesAmount@1000000007 : Decimal;
      LaborDec@1000000008 : Decimal;
      Matdec@1000000009 : Decimal;
      SubcDec@1000000010 : Decimal;
      PlantDec@1000000011 : Decimal;
      PartCostHours@1000000012 : Decimal;
      CumLaborDec@1000000013 : Decimal;
      CumMatDec@1000000014 : Decimal;
      CumSubcDec@1000000015 : Decimal;
      CumPlantDec@1000000016 : Decimal;
      CalculatedCostPrice@1000000017 : Decimal;
    BEGIN
      IF COPYSTR(EstimateNo, 1, 1) = '[' THEN
        TryoutSuccessor.SETFILTER("Estimate No."    , '*V'             )
      ELSE
        TryoutSuccessor.SETFILTER("Estimate No."    ,  EstimateNo + 'V');
      TryoutSuccessor.SETRANGE("Try-out Quote"   ,  TryOutQte);
      IF TryoutSuccessor.FINDFIRST THEN BEGIN        //calculatienr.
        SubEstPart.SETRANGE("Estimate No.",TryoutSuccessor."Estimate No.");
        SubEstPart.SETFILTER("Sub-Estimate No.",'100.000');
        SubEstPart.SETFILTER("Part Group",'G');
        SubEstPart.SETFILTER(Part,'00.000.000');

        IF SubEstPart.FINDFIRST THEN BEGIN
          Estimate.GET(TryoutSuccessor."Estimate No.");

          IF NOT Estimate.Finished THEN EXIT;

          CopyRec := SubEstPart;
          IF Estimate."No." <> CopyRec."Estimate No." THEN
            Estimate.GET(CopyRec."Estimate No.");
          Estimate.CALCFIELDS("Copied from Estimate Descr.");
          CopyRec."Estimate No." := Estimate."Copied from Cost Estimate";
          IF NOT CopyRec.FIND THEN
            CopyRec.INIT;

          CASE SubEstPart.Level OF
            0:BEGIN
                SubEstPart.CALCFIELDS("Estimated Total","Hours Total","Cum. Estimated Total");
                PartSalesHours  := SubEstPart."Hours Total";
                PartSalesAmount := SubEstPart."Cum. Estimated Total";

                CopyRec.CALCFIELDS("Labor Total", "Material Total",
                           "Subcontracting Total", "Plant Total", "Hours Total");
                LaborDec      := CopyRec."Labor Total";
                Matdec        := CopyRec."Material Total";
                SubcDec       := CopyRec."Subcontracting Total";
                PlantDec      := CopyRec."Plant Total";
                PartCostHours := CopyRec."Hours Total";


                CopyRec.CALCFIELDS("Cum. Labor Total", "Cum. Material Total",
                           "Cum. Subcontracting Total", "Cum. Plant Total");

                CumLaborDec := CopyRec."Cum. Labor Total";
                CumMatDec   := CopyRec."Cum. Material Total";
                CumSubcDec  := CopyRec."Cum. Subcontracting Total";
                CumPlantDec := CopyRec."Cum. Plant Total";

                PartCostAmount      := CumLaborDec + CumMatDec + CumSubcDec + CumPlantDec;
                CalculatedCostPrice := CopyRec."Calculated Price";
                PartCostAmount      := CalculatedCostPrice;

                Margin := SubEstPart.GetMargin(SubEstPart."Offer Price",CalculatedCostPrice);
                Markup := SubEstPart.GetMarkup(SubEstPart."Offer Price",CalculatedCostPrice);
              END;
          END;
        END;
      END;
    END;

    PROCEDURE GetOnderhoudsbedrag@1000000018(TryOutQte@1000000005 : Code[20]) : Decimal;
    VAR
      TryoutSuccessor@1000000004 : Record 11012761;
      SubEstRec@1000000003 : Record 11012152;
      CopyRec@1000000002 : Record 11012153;
      SubEstPart@1000000001 : Record 11012153;
      Estimate@1000000000 : Record 11012151;
    BEGIN
      //deelcalc met onderdeel groep S aanbiedingsprijs
      TryoutSuccessor.SETRANGE("Try-out Quote",TryOutQte);
      TryoutSuccessor.SETFILTER("Estimate No.",'*V');
      TryoutSuccessor.SETRANGE("Leading Estimate",FALSE);
      IF TryoutSuccessor.FINDFIRST THEN BEGIN        //calculatienr.
        SubEstPart.SETRANGE("Estimate No.",TryoutSuccessor."Estimate No.");
        SubEstPart.SETFILTER("Part Group",'S');
        IF SubEstPart.FINDFIRST THEN BEGIN
          Estimate.GET(TryoutSuccessor."Estimate No.");
          CopyRec := SubEstPart;
          IF Estimate."No." <> CopyRec."Estimate No." THEN
            Estimate.GET(CopyRec."Estimate No.");
          Estimate.CALCFIELDS("Copied from Estimate Descr.");
          CopyRec."Estimate No." := Estimate."Copied from Cost Estimate";
          IF NOT CopyRec.FIND THEN
            CopyRec.INIT;
          EXIT(SubEstPart."Offer Price");
        END;
      END;
    END;

    PROCEDURE GetBedragStelpost@1000000025(TryOutQte@1000000000 : Code[20]) : Decimal;
    VAR
      EstimateLine@1000000001 : Record 11012154;
      TryoutSuccessor@1000000002 : Record 11012761;
      Stelpost@1000000003 : Decimal;
    BEGIN
      //Regelstatus PS (PM) aanbiedingsprijs
      TryoutSuccessor.SETRANGE("Try-out Quote",TryOutQte);
      TryoutSuccessor.SETFILTER("Estimate No.",'*V');
      TryoutSuccessor.SETRANGE("Leading Estimate",FALSE);
      IF TryoutSuccessor.FINDFIRST THEN BEGIN        //calculatienr.
        EstimateLine.SETRANGE("Estimate No.",TryoutSuccessor."Estimate No.");
        EstimateLine.SETFILTER("Line Status",'PS');
        IF EstimateLine.FINDSET THEN BEGIN
          REPEAT
            Stelpost := Stelpost + EstimateLine.Amount;
          UNTIL EstimateLine.NEXT = 0;
        END;
        EXIT(Stelpost);
      END ELSE
        EXIT(0);
    END;

    PROCEDURE GetEmployeeName@1000000039(EmployeeCode@1000000000 : Code[20]) : Text[50];
    VAR
      EmployeeRec@1000000001 : Record 5200;
    BEGIN
      IF EmployeeCode = '' THEN
        EXIT('');

      EmployeeRec.GET(EmployeeCode);
      EXIT(EmployeeRec."Full Name");
    END;

    PROCEDURE GetABCD@1000000000(ContactNo@1000000000 : Code[20]) : Text[1];
    VAR
      ContactFeatureType@1000000001 : Record 11012753;
    BEGIN
      ContactFeatureType.SETRANGE( "Relation Type",  0            );
      ContactFeatureType.SETFILTER( Code          ,  ContactNo    );
      ContactFeatureType.SETRANGE( "Feature Group", 'ABCD Current');
      IF NOT ContactFeatureType.FINDFIRST THEN
        EXIT('')
      ELSE
        EXIT(COPYSTR(ContactFeatureType.Feature, 1, 1));
    END;

    PROCEDURE GetPath@1000000009(PathCode@1000000000 : Code[10]);
    VAR
      lStandardText@1000000001 : Record 7;
      lExtendedTextLine@1000000002 : Record 280;
      i@1000000003 : Integer;
    BEGIN
      //Tabelnaam,Nr.,Taal,Tekstnr.,Regelnr.
      IF NOT lStandardText.GET(PathCode) THEN
        ERROR(Text005)
      ELSE BEGIN
         lExtendedTextLine.SETRANGE("Table Name", lExtendedTextLine."Table Name"::"Standard Text");
         lExtendedTextLine.SETRANGE("No.",PathCode);
         IF lExtendedTextLine.FINDSET THEN BEGIN
           REPEAT
             i := i + 1;
             IF i < 3 THEN
               PathName += lExtendedTextLine.Text;
           UNTIL (lExtendedTextLine.NEXT = 0) OR (i = 3);
         END;
      END;
    END;

    EVENT xlSheet@1100525013::SelectionChange@1543(Target@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT xlSheet@1100525013::BeforeDoubleClick@1537(Target@1100525001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlSheet@1100525013::BeforeRightClick@1534(Target@1100525001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlSheet@1100525013::Activate@304();
    BEGIN
    END;

    EVENT xlSheet@1100525013::Deactivate@1530();
    BEGIN
    END;

    EVENT xlSheet@1100525013::Calculate@279();
    BEGIN
    END;

    EVENT xlSheet@1100525013::Change@1545(Target@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT xlSheet@1100525013::FollowHyperlink@1470(Target@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT xlSheet@1100525013::PivotTableUpdate@2156(Target@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT xlSheet@1100525013::PivotTableAfterValueChange@2886(TargetPivotTable@1100525001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";TargetRange@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT xlSheet@1100525013::PivotTableBeforeAllocateChanges@2889(TargetPivotTable@1100525003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1100525002 : Integer;ValueChangeEnd@1100525001 : Integer;VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlSheet@1100525013::PivotTableBeforeCommitChanges@2892(TargetPivotTable@1100525003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1100525002 : Integer;ValueChangeEnd@1100525001 : Integer;VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlSheet@1100525013::PivotTableBeforeDiscardChanges@2893(TargetPivotTable@1100525002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1100525001 : Integer;ValueChangeEnd@1100525000 : Integer);
    BEGIN
    END;

    EVENT xlSheet@1100525013::PivotTableChangeSync@2894(Target@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT xlBook@1100525014::Open@1923();
    BEGIN
    END;

    EVENT xlBook@1100525014::Activate@304();
    BEGIN
    END;

    EVENT xlBook@1100525014::Deactivate@1530();
    BEGIN
    END;

    EVENT xlBook@1100525014::BeforeClose@1546(VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlBook@1100525014::BeforeSave@1547(SaveAsUI@1100525001 : Boolean;VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlBook@1100525014::BeforePrint@1549(VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlBook@1100525014::NewSheet@1550(Sh@1100525000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT xlBook@1100525014::AddinInstall@1552();
    BEGIN
    END;

    EVENT xlBook@1100525014::AddinUninstall@1553();
    BEGIN
    END;

    EVENT xlBook@1100525014::WindowResize@1554(Wn@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT xlBook@1100525014::WindowActivate@1556(Wn@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT xlBook@1100525014::WindowDeactivate@1557(Wn@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT xlBook@1100525014::SheetSelectionChange@1558(Sh@1100525001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT xlBook@1100525014::SheetBeforeDoubleClick@1559(Sh@1100525002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100525001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlBook@1100525014::SheetBeforeRightClick@1560(Sh@1100525002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100525001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlBook@1100525014::SheetActivate@1561(Sh@1100525000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT xlBook@1100525014::SheetDeactivate@1562(Sh@1100525000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT xlBook@1100525014::SheetCalculate@1563(Sh@1100525000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT xlBook@1100525014::SheetChange@1564(Sh@1100525001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT xlBook@1100525014::SheetFollowHyperlink@1854(Sh@1100525001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT xlBook@1100525014::SheetPivotTableUpdate@2157(Sh@1100525001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT xlBook@1100525014::PivotTableCloseConnection@2158(Target@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT xlBook@1100525014::PivotTableOpenConnection@2159(Target@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT xlBook@1100525014::Sync@2266(SyncEventType@1100525000 : Integer);
    BEGIN
    END;

    EVENT xlBook@1100525014::BeforeXmlImport@2283(Map@1100525003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1100525002 : Text;IsRefresh@1100525001 : Boolean;VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlBook@1100525014::AfterXmlImport@2285(Map@1100525002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";IsRefresh@1100525001 : Boolean;Result@1100525000 : Integer);
    BEGIN
    END;

    EVENT xlBook@1100525014::BeforeXmlExport@2287(Map@1100525002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1100525001 : Text;VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlBook@1100525014::AfterXmlExport@2288(Map@1100525002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1100525001 : Text;Result@1100525000 : Integer);
    BEGIN
    END;

    EVENT xlBook@1100525014::RowsetComplete@2610(Description@1100525002 : Text;Sheet@1100525001 : Text;Success@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlBook@1100525014::SheetPivotTableAfterValueChange@2895(Sh@1100525002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1100525001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";TargetRange@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT xlBook@1100525014::SheetPivotTableBeforeAllocateChanges@2896(Sh@1100525004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1100525003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1100525002 : Integer;ValueChangeEnd@1100525001 : Integer;VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlBook@1100525014::SheetPivotTableBeforeCommitChanges@2897(Sh@1100525004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1100525003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1100525002 : Integer;ValueChangeEnd@1100525001 : Integer;VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlBook@1100525014::SheetPivotTableBeforeDiscardChanges@2898(Sh@1100525003 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1100525002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1100525001 : Integer;ValueChangeEnd@1100525000 : Integer);
    BEGIN
    END;

    EVENT xlBook@1100525014::SheetPivotTableChangeSync@2899(Sh@1100525001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT xlBook@1100525014::AfterSave@2900(Success@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlBook@1100525014::NewChart@2901(Ch@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:Unknown Automation Server.Chart");
    BEGIN
    END;

    EVENT xlApp@1100525015::NewWorkbook@1565(Wb@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT xlApp@1100525015::SheetSelectionChange@1558(Sh@1100525001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT xlApp@1100525015::SheetBeforeDoubleClick@1559(Sh@1100525002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100525001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1100525015::SheetBeforeRightClick@1560(Sh@1100525002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100525001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1100525015::SheetActivate@1561(Sh@1100525000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT xlApp@1100525015::SheetDeactivate@1562(Sh@1100525000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT xlApp@1100525015::SheetCalculate@1563(Sh@1100525000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT xlApp@1100525015::SheetChange@1564(Sh@1100525001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT xlApp@1100525015::WorkbookOpen@1567(Wb@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT xlApp@1100525015::WorkbookActivate@1568(Wb@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT xlApp@1100525015::WorkbookDeactivate@1569(Wb@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT xlApp@1100525015::WorkbookBeforeClose@1570(Wb@1100525001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1100525015::WorkbookBeforeSave@1571(Wb@1100525002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";SaveAsUI@1100525001 : Boolean;VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1100525015::WorkbookBeforePrint@1572(Wb@1100525001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1100525015::WorkbookNewSheet@1573(Wb@1100525001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Sh@1100525000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT xlApp@1100525015::WorkbookAddinInstall@1574(Wb@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT xlApp@1100525015::WorkbookAddinUninstall@1575(Wb@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT xlApp@1100525015::WindowResize@1554(Wb@1100525001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT xlApp@1100525015::WindowActivate@1556(Wb@1100525001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT xlApp@1100525015::WindowDeactivate@1557(Wb@1100525001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT xlApp@1100525015::SheetFollowHyperlink@1854(Sh@1100525001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT xlApp@1100525015::SheetPivotTableUpdate@2157(Sh@1100525001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT xlApp@1100525015::WorkbookPivotTableCloseConnection@2160(Wb@1100525001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Target@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT xlApp@1100525015::WorkbookPivotTableOpenConnection@2161(Wb@1100525001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Target@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT xlApp@1100525015::WorkbookSync@2289(Wb@1100525001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";SyncEventType@1100525000 : Integer);
    BEGIN
    END;

    EVENT xlApp@1100525015::WorkbookBeforeXmlImport@2290(Wb@1100525004 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1100525003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1100525002 : Text;IsRefresh@1100525001 : Boolean;VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1100525015::WorkbookAfterXmlImport@2291(Wb@1100525003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1100525002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";IsRefresh@1100525001 : Boolean;Result@1100525000 : Integer);
    BEGIN
    END;

    EVENT xlApp@1100525015::WorkbookBeforeXmlExport@2292(Wb@1100525003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1100525002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1100525001 : Text;VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1100525015::WorkbookAfterXmlExport@2293(Wb@1100525003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1100525002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1100525001 : Text;Result@1100525000 : Integer);
    BEGIN
    END;

    EVENT xlApp@1100525015::WorkbookRowsetComplete@2611(Wb@1100525003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Description@1100525002 : Text;Sheet@1100525001 : Text;Success@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1100525015::AfterCalculate@2612();
    BEGIN
    END;

    EVENT xlApp@1100525015::SheetPivotTableAfterValueChange@2895(Sh@1100525002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1100525001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";TargetRange@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT xlApp@1100525015::SheetPivotTableBeforeAllocateChanges@2896(Sh@1100525004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1100525003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1100525002 : Integer;ValueChangeEnd@1100525001 : Integer;VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1100525015::SheetPivotTableBeforeCommitChanges@2897(Sh@1100525004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1100525003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1100525002 : Integer;ValueChangeEnd@1100525001 : Integer;VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1100525015::SheetPivotTableBeforeDiscardChanges@2898(Sh@1100525003 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1100525002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1100525001 : Integer;ValueChangeEnd@1100525000 : Integer);
    BEGIN
    END;

    EVENT xlApp@1100525015::ProtectedViewWindowOpen@2903(Pvw@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT xlApp@1100525015::ProtectedViewWindowBeforeEdit@2905(Pvw@1100525001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow";VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1100525015::ProtectedViewWindowBeforeClose@2906(Pvw@1100525002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow";Reason@1100525001 : Integer;VAR Cancel@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1100525015::ProtectedViewWindowResize@2908(Pvw@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT xlApp@1100525015::ProtectedViewWindowActivate@2909(Pvw@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT xlApp@1100525015::ProtectedViewWindowDeactivate@2910(Pvw@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT xlApp@1100525015::WorkbookAfterSave@2911(Wb@1100525001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Success@1100525000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1100525015::WorkbookNewChart@2912(Wb@1100525001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Ch@1100525000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:Unknown Automation Server.Chart");
    BEGIN
    END;

    BEGIN
    {
       4 = verkoper
       5 = calculator
       6 = projectleider
       7 = contractmanager
       8 = werkvoorbereider
      11 = Datum uitdraai
      12 = aantal keren gewijzigd opgeslagen
      14 = Hoofdtrajectnummer
      15 = traject Omschrijving
      16 = Trajectnummer
      17 = traject Omschrijving
      18 = trajectofferte
      19 = calculaties met tellend ja/nee
      20 = Projectnr                                         // INSERT 2010-09-09
      21 = Besteknummer
      22 = relatienaam bedrijf
      23 = Eindklant relatienaam bedrijf soort end customer
      23 = kostenplaats 3001 leveranciernaam
      24 = Opdrachtgever                                     // Insert 2010-09-09
      25 = Onderaannemer
      26 = kostenplaats trajectofferte
      27 = Datum verstuurd
      28 = Geldigheidsdatum
      29 = Aanbestedingsdatum
      31 = Aanwijzingsdatum
      32 = Opdrachtdatum
      33 = Opdracht referentienummer
      34 = Factuurtekst termijnen
      35 = Begindatum
      36 = Einddatum
      37 = Planningsreservering
      38 = Termijnschema
      39 = Termijnen                                         // Insert 2010-09-09
      40 = Termijn 01                                        // Insert 2010-09-09
      41 = Termijn 02                                        // Insert 2010-09-09
      42 = Termijn 03                                        // Insert 2010-09-09
      43 = Termijn 04                                        // Insert 2010-09-09
      44 = Termijn 05                                        // Insert 2010-09-09
      45 = Termijn 06                                        // Insert 2010-09-09
      46 = Termijn 07                                        // Insert 2010-09-09
      47 = Termijn 08                                        // Insert 2010-09-09
      48 = Termijn 09                                        // Insert 2010-09-09
      49 = Termijn 10                                        // Insert 2010-09-09
      50 = Opleverdata gewenst door klant
      51 = Afgegeven opleverdata Peek

      53 = Aanbiedingsbedrag
      54 = Stelpost bedrag
      55 = Provisional sum
      56 = Maintenance period
      57 = Totaalbedrag deelcalculatie

      59 = Offer type
      60 = Role Peek
      61 = Type of work
      62 = Opsomming Unieke omschrijvingen + aantal
    }
    END.
  }
  RDLDATA
  {
  }
}

