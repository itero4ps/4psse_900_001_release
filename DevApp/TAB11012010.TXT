OBJECT Table 11012010 Project Element
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    Permissions=TableData 11072003=rm;
    DataCaptionFields=Project No.,Project Description;
    OnInsert=BEGIN
               TESTFIELD("Project No.");
               CheckElementFixed;
               IF ElementRec.GET(Element) THEN BEGIN
                 IF Description = '' THEN
                   Description := ElementRec.Description;
                 IF Quantity = 0 THEN
                   Quantity := ElementRec.Quantity;
                 IF "Unit of Measure" = '' THEN
                   "Unit of Measure" := ElementRec."Unit of Measure";
               END;

               ProjectSiteMgt.LogProjectElement(1, Rec);
             END;

    OnModify=VAR
               ProjectElement@1100528800 : Record 11012010;
             BEGIN
               CheckElementFixed;
               ProjRec.GET("Project No."); //kzwerver, 110105, n, #24495
               IF Level = 0 THEN BEGIN
                 IF "Starting Date" <> 0D THEN  //db, 24-02-15
                   ProjRec."Starting Date" := "Starting Date";
                 IF "Ending Date" <> 0D THEN  //db, 24-02-15
                   ProjRec."Ending Date" := "Ending Date";
                 ProjRec.MODIFY(TRUE);
               END;

               ProjectSiteMgt.LogProjectElement(2, Rec);

               IF ("Previous Element" <> '') AND ("Starting Date" <> 0D) THEN BEGIN
                 ProjectElement.GET("Project No.", "Previous Element");
                 IF "Starting Date" <= ProjectElement."Ending Date" THEN
                   ERROR(Text013, "Starting Date", Element, ProjectElement."Ending Date", "Previous Element");
               END;
             END;

    OnDelete=VAR
               BudgetQuantRec@11012000 : Record 11012002;
               ProgressLineRec@11012001 : Record 11012037;
               ProjectElement@1100525000 : Record 11012010;
               ProjectElement2@1100528800 : Record 11012010;
               ProjectElementText@1100528600 : Record 11229796;
               WorkOrder@1100528601 : Record 11229279;
             BEGIN
               IF NOT DeleteControlOnElement THEN //**4PS, SR C011299 17-01-14
                 CheckElementFixed;

               ProjectElement2.SETRANGE("Project No.", "Project No.");
               ProjectElement2.SETRANGE("Previous Element", Element);
               IF ProjectElement2.FINDSET THEN
                   REPEAT
                     ProjectElement2."Previous Element" := '';
                     ProjectElement2.MODIFY;
                   UNTIL ProjectElement2.NEXT = 0;

               ProjectElementText.SETRANGE("Project No.", "Project No.");
               ProjectElementText.SETRANGE(Element, Element);
               IF ProjectElementText.FINDFIRST THEN
                 ERROR(Text009);

               IF NOT DeleteControlOnElement THEN BEGIN
                 JobLedgerEntry.SETCURRENTKEY("Job No.",Element);
                 JobLedgerEntry.SETRANGE("Job No.","Project No.");
                 JobLedgerEntry.SETRANGE(Element,Element);
                 IF JobLedgerEntry.FINDFIRST THEN
                   //IF NOT CONFIRM(Text005,FALSE) THEN  //28835.o
                   //  ERROR(Text006);
                   ERROR(Text005, "Project No.", Element); //28835.n
               END;

               WorkOrder.SETCURRENTKEY("Source Company", "Source Type", "Source No.");
               WorkOrder.SETRANGE("Source Company", COMPANYNAME);
               WorkOrder.SETRANGE("Source Type", WorkOrder."Source Type"::Project);
               WorkOrder.SETRANGE("Source No.", "Project No.");
               WorkOrder.SETRANGE("Project Element", Element);
               IF NOT WorkOrder.ISEMPTY THEN
                 ERROR(STRSUBSTNO('%1 %2', Text006, Text010));

               IF CheckElementInBudget(Rec) THEN  //28239 n
                   ERROR(Text008, Element);       //28239 n

               BudgetQuantRec.SETRANGE("Project No.","Project No.");
               BudgetQuantRec.SETRANGE(Element,Element);
               BudgetQuantRec.DELETEALL(TRUE);

               ProgressLineRec.SETRANGE("Project No.","Project No.");
               ProgressLineRec.SETRANGE(Element,Element);
               ProgressLineRec.DELETEALL(TRUE);

               ProjectElement.SETRANGE("Project No.","Project No.");
               ProjectElement.SETRANGE(Level,Level + 1);
               IF Level >= 1 THEN
                 ProjectElement.SETRANGE(Chapter,Chapter);
               IF Level >= 2 THEN
                 ProjectElement.SETRANGE(Paragraph,Paragraph);

               IF NOT DeleteControlOnElement THEN//**4PS, SR C011299 17-01-14
                 ProjectElement.DELETEALL(TRUE);

               ProjectSiteMgt.LogProjectElement(3, Rec);
             END;

    OnRename=BEGIN
               ERROR(Text000);  //C007732
             END;

    CaptionML=ENU=Project Element;
    LookupPageID=Page11012029;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=ENU=Project No.;
                                                   NotBlank=Yes }
    { 11  ;   ;Project Description ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=ENU=Project Description;
                                                   Editable=No }
    { 20  ;   ;Element             ;Code20        ;TableRelation="Base Element".Code;
                                                   OnValidate=BEGIN
                                                                ElementFormat.CreateProjElem("Project No.",Element,Chapter,Paragraph,Level);
                                                                IF CurrFieldNo = FIELDNO(Element) THEN
                                                                  IF (xRec.Element <> '') AND (xRec.Element <> Element) THEN
                                                                    ERROR(Text000);  //db, 28-08-14: C017149
                                                                IF ElementRec.GET(Element) THEN BEGIN
                                                                  Description := ElementRec.Description;
                                                                  "Search Code" := ElementRec."Search Code";
                                                                  "Planning Activity Type" := ElementRec."Planning Activity Type";
                                                                  "Previous Element" := ElementRec."Previous Element";
                                                                  "Lead Time (Days)" := ElementRec."Lead Time (Days)";
                                                                  "Responsible Employee" := ElementRec."Responsible Employee";
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Element;
                                                   NotBlank=Yes }
    { 21  ;   ;Description         ;Text50        ;OnValidate=VAR
                                                                GeneratedProjectElement@1100528800 : Record 11072162;
                                                              BEGIN
                                                                IF ("Search Code" = UPPERCASE(xRec.Description)) OR ("Search Code" = '') THEN
                                                                  "Search Code" := Description;

                                                                IF Description <> xRec.Description THEN
                                                                  GeneratedProjectElement.SETRANGE("Project No.", "Project No.");
                                                                  GeneratedProjectElement.SETRANGE("Generated Element", Element);
                                                                  IF GeneratedProjectElement.FINDSET THEN BEGIN
                                                                    GeneratedProjectElement."Element Description" := Description;
                                                                    GeneratedProjectElement.MODIFY;
                                                                  END;
                                                              END;

                                                   CaptionML=ENU=Description }
    { 22  ;   ;Quantity            ;Decimal       ;OnValidate=VAR
                                                                GeneratedProjectElement@1100409000 : Record 11072162;
                                                              BEGIN
                                                                IF (Quantity <> xRec.Quantity) THEN BEGIN
                                                                  GeneratedProjectElement.SETRANGE("Project No.", "Project No.");
                                                                  GeneratedProjectElement.SETRANGE(Element, Element);
                                                                  IF GeneratedProjectElement.FINDFIRST THEN BEGIN
                                                                    GeneratedProjectElement.Quantity := Quantity;
                                                                    GeneratedProjectElement.MODIFY;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Quantity }
    { 23  ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure".Code;
                                                   CaptionML=ENU=Unit of Measure }
    { 24  ;   ;Description 2       ;Text50        ;OnValidate=VAR
                                                                GeneratedProjectElement@1100528800 : Record 11072162;
                                                              BEGIN
                                                                IF "Description 2" <> xRec."Description 2" THEN
                                                                  GeneratedProjectElement.SETRANGE("Project No.", "Project No.");
                                                                  GeneratedProjectElement.SETRANGE("Generated Element", Element);
                                                                  IF GeneratedProjectElement.FINDSET THEN BEGIN
                                                                    GeneratedProjectElement."Element Description 2" := "Description 2";
                                                                    GeneratedProjectElement.MODIFY;
                                                                  END;
                                                              END;

                                                   CaptionML=ENU=Description 2 }
    { 31  ;   ;Chapter             ;Code20        ;CaptionML=ENU=Chapter }
    { 32  ;   ;Paragraph           ;Code20        ;CaptionML=ENU=Paragraph }
    { 40  ;   ;Level               ;Integer       ;CaptionML=ENU=Level }
    { 45  ;   ;Standard Object     ;Code20        ;TableRelation="Standard Object".No.;
                                                   CaptionML=ENU=Standard Object }
    { 50  ;   ;Element Budget      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Element=FIELD(Element),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Element Budget;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 60  ;   ;Paragraph Budget    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Paragraph=FIELD(Paragraph),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Paragraph Budget;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 70  ;   ;Chapter Budget      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Chapter=FIELD(Chapter),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Chapter Budget;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 80  ;   ;Project Total       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Project Total;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 90  ;   ;Budget Hours (Order);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Hours WHERE (Project No.=FIELD(Project No.),
                                                                                              Element=FIELD(Element),
                                                                                              Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Budget Hours (Order);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 100 ;   ;Paragraph Hours     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Hours WHERE (Project No.=FIELD(Project No.),
                                                                                              Paragraph=FIELD(Paragraph),
                                                                                              Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Paragraph Hours;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 110 ;   ;Chapter Hours       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Hours WHERE (Project No.=FIELD(Project No.),
                                                                                              Chapter=FIELD(Chapter),
                                                                                              Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Chapter Hours;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 120 ;   ;Hours Total         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Hours WHERE (Project No.=FIELD(Project No.),
                                                                                              Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Hours Total;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 130 ;   ;Element Labor       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Element=FIELD(Element),
                                                                                               Cost Type=CONST(Labor),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Element Labor;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 140 ;   ;Paragraph Labor     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Paragraph=FIELD(Paragraph),
                                                                                               Cost Type=CONST(Labor),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Paragraph Labor;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 150 ;   ;Labor Chapter       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Chapter=FIELD(Chapter),
                                                                                               Cost Type=CONST(Labor),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Labor Chapter;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 160 ;   ;Labor Total         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Cost Type=CONST(Labor),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Labor Total;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 170 ;   ;Element Material    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Element=FIELD(Element),
                                                                                               Cost Type=CONST(Material),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Element Material;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 180 ;   ;Paragraph Material  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Paragraph=FIELD(Paragraph),
                                                                                               Cost Type=CONST(Material),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Paragraph Material;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 190 ;   ;Chapter Material    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Chapter=FIELD(Chapter),
                                                                                               Cost Type=CONST(Material),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Chapter Material;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 200 ;   ;Material Total      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Cost Type=CONST(Material),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Material Total;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 210 ;   ;Element Sub Contr.  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Element=FIELD(Element),
                                                                                               Cost Type=CONST(Subcontracting),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Element Sub Contr.;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 220 ;   ;Paragraph Sub Contr.;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Paragraph=FIELD(Paragraph),
                                                                                               Cost Type=CONST(Subcontracting),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Paragraph Sub Contr.;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 230 ;   ;Chapter Subcontr.   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Chapter=FIELD(Chapter),
                                                                                               Cost Type=CONST(Subcontracting),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Chapter Subcontr.;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 240 ;   ;Total Sub Contr.    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Cost Type=CONST(Subcontracting),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Total Sub Contr.;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 250 ;   ;Element Plant       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Element=FIELD(Element),
                                                                                               Cost Type=CONST(Plant),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Element Plant;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 260 ;   ;Pragraph Plant      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Paragraph=FIELD(Paragraph),
                                                                                               Cost Type=CONST(Plant),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Pragraph Plant;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 270 ;   ;Chapter Plant       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Chapter=FIELD(Chapter),
                                                                                               Cost Type=CONST(Plant),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Chapter Plant;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 280 ;   ;Total Plant         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Cost Type=CONST(Plant),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Total Plant;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 290 ;   ;Element Sundry      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Element=FIELD(Element),
                                                                                               Cost Type=CONST(Sundry),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Element Sundry;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 300 ;   ;Paragraph Sundry    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Paragraph=FIELD(Paragraph),
                                                                                               Cost Type=CONST(Sundry),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Paragraph Sundry;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 310 ;   ;Chapter Sundry      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Chapter=FIELD(Chapter),
                                                                                               Cost Type=CONST(Sundry),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Chapter Sundry;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 320 ;   ;Total Sundry        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Amount WHERE (Project No.=FIELD(Project No.),
                                                                                               Cost Type=CONST(Sundry),
                                                                                               Extension Contract Status=FILTER(Not Applicable|(>=Order&<Expired))));
                                                   CaptionML=ENU=Total Sundry;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 330 ;   ;Starting Date       ;Date          ;OnValidate=VAR
                                                                DaysShifted@1100528800 : Integer;
                                                                ShiftedForward@1100528801 : Boolean;
                                                              BEGIN
                                                                JobsSetup.GET;
                                                                IF JobsSetup."Project Element Plan Funct." THEN BEGIN

                                                                  SetProjectElementPlanBaseCalender;

                                                                  IF "Starting Date" < TODAY THEN
                                                                    ERROR(Text012, FIELDCAPTION("Starting Date"), "Starting Date");

                                                                  IF NOT IsWorkDay("Starting Date") THEN
                                                                    ERROR(Text014, FIELDCAPTION("Starting Date"), "Starting Date", ProjectElementPlanBaseCalender);

                                                                  IF CurrFieldNo = FIELDNO("Starting Date") THEN
                                                                    SourceField := SourceField::StartingDate;

                                                                  IF SourceField IN [SourceField::StartingDate, SourceField::ShiftBasedOnPreviousElement] THEN
                                                                    IF "Starting Date" <> xRec."Starting Date" THEN BEGIN
                                                                      DetermineDaysShifted(xRec."Starting Date", "Starting Date", DaysShifted, ShiftedForward);
                                                                      DetermineEndingDate(DaysShifted, ShiftedForward);
                                                                    END;
                                                                END;

                                                                IF ("Starting Date" > "Ending Date") AND ("Ending Date" <> 0D) THEN
                                                                  FIELDERROR("Starting Date",STRSUBSTNO(Text001,FIELDCAPTION("Ending Date")));

                                                                IF Level <> 0 THEN BEGIN
                                                                  ProjRec.GET("Project No.");
                                                                  IF ("Starting Date" <> 0D) AND
                                                                     ("Starting Date" < ProjRec."Starting Date") AND
                                                                     (ProjRec."Starting Date" <> 0D)
                                                                  THEN
                                                                    MESSAGE(Text003,ProjRec.FIELDCAPTION("Starting Date"),ProjRec."Starting Date");
                                                                END;
                                                                IF "Starting Time" = 0T THEN
                                                                  DetermineStartingTime;

                                                                UpdateDatesOnWorkOrders;

                                                                IF SourceField IN [SourceField::StartingDate] THEN
                                                                  SourceField := SourceField::" ";
                                                              END;

                                                   CaptionML=ENU=Starting Date }
    { 335 ;   ;Starting Time       ;Time          ;OnValidate=BEGIN
                                                                IF "Starting Time" <> 0T THEN BEGIN
                                                                  TESTFIELD("Starting Date");
                                                                  IF ("Starting Date" <> 0D) AND ("Starting Date" = "Ending Date") AND ("Starting Time" > "Ending Time") AND ("Ending Time" <> 0T) THEN
                                                                    FIELDERROR("Starting Time", STRSUBSTNO(Text001, FIELDCAPTION("Ending Time")));
                                                                END;
                                                                UpdateDatesOnWorkOrders;
                                                              END;

                                                   CaptionML=ENU=Starting Time }
    { 340 ;   ;Ending Date         ;Date          ;OnValidate=VAR
                                                                DaysShifted@1100528800 : Integer;
                                                                ShiftedForward@1100528801 : Boolean;
                                                              BEGIN
                                                                JobsSetup.GET;
                                                                IF JobsSetup."Project Element Plan Funct." THEN BEGIN

                                                                  SetProjectElementPlanBaseCalender;

                                                                  IF NOT IsWorkDay("Ending Date") THEN
                                                                    ERROR(Text014, FIELDCAPTION("Ending Date"), "Ending Date", ProjectElementPlanBaseCalender);

                                                                  IF CurrFieldNo = FIELDNO("Ending Date") THEN
                                                                    IF SourceField <> SourceField::ShiftBasedOnPreviousElement THEN
                                                                      SourceField := SourceField::EndingDate;

                                                                  IF SourceField IN [SourceField::EndingDate] THEN
                                                                    IF (xRec."Ending Date" <> 0D) AND ("Ending Date" <> xRec."Ending Date") THEN BEGIN
                                                                      DetermineDaysShifted(xRec."Ending Date", "Ending Date", DaysShifted, ShiftedForward);
                                                                      DetermineStartDate(DaysShifted, ShiftedForward);
                                                                    END;

                                                                  ShiftProjectElementsBasedOnPreviousElement;
                                                                END;

                                                                IF ("Starting Date" > "Ending Date") AND ("Ending Date" <> 0D) THEN
                                                                  FIELDERROR("Ending Date",STRSUBSTNO(Text002,FIELDCAPTION("Starting Date")));

                                                                IF Level <> 0 THEN BEGIN
                                                                  ProjRec.GET("Project No.");
                                                                  IF ("Ending Date" <> 0D) AND
                                                                    ("Ending Date" > ProjRec."Ending Date") AND
                                                                    (ProjRec."Ending Date" <> 0D)
                                                                  THEN
                                                                    MESSAGE(Text004,ProjRec.FIELDCAPTION("Ending Date"),ProjRec."Ending Date");
                                                                END;
                                                                IF "Ending Time" = 0T THEN
                                                                  DetermineEndingTime;
                                                                UpdateDatesOnWorkOrders;

                                                                IF SourceField = SourceField::EndingDate THEN
                                                                  SourceField := SourceField::" ";
                                                              END;

                                                   CaptionML=ENU=Ending Date }
    { 345 ;   ;Ending Time         ;Time          ;OnValidate=BEGIN
                                                                IF "Ending Time" <> 0T THEN BEGIN
                                                                  TESTFIELD("Ending Date");
                                                                  IF ("Starting Date" <> 0D) AND ("Starting Date" = "Ending Date") AND ("Starting Time" > "Ending Time") AND ("Starting Time" <> 0T) THEN
                                                                    FIELDERROR("Ending Time", STRSUBSTNO(Text002, FIELDCAPTION("Starting Time")));
                                                                END;
                                                                UpdateDatesOnWorkOrders;
                                                              END;

                                                   CaptionML=ENU=Ending Time }
    { 350 ;   ;Estimated Hours     ;Decimal       ;CaptionML=ENU=Estimated Hours }
    { 355 ;   ;Fixed Estimation    ;Boolean       ;CaptionML=ENU=Fixed Estimation }
    { 360 ;   ;Budget Hours        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Budget Line".Hours WHERE (Project No.=FIELD(Project No.),
                                                                                              Element=FIELD(Element)));
                                                   CaptionML=ENU=Budget Hours;
                                                   Editable=No }
    { 370 ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Date Filter;
                                                   Editable=No }
    { 390 ;   ;Project Status      ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job."Project Status" WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=ENU=Project Status;
                                                   OptionCaptionML=ENU=Estimation,Preparation,Production,Technical Finished,Administrative Finished,Finished,Archive,Archived;
                                                   OptionString=Estimation,Preparation,Production,Technical Finished,Administrative Finished,Finished,Archive,Archived;
                                                   Editable=No }
    { 400 ;   ;Blocked             ;Boolean       ;CaptionML=ENU=Blocked }
    { 410 ;   ;Search Code         ;Code50        ;FieldClass=Normal;
                                                   CaptionML=ENU=Search Code }
    { 420 ;   ;Element Type        ;Option        ;OnValidate=VAR
                                                                AssemblyYardNoObjElement@1210190000 : Record 11020649;
                                                              BEGIN
                                                                //kzwerver, 110525, n, #27630
                                                                IF (xRec."Element Type" <> "Element Type") THEN BEGIN
                                                                  AssemblyYardNoObjElement.SETCURRENTKEY("Project No.", "Yard No.", "Entity Type", "System No.",
                                                                    "Entity No.", Element, "Element Type");
                                                                  AssemblyYardNoObjElement.SETRANGE("Project No.", "Project No.");
                                                                  IF (AssemblyYardNoObjElement.FINDSET(TRUE, FALSE)) THEN BEGIN
                                                                    REPEAT
                                                                      IF (AssemblyYardNoObjElement.Element = Element) THEN
                                                                        AssemblyYardNoObjElement."Element Type" := "Element Type";
                                                                        AssemblyYardNoObjElement.MODIFY;
                                                                    UNTIL (AssemblyYardNoObjElement.NEXT = 0);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Element Type;
                                                   OptionCaptionML=ENU=General,Production,Installation;
                                                   OptionString=General,Production,Installation }
    { 430 ;   ;Planning Activity Type;Option      ;CaptionML=ENU=Planning Activity Type;
                                                   OptionCaptionML=ENU=Activity,Summary,Milestone;
                                                   OptionString=Activity,Summary,Milestone }
    { 440 ;   ;Company Filter      ;Text250       ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Company Filter }
    { 450 ;   ;No. of Work Orders  ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Work Order" WHERE (Source Company=FIELD(Company Filter),
                                                                                         Source Type=CONST(Project),
                                                                                         Source No.=FIELD(Project No.),
                                                                                         Project Element=FIELD(Element)));
                                                   CaptionML=ENU=No. of Work Orders;
                                                   Editable=No }
    { 460 ;   ;No. of Resources    ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Project Element Resource" WHERE (Project No.=FIELD(Project No.),
                                                                                                       Element=FIELD(Element)));
                                                   CaptionML=ENU=No. of Resources;
                                                   Editable=No }
    { 470 ;   ;Previous Element    ;Code20        ;TableRelation="Project Element".Element WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=VAR
                                                                ProjectElement@1100528800 : Record 11012010;
                                                              BEGIN
                                                                IF "Previous Element" = Element THEN
                                                                  ERROR(Text011);

                                                                IF (xRec."Previous Element" = '') AND (Rec."Starting Date" = 0D) THEN BEGIN
                                                                  SourceField := SourceField::ShiftBasedOnPreviousElement;
                                                                  IF ProjectElement.GET("Project No.", "Previous Element") THEN
                                                                    IF ProjectElement."Ending Date" <> 0D THEN
                                                                      VALIDATE("Starting Date", ShiftToWorkDay(ProjectElement."Ending Date"+1, TRUE));
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Previous Element }
    { 480 ;   ;Lead Time (Days)    ;Decimal       ;OnValidate=VAR
                                                                ShiftForward@1100528800 : Boolean;
                                                                DaysToShift@1100528801 : Integer;
                                                              BEGIN
                                                                IF CurrFieldNo = FIELDNO("Lead Time (Days)") THEN
                                                                  SourceField := SourceField::LeadTime;

                                                                IF ("Starting Date" = 0D) AND ("Ending Date" = 0D) THEN
                                                                  EXIT;

                                                                IF "Starting Date" = 0D THEN BEGIN
                                                                  "Starting Date" := CalcNewDate("Ending Date", "Lead Time (Days)", FALSE, CalcType::DetermineBasedOnLeadTime);
                                                                END ELSE BEGIN
                                                                  VALIDATE("Ending Date", CalcNewDate("Starting Date", "Lead Time (Days)", TRUE, CalcType::DetermineBasedOnLeadTime));
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Lead Time (Days);
                                                   MinValue=0 }
    { 490 ;   ;Responsible Employee;Code20        ;TableRelation=Employee.No.;
                                                   CaptionML=ENU=Responsible Employee }
    { 500 ;   ;Responsible Employee Name;Text100  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Full Name" WHERE (No.=FIELD(Responsible Employee)));
                                                   CaptionML=ENU=Responsible Employee Name }
    { 510 ;   ;Project City        ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.City WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=ENU=Project City;
                                                   Editable=No }
    { 520 ;   ;Publish in Empoly App;Boolean      ;CaptionML=ENU=Publish in Empoly App }
  }
  KEYS
  {
    {    ;Project No.,Element                     ;Clustered=Yes }
    {    ;Element,Project No.                      }
    {    ;Project No.,Chapter,Paragraph            }
    {    ;Starting Date                            }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100525000 : TextConst 'ENU=Rename not allowed.';
      Text001@11012004 : TextConst 'ENU=must occur before %1';
      Text002@11012005 : TextConst 'ENU=Must occur after %1';
      JobsSetup@1100528803 : Record 315;
      CompanyInformation@1100528812 : Record 79;
      ProjRec@1210190005 : Record 11072003;
      ElementRec@11012000 : Record 11012060;
      ServOrderRec@1210190006 : Record 11012823;
      ElementFormat@11012001 : Codeunit 11012022;
      Text003@1210190000 : TextConst 'ENU=Watch out, %1 lies before %1 of the Project ( %2 )';
      Text004@1210190001 : TextConst 'ENU=Watch out, %1 lies after %1 of the Project ( %2 )';
      JobLedgerEntry@1210190009 : Record 11072005;
      Text005@1210190010 : TextConst 'ENU=For this Element (%1-%2) there are already Project Ledger Entries present, delete not allowed';
      Text006@1210190011 : TextConst 'ENU=The Element is not removed.';
      Text007@1100485001 : TextConst 'ENU=%1 %2 %3 is %4.';
      Text008@1210190002 : TextConst 'ENU="The Element %1 is not removed.  There are Budgetlinesfor this Element "';
      ProjectSiteMgt@1100528300 : Codeunit 11012282;
      DeleteControlOnElement@1100525001 : Boolean;
      Text009@1100528600 : TextConst 'ENU=For this Element there are already Plan Project Element Text Lines present';
      Text010@1100528601 : TextConst 'ENU=There are already Work Orders present';
      Text011@1100528800 : TextConst 'ENU=Previous Element cannot refer to itself';
      CalendarManagement@1100528801 : Codeunit 7600;
      SourceField@1100528802 : ' ,StartingDate,EndingDate,LeadTime,ShiftBasedOnPreviousElement';
      InLoop@1100528804 : Boolean;
      Text012@1100528805 : TextConst 'ENU="%1 (%2) in the past not allowed. "';
      Text013@1100528806 : TextConst 'ENU=Starting Date (%1) of Project Element %2 cannot be equal or earlier then Ending Date (%3) from Previous Project Element %4';
      Text014@1100528807 : TextConst 'ENU=%1 %2 is a Non-working Day in Base Calendar %3.';
      CalcType@1100528808 : 'Shift,DetermineBasedOnLeadTime';
      Text015@1100528809 : TextConst 'ENU=Element %1 is used as Previous Element by %2 Element(s).';
      Text016@1100528810 : TextConst 'ENU=Element %1 not removed.';
      ProjectElementPlanBaseCalender@1100528811 : Code[10];
      Text017@1100528813 : TextConst 'ENU=Base Calendar empty. Set a Base Calendar in Jobs Setup or Company Information.';

    PROCEDURE CheckElementInBudget@1210190001(lProjectElementRec@1210190001 : Record 11012010) : Boolean;
    VAR
      lProjectElementRec2@1210190002 : Record 11012010;
      lBudgetRecFound@1210190000 : Boolean;
    BEGIN
      //28239 new
      ProjRec.GET("Project No.");

      IF CheckElementInBudgetLine(ProjRec, lProjectElementRec) THEN
        EXIT(TRUE);

      lBudgetRecFound := FALSE;
      IF lProjectElementRec.Level < 3 THEN BEGIN
        lProjectElementRec2.SETRANGE("Project No.", lProjectElementRec."Project No.");
        lProjectElementRec2.SETRANGE(Level, lProjectElementRec.Level + 1);
        IF lProjectElementRec.Level >= 1 THEN
          lProjectElementRec2.SETRANGE(Chapter, lProjectElementRec.Chapter);
        IF  lProjectElementRec.Level >= 2 THEN
          lProjectElementRec2.SETRANGE(Paragraph, lProjectElementRec.Paragraph);

        IF lProjectElementRec2.FINDSET THEN BEGIN
          REPEAT
            lBudgetRecFound := CheckElementInBudgetLine(ProjRec, lProjectElementRec2)
          UNTIL lBudgetRecFound OR (lProjectElementRec2.NEXT = 0);
        END;
      END;
      EXIT(lBudgetRecFound);
    END;

    PROCEDURE CheckElementInBudgetLine@1210190002(lProjRec@1210190001 : Record 11072003;lProjectElementRec@1210190000 : Record 11012010) : Boolean;
    VAR
      lBudgetRec@1210190002 : Record 11012001;
    BEGIN
      //28239 new
      IF lProjRec."Single/Main/Sub Project" = lProjRec."Single/Main/Sub Project"::"Main Project" THEN BEGIN
        lBudgetRec.SETCURRENTKEY("Main Project No.",Element,"Cost Object");
        lBudgetRec.SETRANGE("Main Project No.", lProjectElementRec."Project No.");
      END ELSE BEGIN
        lBudgetRec.SETCURRENTKEY("Project No.",Element,"Cost Object");
        lBudgetRec.SETRANGE("Project No.", lProjectElementRec."Project No.");
      END;
      lBudgetRec.SETRANGE(Element,lProjectElementRec.Element);
      IF lBudgetRec.FINDFIRST THEN
        EXIT(TRUE)
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE CheckProjectElementBlocked@8();
    BEGIN
      // call 6564
      IF Blocked THEN
        ERROR(Text007,TABLECAPTION, "Project No.", Element, FIELDCAPTION(Blocked));
    END;

    PROCEDURE CheckElementFixed@1100525000();
    BEGIN
      //db, 08-06-10: M18742
      IF ProjRec.GET("Project No.") THEN
        ProjRec.TESTFIELD("Element Fixed", FALSE);
    END;

    PROCEDURE UpdateSharepoint@1100528301();
    VAR
      Job@1100528301 : Record 11072003;
      DocumentPortalProject@1100528300 : Codeunit 11012948;
    BEGIN
      Job.GET("Project No.");
      DocumentPortalProject.AddAllProjectElements(Job);
    END;

    PROCEDURE SetDeleteControlOnElement@1100525001();
    BEGIN
      //**4PS, SR C011299 17-01-14
      DeleteControlOnElement := TRUE;
    END;

    PROCEDURE UpdateDatesOnWorkOrders@1100528600();
    VAR
      WorkOrder@1100528600 : Record 11229279;
      ProjectElementManagement@1100528601 : Codeunit 11012285;
    BEGIN
      IF NOT ProjectElementManagement.UseProjectElementPlanFunctionality THEN
        EXIT;
      WorkOrder.SETCURRENTKEY("Source Company", "Source Type", "Source No.");
      WorkOrder.SETRANGE("Source Company", COMPANYNAME);
      WorkOrder.SETRANGE("Source Type", WorkOrder."Source Type"::Project);
      WorkOrder.SETRANGE("Source No.", "Project No.");
      WorkOrder.SETRANGE("Project Element", Element);
      WorkOrder.MODIFYALL("Starting Date/Time", CREATEDATETIME("Starting Date", "Starting Time"), TRUE);
      WorkOrder.MODIFYALL("Ending Date/Time", CREATEDATETIME("Ending Date", "Ending Time"), TRUE);
    END;

    PROCEDURE DetermineStartingTime@1100528601();
    VAR
      ProjectElementManagement@1100528601 : Codeunit 11012285;
    BEGIN
      IF NOT ProjectElementManagement.UseProjectElementPlanFunctionality THEN
        EXIT;
      VALIDATE("Starting Time", ProjectElementManagement.GetStartWorkTime("Starting Date"));
    END;

    PROCEDURE DetermineEndingTime@1100528602();
    VAR
      ProjectElementManagement@1100528601 : Codeunit 11012285;
    BEGIN
      IF NOT ProjectElementManagement.UseProjectElementPlanFunctionality THEN
        EXIT;
      VALIDATE("Ending Time", ProjectElementManagement.GetEndWorkTime("Ending Date"));
    END;

    LOCAL PROCEDURE DetermineStartDate@1100528800(IShiftedDays@1100528805 : Integer;IShiftForward@1100528800 : Boolean);
    VAR
      JobsSetup@1100528804 : Record 315;
      Counter@1100528801 : Integer;
      TargetDate@1100528802 : Date;
      dummyDesc@1100528803 : Text[30];
    BEGIN
      IF ("Ending Date" = 0D) THEN
        EXIT;

      JobsSetup.GET;

      IF "Lead Time (Days)" <> 0 THEN BEGIN
        VALIDATE("Starting Date", CalcNewDate("Ending Date", "Lead Time (Days)", FALSE, CalcType::DetermineBasedOnLeadTime));
      END ELSE IF ("Ending Date" <> 0D )THEN BEGIN
        VALIDATE("Starting Date", CalcNewDate(xRec."Starting Date", IShiftedDays, IShiftForward, CalcType::Shift));
        DetermineLeadTime;
      END;
    END;

    LOCAL PROCEDURE DetermineEndingDate@1100528801(IShiftedDays@1100528804 : Integer;IShiftForward@1100528805 : Boolean);
    VAR
      JobsSetup@1100528803 : Record 315;
      Counter@1100528802 : Integer;
      TargetDate@1100528801 : Date;
      dummyDesc@1100528800 : Text[30];
      CalcDateDirection@1100528806 : Text[30];
    BEGIN
      IF "Starting Date" = 0D THEN
        EXIT;

      JobsSetup.GET;

      IF "Lead Time (Days)" <> 0 THEN BEGIN  //determine enddate based on starting date and lead time
        VALIDATE("Ending Date", CalcNewDate("Starting Date", "Lead Time (Days)", TRUE, CalcType::DetermineBasedOnLeadTime));
      END ELSE IF ("Ending Date" <> 0D )THEN BEGIN //if no lead time
        VALIDATE("Ending Date", CalcNewDate("Ending Date", IShiftedDays, IShiftForward, CalcType::DetermineBasedOnLeadTime));
        DetermineLeadTime; //determine leadtime based on starting date ending date
      END;
    END;

    LOCAL PROCEDURE DetermineLeadTime@1100528802();
    VAR
      JobsSetup@1100528803 : Record 315;
      Counter@1100528802 : Integer;
      TargetDate@1100528801 : Date;
      dummyDesc@1100528800 : Text[30];
    BEGIN
      IF ("Starting Date" = 0D) OR ("Ending Date" = 0D) THEN
        EXIT;

      SetProjectElementPlanBaseCalender;

      TargetDate := "Starting Date";

      REPEAT
        IF NOT CalendarManagement.CheckDateStatus(ProjectElementPlanBaseCalender, TargetDate, dummyDesc) THEN
          Counter += 1;
        IF NOT (TargetDate = "Ending Date") THEN
          TargetDate := CALCDATE('<+1D>', TargetDate);
      UNTIL TargetDate = "Ending Date";
      "Lead Time (Days)" := Counter;
    END;

    LOCAL PROCEDURE DetermineDaysShifted@1100528803(IOldDate@1100528800 : Date;INewDate@1100528801 : Date;VAR ShiftedDays@1100528807 : Integer;VAR ShiftedForward@1100528808 : Boolean);
    VAR
      JobsSetup@1100528802 : Record 315;
      TargetDate@1100528809 : Date;
      FirstDate@1100528803 : Date;
      SecondDate@1100528806 : Date;
      Counter@1100528804 : Integer;
      dummyDesc@1100528805 : Text[100];
      NoOfDays@1100528810 : Integer;
      NoOfFreeDays@1100528811 : Integer;
    BEGIN
      IF (IOldDate = 0D) OR (INewDate = 0D) THEN
        EXIT;

      ShiftedDays := 0;
      ShiftedForward := FALSE;
      Counter := 0;

      IF INewDate > IOldDate THEN BEGIN
        ShiftedForward := TRUE;
        FirstDate := IOldDate;
        SecondDate := INewDate;
      END ELSE BEGIN
        ShiftedForward := FALSE;
        FirstDate := INewDate;
        SecondDate := IOldDate;
      END;

      NoOfDays := CountNoOfDays(FirstDate, SecondDate);
      NoOfFreeDays := GetNoOfNonWorkingDays(FirstDate, SecondDate);

      ShiftedDays := NoOfDays - NoOfFreeDays;
    END;

    LOCAL PROCEDURE CalcNewDate@1100528810(IDate@1100528800 : Date;IDays@1100528801 : Integer;ICalcForward@1100528802 : Boolean;ICalcType@1100528804 : 'Shift,DetermineBasedOnLeadTime') : Date;
    VAR
      JobsSetup@1100528805 : Record 315;
      CalcDateDirection@1100528803 : Text[30];
      dummyDesc@1100528806 : Text[30];
      ShiftedDate@1100528807 : Date;
    BEGIN
      JobsSetup.GET;

      IF IDate = 0D THEN
        EXIT;

      IF IDays = 0 THEN
        EXIT(IDate);

      IF ICalcForward THEN
        CalcDateDirection := '<+1D>'
      ELSE
        CalcDateDirection := '<-1D>';

      ShiftedDate := IDate;

      CASE ICalcType OF

        ICalcType::Shift:
          BEGIN
            REPEAT
              IF IsWorkDay(ShiftedDate) THEN
                IDays -= 1;
              ShiftedDate := CALCDATE(CalcDateDirection, ShiftedDate);
            UNTIL IDays = 0 ;

          END;
        ICalcType::DetermineBasedOnLeadTime:
          BEGIN
            REPEAT
              IF IsWorkDay(ShiftedDate) THEN
                IDays -= 1;
              IF IDays <> 0 THEN
                ShiftedDate := CALCDATE(CalcDateDirection, ShiftedDate);
            UNTIL IDays = 0;
          END;
      END;

      EXIT(ShiftToWorkDay(ShiftedDate, ICalcForward));
    END;

    LOCAL PROCEDURE ShiftProjectElementsBasedOnPreviousElement@1100528809();
    VAR
      ProjectElement@1100528800 : Record 11012010;
      DaysShifted@1100528801 : Integer;
      ShiftedForward@1100528802 : Boolean;
      StartingDateToShift@1100528803 : Date;
    BEGIN
      SourceField := SourceField::ShiftBasedOnPreviousElement;

      DetermineDaysShifted(xRec."Ending Date", "Ending Date", DaysShifted, ShiftedForward);

      ProjectElement.SETRANGE("Project No.", "Project No.");
      ProjectElement.SETRANGE("Previous Element",Element);
      IF ProjectElement.FINDSET THEN BEGIN
        ProjectElement.SetSourceField := SourceField;
        REPEAT
          StartingDateToShift := SetInitialStartingDate(ProjectElement);
          ProjectElement.VALIDATE("Starting Date", CalcNewDate(StartingDateToShift, DaysShifted, ShiftedForward, CalcType::Shift));
          ProjectElement.MODIFY;
        UNTIL ProjectElement.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE SetInitialStartingDate@1100528811(ProjectElement@1100528800 : Record 11012010) : Date;
    VAR
      IDate@1100528801 : Date;
    BEGIN
      IF ProjectElement."Starting Date" = 0D THEN BEGIN
        IDate := CALCDATE('+1D', "Ending Date");
        REPEAT
          IF IsWorkDay(IDate) THEN
            EXIT(IDate)
          ELSE
            IDate := CALCDATE('+1D', IDate);
        UNTIL 1 = 0
      END ELSE
        EXIT(ProjectElement."Starting Date");
    END;

    PROCEDURE SetSourceField@1100528806(iSourceField@1100528800 : ' ,StartingDate,EndingDate,LeadTime,ShiftBasedOnPreviousElement');
    BEGIN
      SourceField := iSourceField;
    END;

    LOCAL PROCEDURE CountNoOfDays@1100528804(FromDate@1100528800 : Date;ToDate@1100528801 : Date) : Integer;
    BEGIN
      EXIT(ToDate - FromDate);
    END;

    LOCAL PROCEDURE GetNoOfNonWorkingDays@1100528805(FromDate@1100528800 : Date;ToDate@1100528801 : Date) : Integer;
    VAR
      JobsSetup@1100528802 : Record 315;
      dummyDesc@1100528803 : Text;
      Counter@1100528804 : Integer;
    BEGIN
      SetProjectElementPlanBaseCalender;

      WHILE FromDate <> ToDate DO BEGIN
        IF CalendarManagement.CheckDateStatus(ProjectElementPlanBaseCalender, FromDate, dummyDesc) THEN //true is free
          Counter += 1;
        FromDate := CALCDATE('<+1D>', FromDate);
      END;

      EXIT(Counter);
    END;

    LOCAL PROCEDURE IsWorkDay@1100528817(IDate@1100528800 : Date) : Boolean;
    VAR
      dummyDesc@1100528801 : Text;
    BEGIN
      SetProjectElementPlanBaseCalender;
      IF CalendarManagement.CheckDateStatus(ProjectElementPlanBaseCalender, IDate, dummyDesc) THEN
        EXIT(FALSE)
      ELSE
        EXIT(TRUE);
    END;

    LOCAL PROCEDURE ShiftToWorkDay@1100528812(IDate@1100528800 : Date;IShiftForward@1100528801 : Boolean) : Date;
    VAR
      CalcDirection@1100528802 : Text;
    BEGIN
      IF IShiftForward THEN
        CalcDirection := '<+1D>'
      ELSE
        CalcDirection := '<-1D>';

      REPEAT
        IF NOT IsWorkDay(IDate) THEN
          IDate := CALCDATE(CalcDirection, IDate);
      UNTIL IsWorkDay(IDate);

      EXIT(IDate);
    END;

    LOCAL PROCEDURE SetProjectElementPlanBaseCalender@1100528807();
    BEGIN
      JobsSetup.GET;
      CompanyInformation.GET;
      IF JobsSetup."Proj. Elem. Plan Base Calendar" <> '' THEN
        ProjectElementPlanBaseCalender := JobsSetup."Proj. Elem. Plan Base Calendar"
      ELSE
        ProjectElementPlanBaseCalender := CompanyInformation."Base Calendar Code";

      IF ProjectElementPlanBaseCalender = '' THEN
        ERROR(Text017);
    END;

    BEGIN
    {
      4PS,02-06-2010,HBK: M19437 OnDelete changed: Delete subelements
      .
    }
    END.
  }
}

