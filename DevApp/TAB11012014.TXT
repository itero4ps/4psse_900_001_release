OBJECT Table 11012014 Wage Component
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "Last Date Modified" := TODAY;

               ExchangeFSA('I');
               ExchangeMOB('I');
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;

               ExchangeFSA('M');
               ExchangeMOB('M');
             END;

    OnDelete=BEGIN
               ExchangeFSA('D');
               ExchangeMOB('D');
             END;

    OnRename=BEGIN
               "Last Date Modified" := TODAY;

               ExchangeFSA('R');
               ExchangeMOB('R');
             END;

    CaptionML=ENU=Wage Component;
    LookupPageID=Page11012041;
  }
  FIELDS
  {
    { 10  ;   ;Code                ;Code10        ;CaptionML=ENU=Code;
                                                   NotBlank=Yes }
    { 20  ;   ;Description         ;Text30        ;CaptionML=ENU=Description }
    { 30  ;   ;Component Type      ;Option        ;OnValidate=BEGIN
                                                                IF "Component Type" <> "Component Type"::Hours THEN
                                                                  Declare := FALSE;
                                                                IF "Component Type" <> "Component Type"::Expenses THEN
                                                                  "Kilometer Expense" := FALSE;
                                                              END;

                                                   CaptionML=ENU=Component Type;
                                                   OptionCaptionML=ENU=Hours,Days,Expenses,Expense hours;
                                                   OptionString=Hours,Days,Expenses,Expense hours }
    { 40  ;   ;Overtime            ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT Overtime THEN BEGIN
                                                                  "Overtime Surcharge %" := 0;
                                                                  "Sales Surcharge Overtime %" := 0;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Overtime }
    { 50  ;   ;Bal. Account No.    ;Code20        ;TableRelation="G/L Account".No.;
                                                   OnValidate=VAR
                                                                GLAcc@1210190000 : Record 15;
                                                              BEGIN
                                                                //db, 28-07-05
                                                                IF "Bal. Account No." <> '' THEN BEGIN
                                                                  GLAcc.GET("Bal. Account No.");
                                                                  IF GLAcc."Income/Balance" = GLAcc."Income/Balance"::"Balance Sheet" THEN
                                                                    MESSAGE(Text000,GLAcc.TABLECAPTION,GLAcc."Income/Balance");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Bal. Account No. }
    { 55  ;   ;Cov. Account No. Cost Plus;Code20  ;TableRelation="G/L Account";
                                                   CaptionML=ENU=Coverage Account No. Cost Plus Projects }
    { 60  ;   ;Overtime Surcharge %;Decimal       ;CaptionML=ENU=Overtime Surcharge %;
                                                   BlankZero=Yes }
    { 65  ;   ;Surcharge %         ;Decimal       ;CaptionML=ENU=Surcharge %;
                                                   BlankZero=Yes }
    { 70  ;   ;Declare             ;Boolean       ;CaptionML=ENU=Declare;
                                                   Description=Paymaster }
    { 71  ;   ;Frost Delay         ;Boolean       ;CaptionML=ENU=Frost Delay;
                                                   Description=Paymaster }
    { 72  ;   ;Age Limit Expense (55+);Boolean    ;CaptionML=ENU=Age Limit Expense (55+);
                                                   Description=Paymaster }
    { 80  ;   ;Type of Day         ;Option        ;CaptionML=ENU=Type of Day;
                                                   OptionCaptionML=ENU=" ,Worked,Vacation/Day Off,Absence";
                                                   OptionString=[ ,Worked,Vacation/Day Off,Absence] }
    { 90  ;   ;Day Component to Generate;Code10   ;TableRelation="Wage Component".Code WHERE (Component Type=CONST(Days));
                                                   CaptionML=ENU=Day Component to Generate }
    { 100 ;   ;Category            ;Code4         ;CaptionML=ENU=Category;
                                                   Description=Multipay ADP }
    { 101 ;   ;Category 2          ;Code4         ;CaptionML=ENU=Category 2;
                                                   Description=Multipay ADP }
    { 105 ;   ;Excel Column        ;Code2         ;OnValidate=VAR
                                                                LChar@1100485000 : Char;
                                                              BEGIN
                                                                IF STRLEN("Excel Column") > 0 THEN BEGIN
                                                                  EVALUATE(LChar,COPYSTR("Excel Column",1,1));
                                                                  IF (LChar < 'A') OR (LChar > 'Z') THEN
                                                                    ERROR(Text001);
                                                                END;
                                                                IF STRLEN("Excel Column") = 2 THEN BEGIN
                                                                  EVALUATE(LChar,COPYSTR("Excel Column",2,1));
                                                                  IF (LChar < 'A') OR (LChar > 'Z') THEN
                                                                    ERROR(Text001);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Excel Column;
                                                   Description=Raet }
    { 106 ;   ;Raet/Perman Code    ;Text10        ;CaptionML=ENU=Raet/Perman Code;
                                                   Description=Raet }
    { 107 ;   ;DBS Code            ;Text4         ;CaptionML=ENU=DBS Code;
                                                   Description=DBS }
    { 110 ;   ;Extra Day Component ;Code20        ;CaptionML=ENU=Extra Day Component;
                                                   Description=Mercash }
    { 120 ;   ;Export Quantity i.s.o. Amount;Boolean;
                                                   CaptionML=ENU=Export Quantity i.s.o. Amount;
                                                   Description=Mercash }
    { 130 ;   ;Leave Type          ;Code10        ;TableRelation="Leave Type";
                                                   CaptionML=ENU=Leave Type }
    { 140 ;   ;Leave Factor        ;Decimal       ;CaptionML=ENU=Leave Factor;
                                                   DecimalPlaces=2:3;
                                                   BlankZero=Yes }
    { 150 ;   ;Chargeable          ;Boolean       ;CaptionML=ENU=Chargeable }
    { 160 ;   ;Sales Surcharge Overtime %;Decimal ;OnValidate=BEGIN
                                                                IF (NOT Overtime) AND ("Sales Surcharge Overtime %" <> 0)  THEN
                                                                  ERROR(Text002);
                                                              END;

                                                   CaptionML=ENU=Sales Surcharge Overtime %;
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 165 ;   ;Sales Surcharge %   ;Decimal       ;CaptionML=ENU=Sales Surcharge %;
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 170 ;   ;Max. Amount to Post ;Decimal       ;CaptionML=ENU=Max. Amount to Post }
    { 171 ;   ;Wage Component to Post Rest;Code10 ;TableRelation="Wage Component";
                                                   CaptionML=ENU=Wage Component to Post Rest }
    { 180 ;   ;Export to AFAS      ;Boolean       ;CaptionML=ENU=Export to AFAS }
    { 190 ;   ;No Decimals in export to ADP;Boolean;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Component Type", "Component Type"::Expenses);
                                                              END;

                                                   CaptionML=ENU=No Decimals in export to ADP;
                                                   Description=Multipay ADP }
    { 200 ;   ;Last Date Modified  ;Date          ;CaptionML=ENU=Last Date Modified }
    { 500 ;   ;CAO Filter          ;Code250       ;OnLookup=VAR
                                                              SiteMngmntCAO@1100528301 : Page 11072221;
                                                            BEGIN
                                                              SiteMngmntCAO.LOOKUPMODE := TRUE;
                                                              SiteMngmntCAO.SetGetFilterString(TRUE);
                                                              IF (SiteMngmntCAO.RUNMODAL = ACTION::LookupOK) THEN BEGIN
                                                                "CAO Filter" := SiteMngmntCAO.GetFilterString;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=CAO Filter }
    { 11012990;;Export to FSA      ;Boolean       ;CaptionML=ENU=Export to Field Service;
                                                   Description=Indication new/changed. BDA= Buitendienstadmin. (Field Service Admin.), provisional this is only field Vision. }
    { 11012991;;Date/Time Export to FSA;DateTime  ;CaptionML=ENU=Date/Time Export to Field Service }
    { 11012995;;Kilometer Expense  ;Boolean       ;OnValidate=BEGIN
                                                                IF "Kilometer Expense" THEN
                                                                  TESTFIELD("Component Type", "Component Type"::Expenses);
                                                              END;

                                                   CaptionML=ENU=Kilometer Expense }
    { 11128230;;Maximum Number of Hours a Day;Decimal;
                                                   CaptionML=ENU=Maximum Number of Hours a Day;
                                                   Description=SESB.I033 }
    { 11128231;;Maximum Amount a Week;Decimal     ;CaptionML=ENU=Maximum Amount a Week;
                                                   Description=SESB.I033 }
    { 11128232;;Maximum Quantity a Week;Decimal   ;CaptionML=ENU=Maximum Quantity a Week;
                                                   Description=SESB.I033 }
    { 11128233;;Minimum Number of Hours a Day;Decimal;
                                                   CaptionML=ENU=Minimum Number of Hours a Day;
                                                   Description=SESB.I033 }
    { 11128234;;Minimum Amount a Week;Decimal     ;CaptionML=ENU=Minimum Amount a Week;
                                                   Description=SESB.I033 }
    { 11128235;;Minimum Quantity a Week;Decimal   ;CaptionML=ENU=Minimum Quantity a Week;
                                                   Description=SESB.I033 }
    { 11128240;;Last Updated Date/Time;DateTime    }
    { 11128241;;Expense Hour to Project;Boolean   ;CaptionML=ENU=Expense Hour to Project }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1210190003 : TextConst 'ENU=Warning: %1 is a %2 Account.';
      Text001@1100485000 : TextConst 'ENU=Only characters from A-Z allowed';
      Text002@1100485001 : TextConst 'ENU=This is not an Over Time Wage Component';

    PROCEDURE ExchangeFSA@1100485000(IMode@1100485003 : Code[1]);
    VAR
      lvProjSetupRec@1100485001 : Record 315;
      lvFieldVisionExchangeMgtCU@1100485000 : Codeunit 11012091;
    BEGIN
      //**4PS.n
      IF IMode = 'I' THEN BEGIN
        "Export to FSA" := FALSE;
        "Date/Time Export to FSA" := 0DT;
      END;
      lvProjSetupRec.GET;
      IF lvProjSetupRec."Field Service Active" THEN BEGIN
        IF IMode <> 'D' THEN BEGIN
          "Export to FSA" := TRUE;
          IF IMode = 'R' THEN
            lvFieldVisionExchangeMgtCU.StoreDeletedWageComponent(xRec);
        END ELSE BEGIN
          lvFieldVisionExchangeMgtCU.StoreDeletedWageComponent(Rec);
        END;
      END;
    END;

    LOCAL PROCEDURE ExchangeMOB@1100528703(Mode@1100528702 : Code[1]);
    VAR
      JobsSetup@1100528700 : Record 315;
      DeletedDataMgtMobile@1100528701 : Codeunit 11012440;
    BEGIN
      JobsSetup.GET;
      IF NOT JobsSetup."4PS-Mobile Active" THEN
        EXIT;

      IF (Mode = 'D') THEN
        DeletedDataMgtMobile.StoreDeletedWageComponent(Rec);

      IF (Mode = 'R') THEN
        DeletedDataMgtMobile.StoreDeletedWageComponent(xRec);
    END;

    PROCEDURE GetBudgetOverTimeFactor@1100528900(EstCode@1100528900 : Code[20];WageComp@1100528901 : Code[20]) OverTimeFactor : Decimal;
    VAR
      WageCompRec@1100528902 : Record 11012014;
      EstRec@1100528903 : Record 11012151;
    BEGIN
      //DP00236
      IF WageCompRec.GET(WageComp) THEN BEGIN
        OverTimeFactor := WageCompRec."Overtime Surcharge %";
        IF EstCode <> '' THEN BEGIN
          IF NOT EstRec.GET(EstCode) THEN EstRec.INIT;
          IF EstRec."Estimate Type"  = EstRec."Estimate Type"::Sales THEN
            OverTimeFactor := WageCompRec."Sales Surcharge Overtime %";
        END;
        OverTimeFactor := OverTimeFactor / 100;
      END;
      EXIT(OverTimeFactor);
    END;

    PROCEDURE GetOverTimeFactors@1100528901(WageComp@1100528901 : Code[20];VAR OverTimeFactorCost@1100528904 : Decimal;VAR OverTimeFactorSales@1100528905 : Decimal);
    VAR
      WageCompRec@1100528902 : Record 11012014;
      EstRec@1100528903 : Record 11012151;
    BEGIN
      //DP00381
      OverTimeFactorCost := 0;
      OverTimeFactorSales := 0;

      IF WageCompRec.GET(WageComp) THEN BEGIN
        OverTimeFactorCost := WageCompRec."Overtime Surcharge %" / 100;
        OverTimeFactorSales := WageCompRec."Sales Surcharge Overtime %" / 100;
      END;
    END;

    BEGIN
    {

      SESB.I033 Limitations on hours per day
         ASH 03.07.2013 Field 11128230 "Maximum number of hours a day" added
         ASH 03.07.2013 Field 11128231 "Maximum amount a week" added
         ASH 03.07.2013 Field 11128232 "Maximum quantity a week" added
         ASH 03.07.2013 Field 11128233 "Minimum number of hours a day" added
         ASH 03.07.2013 Field 11128234 "Minimum amount a week" added
         ASH 03.07.2013 Field 11128235 "Minimum quantity a week" added

      SESB.I038 New Wage Component type
         ASH 04.07.2013 Field 30 "Component Type" changed - option "Expense hours" added

      150219 ITERO.WG IM-REP-162 Added field Expense Hour to Project
    }
    END.
  }
}

