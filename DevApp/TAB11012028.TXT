OBJECT Table 11012028 Payment Agreement
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF GETFILTER("Sub Contractor") <> '' THEN
                 IF GETRANGEMIN("Sub Contractor") = GETRANGEMAX("Sub Contractor") THEN BEGIN
                   SubContr := GETRANGEMIN("Sub Contractor");
                   IF VendorRec.GET(SubContr) THEN BEGIN
                     GiveMessage := TRUE;  // 31123.n
                     VALIDATE("Sub Contractor", SubContr); //When called from Vendor Card Validation must be forced.
                   END;
                 END;

               InsertCentralManagement();
             END;

    OnModify=BEGIN
               CentrDataMgt.EditPaymentAgreement(Rec,2,Rec);
             END;

    OnDelete=BEGIN
               CentrDataMgt.EditPaymentAgreement(Rec,4,Rec);
             END;

    CaptionML=ENU=Payment Agreement;
    LookupPageID=Page11012059;
  }
  FIELDS
  {
    { 10  ;   ;Code                ;Code20        ;OnValidate=BEGIN
                                                                OldPaymentAgreement := xRec;
                                                                IF OldPaymentAgreement.FIND THEN
                                                                  CentrDataMgt.EditPaymentAgreement(Rec,3,xRec);
                                                              END;

                                                   CaptionML=ENU=Code;
                                                   NotBlank=Yes }
    { 11  ;   ;Date                ;Date          ;CaptionML=ENU=Date }
    { 20  ;   ;Description         ;Text30        ;CaptionML=ENU=Description }
    { 30  ;   ;Sub Contractor      ;Code20        ;TableRelation=Vendor.No. WHERE (Subcontractor=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                IF VendorRec.GET("Sub Contractor") THEN BEGIN
                                                                  VendorRec.CheckBlockedVendOnDocs(VendorRec,FALSE);
                                                                  IF VendorRec."Security Fund" THEN
                                                                    VALIDATE("Contribution Percentage Labor",0);

                                                                  IF GiveMessage THEN BEGIN // 31123.n
                                                                    WKACheck.RESET;
                                                                    WKACheck.SETRANGE(Mandatory, TRUE);
                                                                    WKACheck.SetWKAVendorFilters(VendorRec);
                                                                    IF WKACheck.FINDSET(FALSE, FALSE) THEN
                                                                      REPEAT
                                                                        IF NOT VendorWKACheck.GET(VendorRec."No.", WKACheck.Code) THEN
                                                                          MESSAGE(Text000, WKACheck.Description, VendorRec."No.")
                                                                        ELSE
                                                                          IF NOT VendorWKACheck.DataIsValid(TODAY) THEN
                                                                            MESSAGE(Text000, WKACheck.Description, VendorRec."No.")
                                                                      UNTIL WKACheck.NEXT = 0;

                                                                    VendorWKACheck.RESET;
                                                                    VendorWKACheck.SETRANGE("Vendor No.", VendorRec."No.");
                                                                    VendorWKACheck.SETRANGE(Mandatory, FALSE);
                                                                    VendorWKACheck.SETRANGE("Extra Obligation Vendor", TRUE);
                                                                    IF VendorWKACheck.FINDSET(FALSE, FALSE) THEN
                                                                      REPEAT
                                                                        IF NOT VendorWKACheck.DataIsValid(TODAY) THEN BEGIN
                                                                          VendorWKACheck.CALCFIELDS(Description);
                                                                          MESSAGE(Text000, VendorWKACheck.Description, VendorRec."No.");
                                                                        END;
                                                                      UNTIL VendorWKACheck.NEXT = 0;
                                                                  END;  // 31123.n
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Sub Contractor }
    { 40  ;   ;Expected Effective Date;Date       ;OnValidate=BEGIN
                                                                IF ("Expected Effective Date" > "Expected Enddate") AND ("Expected Enddate" <> 0D) THEN
                                                                  FIELDERROR("Expected Effective Date",STRSUBSTNO(Text007,FIELDCAPTION("Expected Enddate")));
                                                              END;

                                                   CaptionML=ENU=Expected Effective Date }
    { 50  ;   ;Expected Enddate    ;Date          ;OnValidate=BEGIN
                                                                IF ("Expected Effective Date" > "Expected Enddate") AND ("Expected Enddate" <> 0D) THEN
                                                                  FIELDERROR("Expected Enddate",STRSUBSTNO(Text008,FIELDCAPTION("Expected Effective Date")));
                                                              END;

                                                   CaptionML=ENU=Expected Enddate }
    { 60  ;   ;Number of Hours     ;Decimal       ;OnValidate=BEGIN
                                                                WKACalculationCu.CalculateWageCharge("Number of Hours","Avg. Wage Rate",'',"Labor Amount");
                                                                VALIDATE("Pay To Tax Authority");
                                                              END;

                                                   CaptionML=ENU=Number of Hours;
                                                   MinValue=0 }
    { 70  ;   ;Avg. Wage Rate      ;Decimal       ;OnValidate=BEGIN
                                                                WKACalculationCu.CalculateWageCharge("Number of Hours","Avg. Wage Rate",'',"Labor Amount");
                                                                VALIDATE("Pay To Tax Authority");
                                                              END;

                                                   CaptionML=ENU=Avg. Wage Rate;
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 80  ;   ;Labor Amount        ;Decimal       ;OnValidate=BEGIN
                                                                WKACalculationCu.CalculateRate("Number of Hours","Labor Amount","Avg. Wage Rate");
                                                                VALIDATE("Pay To Tax Authority");
                                                              END;

                                                   CaptionML=ENU=Labor Amount;
                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 90  ;   ;Contribution Percentage Labor;Decimal;
                                                   OnValidate=BEGIN
                                                                IF (xRec."Contribution Percentage Labor" = 0) AND ("Contribution Percentage Labor" <> 0) THEN
                                                                  "Contribution Percentage Total" := 0;
                                                                VALIDATE("Pay To Tax Authority");
                                                              END;

                                                   OnLookup=VAR
                                                              ContBusRel@11012002 : Record 5054;
                                                              ContIndustGroup@11012000 : Record 5058;
                                                            BEGIN
                                                              ContBusRel.SETCURRENTKEY("Link to Table","No.");
                                                              ContBusRel.SETRANGE("Link to Table",ContBusRel."Link to Table"::Vendor);
                                                              ContBusRel.SETRANGE("No.", "Sub Contractor");
                                                              IF NOT ContBusRel.FIND('-') THEN
                                                                ERROR(Text009,ContBusRel.TABLECAPTION,FIELDCAPTION("Sub Contractor"),"Sub Contractor");

                                                              ContIndustGroup.SETRANGE("Contact No.",ContBusRel."Contact No.");
                                                              IF PAGE.RUNMODAL(PAGE::"Contact Industry Groups",ContIndustGroup) = ACTION::LookupOK THEN BEGIN
                                                                "Contribution Percentage Labor" := ContIndustGroup."Contribution Percentage Labor";
                                                                "Contribution Percentage Total" := ContIndustGroup."Contribution Percentage Total";
                                                                 VALIDATE("Contribution Percentage Labor");
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Contribution Percentage Labor;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 91  ;   ;Contribution Percentage Total;Decimal;
                                                   OnValidate=BEGIN
                                                                IF (xRec."Contribution Percentage Total" = 0) AND ("Contribution Percentage Total" <> 0) THEN
                                                                  "Contribution Percentage Labor" := 0;
                                                                VALIDATE("Pay To Tax Authority");
                                                              END;

                                                   OnLookup=VAR
                                                              ContBusRel@11012002 : Record 5054;
                                                              ContIndustGroup@11012000 : Record 5058;
                                                            BEGIN
                                                              ContBusRel.SETCURRENTKEY("Link to Table","No.");
                                                              ContBusRel.SETRANGE("Link to Table",ContBusRel."Link to Table"::Vendor);
                                                              ContBusRel.SETRANGE("No.", "Sub Contractor");
                                                              IF NOT ContBusRel.FIND('-') THEN
                                                                ERROR(Text009,ContBusRel.TABLECAPTION,FIELDCAPTION("Sub Contractor"),"Sub Contractor");

                                                              ContIndustGroup.SETRANGE("Contact No.",ContBusRel."Contact No.");
                                                              IF PAGE.RUNMODAL(PAGE::"Contact Industry Groups",ContIndustGroup) = ACTION::LookupOK THEN BEGIN
                                                                "Contribution Percentage Total" := ContIndustGroup."Contribution Percentage Total";
                                                                "Contribution Percentage Labor" := ContIndustGroup."Contribution Percentage Labor";
                                                                 VALIDATE("Contribution Percentage Total");
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Contribution Percentage Total Invoice Amount;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 95  ;   ;Pay To Tax Authority;Boolean       ;OnValidate=BEGIN
                                                                WKACalculationCu.CalculateWageChart
                                                                  ("Sub Contractor","Labor Amount","Contribution Percentage Labor","Pay To Tax Authority",'',"Wage Charge (to B Account)",
                                                                  "Wage Charge (to Tax Authority)","Contribution Percentage Total", 0);
                                                              END;

                                                   CaptionML=ENU=Pay To Tax Authority }
    { 100 ;   ;Wage Charge (to B Account);Decimal ;OnValidate=BEGIN
                                                                WKACalculationCu.ValidateWageCharge(
                                                                  "Labor Amount",'',"Wage Charge (to B Account)",
                                                                  "Contribution Percentage Labor", "Contribution Percentage Total", 0);
                                                              END;

                                                   CaptionML=ENU=Wage Charge (to B Account);
                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 110 ;   ;Wage Charge (to Tax Authority);Decimal;
                                                   OnValidate=BEGIN
                                                                WKACalculationCu.ValidateWageTax(
                                                                  "Sub Contractor","Labor Amount",'',"Contribution Percentage Labor",
                                                                  "Wage Charge (to Tax Authority)", "Contribution Percentage Total", 0);
                                                              END;

                                                   CaptionML=ENU=Wage Charge (to Tax Authority);
                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 120 ;   ;Nat.Ins.Contr.      ;Decimal       ;CaptionML=ENU=Nat.Ins.Contr.;
                                                   MinValue=0;
                                                   Description=This field expires in update 005;
                                                   AutoFormatType=1 }
    { 130 ;   ;Safe Guarding       ;Option        ;CaptionML=ENU=Safe Guarding;
                                                   OptionCaptionML=ENU=Not Received,Applied,Received;
                                                   OptionString=Not Received,Applied,Received }
    { 140 ;   ;Chain Condition     ;Boolean       ;CaptionML=ENU=Chain Condition }
    { 150 ;   ;Memo                ;Text250       ;CaptionML=ENU=Memo }
    { 160 ;   ;Project No.         ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=ENU=Project No. }
    { 170 ;   ;Signed Return Date  ;Date          ;CaptionML=ENU=Signed Return Date }
    { 180 ;   ;Vendor Name         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Sub Contractor)));
                                                   CaptionML=ENU=Vendor Name;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Sub Contractor,Code                      }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@11012003 : TextConst 'ENU=Fill out %1 for Vendor %2';
      Text007@11012010 : TextConst 'ENU=must occur before %1';
      Text008@11012011 : TextConst 'ENU=Must occur after  %1';
      Text009@11012012 : TextConst 'ENU=No %1 known for %2 %3';
      VendorRec@11012000 : Record 23;
      WKACheck@1100485001 : Record 11020275;
      VendorWKACheck@1100485000 : Record 11020276;
      WKACalculationCu@11012001 : Codeunit 11012020;
      SubContr@11012002 : Code[20];
      CentrDataMgt@1100485002 : Codeunit 11012010;
      OldPaymentAgreement@1100485003 : Record 11012028;
      GiveMessage@1210190000 : Boolean;

    PROCEDURE InsertCentralManagement@30();
    BEGIN
      CentrDataMgt.EditPaymentAgreement(Rec,1,xRec);
    END;

    BEGIN
    END.
  }
}

