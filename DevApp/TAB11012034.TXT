OBJECT Table 11012034 Prognosis
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               lvProjRec@1100485000 : Record 11072003;
               lvPrognosisRec@1100525000 : Record 11012034;
             BEGIN
               lvProjRec.GET("Project No.");
               "Main Project No." := lvProjRec."Main Project";
               "Prognosis Level" := lvProjRec."Prognosis Level";
               "Department Code" := lvProjRec."Global Dimension 1 Code";  //**4PS.n DPA
               ProjSetup.GET;
               "Fix Prognosis Line" := ProjSetup."Fix Prognosis Line";
               FillCreated();
               GetModified; //call 28964

               //C017374.so
               //IF "Prognosis Level" <> "Prognosis Level"::Element THEN BEGIN

               //  lvPrognosisRec := Rec;
               //  lvPrognosisRec.SETRANGE("Project No.", "Project No.");
               //  lvPrognosisRec.SETFILTER("Prognosis Level",'<>%1', "Prognosis Level"::Element);
               //  IF lvPrognosisRec.NEXT(-1) <> 0 THEN BEGIN
               //    "Expected Finishing Date" := lvPrognosisRec."Expected Finishing Date";
               //    Comment := lvPrognosisRec.Comment;
               //    Text := lvPrognosisRec.Text;
               //  END;

               //  //Call 19910 sn
               //  lvPrognosisRec.RESET;
               //  lvPrognosisRec := Rec;
               //  lvPrognosisRec.SETRANGE("Project No.", "Project No.");
               //  lvPrognosisRec.SETFILTER("Prognosis Level",'<>%1', "Prognosis Level"::Element);
               //  IF lvPrognosisRec.NEXT(1) <> 0 THEN BEGIN
               //    PrognosisLineRec.RESET;
               //    PrognosisLineRec.SETRANGE("Project No.","Project No.");
               //    PrognosisLineRec.SETRANGE("Prognosis Date",lvPrognosisRec."Prognosis Date");
               //    IF PrognosisLineRec.FINDSET(TRUE,FALSE) THEN BEGIN
               //      REPEAT
               //        PrognosisLineRec.PrevPrognDateFilter := FORMAT("Prognosis Date");
               //        PrognosisLineRec.MODIFY;
               //      UNTIL PrognosisLineRec.NEXT = 0;
               //    END;
               //  END;
               //  //Call 19910 en
               //END ELSE BEGIN

               //  lvPrognosisRec := Rec;
               //  lvPrognosisRec.SETRANGE("Project No.", "Project No.");
               //  lvPrognosisRec.SETFILTER("Prognosis Level",'%1', "Prognosis Level"::Element);
               //  IF lvPrognosisRec.NEXT(-1) <> 0 THEN BEGIN
               //    "Expected Finishing Date" := lvPrognosisRec."Expected Finishing Date";
               //    Comment := lvPrognosisRec.Comment;
               //    Text := lvPrognosisRec.Text;
               //  END;

               //  lvPrognosisRec.RESET;
               //  lvPrognosisRec := Rec;
               //  lvPrognosisRec.SETRANGE("Project No.", "Project No.");
               //  lvPrognosisRec.SETFILTER("Prognosis Level",'%1', "Prognosis Level"::Element);
               //  IF lvPrognosisRec.NEXT(1) <> 0 THEN BEGIN
               //    PrognosisPerElement.RESET;
               //    PrognosisPerElement.SETRANGE("Project No.","Project No.");
               //    PrognosisPerElement.SETRANGE("Prognosis Date",lvPrognosisRec."Prognosis Date");
               //    IF PrognosisPerElement.FINDSET(TRUE,FALSE) THEN BEGIN
               //      REPEAT
               //        PrognosisPerElement.PrevPrognDateFilter := FORMAT("Prognosis Date");
               //        PrognosisPerElement.MODIFY;
               //      UNTIL PrognosisPerElement.NEXT = 0;
               //    END;
               //  END;

               //END;
               //C017374.eo

               //C017374.sn
               lvPrognosisRec := Rec;
               lvPrognosisRec.SETRANGE("Project No.", "Project No.");
               IF "Prognosis Level" <> "Prognosis Level"::Element THEN
                 lvPrognosisRec.SETFILTER("Prognosis Level",'<>%1',"Prognosis Level"::Element)
               ELSE
                 lvPrognosisRec.SETFILTER("Prognosis Level",'%1',"Prognosis Level"::Element);
               IF lvPrognosisRec.NEXT(-1) <> 0 THEN BEGIN
                 "Expected Finishing Date" := lvPrognosisRec."Expected Finishing Date";
                 Comment := lvPrognosisRec.Comment;
                 Text := lvPrognosisRec.Text;
               END;
               //C017374.en
             END;

    OnModify=BEGIN
               GetModified; //call 28964
             END;

    OnDelete=BEGIN
               DeleteLines; // jhoek.090611
               GET("Project No.","Prognosis Date");  //*25629 SQL problem: In delete progn.line the progn.header is updated

               //C017374.so
               //IF "Prognosis Level" <> "Prognosis Level"::Element THEN BEGIN

               //  //Call 19910 sn
               //  lvPrognosisRec := Rec;
               //  lvPrognosisRec.SETRANGE("Project No.", "Project No.");
               //  lvPrognosisRec.SETFILTER("Prognosis Level",'<>%1', "Prognosis Level"::Element);
               //  IF lvPrognosisRec.NEXT(-1) <> 0 THEN
               //    PrevDateFilter := FORMAT(lvPrognosisRec."Prognosis Date")
               //  ELSE
               //    PrevDateFilter := '<'+FORMAT("Prognosis Date");

               //  lvPrognosisRec.RESET;
               //  lvPrognosisRec := Rec;
               //  lvPrognosisRec.SETRANGE("Project No.", "Project No.");
               //  lvPrognosisRec.SETFILTER("Prognosis Level",'<>%1', "Prognosis Level"::Element);
               //  IF lvPrognosisRec.NEXT(1) <> 0 THEN BEGIN
               //    PrognosisLineRec.RESET;
               //    PrognosisLineRec.SETRANGE("Project No.","Project No.");
               //    PrognosisLineRec.SETRANGE("Prognosis Date",lvPrognosisRec."Prognosis Date");
               //    IF PrognosisLineRec.FINDSET(TRUE,FALSE) THEN BEGIN
               //      REPEAT
               //        PrognosisLineRec.PrevPrognDateFilter := PrevDateFilter;
               //        PrognosisLineRec.MODIFY;
               //      UNTIL PrognosisLineRec.NEXT = 0;
               //    END;
               //  END;
               //  //Call 19910 en

               //END ELSE BEGIN

               //  lvPrognosisRec := Rec;
               //  lvPrognosisRec.SETRANGE("Project No.", "Project No.");
               //  lvPrognosisRec.SETFILTER("Prognosis Level",'%1', "Prognosis Level"::Element);
               //  IF lvPrognosisRec.NEXT(-1) <> 0 THEN
               //    PrevDateFilter := FORMAT(lvPrognosisRec."Prognosis Date")
               //  ELSE
               //    PrevDateFilter := '<'+FORMAT("Prognosis Date");

               //  lvPrognosisRec.RESET;
               //  lvPrognosisRec := Rec;
               //  lvPrognosisRec.SETRANGE("Project No.", "Project No.");
               //  lvPrognosisRec.SETFILTER("Prognosis Level",'%1', "Prognosis Level"::Element);
               //  IF lvPrognosisRec.NEXT(1) <> 0 THEN BEGIN
               //    PrognosisPerElement.RESET;
               //    PrognosisPerElement.SETRANGE("Project No.","Project No.");
               //    PrognosisPerElement.SETRANGE("Prognosis Date",lvPrognosisRec."Prognosis Date");
               //    IF PrognosisPerElement.FINDSET(TRUE,FALSE) THEN BEGIN
               //      REPEAT
               //        PrognosisPerElement.PrevPrognDateFilter := PrevDateFilter;
               //        PrognosisPerElement.MODIFY;
               //      UNTIL PrognosisPerElement.NEXT = 0;
               //    END;
               //  END;

               //END;
               //C017374.eo
             END;

    OnRename=BEGIN
               ERROR(Text000, TABLECAPTION);
             END;

    CaptionML=ENU=Prognosis;
    LookupPageID=Page11012087;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   OnValidate=VAR
                                                                Proj@1100525000 : Record 11072003;
                                                              BEGIN
                                                                Proj.GET("Project No.");
                                                                "Prognosis Level" := Proj."Prognosis Level";
                                                              END;

                                                   CaptionML=ENU=Project No.;
                                                   NotBlank=Yes }
    { 20  ;   ;Prognosis Date      ;Date          ;CaptionML=ENU=Prognosis Date;
                                                   NotBlank=Yes }
    { 30  ;   ;Comment             ;Text50        ;CaptionML=ENU=Comment }
    { 40  ;   ;Project Description ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=ENU=Project Description;
                                                   Editable=No }
    { 50  ;   ;Text                ;Text250       ;CaptionML=ENU=Text }
    { 60  ;   ;Rough Prognosis End Result;Decimal ;CaptionML=ENU=Rough Prognosis End Result;
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 70  ;   ;Main Project No.    ;Code20        ;CaptionML=ENU=Main Project No.;
                                                   Editable=No }
    { 75  ;   ;Department Code     ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Department Code;
                                                   Editable=No }
    { 80  ;   ;Rough Prognosis Total Cost;Decimal ;CaptionML=ENU=Rough Prognosis Total Cost;
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 90  ;   ;Rough Prognosis Total Revenues;Decimal;
                                                   CaptionML=ENU=Rough Prognosis Total Revenues;
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 100 ;   ;Contract Amount Project;Decimal    ;CaptionML=ENU=Contract Amount Project;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 110 ;   ;Contract Amount Extensions;Decimal ;CaptionML=ENU=Contract Amount Extensions;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 115 ;   ;Contract Amount Options;Decimal    ;CaptionML=ENU=Contract Amount Options;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 120 ;   ;Contract Amount Invoiced;Decimal   ;CaptionML=ENU=Contract Amount Invoiced;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 130 ;   ;Extension Amount Invoiced;Decimal  ;CaptionML=ENU=Extension Amount Invoiced;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 135 ;   ;Option Amount Invoiced;Decimal     ;CaptionML=ENU=Option Amount Invoiced;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 140 ;   ;Cost Plus Invoiced  ;Decimal       ;CaptionML=ENU=Cost Plus Invoiced;
                                                   BlankZero=Yes;
                                                   Description=calculation: see requisition run;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 145 ;   ;Project Invoiced    ;Decimal       ;CaptionML=ENU=Project Invoiced;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 150 ;   ;Contract Amount to Invoice;Decimal ;CaptionML=ENU=Contract Amount to Invoice;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 160 ;   ;Extension Amount to Invoice;Decimal;CaptionML=ENU=Extension Amount to Invoice;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 165 ;   ;Option Amount to Invoice;Decimal   ;CaptionML=ENU=Option Amount to Invoice;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 170 ;   ;Cost Plus to Invoice;Decimal       ;CaptionML=ENU=Cost Plust to Invoice;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 180 ;   ;Quotation Amount Extensions;Decimal;CaptionML=ENU=Quotation Amount Extensions;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 190 ;   ;To Invoice incl offered ext.;Decimal;
                                                   CaptionML=ENU=To Invoice incl offered extensions;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 200 ;   ;Prognosis Revenue   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prognosis Line"."Amount Revenue" WHERE (Project No.=FIELD(Project No.),
                                                                                                            Prognosis Date=FIELD(Prognosis Date),
                                                                                                            Cost Type=FILTER(Revenue)));
                                                   CaptionML=ENU=Prognosis Revenue;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 210 ;   ;Expected Finishing Date;Date       ;CaptionML=ENU=Expected Finishing Date }
    { 230 ;   ;Prognosis Total Cost;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prognosis Line"."Prognosis Total Cost" WHERE (Project No.=FIELD(Project No.),
                                                                                                                  Prognosis Date=FIELD(Prognosis Date)));
                                                   CaptionML=ENU=Prognosis Total Cost;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 235 ;   ;Prognosis Total Cost Element;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Prognosis per Element"."Prognosis Total Cost" WHERE (Project No.=FIELD(Project No.),
                                                                                                                         Prognosis Date=FIELD(Prognosis Date)));
                                                   CaptionML=ENU=Prognosis Total Cost Elements;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 240 ;   ;Prognosis Level     ;Option        ;OnValidate=VAR
                                                                Proj@1100525002 : Record 11072003;
                                                                PrognosisLine@1100525000 : Record 11012035;
                                                                PrognosisLineElement@1100525001 : Record 11071893;
                                                              BEGIN
                                                                IF "Project No." <> '' THEN BEGIN
                                                                  Proj.GET("Project No.");
                                                                  IF Proj."Prognosis Level" = Proj."Prognosis Level"::Element THEN BEGIN
                                                                    IF "Prognosis Level" <> "Prognosis Level"::Element THEN
                                                                      FIELDERROR("Prognosis Level", STRSUBSTNO(Text002, "Prognosis Level", "Prognosis Level"::Element, Proj."Prognosis Level"));
                                                                  END ELSE BEGIN
                                                                    IF "Prognosis Level" = "Prognosis Level"::Element THEN
                                                                      FIELDERROR("Prognosis Level",
                                                                        STRSUBSTNO(Text002, "Prognosis Level", STRSUBSTNO('%1/%2', "Prognosis Level"::Detailed,"Prognosis Level"::Rough), Proj."Prognosis Level"));
                                                                  END;
                                                                END;
                                                                IF "Prognosis Level" <> "Prognosis Level"::Detailed THEN BEGIN
                                                                  PrognosisLine.SETRANGE("Project No.", "Project No.");
                                                                  PrognosisLine.SETRANGE("Prognosis Date", "Prognosis Date");
                                                                  IF NOT PrognosisLine.ISEMPTY THEN
                                                                    FIELDERROR("Prognosis Level", STRSUBSTNO(Text001, "Prognosis Level", PrognosisLine.COUNT, PrognosisLine.FIELDCAPTION("Cost Type")));
                                                                END;
                                                                IF "Prognosis Level" <> "Prognosis Level"::Element THEN BEGIN
                                                                  PrognosisLineElement.SETRANGE("Project No.", "Project No.");
                                                                  PrognosisLineElement.SETRANGE("Prognosis Date", "Prognosis Date");
                                                                  IF NOT PrognosisLineElement.ISEMPTY THEN
                                                                    FIELDERROR("Prognosis Level", STRSUBSTNO(Text001, "Prognosis Level", PrognosisLineElement.COUNT, PrognosisLineElement.FIELDCAPTION(Element)));
                                                                END;
                                                                IF "Prognosis Level" <> "Prognosis Level"::Rough THEN BEGIN
                                                                  "Rough Prognosis End Result" := 0;
                                                                  "Rough Prognosis Total Cost" := 0;
                                                                  "Rough Prognosis Total Revenues" := 0;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Prognosis Level;
                                                   OptionCaptionML=ENU=Detailed,Element,Rough;
                                                   OptionString=Detailed,Element,Rough }
    { 250 ;   ;Ovh. Surcharges Calculated;Boolean ;CaptionML=ENU=Ovh. Surcharges Calculated;
                                                   Editable=No }
    { 251 ;   ;Altered After Calculation;Boolean  ;CaptionML=ENU=Prognose Altered After Calculation Overhead Surcharge;
                                                   Editable=No }
    { 260 ;   ;Best Case Cost Forecast;Decimal    ;CaptionML=ENU=Best Case Cost Forecast;
                                                   MaxValue=0;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 270 ;   ;Worst Case Cost Forecast;Decimal   ;CaptionML=ENU=Worst Case Cost Forecast;
                                                   MinValue=0;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 280 ;   ;Best Case Revenue Forecast;Decimal ;CaptionML=ENU=Best Case Revenue Forecast;
                                                   MaxValue=0;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 290 ;   ;Worst Case Revenue Forecast;Decimal;CaptionML=ENU=Worst Case Revenue Forecast;
                                                   MinValue=0;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 490 ;   ;Used in Closing Project;Boolean    ;CaptionML=ENU=Used in Closing Project }
    { 500 ;   ;Comments            ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Prognosis Comment Line" WHERE (Project No.=FIELD(Project No.),
                                                                                                     Prognosis Date=FIELD(Prognosis Date)));
                                                   CaptionML=ENU=Comments;
                                                   Editable=No }
    { 510 ;   ;Fixed               ;Boolean       ;CaptionML=ENU=Fixed }
    { 520 ;   ;Fix Prognosis Line  ;Boolean       ;OnValidate=VAR
                                                                PrognLineRec@1100530000 : Record 11012035;
                                                              BEGIN
                                                                //db, 13-01-11
                                                                PrognLineRec.SETRANGE("Project No.", "Project No.");
                                                                PrognLineRec.SETRANGE("Prognosis Date", "Prognosis Date");
                                                                PrognLineRec.MODIFYALL("Fix Prognosis Line", "Fix Prognosis Line");
                                                              END;

                                                   CaptionML=ENU=Fix Prognosis Line }
    { 525 ;   ;Created by          ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Created by;
                                                   Editable=No }
    { 526 ;   ;Created on          ;Date          ;CaptionML=ENU=Creatated on;
                                                   Editable=No }
    { 530 ;   ;Modified by         ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Modified by;
                                                   Editable=No }
    { 540 ;   ;Last Date Modified  ;Date          ;CaptionML=ENU=Modified on;
                                                   Editable=No }
    { 550 ;   ;Project Manager     ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job."Project Manager" WHERE (No.=FIELD(Project No.)));
                                                   TableRelation=Employee;
                                                   CaptionML=ENU=Project Manager;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Project No.,Prognosis Date              ;Clustered=Yes }
    {    ;Main Project No.,Prognosis Date         ;SumIndexFields=Rough Prognosis Total Cost,Rough Prognosis Total Revenues,Project Invoiced }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@11012001 : TextConst 'ENU=Renaming %1 not possible.';
      ProjSetup@1100525000 : Record 315;
      PrognosisPerElement@1100528800 : Record 11071893;
      DPA_Management@1100000999 : Codeunit 11012783;
      DeleteCompleteProject@1100525001 : Boolean;
      Text001@1100525002 : TextConst 'ENU=''%1'' not allowed, already %2 prognosis (per %3) lines present';
      Text002@1100525003 : TextConst 'ENU=''%1'' not allowed, only ''%2'' allowed this is ''%3 '' on project';

    PROCEDURE CopyPreviousComments@1100525000();
    VAR
      PrevPrognosis@1100525000 : Record 11012034;
      PrognosisCommentLine@1100525002 : Record 11020560;
      PrevPrognosisCommentLine@1100525001 : Record 11020560;
      LineNo@1100525003 : Integer;
    BEGIN
      PrevPrognosis.SETRANGE("Project No.", "Project No.");
      PrevPrognosis.SETFILTER("Prognosis Date", '<%1', "Prognosis Date");

      IF PrevPrognosis.FINDLAST THEN BEGIN
        PrevPrognosisCommentLine.SETRANGE("Project No.", PrevPrognosis."Project No.");
        PrevPrognosisCommentLine.SETRANGE("Prognosis Date", PrevPrognosis."Prognosis Date");

        IF PrevPrognosisCommentLine.FINDSET THEN BEGIN
          PrognosisCommentLine.SETRANGE("Project No.", "Project No.");
          PrognosisCommentLine.SETRANGE("Prognosis Date", "Prognosis Date");
          IF NOT PrognosisCommentLine.FINDLAST THEN;
          LineNo := PrognosisCommentLine."Line No." + 10000;

          REPEAT
            PrognosisCommentLine := PrevPrognosisCommentLine;
            PrognosisCommentLine."Project No." := "Project No.";
            PrognosisCommentLine."Prognosis Date" := "Prognosis Date";
            PrognosisCommentLine."Line No." := LineNo;
            PrognosisCommentLine.INSERT;

            LineNo := LineNo + 10000;
          UNTIL PrevPrognosisCommentLine.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11012034) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11012034');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::Prognosis, "Department Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Department Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Department Code");
    END;

    PROCEDURE UpdateLogBook@1100525001(IProjectNo@1100525000 : Code[20];IPrognosisDate@1100525001 : Date);
    VAR
      Prognosis@1100525002 : Record 11012034;
    BEGIN
      //mg, 10-12-10: M24403
      IF Prognosis.GET(IProjectNo, IPrognosisDate) THEN
        IF (Prognosis."Last Date Modified" <> TODAY) OR (Prognosis."Modified by" <> UPPERCASE(USERID)) THEN BEGIN
          Prognosis.GetModified; //call 28964
          Prognosis.MODIFY;
        END;
    END;

    PROCEDURE DeleteLines@1210190000();
    VAR
      PrognosisLine@1210190000 : Record 11012035;
      PrognosisPerElement@1100528800 : Record 11071893;
    BEGIN
      IF "Prognosis Level" = "Prognosis Level"::Element THEN BEGIN
        PrognosisPerElement.RESET;
        PrognosisPerElement.SETRANGE("Project No.","Project No.");
        PrognosisPerElement.SETRANGE("Prognosis Date","Prognosis Date");
        IF DeleteCompleteProject THEN BEGIN//**4PS,sn SR C011681 17-01-14
          IF PrognosisPerElement.FINDSET (TRUE,FALSE) THEN BEGIN
            REPEAT
              PrognosisPerElement.SetDeletControlOnProgPerElem();
              PrognosisPerElement.DELETE(TRUE);
            UNTIL PrognosisPerElement.NEXT = 0;
          END;
        END ELSE
          PrognosisPerElement.DELETEALL(TRUE);//**4PS,en SR C011681 17-01-14
      END ELSE BEGIN
        PrognosisLine.RESET;
        PrognosisLine.SETRANGE("Project No.","Project No.");
        PrognosisLine.SETRANGE("Prognosis Date","Prognosis Date");
        IF DeleteCompleteProject THEN BEGIN//**4PS,sn SR C011681 17-01-14
          IF PrognosisLine.FINDSET (TRUE,FALSE) THEN BEGIN
            REPEAT
              PrognosisLine.SetDeleteControlOnProg();
              PrognosisLine.DELETE(TRUE);
            UNTIL PrognosisLine.NEXT = 0;
          END;
        END ELSE
          PrognosisLine.DELETEALL(TRUE);//**4PS,en SR C011681 17-01-14
      END;
    END;

    PROCEDURE FillCreated@1100525004();
    BEGIN
      "Created by" := USERID;
      "Created on" := TODAY;
    END;

    PROCEDURE GetModified@1210190001();
    BEGIN
      //call 28964
      "Last Date Modified" := TODAY;
      "Modified by" := USERID;
    END;

    PROCEDURE SetDeleteCompleteProject@1100525002();
    BEGIN
      //**4PS, SR  C011681 17-01-14
      DeleteCompleteProject := TRUE;
    END;

    PROCEDURE NameProjectManager@1100525003() : Text;
    VAR
      Empl@1100525000 : Record 5200;
    BEGIN
      CALCFIELDS("Project Manager");
      IF Empl.GET("Project Manager") THEN
        EXIT(Empl."Full Name");
    END;

    BEGIN
    END.
  }
}

