OBJECT Table 11012035 Prognosis Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    Permissions=TableData 11072003=rm;
    DataCaptionFields=Project No.,Prognosis Date;
    OnInsert=BEGIN
               //>> 151022 ITERO.SB RFC-010
               IF PrognosisRec.GET("Project No.", "Prognosis Date") THEN
                 PrognosisRec.CheckProjectPreclosure();
               //<<

               ProjRec.GET("Project No.");
               "Main Project No." := ProjRec."Main Project";
               UpdateCostControlStatus(UpdateAction::Insert);

               //DP00042.sn
               CASE "Cost Type" OF
                 "Cost Type"::Labor: UpdatePrognosisSpecification(0, Quantity, Rate, Rate);
               ELSE
                 UpdatePrognosisSpecification(0, Quantity, Price, Price);
               END;
               //DP00042.en
             END;

    OnModify=BEGIN
               //** Call C010346.sn
               IF PrognosisRec.GET("Project No.", "Prognosis Date") THEN
                 PrognosisRec.TESTFIELD(Fixed,FALSE);

               //>> 151022 ITERO.SB RFC-010
               IF PrognosisRec.GET("Project No.", "Prognosis Date") THEN
                 PrognosisRec.CheckProjectPreclosure();
               //<<

               //** Call C010346.en
               UpdateCostControlStatus(UpdateAction::Modify);
               PrognosisRec.UpdateLogBook("Project No.", "Prognosis Date"); //mg, 10-12-10: M24403

               //DP00042.sn
               CASE "Cost Type" OF
                 "Cost Type"::Labor: UpdatePrognosisSpecification(xRec.Quantity, Quantity, xRec.Rate, Rate);
               ELSE
                 UpdatePrognosisSpecification(xRec.Quantity, Quantity, xRec.Price, Price);
               END;
               //DP00042.en
             END;

    OnDelete=VAR
               PrognosisLineSpec@1210190000 : Record 11020687;
             BEGIN
               //db.sn, 04-01-11: M24105
               IF NOT DeleteControlOnProg THEN BEGIN  //**4PS, SR C011681 17-01-14
                 IF PrognosisRec.GET("Project No.", "Prognosis Date") THEN
                   PrognosisRec.TESTFIELD(Fixed,FALSE);
                 //>> 151022 ITERO.SB RFC-010
                 PrognosisRec.CheckProjectPreclosure();
                 //<<
                 UpdateCostControlStatus(UpdateAction::Delete);//**4PS, SR C013794 10-03-14
                 PrognosisRec.UpdateLogBook("Project No.", "Prognosis Date"); //mg, 10-12-10: M24403
               END;
               //IF PrognosisRec.Fixed THEN
               //  ERROR(Text000);
               //db.en, 04-01-11: M24105
               //DP00042.sn  (Note: Also delete if project setup "Prognosis Specifications" is 'No', if present then delete)
               PrognosisLineSpec.SETRANGE("Project No.", "Project No.");
               PrognosisLineSpec.SETRANGE("Prognosis Date", "Prognosis Date");
               IF Element = '' THEN  //db, 15-11-11
                 PrognosisLineSpec.SETFILTER(Element, '%1', '')
               ELSE
                 PrognosisLineSpec.SETRANGE(Element, Element);
               PrognosisLineSpec.SETRANGE("Cost Type", "Cost Type");
               PrognosisLineSpec.SETRANGE("Cost Object", "Cost Object");
               PrognosisLineSpec.DELETEALL;
               //DP00042.en
             END;

    CaptionML=ENU=Prognosis Line;
    DrillDownPageID=Page11012088;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=ENU=Project No. }
    { 20  ;   ;Prognosis Date      ;Date          ;OnValidate=BEGIN
                                                                //C017374.so
                                                                //PrevPrognDateFilter := '<'+FORMAT("Prognosis Date");
                                                                ////**Call 19910 Exact filter for previous prognosis wanted.
                                                                //IF lPrognosisRec.GET("Project No.", "Prognosis Date") THEN BEGIN
                                                                //  lPrognosisRec.RESET;
                                                                //  lPrognosisRec.SETRANGE("Project No.", "Project No.");
                                                                //  lPrognosisRec.SETFILTER("Prognosis Date", '<%1', "Prognosis Date");
                                                                //  IF lPrognosisRec.FINDLAST THEN BEGIN
                                                                //    PrevPrognDateFilter := FORMAT(lPrognosisRec."Prognosis Date");
                                                                //  END;
                                                                //END;
                                                                //C017374.eo
                                                              END;

                                                   CaptionML=ENU=Prognosis Date }
    { 30  ;   ;Cost Type           ;Option        ;CaptionML=ENU=Cost Type;
                                                   OptionCaptionML=ENU=Labor,Material,Subcontracting,Plant,Sundry,Revenue;
                                                   OptionString=Labor,Material,Subcontracting,Plant,Sundry,Revenue;
                                                   Editable=No }
    { 40  ;   ;Cost Object         ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                               Project Filter=FIELD(Project No.),
                                                                                               Cost Type=FIELD(Cost Type));
                                                   OnValidate=BEGIN
                                                                IF ("Cost Object" <> '') AND ("Cost Object" <> xRec."Cost Object") THEN BEGIN
                                                                  DimMgt.GetDimValueRec(2, "Cost Object", DimValRec, TRUE, '');
                                                                  "Cost Type" := DimValRec."Cost Type";
                                                                  VALIDATE("Unit of Measure", DimValRec."Unit of Measure");
                                                                  VALIDATE("Cost Component", DimValRec."Cost Component");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Cost Object }
    { 41  ;   ;Cost Object Description;Text50     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Dimension Value".Name WHERE (Code=FIELD(Cost Object),
                                                                                                    Global Dimension No.=CONST(2)));
                                                   CaptionML=ENU=Cost Object Description;
                                                   Editable=No }
    { 42  ;   ;Project Related Name;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project - Cost Object".Name WHERE (Project No.=FIELD(Project No.),
                                                                                                          Cost Object=FIELD(Cost Object)));
                                                   CaptionML=ENU=Project Related Name;
                                                   Description=Name Cost Object;
                                                   Editable=No }
    { 50  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                CheckSurchargesCalculated;
                                                                CalculateAmount;
                                                              END;

                                                   CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5 }
    { 60  ;   ;Price               ;Decimal       ;OnValidate=BEGIN
                                                                CheckSurchargesCalculated;
                                                                CalculateAmount;
                                                              END;

                                                   CaptionML=ENU=Price;
                                                   AutoFormatType=2 }
    { 70  ;   ;Amount incl. Surcharge;Decimal     ;OnValidate=VAR
                                                                BudgetRateManagement@1100528600 : Codeunit 11012358;
                                                                BudgetRateFoundAt@1100528601 : Text[250];
                                                                lvRate@1100525000 : Decimal;
                                                              BEGIN
                                                                CalculateRateOrQuantity;
                                                                CalculatePrognosisFields;

                                                                "Amount incl. Surcharge" := ROUND("Amount incl. Surcharge"); //C016993
                                                                Amount := ROUND("Amount incl. Surcharge" - "Ovh. Surcharge"); //C016993

                                                                //M20040 sn
                                                                IF ("Amount incl. Surcharge" <> 0) AND ("Cost Type" = "Cost Type"::Labor) AND ("Rate Code" <> '') THEN BEGIN
                                                                  ProjRec.GET("Project No.");
                                                                  lvRate := BudgetRateManagement.GetBudgetRate(
                                                                    0, "Project No.", '', '', ProjRec."Global Dimension 1 Code", "Rate Code", "Prognosis Date", BudgetRateFoundAt);
                                                                  IF lvRate <> Rate THEN
                                                                    "Rate Code" := '';
                                                                END;
                                                                //M20040 en
                                                              END;

                                                   CaptionML=ENU=Amount incl. Ovh. Surcharge;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 73  ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                CheckSurchargesCalculated;
                                                                VALIDATE("Amount incl. Surcharge", Amount + "Ovh. Surcharge")
                                                              END;

                                                   CaptionML=ENU=Amount;
                                                   AutoFormatType=1 }
    { 75  ;   ;Ovh. Surcharge      ;Decimal       ;CaptionML=ENU=Ovh. Surch. prognosis;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 80  ;   ;Element             ;Code20        ;TableRelation="Project Element".Element WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=BEGIN
                                                                ElementFormat.FormatElem(Element,2,'');
                                                                IF Element <> '' THEN BEGIN
                                                                  IF "Project No." = '' THEN BEGIN
                                                                    ElemRec.GET(Element);
                                                                    Level := ElemRec.Level;
                                                                    Chapter := ElemRec.Chapter;
                                                                    Paragraph := ElemRec.Paragraph;
                                                                  END ELSE BEGIN
                                                                    ProjRec.GET("Project No.");
                                                                    ProjRec.TESTFIELD("Prognosis per Element", TRUE);
                                                                    ProjElemRec.GET("Project No.",Element);
                                                                    Level := ProjElemRec.Level;
                                                                    Chapter := ProjElemRec.Chapter;
                                                                    Paragraph := ProjElemRec.Paragraph;
                                                                  END;
                                                                END ELSE BEGIN
                                                                  CLEAR(Level);
                                                                  CLEAR(Chapter);
                                                                  CLEAR(Paragraph);
                                                                END;
                                                                CALCFIELDS("Element Description");
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Element }
    { 81  ;   ;Level               ;Integer       ;CaptionML=ENU=Level;
                                                   Editable=No }
    { 82  ;   ;Chapter             ;Code20        ;CaptionML=ENU=Chapter;
                                                   Editable=No }
    { 83  ;   ;Paragraph           ;Code20        ;CaptionML=ENU=Paragraph;
                                                   Editable=No }
    { 85  ;   ;Element Description ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Element".Description WHERE (Project No.=FIELD(Project No.),
                                                                                                           Element=FIELD(Element)));
                                                   CaptionML=ENU=Element Description;
                                                   Editable=No }
    { 90  ;   ;Unit Cost Object    ;Code10        ;TableRelation="Unit of Measure".Code;
                                                   CaptionML=ENU=Unit Cost Object }
    { 100 ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure".Code;
                                                   CaptionML=ENU=Unit of Measure }
    { 110 ;   ;Rate Code           ;Code10        ;TableRelation="Budget Rate".Code WHERE (Project Filter=FIELD(Project No.));
                                                   OnValidate=VAR
                                                                BudgetRateManagement@1100528600 : Codeunit 11012358;
                                                                BudgetRateFoundAt@1100528601 : Text[255];
                                                              BEGIN
                                                                CheckSurchargesCalculated;
                                                                ProjRec.GET("Project No.");
                                                                Rate :=
                                                                  BudgetRateManagement.GetBudgetRate(0, "Project No.", '', '',
                                                                    ProjRec."Global Dimension 1 Code", "Rate Code", "Prognosis Date", BudgetRateFoundAt);
                                                                CalculateAmount;
                                                              END;

                                                   OnLookup=VAR
                                                              BudgetRate@1100525000 : Record 11012000;
                                                            BEGIN
                                                              BudgetRate.SETRANGE("Project Filter", "Project No.");
                                                              BudgetRate.SETRANGE("Starting Date", 0D, "Prognosis Date");
                                                              BudgetRate.SETFILTER("Ending Date", '%1|>=%2', 0D, "Prognosis Date");
                                                              IF BudgetRate.GET("Rate Code") THEN;

                                                              IF PAGE.RUNMODAL(0, BudgetRate) = ACTION::LookupOK THEN
                                                                VALIDATE("Rate Code", BudgetRate.Code);
                                                            END;

                                                   CaptionML=ENU=Rate Code }
    { 120 ;   ;Rate                ;Decimal       ;OnValidate=BEGIN
                                                                CheckSurchargesCalculated;
                                                                CalculateAmount;
                                                              END;

                                                   CaptionML=ENU=Rate;
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 140 ;   ;Previous Date       ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Max("Prognosis Line"."Prognosis Date" WHERE (Project No.=FIELD(Project No.),
                                                                                                            Cost Type=FIELD(Cost Type),
                                                                                                            Element=FIELD(Element),
                                                                                                            Cost Object=FIELD(Cost Object),
                                                                                                            Prognosis Date=FIELD(FILTER(Previous Date Filter))));
                                                   CaptionML=ENU=Previous Date;
                                                   Editable=No }
    { 141 ;   ;Previous Date Filter;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Previous Date Flter;
                                                   Description=C017374 }
    { 150 ;   ;Previous Prognosis  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Prognosis Line"."Amount incl. Surcharge" WHERE (Project No.=FIELD(Project No.),
                                                                                                                       Prognosis Date=FIELD(Previous Date Filter),
                                                                                                                       Cost Type=FIELD(Cost Type),
                                                                                                                       Element=FIELD(Element),
                                                                                                                       Cost Object=FIELD(Cost Object)));
                                                   CaptionML=ENU=Previous Prognosis;
                                                   Editable=No }
    { 155 ;   ;Fix Prognosis Line  ;Boolean       ;CaptionML=ENU=Fix Prognosis Line;
                                                   Editable=No }
    { 160 ;   ;Budget Amount       ;Decimal       ;CaptionML=ENU=Budget Amount;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 165 ;   ;Budget Surcharge Amount;Decimal    ;CaptionML=ENU=Budget Overhead Surcharge Amount;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 170 ;   ;Budget Hours        ;Decimal       ;CaptionML=ENU=Budget Hours;
                                                   Editable=No }
    { 180 ;   ;Actual Costs        ;Decimal       ;CaptionML=ENU=Actual Costs;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 190 ;   ;Actual Hours        ;Decimal       ;CaptionML=ENU=Actual Hours;
                                                   Editable=No }
    { 200 ;   ;Open (Purchase)     ;Decimal       ;CaptionML=ENU=Open (Purchase);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 210 ;   ;Received/Not Invoiced;Decimal      ;CaptionML=ENU=Received/Not Invoiced;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 211 ;   ;Open Ovh. Surch. (Purchase);Decimal;CaptionML=ENU=Open Ovh. Surch. (Purchase);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 215 ;   ;Open Amount (Hours) ;Decimal       ;CaptionML=ENU=Open Amount (Hours);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 216 ;   ;Open Hours          ;Decimal       ;CaptionML=ENU=Open Hours;
                                                   Editable=No }
    { 217 ;   ;Open Ovh. Surch. (Hours);Decimal   ;CaptionML=ENU=Open Ovh. Surch. (Hours);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 218 ;   ;Open (Inventory)    ;Decimal       ;CaptionML=ENU=Open (Inventory);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 219 ;   ;Open Ovh. Surch. (Inventory);Decimal;
                                                   CaptionML=ENU=Open Ovh. Surch. (Inventory);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 220 ;   ;Allowed Costs       ;Decimal       ;CaptionML=ENU=Allowed Costs;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 230 ;   ;Allowed Hours       ;Decimal       ;CaptionML=ENU=Allowed Hours;
                                                   Editable=No }
    { 240 ;   ;Prognosis End Result;Decimal       ;OnValidate=BEGIN
                                                                CheckSurchargesCalculated;
                                                                "Amount incl. Surcharge" := ROUND("Budget Amount" - "Total Cost" - "Prognosis End Result");  // Call C009648.modify
                                                                Amount := ROUND("Amount incl. Surcharge" - "Ovh. Surcharge");                                // Call C009648.modify
                                                                "Prognosis Total Cost" := ROUND("Amount incl. Surcharge" + "Total Cost");                    // Call C009648.modify
                                                                CalculateRateOrQuantity;
                                                              END;

                                                   CaptionML=ENU=Prognosis End Result;
                                                   AutoFormatType=1 }
    { 250 ;   ;Comment             ;Text100       ;CaptionML=ENU=Comment }
    { 260 ;   ;Total Cost          ;Decimal       ;CaptionML=ENU=Total Cost;
                                                   AutoFormatType=1 }
    { 265 ;   ;Total Cost (Excl. Risc Cov.);Decimal;
                                                   CaptionML=ENU=Total Cost (Excl. Risc Cov.);
                                                   AutoFormatType=1 }
    { 270 ;   ;Total Hours         ;Decimal       ;CaptionML=ENU=Total Hours;
                                                   Editable=No }
    { 280 ;   ;General Total Budget Hours;Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prognosis Line"."Budget Hours" WHERE (Project No.=FIELD(Project No.),
                                                                                                          Prognosis Date=FIELD(Prognosis Date),
                                                                                                          Cost Type=FILTER(Labor)));
                                                   CaptionML=ENU=General Total Budget Hours Labor;
                                                   Description=Add 17 nov 2011;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 290 ;   ;General Total Hours ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prognosis Line"."Total Hours" WHERE (Project No.=FIELD(Project No.),
                                                                                                         Prognosis Date=FIELD(Prognosis Date),
                                                                                                         Cost Type=FILTER(Labor)));
                                                   CaptionML=ENU=General Total Hours Labor;
                                                   Description=Add 17 nov 2011;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 295 ;   ;General Total Quantity;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prognosis Line".Quantity WHERE (Project No.=FIELD(Project No.),
                                                                                                    Prognosis Date=FIELD(Prognosis Date),
                                                                                                    Cost Type=FILTER(Labor)));
                                                   CaptionML=ENU=General Total Quantity Labor;
                                                   Description=Add 17 nov 2011;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 300 ;   ;Total Progn. End Result Labor;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Prognosis Line"."Prognosis End Result" WHERE (Project No.=FIELD(Project No.),
                                                                                                                  Prognosis Date=FIELD(Prognosis Date),
                                                                                                                  Cost Type=FILTER(Labor)));
                                                   CaptionML=ENU=Total Prognosis End Result Labor;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 310 ;   ;Total Progn. End Result Mat.;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Prognosis Line"."Prognosis End Result" WHERE (Project No.=FIELD(Project No.),
                                                                                                                  Prognosis Date=FIELD(Prognosis Date),
                                                                                                                  Cost Type=FILTER(Material)));
                                                   CaptionML=ENU=Total Prognosis End Result Material;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 320 ;   ;Total Progn. End Result Subc.;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Prognosis Line"."Prognosis End Result" WHERE (Project No.=FIELD(Project No.),
                                                                                                                  Prognosis Date=FIELD(Prognosis Date),
                                                                                                                  Cost Type=FILTER(Subcontracting)));
                                                   CaptionML=ENU=Total Prognosis End Result Subcontracting;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 330 ;   ;Total Progn. End Result Plant;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Prognosis Line"."Prognosis End Result" WHERE (Project No.=FIELD(Project No.),
                                                                                                                  Prognosis Date=FIELD(Prognosis Date),
                                                                                                                  Cost Type=FILTER(Plant)));
                                                   CaptionML=ENU=Total Prognosis End Result Plant;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 340 ;   ;Total Progn. End Result Sundry;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Prognosis Line"."Prognosis End Result" WHERE (Project No.=FIELD(Project No.),
                                                                                                                  Prognosis Date=FIELD(Prognosis Date),
                                                                                                                  Cost Type=FILTER(Sundry)));
                                                   CaptionML=ENU=Total Prognosis End Result Sundry;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 350 ;   ;Total Prognosis End Result;Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prognosis Line"."Prognosis End Result" WHERE (Project No.=FIELD(Project No.),
                                                                                                                  Prognosis Date=FIELD(Prognosis Date)));
                                                   CaptionML=ENU=Total Prognosis End Result;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 360 ;   ;Total Prognosis Labor;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prognosis Line"."Amount incl. Surcharge" WHERE (Project No.=FIELD(Project No.),
                                                                                                                    Prognosis Date=FIELD(Prognosis Date),
                                                                                                                    Cost Type=FILTER(Labor)));
                                                   CaptionML=ENU=Total Prognosis Labor;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 370 ;   ;Total Prognosis Material;Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prognosis Line"."Amount incl. Surcharge" WHERE (Project No.=FIELD(Project No.),
                                                                                                                    Prognosis Date=FIELD(Prognosis Date),
                                                                                                                    Cost Type=FILTER(Material)));
                                                   CaptionML=ENU=Total Prognosis Material;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 380 ;   ;Total Prognosis Subcontracting;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Prognosis Line"."Amount incl. Surcharge" WHERE (Project No.=FIELD(Project No.),
                                                                                                                    Prognosis Date=FIELD(Prognosis Date),
                                                                                                                    Cost Type=FILTER(Subcontracting)));
                                                   CaptionML=ENU=Total Prognosis Subcontracting;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 390 ;   ;Total Prognosis Plant;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prognosis Line"."Amount incl. Surcharge" WHERE (Project No.=FIELD(Project No.),
                                                                                                                    Prognosis Date=FIELD(Prognosis Date),
                                                                                                                    Cost Type=FILTER(Plant)));
                                                   CaptionML=ENU=Total Prognosis Plant;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 400 ;   ;Total Prognosis Sundry;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prognosis Line"."Amount incl. Surcharge" WHERE (Project No.=FIELD(Project No.),
                                                                                                                    Prognosis Date=FIELD(Prognosis Date),
                                                                                                                    Cost Type=FILTER(Sundry)));
                                                   CaptionML=ENU=Total Prognosis Sundry;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 410 ;   ;Total Prognosis     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prognosis Line"."Amount incl. Surcharge" WHERE (Project No.=FIELD(Project No.),
                                                                                                                    Prognosis Date=FIELD(Prognosis Date)));
                                                   CaptionML=ENU=Total Prognosis;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 420 ;   ;Cost Component      ;Code20        ;TableRelation="Cost Component".Code;
                                                   CaptionML=ENU=Cost Component;
                                                   Editable=No }
    { 430 ;   ;Main Project No.    ;Code20        ;TableRelation=Job;
                                                   CaptionML=ENU=Main Project No. }
    { 440 ;   ;Prev Prognosis End Result;Decimal  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Prognosis Line"."Prognosis End Result" WHERE (Project No.=FIELD(Project No.),
                                                                                                                     Prognosis Date=FIELD(Previous Date Filter),
                                                                                                                     Cost Type=FIELD(Cost Type),
                                                                                                                     Element=FIELD(Element),
                                                                                                                     Cost Object=FIELD(Cost Object)));
                                                   CaptionML=ENU=Prev Prognosis End Result;
                                                   Editable=No }
    { 450 ;   ;Prognosis Total Cost;Decimal       ;OnValidate=BEGIN
                                                                CheckSurchargesCalculated;
                                                                // jhoek.begin
                                                                "Prognosis End Result" := ROUND("Budget Amount" - "Prognosis Total Cost"); //C016993
                                                                "Amount incl. Surcharge" := ROUND("Prognosis Total Cost" - "Total Cost"); //C016993
                                                                CalculateRateOrQuantity;
                                                                // jhoek.end
                                                                Amount := ROUND("Amount incl. Surcharge" - "Ovh. Surcharge"); //C016993
                                                              END;

                                                   CaptionML=ENU=Prognosis Total Cost;
                                                   AutoFormatType=1 }
    { 455 ;   ;Prognosis Total Hours;Decimal      ;OnValidate=BEGIN
                                                                // 15532.n
                                                                VALIDATE(Quantity,"Prognosis Total Hours" - "Total Hours");
                                                              END;

                                                   CaptionML=ENU=Prognosis Total Hours;
                                                   Description=Add 17 nov 2011 }
    { 460 ;   ;Prognosis End Result Hours;Decimal ;CaptionML=ENU=Prognosis End Result Hours;
                                                   Editable=No }
    { 470 ;   ;Result Hours        ;Decimal       ;CaptionML=ENU=Result Hours;
                                                   Editable=No }
    { 480 ;   ;Estimated Purchase Result;Decimal  ;CaptionML=ENU=Estimated Purchase Result;
                                                   Editable=No }
    { 500 ;   ;Amount Revenue      ;Decimal       ;CaptionML=ENU=Amount Revenue;
                                                   AutoFormatType=1 }
    { 510 ;   ;Prognosis Revenue   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prognosis Line"."Amount Revenue" WHERE (Project No.=FIELD(Project No.),
                                                                                                            Prognosis Date=FIELD(Prognosis Date),
                                                                                                            Cost Type=FILTER(Revenue)));
                                                   CaptionML=ENU=Prognosis Revenue;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 520 ;   ;Risc Coverage       ;Decimal       ;OnValidate=BEGIN
                                                                CheckSurchargesCalculated;
                                                                "Total Cost" := "Total Cost (Excl. Risc Cov.)" + "Risc Coverage";
                                                                VALIDATE("Amount incl. Surcharge");
                                                              END;

                                                   CaptionML=ENU=Risc Coverage;
                                                   AutoFormatType=1 }
    { 530 ;   ;Invoiced            ;Decimal       ;CaptionML=ENU=Invoiced;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 540 ;   ;Total Risc Coverage Amount;Decimal ;CaptionML=ENU=Total Risc Coverage Amount;
                                                   Editable=No }
    { 545 ;   ;Total Release Risc Coverage;Decimal;CaptionML=ENU=Total Release Risc Coverage;
                                                   Editable=No }
    { 560 ;   ;Original Budget Amount;Decimal     ;CaptionML=ENU=Original Budget Amount;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 570 ;   ;Adjustments         ;Decimal       ;CaptionML=ENU=Adjustments;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 580 ;   ;Extension           ;Decimal       ;CaptionML=ENU=Extension;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 585 ;   ;Options             ;Decimal       ;CaptionML=ENU=Options;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 590 ;   ;Purchase Budget     ;Decimal       ;CaptionML=ENU=Purchase Budget;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 600 ;   ;Purchase Amount     ;Decimal       ;CaptionML=ENU=Purchase Amount;
                                                   Editable=No }
    { 610 ;   ;Actual Costs (Purchase Action);Decimal;
                                                   CaptionML=ENU=Actual Costs (Purchase Action);
                                                   Editable=No;
                                                   AutoFormatType=1 }
  }
  KEYS
  {
    {    ;Project No.,Prognosis Date,Cost Type,Element,Cost Object;
                                                   SumIndexFields=Amount incl. Surcharge,Risc Coverage,Prognosis Total Cost,Prognosis End Result,Budget Amount,Total Cost,Amount Revenue,Quantity,Budget Hours,Total Hours;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Prognosis Date                          ;MaintainSQLIndex=No;
                                                   MaintainSIFTIndex=No }
    {    ;Project No.,Prognosis Date,Element,Chapter,Paragraph;
                                                   SumIndexFields=Amount incl. Surcharge,Quantity;
                                                   MaintainSQLIndex=No;
                                                   MaintainSIFTIndex=No }
    {    ;Project No.,Prognosis Date,Cost Type,Cost Object,Element;
                                                   MaintainSQLIndex=No;
                                                   MaintainSIFTIndex=No }
    {    ;Main Project No.,Project No.,Prognosis Date;
                                                   SumIndexFields=Amount incl. Surcharge,Quantity,Amount Revenue,Prognosis Total Cost }
    {    ;Main Project No.,Project No.,Cost Component,Prognosis Date;
                                                   SumIndexFields=Amount incl. Surcharge,Quantity,Risc Coverage,Prognosis Total Cost }
    {    ;Main Project No.,Project No.,Cost Object,Prognosis Date;
                                                   SumIndexFields=Amount incl. Surcharge,Risc Coverage,Prognosis Total Cost }
    {    ;Main Project No.,Project No.,Element,Cost Object }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ProjElemRec@1210190003 : Record 11012010;
      ElemRec@1100525000 : Record 11012060;
      ProjRec@1100485000 : Record 11072003;
      PrognosisRec@1100525006 : Record 11012034;
      DimValRec@1100525002 : Record 349;
      ProjSetup@1100528800 : Record 315;
      ElementFormat@1100525001 : Codeunit 11012022;
      DimMgt@1100525003 : Codeunit 408;
      UpdateAction@1100525004 : 'Insert,Modify,Delete';
      DeleteControlOnProg@1100525005 : Boolean;

    PROCEDURE CalculateAmount@1();
    BEGIN
      IF "Cost Type" = "Cost Type"::Labor THEN BEGIN
        VALIDATE(Amount, ROUND(Quantity * Rate));  // Call C009648.modify
        Price := 0;
      END ELSE BEGIN
        VALIDATE(Amount, ROUND(Quantity * Price)); // Call C009648.modify
        Rate := 0;
      END;
    END;

    PROCEDURE CalculateRateOrQuantity@2();
    VAR
      Currency@1100525000 : Record 4;
    BEGIN
      //M20040 so
      //IF "Cost Type" = "Cost Type"::Labor THEN BEGIN
      //  IF Rate <> 0 THEN
      //    Quantity := "Amount incl. Surcharge" / Rate;
      //  Price := 0;
      //END ELSE BEGIN
      //  IF Price <> 0 THEN
      //    Quantity := "Amount incl. Surcharge" / Price;
      //  Rate := 0;
      //END;
      //M20040 eo

      Currency.InitRoundingPrecision; //C009648 rounding added
      // dp00029.sn
      ProjSetup.GET;
      IF ProjSetup."Recalc Rate or Hours Prognosis" = ProjSetup."Recalc Rate or Hours Prognosis"::Rate THEN BEGIN
      // dp00029.en
        //M20040 sn
        IF "Cost Type" = "Cost Type"::Labor THEN BEGIN
          //In case of Labor Quantity is NOT recalculated. In Stead Rate is Calculated.
          IF Quantity <> 0 THEN
            Rate := ROUND(Amount/Quantity,Currency."Unit-Amount Rounding Precision"); //C009648 rounding added
          Price := 0;
        END ELSE BEGIN
          IF Quantity <> 0 THEN
            Price := ROUND(Amount/Quantity,Currency."Unit-Amount Rounding Precision"); //C009648 rounding added
          IF Price <> 0 THEN
            Quantity := Amount / Price;
          Rate := 0;
        END;
        //M20040 en
      // dp00029.sn
      END ELSE BEGIN
        IF "Cost Type" = "Cost Type"::Labor THEN BEGIN
          IF Rate <> 0 THEN
            Quantity := "Amount incl. Surcharge" / Rate;
          Price := 0;
        END ELSE BEGIN
          IF Price <> 0 THEN
            Quantity := "Amount incl. Surcharge" / Price;
          Rate := 0;
        END;
      END;
      // dp00029.en
    END;

    PROCEDURE UpdateCostControlStatus@10(lUpdateAction@1100485002 : 'Insert,Modify,Delete');
    BEGIN
      IF ProjRec.GET("Project No.") THEN
        ProjRec.UpdateCostControlStatus(lUpdateAction, xRec."Cost Object", "Cost Object");
    END;

    PROCEDURE CalculatePrognosisFields@1100525000();
    BEGIN
      "Prognosis End Result" := "Budget Amount" - "Total Cost" - "Amount incl. Surcharge";
      "Prognosis End Result Hours" := "Budget Hours" - "Total Hours" - Quantity;
      "Prognosis Total Cost" := "Amount incl. Surcharge" + "Total Cost";                              //20060810-JE //20090119 PS
      "Prognosis Total Hours" := "Total Hours" + Quantity;  // 15532.n
    END;

    PROCEDURE CheckSurchargesCalculated@1100525001() : Boolean;
    VAR
      lvPrognosis@1100525000 : Record 11012034;
    BEGIN
      lvPrognosis.INIT;
      lvPrognosis.SETRANGE("Project No.", "Project No.");
      lvPrognosis.SETRANGE("Prognosis Date", "Prognosis Date");
      IF lvPrognosis.FINDFIRST THEN BEGIN
        IF lvPrognosis."Ovh. Surcharges Calculated" THEN
          IF NOT lvPrognosis."Altered After Calculation" THEN BEGIN
            lvPrognosis."Altered After Calculation" := TRUE;  //M21759
            lvPrognosis.MODIFY;                               //M21759
          END;
      END;
    END;

    PROCEDURE UpdatePrognosisSpecification@11136551(OldQuantity@11136550 : Decimal;NewQuantity@11136552 : Decimal;OldPrice@11136553 : Decimal;NewPrice@11136554 : Decimal);
    VAR
      PrognosisLineSpec@11136551 : Record 11020687;
      PrognosisLineSpec2@11136555 : Record 11020687;
    BEGIN
      //DP00042
      ProjSetup.GET;
      IF NOT ProjSetup."Prognosis Specifications" THEN  //C004846.n
        EXIT;
      IF (NewPrice <> OldPrice) THEN BEGIN
        PrognosisLineSpec.SETRANGE("Project No.", "Project No.");
        PrognosisLineSpec.SETRANGE("Prognosis Date", "Prognosis Date");
        IF Element = '' THEN  //db, 15-11-11
          PrognosisLineSpec.SETFILTER(Element, '%1', '')
        ELSE
          PrognosisLineSpec.SETRANGE(Element, Element);
        PrognosisLineSpec.SETRANGE("Cost Type", "Cost Type");
        PrognosisLineSpec.SETRANGE("Cost Object", "Cost Object");

        IF PrognosisLineSpec.FINDSET THEN
          REPEAT
            PrognosisLineSpec2 := PrognosisLineSpec;
            PrognosisLineSpec2.Price := NewPrice;
            PrognosisLineSpec2.UpdateAmount;
            PrognosisLineSpec2.MODIFY;
          UNTIL PrognosisLineSpec.NEXT = 0;
      END;

      IF (NewQuantity <> OldQuantity) THEN BEGIN
        CALCFIELDS("Cost Object Description");

        PrognosisLineSpec."Project No." := "Project No.";
        PrognosisLineSpec."Prognosis Date" := "Prognosis Date";
        PrognosisLineSpec."Cost Type" := "Cost Type";
        PrognosisLineSpec.Element := Element;
        PrognosisLineSpec."Cost Object" := "Cost Object";
        PrognosisLineSpec.Description := "Cost Object Description";
        PrognosisLineSpec.Quantity := NewQuantity - OldQuantity;
        PrognosisLineSpec.Price := NewPrice;
        PrognosisLineSpec.UpdateAmount;
        PrognosisLineSpec."Reference No." := CREATEGUID;
        PrognosisLineSpec."Line No." := PrognosisLineSpec.FindNextLineNo;
        PrognosisLineSpec.INSERT;
      END;
    END;

    PROCEDURE AmountOnDrillDown@11136550();
    VAR
      PrognosisLineSpec@11136550 : Record 11020687;
    BEGIN
      //DP00042
      ProjSetup.GET;
      IF NOT ProjSetup."Prognosis Specifications" THEN  //C004846.n
        EXIT;

      //MODIFY(TRUE);  //C006391.o  SaveRecord must be done before calling this function
      COMMIT;

      PrognosisLineSpec.SETRANGE("Project No.", "Project No.");
      PrognosisLineSpec.SETRANGE("Prognosis Date", "Prognosis Date");
      IF Element = '' THEN  //db, 15-11-11
        PrognosisLineSpec.SETFILTER(Element, '%1', '')
      ELSE
        PrognosisLineSpec.SETRANGE(Element, Element);
      PrognosisLineSpec.SETRANGE("Cost Type", "Cost Type");
      PrognosisLineSpec.SETRANGE("Cost Object", "Cost Object");

      PAGE.RUNMODAL(0, PrognosisLineSpec);
    END;

    PROCEDURE SetDeleteControlOnProg@1100525002();
    BEGIN
      //**4PS, SR C011681 17-01-14
      DeleteControlOnProg := TRUE;
    END;

    PROCEDURE SetPreviousDateFilter@1100528000();
    VAR
      Prognosis@1100528000 : Record 11012034;
    BEGIN
      //C017374
      SETRANGE("Previous Date Filter",0D);

      IF Prognosis.GET("Project No.","Prognosis Date") THEN
        IF Prognosis.NEXT(-1) <> 0 THEN
          SETFILTER("Previous Date Filter",FORMAT(Prognosis."Prognosis Date"));
    END;

    BEGIN
    {
      //20060706-JE : Added fields [Prev Prognosis End Result], [Total Expected Costs]
      //20060706-JE : Added fields [Prognosis End Result Hours], [Result Hours]
      //20060810-JE : Field "Total Expected Costs" will be updated after changing amount field.

      151022 ITERO.SB RFC-010 Added function/setup to check if prognosis is used in project preclosure
    }
    END.
  }
}

