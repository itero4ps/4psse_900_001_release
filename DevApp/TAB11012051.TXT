OBJECT Table 11012051 Error
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Error;
  }
  FIELDS
  {
    { 1   ;   ;Source Type         ;Option        ;CaptionML=ENU=Source Type;
                                                   OptionCaptionML=ENU=Hours Accounting,Import Budget,Finish Service-Project,PlantTest,ICM Export,Item,E-Plan,Absence,Read Documents,Hoursacc. Site manager,Maintenance Plan,Service-Prognosis,Contract Object,Managemind Invoices,Maintenance Appointment,Rental Unit,General,Mobile;
                                                   OptionString=Hours Accounting,Import Budget,Finish Service-Project,PlantTest,ICM Export,Item,E-Plan,Absence,Read Documents,Hoursacc. Site manager,Maintenance Plan,Service-Prognosis,Contract Object,Managemind Invoices,Maintenance Appointment,RentalUnit,General,Mobile }
    { 5   ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=User ID }
    { 10  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 15  ;   ;Tempory Table       ;Boolean       ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Tempory Table;
                                                   Editable=No }
    { 20  ;   ;Employee No.        ;Code20        ;TableRelation=Employee.No.;
                                                   CaptionML=ENU=Employee No. }
    { 21  ;   ;Name                ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Full Name" WHERE (No.=FIELD(Employee No.)));
                                                   CaptionML=ENU=Name;
                                                   Editable=No }
    { 30  ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No.;
                                                   Editable=No }
    { 40  ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date;
                                                   Editable=No }
    { 50  ;   ;Error message       ;Text250       ;CaptionML=ENU=Error message }
    { 60  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 70  ;   ;Employer            ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee.Employer WHERE (No.=FIELD(Employee No.)));
                                                   CaptionML=ENU=Employer;
                                                   Editable=No }
    { 80  ;   ;External            ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee.External WHERE (No.=FIELD(Employee No.)));
                                                   CaptionML=ENU=External;
                                                   Editable=No }
    { 90  ;   ;Project No.         ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=ENU=Project No. }
    { 100 ;   ;Service Contract No.;Code20        ;TableRelation=Service-Contract.No.;
                                                   CaptionML=ENU=Service Contract No. }
    { 110 ;   ;Service Order No.   ;Code20        ;TableRelation="Service Order".No.;
                                                   CaptionML=ENU=Service Order No. }
    { 120 ;   ;Department Code     ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Department }
    { 130 ;   ;Plant Location Code ;Code20        ;TableRelation="Plant Location";
                                                   CaptionML=ENU=Plant Location Code }
    { 140 ;   ;Item No.            ;Code20        ;TableRelation=IF (Vendor No.=FILTER('')) Item.No.
                                                                 ELSE IF (Vendor No.=FILTER(<>'')) "Trade Item"."Item Code";
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Item No. }
    { 150 ;   ;Vendor No.          ;Code20        ;TableRelation="ETIM Vendor (Central Mgt)".Code;
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Vendor No. }
    { 160 ;   ;Service Location No.;Code20        ;TableRelation="Service Location".No.;
                                                   CaptionML=ENU=Service Location No. }
    { 170 ;   ;Object No.          ;Code20        ;TableRelation=Service-Object;
                                                   CaptionML=ENU=Object No. }
    { 180 ;   ;Serv. Contr. Ctrl. Period Code;Code10;
                                                   TableRelation="Service-Contract Ctrl. Period".Code WHERE (Service Contract No.=FIELD(Service Contract No.));
                                                   CaptionML=ENU=Service Contract Control Period Code }
    { 190 ;   ;Rental Unit         ;Code20        ;TableRelation="Rental Unit"."Rental Unit" WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=ENU=Rental Unit }
    { 200 ;   ;Starting Date Package;Date         ;TableRelation="Rental Package"."Starting Date" WHERE (Project No.=FIELD(Project No.),
                                                                                                         Rental Unit=FIELD(Rental Unit));
                                                   CaptionML=ENU=Starting Date Package;
                                                   NotBlank=Yes }
  }
  KEYS
  {
    {    ;User ID,Source Type,Line No.            ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DPA_Management@1100000999 : Codeunit 11012783;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11012051) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11012051');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::Error, "Department Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Department Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Department Code");
    END;

    PROCEDURE InsertError@1100409000(SourceType@1100409000 : Option;ErrorMessage@1100409001 : Text[250]);
    VAR
      ErrorRec@1100409002 : Record 11012051;
      LineNo@1100409003 : Integer;
    BEGIN
      LineNo := 10000;
      ErrorRec.SETRANGE("User ID", USERID);
      ErrorRec.SETRANGE("Source Type", SourceType);
      IF ErrorRec.FINDLAST() THEN
        LineNo += ErrorRec."Line No.";

      ErrorRec."User ID" := USERID;
      ErrorRec."Source Type" := SourceType;
      ErrorRec."Line No." := LineNo;
      ErrorRec."Error message" := ErrorMessage;
      ErrorRec."Posting Date" := TODAY;
      ErrorRec.INSERT(TRUE);
    END;

    BEGIN
    {
      Errors:
      - Hour Accounting
      - Import project budget
      - report service-project complete
      - secu-test
      - ICM-export
      - report plant location complete
      - Import documents
      - Hour Accounting Site Manager
      - Rental Unit (/Package)
    }
    END.
  }
}

