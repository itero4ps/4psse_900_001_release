OBJECT Table 11012084 Posted Hour Header
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               PostedHourLine.SETRANGE(Year,Year);
               PostedHourLine.SETRANGE(Week,Week);
               PostedHourLine.SETRANGE("Employee No.","Employee No.");
               PostedHourLine.DELETEALL(TRUE);
             END;

    CaptionML=ENU=Posted Hour Header;
    LookupPageID=Page11012272;
  }
  FIELDS
  {
    { 20  ;   ;Year                ;Integer       ;CaptionML=ENU=Year;
                                                   MinValue=1 }
    { 30  ;   ;Week                ;Integer       ;CaptionML=ENU=Week;
                                                   MinValue=1;
                                                   MaxValue=53 }
    { 39  ;   ;Supplying Company   ;Text30        ;TableRelation=Company;
                                                   CaptionML=ENU=Supplying Company }
    { 40  ;   ;Employee No.        ;Code20        ;TableRelation=IF (Supplying Company=FILTER('')) Employee.No.;
                                                   CaptionML=ENU=Employee No. }
    { 41  ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No.;
                                                   Editable=No }
    { 42  ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date;
                                                   Editable=No }
    { 45  ;   ;First Name          ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."First Name" WHERE (No.=FIELD(Employee No.)));
                                                   CaptionML=ENU=First Name;
                                                   Editable=No }
    { 50  ;   ;Last Name           ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Last Name" WHERE (No.=FIELD(Employee No.)));
                                                   CaptionML=ENU=Last Name;
                                                   Editable=No }
    { 51  ;   ;Full Name           ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Full Name" WHERE (No.=FIELD(Employee No.)));
                                                   CaptionML=ENU=Full Name;
                                                   Editable=No }
    { 55  ;   ;Norm Hours          ;Decimal       ;CaptionML=ENU=Norm Hours;
                                                   DecimalPlaces=2: }
    { 56  ;   ;Norm Days           ;Decimal       ;CaptionML=ENU=Norm Days;
                                                   DecimalPlaces=2: }
    { 100 ;   ;Department Code     ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Department Code }
    { 111 ;   ;Released by         ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Released by;
                                                   Editable=No }
    { 160 ;   ;Checked by Empl. No.;Code20        ;TableRelation=Employee;
                                                   CaptionML=ENU=Checked by Employee No.;
                                                   Editable=No }
    { 161 ;   ;Checked by Empl. Full Name;Text100 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Full Name" WHERE (No.=FIELD(Checked by Empl. No.)));
                                                   CaptionML=ENU=Checked by Employee Full Name;
                                                   Editable=No }
    { 170 ;   ;Date Checked        ;Date          ;CaptionML=ENU=Date Checked;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Year,Week,Employee No.                  ;Clustered=Yes }
    {    ;Employee No.,Document No.,Year,Week      }
    {    ;Document No.                             }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PostedHourLine@1210190004 : Record 11012085;
      EmplRec@1210190005 : Record 5200;
      DPA_Management@1100000999 : Codeunit 11012783;

    PROCEDURE Navigate@2();
    VAR
      NavigateForm@1000 : Page 344;
    BEGIN
      NavigateForm.SetDoc(0D,"Document No.");
      NavigateForm.RUN;
    END;

    PROCEDURE EmplDescrOtherCompany@1210190005();
    BEGIN
      IF "Supplying Company" = '' THEN
        EXIT;

      "First Name" := '';
      "Last Name" := '';
      "Full Name" := '';
      IF "Employee No." <> '' THEN BEGIN
        EmplRec.CHANGECOMPANY("Supplying Company");
        IF EmplRec.GET("Employee No.") THEN BEGIN
          "First Name" := EmplRec."First Name";
          "Last Name" := EmplRec."Last Name";
          "Full Name" := EmplRec."Full Name";
        END;
      END;
    END;

    PROCEDURE LookupEmployee@1100485000();
    BEGIN
      EmplRec.CHANGECOMPANY("Supplying Company");
      EmplRec."No." := "Employee No.";
      PAGE.RUNMODAL(0, EmplRec);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11012084) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11012084');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Posted Hour Header", "Department Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Department Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Department Code");
    END;

    BEGIN
    END.
  }
}

