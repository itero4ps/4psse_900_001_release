OBJECT Table 11012093 Project Preclosure Result
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnModify=BEGIN
               IF Posted THEN
                 ERROR(Text001,"Project No.","Posting Date");
             END;

    OnDelete=BEGIN
               IF ProjectRec.GET("Project No.") THEN
                 IF Posted AND (ProjectRec."Project Status" < ProjectRec."Project Status"::Finished) THEN
                   ERROR(Text001,"Project No.","Posting Date");
             END;

    OnRename=BEGIN
               IF Posted THEN
                 ERROR(Text001,"Project No.","Posting Date");
             END;

    CaptionML=ENU=Preclosure Result/Provision Loss;
    PasteIsValid=No;
    DrillDownPageID=Page11012281;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job.No. WHERE (Project Status=FILTER(..Technical Finished));
                                                   OnValidate=VAR
                                                                lPReclosureResultsRec@1100528240 : Record 11012093;
                                                              BEGIN
                                                                ProjectRec.GET("Project No.");
                                                                DimMgt.CheckDepartmentAuthorization(DATABASE::"Project Preclosure Result", ProjectRec."Global Dimension 1 Code");
                                                                "Global Dimension 1 Code" := ProjectRec."Global Dimension 1 Code";

                                                                IF (ProjectRec."Preclosure Result" = ProjectRec."Preclosure Result"::No) AND
                                                                   NOT ProjectRec."Provision Loss" THEN
                                                                  ERROR(Text004, ProjectRec.FIELDCAPTION("Preclosure Result"), ProjectRec.FIELDCAPTION("Provision Loss"));

                                                                IF ProjectRec."Provision Loss" THEN BEGIN
                                                                  "Result Type" := "Result Type"::"Provision Loss";
                                                                  IF CheckPreclResultPresent(FALSE) THEN BEGIN
                                                                    IF NOT (ProjectRec."Preclosure Result" = ProjectRec."Preclosure Result"::No) THEN
                                                                      "Result Type" := "Result Type"::"Preclosure Result"
                                                                    ELSE
                                                                      ERROR(Text005, ProjectRec.FIELDCAPTION("Preclosure Result"));
                                                                   END;
                                                                END ELSE
                                                                  "Result Type" := "Result Type"::"Preclosure Result";

                                                                IF ProjectRec."Allow Precl. R./Prov. Loss" = ProjectRec."Allow Precl. R./Prov. Loss"::No THEN
                                                                  ERROR(Text005, ProjectRec.FIELDCAPTION("Allow Precl. R./Prov. Loss"));

                                                                IF (ProjectRec."Allow Precl. R./Prov. Loss" = ProjectRec."Allow Precl. R./Prov. Loss"::"Preclosure Result") AND
                                                                   ("Result Type" = "Result Type"::"Provision Loss") THEN
                                                                BEGIN
                                                                  IF (ProjectRec."Preclosure Result" = ProjectRec."Preclosure Result"::No) THEN
                                                                    ERROR(Text004, ProjectRec.FIELDCAPTION("Allow Precl. R./Prov. Loss"),
                                                                    ProjectRec.FIELDCAPTION("Provision Loss"))
                                                                  ELSE
                                                                    "Result Type" := "Result Type"::"Preclosure Result";
                                                                END;

                                                                IF (ProjectRec."Allow Precl. R./Prov. Loss" = ProjectRec."Allow Precl. R./Prov. Loss"::"Provision Loss") AND
                                                                     ("Result Type" = "Result Type" ::"Preclosure Result") THEN
                                                                BEGIN
                                                                  IF NOT ProjectRec."Provision Loss" THEN
                                                                    ERROR(Text004, ProjectRec.FIELDCAPTION("Allow Precl. R./Prov. Loss"),
                                                                          ProjectRec.FIELDCAPTION(ProjectRec."Preclosure Result"))
                                                                  ELSE
                                                                    "Result Type" := "Result Type"::"Provision Loss";
                                                                END;

                                                                //C000501
                                                                IF "Prognosis Date" = 0D THEN
                                                                  "Prognosis Level" := ProjectRec."Prognosis Level";
                                                                //

                                                                IF CurrFieldNo > 0 THEN
                                                                  CALCFIELDS("Project Description");

                                                                IF CurrFieldNo > 0 THEN BEGIN
                                                                  IF NOT lPReclosureResultsRec.GET(xRec."Project No.", xRec."Posting Date", xRec."Line No.") THEN
                                                                  BEGIN
                                                                    lPReclosureResultsRec.RESET;
                                                                    lPReclosureResultsRec.SETCURRENTKEY("Project No.","Line No.");
                                                                    lPReclosureResultsRec.SETRANGE("Project No.", "Project No.");
                                                                    "Line No." := 10000;  //Select new lineno.
                                                                    IF lPReclosureResultsRec.FINDLAST THEN
                                                                      "Line No." := lPReclosureResultsRec."Line No." + 10000;
                                                                  END;
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              CLEAR(ProjectRec);
                                                              ProjectRec.SETCURRENTKEY("Project Status");
                                                              ProjectRec.SETFILTER("Project Status", '..%1', ProjectRec."Project Status"::"Technical Finished");
                                                              ProjectRec."No." := "Project No.";
                                                              IF ProjectRec.GET("Project No.") THEN;
                                                              IF (PAGE.RUNMODAL(0,ProjectRec,ProjectRec."No.") = ACTION::LookupOK) THEN
                                                                VALIDATE("Project No.", ProjectRec."No.");
                                                              ProjectRec.RESET;
                                                            END;

                                                   CaptionML=ENU=Project No.;
                                                   NotBlank=Yes }
    { 15  ;   ;Project Description ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=ENU=Project Description;
                                                   Editable=No }
    { 20  ;   ;Posting Date        ;Date          ;OnValidate=VAR
                                                                lPReclosureResultsRec@1210190000 : Record 11012093;
                                                              BEGIN
                                                                lPReclosureResultsRec.SETRANGE("Project No.","Project No.");
                                                                lPReclosureResultsRec.SETFILTER("Line No.", '<>%1', "Line No.");
                                                                lPReclosureResultsRec.SETFILTER("Posting Date",'>%1',"Posting Date");
                                                                IF lPReclosureResultsRec.FIND('+') THEN
                                                                  ERROR(Text007,"Project No.","Posting Date");  //On later date already filled, posted false or true
                                                                lPReclosureResultsRec.SETRANGE("Posting Date","Posting Date");
                                                                lPReclosureResultsRec.SETRANGE(Posted, FALSE);
                                                                IF lPReclosureResultsRec.FIND('+') THEN
                                                                  ERROR(Text006,"Project No.","Posting Date");  //On same date already filled, posted false

                                                                lPReclosureResultsRec.RESET;
                                                                lPReclosureResultsRec.SETRANGE("Project No.","Project No.");
                                                                lPReclosureResultsRec.SETFILTER("Posting Date",'..%1',"Posting Date");
                                                                lPReclosureResultsRec.SETFILTER("Line No.",'..%1',"Line No.");
                                                                IF lPReclosureResultsRec.FIND('+') THEN BEGIN
                                                                  "Units Saleable" := lPReclosureResultsRec."Units Saleable";
                                                                  "Units Sold" := lPReclosureResultsRec."Units Sold";
                                                                  "Progress %" := lPReclosureResultsRec."Progress %";
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Posting Date;
                                                   NotBlank=Yes }
    { 25  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 30  ;   ;Actual Cost         ;Decimal       ;CaptionML=ENU=Actual Cost;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 40  ;   ;Contract Amount     ;Decimal       ;CaptionML=ENU=Contract Amount;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 50  ;   ;Units Saleable      ;Decimal       ;CaptionML=ENU=Units Saleable;
                                                   AutoFormatType=1 }
    { 60  ;   ;Units Sold          ;Decimal       ;CaptionML=ENU=Units Sold;
                                                   AutoFormatType=1 }
    { 63  ;   ;Sales Progress      ;Decimal       ;CaptionML=ENU=Sales Progress }
    { 65  ;   ;Progress % Base     ;Decimal       ;CaptionML=ENU=Cumulative Progress % Base;
                                                   Editable=No }
    { 70  ;   ;Progress %          ;Decimal       ;CaptionML=ENU=Cumulative Progress %;
                                                   Editable=No }
    { 75  ;   ;Progress % Actual   ;Decimal       ;OnValidate=VAR
                                                                DampingRatioProj@1100409001 : Record 11072019;
                                                                CalcPreclResult@1100409000 : Decimal;
                                                                CalcTurnOver@1100528000 : Decimal;
                                                                CalcCost@1100528001 : Decimal;
                                                              BEGIN
                                                                //*C001798.n
                                                                TESTFIELD(Posted, FALSE);
                                                                IF "Progress % Actual" <> 0 THEN
                                                                  TESTFIELD("Result Type", "Result Type"::"Preclosure Result");

                                                                IF "Result Type" = "Result Type"::"Preclosure Result" THEN BEGIN
                                                                //C022697.sn
                                                                  CALCFIELDS("Previous Turnover");
                                                                  CalcTurnOver := ROUND("Progress % Actual" * "Prognosis Revenue" / 100);
                                                                  Turnover := CalcTurnOver - "Previous Turnover";
                                                                //C022697.en

                                                                  //Calculate "Actual Preclosure Result" as in R11012086, but now with "Progress % Actual".
                                                                  IF "Expected Final Result" < 0 THEN
                                                                    CalcPreclResult := "Expected Final Result"
                                                                  ELSE BEGIN
                                                                    CalcPreclResult := "Progress % Actual" * "Expected Final Result" / 100 ;
                                                                    DampingRatioProj.SETFILTER("Until Production", '>=%1', ROUND("Progress % Actual", 1, '>'));
                                                                    IF DampingRatioProj.FINDFIRST THEN
                                                                      CalcPreclResult := "Progress % Actual" * DampingRatioProj.Ratio * "Expected Final Result" / 100;
                                                                  END;
                                                                  CALCFIELDS("Previous Actual Precl. Result");
                                                                  CalcPreclResult := ROUND(CalcPreclResult);
                                                                //Cost := Cost + "Actual Preclosure Result";  // Old "Actual Preclosure Result" (see OnValidate) //C022697.o
                                                                  "Actual Preclosure Result" := ROUND(CalcPreclResult - "Previous Actual Precl. Result");
                                                                //Cost := Cost - "Actual Preclosure Result";  // New "Actual Preclosure Result" (see OnValidate) //C022697.o
                                                                //C022697.sn
                                                                  CALCFIELDS("Previous Cost");
                                                                  CalcCost := CalcTurnOver - CalcPreclResult;
                                                                  Cost := CalcCost - "Previous Cost";
                                                                //C022697.en
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Cumulative Progress % Actual;
                                                   DecimalPlaces=2:5;
                                                   BlankZero=Yes }
    { 80  ;   ;Expected Final Result;Decimal      ;CaptionML=ENU=Expected Final Result;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 85  ;   ;Corrected Final Result;Decimal     ;OnValidate=BEGIN
                                                                IF "Corrected Final Result" < 0 THEN
                                                                  "Corrected Preclosure Result" := "Corrected Final Result"
                                                                ELSE
                                                                  "Corrected Preclosure Result" := "Progress %" * "Corrected Final Result" / 100 ;

                                                                CalcAmounts;
                                                              END;

                                                   CaptionML=ENU=Corrected Final Result;
                                                   AutoFormatType=1 }
    { 90  ;   ;Calculated Preclosure Result;Decimal;
                                                   FieldClass=Normal;
                                                   CaptionML=ENU=Calculated Preclosure Result;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 92  ;   ;Corrected Preclosure Result;Decimal;OnValidate=BEGIN
                                                                IF "Corrected Preclosure Result" < 0 THEN
                                                                  "Corrected Final Result" := "Corrected Preclosure Result"
                                                                ELSE
                                                                  "Corrected Final Result" := 100 * "Corrected Preclosure Result" / "Progress %" ;

                                                                CalcAmounts;
                                                              END;

                                                   CaptionML=ENU=Corrected Preclosure Result;
                                                   AutoFormatType=1 }
    { 95  ;   ;Previous Actual Precl. Result;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Project Preclosure Result"."Actual Preclosure Result" WHERE (Project No.=FIELD(Project No.),
                                                                                                                                 Posted=CONST(Yes),
                                                                                                                                 Posting Date=FIELD(Period Filter),
                                                                                                                                 Line No.=FIELD(Line Filter)));
                                                   CaptionML=ENU=Previous Actual Precl. Result;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 100 ;   ;Actual Preclosure Result;Decimal   ;FieldClass=Normal;
                                                   OnValidate=BEGIN
                                                                Cost := Cost + xRec."Actual Preclosure Result" - "Actual Preclosure Result";
                                                                IF "Actual Preclosure Result" <> xRec."Actual Preclosure Result" THEN  //*C001798.n
                                                                  CalcProgressPercActual();  //*C001798.n
                                                              END;

                                                   CaptionML=ENU=Actual Preclosure Result;
                                                   AutoFormatType=1 }
    { 105 ;   ;Posting Allowed     ;Boolean       ;InitValue=No;
                                                   CaptionML=ENU=Posting Allowed }
    { 110 ;   ;Posted              ;Boolean       ;InitValue=No;
                                                   CaptionML=ENU=Posted;
                                                   Editable=No }
    { 120 ;   ;Account Sales       ;Code20        ;TableRelation="G/L Account".No.;
                                                   CaptionML=ENU=Account Salest;
                                                   Editable=No }
    { 130 ;   ;Balance Account Sales;Code20       ;TableRelation="G/L Account".No.;
                                                   CaptionML=ENU=Balance Account Sales;
                                                   Editable=No }
    { 140 ;   ;Comment             ;Text50        ;CaptionML=ENU=Comment }
    { 150 ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Posted by;
                                                   Editable=No }
    { 160 ;   ;Process Date        ;Date          ;CaptionML=ENU=Posted on Date;
                                                   Editable=No }
    { 170 ;   ;G/L Register No. Sales;Integer     ;CaptionML=ENU=G/L Register No. Sales }
    { 180 ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No.;
                                                   Description=Used For Exchange }
    { 190 ;   ;Progress Date       ;Date          ;CaptionML=ENU=Progress Date;
                                                   Editable=No }
    { 200 ;   ;Prognosis Date      ;Date          ;CaptionML=ENU=Prognosis Date;
                                                   Editable=No }
    { 205 ;   ;Prognosis Level     ;Option        ;CaptionML=ENU=Prognosis Level;
                                                   OptionCaptionML=ENU=Detailed,,Rough;
                                                   OptionString=Detailed,,Rough;
                                                   Editable=No }
    { 210 ;   ;Calculated Turnover ;Decimal       ;CaptionML=ENU=Calculated Turnover;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 220 ;   ;Previous Turnover   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Project Preclosure Result".Turnover WHERE (Project No.=FIELD(Project No.),
                                                                                                               Posted=CONST(Yes)));
                                                   CaptionML=ENU=Previous Turnover;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 230 ;   ;Turnover            ;Decimal       ;CaptionML=ENU=Turnover;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 240 ;   ;Calculated Cost     ;Decimal       ;CaptionML=ENU=Calculated Cost;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 250 ;   ;Corrected Cost      ;Decimal       ;CaptionML=ENU=Corrected Cost;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 260 ;   ;Previous Cost       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Project Preclosure Result".Cost WHERE (Project No.=FIELD(Project No.),
                                                                                                           Posted=CONST(Yes)));
                                                   CaptionML=ENU=Previous Cost;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 270 ;   ;Cost                ;Decimal       ;CaptionML=ENU=Cost;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 280 ;   ;Account Cost        ;Code20        ;TableRelation="G/L Account".No.;
                                                   CaptionML=ENU=Account Cost;
                                                   Editable=No }
    { 290 ;   ;Balance Account Cost;Code20        ;TableRelation="G/L Account".No.;
                                                   CaptionML=ENU=Balance Account Cost;
                                                   Editable=No }
    { 300 ;   ;G/L Register No. Cost;Integer      ;CaptionML=ENU=G/L Register No. Cost }
    { 310 ;   ;Result Type         ;Option        ;OnValidate=VAR
                                                                HoldRec@1100525000 : Record 11012093;
                                                              BEGIN
                                                                ProjectRec.GET("Project No.");
                                                                IF "Result Type" = "Result Type"::"Provision Loss" THEN BEGIN
                                                                  ProjectRec.TESTFIELD("Provision Loss", TRUE);
                                                                  CheckPreclResultPresent(TRUE);
                                                                END ELSE
                                                                  IF (ProjectRec."Preclosure Result" = ProjectRec."Preclosure Result"::No) THEN
                                                                    FIELDERROR("Result Type");

                                                                IF ProjectRec."Allow Precl. R./Prov. Loss" = ProjectRec."Allow Precl. R./Prov. Loss"::No THEN
                                                                  ERROR(Text005, ProjectRec.FIELDCAPTION("Allow Precl. R./Prov. Loss"));

                                                                IF (ProjectRec."Allow Precl. R./Prov. Loss" = ProjectRec."Allow Precl. R./Prov. Loss"::"Preclosure Result") AND
                                                                   ("Result Type" = "Result Type"::"Provision Loss") THEN
                                                                BEGIN
                                                                  IF (ProjectRec."Preclosure Result" = ProjectRec."Preclosure Result"::No) THEN
                                                                    ERROR(Text004, ProjectRec.FIELDCAPTION("Allow Precl. R./Prov. Loss"),
                                                                    ProjectRec.FIELDCAPTION("Provision Loss"))
                                                                  ELSE
                                                                    "Result Type" := "Result Type"::"Preclosure Result";
                                                                END;

                                                                IF (ProjectRec."Allow Precl. R./Prov. Loss" = ProjectRec."Allow Precl. R./Prov. Loss"::"Provision Loss") AND
                                                                     ("Result Type" = "Result Type" ::"Preclosure Result") THEN
                                                                BEGIN
                                                                  IF NOT ProjectRec."Provision Loss" THEN
                                                                    ERROR(Text004, ProjectRec.FIELDCAPTION("Allow Precl. R./Prov. Loss"),
                                                                          ProjectRec.FIELDCAPTION(ProjectRec."Preclosure Result"))
                                                                  ELSE
                                                                    "Result Type" := "Result Type"::"Provision Loss";
                                                                END;






                                                                //Initialize Record
                                                                HoldRec := Rec;
                                                                INIT;
                                                                "Result Type" := HoldRec."Result Type";
                                                                "Global Dimension 1 Code" := HoldRec."Global Dimension 1 Code";
                                                                IF CurrFieldNo > 0 THEN
                                                                  CALCFIELDS("Project Description");
                                                              END;

                                                   CaptionML=ENU=Result Type;
                                                   OptionCaptionML=ENU=Preclosure Result,Provision Loss;
                                                   OptionString=Preclosure Result,Provision Loss }
    { 320 ;   ;Calculated Provision;Decimal       ;CaptionML=ENU=Calculated Provision;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 340 ;   ;Actual Provision    ;Decimal       ;OnValidate=BEGIN
                                                                CheckProvisionLossAmount;
                                                              END;

                                                   CaptionML=ENU=Actual Provision;
                                                   AutoFormatType=1 }
    { 350 ;   ;Previous Actual Provision;Decimal  ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Project Preclosure Result"."Actual Provision" WHERE (Project No.=FIELD(Project No.),
                                                                                                                         Posted=CONST(Yes)));
                                                   CaptionML=ENU=Previous Actual Provision;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 360 ;   ;Prognosis Total Cost;Decimal       ;CaptionML=ENU=Prognosis Total Cost;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 370 ;   ;Prognosis Total Revenues;Decimal   ;CaptionML=ENU=Prognosis Total Revenues;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 380 ;   ;Prognosis Financial Result;Decimal ;CaptionML=ENU=Prognosis Financial Result;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 400 ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   Editable=No;
                                                   CaptionClass='1,1,1' }
    { 410 ;   ;Period Filter       ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Period Filter }
    { 415 ;   ;Line Filter         ;Integer       ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Line Filter }
    { 420 ;   ;Purchase Result     ;Decimal       ;CaptionML=ENU=Purchase Result;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 430 ;   ;Project Status      ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job."Project Status" WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=ENU=Project Status;
                                                   OptionCaptionML=ENU=Estimation,Preparation,Production,Technical Finished,Administrative Finished,Finished,Archive,Archived;
                                                   OptionString=Estimation,Preparation,Production,Technical Finished,Administrative Finished,Finished,Archive,Archived;
                                                   Editable=No }
    { 440 ;   ;Project Manager     ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job."Project Manager" WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=ENU=Project Manager;
                                                   Editable=No }
    { 450 ;   ;Name Project Manager;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Full Name" WHERE (No.=FIELD(Project Manager)));
                                                   CaptionML=ENU=Name Project Manager;
                                                   Editable=No }
    { 460 ;   ;Project Type        ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job."Project Type" WHERE (No.=FIELD(Project No.)));
                                                   TableRelation="Project Type".Code;
                                                   CaptionML=ENU=Project Type;
                                                   Editable=No }
    { 470 ;   ;Prognosis Revenue   ;Decimal       ;CaptionML=ENU=Prognosis Revenue;
                                                   Editable=No;
                                                   AutoFormatType=1 }
  }
  KEYS
  {
    {    ;Project No.,Posting Date,Line No.       ;Clustered=Yes }
    {    ;Project No.,Posted                      ;SumIndexFields=Actual Preclosure Result,Actual Provision,Turnover,Cost }
    {    ;Project No.,Line No.                     }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ProjectRec@11012006 : Record 11072003;
      Text001@1210190002 : TextConst 'ENU="Already posted Project %1 Posting Date %2 "';
      ProjectPreclResultRec@1100525000 : Record 11012093;
      Text002@1100525001 : TextConst 'ENU=A Preclosure Result is present for Project %1. Provision is not allowed anymore.';
      Text003@1100525002 : TextConst 'ENU=The Sum of Provision Loss may not exceed 0 (Project %1)."';
      Text004@1100525003 : TextConst 'ENU=%1 or %2 must be active.';
      DimMgt@1100525004 : Codeunit 408;
      DPA_Management@1100000999 : Codeunit 11012783;
      Text005@1210190000 : TextConst 'ENU=%1 must be active.';
      Text007@1100528240 : TextConst 'ENU="Already Project %1 at Posting Date later than %2 "';
      Text006@1100528241 : TextConst 'ENU="Already Project %1 at Posting Date %2 "';

    PROCEDURE CheckPreclResultPresent@1100525000(ShowErrorMessage@1100525000 : Boolean) : Boolean;
    BEGIN
      ProjectPreclResultRec.RESET;
      ProjectPreclResultRec.SETRANGE("Project No.", "Project No.");
      ProjectPreclResultRec.SETRANGE("Result Type", ProjectPreclResultRec."Result Type"::"Preclosure Result");
      ProjectPreclResultRec.SETFILTER("Posting Date", '<>%1', xRec."Posting Date");
      IF NOT ProjectPreclResultRec.ISEMPTY THEN
        IF ShowErrorMessage THEN
          ERROR(Text002,"Project No.")
        ELSE
          EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE CheckProvisionLossAmount@1100525001();
    BEGIN
      CALCFIELDS("Previous Actual Provision");
      IF "Actual Provision" + "Previous Actual Provision" > 0 THEN
        ERROR(Text003, "Project No.")
    END;

    PROCEDURE CalcAmounts@1100525002();
    VAR
      OldAmt@1100409000 : Decimal;
    BEGIN
      CALCFIELDS("Previous Actual Precl. Result", "Previous Cost");

      OldAmt := "Actual Preclosure Result";  //*C001798.n
      "Actual Preclosure Result" := "Corrected Preclosure Result" - "Previous Actual Precl. Result";
      IF "Actual Preclosure Result" <> OldAmt THEN  //*C001798.n
        CalcProgressPercActual();  //*C001798.n
      "Corrected Cost" := "Calculated Turnover" - "Corrected Preclosure Result";
      Cost := "Corrected Cost" - "Previous Cost";
    END;

    PROCEDURE CalcProgressPercActual@1100409004();
    VAR
      DampingRatioProj@1100409000 : Record 11072019;
      DampingRatioProj2@1100409002 : Record 11072019;
      ProgressPercAct@1100409001 : Decimal;
    BEGIN
      //*C001798.n
      IF "Result Type" = "Result Type"::"Preclosure Result" THEN BEGIN
        CALCFIELDS("Previous Actual Precl. Result");
        IF "Expected Final Result" <= 0 THEN
          EXIT  //Calculation "Progress % Actual" not possible ('Act. Preclosure Result' not depending on this %), leave it as it is
        ELSE BEGIN
          IF NOT DampingRatioProj.FINDSET THEN
            "Progress % Actual" := ("Actual Preclosure Result" + "Previous Actual Precl. Result") /  "Expected Final Result" * 100
          ELSE BEGIN
            REPEAT
              IF DampingRatioProj.Ratio <> 0 THEN BEGIN
                ProgressPercAct :=
                  ("Actual Preclosure Result" + "Previous Actual Precl. Result") /
                  (DampingRatioProj.Ratio * "Expected Final Result") * 100;
                DampingRatioProj2.SETFILTER("Until Production", '>=%1', ROUND(ProgressPercAct, 1, '>'));
                IF DampingRatioProj2.FINDFIRST THEN BEGIN
                  // If calculate percentage is in range of current Damping record (used percentage for damping)
                  IF DampingRatioProj2."Until Production" = DampingRatioProj."Until Production" THEN BEGIN
                    "Progress % Actual" := ProgressPercAct;
                    EXIT;
                  END;
                END;
              END;
            UNTIL DampingRatioProj.NEXT = 0;
            ProgressPercAct := ("Actual Preclosure Result" + "Previous Actual Precl. Result") /  "Expected Final Result" * 100;
            IF ProgressPercAct > DampingRatioProj."Until Production" THEN
              "Progress % Actual" := ProgressPercAct;
            //Calculation "Progress % Actual" not possible, leave it as it is
          END;
        END;
      END;
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11012093) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11012093');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Project Preclosure Result", "Global Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Global Dimension 1 Code");
    END;

    BEGIN
    END.
  }
}

