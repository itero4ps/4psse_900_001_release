OBJECT Table 11012115 EP Hour Accounting
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               JobsSetup.GET;

               IF "No." = '' THEN BEGIN
                 TestNoSeries;
                 NoSeriesMgt.InitSeries(GetNoSeriesCode,xRec."No. Series",0D,"No.","No. Series");
               END;

               //VALIDATE(Week,Week);
             END;

    OnModify=BEGIN
               //VALIDATE(Week,Week);
             END;

    OnDelete=BEGIN
               DeleteLines;
             END;

    CaptionML=ENU=Hours Accounting EP;
    LookupPageID=Page11020438;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  JobsSetup.GET;
                                                                  NoSeriesMgt.TestManual(GetNoSeriesCode);
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 20  ;   ;Employee No.        ;Code20        ;TableRelation=Employee.No.;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS(Name);
                                                                CALCFIELDS("Licence plate");
                                                              END;

                                                   CaptionML=ENU=Employee }
    { 30  ;   ;Name                ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Full Name" WHERE (No.=FIELD(Employee No.)));
                                                   CaptionML=ENU=Name;
                                                   Editable=No }
    { 40  ;   ;Status              ;Option        ;CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=" ,Entered,Checked,Posted";
                                                   OptionString=[ ,Entered,Checked,Posted] }
    { 50  ;   ;Week                ;Integer       ;OnValidate=BEGIN
                                                                IF Year = 0 THEN
                                                                  Year := DATE2DMY(TODAY, 3);

                                                                VALIDATE(Year,Year);

                                                                Date.RESET;
                                                                Date.SETRANGE("Period Type",Date."Period Type"::Week);
                                                                Date.SETRANGE("Period No.",Week);
                                                                Date.SETRANGE("Period Start",CALCDATE('<-3D>',StartDateYear),YearEndDate);
                                                                Date.SETRANGE("Period End",StartDateYear,CALCDATE('<+3D>',YearEndDate));
                                                                IF NOT Date.FIND('-') THEN
                                                                  FIELDERROR(Week);
                                                              END;

                                                   OnLookup=VAR
                                                              DateSelectionManagement@1100409000 : Codeunit 11130005;
                                                            BEGIN
                                                              DateSelectionManagement.GetWeekYear(Week, Year);
                                                              VALIDATE(Week);
                                                            END;

                                                   CaptionML=ENU=Week;
                                                   MinValue=1;
                                                   MaxValue=53 }
    { 60  ;   ;Year                ;Integer       ;OnValidate=BEGIN
                                                                Date.RESET;
                                                                Date.SETRANGE("Period Type",Date."Period Type"::Year);
                                                                Date.SETRANGE("Period No.",Year);
                                                                IF NOT Date.FIND('-') THEN
                                                                  FIELDERROR(Year);

                                                                StartDateYear := Date."Period Start";
                                                                YearEndDate := Date."Period End";
                                                              END;

                                                   CaptionML=ENU=Year;
                                                   MinValue=1 }
    { 70  ;   ;Licence plate       ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Licence Plate" WHERE (No.=FIELD(Employee No.)));
                                                   CaptionML=ENU=Licence Plate;
                                                   Editable=No }
    { 107 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      JobsSetup@1100485000 : Record 315;
      HourAccountingEP@1100485001 : Record 11012115;
      HourAccountingLine@1100485010 : Record 11012116;
      NoSeriesMgt@1100485002 : Codeunit 396;
      Date@1100485003 : Record 2000000007;
      StartDateYear@1100485008 : Date;
      YearEndDate@1100485007 : Date;

    PROCEDURE AssistEdit@1(OldHourAccountingEP@1000 : Record 11012115) : Boolean;
    BEGIN
      WITH HourAccountingEP DO BEGIN
        HourAccountingEP := Rec;
        JobsSetup.GET;
        TestNoSeries;
        IF NoSeriesMgt.SelectSeries(GetNoSeriesCode,OldHourAccountingEP."No. Series","No. Series") THEN BEGIN
          JobsSetup.GET;
          TestNoSeries;
          NoSeriesMgt.SetSeries("No.");
          Rec := HourAccountingEP;
          EXIT(TRUE);
        END;
      END;
    END;

    LOCAL PROCEDURE TestNoSeries@6() : Boolean;
    BEGIN
      JobsSetup.TESTFIELD("Hour Accounting EP Nos.");
    END;

    LOCAL PROCEDURE GetNoSeriesCode@9() : Code[10];
    BEGIN
      EXIT(JobsSetup."Hour Accounting EP Nos.");
    END;

    PROCEDURE DeleteLines@1100485000();
    BEGIN
      HourAccountingLine.SETRANGE("Document No.","No.");
      IF HourAccountingLine.FIND('-') THEN BEGIN
        REPEAT
          HourAccountingLine.DELETE(TRUE);
        UNTIL HourAccountingLine.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

