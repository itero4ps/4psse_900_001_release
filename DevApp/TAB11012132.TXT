OBJECT Table 11012132 Vendor INSBOU Login
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ETIMVendorCentralMgt@1100525000 : Record 11012304;
               ApplicationManagement@1100528300 : Codeunit 1;
             BEGIN
               "Vendor GLN" := ETIMVendorCentralMgt.GetGLNFromVendorNo("Vendor No.");
               "Application Id" := ApplicationManagement.ApplicationVersion;
               IF (Type <> 0) THEN
                 FillDefaults;

               UpdateConsumedWebService(1);
             END;

    OnModify=BEGIN
               UpdateConsumedWebService(2);
             END;

    OnDelete=BEGIN
               UpdateConsumedWebService(3);
             END;

    OnRename=BEGIN
               ERROR('');
             END;

    CaptionML=ENU=Vendor INSBOU Login;
  }
  FIELDS
  {
    { 10  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=ENU=Vendor No.;
                                                   NotBlank=Yes }
    { 20  ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,Order,Order Response,Despatch Advice,,,,Price Cataloque,,,,,,Invoice";
                                                   OptionString=[ ,ORDERS,ORDRSP,DESADV,,,,PRICAT,,,,,,INVOIC] }
    { 30  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                IF (Type = 0) THEN
                                                                  TESTFIELD("Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=ENU=Shortcut Dimension 1 Code;
                                                   CaptionClass='1,2,1' }
    { 40  ;   ;URL                 ;Text250       ;ExtendedDatatype=URL;
                                                   CaptionML=ENU=URL }
    { 50  ;   ;User Domain         ;Text30        ;CaptionML=ENU=User Domain }
    { 60  ;   ;User Name           ;Text30        ;CaptionML=ENU=User Name }
    { 70  ;   ;Password            ;Text30        ;ExtendedDatatype=Masked;
                                                   CaptionML=ENU=Password }
    { 80  ;   ;Vendor GLN          ;Code30        ;CaptionML=ENU=Vendor GLN }
    { 90  ;   ;Relation Id         ;Code30        ;CaptionML=ENU=Relation Id }
    { 100 ;   ;Consumed Web Service Code;Code20   ;TableRelation="Consumed Web Service";
                                                   CaptionML=ENU=Consumed Web Service Code;
                                                   Editable=No }
    { 110 ;   ;Application Id      ;Code50        ;CaptionML=ENU=Application Id }
    { 120 ;   ;Version             ;Code20        ;CaptionML=ENU=Version }
  }
  KEYS
  {
    {    ;Vendor No.,Type,Shortcut Dimension 1 Code;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100525000 : TextConst 'ENU=No more Free %1 %2 available.';
      Text001@1100525001 : TextConst 'ENU=SOAP Message: %1';

    LOCAL PROCEDURE UpdateConsumedWebService@1100525000(Action@1100525000 : Option);
    BEGIN
      CASE Action OF
        1: InsertConsumedWebService;
        2: ModifyConsumedWebService;
        3: DeleteConsumedWebService;
      END;
    END;

    LOCAL PROCEDURE InsertConsumedWebService@1100525001();
    VAR
      ConsumedWebService@1100525000 : Record 11229797;
    BEGIN
      IF ("Consumed Web Service Code" <> '') THEN
        FIELDERROR("Consumed Web Service Code");
      DeleteConsumedWebService;

      ConsumedWebService.INIT;
      ConsumedWebService.Code := GetFreeConsumedWebServiceCode;
      ConsumedWebService.Description := STRSUBSTNO('INSBOU %1 %2 %3', "Vendor No.", FORMAT(Type), "Shortcut Dimension 1 Code");
      FillFieldsConsumedWebService(ConsumedWebService);
      ConsumedWebService.INSERT(TRUE);

      "Consumed Web Service Code" := ConsumedWebService.Code;

      InsertConsumedWebServiceLines(ConsumedWebService, 1); //GetAvailableMessages
      InsertConsumedWebServiceLines(ConsumedWebService, 2); //GetMessage
      InsertConsumedWebServiceLines(ConsumedWebService, 3); //DeleteMessage
      InsertConsumedWebServiceLines(ConsumedWebService, 4); //PostMessage
    END;

    LOCAL PROCEDURE ModifyConsumedWebService@1100525002();
    VAR
      ConsumedWebService@1100525000 : Record 11229797;
    BEGIN
      IF ("Consumed Web Service Code" = '') THEN
        UpdateConsumedWebService(1);

      IF (NOT ConsumedWebService.GET("Consumed Web Service Code")) THEN BEGIN
        InsertConsumedWebService;
        ConsumedWebService.GET("Consumed Web Service Code");
      END;
      FillFieldsConsumedWebService(ConsumedWebService);
      FillHeaderXML(ConsumedWebService);
      ConsumedWebService.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE DeleteConsumedWebService@1100525003();
    VAR
      ConsumedWebService@1100525000 : Record 11229797;
      ConsumedWebServiceLine@1100528300 : Record 11229798;
    BEGIN
      IF ("Consumed Web Service Code" = '') THEN
        EXIT;

      ConsumedWebServiceLine.SETRANGE("Web Service Code", "Consumed Web Service Code");
      ConsumedWebServiceLine.DELETEALL;
      ConsumedWebService.SETRANGE(Code, "Consumed Web Service Code");
      ConsumedWebService.DELETEALL;
    END;

    LOCAL PROCEDURE FillFieldsConsumedWebService@1100525005(VAR ConsumedWebService@1100525000 : Record 11229797);
    VAR
      StringFunctions@1100528300 : Codeunit 11012273;
      ConsumedWebServiceMgt@1100528301 : Codeunit 11229310;
    BEGIN
      ConsumedWebService.VALIDATE(Login, "User Name");
      IF ("User Domain" <> '') THEN
        ConsumedWebService.VALIDATE(Login, "User Domain" + '\' + "User Name")
      ELSE
        ConsumedWebService.VALIDATE(Login, "User Name");
      ConsumedWebService.VALIDATE(Password, Password);
      ConsumedWebService.VALIDATE("Web Service URL", URL);
      ConsumedWebService.Active := TRUE;
      ConsumedWebService."Log Communication" := TRUE;
      ConsumedWebService."Content Type" := 'text/xml; charset=utf-8';
      IF (URL <> '') THEN BEGIN
        IF (STRPOS(URL, '//') > 0) AND (StringFunctions.RSTRPOS(URL, '/')-7 > 0) THEN
          ConsumedWebService."SOAP Action" := LOWERCASE(
            COPYSTR(URL, 1, STRPOS(URL, '//')+1) +
            'www.' +
            COPYSTR(URL, STRPOS(URL, '//')+2, StringFunctions.RSTRPOS(URL, '/')-7));
      END;
    END;

    LOCAL PROCEDURE InsertConsumedWebServiceLines@1100525006(ConsumedWebService@1100525000 : Record 11229797;MethodType@1100528301 : Integer);
    VAR
      ConsumedWebServiceLine@1100525001 : Record 11229798;
    BEGIN
      ConsumedWebServiceLine.INIT;
      ConsumedWebServiceLine."Web Service Code" := ConsumedWebService.Code;
      ConsumedWebServiceLine."Seq. No." := MethodType * 10;
      CASE MethodType OF
        1: BEGIN
          ConsumedWebServiceLine."Method Name" := 'GetAvailableMessages';
        END;
        2: BEGIN
          ConsumedWebServiceLine."Method Name" := 'GetMessage';
        END;
        3: BEGIN
          ConsumedWebServiceLine."Method Name" := 'DeleteMessage';
        END;
        4: BEGIN
          ConsumedWebServiceLine."Method Name" := 'PostMessage';
        END;
      END;
      ConsumedWebServiceLine.Active := TRUE;
      ConsumedWebServiceLine."Log Communication" := TRUE;
      ConsumedWebServiceLine.Description := STRSUBSTNO(Text001, ConsumedWebServiceLine."Method Name");
      ConsumedWebServiceLine."Prefix Method Namespace" := 'etim';
      ConsumedWebServiceLine."Method Namespace" := 'http://etim.nl/xmlschemas/messageservice/2.40';
      ConsumedWebServiceLine."Request Root Tag" := STRSUBSTNO('%1Request', ConsumedWebServiceLine."Method Name");
      ConsumedWebServiceLine."Response Root Tag" := STRSUBSTNO('%1Response', ConsumedWebServiceLine."Method Name");
      ConsumedWebServiceLine.INSERT(TRUE);
    END;

    LOCAL PROCEDURE GetFreeConsumedWebServiceCode@1100525004() : Code[20];
    VAR
      ConsumedWebService@1100525000 : Record 11229797;
      Prefix@1100525001 : Code[10];
      Counter@1100525002 : Integer;
    BEGIN
      Prefix := 'INSBOU-';
      FOR Counter := 1 TO 999999 DO BEGIN
        IF (NOT ConsumedWebService.GET(Prefix + FORMAT(Counter))) THEN
          EXIT(Prefix + FORMAT(Counter));
      END;
      ERROR(Text000, ConsumedWebService.TABLECAPTION, ConsumedWebService.FIELDCAPTION(Code));
    END;

    LOCAL PROCEDURE FillHeaderXML@1100528309(VAR ConsumedWebService@1100528300 : Record 11229797);
    VAR
      ConsumedWebServiceLine@1100528304 : Record 11229798;
      TempBlob@1100528302 : Record 99008535;
      FileManagement@1100528301 : Codeunit 419;
      ClientFileName@1100528303 : Text;
      ClientFolderName@1100528305 : Text;
    BEGIN
      IF (ConsumedWebService.Login = '') OR (ConsumedWebService.Password = '') THEN BEGIN
        ConsumedWebService."Use Custom SOAP Header" := FALSE;
        CLEAR(ConsumedWebService."Custom SOAP Header XML");
        EXIT;
      END;

      ClientFolderName := FileManagement.ClientTempFolderName + '\' + FORMAT(DELCHR(CREATEGUID, '<=>', '{}'));
      FileManagement.CreateClientDirectory(ClientFolderName);
      ClientFileName := ClientFolderName + '\' + FORMAT(DELCHR(CREATEGUID, '<=>', '{}')) + '.xml';

      ConsumedWebServiceLine.SETRANGE("Web Service Code", ConsumedWebService.Code);
      ConsumedWebServiceLine.FINDFIRST;

      FileManagement.AppendTextLineToClientFile(ClientFileName, STRSUBSTNO('<%1:Header>', ConsumedWebService."Prefix Envelope Namespace"));
      FileManagement.AppendTextLineToClientFile(ClientFileName,
        STRSUBSTNO('<%1:CustomInfo><%2:IsTestMessage>false</%2:IsTestMessage><%2:IsContentCompressed>false</%2:IsContentCompressed></%1:CustomInfo>',
        ConsumedWebServiceLine."Prefix Method Namespace", ConsumedWebServiceLine."Prefix Method Namespace",
        ConsumedWebServiceLine."Prefix Method Namespace"));
      FileManagement.AppendTextLineToClientFile(ClientFileName, STRSUBSTNO('<%1:AuthenticationInfo>', ConsumedWebServiceLine."Prefix Method Namespace"));
      FileManagement.AppendTextLineToClientFile(ClientFileName, STRSUBSTNO('<%1:ApplicationId>%2</%1:ApplicationId>',
        ConsumedWebServiceLine."Prefix Method Namespace", "Application Id"));
      FileManagement.AppendTextLineToClientFile(ClientFileName, STRSUBSTNO('<%1:VersionId>%2</%1:VersionId>',
        ConsumedWebServiceLine."Prefix Method Namespace", Version));
      FileManagement.AppendTextLineToClientFile(ClientFileName, STRSUBSTNO('<%1:RelationId>%2</%1:RelationId>',
        ConsumedWebServiceLine."Prefix Method Namespace", "Relation Id"));
      FileManagement.AppendTextLineToClientFile(ClientFileName, STRSUBSTNO('<%1:UserId>%2</%1:UserId>',
        ConsumedWebServiceLine."Prefix Method Namespace", ConsumedWebService.Login));
      FileManagement.AppendTextLineToClientFile(ClientFileName, STRSUBSTNO('<%1:Password>%2</%1:Password>',
        ConsumedWebServiceLine."Prefix Method Namespace", ConsumedWebService.Password));
      FileManagement.AppendTextLineToClientFile(ClientFileName, STRSUBSTNO('</%1:AuthenticationInfo>', ConsumedWebServiceLine."Prefix Method Namespace"));
      FileManagement.AppendTextLineToClientFile(ClientFileName, STRSUBSTNO('</%1:Header>', ConsumedWebService."Prefix Envelope Namespace"));

      FileManagement.BLOBImport4PS(TempBlob, ClientFileName, FALSE);
      ConsumedWebService."Custom SOAP Header XML" := TempBlob.Blob;
      ConsumedWebService."Use Custom SOAP Header" := TRUE;
    END;

    LOCAL PROCEDURE FillDefaults@1100528300();
    VAR
      VendorINSBOULogin@1100528301 : Record 11012132;
    BEGIN
      IF (NOT VendorINSBOULogin.GET("Vendor No.", 0, '')) THEN
        EXIT;

      URL := VendorINSBOULogin.URL;
      "User Domain" := VendorINSBOULogin."User Domain";
      "User Name" := VendorINSBOULogin."User Name";
      Password := VendorINSBOULogin.Password;
      "Relation Id" := VendorINSBOULogin."Relation Id";
      Version := VendorINSBOULogin.Version;
    END;

    BEGIN
    END.
  }
}

