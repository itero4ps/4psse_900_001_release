OBJECT Table 11012137 Debrief Purch. Inv Line(Donau)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Purch. Inv. Line (Donau);
    LookupPageID=Page529;
    DrillDownPageID=Page529;
  }
  FIELDS
  {
    { 10  ;   ;Company             ;Text30        ;CaptionML=ENU=Company }
    { 20  ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No. }
    { 30  ;   ;No.                 ;Code20        ;CaptionML=ENU=No. }
    { 35  ;   ;Receiving Company   ;Text30        ;CaptionML=ENU=Receiving Company }
    { 40  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Shortcut Dimension 1 Code;
                                                   CaptionClass='1,2,1' }
    { 50  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Shortcut Dimension 2 Code;
                                                   CaptionClass='1,2,2' }
    { 55  ;   ;Vehicle Code        ;Code20        ;CaptionML=ENU=Vehicle Code }
    { 60  ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                   CaptionML=ENU=Project No. }
    { 70  ;   ;Line Amount         ;Decimal       ;CaptionML=ENU=Line Amount;
                                                   AutoFormatType=1 }
    { 71  ;   ;Quantity            ;Decimal       ;CaptionML=ENU=Quantity }
    { 72  ;   ;G/L Entry           ;Code20        ;CaptionML=ENU=G/L Entry }
    { 73  ;   ;Service Order No.   ;Code20        ;CaptionML=ENU=Service Order No. }
    { 74  ;   ;Service Contract No.;Code20        ;CaptionML=ENU=Service Contract No. }
    { 80  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT Prod. Posting Group }
    { 85  ;   ;Unit Of Measure Code;Text10        ;CaptionML=ENU=Unit Of Measure Code }
    { 90  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 95  ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order;
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order;
                                                   Description=copy from tab38 }
    { 96  ;   ;Approval Line       ;Boolean       ;CaptionML=ENU=Approval Line }
    { 100 ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 110 ;   ;Inserted            ;Boolean       ;CaptionML=ENU=Inserted }
  }
  KEYS
  {
    {    ;Document No.,Line No.                   ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DPA_Management@1100000999 : Codeunit 11012783;

    PROCEDURE AddHeaderInfo@1100525001() : Boolean;
    VAR
      DebriefPurchInvHDonau@1100525000 : Record 11012136;
      PurchInvHeader@1100525001 : Record 122;
      PurchCrMemoHdr@1100525002 : Record 124;
      PurchaseHeader@1100525003 : Record 38;
    BEGIN
      "Approval Line" := FALSE;

      DebriefPurchInvHDonau.SETCURRENTKEY(Company,"No.");
      DebriefPurchInvHDonau.SETRANGE(Company,COMPANYNAME);
      DebriefPurchInvHDonau.SETRANGE("No.","Document No.");
      IF NOT DebriefPurchInvHDonau.FINDFIRST THEN
        EXIT(FALSE);

      "Document Type" := DebriefPurchInvHDonau."Document Type";
      IF PurchaseHeader.GET("Document Type","Document No.") THEN
        EXIT(TRUE);

      IF "Document Type" = "Document Type"::"Credit Memo" THEN
        IF PurchCrMemoHdr.GET("Document No.") THEN BEGIN
          "Approval Line" := TRUE;
          EXIT(TRUE)
        END;

      IF "Document Type" = "Document Type"::Invoice THEN
        IF PurchInvHeader.GET("Document No.") THEN BEGIN
          "Approval Line" := TRUE;
          EXIT(TRUE)
        END;

      EXIT(FALSE);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11012137) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11012137');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Debrief Purch. Inv Line(Donau)", "Shortcut Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Shortcut Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Shortcut Dimension 1 Code");
    END;

    BEGIN
    END.
  }
}

