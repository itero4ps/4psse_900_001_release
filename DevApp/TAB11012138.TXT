OBJECT Table 11012138 Field Service Admin. Setup
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               UpdateProjSetupInterfaceActive();
             END;

    OnModify=BEGIN
               UpdateProjSetupInterfaceActive();

               IF "Field Service Administration" IN [
                 "Field Service Administration"::FieldVision
                 ]
               THEN BEGIN
                 "Number of History Orders" := 0;
                 "Export Service Location with" := 0;
                 "Serv. Location with Specs from" := 0;
               END;
             END;

    OnDelete=BEGIN
               IF ("Primary Key" = 'LOCK') OR ("Primary Key" = 'NAS')THEN
                 ERROR(Text002);

               "Field Service Active" := FALSE;
               UpdateProjSetupInterfaceActive();
             END;

    OnRename=BEGIN
               ERROR(Text003);
             END;

    CaptionML=ENU=Field Service Setup;
  }
  FIELDS
  {
    { 10  ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key;
                                                   Description=Setup in record with 'Primary Key' is '' (empty) }
    { 20  ;   ;Field Service Active;Boolean       ;CaptionML=ENU=Field Service Active }
    { 25  ;   ;Automatic Exchange on;Option       ;CaptionML=ENU=Automatic Exchange on;
                                                   OptionCaptionML=ENU=Client,Navision Application Server;
                                                   OptionString=Client,NAS }
    { 30  ;   ;Field Service Administration;Option;CaptionML=ENU=Field Service Administration;
                                                   OptionCaptionML=ENU=Field Vision (Tensing),NEMO (PCA-Mobile);
                                                   OptionString=FieldVision,Nemo }
    { 40  ;   ;Ref. Point Sending SO;Integer      ;TableRelation="Reference Point".No. WHERE (Apply=CONST(ServOrder));
                                                   CaptionML=ENU=Ref. Point Sending Service Order;
                                                   BlankZero=Yes }
    { 50  ;   ;Reason Code Hours FSA;Code10       ;TableRelation="Reason Code".Code;
                                                   CaptionML=ENU=Reason Code Hours Field Service }
    { 60  ;   ;Number of History Orders;Integer   ;CaptionML=ENU=Number of History Service Orders;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 70  ;   ;Export Service Location with;Option;OnValidate=BEGIN
                                                                CASE "Export Service Location with" OF
                                                                  "Export Service Location with"::Installations:
                                                                    IF ("Serv. Location with Specs from" = "Serv. Location with Specs from"::Parts) OR
                                                                       ("Serv. Location with Specs from" = "Serv. Location with Specs from"::Both)
                                                                    THEN
                                                                      "Serv. Location with Specs from" := "Serv. Location with Specs from"::Installations;
                                                                  "Export Service Location with"::" ":
                                                                    "Serv. Location with Specs from" := "Serv. Location with Specs from"::" ";
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Export Service Location with;
                                                   OptionCaptionML=ENU=" ,Installations,Installation Parts";
                                                   OptionString=[ ,Installations,Parts];
                                                   Description=Also export installations when choosing parts, because parts per installation }
    { 71  ;   ;Serv. Location with Specs from;Option;
                                                   OnValidate=BEGIN
                                                                CASE "Serv. Location with Specs from" OF
                                                                  "Serv. Location with Specs from"::Installations:
                                                                    IF ("Export Service Location with" = "Export Service Location with"::" ") THEN
                                                                      FIELDERROR("Export Service Location with");
                                                                  "Serv. Location with Specs from"::Parts,
                                                                  "Serv. Location with Specs from"::Both:
                                                                    TESTFIELD("Export Service Location with", "Export Service Location with"::Parts);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Service Location with Specifications of;
                                                   OptionCaptionML=ENU=" ,Installations,Installation Parts,Both";
                                                   OptionString=[ ,Installations,Parts,Both] }
    { 80  ;   ;History Logbook Entries;Boolean    ;CaptionML=ENU=History Logbook Entries }
    { 100 ;   ;Export Directory    ;Text250       ;OnValidate=BEGIN
                                                                IF ("Export Directory" <> '') THEN BEGIN
                                                                  FileMgt.AddBackSlashToDirectoryName("Export Directory");
                                                                  IF ("Export Directory" = "Export Process Directory") THEN
                                                                    ERROR(Text000, FIELDCAPTION("Export Directory"), FIELDCAPTION("Export Process Directory"));
                                                                  IF ("Export Directory" = "Import Directory") THEN
                                                                    ERROR(Text000, FIELDCAPTION("Export Directory"), FIELDCAPTION("Import Directory"));
                                                                  IF ("Export Directory" = "Import Process Directory") THEN
                                                                    ERROR(Text000, FIELDCAPTION("Export Directory"), FIELDCAPTION("Import Process Directory"));
                                                                  IF ("Export Directory" = "Import Error Directory") THEN
                                                                    ERROR(Text000, FIELDCAPTION("Export Directory"), FIELDCAPTION("Import Error Directory"));
                                                                  CheckDirectory(FIELDCAPTION("Export Directory"), "Export Directory");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Export Directory }
    { 101 ;   ;Export Process Directory;Text250   ;OnValidate=BEGIN
                                                                IF ("Export Process Directory" <> '') THEN BEGIN
                                                                  FileMgt.AddBackSlashToDirectoryName("Export Process Directory");
                                                                  IF ("Export Process Directory" = "Export Directory") THEN
                                                                    ERROR(Text000, FIELDCAPTION("Export Process Directory"), FIELDCAPTION("Export Directory"));
                                                                  IF ("Export Process Directory" = "Import Directory") THEN
                                                                    ERROR(Text000, FIELDCAPTION("Export Process Directory"), FIELDCAPTION("Import Directory"));
                                                                  IF ("Export Process Directory" = "Import Process Directory") THEN
                                                                    ERROR(Text000, FIELDCAPTION("Export Process Directory"), FIELDCAPTION("Import Process Directory"));
                                                                  IF ("Export Process Directory" = "Import Error Directory") THEN
                                                                    ERROR(Text000, FIELDCAPTION("Export Process Directory"), FIELDCAPTION("Import Error Directory"));
                                                                  CheckDirectory(FIELDCAPTION("Export Process Directory"), "Export Process Directory");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Export Process Directory }
    { 110 ;   ;Time Interval Employees;Integer    ;CaptionML=ENU=Time Interval Other Data;
                                                   Description=Not only employees anymore, also customers, items, etc. }
    { 111 ;   ;Interval Unit Employees;Option     ;CaptionML=ENU=Interval Unit Other Data;
                                                   OptionCaptionML=ENU=Hour,Minute;
                                                   OptionString=Hour,Minute }
    { 112 ;   ;Last Interval Check Employees;DateTime;
                                                   CaptionML=ENU=Last Interval Check Other Data;
                                                   Description=Now in record 'LOCK' and/or 'NAS', see note at field 900 }
    { 115 ;   ;Time Interval Service Orders;Integer;
                                                   CaptionML=ENU=Time Interval Service Orders }
    { 116 ;   ;Interval Unit Service Orders;Option;CaptionML=ENU=Interval Unit Service Orders;
                                                   OptionCaptionML=ENU=Hour,Minute;
                                                   OptionString=Hour,Minute }
    { 117 ;   ;Last Interval Check Sv.Orders;DateTime;
                                                   CaptionML=ENU=Last Interval Check Service Orders;
                                                   Description=Now in record 'LOCK' and/or 'NAS', see note at field 900 }
    { 120 ;   ;Time Interval Reference Data;Integer;
                                                   CaptionML=ENU=Time Interval Reference Data }
    { 121 ;   ;Interval Unit Reference Data;Option;CaptionML=ENU=Interval Unit Reference Data;
                                                   OptionCaptionML=ENU=Hour,Minute;
                                                   OptionString=Hour,Minute }
    { 122 ;   ;Last Interval Check Ref. Data;DateTime;
                                                   CaptionML=ENU=Last Interval Check Reference Data;
                                                   Description=Now in record 'LOCK' and/or 'NAS', see note at field 900 }
    { 300 ;   ;Import Directory    ;Text250       ;OnValidate=BEGIN
                                                                IF ("Import Directory" <> '') THEN BEGIN
                                                                  FileMgt.AddBackSlashToDirectoryName("Import Directory");
                                                                  IF ("Import Directory" = "Import Process Directory") THEN
                                                                    ERROR(Text000, FIELDCAPTION("Import Directory"), FIELDCAPTION("Import Process Directory"));
                                                                  IF ("Import Directory" = "Import Error Directory") THEN
                                                                    ERROR(Text000, FIELDCAPTION("Import Directory"), FIELDCAPTION("Import Error Directory"));
                                                                  IF ("Import Directory" = "Export Directory") THEN
                                                                    ERROR(Text000, FIELDCAPTION("Import Directory"), FIELDCAPTION("Export Directory"));
                                                                  IF ("Import Directory" = "Export Process Directory") THEN
                                                                    ERROR(Text000, FIELDCAPTION("Import Directory"), FIELDCAPTION("Export Process Directory"));
                                                                  CheckDirectory(FIELDCAPTION("Import Directory"), "Import Directory");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Import Directory }
    { 301 ;   ;Import Process Directory;Text250   ;OnValidate=BEGIN
                                                                IF ("Import Process Directory" <> '') THEN BEGIN
                                                                  FileMgt.AddBackSlashToDirectoryName("Import Process Directory");
                                                                  IF ("Import Process Directory" = "Import Directory") THEN
                                                                    ERROR(Text000, FIELDCAPTION("Import Process Directory"), FIELDCAPTION("Import Directory"));
                                                                  IF ("Import Process Directory" = "Import Error Directory") THEN
                                                                    ERROR(Text000, FIELDCAPTION("Import Process Directory"), FIELDCAPTION("Import Error Directory"));
                                                                  IF ("Import Process Directory" = "Export Directory") THEN
                                                                    ERROR(Text000, FIELDCAPTION("Import Process Directory"), FIELDCAPTION("Export Directory"));
                                                                  IF ("Import Process Directory" = "Export Process Directory") THEN
                                                                    ERROR(Text000, FIELDCAPTION("Import Process Directory"), FIELDCAPTION("Export Process Directory"));
                                                                  CheckDirectory(FIELDCAPTION("Import Process Directory"), "Import Process Directory");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Import Process Directory }
    { 302 ;   ;Import Error Directory;Text250     ;OnValidate=BEGIN
                                                                IF ("Import Error Directory" <> '') THEN BEGIN
                                                                  FileMgt.AddBackSlashToDirectoryName("Import Error Directory");
                                                                  IF ("Import Error Directory" = "Import Directory") THEN
                                                                    ERROR(Text000, FIELDCAPTION("Import Error Directory"), FIELDCAPTION("Import Directory"));
                                                                  IF ("Import Error Directory" = "Import Process Directory") THEN
                                                                    ERROR(Text000, FIELDCAPTION("Import Error Directory"), FIELDCAPTION("Import Process Directory"));
                                                                  IF ("Import Error Directory" = "Export Directory") THEN
                                                                    ERROR(Text000, FIELDCAPTION("Import Error Directory"), FIELDCAPTION("Export Directory"));
                                                                  IF ("Import Error Directory" = "Export Process Directory") THEN
                                                                    ERROR(Text000, FIELDCAPTION("Import Error Directory"), FIELDCAPTION("Export Process Directory"));
                                                                  CheckDirectory(FIELDCAPTION("Import Error Directory"), "Import Error Directory");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Import Error Directory }
    { 315 ;   ;Time Interval Debrief;Integer      ;CaptionML=ENU=Time Interval Import }
    { 316 ;   ;Interval Unit Debrief;Option       ;CaptionML=ENU=Interval Unit Import;
                                                   OptionCaptionML=ENU=Hour,Minute;
                                                   OptionString=Hour,Minute }
    { 317 ;   ;Last Interval Check Debrief;DateTime;
                                                   CaptionML=ENU=Last Interval Check Import;
                                                   Description=Now in record 'LOCK' and/or 'NAS', see note at field 900 }
    { 900 ;   ;Autmatic Exchange Started by;Code50;TableRelation=User."User Name";
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Autmatic Exchange Started by;
                                                   Description=When on Client then in record with 'Primary Key' is 'LOCK', when through NAS then in record with key 'NAS' }
    { 901 ;   ;Autmatic Exchange Started on;DateTime;
                                                   CaptionML=ENU=Autmatic Exchange Started on;
                                                   Description=Idem }
    { 902 ;   ;Autmatic Exchange Last Active;DateTime;
                                                   CaptionML=ENU=Autmatic Exchange Started Last Active;
                                                   Description=Idem }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100485000 : TextConst 'ENU=''%1'' may not be equal to ''%2''.';
      Text001@1100485001 : TextConst 'ENU=%1 ''%2'' not present or no permission for this directory.';
      Text002@1100485003 : TextConst 'ENU=Delete not allowed.';
      Text003@1100485002 : TextConst 'ENU=Rename not allowed.';
      FileMgt@1100525000 : Codeunit 419;

    PROCEDURE UpdateProjSetupInterfaceActive@1100485000();
    VAR
      lvProjSetupRec@1100485000 : Record 315;
    BEGIN
      //* Field Service active also updated in jobs setup, for the reason that
      //* a test is also possible outside granule 'Field Service Interface'.
      //* Because of permission problems.

      IF ("Primary Key" <> '') THEN
        EXIT;

      lvProjSetupRec.GET;
      IF lvProjSetupRec."Field Service Active" <> "Field Service Active" THEN BEGIN
        lvProjSetupRec."Field Service Active" := "Field Service Active";
        lvProjSetupRec.MODIFY;
      END;
    END;

    PROCEDURE BackSlash@1100485002() : Text[1];
    BEGIN
      EXIT('\');
    END;

    PROCEDURE CheckDirectory@1100485001(IDirCaption@1100485002 : Text[100];IDirectory@1100485001 : Text[250]);
    VAR
      FileMgt@1100525000 : Codeunit 419;
    BEGIN
      IF NOT FileMgt.ClientDirectoryExists(IDirectory) THEN
        ERROR(Text001, IDirCaption, CONVERTSTR(IDirectory, '\', '/'));
    END;

    PROCEDURE TestFieldsActiveAndDirectories@1100485003(IFSASetupRec@1100485000 : Record 11012138);
    BEGIN
      WITH IFSASetupRec DO BEGIN
        TESTFIELD("Field Service Active", TRUE);
        TESTFIELD("Export Directory");
        TESTFIELD("Export Process Directory");
        TESTFIELD("Import Directory");
        TESTFIELD("Import Process Directory");
        TESTFIELD("Import Error Directory");

        CheckDirectory(FIELDCAPTION("Export Directory"), "Export Directory");
        CheckDirectory(FIELDCAPTION("Export Process Directory"), "Export Process Directory");
        CheckDirectory(FIELDCAPTION("Import Directory"), "Import Directory");
        CheckDirectory(FIELDCAPTION("Import Process Directory"), "Import Process Directory");
        CheckDirectory(FIELDCAPTION("Import Error Directory"), "Import Error Directory");
      END;
    END;

    BEGIN
    END.
  }
}

