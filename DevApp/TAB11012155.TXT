OBJECT Table 11012155 Recipe OLD
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CentrManagementCU.EditRecipe(Rec,1,xRec);
             END;

    OnModify=BEGIN
               CentrManagementCU.EditRecipe(Rec,2,xRec);
             END;

    OnDelete=BEGIN
               RecipeLineRec.SETRANGE("Estimate No.",'');
               RecipeLineRec.SETRANGE("Recipe Group","Recipe Group");
               RecipeLineRec.SETRANGE(Recipe,"No.");
               RecipeLineRec.DELETEALL(TRUE);

               //db.sn, 29-10-12: T000942
               EstCodeRec.SETFILTER("Estimate No.",'%1','');
               EstCodeRec.SETRANGE("Recipe Group","Recipe Group");
               EstCodeRec.SETRANGE(Recipe,"No.");
               EstCodeRec.DELETEALL;
               //db.en, 29-10-12: T000942

               EstPartLineRec.SETRANGE("Recipe Group","Recipe Group");
               EstPartLineRec.SETRANGE(Recipe,"No.");
               EstPartLineRec.DELETEALL(TRUE);  //db, 23-01-08

               TextRec.SETRANGE("Table Name",TextRec."Table Name"::Estimate);
               TextRec.SETRANGE(Group,"Recipe Group");
               TextRec.SETRANGE("No.","No.");
               TextRec.DELETEALL;

               CentrManagementCU.EditRecipe(Rec,4,xRec);
             END;

    OnRename=BEGIN
               ERROR(Text001);  //db, 09-12-13: 28769
             END;

    CaptionML=ENU=Recipe OLD;
    LookupPageID=Page11012164;
  }
  FIELDS
  {
    { 1   ;   ;Recipe Group        ;Code10        ;TableRelation="Estimate Group".No. WHERE (Type=CONST(Recipe));
                                                   CaptionML=ENU=Recipe Group;
                                                   NotBlank=Yes }
    { 10  ;   ;No.                 ;Code20        ;OnValidate=VAR
                                                                MainRec@1210190000 : Record 11012155;
                                                                RecipeLineRec@1100409007 : Record 11012156;
                                                                RecipeLineRec2@1100409006 : Record 11012156;
                                                                ChrgRec@1100409003 : Record 11012175;
                                                                ChrgRec2@1100409002 : Record 11012175;
                                                                EstCodeRec@1100409001 : Record 11012194;
                                                                EstCodeRec2@1100409000 : Record 11012194;
                                                              BEGIN
                                                                //db.sn, 18-08-11: M28184
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  MainRec := xRec;
                                                                  IF MainRec.FIND THEN BEGIN
                                                                    CentrManagementCU.EditRecipe(Rec,3,xRec);

                                                                    RecipeLineRec.SETRANGE("Estimate No.",'');
                                                                    RecipeLineRec.SETRANGE("Recipe Group",xRec."Recipe Group");
                                                                    RecipeLineRec.SETRANGE(Recipe,xRec."No.");
                                                                    IF RecipeLineRec.FINDSET(TRUE, FALSE) THEN BEGIN
                                                                      REPEAT
                                                                        RecipeLineRec2.COPY(RecipeLineRec);
                                                                        RecipeLineRec2."Recipe Group" := "Recipe Group";
                                                                        RecipeLineRec2.Recipe := "No.";
                                                                        RecipeLineRec2.INSERT;
                                                                      UNTIL RecipeLineRec.NEXT = 0;
                                                                      RecipeLineRec.DELETEALL;
                                                                    END;

                                                                    ChrgRec.SETFILTER("Estimate No.", '%1', '');
                                                                    ChrgRec.SETRANGE("Recipe Group",xRec."Recipe Group");
                                                                    ChrgRec.SETRANGE(Recipe,xRec."No.");
                                                                    IF ChrgRec.FINDSET(TRUE, FALSE) THEN BEGIN
                                                                      REPEAT
                                                                        ChrgRec2.COPY(ChrgRec);
                                                                        ChrgRec2."Recipe Group" := "Recipe Group";
                                                                        ChrgRec2.Recipe := "No.";
                                                                        ChrgRec2.INSERT;
                                                                      UNTIL ChrgRec.NEXT = 0;
                                                                      ChrgRec.DELETEALL;
                                                                    END;

                                                                    //db.sn, 29-10-12: T000942
                                                                    EstCodeRec.SETFILTER("Estimate No.", '%1', '');
                                                                    EstCodeRec.SETRANGE("Recipe Group",xRec."Recipe Group");
                                                                    EstCodeRec.SETRANGE(Recipe,xRec."No.");
                                                                    IF EstCodeRec.FINDSET(TRUE, FALSE) THEN BEGIN
                                                                      REPEAT
                                                                        EstCodeRec2.COPY(EstCodeRec);
                                                                        EstCodeRec2."Recipe Group" := "Recipe Group";
                                                                        EstCodeRec2.Recipe := "No.";
                                                                        EstCodeRec2.INSERT;
                                                                      UNTIL EstCodeRec.NEXT = 0;
                                                                      EstCodeRec.DELETEALL;
                                                                    END;
                                                                    //db.en, 29-10-12: T000942
                                                                  END;
                                                                END;
                                                                //db.en, 18-08-11: M28184
                                                              END;

                                                   CaptionML=ENU=No.;
                                                   NotBlank=Yes;
                                                   Description=Recipe Code }
    { 20  ;   ;Description         ;Text100       ;CaptionML=ENU=Description }
    { 25  ;   ;Recipe Group Description;Text50    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Estimate Group".Description WHERE (Type=CONST(Recipe),
                                                                                                          No.=FIELD(Recipe Group)));
                                                   CaptionML=ENU=Recipe Group Description;
                                                   Editable=No }
    { 30  ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure".Code;
                                                   CaptionML=ENU=Unit of Measure }
    { 40  ;   ;Manufacturer        ;Code20        ;TableRelation="ETIM Vendor (Central Mgt)".Code;
                                                   CaptionML=ENU=Manufacturer }
    { 45  ;   ;Rate Group          ;Code10        ;TableRelation="Rate Group".No.;
                                                   CaptionML=ENU=Rate Group }
    { 46  ;   ;Rate Code           ;Code10        ;TableRelation=IF (Rates Based On=CONST(Rate Group)) "Rate by Group"."Rate Code"
                                                                 ELSE IF (Rates Based On=CONST(Budget Rate)) "Budget Rate".Code;
                                                   OnValidate=BEGIN
                                                                CheckRateCode(0);
                                                              END;

                                                   CaptionML=ENU=Rate Code }
    { 47  ;   ;Rates Based On      ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Estimate Setup"."Rates Based On");
                                                   CaptionML=ENU=Rates Based On;
                                                   OptionCaptionML=ENU=Rate Group,Budget Rate;
                                                   OptionString=Rate Group,Budget Rate;
                                                   Editable=No }
    { 50  ;   ;Norm Group          ;Code10        ;TableRelation="Norm Group".Code;
                                                   OnValidate=BEGIN
                                                                IF "Norm Group" <> xRec."Norm Group" THEN BEGIN
                                                                  TESTFIELD(Fixed, FALSE);
                                                                  IF CONFIRM(Text000,FALSE) THEN BEGIN
                                                                    RecipeLineRec.SETRANGE("Estimate No.",'');
                                                                    RecipeLineRec.SETRANGE("Recipe Group","Recipe Group");
                                                                    RecipeLineRec.SETRANGE(Recipe,"No.");
                                                                    IF RecipeLineRec.FINDSET(TRUE, FALSE) THEN BEGIN
                                                                      REPEAT
                                                                        IF RecipeLineRec."Recipe (Child)" <> '' THEN
                                                                          RecipeLineRec."Norm Group" := ''  //db, 24-06-14: C010709
                                                                        ELSE
                                                                          RecipeLineRec."Norm Group" := "Norm Group";
                                                                        RecipeLineRec.DetermineNorm;
                                                                        RecipeLineRec.MODIFY(TRUE);  //db, 29-05-13: C007685
                                                                      UNTIL RecipeLineRec.NEXT = 0;
                                                                    END;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Norm Group }
    { 60  ;   ;Hours               ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Recipe Line OLD".Hours WHERE (Recipe Group=FIELD(Recipe Group),
                                                                                                  Recipe=FIELD(No.),
                                                                                                  Estimate No.=FILTER('')));
                                                   CaptionML=ENU=Hours;
                                                   DecimalPlaces=2:;
                                                   Editable=No }
    { 61  ;   ;Labor Amount        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Recipe Line OLD"."Labor Amount" WHERE (Recipe Group=FIELD(Recipe Group),
                                                                                                           Recipe=FIELD(No.),
                                                                                                           Estimate No.=FILTER('')));
                                                   CaptionML=ENU=Labor Amount;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 62  ;   ;Material Amount (Nett);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Recipe Line OLD"."Material Amount" WHERE (Recipe Group=FIELD(Recipe Group),
                                                                                                              Recipe=FIELD(No.),
                                                                                                              Estimate No.=FILTER('')));
                                                   CaptionML=ENU=Material Amount (Nett);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 63  ;   ;Subcontracting Amount;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Recipe Line OLD"."Subcontracting Amount" WHERE (Recipe Group=FIELD(Recipe Group),
                                                                                                                    Recipe=FIELD(No.),
                                                                                                                    Estimate No.=FILTER('')));
                                                   CaptionML=ENU=Subcontracting Amount;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 64  ;   ;Plant Amount        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Recipe Line OLD"."Plant Amount" WHERE (Recipe Group=FIELD(Recipe Group),
                                                                                                           Recipe=FIELD(No.),
                                                                                                           Estimate No.=FILTER('')));
                                                   CaptionML=ENU=Plant Amount;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 65  ;   ;Amount              ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Recipe Line OLD".Amount WHERE (Recipe Group=FIELD(Recipe Group),
                                                                                                   Recipe=FIELD(No.),
                                                                                                   Estimate No.=FILTER('')));
                                                   CaptionML=ENU=Amount;
                                                   NotBlank=No;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 66  ;   ;Material Amount (Gross);Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Recipe Line OLD"."Gross Amount" WHERE (Recipe Group=FIELD(Recipe Group),
                                                                                                           Recipe=FIELD(No.),
                                                                                                           Estimate No.=FILTER('')));
                                                   CaptionML=ENU=Material Amount (Gross);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 67  ;   ;Buy Back Amount     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Recipe Line OLD"."Buy Back Amount" WHERE (Recipe Group=FIELD(Recipe Group),
                                                                                                              Recipe=FIELD(No.),
                                                                                                              Estimate No.=FILTER('')));
                                                   CaptionML=ENU=Buy Back Amount;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 68  ;   ;Total Weight        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Recipe Line OLD"."Total Weight" WHERE (Recipe Group=FIELD(Recipe Group),
                                                                                                           Recipe=FIELD(No.),
                                                                                                           Estimate No.=FILTER('')));
                                                   CaptionML=ENU=Total Weight;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 70  ;   ;Blocked             ;Boolean       ;CaptionML=ENU=Blocked }
    { 80  ;   ;Length              ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE(Volume);
                                                              END;

                                                   CaptionML=ENU=Length;
                                                   DecimalPlaces=0:5 }
    { 81  ;   ;Width               ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE(Volume);
                                                              END;

                                                   CaptionML=ENU=Width;
                                                   DecimalPlaces=0:5 }
    { 82  ;   ;Height              ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE(Volume);
                                                              END;

                                                   CaptionML=ENU=Height;
                                                   DecimalPlaces=0:5 }
    { 85  ;   ;Packaging Unit      ;Code10        ;TableRelation="Unit of Measure";
                                                   CaptionML=ENU=Packaging Unit }
    { 86  ;   ;Volume              ;Decimal       ;OnValidate=VAR
                                                                lv1@1210190000 : Decimal;
                                                                lv2@1210190001 : Decimal;
                                                                lv3@1210190002 : Decimal;
                                                              BEGIN
                                                                lv1 := Length;
                                                                lv2 := Width;
                                                                lv3 := Height;
                                                                IF (lv1 = 0) AND (lv2 = 0) AND (lv3 = 0) THEN BEGIN
                                                                  Volume := 0;
                                                                  EXIT;
                                                                END;

                                                                IF Length = 0 THEN lv1 := 1;
                                                                IF Width = 0 THEN lv2 := 1;
                                                                IF Height = 0 THEN lv3 := 1;

                                                                Volume := lv1 * lv2 * lv3;
                                                              END;

                                                   CaptionML=ENU=Volume;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 90  ;   ;Coding System       ;Code10        ;TableRelation="Coding System";
                                                   OnValidate=VAR
                                                                RcpLineRec@1210190001 : Record 11012156;
                                                                EstCodeRec@1210190000 : Record 11012194;
                                                              BEGIN
                                                                RcpLineRec.SETFILTER("Estimate No.", '%1', '');
                                                                RcpLineRec.SETRANGE("Recipe Group", "Recipe Group");
                                                                RcpLineRec.SETRANGE(Recipe, "No.");
                                                                RcpLineRec.MODIFYALL(Code, '');

                                                                EstCodeRec.SETFILTER("Estimate No.", '%1', '');
                                                                EstCodeRec.SETRANGE("Recipe Group", "Recipe Group");
                                                                EstCodeRec.SETRANGE(Recipe, "No.");
                                                                EstCodeRec.SETRANGE("Coding System", "Coding System");
                                                                IF EstCodeRec.FIND('-') THEN BEGIN
                                                                  REPEAT
                                                                    IF EstCodeRec."Recipe Line" <> 0 THEN BEGIN
                                                                      IF RcpLineRec.GET(EstCodeRec."Estimate No.", EstCodeRec."Sub-Estimate No.",
                                                                                        EstCodeRec."Part Group", EstCodeRec.Part,
                                                                                        EstCodeRec."Estimate Line", EstCodeRec."Recipe Group",
                                                                                        EstCodeRec.Recipe, EstCodeRec."Recipe Line") THEN
                                                                      BEGIN
                                                                        RcpLineRec.Code := EstCodeRec.Code;
                                                                        RcpLineRec.MODIFY;
                                                                      END;
                                                                    END;
                                                                  UNTIL EstCodeRec.NEXT = 0;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Coding System }
    { 100 ;   ;Fixed               ;Boolean       ;OnValidate=BEGIN
                                                                IF Fixed <> xRec.Fixed THEN
                                                                  IF UserSetup.GET(USERID) THEN
                                                                    IF UserSetup."No Access Recipe Fixed" THEN
                                                                      ERROR(Text11012002,FIELDCAPTION(Fixed));  //db, 25-07-14: C010030
                                                              END;

                                                   CaptionML=ENU=Fixed }
    { 110 ;   ;Condition           ;Code10        ;TableRelation=Condition.Code;
                                                   CaptionML=ENU=Condition }
    { 115 ;   ;Condition Group     ;Code20        ;TableRelation="Recipe OLD".No. WHERE (Recipe Group=FIELD(Recipe Group));
                                                   CaptionML=ENU=Condition Group }
    { 117 ;   ;Picture             ;BLOB          ;CaptionML=ENU=Picture;
                                                   SubType=Bitmap }
    { 120 ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Comment Line (Group)" WHERE (Table Name=CONST(Estimate),
                                                                                                   Group=FIELD(Recipe Group),
                                                                                                   No.=FIELD(No.)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 11125678;;Plant Rates in Hours;Boolean      ;OnValidate=VAR
                                                                RecipeLine@1100525000 : Record 11012156;
                                                                EstRAWSetup@1100525001 : Record 11125673;
                                                              BEGIN
                                                                IF NOT EstRAWSetup.READPERMISSION THEN
                                                                  TESTFIELD("Plant Rates in Hours", FALSE);  //db, 10-09-10: M22816

                                                                // jhoek.begin
                                                                RecipeLine.SETRANGE("Estimate No.", '');
                                                                RecipeLine.SETRANGE("Recipe Group", "Recipe Group");
                                                                RecipeLine.SETRANGE(Recipe, "No.");

                                                                IF RecipeLine.FINDSET(TRUE) THEN
                                                                  REPEAT
                                                                    IF NOT "Plant Rates in Hours" THEN BEGIN
                                                                      RecipeLine."Norm (Plant)" := 0;
                                                                      RecipeLine."Production Rate (Plant)" := 0;
                                                                      RecipeLine."Hours (Plant)" := 0;
                                                                    END;
                                                                    RecipeLine.DeterminePlantPrice;
                                                                    RecipeLine.MODIFY;
                                                                  UNTIL RecipeLine.NEXT = 0;
                                                                // jhoek.end
                                                              END;

                                                   CaptionML=ENU=Plant Rates in Hours;
                                                   Description=RAW }
  }
  KEYS
  {
    {    ;Recipe Group,No.                        ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@11012004 : TextConst 'ENU=Process default norm group in recipe lines ?';
      EstSetup@1100485000 : Record 11012150;
      RecipeLineRec@11012000 : Record 11012156;
      EstPartLineRec@1100485001 : Record 11012187;
      TextRec@1210190002 : Record 11020595;
      EstCodeRec@1100409000 : Record 11012194;
      CentrManagementCU@1210190001 : Codeunit 11012010;
      Text001@1100525000 : TextConst 'ENU="Rename disabled; use copy function and delete original data afterwards."';
      Text11012002@1100409001 : TextConst 'ENU=You have no permission to change %1';
      UserSetup@1100409002 : Record 91;

    PROCEDURE CheckRateCode@1100485000(lvAction@1210190000 : Integer);
    VAR
      RateGroupRec@1210190002 : Record 11012162;
      BudgetRateRec@1210190003 : Record 11012000;
      RateType@1100485001 : 'Rate Group,Budget Rate';
    BEGIN
      EstSetup.GET;
      RateType := EstSetup."Rates Based On";

      IF lvAction = 0 THEN BEGIN
        IF "Rate Code" <> '' THEN BEGIN
          IF RateType = RateType::"Budget Rate" THEN BEGIN
            BudgetRateRec.SETRANGE(Code, "Rate Code");
            BudgetRateRec.FINDFIRST;
          END ELSE
            RateGroupRec.GET("Rate Group", "Rate Code");
        END;
      END ELSE BEGIN
        IF RateType = RateType::"Budget Rate" THEN BEGIN
          IF PAGE.RUNMODAL(PAGE::"Budget Rates", BudgetRateRec) = ACTION::LookupOK THEN
            VALIDATE("Rate Code", BudgetRateRec.Code);
        END ELSE BEGIN
          RateGroupRec.SETRANGE("Rate Group", "Rate Group");
          IF PAGE.RUNMODAL(PAGE::"Rates per Group",RateGroupRec) = ACTION::LookupOK THEN
            VALIDATE("Rate Code", RateGroupRec."Rate Code");
        END;
      END;
    END;

    PROCEDURE CompressLines@1100485007(lvRcpGrp@1100485002 : Code[20];lvRcp@1100485003 : Code[20]);
    VAR
      lvRcpLineRec@1100485000 : Record 11012156;
      lvRcpLineRec2@1100485001 : Record 11012156;
    BEGIN
      //db, 14-07-06: Function not used anymore for std receipt, maybe used per est./inst
      //function moved to part lines (calc/serv)
      lvRcpLineRec.SETFILTER("Estimate No.", '%1', '');
      lvRcpLineRec.SETFILTER("Sub-Estimate No.", '%1', '');
      lvRcpLineRec.SETFILTER("Part Group", '%1', '');
      lvRcpLineRec.SETFILTER(Part, '%1', '');
      lvRcpLineRec.SETRANGE("Estimate Line", 0);
      lvRcpLineRec.SETRANGE("Recipe Group", lvRcpGrp);
      lvRcpLineRec.SETRANGE(Recipe, lvRcp);
      lvRcpLineRec.SETRANGE("Surcharge Type", lvRcpLineRec."Surcharge Type"::" ");
      IF lvRcpLineRec.FINDSET(TRUE, FALSE) THEN BEGIN
        REPEAT
          lvRcpLineRec2.COPY(lvRcpLineRec);
          lvRcpLineRec2.SETFILTER("Line No.", '>%1', lvRcpLineRec."Line No.");
          lvRcpLineRec2.SETRANGE("Recipe Group (Child)", lvRcpLineRec."Recipe Group (Child)");
          lvRcpLineRec2.SETRANGE("Recipe (Child)", lvRcpLineRec."Recipe (Child)");

          lvRcpLineRec2.SETRANGE(Description, lvRcpLineRec.Description);
          lvRcpLineRec2.SETRANGE("External Text", lvRcpLineRec."External Text");
          lvRcpLineRec2.SETRANGE("Internal Text", lvRcpLineRec."Internal Text");

          lvRcpLineRec2.SETRANGE("Unit of Measure", lvRcpLineRec."Unit of Measure");
          lvRcpLineRec2.SETRANGE("Rate Code", lvRcpLineRec."Rate Code");
          lvRcpLineRec2.SETRANGE("Line Status", lvRcpLineRec."Line Status");

          lvRcpLineRec2.SETRANGE(Norm, lvRcpLineRec.Norm);
          lvRcpLineRec2.SETRANGE("Gross Price", lvRcpLineRec."Gross Price");
          lvRcpLineRec2.SETRANGE("Material Price", lvRcpLineRec."Material Price");
          lvRcpLineRec2.SETRANGE("Subcontracting Price", lvRcpLineRec."Subcontracting Price");
          lvRcpLineRec2.SETRANGE("Plant Price", lvRcpLineRec."Plant Price");

          lvRcpLineRec2.SETRANGE("Item No.", lvRcpLineRec."Item No.");
          lvRcpLineRec2.SETRANGE("Basic Item", lvRcpLineRec."Basic Item");
          lvRcpLineRec2.SETRANGE("Trade Item", lvRcpLineRec."Trade Item");
          lvRcpLineRec2.SETRANGE("Vendor (Trade Item)", lvRcpLineRec."Vendor (Trade Item)");
          lvRcpLineRec2.SETRANGE(Manufacturer, lvRcpLineRec.Manufacturer);

          lvRcpLineRec2.SETRANGE("Cost Object Labor", lvRcpLineRec."Cost Object Labor");
          lvRcpLineRec2.SETRANGE("Cost Object Material", lvRcpLineRec."Cost Object Material");
          lvRcpLineRec2.SETRANGE("Cost Object Subcontracting", lvRcpLineRec."Cost Object Subcontracting");
          lvRcpLineRec2.SETRANGE("Cost Object Plant", lvRcpLineRec."Cost Object Plant");

          lvRcpLineRec2.SETRANGE("Cost Component", lvRcpLineRec."Cost Component");
          lvRcpLineRec2.SETRANGE(Discipline, lvRcpLineRec.Discipline);
          lvRcpLineRec2.SETRANGE("Trade Speciality", lvRcpLineRec."Trade Speciality");
          lvRcpLineRec2.SETRANGE("Trade Expertise", lvRcpLineRec."Trade Expertise");

          IF lvRcpLineRec2.FINDSET(TRUE, FALSE) THEN BEGIN
            REPEAT
              lvRcpLineRec.Quantity := lvRcpLineRec.Quantity + lvRcpLineRec2.Quantity;
              lvRcpLineRec.MODIFY(TRUE);
              lvRcpLineRec2.DELETE(TRUE);
            UNTIL lvRcpLineRec2.NEXT = 0;
          END;
        UNTIL lvRcpLineRec.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

