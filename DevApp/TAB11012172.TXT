OBJECT Table 11012172 Summary Sheet
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Fixed := FALSE;
               TESTFIELD(Summary);  //db, 22-03-04

               "Modified by" := USERID;  //db, 14-08-07 (because of timer on form)
               "Last Date Modified" := TODAY;
               "Last Time Modified" := TIME;
             END;

    OnModify=BEGIN
               IF Fixed = xRec.Fixed THEN
                 TESTFIELD(Fixed,FALSE);
             END;

    OnDelete=VAR
               SumLineRec@1210190001 : Record 11012171;
               SumRelRec@1210190000 : Record 11012173;
             BEGIN
               TESTFIELD(Fixed,FALSE);

               SumLineRec.SETRANGE("Estimate No.","Estimate No.");
               SumLineRec.SETRANGE(Summary,Summary);
               SumLineRec.DELETEALL;

               SumRelRec.SETRANGE("Estimate No.","Estimate No.");
               SumRelRec.SETRANGE(Summary,Summary);
               SumRelRec.DELETEALL;
             END;

    CaptionML=ENU=Summary;
    LookupPageID=Page11012202;
  }
  FIELDS
  {
    { 10  ;   ;Estimate No.        ;Code20        ;TableRelation=Estimate.No.;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=ENU=Estimate No.;
                                                   NotBlank=Yes }
    { 11  ;   ;Estimate Description;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Estimate.Description WHERE (No.=FIELD(Estimate No.)));
                                                   CaptionML=ENU=Estimate Description;
                                                   Editable=No }
    { 20  ;   ;Summary             ;Code10        ;CaptionML=ENU=Summary }
    { 30  ;   ;Excel Sheet         ;Text50        ;CaptionML=ENU=Excel Sheet }
    { 40  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 50  ;   ;Excel Template      ;Text50        ;CaptionML=ENU=Excel Template }
    { 60  ;   ;Modified by         ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Modified by;
                                                   Editable=No }
    { 65  ;   ;Last Date Modified  ;Date          ;CaptionML=ENU=Last Date Modified;
                                                   Editable=No }
    { 70  ;   ;Project No.         ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=ENU=Project No. }
    { 75  ;   ;Element             ;Code20        ;TableRelation="Base Element".Code;
                                                   OnValidate=BEGIN
                                                                FormatMgt.FormatElem(Element,2,'');
                                                                IF Element <> '' THEN
                                                                  IF "Project No." <> '' THEN BEGIN
                                                                    IF NOT ProjElemRec.GET("Project No.", Element) THEN
                                                                      ElemRec.GET(Element);
                                                                  END ELSE
                                                                    ElemRec.GET(Element);
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "Project No." <> '' THEN BEGIN
                                                                ProjElemRec.SETRANGE("Project No.", "Project No.");
                                                                ProjElemRec.Element := Element;
                                                                IF PAGE.RUNMODAL(PAGE::"Project Element List", ProjElemRec) = ACTION::LookupOK THEN
                                                                  VALIDATE(Element, ProjElemRec.Element);
                                                              END ELSE BEGIN
                                                                ElemRec.Code := Element;
                                                                IF PAGE.RUNMODAL(PAGE::Elements, ElemRec) = ACTION::LookupOK THEN
                                                                  VALIDATE(Element, ElemRec.Code);
                                                              END;
                                                            END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Element }
    { 80  ;   ;Sub-Estimate No.    ;Code20        ;TableRelation="Sub-Estimate NEW"."Sub-Estimate No." WHERE (Estimate No.=FIELD(Estimate No.));
                                                   OnValidate=BEGIN
                                                                ValidateSubEstimate;  //db, 06-02-14: T004252
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Sub-Estimate No. }
    { 81  ;   ;Sub-Estimate Description;Text50    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Sub-Estimate NEW".Description WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                            Sub-Estimate No.=FIELD(Sub-Estimate No.)));
                                                   CaptionML=ENU=Sub-Estimate Description;
                                                   Editable=No }
    { 85  ;   ;Part                ;Code20        ;TableRelation="Estimate Part NEW".Part WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                 Sub-Estimate No.=FIELD(Sub-Estimate No.));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Part }
    { 86  ;   ;Part Description    ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Estimate Part NEW".Description WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                             Sub-Estimate No.=FIELD(Sub-Estimate No.),
                                                                                                             Part=FIELD(Part)));
                                                   CaptionML=ENU=Part Description;
                                                   Editable=No }
    { 90  ;   ;Last Time Modified  ;Time          ;CaptionML=ENU=Last Time Modified }
    { 100 ;   ;Fixed               ;Boolean       ;CaptionML=ENU=Fixed }
    { 110 ;   ;Summary Type        ;Option        ;CaptionML=ENU=Summary Type;
                                                   OptionCaptionML=ENU=Cost,Sales;
                                                   OptionString=Cost,Sales }
    { 120 ;   ;Global Dimension 1 Code;Code20     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Estimate."Global Dimension 1 Code" WHERE (No.=FIELD(Estimate No.)));
                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   Editable=No;
                                                   CaptionClass='1,1,1' }
    { 130 ;   ;Excel Template contains Macros;Boolean;
                                                   CaptionML=ENU=Excel Template used Macros }
  }
  KEYS
  {
    {    ;Estimate No.,Summary                    ;Clustered=Yes }
    {    ;Project No.                              }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ElemRec@1210190002 : Record 11012060;
      ProjElemRec@1210190001 : Record 11012010;
      FormatMgt@1210190000 : Codeunit 11012022;
      DPA_Management@1210190003 : Codeunit 11012783;

    PROCEDURE ResetFilterSubEstimate@1210190000();
    VAR
      SubEstFilter@1210190000 : Text[250];
      EstRec@1100528900 : Record 11012151;
      SubEstRecOLD@1210190001 : Record 11012152;
      SubEstRecNEW@1100528901 : Record 11072074;
      SumLineRec@1210190002 : Record 11012171;
      x@1100485000 : Integer;
      sp1@1100485001 : Integer;
      sp2@1100485002 : Integer;
    BEGIN
      TESTFIELD(Fixed,FALSE);
      SubEstFilter := "Sub-Estimate No.";

      EstRec.GET("Estimate No.");
      IF EstRec.Converted THEN BEGIN
        IF SubEstRecNEW.GET("Estimate No.", "Sub-Estimate No.") THEN BEGIN
          REPEAT
            x := x + 1;
            IF COPYSTR(SubEstRecNEW."Sub-Estimate No.",x,1) = '.' THEN BEGIN
              IF sp1 = 0 THEN
                sp1 := x
              ELSE
                IF sp2 = 0 THEN
                  sp2 := x;
            END;
          UNTIL x = STRLEN(SubEstRecNEW."Sub-Estimate No.");
          IF (SubEstRecNEW.Level = 0) AND (sp1 <> 0) THEN
            SubEstFilter := COPYSTR(SubEstRecNEW."Sub-Estimate No.", 1, sp1) + '*';
          IF (SubEstRecNEW.Level = 1) AND (sp2 <> 0) THEN
            SubEstFilter := COPYSTR(SubEstRecNEW."Sub-Estimate No.", 1, sp2) + '*';
        END;
      END ELSE BEGIN
        IF SubEstRecOLD.GET("Estimate No.", "Sub-Estimate No.") THEN BEGIN
          REPEAT
            x := x + 1;
            IF COPYSTR(SubEstRecOLD."Sub-Estimate No.",x,1) = '.' THEN BEGIN
              IF sp1 = 0 THEN
                sp1 := x
              ELSE
                IF sp2 = 0 THEN
                  sp2 := x;
            END;
          UNTIL x = STRLEN(SubEstRecOLD."Sub-Estimate No.");
          IF (SubEstRecOLD.Level = 0) AND (sp1 <> 0) THEN
            SubEstFilter := COPYSTR(SubEstRecOLD."Sub-Estimate No.", 1, sp1) + '*';
          IF (SubEstRecOLD.Level = 1) AND (sp2 <> 0) THEN
            SubEstFilter := COPYSTR(SubEstRecOLD."Sub-Estimate No.", 1, sp2) + '*';
        END;
      END;

      SumLineRec.SETRANGE("Estimate No.", "Estimate No.");
      SumLineRec.SETRANGE(Summary, Summary);
      SumLineRec.SETRANGE(Type, SumLineRec.Type::"Cost Type");
      IF SumLineRec.FINDSET THEN BEGIN
        REPEAT
          SumLineRec.VALIDATE("Sub-Estimate Filter", SubEstFilter);
          SumLineRec.MODIFY;
        UNTIL SumLineRec.NEXT = 0;
      END;

      SumLineRec.UpdateSummarySheet("Estimate No.", Summary, FALSE);

      "Modified by" := USERID;
      "Last Date Modified" := TODAY;
      "Last Time Modified" := TIME;

      GetDescriptions;  //db, 06-02-14: T004252
    END;

    PROCEDURE ResetFilterPart@1100525000();
    VAR
      PartFilter@1100525005 : Code[20];
      SumLineRec@1100525003 : Record 11012171;
      EstRec@1100528900 : Record 11012151;
      EstPartRecOLD@1100525004 : Record 11012153;
      EstPartRecNEW@1100528901 : Record 11072073;
      x@1100525002 : Integer;
      sp1@1100525001 : Integer;
      sp2@1100525000 : Integer;
    BEGIN
      TESTFIELD(Fixed,FALSE);
      PartFilter := Part;

      EstRec.GET("Estimate No.");
      IF EstRec.Converted THEN BEGIN
        EstPartRecNEW.SETRANGE("Estimate No.", "Estimate No.");
        EstPartRecNEW.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
        EstPartRecNEW.SETRANGE(Part, Part);
        IF EstPartRecNEW.FINDFIRST THEN BEGIN
          REPEAT
            x := x + 1;
            IF COPYSTR(EstPartRecNEW.Part,x,1) = '.' THEN BEGIN
              IF sp1 = 0 THEN
                sp1 := x
              ELSE
                IF sp2 = 0 THEN
                  sp2 := x;
            END;
          UNTIL x = STRLEN(EstPartRecNEW.Part);
          IF (EstPartRecNEW.Level = 0) THEN
            PartFilter := '';
          IF (EstPartRecNEW.Level = 1) AND (sp1 <> 0) THEN
            PartFilter := COPYSTR(EstPartRecNEW.Part, 1, sp1) + '*';
          IF (EstPartRecNEW.Level = 2) AND (sp2 <> 0) THEN
            PartFilter := COPYSTR(EstPartRecNEW.Part, 1, sp2) + '*';
        END;
      END ELSE BEGIN
        EstPartRecOLD.SETRANGE("Estimate No.", "Estimate No.");
        EstPartRecOLD.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
        EstPartRecOLD.SETRANGE(Part, Part);
        IF EstPartRecOLD.FINDFIRST THEN BEGIN
          REPEAT
            x := x + 1;
            IF COPYSTR(EstPartRecOLD.Part,x,1) = '.' THEN BEGIN
              IF sp1 = 0 THEN
                sp1 := x
              ELSE
                IF sp2 = 0 THEN
                  sp2 := x;
            END;
          UNTIL x = STRLEN(EstPartRecOLD.Part);
          IF (EstPartRecOLD.Level = 0) THEN
            PartFilter := '';
          IF (EstPartRecOLD.Level = 1) AND (sp1 <> 0) THEN
            PartFilter := COPYSTR(EstPartRecOLD.Part, 1, sp1) + '*';
          IF (EstPartRecOLD.Level = 2) AND (sp2 <> 0) THEN
            PartFilter := COPYSTR(EstPartRecOLD.Part, 1, sp2) + '*';
        END;
      END;

      SumLineRec.SETRANGE("Estimate No.", "Estimate No.");
      SumLineRec.SETRANGE(Summary, Summary);
      SumLineRec.SETRANGE(Type, SumLineRec.Type::"Cost Type");
      IF SumLineRec.FINDSET THEN BEGIN
        REPEAT
          SumLineRec.VALIDATE("Part Filter", PartFilter);
          SumLineRec.MODIFY;
        UNTIL SumLineRec.NEXT = 0;
      END;

      SumLineRec.UpdateSummarySheet("Estimate No.", Summary, FALSE);

      "Modified by" := USERID;
      "Last Date Modified" := TODAY;
      "Last Time Modified" := TIME;

      GetDescriptions;  //db, 06-02-14: T004252
    END;

    PROCEDURE SetFilterPrintDoc@1100485002();
    VAR
      PrintDoc@1100485001 : Codeunit 229;
      lvSumLineRec@1100485000 : Record 11012171;
    BEGIN
      lvSumLineRec.SETRANGE("Estimate No.","Estimate No.");
      lvSumLineRec.SETRANGE(Summary,Summary);
      IF lvSumLineRec.FINDSET(FALSE,FALSE) THEN
        PrintDoc.PrintSummarySheet(lvSumLineRec);
    END;

    PROCEDURE GetSummaryCost@1100525002(TotalDec@1100525001 : Decimal) Result : Decimal;
    VAR
      ContrAmnt@1100525000 : Decimal;
    BEGIN
      //db, 08-06-10
      ContrAmnt := GetSummaryAmount;
      IF ContrAmnt <> 0 THEN
        Result := GetSummaryAmount - TotalDec;

      EXIT(Result);
    END;

    PROCEDURE GetSummaryAmount@1100525001() Result : Decimal;
    VAR
      SumLineRec@1100525000 : Record 11012171;
    BEGIN
      //db, 08-06-10
      SumLineRec.SETRANGE("Estimate No." , "Estimate No.");
      SumLineRec.SETRANGE(Summary , Summary);
      SumLineRec.SETRANGE("Contract Amount", TRUE);
      IF SumLineRec.FINDFIRST THEN BEGIN
        SumLineRec.CALCFIELDS("Subtotal Amount");
        Result := SumLineRec."Subtotal Amount";
      END;

      EXIT(Result);
    END;

    PROCEDURE EstimateNoInDepartmentFilter@1210190001(Context@1210190000 : Text[30]);
    VAR
      Estimate@1210190001 : Record 11012151;
    BEGIN
      //C001088
      Estimate.GET("Estimate No.");  //db, 16-10-12: C003206
      Estimate.DPA_SetFilters(Context);
      IF NOT Estimate.DPA_CanFindRecWithDPAFltrAppld() THEN
        DPA_Management.RaiseDPAErrorForTable(Estimate.TABLECAPTION);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Code"));
    END;

    PROCEDURE GetTotals@1100528900(VAR HourDec@1100528903 : Decimal;VAR LaborDec@1100528904 : Decimal;VAR ItemDec@1100528905 : Decimal;VAR SubcDec@1100528906 : Decimal;VAR PlantDec@1100528907 : Decimal;VAR SundryDec@1100528908 : Decimal;VAR TotalDec@1100528909 : Decimal);
    VAR
      EstRec@1100528902 : Record 11012151;
      SubEstRecOLD@1100528901 : Record 11012152;
      SubEstRecNEW@1100528900 : Record 11072074;
    BEGIN
      //DP00381
      CLEAR(HourDec);
      CLEAR(LaborDec);
      CLEAR(ItemDec);
      CLEAR(SubcDec);
      CLEAR(PlantDec);
      CLEAR(SundryDec);
      CLEAR(TotalDec);

      IF "Sub-Estimate No." <> '' THEN BEGIN
        EstRec.GET("Estimate No.");
        IF EstRec.Converted THEN BEGIN  //Dp00381
          SubEstRecNEW.SETRANGE("Estimate No.", "Estimate No.");
          SubEstRecNEW.SETFILTER("Sub-Estimate No.", "Sub-Estimate No.");
          IF SubEstRecNEW.FINDSET THEN BEGIN
            REPEAT
              IF "Summary Type" = "Summary Type"::Sales THEN BEGIN
                SubEstRecNEW.CALCFIELDS("Cum. Hours (Sales)", "Cum. Labor (Sales)", "Cum. Material (Sales)",
                  "Cum. Subcontracting (Sales)", "Cum. Plant (Sales)", "Cum. Sundry (Sales)");
                HourDec := HourDec + SubEstRecNEW."Cum. Hours (Sales)";
                LaborDec := LaborDec + SubEstRecNEW."Cum. Labor (Sales)";
                ItemDec := ItemDec + SubEstRecNEW."Cum. Material (Sales)";
                SubcDec := SubcDec + SubEstRecNEW."Cum. Subcontracting (Sales)";
                PlantDec := PlantDec + SubEstRecNEW."Cum. Plant (Sales)";
                SundryDec := SundryDec + SubEstRecNEW."Cum. Sundry (Sales)";
                TotalDec := TotalDec + LaborDec + ItemDec + SubcDec + PlantDec + SundryDec;
              END ELSE BEGIN
                SubEstRecNEW.CALCFIELDS("Cum. Hours", "Cum. Labor", "Cum. Material",
                  "Cum. Subcontracting", "Cum. Plant", "Cum. Sundry");
                HourDec := HourDec + SubEstRecNEW."Cum. Hours";
                LaborDec := LaborDec + SubEstRecNEW."Cum. Labor";
                ItemDec := ItemDec + SubEstRecNEW."Cum. Material";
                SubcDec := SubcDec + SubEstRecNEW."Cum. Subcontracting";
                PlantDec := PlantDec + SubEstRecNEW."Cum. Plant";
                SundryDec := SundryDec + SubEstRecNEW."Cum. Sundry";
                TotalDec := TotalDec + LaborDec + ItemDec + SubcDec + PlantDec + SundryDec;
              END;
            UNTIL SubEstRecNEW.NEXT = 0;
          END;
        END ELSE BEGIN
          SubEstRecOLD.SETRANGE("Estimate No.", "Estimate No.");
          SubEstRecOLD.SETFILTER("Sub-Estimate No.", "Sub-Estimate No.");
          IF SubEstRecOLD.FINDSET THEN BEGIN
            REPEAT
              SubEstRecOLD.CALCFIELDS("Cum. Hours", "Cum. Labor",
                "Cum. Material", "Cum. Subcontracting", "Cum. Plant", "Cum. Total");
              HourDec := HourDec + SubEstRecOLD."Cum. Hours";
              LaborDec := LaborDec + SubEstRecOLD."Cum. Labor";
              ItemDec := ItemDec + SubEstRecOLD."Cum. Material";
              SubcDec := SubcDec + SubEstRecOLD."Cum. Subcontracting";
              PlantDec := PlantDec + SubEstRecOLD."Cum. Plant";
              TotalDec := TotalDec + SubEstRecOLD."Cum. Total";
            UNTIL SubEstRecOLD.NEXT = 0;
          END;
        END;
      END ELSE BEGIN
        EstRec.GET("Estimate No.");
        IF EstRec.Converted THEN BEGIN  //Dp00381
          IF "Summary Type" = "Summary Type"::Sales THEN BEGIN
            EstRec.CALCFIELDS("Hours (Sales)", "Labor Sales Amount", "Material Sales Amount",
              "Subcontracting Sales Amount", "Plant Sales Amount", "Sundry Sales Amount");
            HourDec := EstRec."Hours (Sales)";
            LaborDec := EstRec."Labor Sales Amount";
            ItemDec := EstRec."Material Sales Amount";
            SubcDec := EstRec."Subcontracting Sales Amount";
            PlantDec := EstRec."Plant Sales Amount";
            SundryDec := EstRec."Sundry Sales Amount";
            TotalDec := LaborDec + ItemDec + SubcDec + PlantDec + SundryDec;
          END ELSE BEGIN
            EstRec.CALCFIELDS("Hours (Cost)", "Labor Cost Amount", "Material Cost Amount",
              "Subcontracting Cost Amount", "Plant Cost Amount", "Sundry Cost Amount");
            HourDec := EstRec."Hours (Cost)";
            LaborDec := EstRec."Labor Cost Amount";
            ItemDec := EstRec."Material Cost Amount";
            SubcDec := EstRec."Subcontracting Cost Amount";
            PlantDec := EstRec."Plant Cost Amount";
            SundryDec := EstRec."Sundry Cost Amount";
            TotalDec := LaborDec + ItemDec + SubcDec + PlantDec + SundryDec;
          END;
        END ELSE BEGIN
          EstRec.CALCFIELDS("Hours OLD", "Labor OLD", "Material OLD", "Subcontracting OLD", "Plant OLD", "Total OLD");
          HourDec := EstRec."Hours OLD";
          LaborDec := EstRec."Labor OLD";
          ItemDec := EstRec."Material OLD";
          SubcDec := EstRec."Subcontracting OLD";
          PlantDec := EstRec."Plant OLD";
          TotalDec := EstRec."Total OLD";
        END;
      END;
    END;

    PROCEDURE ValidateSubEstimate@1100525005();
    VAR
      EstRec@1100525002 : Record 11012151;
      SubEstRecOLD@1100525001 : Record 11012152;
      SubEstRecNEW@1100525000 : Record 11072074;
    BEGIN
      //db, 06-02-14: T004252
      EstRec.GET("Estimate No.");
      IF EstRec.Converted THEN BEGIN
        IF SubEstRecNEW.GET("Estimate No.", "Sub-Estimate No.") THEN BEGIN
          IF "Summary Type" = "Summary Type"::Sales THEN
            SubEstRecNEW."Summary (Sales)" := Summary
          ELSE
            SubEstRecNEW."Summary (Cost)" := Summary;
          SubEstRecNEW.MODIFY;
        END;
      END ELSE BEGIN
        IF SubEstRecOLD.GET("Estimate No.", "Sub-Estimate No.") THEN BEGIN
          SubEstRecOLD."Summary (Offer Price)" := Summary;
          SubEstRecOLD.MODIFY;
        END;
      END;
    END;

    PROCEDURE LookupSubEstimate@1100525003();
    VAR
      EstRec@1100525002 : Record 11012151;
      SubEstRecOLD@1100525001 : Record 11012152;
      SubEstRecNEW@1100525000 : Record 11072074;
    BEGIN
      //db, 06-02-14: T004252
      EstRec.GET("Estimate No.");
      IF EstRec.Converted THEN BEGIN
        SubEstRecNEW.SETRANGE("Estimate No.", "Estimate No.");
        IF PAGE.RUNMODAL(0, SubEstRecNEW) = ACTION::LookupOK THEN BEGIN
          VALIDATE("Sub-Estimate No.", SubEstRecNEW."Sub-Estimate No.");
          ResetFilterSubEstimate;
        END;
      END ELSE BEGIN
        SubEstRecOLD.SETRANGE("Estimate No.", "Estimate No.");
        IF PAGE.RUNMODAL(0, SubEstRecOLD) = ACTION::LookupOK THEN BEGIN
          VALIDATE("Sub-Estimate No.", SubEstRecOLD."Sub-Estimate No.");
          ResetFilterSubEstimate;
        END;
      END;
    END;

    PROCEDURE LookupPart@1100525004();
    VAR
      EstRec@1100525002 : Record 11012151;
      EstPartRecOLD@1100525001 : Record 11012153;
      EstPartRecNEW@1100525000 : Record 11072073;
    BEGIN
      //db, 06-02-14: T004252
      EstRec.GET("Estimate No.");
      IF EstRec.Converted THEN BEGIN
        EstPartRecNEW.SETRANGE("Estimate No.", "Estimate No.");
        EstPartRecNEW.SETFILTER("Sub-Estimate No.", "Sub-Estimate No.");
        IF PAGE.RUNMODAL(0, EstPartRecNEW) = ACTION::LookupOK THEN BEGIN
          VALIDATE(Part, EstPartRecNEW.Part);
          ResetFilterPart;
        END;
      END ELSE BEGIN
        EstPartRecOLD.SETRANGE("Estimate No.", "Estimate No.");
        EstPartRecOLD.SETFILTER("Sub-Estimate No.", "Sub-Estimate No.");
        IF PAGE.RUNMODAL(0, EstPartRecOLD) = ACTION::LookupOK THEN BEGIN
          VALIDATE(Part, EstPartRecOLD.Part);
          ResetFilterPart;
        END;
      END;
    END;

    PROCEDURE GetDescriptions@1100525006();
    VAR
      EstRec@1100525000 : Record 11012151;
      SubEstRecOLD@1100525001 : Record 11012152;
      EstPartRecOLD@1100525002 : Record 11012153;
      SubEstRecNEW@1100525004 : Record 11072074;
      EstPartRecNEW@1100525003 : Record 11072073;
    BEGIN
      //db, 06-02-14: T004252
      "Sub-Estimate Description" := '';
      "Part Description" := '';

      EstRec.GET("Estimate No.");
      IF EstRec.Converted THEN BEGIN
        IF SubEstRecNEW.GET("Estimate No.", "Sub-Estimate No.") THEN
          "Sub-Estimate Description" := SubEstRecNEW.Description;
        EstPartRecNEW.SETRANGE("Estimate No.", "Estimate No.");
        EstPartRecNEW.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
        EstPartRecNEW.SETRANGE(Part, Part);
        IF EstPartRecNEW.FINDFIRST THEN
          "Part Description" := EstPartRecNEW.Description;
      END ELSE BEGIN
        IF SubEstRecOLD.GET("Estimate No.", "Sub-Estimate No.") THEN
          "Sub-Estimate Description" := SubEstRecOLD.Description;
        EstPartRecOLD.SETRANGE("Estimate No.", "Estimate No.");
        EstPartRecOLD.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
        EstPartRecOLD.SETRANGE(Part, Part);
        IF EstPartRecOLD.FINDFIRST THEN
          "Part Description" := EstPartRecOLD.Description;
      END;
    END;

    PROCEDURE CheckAndRefreshSheet@1100525007();
    VAR
      SumRec@1100528201 : Record 11012172;
      EstRec@1100528200 : Record 11012151;
      RefreshSheet@1100528202 : Boolean;
      SumLineRec@1100528203 : Record 11012171;
    BEGIN
      //db, 17-03-15: C022155
      IF NOT SumRec.GET("Estimate No.", Summary) THEN SumRec.INIT;

      IF NOT EstRec.GET("Estimate No.") THEN EstRec.INIT;
      IF EstRec."Last Date Modified" > SumRec."Last Date Modified" THEN
        RefreshSheet := TRUE
      ELSE
        IF (EstRec."Last Date Modified" = SumRec."Last Date Modified") AND
           (EstRec."Last Time Modified" > SumRec."Last Time Modified") THEN
          RefreshSheet := TRUE;

      IF SumRec.Fixed THEN EXIT;

      IF RefreshSheet THEN BEGIN
        SumLineRec."Estimate No." := SumRec."Estimate No.";
        SumLineRec.Summary := SumRec.Summary;
        SumLineRec.UpdateLogbook;
        SumLineRec.UpdateSummarySheet(SumRec."Estimate No.", SumRec.Summary, FALSE);
        COMMIT;
      END;
    END;

    BEGIN
    {
      DP00381: Lookup-relation for Sub-Estimate and Estimate Part refers to new tables
    }
    END.
  }
}

