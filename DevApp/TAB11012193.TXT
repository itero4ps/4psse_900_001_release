OBJECT Table 11012193 Estimate Composition for Quote
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Estimate Composition for Quote;
  }
  FIELDS
  {
    { 10  ;   ;Estimate No.        ;Code20        ;TableRelation=Estimate.No.;
                                                   CaptionML=ENU=Estimate No.;
                                                   Editable=No }
    { 20  ;   ;Sub-Estimate No.    ;Code20        ;TableRelation="Sub-Estimate OLD"."Sub-Estimate No." WHERE (Estimate No.=FIELD(Estimate No.));
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Sub-Estimate No. }
    { 25  ;   ;Part Group          ;Code10        ;TableRelation="Estimate Part OLD"."Part Group" WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                         Sub-Estimate No.=FIELD(Sub-Estimate No.));
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Part Group }
    { 30  ;   ;Part                ;Code20        ;TableRelation="Estimate Part OLD".Part WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                 Sub-Estimate No.=FIELD(Sub-Estimate No.),
                                                                                                 Part Group=FIELD(Part Group));
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Part }
    { 40  ;   ;Estimate Line       ;Integer       ;TableRelation="Estimate Line OLD"."Line No." WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                       Sub-Estimate No.=FIELD(Sub-Estimate No.),
                                                                                                       Part=FIELD(Part));
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Estimate Line }
    { 50  ;   ;Recipe Line         ;Integer       ;CaptionML=ENU=Recipe Line }
    { 51  ;   ;Recipe              ;Code20        ;CaptionML=ENU=Recipe }
    { 52  ;   ;Recipe Group        ;Code10        ;TableRelation="Estimate Group".No. WHERE (Type=CONST(Recipe));
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Recipe Group }
    { 55  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 60  ;   ;Description         ;Text100       ;CaptionML=ENU=Description;
                                                   Editable=No }
    { 65  ;   ;Cost Type           ;Option        ;CaptionML=ENU=Cost Type;
                                                   OptionCaptionML=ENU=" ,Material,Subcontracting,Plant,Sundry";
                                                   OptionString=[ ,Material,Subcontracting,Plant,Sundry];
                                                   Description=DP00381;
                                                   Editable=No }
    { 70  ;   ;Cost Object         ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Cost Object;
                                                   Editable=No }
    { 72  ;   ;Cost Object Material;Code20        ;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Material),
                                                                                               Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Cost Object Material;
                                                   Editable=No }
    { 73  ;   ;Cost Object Subcontracting;Code20  ;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Subcontracting),
                                                                                               Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Cost Object Subcontracting;
                                                   Editable=No }
    { 74  ;   ;Cost Object Plant   ;Code20        ;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Plant),
                                                                                               Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Cost Object Plant;
                                                   Editable=No }
    { 75  ;   ;Compressed          ;Boolean       ;CaptionML=ENU=Compressed }
    { 80  ;   ;Quantity            ;Decimal       ;CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 90  ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure".Code;
                                                   CaptionML=ENU=Unit of Measure;
                                                   Editable=No }
    { 100 ;   ;Norm                ;Decimal       ;CaptionML=ENU=Norm;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 110 ;   ;Material Price      ;Decimal       ;CaptionML=ENU=Material Price;
                                                   AutoFormatType=2 }
    { 115 ;   ;Discount %          ;Decimal       ;CaptionML=ENU=Discount %;
                                                   DecimalPlaces=0:5 }
    { 120 ;   ;Gross Price         ;Decimal       ;CaptionML=ENU=Gross Price;
                                                   AutoFormatType=2 }
    { 130 ;   ;Subcontracting Price;Decimal       ;CaptionML=ENU=Subcontracting Price;
                                                   AutoFormatType=2 }
    { 140 ;   ;Plant Price         ;Decimal       ;CaptionML=ENU=Plant Price;
                                                   AutoFormatType=2 }
    { 150 ;   ;Rate Code           ;Code10        ;TableRelation="Estimate Rate"."Rate Code" WHERE (Estimate No.=FIELD(Estimate No.));
                                                   CaptionML=ENU=Rate Code;
                                                   Editable=No }
    { 151 ;   ;Rate                ;Decimal       ;CaptionML=ENU=Rate;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 152 ;   ;Rate Type           ;Option        ;CaptionML=ENU=Rate Type;
                                                   OptionCaptionML=ENU=Hours,Minuts;
                                                   OptionString=Hours,Minuts;
                                                   Editable=No }
    { 153 ;   ;Team Size           ;Decimal       ;CaptionML=ENU=Team Size;
                                                   Editable=No }
    { 160 ;   ;Text Composition    ;Code140       ;CaptionML=ENU=Text Composition;
                                                   Editable=No }
    { 170 ;   ;Purchase Route Reference;Code20    ;CaptionML=ENU=Purchase Route Reference;
                                                   Editable=No }
    { 200 ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=ENU=Item No. }
    { 210 ;   ;Basic Item          ;Code20        ;TableRelation="Basic Item"."Product Code" WHERE (Manufacturer=FIELD(Manufacturer));
                                                   CaptionML=ENU=Basic Item }
    { 220 ;   ;Trade Item          ;Code20        ;TableRelation="Trade Item"."Item Code" WHERE (Vendor=FIELD("Vendor (Trade Item)"));
                                                   CaptionML=ENU=Trade Item }
    { 240 ;   ;Vendor (Trade Item) ;Code15        ;TableRelation="ETIM Vendor (Central Mgt)";
                                                   CaptionML=ENU=Vendor (Trade Item) }
    { 250 ;   ;Manufacturer        ;Code15        ;TableRelation="ETIM Vendor (Central Mgt)";
                                                   CaptionML=ENU=Manufacturer }
    { 260 ;   ;Purchaser Code      ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Purchaser Name");
                                                              END;

                                                   CaptionML=ENU=Purchaser Code;
                                                   Editable=No }
    { 271 ;   ;Purchaser Name      ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Salesperson/Purchaser.Name WHERE (Code=FIELD(Purchaser Code)));
                                                   CaptionML=ENU=Purchaser Name;
                                                   Editable=No }
    { 280 ;   ;Vendor              ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=ENU=Vendor }
    { 290 ;   ;Purchase Action     ;Code10        ;TableRelation="Estimate Purchase Action".Code WHERE (Estimate No.=FIELD(Estimate No.));
                                                   CaptionML=ENU=Purchase Action }
    { 295 ;   ;Purchase Phase      ;Code10        ;CaptionML=ENU=Purchase Phase;
                                                   Numeric=Yes }
    { 300 ;   ;Element No. (RAW)   ;Code6         ;TableRelation="Estimate Element (RAW)"."Element No." WHERE (Estimate No.=FIELD(Estimate No.));
                                                   CaptionML=ENU=Element No.(RAW) }
  }
  KEYS
  {
    {    ;Estimate No.,Sub-Estimate No.,Part Group,Part,Element No. (RAW),Estimate Line,Recipe Line;
                                                   Clustered=Yes }
    {    ;Estimate No.,Line No.,Compressed         }
    {    ;Estimate No.,Cost Type,Text Composition  }
    {    ;Estimate No.,Cost Type,Description       }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CompRec@1210190002 : Record 11012193;
      EstRec@1210190003 : Record 11012151;
      RawSetup@1100525000 : Record 11125673;
      LastEstNo@1210190004 : Code[20];

    PROCEDURE GetSelectionOLD@1210190000(VAR EstLineRec@1100525001 : Record 11012154;VAR RcpLineRec@1100525000 : Record 11012156);
    BEGIN
      CompRec.LOCKTABLE;
      CompRec.RESET;
      CompRec.DELETEALL;

      IF RawSetup.READPERMISSION THEN
        FillBufferWithRawEstimateLines();
      FillBufferWithEstimateLinesOLD(EstLineRec);
      FillBufferWithRecipeLinesOLD(RcpLineRec);
      UpdateCompLineAndCompressed();

      COMMIT;
      CompRec.LOCKTABLE;
    END;

    PROCEDURE GetSelectionNEW@1100528900(VAR EstLineRec@1100525001 : Record 11072072;VAR RcpLineRec@1100525000 : Record 11072075);
    BEGIN
      //DP00381
      CompRec.LOCKTABLE;
      CompRec.RESET;
      CompRec.DELETEALL;

      IF RawSetup.READPERMISSION THEN
        FillBufferWithRawEstimateLines();
      FillBufferWithEstimateLinesNEW(EstLineRec);
      FillBufferWithRecipeLinesNEW(RcpLineRec);
      UpdateCompLineAndCompressed();

      COMMIT;
      CompRec.LOCKTABLE;
    END;

    PROCEDURE FillBufferWithEstimateLinesOLD@1210190003(VAR EstLineRec@1100525000 : Record 11012154);
    BEGIN
      EstLineRec.SETFILTER(Recipe, '%1', '');
      IF EstLineRec.FINDSET THEN BEGIN
        LastEstNo := '';
        REPEAT
          IF (EstLineRec."Estimate No." <> LastEstNo) THEN BEGIN
            LastEstNo := EstLineRec."Estimate No.";
            IF NOT EstRec.GET(LastEstNo) THEN
              EstRec.INIT;
          END;
          CompRec.INIT;
          CompRec."Estimate No." := EstLineRec."Estimate No.";
          CompRec."Sub-Estimate No." := EstLineRec."Sub-Estimate No.";
          CompRec."Part Group" := EstLineRec."Part Group";
          CompRec.Part := EstLineRec.Part;
          CompRec."Estimate Line" := EstLineRec."Line No.";
          CompRec."Recipe Group" := EstLineRec."Recipe Group";
          CompRec.Recipe := EstLineRec.Recipe;
          CompRec.Description := EstLineRec.Description;
          IF EstLineRec."Cost Object Plant" <> '' THEN
            CompRec."Cost Object" := EstLineRec."Cost Object Plant";
          IF EstLineRec."Cost Object Subcontracting" <> '' THEN
            CompRec."Cost Object" := EstLineRec."Cost Object Subcontracting";
          IF EstLineRec."Cost Object Material" <> '' THEN
            CompRec."Cost Object" := EstLineRec."Cost Object Material";
          CompRec."Cost Object Material" := EstLineRec."Cost Object Material";
          CompRec."Cost Object Subcontracting" := EstLineRec."Cost Object Subcontracting";
          CompRec."Cost Object Plant" := EstLineRec."Cost Object Plant";
          CompRec.Quantity := EstLineRec.Quantity * EstLineRec."Part Quantity";
          CompRec."Unit of Measure" := EstLineRec."Unit of Measure";
          CompRec.Norm := EstLineRec.Norm;
          CompRec.Rate := EstLineRec.Rate;
          CompRec."Rate Code" := EstLineRec."Rate Code";
          CompRec."Rate Type" := EstLineRec."Rate Type";
          CompRec."Team Size" := EstLineRec."Team Size";
          CompRec."Material Price" := EstLineRec."Material Price";
          CompRec."Discount %" := EstLineRec."Discount %";
          CompRec."Gross Price" := EstLineRec."Gross Price";
          CompRec."Subcontracting Price" := EstLineRec."Subcontracting Price";
          CompRec."Plant Price" := EstLineRec."Plant Price";
          CompRec."Item No." := EstLineRec."Item No.";
          CompRec."Basic Item" := EstLineRec."Basic Item";
          CompRec."Trade Item" := EstLineRec."Trade Item";
          CompRec."Vendor (Trade Item)" := EstLineRec."Vendor (Trade Item)";
          CompRec.Manufacturer := EstLineRec.Manufacturer;
          CompRec."Text Composition" := ComposeText(CompRec);
          CompRec."Purchaser Code" := EstRec."Purchaser Code";
          CompRec.Vendor := EstLineRec.Vendor;
          FillCostType();
          IF CompRec."Cost Type" = CompRec."Cost Type"::Material THEN BEGIN
            CompRec."Purchase Action" := EstLineRec."Purchase Action Mat.";
            CompRec."Purchase Phase" := EstLineRec."Purchase Phase Mat.";
          END;
          IF CompRec."Cost Type" = CompRec."Cost Type"::Subcontracting THEN BEGIN
            CompRec."Purchase Action" := EstLineRec."Purchase Action Subc.";
            CompRec."Purchase Phase" := EstLineRec."Purchase Phase Subc.";
          END;
          IF CompRec."Cost Type" = CompRec."Cost Type"::Plant THEN BEGIN
            CompRec."Purchase Action" := EstLineRec."Purchase Action Plant";
            CompRec."Purchase Phase" := EstLineRec."Purchase Phase Plant";
          END;
          CompRec."Purchase Route Reference" := EstLineRec."Purchase Route Reference";  //db, 09-12-10: M18179
          IF CheckInsertCompTable() THEN
            CompRec.INSERT;
        UNTIL EstLineRec.NEXT = 0;
      END;
    END;

    PROCEDURE FillBufferWithEstimateLinesNEW@1100528901(VAR EstLineRec@1100525000 : Record 11072072);
    BEGIN
      EstLineRec.SETFILTER(Recipe, '%1', '');
      IF EstLineRec.FINDSET THEN BEGIN
        LastEstNo := '';
        REPEAT
          IF (EstLineRec."Estimate No." <> LastEstNo) THEN BEGIN
            LastEstNo := EstLineRec."Estimate No.";
            IF NOT EstRec.GET(LastEstNo) THEN
              EstRec.INIT;
          END;
          CompRec.INIT;
          CompRec."Estimate No." := EstLineRec."Estimate No.";
          CompRec."Sub-Estimate No." := EstLineRec."Sub-Estimate No.";
          CompRec."Part Group" := EstLineRec."Part Group";
          CompRec.Part := EstLineRec.Part;
          CompRec."Estimate Line" := EstLineRec."Line No.";
          CompRec."Recipe Group" := EstLineRec."Recipe Group";
          CompRec.Recipe := EstLineRec.Recipe;
          CompRec.Description := EstLineRec.Description;
          CompRec.Quantity := EstLineRec.Quantity * EstLineRec."Part Quantity";
          CompRec."Unit of Measure" := EstLineRec."Unit of Measure";
          CompRec.Norm := EstLineRec.Norm;
          CompRec.Rate := EstLineRec."Cost Rate";
          CompRec."Rate Code" := EstLineRec."Rate Code";
          CompRec."Rate Type" := EstLineRec."Rate Type";
          CompRec."Team Size" := EstLineRec."Team Size";
          CompRec."Cost Type" := EstLineRec."Cost Type (Price)";
          CompRec."Cost Object" := EstLineRec."Cost Object Price";
          IF EstLineRec."Cost Type (Price)" = EstLineRec."Cost Type (Price)"::Material THEN BEGIN
            CompRec."Material Price" := EstLineRec."Nett Cost Price";
            CompRec."Cost Object Material" := EstLineRec."Cost Object Price";
          END;
          IF EstLineRec."Cost Type (Price)" = EstLineRec."Cost Type (Price)"::Subcontracting THEN BEGIN
            CompRec."Subcontracting Price" := EstLineRec."Nett Cost Price";
            CompRec."Cost Object Subcontracting" := EstLineRec."Cost Object Price";
          END;
          IF EstLineRec."Cost Type (Price)" = EstLineRec."Cost Type (Price)"::Plant THEN BEGIN
            CompRec."Plant Price" := EstLineRec."Nett Cost Price";
            CompRec."Cost Object Plant" := EstLineRec."Cost Object Price";
          END;
          CompRec."Discount %" := EstLineRec."Purchase Discount %";
          CompRec."Gross Price" := EstLineRec."Gross Price";
          CompRec."Item No." := EstLineRec."Item No.";
          CompRec."Basic Item" := EstLineRec."Basic Item";
          CompRec."Trade Item" := EstLineRec."Trade Item";
          CompRec."Vendor (Trade Item)" := EstLineRec."Vendor (Trade Item)";
          CompRec.Manufacturer := EstLineRec.Manufacturer;
          CompRec."Text Composition" := ComposeText(CompRec);
          CompRec."Purchaser Code" := EstRec."Purchaser Code";
          CompRec.Vendor := EstLineRec.Vendor;
          //FillCostType();  //DO00381
          IF CompRec."Cost Type" = CompRec."Cost Type"::Material THEN BEGIN
            CompRec."Purchase Action" := EstLineRec."Purchase Action Mat.";
            CompRec."Purchase Phase" := EstLineRec."Purchase Phase Mat.";
          END;
          IF CompRec."Cost Type" = CompRec."Cost Type"::Subcontracting THEN BEGIN
            CompRec."Purchase Action" := EstLineRec."Purchase Action Subc.";
            CompRec."Purchase Phase" := EstLineRec."Purchase Phase Subc.";
          END;
          IF CompRec."Cost Type" = CompRec."Cost Type"::Plant THEN BEGIN
            CompRec."Purchase Action" := EstLineRec."Purchase Action Plant";
            CompRec."Purchase Phase" := EstLineRec."Purchase Phase Plant";
          END;
          CompRec."Purchase Route Reference" := EstLineRec."Purchase Route Reference";  //db, 09-12-10: M18179
          IF CheckInsertCompTable() THEN
            CompRec.INSERT;
        UNTIL EstLineRec.NEXT = 0;
      END;
    END;

    PROCEDURE FillBufferWithRecipeLinesOLD@1210190004(VAR RcpLineRec@1100525000 : Record 11012156);
    VAR
      EstLineRec@1100528901 : Record 11012154;
    BEGIN
      //RcpLineRec.SETFILTER("Estimate No.", '<>%1', '');  //* Skip standard recipes->already set by DataItemTableView in report 11012172
      IF RcpLineRec.FINDSET THEN BEGIN
        LastEstNo := '';
        REPEAT
          IF (RcpLineRec."Estimate No." <> LastEstNo) THEN BEGIN
            LastEstNo := RcpLineRec."Estimate No.";
            IF NOT EstRec.GET(LastEstNo) THEN
              EstRec.INIT;
          END;
          CompRec.INIT;
          CompRec."Estimate No." := RcpLineRec."Estimate No.";
          CompRec."Sub-Estimate No." := RcpLineRec."Sub-Estimate No.";
          CompRec."Part Group" := RcpLineRec."Part Group";
          CompRec.Part := RcpLineRec.Part;
          CompRec."Estimate Line" := RcpLineRec."Estimate Line";
          CompRec."Recipe Line" := RcpLineRec."Line No.";
          CompRec."Recipe Group" := RcpLineRec."Recipe Group";
          CompRec.Recipe := RcpLineRec.Recipe;
          CompRec.Description := RcpLineRec.Description;
          IF RcpLineRec."Cost Object Plant" <> '' THEN BEGIN
            CompRec."Cost Object" := RcpLineRec."Cost Object Plant";
            CompRec."Cost Type" := CompRec."Cost Type"::Plant;
          END;
          IF RcpLineRec."Cost Object Subcontracting" <> '' THEN BEGIN
            CompRec."Cost Object" := RcpLineRec."Cost Object Subcontracting";
            CompRec."Cost Type" := CompRec."Cost Type"::Subcontracting;
          END;
          IF RcpLineRec."Cost Object Material" <> '' THEN BEGIN
            CompRec."Cost Object" := RcpLineRec."Cost Object Material";
            CompRec."Cost Type" := CompRec."Cost Type"::Material;
          END;
          CompRec."Cost Object Material" := RcpLineRec."Cost Object Material";
          CompRec."Cost Object Subcontracting" := RcpLineRec."Cost Object Subcontracting";
          CompRec."Cost Object Plant" := RcpLineRec."Cost Object Plant";
          EstLineRec.GET(RcpLineRec."Estimate No.", RcpLineRec."Sub-Estimate No.", RcpLineRec."Part Group",
            RcpLineRec.Part, RcpLineRec."Estimate Line");
          CompRec.Quantity := RcpLineRec.Quantity * EstLineRec.Quantity * EstLineRec."Part Quantity";
          CompRec."Unit of Measure" := RcpLineRec."Unit of Measure";
          CompRec.Norm := RcpLineRec.Norm;
          CompRec.Rate := RcpLineRec.Rate;
          CompRec."Rate Code" := RcpLineRec."Rate Code";
          CompRec."Rate Type" := RcpLineRec."Rate Type";
          CompRec."Team Size" := RcpLineRec."Team Size";
          CompRec."Material Price" := RcpLineRec."Material Price";
          CompRec."Discount %" := RcpLineRec."Discount %";
          CompRec."Gross Price" := RcpLineRec."Gross Price";
          CompRec."Subcontracting Price" := RcpLineRec."Subcontracting Price";
          CompRec."Plant Price" := RcpLineRec."Plant Price";
          CompRec."Item No." := RcpLineRec."Item No.";
          CompRec."Basic Item" := RcpLineRec."Basic Item";
          CompRec."Trade Item" := RcpLineRec."Trade Item";
          CompRec."Vendor (Trade Item)" := RcpLineRec."Vendor (Trade Item)";
          CompRec.Manufacturer := RcpLineRec.Manufacturer;
          CompRec."Text Composition" := ComposeText(CompRec);
          CompRec."Purchaser Code" := EstRec."Purchaser Code";
          FillCostType();
          IF CompRec."Cost Type" = CompRec."Cost Type"::Material THEN BEGIN
            CompRec."Purchase Action" := RcpLineRec."Purchase Action Mat.";
            CompRec."Purchase Phase" := RcpLineRec."Purchase Phase Mat.";
          END;
          IF CompRec."Cost Type" = CompRec."Cost Type"::Subcontracting THEN BEGIN
            CompRec."Purchase Action" := RcpLineRec."Purchase Action Subc.";
            CompRec."Purchase Phase" := RcpLineRec."Purchase Phase Subc.";
          END;
          IF CompRec."Cost Type" = CompRec."Cost Type"::Plant THEN BEGIN
            CompRec."Purchase Action" := RcpLineRec."Purchase Action Plant";
            CompRec."Purchase Phase" := RcpLineRec."Purchase Phase Plant";
          END;
          CompRec."Purchase Route Reference" := RcpLineRec."Purchase Route Reference";  //db, 09-12-10: M18179
          IF CheckInsertCompTable() THEN
            CompRec.INSERT;
        UNTIL RcpLineRec.NEXT = 0;
      END;
    END;

    PROCEDURE FillBufferWithRecipeLinesNEW@1100528902(VAR RcpLineRec@1100525000 : Record 11072075);
    VAR
      EstLineRec@1100528900 : Record 11072072;
    BEGIN
      IF RcpLineRec.FINDSET THEN BEGIN
        LastEstNo := '';
        REPEAT
          IF (RcpLineRec."Estimate No." <> LastEstNo) THEN BEGIN
            LastEstNo := RcpLineRec."Estimate No.";
            IF NOT EstRec.GET(LastEstNo) THEN
              EstRec.INIT;
          END;
          CompRec.INIT;
          CompRec."Estimate No." := RcpLineRec."Estimate No.";
          CompRec."Sub-Estimate No." := RcpLineRec."Sub-Estimate No.";
          CompRec."Part Group" := RcpLineRec."Part Group";
          CompRec.Part := RcpLineRec.Part;
          CompRec."Estimate Line" := RcpLineRec."Estimate Line";
          CompRec."Recipe Line" := RcpLineRec."Line No.";
          CompRec."Recipe Group" := RcpLineRec."Recipe Group";
          CompRec.Recipe := RcpLineRec.Recipe;
          CompRec.Description := RcpLineRec.Description;
          EstLineRec.GET(RcpLineRec."Estimate No.", RcpLineRec."Sub-Estimate No.", RcpLineRec."Part Group",
            RcpLineRec.Part, RcpLineRec."Estimate Line");
          CompRec.Quantity := RcpLineRec.Quantity * EstLineRec.Quantity * EstLineRec."Part Quantity";
          CompRec."Unit of Measure" := RcpLineRec."Unit of Measure";
          CompRec.Norm := RcpLineRec.Norm;
          CompRec.Rate := RcpLineRec."Cost Rate";
          CompRec."Rate Code" := RcpLineRec."Rate Code";
          CompRec."Rate Type" := RcpLineRec."Rate Type";
          CompRec."Team Size" := RcpLineRec."Team Size";
          CompRec."Cost Type" := RcpLineRec."Cost Type (Price)";
          CompRec."Cost Object" := RcpLineRec."Cost Object Price";
          IF RcpLineRec."Cost Type (Price)" = RcpLineRec."Cost Type (Price)"::Material THEN BEGIN
            CompRec."Material Price" := RcpLineRec."Nett Cost Price";
            CompRec."Cost Object Material" := RcpLineRec."Cost Object Price";
          END;
          IF RcpLineRec."Cost Type (Price)" = RcpLineRec."Cost Type (Price)"::Subcontracting THEN BEGIN
            CompRec."Subcontracting Price" := RcpLineRec."Nett Cost Price";
            CompRec."Cost Object Subcontracting" := RcpLineRec."Cost Object Price";
          END;
          IF RcpLineRec."Cost Type (Price)" = RcpLineRec."Cost Type (Price)"::Plant THEN BEGIN
            CompRec."Plant Price" := RcpLineRec."Nett Cost Price";
            CompRec."Cost Object Plant" := RcpLineRec."Cost Object Price";
          END;
          CompRec."Discount %" := RcpLineRec."Purchase Discount %";
          CompRec."Gross Price" := RcpLineRec."Gross Price";
          CompRec."Item No." := RcpLineRec."Item No.";
          CompRec."Basic Item" := RcpLineRec."Basic Item";
          CompRec."Trade Item" := RcpLineRec."Trade Item";
          CompRec."Vendor (Trade Item)" := RcpLineRec."Vendor (Trade Item)";
          CompRec.Manufacturer := RcpLineRec.Manufacturer;
          CompRec."Text Composition" := ComposeText(CompRec);
          CompRec."Purchaser Code" := EstRec."Purchaser Code";
          //FillCostType();  //DP00381
          IF CompRec."Cost Type" = CompRec."Cost Type"::Material THEN BEGIN
            CompRec."Purchase Action" := RcpLineRec."Purchase Action Mat.";
            CompRec."Purchase Phase" := RcpLineRec."Purchase Phase Mat.";
          END;
          IF CompRec."Cost Type" = CompRec."Cost Type"::Subcontracting THEN BEGIN
            CompRec."Purchase Action" := RcpLineRec."Purchase Action Subc.";
            CompRec."Purchase Phase" := RcpLineRec."Purchase Phase Subc.";
          END;
          IF CompRec."Cost Type" = CompRec."Cost Type"::Plant THEN BEGIN
            CompRec."Purchase Action" := RcpLineRec."Purchase Action Plant";
            CompRec."Purchase Phase" := RcpLineRec."Purchase Phase Plant";
          END;
          CompRec."Purchase Route Reference" := RcpLineRec."Purchase Route Reference";  //db, 09-12-10: M18179
          IF CheckInsertCompTable() THEN
            CompRec.INSERT;
        UNTIL RcpLineRec.NEXT = 0;
      END;
    END;

    PROCEDURE FillBufferWithRawEstimateLines@1100525000();
    VAR
      EstlineRec@1100525000 : Record 11125680;
    BEGIN
      EstlineRec.RESET;
      EstlineRec.SETCURRENTKEY("Purchase Route Reference", "Ask for Quote");
      EstlineRec.SETRANGE("Purchase Route Reference", '');
      EstlineRec.SETRANGE("Ask for Quote", TRUE);

      IF EstlineRec.FINDSET THEN BEGIN
        LastEstNo := '';
        REPEAT
          IF (EstlineRec."Estimate No." <> LastEstNo) THEN BEGIN
            LastEstNo := EstlineRec."Estimate No.";
            IF NOT EstRec.GET(LastEstNo) THEN
              EstRec.INIT;
          END;
          CompRec.INIT;
          CompRec."Estimate No." := EstlineRec."Estimate No.";
          CompRec."Element No. (RAW)" := EstlineRec."Element No.";
          CompRec."Estimate Line" := EstlineRec."Line No.";
          CompRec.Description := EstlineRec.Description;
          IF EstlineRec."Cost Object Plant" <> '' THEN
            CompRec."Cost Object" := EstlineRec."Cost Object Plant";
          IF EstlineRec."Cost Object Subcontracting" <> '' THEN
            CompRec."Cost Object" := EstlineRec."Cost Object Subcontracting";
          IF EstlineRec."Cost Object Material" <> '' THEN
            CompRec."Cost Object" := EstlineRec."Cost Object Material";
          CompRec."Cost Object Material" := EstlineRec."Cost Object Material";
          CompRec."Cost Object Subcontracting" := EstlineRec."Cost Object Subcontracting";
          CompRec."Cost Object Plant" := EstlineRec."Cost Object Plant";
          CompRec.Quantity := EstlineRec.Quantity * EstlineRec."Part Quantity";
          CompRec."Unit of Measure" := EstlineRec."Unit of Measure";
          CompRec.Norm := EstlineRec.Norm;
          CompRec.Rate := EstlineRec.Rate;
          CompRec."Rate Code" := EstlineRec."Rate Code";
          CompRec."Rate Type" := EstlineRec."Rate Type";
          CompRec."Team Size" := EstlineRec."Team Size";
          CompRec."Material Price" := EstlineRec."Material Price";
          CompRec."Discount %" := EstlineRec."Discount %";
          CompRec."Gross Price" := EstlineRec."Gross Price";
          CompRec."Subcontracting Price" := EstlineRec."Subcontracting Price";
          CompRec."Plant Price" := EstlineRec."Plant Price";
          CompRec."Item No." := EstlineRec."Item No.";
          CompRec."Basic Item" := EstlineRec."Basic Item";
          CompRec."Trade Item" := EstlineRec."Trade Item";
          CompRec."Vendor (Trade Item)" := EstlineRec."Vendor (Trade Item)";
          CompRec.Manufacturer := EstlineRec.Manufacturer;
          CompRec."Text Composition" := ComposeText(CompRec);
          CompRec."Purchaser Code" := EstRec."Purchaser Code";
          CompRec.Vendor := EstlineRec.Vendor;
          FillCostType();
          IF CompRec."Cost Type" = CompRec."Cost Type"::Material THEN BEGIN
            CompRec."Purchase Action" := EstlineRec."Purchase Action Mat.";
            CompRec."Purchase Phase" := EstlineRec."Purchase Phase Mat.";
          END;
          IF CompRec."Cost Type" = CompRec."Cost Type"::Subcontracting THEN BEGIN
            CompRec."Purchase Action" := EstlineRec."Purchase Action Subc.";
            CompRec."Purchase Phase" := EstlineRec."Purchase Phase Subc.";
          END;
          IF CompRec."Cost Type" = CompRec."Cost Type"::Plant THEN BEGIN
            CompRec."Purchase Action" := EstlineRec."Purchase Action Plant";
            CompRec."Purchase Phase" := EstlineRec."Purchase Phase Plant";
          END;
          CompRec."Purchase Route Reference" := EstlineRec."Purchase Route Reference";  //db, 09-12-10: M18179
          IF CheckInsertCompTable() THEN
            CompRec.INSERT;
        UNTIL EstlineRec.NEXT = 0;
      END;
    END;

    PROCEDURE FillCostType@1210190007();
    BEGIN
      IF (CompRec."Cost Object Material" <> '') THEN BEGIN
        CompRec."Cost Type" := CompRec."Cost Type"::Material;
        EXIT;
      END;

      IF (CompRec."Cost Object Subcontracting" <> '') THEN BEGIN
        CompRec."Cost Type" := CompRec."Cost Type"::Subcontracting;
        EXIT;
      END;

      IF (CompRec."Cost Object Plant" <> '') THEN BEGIN
        CompRec."Cost Type" := CompRec."Cost Type"::Plant;
        EXIT;
      END;

      IF (CompRec."Material Price" <> 0) THEN BEGIN
        CompRec."Cost Type" := CompRec."Cost Type"::Material;
        EXIT;
      END;

      IF (CompRec."Subcontracting Price" <>0) THEN BEGIN
        CompRec."Cost Type" := CompRec."Cost Type"::Subcontracting;
        EXIT;
      END;

      IF (CompRec."Plant Price" <> 0) THEN BEGIN
        CompRec."Cost Type" := CompRec."Cost Type"::Plant;
        EXIT;
      END;
    END;

    PROCEDURE CheckInsertCompTable@1210190001() : Boolean;
    BEGIN
      IF (CompRec.Quantity = 0) THEN
        EXIT(FALSE);

      IF ((CompRec."Material Price" = 0) AND (CompRec."Cost Object Material" = '')) AND
         ((CompRec."Subcontracting Price" = 0) AND (CompRec."Cost Object Subcontracting" = '')) AND
         ((CompRec."Plant Price" = 0) AND (CompRec."Cost Object Plant" = ''))
      THEN
        EXIT(FALSE);  // Skip Labor

      EXIT(TRUE);
    END;

    PROCEDURE UpdateCompLineAndCompressed@1210190005();
    VAR
      LastLino@1210190006 : Integer;
      LastText@1210190004 : Text[250];
      LastEstm@1210190007 : Code[50];
      LastCtyp@1210190000 : Option;
    BEGIN
      CompRec.RESET;
      CompRec.SETCURRENTKEY("Estimate No.","Cost Type","Text Composition");

      LastLino := 0;
      LastText := '~';
      LastEstm := '~';
      CLEAR(LastCtyp);
      IF CompRec.FINDSET(TRUE, FALSE) THEN BEGIN
        REPEAT
          CompRec."Line No." := LastLino + 1;
          LastLino := CompRec."Line No.";
          IF (LastEstm <> CompRec."Estimate No.") OR
             (LastCtyp <> CompRec."Cost Type") OR
             (LastText <> CompRec."Text Composition")
          THEN BEGIN
            CompRec.Compressed := TRUE;
            LastEstm := CompRec."Estimate No.";
            LastCtyp := CompRec."Cost Type";
            LastText := CompRec."Text Composition";
          END;
          CompRec.MODIFY;
        UNTIL CompRec.NEXT = 0;
      END;
    END;

    PROCEDURE CalculateTotalQuantity@1210190009() : Decimal;
    VAR
      lvTotalQuantity@1210190000 : Decimal;
    BEGIN
      lvTotalQuantity := 0;

      CompRec.RESET;
      CompRec.SETCURRENTKEY(
        "Estimate No.", "Cost Type", "Text Composition");
      CompRec.SETRANGE("Estimate No.", "Estimate No.");
      CompRec.SETRANGE("Cost Type", "Cost Type");
      CompRec.SETRANGE("Text Composition", "Text Composition");
      IF CompRec.FINDSET THEN BEGIN
        REPEAT
          lvTotalQuantity := lvTotalQuantity + CompRec.Quantity;
        UNTIL CompRec.NEXT = 0;
      END;

      EXIT(lvTotalQuantity);
    END;

    PROCEDURE ComposeText@1210190016(MainRec@1210190000 : Record 11012193) TextComp : Code[250];
    VAR
      sep@1100485000 : Text[30];
    BEGIN
      sep := '~';
      TextComp := '';

      TextComp := TextComp + MainRec.Description + sep;
      TextComp := TextComp + MainRec."Unit of Measure" + sep;
      TextComp := TextComp + MainRec."Rate Code" + sep;
      IF MainRec."Trade Item" <> '' THEN
        TextComp := TextComp + MainRec."Trade Item" + sep
      ELSE
        IF MainRec."Basic Item" <> '' THEN
          TextComp := TextComp + MainRec."Basic Item" + sep
        ELSE
          IF MainRec."Item No." <> '' THEN
            TextComp := TextComp + MainRec."Item No." + sep
          ELSE
            TextComp := TextComp + MainRec."Cost Object" + sep;

      TextComp := COPYSTR(TextComp, 1, MAXSTRLEN(MainRec."Text Composition"));  //100+10+10+20
      EXIT(TextComp);
    END;

    BEGIN
    END.
  }
}

