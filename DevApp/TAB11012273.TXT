OBJECT Table 11012273 Import Line (FSA)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               lvImportRec@1100485000 : Record 11012273;
             BEGIN
               IF ("Line No." = 0) THEN BEGIN
                 lvImportRec.SETRANGE("Date/Time", "Date/Time");
                 lvImportRec.SETRANGE("Message Type", "Message Type");
                 IF lvImportRec.FINDLAST THEN
                   "Line No." := lvImportRec."Line No." + 1
                 ELSE
                   "Line No." := 1;
               END;
             END;

    OnDelete=VAR
               lvLogbookRec@1100485000 : Record 11012271;
             BEGIN
               DeleteErrors();

               IF lvLogbookRec.GET("Date/Time", "Message Type") THEN BEGIN
                 IF (lvLogbookRec.Status <> lvLogbookRec.Status::Processed) THEN BEGIN
                   lvLogbookRec.CALCFIELDS("No. not Processed");
                   IF (lvLogbookRec."No. not Processed" <= 1) THEN BEGIN  //* Not '<=0' because record is not deleted here.
                     lvLogbookRec.Status := lvLogbookRec.Status::Processed;
                     lvLogbookRec.MODIFY;
                   END;
                 END;
               END;
             END;

    CaptionML=ENU=Import Line Field Service;
    DrillDownPageID=Page11020387;
  }
  FIELDS
  {
    { 10  ;   ;Date/Time           ;DateTime      ;CaptionML=ENU=Date/Time }
    { 20  ;   ;Message Type        ;Option        ;CaptionML=ENU=Message Type;
                                                   OptionCaptionML=ENU=Reference Data,Employees,Service Orders,Items,Customers,Service Locations,,,,,,,,Status,Debrief,Text,Hours (Service),Indirect Hours;
                                                   OptionString=RefData,Empl,ServOrder,Item,Cust,ServLoc,,,,,,,,Status,Debrief,Text,ServHours,IndirectHours;
                                                   Description=Options in tables 11012271, 11012272 and 11012273 should be equal }
    { 30  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 40  ;   ;Line Type           ;Option        ;CaptionML=ENU=Line Type;
                                                   OptionCaptionML=ENU=Service Order,Text,Budget,Cost Plus,Status,Hours (Service),IndirectHours,Advice Order,Specifications;
                                                   OptionString=ServOrder,Text,Budget,CostPlus,Status,ServHours,IndirectHours,AdviceOrder,Specs;
                                                   Description=Options in tables 11012273 and 11012275 must be the same }
    { 50  ;   ;File Name           ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Exchange Logbook (FSA)"."File Name" WHERE (Date/Time=FIELD(Date/Time),
                                                                                                                  Message Type=FIELD(Message Type)));
                                                   CaptionML=ENU=File Name;
                                                   Editable=No }
    { 55  ;   ;No. of Errors       ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Exchange Error (FSA)" WHERE (Date/Time=FIELD(Date/Time),
                                                                                                   Message Type=FIELD(Message Type),
                                                                                                   Import Line No.=FIELD(Line No.),
                                                                                                   Type=CONST(Error)));
                                                   CaptionML=ENU=Errors;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 56  ;   ;No. of Notes        ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Exchange Error (FSA)" WHERE (Date/Time=FIELD(Date/Time),
                                                                                                   Message Type=FIELD(Message Type),
                                                                                                   Import Line No.=FIELD(Line No.),
                                                                                                   Type=CONST(Note)));
                                                   CaptionML=ENU=Notes;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 57  ;   ;No. of Calls        ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Exchange Error (FSA)" WHERE (Date/Time=FIELD(Date/Time),
                                                                                                   Message Type=FIELD(Message Type),
                                                                                                   Import Line No.=FIELD(Line No.)));
                                                   CaptionML=ENU=Calls;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 100 ;   ;Service Order No.   ;Code20        ;TableRelation="Service Order".No.;
                                                   CaptionML=ENU=Service Order No. }
    { 101 ;   ;Service Order Line No.;Integer     ;CaptionML=ENU=SO Line No.;
                                                   BlankZero=Yes;
                                                   Description=Bv. Budget Line No. }
    { 105 ;   ;Decentral Created Order;Boolean    ;CaptionML=ENU=Decentral Created Order;
                                                   Editable=No }
    { 106 ;   ;Service Location No.;Code20        ;TableRelation="Service Location".No.;
                                                   CaptionML=ENU=Service Location No. }
    { 110 ;   ;Problem             ;Code10        ;TableRelation="Service Analysis".Code WHERE (Analysis Type=CONST(Problem));
                                                   CaptionML=ENU=Problem }
    { 111 ;   ;Cause               ;Code10        ;TableRelation="Service Analysis".Code WHERE (Analysis Type=CONST(Cause));
                                                   CaptionML=ENU=Cause }
    { 112 ;   ;Solution            ;Code10        ;TableRelation="Service Analysis".Code WHERE (Analysis Type=CONST(Solution));
                                                   CaptionML=ENU=Solution }
    { 113 ;   ;Problem Text        ;Text250       ;CaptionML=ENU=Problem Text }
    { 114 ;   ;Internal Text       ;Text250       ;CaptionML=ENU=Internal Text }
    { 115 ;   ;Discipline          ;Code10        ;TableRelation=Discipline;
                                                   CaptionML=ENU=Discipline }
    { 119 ;   ;Order No. Customer  ;Text50        ;CaptionML=ENU=Order No. Customer }
    { 120 ;   ;Your Reference      ;Text35        ;CaptionML=ENU=Your Reference }
    { 121 ;   ;Customer No.        ;Code20        ;TableRelation=Customer.No.;
                                                   CaptionML=ENU=Customer No. }
    { 122 ;   ;Name                ;Text50        ;CaptionML=ENU=Name }
    { 123 ;   ;Address             ;Text50        ;CaptionML=ENU=Address }
    { 124 ;   ;Post Code           ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Post Code }
    { 125 ;   ;City                ;Text30        ;CaptionML=ENU=City }
    { 126 ;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Phone No. }
    { 127 ;   ;E-Mail              ;Text80        ;CaptionML=ENU=E-Mail }
    { 128 ;   ;Contact Name        ;Text50        ;CaptionML=ENU=Contact Name }
    { 140 ;   ;Object No.          ;Code20        ;CaptionML=ENU=Object No. }
    { 145 ;   ;Object Customer     ;Code20        ;CaptionML=ENU=Object Customer }
    { 150 ;   ;Building            ;Text30        ;CaptionML=ENU=Building }
    { 151 ;   ;Floor               ;Text30        ;CaptionML=ENU=Floor }
    { 152 ;   ;Room                ;Text30        ;CaptionML=ENU=Room }
    { 160 ;   ;Trade Speciality    ;Code10        ;TableRelation="Trade Speciality";
                                                   CaptionML=ENU=Trade Speciality }
    { 161 ;   ;Trade Expertise     ;Code10        ;TableRelation="Trade Expertise";
                                                   CaptionML=ENU=Trade Expertise }
    { 170 ;   ;Finished            ;Boolean       ;CaptionML=ENU=Finished }
    { 175 ;   ;Follow-up Job       ;Boolean       ;CaptionML=ENU=Follow-up Job }
    { 200 ;   ;Date                ;Date          ;CaptionML=ENU=Date }
    { 205 ;   ;Times               ;Time          ;CaptionML=ENU=Time;
                                                   Description=Fieldname Times instead of Time because TIME reserved variabele (NB: Caption-ENU is 'Time') }
    { 210 ;   ;Employee No.        ;Code20        ;TableRelation=Employee;
                                                   CaptionML=ENU=Employee No. }
    { 211 ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=ENU=Item No. }
    { 212 ;   ;Basic Item          ;Code20        ;TableRelation="Basic Item"."Product Code" WHERE (Manufacturer=FIELD(Manufacturer));
                                                   CaptionML=ENU=Basic Item }
    { 213 ;   ;Trade Item          ;Code20        ;TableRelation="Trade Item"."Item Code" WHERE (Vendor=FIELD("Vendor (Trade Item)"));
                                                   CaptionML=ENU=Trade Item }
    { 215 ;   ;Vendor (Trade Item) ;Code15        ;TableRelation="ETIM Vendor (Central Mgt)";
                                                   CaptionML=ENU=Vendor (Trade Item) }
    { 216 ;   ;Manufacturer        ;Code15        ;TableRelation="ETIM Vendor (Central Mgt)";
                                                   CaptionML=ENU=Manufacturer }
    { 220 ;   ;Cost Object         ;Code20        ;TableRelation="Dimension Value".Code WHERE (Cost Type=FILTER(<>Revenue),
                                                                                               Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Cost Object }
    { 225 ;   ;Cost Component      ;Code20        ;TableRelation="Cost Component";
                                                   CaptionML=ENU=Cost Component }
    { 226 ;   ;Wage Component      ;Code10        ;TableRelation="Wage Component".Code WHERE (Component Type=FILTER(Hours|Expenses));
                                                   CaptionML=ENU=Wage Component }
    { 228 ;   ;Cost Code           ;Code10        ;TableRelation="Cost Code";
                                                   CaptionML=ENU=Cost Code }
    { 230 ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 231 ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
    { 240 ;   ;Quantity            ;Decimal       ;CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5 }
    { 245 ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure";
                                                   CaptionML=ENU=Unit of Measure }
    { 250 ;   ;Unit Cost           ;Decimal       ;CaptionML=ENU=Unit Cost;
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 260 ;   ;From Date           ;Date          ;OnValidate=BEGIN
                                                                VALIDATE("To Date");
                                                              END;

                                                   CaptionML=ENU=From Date }
    { 261 ;   ;From Time           ;Time          ;CaptionML=ENU=From Time }
    { 265 ;   ;To Date             ;Date          ;OnValidate=BEGIN
                                                                CASE "Line Type" OF
                                                                  "Line Type"::CostPlus:
                                                                    BEGIN
                                                                      IF ("To Date" <> 0D) AND ("To Date" < "From Date") THEN
                                                                        FIELDERROR("To Date",STRSUBSTNO(Text001,FIELDCAPTION("From Date")));
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=To Date }
    { 266 ;   ;To Time             ;Time          ;CaptionML=ENU=To Time }
    { 290 ;   ;Additional Cost     ;Boolean       ;CaptionML=ENU=Additional Cost }
    { 300 ;   ;Status Field Service;Text30        ;TableRelation="Field Service Code".Code WHERE (Type=CONST(Status));
                                                   CaptionML=ENU=Status Field Service }
    { 320 ;   ;Text Rubric         ;Code10        ;TableRelation="Debrief Text Rubric";
                                                   CaptionML=ENU=Text Rubric }
    { 405 ;   ;Comment             ;Text250       ;OnValidate=VAR
                                                                lvServOrderExtensionRec@1100485002 : Record 11071727;
                                                                lvDebriefTextRec@1100485000 : Record 11012886;
                                                                lvHrsAccLineRec@1100485001 : Record 11012039;
                                                              BEGIN
                                                                CASE "Line Type" OF
                                                                  "Line Type"::Text:
                                                                    BEGIN
                                                                      IF STRLEN(Comment) > MAXSTRLEN(lvDebriefTextRec.Comment) THEN
                                                                        FIELDERROR(Comment, STRSUBSTNO(Text000,MAXSTRLEN(lvDebriefTextRec.Comment)));
                                                                    END;
                                                                  "Line Type"::ServHours:
                                                                    BEGIN
                                                                      IF STRLEN(Comment) > MAXSTRLEN(lvHrsAccLineRec.Comment) THEN
                                                                        FIELDERROR(Comment, STRSUBSTNO(Text000,MAXSTRLEN(lvHrsAccLineRec.Comment)));
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Comment/Text }
    { 410 ;   ;Signature           ;BLOB          ;CaptionML=ENU=Signature;
                                                   SubType=Bitmap }
    { 428 ;   ;Level               ;Integer       ;CaptionML=ENU=Level }
    { 430 ;   ;Apply               ;Boolean       ;CaptionML=ENU=Apply }
    { 440 ;   ;Order Kind          ;Code10        ;TableRelation="Service Order Indication".Code WHERE (Indication=CONST(Kind));
                                                   CaptionML=ENU=Order Kind }
    { 441 ;   ;Order Type          ;Code10        ;TableRelation="Service Order Indication".Code WHERE (Indication=CONST(Type));
                                                   CaptionML=ENU=Order Type }
  }
  KEYS
  {
    {    ;Date/Time,Message Type,Line No.         ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100485000 : TextConst 'ENU=may maximum contain %1 characters';
      Text001@1100485001 : TextConst 'ENU=may not before %1';

    PROCEDURE DeleteErrors@1100485002();
    VAR
      lvErrorRec@1100485000 : Record 11012272;
    BEGIN
      //* Before calling this function, determine if deleting is allowed (if necessary), not add test to this function.
      lvErrorRec.SETRANGE("Date/Time", "Date/Time");
      lvErrorRec.SETRANGE("Message Type", "Message Type");
      lvErrorRec.SETRANGE("Import Line No.", "Line No.");
      lvErrorRec.DELETEALL;
    END;

    BEGIN
    END.
  }
}

