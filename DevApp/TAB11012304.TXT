OBJECT Table 11012304 ETIM Vendor (Central Mgt)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    OnInsert=BEGIN
               TESTFIELD("Select for Import Basic Items", FALSE);  //db, 29-08-14
               TESTFIELD("Select for Import Trade Items", FALSE);  //db, 29-08-14
             END;

    OnDelete=BEGIN
               CheckAlternative(1);
               DeleteVendorRelation;
             END;

    OnRename=BEGIN
               CheckAlternative(3);
             END;

    CaptionML=ENU=Vendor (Central Management);
    LookupPageID=Page11012323;
    DrillDownPageID=Page11012323;
  }
  FIELDS
  {
    { 10  ;   ;Code                ;Code15        ;AltSearchField=Search Argument;
                                                   CaptionML=ENU=Code;
                                                   NotBlank=Yes }
    { 20  ;   ;Name                ;Text50        ;CaptionML=ENU=Name }
    { 21  ;   ;Address             ;Text50        ;CaptionML=ENU=Address }
    { 22  ;   ;City                ;Text50        ;CaptionML=ENU=City }
    { 23  ;   ;Post Code           ;Code20        ;TableRelation="Post Code".Code;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Post Code }
    { 24  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Country/Region Code }
    { 55  ;   ;Vendor (Purchase)   ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ETIM Vendor (Local Mgt)"."Vendor (Purchase)" WHERE (Code=FIELD(Code)));
                                                   TableRelation=Vendor;
                                                   CaptionML=ENU=Vendor (Purchase);
                                                   Description=NAVISION;
                                                   Editable=No }
    { 56  ;   ;Vendor (Price/Discount);Code15     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ETIM Vendor (Local Mgt)"."Vendor (Price/Discount)" WHERE (Code=FIELD(Code)));
                                                   TableRelation="ETIM Vendor (Central Mgt)".Code;
                                                   CaptionML=ENU=Vendor (Price/Discount);
                                                   Description=NAVISION;
                                                   Editable=No }
    { 60  ;   ;Select for Import Trade Items;Boolean;
                                                   CaptionML=ENU=Select  for Import Trade Items;
                                                   Description=NAVISION (expired) }
    { 61  ;   ;Select for Import Basic Items;Boolean;
                                                   CaptionML=ENU=Select for Import Basic Items;
                                                   Description=NAVISION (expired) }
    { 65  ;   ;Trade Item Exists   ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Trade Item" WHERE (Vendor=FIELD(Code)));
                                                   CaptionML=ENU=Trade Item Exists;
                                                   Description=NAVISION;
                                                   Editable=No }
    { 66  ;   ;Basic Item Exists   ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Basic Item" WHERE (Manufacturer=FIELD(Code)));
                                                   CaptionML=ENU=Basic Item Exists;
                                                   Description=NAVISION;
                                                   Editable=No }
    { 70  ;   ;Format Discount Term;Option        ;CaptionML=ENU=Formaat Discount Term;
                                                   OptionCaptionML=ENU=" ,Wild Card,MGS";
                                                   OptionString=[ ,Wildcard,HGS];
                                                   Description=NAVISION }
    { 80  ;   ;Search Argument     ;Code20        ;CaptionML=ENU=Search Argument;
                                                   Description=NAVISION }
    { 100 ;   ;Alternative Vendor Code;Code15     ;TableRelation="ETIM Vendor (Central Mgt)".Code;
                                                   OnValidate=BEGIN
                                                                CheckAlternative(2);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Alternative Vendor Code;
                                                   Description=NAVISION }
    { 110 ;   ;Discount Term Exists;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Discount Term History" WHERE (Vendor=FIELD(Code)));
                                                   CaptionML=ENU=Discount Term Exists;
                                                   Description=NAVISION;
                                                   Editable=No }
    { 120 ;   ;Display Trade Items ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ETIM Vendor (Local Mgt)"."Display Trade Items" WHERE (Code=FIELD(Code)));
                                                   CaptionML=ENU=Display Trade Items;
                                                   Description=NAVISION;
                                                   Editable=No }
    { 130 ;   ;Display Basic Items ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ETIM Vendor (Local Mgt)"."Display Basic Items" WHERE (Code=FIELD(Code)));
                                                   CaptionML=ENU=Display Basic Items;
                                                   Description=NAVISION;
                                                   Editable=No }
    { 140 ;   ;User Name           ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ETIM Vendor (Local Mgt)"."User Name" WHERE (Code=FIELD(Code)));
                                                   CaptionML=ENU=User Name;
                                                   Editable=No }
    { 150 ;   ;Password            ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ETIM Vendor (Local Mgt)".Password WHERE (Code=FIELD(Code)));
                                                   CaptionML=ENU=Password;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Alternative Vendor Code                  }
    {    ;Name                                     }
    {    ;Search Argument                          }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Search Argument,Code,Alternative Vendor Code }
  }
  CODE
  {

    PROCEDURE CheckAlternative@1100485000(lvAction@1100485002 : Integer);
    VAR
      MainRec1@1100485000 : Record 11012304;
      MainRec2@1100485001 : Record 11012304;
      lvVendor@1100485003 : Code[20];
      lvText000@1100485004 : TextConst 'ENU=Recursion';
      lvText001@1100485005 : TextConst 'ENU=Do you want to add a Vendor Relation ?';
    BEGIN
      IF (lvAction = 1) OR (lvAction = 3) THEN BEGIN
        IF lvAction = 1 THEN  //delete
          MainRec1.SETRANGE("Alternative Vendor Code", Code);
        IF lvAction = 3 THEN  //rename
          MainRec1.SETRANGE("Alternative Vendor Code", xRec.Code);
        IF MainRec1.FIND('-') THEN BEGIN
          REPEAT
            MainRec2 := MainRec1;
            IF lvAction = 1 THEN
              MainRec2."Alternative Vendor Code" := '';
            IF lvAction = 3 THEN
              MainRec2."Alternative Vendor Code" := Code;
            MainRec2.MODIFY(TRUE);
          UNTIL MainRec1.NEXT = 0;
        END;
      END;

      IF lvAction = 2 THEN BEGIN  //modify alternative
        IF "Alternative Vendor Code" = '' THEN EXIT;
        IF "Alternative Vendor Code" = Code THEN ERROR(lvText000);

        IF NOT MainRec1.GET("Alternative Vendor Code") THEN BEGIN
          IF CONFIRM(lvText001, TRUE) = FALSE THEN ERROR('');
          MainRec1.COPY(Rec);
          MainRec1.Code := "Alternative Vendor Code";
          //MainRec1."Select for Import Trade Items" := FALSE;
          //MainRec1."Select for Import Basic Items" := FALSE;
          MainRec1."Alternative Vendor Code" := '';
          MainRec1.INSERT(TRUE);
        END;

        lvVendor := "Alternative Vendor Code";
        WHILE lvVendor <> '' DO BEGIN
          MainRec1.SETRANGE(Code, lvVendor);
          IF MainRec1.FIND('-') THEN BEGIN
            lvVendor := MainRec1."Alternative Vendor Code";
            IF Code = lvVendor THEN ERROR(lvText000);
          END ELSE BEGIN
            lvVendor := '';
          END;
        END;
      END;
    END;

    PROCEDURE HandleVendorLookup@1100485004(lvSelect@1100485002 : Integer;VAR lvCode@1100485003 : Code[20]);
    VAR
      InvtSetup@1100525000 : Record 313;
      VendorRec@1100485001 : Record 11012304;
      VendorFrm@1100485000 : Page 11012323;
    BEGIN
      CLEAR(VendorFrm);
      VendorFrm.LOOKUPMODE(TRUE);

      InvtSetup.GET;
      IF InvtSetup."Vendor Filter" = InvtSetup."Vendor Filter"::Hard THEN  //db, 25-03-09: M13927
        VendorRec.FILTERGROUP(2);

      IF lvSelect = 1 THEN BEGIN
        VendorRec.SETRANGE("Basic Item Exists", TRUE);
        IF InvtSetup."Vendor Filter" <> InvtSetup."Vendor Filter"::None THEN
          VendorRec.SETRANGE("Display Basic Items", TRUE);
      END;
      IF lvSelect = 2 THEN BEGIN
        VendorRec.SETRANGE("Trade Item Exists", TRUE);
        IF InvtSetup."Vendor Filter" <> InvtSetup."Vendor Filter"::None THEN
          VendorRec.SETRANGE("Display Trade Items", TRUE);
      END;

      //db.sn, 21-07-14: C014607
      //IF VendorRec.FINDSET THEN BEGIN
      //  REPEAT
      //    VendorRec.MARK := TRUE;
      //  UNTIL VendorRec.NEXT = 0;
      //  VendorRec.MARKEDONLY(TRUE);
      //END;
      //db.en, 21-07-14: C014607

      IF InvtSetup."Vendor Filter" = InvtSetup."Vendor Filter"::Hard THEN  //db, 25-03-09: M13927
        VendorRec.FILTERGROUP(0);

      IF VendorRec.GET(lvCode) THEN
        VendorFrm.SETRECORD(VendorRec);
      VendorFrm.SETTABLEVIEW(VendorRec);
      IF VendorFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
        VendorFrm.GETRECORD(VendorRec);
        lvCode := VendorRec.Code;
      END;
    END;

    PROCEDURE HandleVendorValidate@1100525000(lvCode@1100525002 : Code[20]);
    VAR
      InvtSetup@1100525001 : Record 313;
      VendorRec@1100525000 : Record 11012304;
    BEGIN
      //db, 25-02-10
      InvtSetup.GET;

      IF VendorRec.GET(lvCode) THEN BEGIN
        VendorRec.CALCFIELDS("Display Trade Items");  //db, 16-11-10: M23973
        IF InvtSetup."Vendor Filter" = InvtSetup."Vendor Filter"::Hard THEN
          VendorRec.TESTFIELD("Display Trade Items", TRUE);
      END;
    END;

    PROCEDURE DeleteVendorRelation@1100485009();
    VAR
      VendorRelationRec@1100485000 : Record 11012313;
    BEGIN
      //db, 26-05-08
      VendorRelationRec.SETRANGE(Code, Code);
      VendorRelationRec.DELETEALL;
    END;

    PROCEDURE GetGLNFromVendor@1100525004(TradeItemVendor@1100525000 : Code[15]) : Code[15];
    VAR
      ETIMVendorCentralMgt@1100525001 : Record 11012304;
    BEGIN
      //130222, kzwerver, n, #DP00285
      ETIMVendorCentralMgt.SETCURRENTKEY("Alternative Vendor Code");
      ETIMVendorCentralMgt.SETRANGE("Alternative Vendor Code", TradeItemVendor);
      IF (ETIMVendorCentralMgt.COUNT > 0) THEN BEGIN
        ETIMVendorCentralMgt.FINDFIRST;
        EXIT(ETIMVendorCentralMgt.Code);
      END;

      EXIT(TradeItemVendor); // Input var is already a GLN code
    END;

    PROCEDURE GetVendorFromGLN@1100525006(GLNCode@1100525000 : Code[15]) : Code[15];
    VAR
      ETIMVendorCentralMgt@1100525001 : Record 11012304;
    BEGIN
      //130222, kzwerver, n, #DP00285
      ETIMVendorCentralMgt.GET(GLNCode);
      IF ETIMVendorCentralMgt."Alternative Vendor Code" <> '' THEN BEGIN
        ETIMVendorCentralMgt.SETCURRENTKEY("Alternative Vendor Code");
        ETIMVendorCentralMgt.SETRANGE("Alternative Vendor Code", ETIMVendorCentralMgt."Alternative Vendor Code");
        ETIMVendorCentralMgt.FINDFIRST;
        EXIT(ETIMVendorCentralMgt."Alternative Vendor Code");
      END;

      EXIT(GLNCode); // Input var is already a GLN code
    END;

    PROCEDURE GetVendorPurchaseFromGLN@1100528000(GLN@1100528000 : Code[15]) : Code[20];
    VAR
      ETIMVendorCentralMgt@1100525001 : Record 11012304;
      ETIMVendorCentralMgt2@1100528001 : Record 11012304;
    BEGIN
      IF (ETIMVendorCentralMgt.GET(GLN)) THEN BEGIN
        IF (ETIMVendorCentralMgt."Alternative Vendor Code" = '') THEN BEGIN
          ETIMVendorCentralMgt.CALCFIELDS("Vendor (Purchase)");
          EXIT(ETIMVendorCentralMgt."Vendor (Purchase)");
        END;
        IF (ETIMVendorCentralMgt2.GET(ETIMVendorCentralMgt."Alternative Vendor Code")) THEN BEGIN
          ETIMVendorCentralMgt2.CALCFIELDS("Vendor (Purchase)");
          EXIT(ETIMVendorCentralMgt2."Vendor (Purchase)");
        END;
      END;
      EXIT('');
    END;

    PROCEDURE GetGLNFromVendorNo@1100525001(VendorNo@1100525000 : Code[20]) : Code[15];
    VAR
      ETIMVendorLocalMgt@1100525001 : Record 11012313;
      ETIMVendorCentralMgt@1100525002 : Record 11012304;
      ETIMVendorCentralMgt2@1100525003 : Record 11012304;
    BEGIN
      ETIMVendorLocalMgt.SETRANGE("Vendor (Purchase)", VendorNo);
      IF (ETIMVendorLocalMgt.FINDFIRST) THEN BEGIN
        IF (ETIMVendorCentralMgt.GET(ETIMVendorLocalMgt.Code)) THEN BEGIN
          IF (ETIMVendorCentralMgt."Alternative Vendor Code" <> '') THEN
            EXIT(ETIMVendorCentralMgt.Code);
          ETIMVendorCentralMgt2.SETRANGE("Alternative Vendor Code", ETIMVendorCentralMgt.Code);
          IF (ETIMVendorCentralMgt2.FINDFIRST) THEN
            EXIT(ETIMVendorCentralMgt2.Code);
        END;
      END;
      EXIT('');
    END;

    BEGIN
    END.
  }
}

