OBJECT Table 11012456 Project Assignment
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CALCFIELDS("Total Quantity","Recurring Frequency","Price option");
               IF "Total Quantity" <> 0 THEN
                 "Option Amount" := "Price option" * "Total Quantity"
               ELSE
                 IF "Recurring Frequency" <> 0 THEN
                   "Option Amount" := "Price option" * "Recurring Frequency";
             END;

    CaptionML=ENU=Project Assignment;
    LookupPageID=Page11012464;
    DrillDownPageID=Page11012464;
  }
  FIELDS
  {
    { 10  ;   ;Complaint No.       ;Code20        ;TableRelation=Complaint;
                                                   CaptionML=ENU=Complaint No. }
    { 12  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Project No.;
                                                   Description=Option }
    { 15  ;   ;Option              ;Code20        ;CaptionML=ENU=Option }
    { 20  ;   ;Commision No.       ;Code10        ;OnValidate=BEGIN
                                                                CALCFIELDS("Total Quantity","Recurring Frequency","Price option");
                                                                IF "Total Quantity" <> 0 THEN BEGIN
                                                                  "Option Amount" := "Price option" * "Total Quantity";
                                                                  Amount := "Direct Unit Cost" * "Total Quantity";
                                                                END ELSE
                                                                  IF "Recurring Frequency" <> 0 THEN BEGIN
                                                                    "Option Amount" := "Price option" * "Recurring Frequency";
                                                                   Amount := "Direct Unit Cost" * "Recurring Frequency";
                                                                  END;
                                                              END;

                                                   CaptionML=ENU=Commision No.;
                                                   NotBlank=Yes }
    { 21  ;   ;Assignment          ;Option        ;OnValidate=BEGIN
                                                                IF Assignment <> xRec.Assignment THEN BEGIN
                                                                  VALIDATE("Action by", '');
                                                                  VALIDATE("Contact No.", '');
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Assignment;
                                                   OptionCaptionML=ENU=Employee,Discipline,External;
                                                   OptionString=Employee,Discipline,External }
    { 22  ;   ;Action by           ;Code20        ;TableRelation=IF (Assignment=CONST(Employee)) Employee.No.
                                                                 ELSE IF (Assignment=CONST(Discipline)) Discipline.Code
                                                                 ELSE IF (Assignment=CONST(External)) Vendor.No.;
                                                   OnValidate=VAR
                                                                lDisciplineRec@1210190000 : Record 11020204;
                                                                lVendorRec@1210190001 : Record 23;
                                                                lEmployee@1100485000 : Record 5200;
                                                              BEGIN
                                                                IF Assignment = Assignment::Employee THEN BEGIN
                                                                  IF "Action by" <> '' THEN BEGIN
                                                                    lEmployee.GET("Action by");
                                                                    "Action by Name" := COPYSTR(lEmployee."Full Name",1,MAXSTRLEN("Action by Name"));
                                                                    "Contact Person Name" := "Action by Name" ;
                                                                    "Fax Contact Person" := lEmployee."Fax No.";
                                                                    "Phone Contact Person" := lEmployee."Mobile Phone No.";
                                                                    "Extension Contact Person" := lEmployee.Extension;
                                                                  END ELSE BEGIN
                                                                    "Action by Name" := '';
                                                                    "Contact Person Name" := '';
                                                                    "Fax Contact Person" := '';
                                                                    "Phone Contact Person" := '';
                                                                    "Extension Contact Person" := '';
                                                                  END;
                                                                END;
                                                                IF Assignment = Assignment::Discipline THEN BEGIN
                                                                  IF "Action by" <> '' THEN BEGIN
                                                                    lDisciplineRec.GET("Action by");
                                                                    "Action by Name" := lDisciplineRec.Description;
                                                                  END ELSE
                                                                    "Action by Name" := '';
                                                                END;
                                                                IF Assignment = Assignment::External THEN BEGIN
                                                                  IF ("Action by" <> xRec."Action by") THEN
                                                                    VALIDATE("Contact No.", '');
                                                                  IF "Action by" <> '' THEN BEGIN
                                                                    lVendorRec.GET("Action by");
                                                                    "Action by Name" := lVendorRec.Name;
                                                                    "Fax Contact Person" := lVendorRec."Fax No.";
                                                                    "Phone Contact Person" := lVendorRec."Phone No.";
                                                                  END ELSE BEGIN
                                                                    "Action by Name" := '';
                                                                    "Fax Contact Person" := '';
                                                                    "Phone Contact Person" := '';
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Action by }
    { 23  ;   ;Action by Name      ;Text50        ;CaptionML=ENU=Action by Name;
                                                   Editable=No }
    { 60  ;   ;Commission Description;Text50      ;CaptionML=ENU=Commission Description }
    { 70  ;   ;Date                ;Date          ;CaptionML=ENU=Date }
    { 80  ;   ;Commision Status    ;Option        ;CaptionML=ENU=Commision Status;
                                                   OptionCaptionML=ENU=To Provide,Order,Finished;
                                                   OptionString=To Provide,Order,Finished }
    { 81  ;   ;Price option        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Option."Nett Price" WHERE (Project No.=FIELD(Project No.),
                                                                                                 Plot No.=FILTER(''),
                                                                                                 Option=FIELD(Option)));
                                                   CaptionML=ENU=Price option;
                                                   Editable=No }
    { 82  ;   ;Direct Unit Cost    ;Decimal       ;OnValidate=BEGIN
                                                                IF "Total Quantity" <> 0 THEN
                                                                  Amount := "Direct Unit Cost" * "Total Quantity"
                                                                ELSE
                                                                  IF "Recurring Frequency" <> 0 THEN
                                                                    Amount := "Direct Unit Cost" * "Recurring Frequency";
                                                              END;

                                                   CaptionML=ENU=Direct Unit Cost }
    { 83  ;   ;Option Amount       ;Decimal       ;CaptionML=ENU=Option Amount;
                                                   Editable=No }
    { 84  ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure";
                                                   CaptionML=ENU=Unit of Measure }
    { 90  ;   ;Amount              ;Decimal       ;CaptionML=ENU=Amount }
    { 140 ;   ;Total Quantity      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum(Option.Quantity WHERE (Project No.=FIELD(Project No.),
                                                                                          Plot No.=FILTER(<>''),
                                                                                          Option=FIELD(Option),
                                                                                          Status=FILTER(>=Order)));
                                                   CaptionML=ENU=Total Quantity;
                                                   Editable=No }
    { 150 ;   ;Recurring Frequency ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count(Option WHERE (Project No.=FIELD(Project No.),
                                                                                   Plot No.=FILTER(<>''),
                                                                                   Option=FIELD(Option),
                                                                                   Status=FILTER(>=Order)));
                                                   CaptionML=ENU=Recurring Frequency;
                                                   Editable=No }
    { 160 ;   ;Seasonal Activity   ;Boolean       ;CaptionML=ENU=Seasonal Activity }
    { 161 ;   ;Plot No.            ;Code20        ;FieldClass=Normal;
                                                   TableRelation=Plot."Plot No." WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=BEGIN
                                                                IF ("Plot No." <> '')  AND ("Delivered Object" = '') THEN
                                                                  PlotRec.GET("Project No.", "Plot No."); //Only Validate if No Delivered Object
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Plot No.;
                                                   Editable=No }
    { 162 ;   ;Delivery            ;Code20        ;TableRelation=Delivery."Delivery No." WHERE (Project No.=FIELD(Project No.),
                                                                                                Plot No.=FIELD(Plot No.));
                                                   CaptionML=ENU=Delivery;
                                                   Editable=No }
    { 163 ;   ;Repair Date         ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Delivery."Repair Date" WHERE (Project No.=FIELD(Project No.),
                                                                                                    Plot No.=FIELD(Plot No.),
                                                                                                    Delivery No.=FIELD(Delivery)));
                                                   CaptionML=ENU=Repair Date;
                                                   Editable=No }
    { 164 ;   ;Delayed Repair Date ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Delivery."Delayed Repair Date" WHERE (Project No.=FIELD(Project No.),
                                                                                                            Plot No.=FIELD(Plot No.),
                                                                                                            Delivery No.=FIELD(Delivery)));
                                                   CaptionML=ENU=Delayed Repair Date;
                                                   Editable=No }
    { 165 ;   ;Preferred Start Date;Date          ;CaptionML=ENU=Preferred Start Date }
    { 166 ;   ;Preferred End Date  ;Date          ;CaptionML=ENU=Preferred End Date }
    { 167 ;   ;Small Project No.   ;Code20        ;TableRelation=Job.No. WHERE (Small Project=FILTER(Yes));
                                                   CaptionML=ENU=Small Project No.;
                                                   Editable=No }
    { 168 ;   ;Delivered Object    ;Code20        ;TableRelation="Delivered Object";
                                                   CaptionML=ENU=Delivered Object }
    { 169 ;   ;Contact Person Name ;Text50        ;CaptionML=ENU=Contact Person Name }
    { 170 ;   ;Fax Contact Person  ;Text30        ;CaptionML=ENU=Fax Contact Person }
    { 171 ;   ;Phone Contact Person;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Phone Contact Person }
    { 180 ;   ;Responsible Person  ;Code20        ;TableRelation=Employee;
                                                   CaptionML=ENU=Responsible Person }
    { 181 ;   ;Responsible Person Name;Text100    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Full Name" WHERE (No.=FIELD(Responsible Person)));
                                                   CaptionML=ENU=Responsible Person Name;
                                                   Editable=No }
    { 190 ;   ;Extension Contact Person;Text30    ;CaptionML=ENU=Extension Contact Person }
    { 191 ;   ;Contact No.         ;Code20        ;OnValidate=VAR
                                                                lContRec@1100485000 : Record 5050;
                                                              BEGIN
                                                                IF lContRec.GET("Contact No.") THEN BEGIN
                                                                  VALIDATE("Contact Person Name",lContRec.Name);
                                                                  VALIDATE("Extension Contact Person",lContRec."Extension No.");
                                                                  VALIDATE("Fax Contact Person",lContRec."Fax No.");
                                                                  VALIDATE("Phone Contact Person",lContRec."Phone No.");
                                                                END ELSE BEGIN
                                                                  VALIDATE("Contact Person Name",'');
                                                                  VALIDATE("Extension Contact Person",'');
                                                                  VALIDATE("Fax Contact Person",'');
                                                                  VALIDATE("Phone Contact Person",'');
                                                                  IF CurrFieldNo = FIELDNO("Contact No.") THEN
                                                                    VALIDATE("Action by");
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              lContBusRelRec@1100485000 : Record 5054;
                                                              lContRec@1100485001 : Record 5050;
                                                            BEGIN
                                                              IF Assignment = Assignment::External THEN BEGIN
                                                                lContBusRelRec.SETCURRENTKEY("Link to Table","No.");
                                                                lContBusRelRec.SETRANGE("Link to Table",lContBusRelRec."Link to Table"::Vendor);
                                                                lContBusRelRec.SETRANGE("No.","Action by");
                                                                IF lContBusRelRec.FIND('-') THEN BEGIN
                                                                  lContRec.SETRANGE(Type,lContRec.Type::Person);
                                                                  lContRec.SETRANGE("Company No.",lContBusRelRec."Contact No.");
                                                                END;

                                                                IF "Contact No." <> '' THEN BEGIN
                                                                  IF lContRec.GET("Contact No.") THEN;
                                                                END;

                                                                IF PAGE.RUNMODAL(0,lContRec) = ACTION::LookupOK THEN BEGIN
                                                                  VALIDATE("Contact No.",lContRec."No.");
                                                                END;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Contact No. }
    { 192 ;   ;Text Block          ;Boolean       ;CaptionML=ENU=Text Block;
                                                   Editable=No }
    { 194 ;   ;Text                ;Text250       ;OnValidate=BEGIN
                                                                "Text Block" := Text <> '';
                                                              END;

                                                   CaptionML=ENU=Text }
    { 200 ;   ;Solving Date        ;Date          ;CaptionML=ENU=Solving Date }
  }
  KEYS
  {
    {    ;Complaint No.,Project No.,Plot No.,Option,Delivery,Delivered Object,Commision No.;
                                                   Clustered=Yes }
    {    ;Project No.,Action by,Commision No.      }
    {    ;Action by,Project No.,Plot No.,Complaint No.,Commision No. }
    {    ;Project No.,Plot No.,Option,Complaint No.,Commision No. }
    {    ;Action by,Delivered Object,Complaint No.,Commision No. }
    {    ;Action by,Commision Status,Complaint No. }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PlotRec@1100485000 : Record 11012500;
      Text000@1100528400 : TextConst 'ENU=No %1 was found for %2 %3.';

    PROCEDURE GetFreeCommissionNo@1100485001(IComplaintNo@1100485002 : Code[20]) : Code[20];
    VAR
      lvComplCommRec@1100485001 : Record 11012456;
      lvCommissionNo@1100485003 : Code[30];
    BEGIN
      //* Variable 'lvCommissionNo' (Code-30) must be bigger then field "Commision No." !

      IF (IComplaintNo <> '') THEN BEGIN
        lvComplCommRec.SETRANGE("Complaint No.", IComplaintNo);
        IF NOT lvComplCommRec.FIND('+') THEN
          lvCommissionNo := '01'
        ELSE BEGIN
          IF (STRLEN(lvComplCommRec."Commision No.") > 0) THEN BEGIN
            lvCommissionNo := INCSTR(lvComplCommRec."Commision No.");
            IF (STRLEN(lvCommissionNo) > MAXSTRLEN("Commision No.")) THEN
              lvCommissionNo := ''
            ELSE BEGIN
              lvComplCommRec.SETRANGE("Commision No.", lvCommissionNo);
              IF lvComplCommRec.FIND('-') THEN
                lvCommissionNo := '';
            END;
          END;
        END;
      END;
      EXIT(lvCommissionNo);
    END;

    PROCEDURE EditDocuments@1100528702(ContactNo@1210190004 : Code[20];ContactPersonNo@1210190005 : Code[20];SendMail@1210190002 : Boolean;Recipient@1100528700 : Text[120]);
    VAR
      Complaint@1100528702 : Record 11012450;
      Commission@1100528703 : Record 11012020;
      DeliveredProject@1100529001 : Record 11012100;
      DeliveredObject@1100529000 : Record 11012101;
      DocumentTemplate@1210190001 : Record 11012401;
      DocumentMailing@1210190000 : Codeunit 11012278;
      RecRef@1100525000 : RecordRef;
      DocumentLinkRIDs@1100525001 : ARRAY [5] OF RecordID;
    BEGIN
      Complaint.GET("Complaint No.");
      RecRef.GETTABLE(Complaint);
      DocumentLinkRIDs[1] := RecRef.RECORDID;

      RecRef.GETTABLE(Rec);
      DocumentLinkRIDs[2] := RecRef.RECORDID;

      IF Commission.GET("Project No.", Complaint."Project Principal", "Commision No.") THEN BEGIN
        RecRef.GETTABLE(Commission);
        DocumentLinkRIDs[3] := RecRef.RECORDID;
      END;

      IF Complaint."Delivered Object" <> '' THEN BEGIN
        IF DeliveredObject.GET(Complaint."Delivered Object") THEN BEGIN
          IF DeliveredObject."Delivered Project" <> '' THEN BEGIN
            IF DeliveredProject.GET(DeliveredObject."Delivered Project") THEN BEGIN
              RecRef.GETTABLE(DeliveredProject);
              DocumentLinkRIDs[4] := RecRef.RECORDID;
            END;
          END;
        END;
      END;

      DocumentMailing.EditDocuments(
        STRSUBSTNO('%1', DocumentTemplate.Type::Assignment), DocumentLinkRIDs, '', ContactNo, ContactPersonNo, SendMail, Recipient);
    END;

    PROCEDURE LookupActionByAuthContactNo@1100528400(VAR ActionByAuthorityContactNo@1100528400 : Code[20]) : Boolean;
    VAR
      DeliveredProjectAuthority@1100528401 : Record 11012110;
    BEGIN
      IF Assignment <> Assignment::External THEN
        EXIT;

      DeliveredProjectAuthority.SETRANGE("Delivered Project No.", GetDeliveredProjectNo);
      GetDeliveredProjectAuthority(ActionByAuthorityContactNo, FALSE, DeliveredProjectAuthority);

      IF PAGE.RUNMODAL(0, DeliveredProjectAuthority) = ACTION::LookupOK THEN BEGIN
        ActionByAuthorityContactNo := DeliveredProjectAuthority."Contact No.";
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE GetDeliveredProjectNo@1100528402() : Code[20];
    VAR
      DeliveredObject@1100528400 : Record 11012101;
    BEGIN
      IF DeliveredObject.GET("Delivered Object") THEN
        EXIT (DeliveredObject."Delivered Project");
    END;

    PROCEDURE ValidateActionByAuthContactNo@1100528403(ActionByAuthorityContactNo@1100528400 : Code[20]);
    VAR
      DeliveredProjectAuthority@1100528402 : Record 11012110;
      NewActionBy@1100528401 : Code[20];
    BEGIN
      IF ActionByAuthorityContactNo <> '' THEN BEGIN
        TESTFIELD(Assignment, Assignment::External);
        GetDeliveredProjectAuthority(ActionByAuthorityContactNo, TRUE, DeliveredProjectAuthority);
        NewActionBy := GetActionByVendorNo(ActionByAuthorityContactNo);
        IF NewActionBy <> "Action by" THEN
          VALIDATE("Action by", NewActionBy);
      END;
    END;

    LOCAL PROCEDURE GetActionByVendorNo@1100528401(ActionByAuthorityContactNo@1100528400 : Code[20]) : Code[20];
    VAR
      Contact@1100528401 : Record 5050;
      Vendor@1100528402 : Record 23;
    BEGIN
      Contact.GET(ActionByAuthorityContactNo);
      IF Contact.GetVendorByContact(Contact, Vendor) THEN
        EXIT(Vendor."No.")
      ELSE
        ERROR(Text000, Vendor.TABLECAPTION, Contact.TABLECAPTION, ActionByAuthorityContactNo);
    END;

    PROCEDURE GetActionByAuthContactNo@1100528404() : Code[20];
    VAR
      Contact@1100528401 : Record 5050;
      DeliveredProjectAuthority@1100528400 : Record 11012110;
    BEGIN
      IF Assignment <> Assignment::External THEN
        EXIT;
      IF NOT Contact.FINDFIRST THEN
        EXIT; // To avoid granule problems.
      IF NOT DeliveredProjectAuthority.FINDFIRST THEN
        EXIT; // To avoid granule problems.

      IF Contact.GetContactByVendor("Action by", Contact, FALSE) THEN
        IF GetDeliveredProjectAuthority(Contact."No.", FALSE, DeliveredProjectAuthority) THEN
          EXIT(Contact."No.");
    END;

    LOCAL PROCEDURE GetDeliveredProjectAuthority@1100528405(ContactNo@1100528402 : Code[20];ThrowError@1100528403 : Boolean;VAR DeliveredProjectAuthority@1100528401 : Record 11012110) AuthorityFound : Boolean;
    VAR
      DeliveredProjectAuthority2@1100528400 : Record 11012110;
    BEGIN
      DeliveredProjectAuthority2.SETRANGE("Delivered Project No.", GetDeliveredProjectNo);
      DeliveredProjectAuthority2.SETRANGE("Contact No.", ContactNo);
      IF ThrowError THEN BEGIN
        DeliveredProjectAuthority2.FINDFIRST;
        DeliveredProjectAuthority := DeliveredProjectAuthority2;
        AuthorityFound := TRUE;
      END ELSE
        IF DeliveredProjectAuthority2.FINDFIRST THEN BEGIN
          DeliveredProjectAuthority := DeliveredProjectAuthority2;
          AuthorityFound := TRUE;
        END;
    END;

    BEGIN
    {
      //20060705-JE : Added fields [Contact No.], [Text Block], [Text]
    }
    END.
  }
}

