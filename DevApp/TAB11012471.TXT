OBJECT Table 11012471 Installment Motivation
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF ProjRec.GET("Project No.") THEN
                 IF ProjRec.RAW THEN BEGIN
                   InstallmMotRec.SETRANGE("Project No.","Project No.");
                   InstallmMotRec.SETRANGE(Principal,Principal);
                   IF InstallmMotRec.FINDLAST THEN BEGIN
                     Comment := INCSTR(InstallmMotRec.Comment);
                   END ELSE BEGIN
                     Comment := Text002;
                   END
                 END;
             END;

    OnDelete=VAR
               InstallmentOverview@1100409000 : Record 11012265;
             BEGIN
               IF NOT gDeleteCompleteProject THEN BEGIN   //db, 14-08-15: C021865
                 TESTFIELD("Installments Created", FALSE);
                 IF InInstallmentOverview THEN
                   ERROR(Text007, InstallmentOverview.TABLECAPTION, TABLECAPTION);
               END;

               InstallmMotLinesRec.SETRANGE("Project No.","Project No.");
               InstallmMotLinesRec.SETRANGE(Principal,Principal);
               InstallmMotLinesRec.SETRANGE("Production Date","Production Date");
               InstallmMotLinesRec.DELETEALL;
             END;

    OnRename=BEGIN
               TESTFIELD("Installments Created", FALSE);
             END;

    CaptionML=ENU=Installment Motivation;
    LookupPageID=Page11012474;
    DrillDownPageID=Page11012474;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=ENU=Project No.;
                                                   NotBlank=Yes }
    { 20  ;   ;Principal           ;Code20        ;TableRelation="Project Principal".Principal WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=ENU=Principal;
                                                   NotBlank=Yes }
    { 30  ;   ;Production Date     ;Date          ;OnValidate=BEGIN
                                                                CheckNextInstMotivApproved;

                                                                InstallCreatedAfterProdDate("Production Date", 1);  //* 1=ErrorMode::Error
                                                                "End Date Revision" := "Production Date";
                                                              END;

                                                   CaptionML=ENU=Production Date;
                                                   NotBlank=Yes }
    { 40  ;   ;Comment             ;Text30        ;CaptionML=ENU=Comment }
    { 50  ;   ;Project Description ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=ENU=Project Description;
                                                   Editable=No }
    { 60  ;   ;Principal Name      ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Name WHERE (No.=FIELD(Principal)));
                                                   CaptionML=ENU=Principal Name;
                                                   Editable=No }
    { 70  ;   ;Installments Created;Boolean       ;CaptionML=ENU=Create Installments run }
    { 80  ;   ;Installments Created on;Date       ;CaptionML=ENU=Create Installments run on;
                                                   Editable=No }
    { 85  ;   ;Installment Description;Text50     ;CaptionML=ENU=Installment Description }
    { 90  ;   ;Contract Amount (LCY);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Principal"."Contract Amount (LCY)" WHERE (Project No.=FIELD(Project No.),
                                                                                                                         Principal=FIELD(Principal)));
                                                   CaptionML=ENU=Contract Amount (LCY);
                                                   Description=DP00886;
                                                   Editable=No }
    { 91  ;   ;Contract Amount (FCY);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Principal"."Contract Amount" WHERE (Project No.=FIELD(Project No.),
                                                                                                                   Principal=FIELD(Principal)));
                                                   CaptionML=ENU=Contract Amount (FCY);
                                                   Description=DP00886;
                                                   Editable=No }
    { 100 ;   ;Points/Percentages  ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Principal"."Installm.Motivation Method" WHERE (Project No.=FIELD(Project No.),
                                                                                                                              Principal=FIELD(Principal)));
                                                   CaptionML=ENU=Points/Percentages;
                                                   OptionCaptionML=ENU=" ,Points,Percentages";
                                                   OptionString=[ ,Punten,Procenten];
                                                   Editable=No }
    { 110 ;   ;Number of Points    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Principal"."Number of Points" WHERE (Project No.=FIELD(Project No.),
                                                                                                                    Principal=FIELD(Principal)));
                                                   CaptionML=ENU=Number of Points;
                                                   Editable=No }
    { 120 ;   ;Invoice Installm.Motivation as;Option;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Principal"."Invoice Installm.Motivation as" WHERE (Project No.=FIELD(Project No.),
                                                                                                                                  Principal=FIELD(Principal)));
                                                   CaptionML=ENU=Invoice Installment Motivation as;
                                                   OptionCaptionML=ENU=Installment per Motivation,Fixed Installment Amounts;
                                                   OptionString=Installment per Motivation,Fixed Installment Amounts;
                                                   Editable=No }
    { 130 ;   ;Fixed Installment Amount (LCY);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Principal"."Fixed Installment Amount (LCY)" WHERE (Project No.=FIELD(Project No.),
                                                                                                                                  Principal=FIELD(Principal)));
                                                   CaptionML=ENU=Fixed Installment Amount (LCY);
                                                   Description=DP00886;
                                                   Editable=No }
    { 131 ;   ;Fixed Installment Amount (FCY);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Principal"."Fixed Installment Amount (FCY)" WHERE (Project No.=FIELD(Project No.),
                                                                                                                                  Principal=FIELD(Principal)));
                                                   CaptionML=ENU=Fixed Installment Amount (FCY);
                                                   Description=DP00886;
                                                   Editable=No }
    { 140 ;   ;Status              ;Option        ;OnValidate=VAR
                                                                InstallMotLine@1100525000 : Record 11012472;
                                                                InstallmentOverview@1100409000 : Record 11012265;
                                                              BEGIN
                                                                IF (Status <> xRec.Status) THEN
                                                                  IF InInstallmentOverview THEN
                                                                    ERROR(Text007, InstallmentOverview.TABLECAPTION, TABLECAPTION);

                                                                IF (Status <> xRec.Status) AND
                                                                   (Status = Status::Approved)
                                                                THEN
                                                                  CheckPrevInstMotivApproved;

                                                                IF (Status < xRec.Status) AND
                                                                   (xRec.Status = xRec.Status::Approved)
                                                                THEN
                                                                  CheckNextInstMotivApproved;

                                                                IF Status = Status::Expired THEN BEGIN
                                                                  TESTFIELD("Installments Created", FALSE);
                                                                  TESTFIELD("Revision Computed", FALSE);
                                                                  IF NOT CONFIRM(Text004, FALSE, TABLECAPTION, InstallMotLine.FIELDCAPTION(Production),
                                                                        InstallMotLine.FIELDCAPTION("Production Cumulative")) THEN
                                                                    ERROR('');
                                                                  //put all production on 0
                                                                  InstallMotLine.SETRANGE("Project No.","Project No.");
                                                                  InstallMotLine.SETRANGE(Principal,Principal);
                                                                  InstallMotLine.SETRANGE("Production Date", "Production Date");
                                                                  IF InstallMotLine.FINDSET(TRUE, FALSE) THEN BEGIN
                                                                    REPEAT
                                                                      InstallMotLine.VALIDATE(Production, 0);
                                                                      //run trigger to ensure that the production value cumulative of following installment motivations doesn't change
                                                                      InstallMotLine.MODIFY(TRUE);
                                                                    UNTIL InstallMotLine.NEXT = 0;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=State;
                                                   OptionCaptionML=ENU=Proposal,Submitted,Approved,Expired;
                                                   OptionString=Proposal,Submitted,Approved,Expired }
    { 160 ;   ;End Date Revision   ;Date          ;CaptionML=ENU=End Date Revision }
    { 170 ;   ;Revision Amount (LCY);Decimal      ;OnValidate=BEGIN
                                                                //DP00886
                                                                CALCFIELDS("Currency Code");
                                                                IF NOT SkipValidateFCY THEN
                                                                  "Revision Amount (FCY)" := ProjectCurrencyExchangeRate.ExchangeAmtLCYToFCY("Revision Amount (LCY)", FALSE, FALSE, "Currency Code", "Project No.", Principal, "Production Date");
                                                              END;

                                                   CaptionML=ENU=Revision Amount (LCY);
                                                   Description=DP00886;
                                                   Editable=No }
    { 171 ;   ;Revision Amount (FCY);Decimal      ;OnValidate=BEGIN
                                                                //DP00886
                                                                CALCFIELDS("Currency Code");
                                                                SetSkipValidateFCY(TRUE);
                                                                VALIDATE("Revision Amount (LCY)", ProjectCurrencyExchangeRate.ExchangeAmtFCYToLCY("Revision Amount (FCY)", FALSE, FALSE, "Currency Code", "Project No.", Principal, "Production Date"));
                                                              END;

                                                   CaptionML=ENU=Revision Amount;
                                                   Description=DP00886;
                                                   Editable=No }
    { 180 ;   ;Revision Computed   ;Boolean       ;CaptionML=ENU=Revision Computed }
    { 190 ;   ;Approved By         ;Code20        ;TableRelation=Contact.No. WHERE (Type=CONST(Person));
                                                   OnValidate=VAR
                                                                ContactRec@1100485000 : Record 5050;
                                                              BEGIN
                                                                IF "Approved By" <> '' THEN BEGIN
                                                                  IF ContactRec.GET("Approved By") THEN BEGIN
                                                                    //Get name for contact, this is not a flowfield, it may need modification
                                                                    "Approved By Name" := ContactRec.Name;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Approved By }
    { 200 ;   ;Approved By Name    ;Text50        ;FieldClass=Normal;
                                                   CaptionML=ENU=Name Approved By;
                                                   Editable=Yes }
    { 210 ;   ;Approved Date       ;Date          ;CaptionML=ENU=Approve date }
    { 220 ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Date Fiter;
                                                   Description=used in Site Management forms }
    { 300 ;   ;Currency Code       ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Principal"."Currency Code" WHERE (Project No.=FIELD(Project No.),
                                                                                                                 Principal=FIELD(Principal)));
                                                   TableRelation=Currency;
                                                   CaptionML=ENU=Currency Code;
                                                   Description=DP00886;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Project No.,Principal,Production Date   ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      InstallmMotLinesRec@1210190000 : Record 11012472;
      Text001@1100485000 : TextConst 'ENU=''%1'' not allowed, after this date (%2) invoiced Installment Motivation(s) present';
      ProjRec@1100485001 : Record 11072003;
      InstallmMotRec@1100485002 : Record 11012471;
      Text002@1100485003 : TextConst 'ENU=Week 1';
      Text004@1100525000 : TextConst 'ENU=Are you sure? The %2 of all lines of this %1 will be set to zero. The %2 of the next %1 will be modified to ensure that the %3 stays the same.';
      Text005@1100409000 : TextConst 'ENU=%1 of %2 has %3 %4.';
      Text007@1100409002 : TextConst 'ENU=%1 is already created for %2.';
      gDeleteCompleteProject@1100525001 : Boolean;
      SkipValidateFCY@1100525002 : Boolean;
      ProjectCurrencyExchangeRate@1100525003 : Record 11020628;
      ProjectPrincipal@1100525004 : Record 11012005;

    PROCEDURE InstallCreatedAfterProdDate@1210190000(ProdDate@1210190002 : Date;ErrorMode@1210190001 : ',Error,Message') : Boolean;
    VAR
      lvInstalmMotRec@1210190000 : Record 11012471;
    BEGIN
      lvInstalmMotRec.SETRANGE("Project No.","Project No.");
      lvInstalmMotRec.SETRANGE(Principal,Principal);
      lvInstalmMotRec.SETFILTER("Production Date",'>%1',ProdDate);
      lvInstalmMotRec.SETRANGE("Installments Created",TRUE);
      IF lvInstalmMotRec.FINDFIRST THEN BEGIN
        CASE ErrorMode OF
          ErrorMode::Error:
            FIELDERROR("Production Date",STRSUBSTNO(Text001,ProdDate,lvInstalmMotRec."Production Date"));
          ErrorMode::Message:
            MESSAGE(FIELDCAPTION("Production Date") + ' ' + STRSUBSTNO(Text001,ProdDate,lvInstalmMotRec."Production Date"));
        END;
        EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    PROCEDURE GetPrevInstMotivation@1100528701(VAR InstallmentMotivation@1100528700 : Record 11012471) : Boolean;
    BEGIN
      InstallmentMotivation.SETRANGE("Project No.", "Project No.");
      InstallmentMotivation.SETRANGE(Principal, Principal);
      InstallmentMotivation.SETFILTER("Production Date", '<%1', "Production Date");
      EXIT(InstallmentMotivation.FINDLAST);
    END;

    PROCEDURE GetNextInstMotivation@1100528702(VAR InstallmentMotivation@1100528700 : Record 11012471) : Boolean;
    BEGIN
      InstallmentMotivation.SETRANGE("Project No.", "Project No.");
      InstallmentMotivation.SETRANGE(Principal, Principal);
      InstallmentMotivation.SETFILTER("Production Date", '>%1', "Production Date");
      EXIT(InstallmentMotivation.FINDFIRST);
    END;

    PROCEDURE CheckPrevInstMotivApproved@1100528700();
    VAR
      InstallmentMotivation@1100528700 : Record 11012471;
    BEGIN
      InstallmentMotivation := Rec;
      WHILE InstallmentMotivation.GetPrevInstMotivation(InstallmentMotivation) DO BEGIN
        IF InstallmentMotivation.Status < InstallmentMotivation.Status::Approved THEN
          ERROR(Text005,
            TABLECAPTION,
            InstallmentMotivation."Production Date",
            FIELDCAPTION(Status),
            InstallmentMotivation.Status);
      END;
    END;

    PROCEDURE CheckNextInstMotivApproved@1100528703();
    VAR
      InstallmentMotivation@1100528700 : Record 11012471;
    BEGIN
      InstallmentMotivation := Rec;
      WHILE InstallmentMotivation.GetNextInstMotivation(InstallmentMotivation) DO BEGIN
        IF InstallmentMotivation.Status = InstallmentMotivation.Status::Approved THEN
          ERROR(Text005,
            TABLECAPTION,
            InstallmentMotivation."Production Date",
            FIELDCAPTION(Status),
            InstallmentMotivation.Status);
      END;
    END;

    PROCEDURE InInstallmentOverview@1100409000() : Boolean;
    VAR
      InstallmentOverview@1100409000 : Record 11012265;
    BEGIN
      InstallmentOverview.SETRANGE("Project No.", "Project No.");
      InstallmentOverview.SETRANGE(Principal, Principal);
      InstallmentOverview.SETFILTER("First Motivation Date", '..%1', "Production Date");
      InstallmentOverview.SETFILTER("Last Motivation Date", '%1..', "Production Date");
      EXIT(InstallmentOverview.FINDFIRST);
    END;

    PROCEDURE DeleteInstallmentMotivation@1210190003(lvarProject@1210190000 : Code[20];lvarPrincipal@1210190001 : Code[20];lvarProductionDate@1210190002 : Date;lvarDeleteCompleteProject@1210190004 : Boolean);
    BEGIN
      //db, 14-08-15: C021865
      IF GET(lvarProject,lvarPrincipal,lvarProductionDate) THEN BEGIN
        gDeleteCompleteProject := lvarDeleteCompleteProject;
        DELETE(TRUE);
      END;
    END;

    PROCEDURE SetSkipValidateFCY@1100528603(ISkipValidateFCY@1100528600 : Boolean);
    BEGIN
      //DP00886
      SkipValidateFCY := ISkipValidateFCY;
    END;

    BEGIN
    END.
  }
}

