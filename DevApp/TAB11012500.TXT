OBJECT Table 11012500 Plot
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    Permissions=TableData 11072003=rm;
    OnInsert=VAR
               StandDeliveryRec@1210190000 : Record 11012507;
               PlotDeliveryRec@1210190001 : Record 11012507;
               lJobRec@1210190002 : Record 11072003;
               PlotRecordingCrossList@1100525000 : Record 11072253;
               PlotRecordingListBaseLine@1100525001 : Record 11072254;
             BEGIN
               TESTFIELD("Plot No."); //C017655

               "Generate Installments" := FALSE;
               "Installments Generated" := FALSE;
               "Generation Date" := 0D;

               StandDeliveryRec.SETFILTER("Project No.",'%1','');
               StandDeliveryRec.SETFILTER("Plot No.",'%1','');
               IF StandDeliveryRec.FIND('-') THEN
                 REPEAT
                   IF NOT PlotDeliveryRec.GET("Project No.","Plot No.", StandDeliveryRec."Delivery No.") THEN BEGIN
                     PlotDeliveryRec.INIT;
                     PlotDeliveryRec."Project No." := "Project No.";
                     PlotDeliveryRec."Plot No." := "Plot No.";
                     PlotDeliveryRec."Delivery No." := StandDeliveryRec."Delivery No.";
                     PlotDeliveryRec.TRANSFERFIELDS(StandDeliveryRec,FALSE);
                     PlotDeliveryRec.INSERT;
                   END;
               UNTIL StandDeliveryRec.NEXT = 0;

               IF lJobRec.GET("Project No.") THEN BEGIN
                 IF "Due Date Plot" = 0D THEN
                   "Due Date Plot" := lJobRec."Due Date Plot";
                 IF lJobRec."SharePoint Status" = lJobRec."SharePoint Status"::Updated THEN BEGIN
                   lJobRec."SharePoint Status" := lJobRec."SharePoint Status"::Modified;
                   lJobRec.MODIFY;
                 END;
               END;
               ProjectSiteMgt.LogPlot(1, Rec); //**4PS.n

               IF PlotRecordingCrossList.READPERMISSION AND PlotRecordingListBaseLine.READPERMISSION THEN BEGIN
                 PlotRecordingCrossList.RESET;
                 PlotRecordingCrossList.SETRANGE("Project No.", "Project No.");
                 IF PlotRecordingCrossList.FINDSET THEN BEGIN
                   REPEAT
                     PlotRecordingListBaseLine.RESET;
                     PlotRecordingListBaseLine.SETRANGE("Project No.", PlotRecordingCrossList."Project No.");
                     PlotRecordingListBaseLine.SETRANGE("Plot No.", "Plot No.");
                     PlotRecordingListBaseLine.SETRANGE("House Model", PlotRecordingCrossList."House Model");
                     PlotRecordingListBaseLine.SETRANGE(Unit, PlotRecordingCrossList.Unit);
                     PlotRecordingListBaseLine.SETRANGE("Line No.", PlotRecordingCrossList."Line No.");
                     IF PlotRecordingListBaseLine.ISEMPTY THEN BEGIN
                       IF PlotRecordingListBaseLine.WRITEPERMISSION THEN BEGIN
                         PlotRecordingListBaseLine.INIT;
                         PlotRecordingListBaseLine."Project No." := PlotRecordingCrossList."Project No.";
                         PlotRecordingListBaseLine."Plot No." := "Plot No.";
                         PlotRecordingListBaseLine."House Model" := PlotRecordingCrossList."House Model";
                         PlotRecordingListBaseLine.Unit := PlotRecordingCrossList.Unit;
                         PlotRecordingListBaseLine."Line No." := PlotRecordingCrossList."Line No.";
                         PlotRecordingListBaseLine.INSERT;
                       END;
                     END;
                   UNTIL PlotRecordingCrossList.NEXT = 0;
                 END;
               END;
             END;

    OnModify=BEGIN
               MODIFY;
               UpdateContractAmount(xRec);
               UpdateContractAmount(Rec);
               UpdateDeliveredObject();
               ProjectSiteMgt.LogPlot(2, Rec); //**4PS.n
             END;

    OnDelete=VAR
               lJobRec@1100485000 : Record 11072003;
               OptionRec@11012000 : Record 11012502;
               ProjDeliveryRec@1210190000 : Record 11012507;
               ProjInstalmRec@1100525000 : Record 11012018;
             BEGIN
               //CALL C007542 sn
               IF NOT DeleteCompleteProject THEN
                 TESTFIELD("Plot No. Fixed", FALSE);

               ProjInstalmRec.SETRANGE("Project No.","Project No.");
               ProjInstalmRec.SETRANGE("Plot No.","Plot No.");
               IF ProjInstalmRec.FINDSET THEN BEGIN
                 IF ProjRec.GET("Project No.") THEN
                   IF ProjRec."Project Status" < ProjRec."Project Status"::Finished THEN
                     IF CONFIRM(Text008, FALSE) = FALSE THEN
                       ERROR(Text006);
                 IF NOT DeleteCompleteProject THEN BEGIN
                   REPEAT
                     ProjInstalmRec.CALCFIELDS("Invoiced Price (LCY)", "Invoice in Process (LCY)");
                     IF ProjInstalmRec."Invoiced Price (LCY)" + ProjInstalmRec."Invoice in Process (LCY)" <> 0 THEN
                       ERROR(Text007);
                   UNTIL ProjInstalmRec.NEXT = 0;
                 END;
               END;
               //CALL C007542 en

               ProjDeliveryRec.SETRANGE("Project No.","Project No.");
               ProjDeliveryRec.SETRANGE("Plot No.","Plot No.");
               ProjDeliveryRec.DELETEALL;

               OptionRec.SETRANGE("Project No.","Project No.");
               OptionRec.SETRANGE("Plot No.","Plot No.");
               IF OptionRec.FINDSET(TRUE,FALSE) THEN BEGIN
                 OptionRec.SetSkipCheckDelete;
                 REPEAT
                   OptionRec.DELETE(TRUE);
                 UNTIL OptionRec.NEXT = 0;
               END;


               IF NOT DeleteCompleteProject THEN BEGIN //CALL C00754 new

                 DELETE;
                 COMMIT;

                 UpdateContractAmount(Rec);
                 IF lJobRec.GET("Project No.") THEN BEGIN
                   IF lJobRec."SharePoint Status" = lJobRec."SharePoint Status"::Updated THEN BEGIN
                     lJobRec."SharePoint Status" := lJobRec."SharePoint Status"::Modified;
                     lJobRec.MODIFY;
                   END;
                 END;

               END; //CALL C00754 new

               ProjectSiteMgt.LogPlot(3, Rec); //**4PS.n
             END;

    OnRename=VAR
               DocumentLinkMgt@1100525003 : Codeunit 11012401;
               RecRef@1100525000 : RecordRef;
               OldRID@1100525001 : RecordID;
               NewRID@1100525002 : RecordID;
             BEGIN
               IF "Plot No." = '' THEN
                 ERROR('');

               RecRef.GETTABLE(xRec);
               OldRID := RecRef.RECORDID();

               RecRef.GETTABLE(Rec);
               NewRID := RecRef.RECORDID();

               DocumentLinkMgt.HandleRenameDocumentLink(COMPANYNAME, OldRID, NewRID)
             END;

    CaptionML=ENU=Plot;
    LookupPageID=Page11012506;
    DrillDownPageID=Page11012506;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=ENU=Project No.;
                                                   NotBlank=Yes }
    { 20  ;   ;Plot No.            ;Code10        ;OnValidate=BEGIN
                                                                TESTFIELD("Plot No.");
                                                              END;

                                                   CaptionML=ENU=Plot No. }
    { 25  ;   ;Plot No. Fixed      ;Boolean       ;CaptionML=ENU=Plot No. Fixed }
    { 30  ;   ;House Model         ;Code20        ;TableRelation="House Model".Model WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=VAR
                                                                PlotActRec@1100485000 : Record 11020274;
                                                              BEGIN
                                                                IF ("House Model" <> xRec."House Model") THEN BEGIN
                                                                  IF NOT ModelRec.GET("Project No.", "House Model") THEN
                                                                    CLEAR(ModelRec);
                                                                  IF PlotHasPlotRecordingListLines THEN
                                                                    FIELDERROR("House Model", Text009);
                                                                  IF PlotHasOptions() THEN
                                                                    FIELDERROR("House Model", Text000);
                                                                  IF PlotHasOptQuoteLines() THEN
                                                                    FIELDERROR("House Model", Text001);
                                                                  IF ("Installment Scheme" = '') THEN BEGIN
                                                                    IF ModelRec."Project No." <> '' THEN
                                                                      "Installment Scheme" := ModelRec."Installment Scheme";
                                                                  END;
                                                                  IF ModelRec."Project No." <> '' THEN BEGIN
                                                                    "VAT Bus. Posting Group" := ModelRec."VAT Bus. Posting Group";
                                                                    IF Principal = '' THEN
                                                                      "VAT Prod. Posting Group" := ModelRec."VAT Prod. Posting Group";
                                                                  END;
                                                                  PlotActRec.SETRANGE("Project No.","Project No.");
                                                                  PlotActRec.SETRANGE("Plot No.","Plot No.");
                                                                  IF PlotActRec.FIND('-') THEN BEGIN
                                                                    REPEAT
                                                                      PlotActRec."House Model" := "House Model";
                                                                      PlotActRec.MODIFY;
                                                                    UNTIL PlotActRec.NEXT = 0;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=House Model;
                                                   NotBlank=Yes }
    { 40  ;   ;Building Seq.       ;Integer       ;CaptionML=ENU=Building Seq. }
    { 55  ;   ;Block No.           ;Code10        ;CaptionML=ENU=Block No. }
    { 60  ;   ;Seq. No. in Block   ;Integer       ;CaptionML=ENU=Seq. No. in Block }
    { 70  ;   ;Address             ;Text50        ;OnValidate=VAR
                                                                lDummy@1210190000 : Text[30];
                                                              BEGIN
                                                              END;

                                                   CaptionML=ENU=Address }
    { 80  ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Post Code }
    { 90  ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=City }
    { 95  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Country/Region Code }
    { 97  ;   ;County              ;Text30        ;CaptionML=ENU=County }
    { 100 ;   ;Plot Surface        ;Decimal       ;CaptionML=ENU=Plot Surface }
    { 120 ;   ;Plot Price          ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Plot Price" <> xRec."Plot Price") AND "Installments Generated" THEN
                                                                  MESSAGE(Text003);
                                                              END;

                                                   CaptionML=ENU=Plot Price;
                                                   AutoFormatType=1 }
    { 125 ;   ;VAT Amount Long Lease;Decimal      ;CaptionML=ENU=VAT Amount Long Lease;
                                                   AutoFormatType=1 }
    { 130 ;   ;Building Price      ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Building Price" <> xRec."Building Price") AND "Installments Generated" THEN
                                                                  MESSAGE(Text003);
                                                              END;

                                                   CaptionML=ENU=Building Price;
                                                   AutoFormatType=1 }
    { 140 ;   ;Additional Costs    ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Additional Costs" <> xRec."Additional Costs") AND "Installments Generated" THEN
                                                                  MESSAGE(Text003);
                                                              END;

                                                   CaptionML=ENU=Additional Costs;
                                                   AutoFormatType=1 }
    { 150 ;   ;Installment Scheme  ;Code10        ;TableRelation="Installment Scheme".Code WHERE (Type=CONST(Project));
                                                   CaptionML=ENU=Installment Scheme }
    { 155 ;   ;Generate Installments;Boolean      ;OnValidate=BEGIN
                                                                TestInstallmentsPerPlotno;
                                                              END;

                                                   CaptionML=ENU=Generate Installments }
    { 156 ;   ;Installments Generated;Boolean     ;CaptionML=ENU=Installments Generated;
                                                   Editable=No }
    { 157 ;   ;Generation Date     ;Date          ;CaptionML=ENU=Generation Date;
                                                   Editable=No }
    { 160 ;   ;Sales date          ;Date          ;OnValidate=BEGIN
                                                                MODIFY; //Needed cause PlotRec is read in next codeunit
                                                                BuyersMgt.RecalcPlotInstallments("Project No.", "Plot No.");
                                                              END;

                                                   CaptionML=ENU=Sales date }
    { 170 ;   ;Principal           ;Code20        ;TableRelation="Project Principal".Principal WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=VAR
                                                                lProjectPricipalRec@1100485000 : Record 11012005;
                                                                PlotActRec@1100485001 : Record 11020274;
                                                              BEGIN
                                                                CALCFIELDS("Principal Name");

                                                                IF ("Principal Options" = '') OR ("Principal Options" = xRec.Principal) THEN
                                                                  VALIDATE("Principal Options",Principal);
                                                                Buyer := GetProspectNo;

                                                                IF (Principal <> xRec.Principal) THEN
                                                                  IF lProjectPricipalRec.GET("Project No.",Principal) THEN
                                                                    "VAT Prod. Posting Group" := lProjectPricipalRec."VAT Prod. Posting Group";

                                                                PlotActRec.SETRANGE("Project No.","Project No.");
                                                                PlotActRec.SETRANGE("Plot No.","Plot No.");
                                                                IF PlotActRec.FIND('-') THEN BEGIN
                                                                  REPEAT
                                                                    PlotActRec.Principal := Principal;
                                                                    PlotActRec.MODIFY;
                                                                  UNTIL PlotActRec.NEXT = 0;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Principal }
    { 180 ;   ;Principal Name      ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Name WHERE (No.=FIELD(Principal)));
                                                   CaptionML=ENU=Principal Name;
                                                   Editable=No }
    { 185 ;   ;Second Buyer        ;Code20        ;TableRelation=Contact.No.;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Second Buyer Name");
                                                              END;

                                                   CaptionML=ENU=Second Buyer }
    { 186 ;   ;Second Buyer Name   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD(Second Buyer)));
                                                   CaptionML=ENU=Second Buyer Name;
                                                   Editable=No }
    { 190 ;   ;Option Total        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum(Option."Contract Amount" WHERE (Project No.=FIELD(Project No.),
                                                                                                   Plot No.=FIELD(Plot No.),
                                                                                                   Status=FILTER(Order|Invoice)));
                                                   CaptionML=ENU=Option Total;
                                                   Editable=No }
    { 210 ;   ;Buyer Name          ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD(Buyer)));
                                                   CaptionML=ENU=Buyer Name;
                                                   Editable=No }
    { 220 ;   ;Buyer Name 2        ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact."Name 2" WHERE (No.=FIELD(Buyer)));
                                                   CaptionML=ENU=Buyer Name 2;
                                                   Editable=No }
    { 230 ;   ;Buyer Address       ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Address WHERE (No.=FIELD(Buyer)));
                                                   CaptionML=ENU=Buyer Address;
                                                   Editable=No }
    { 240 ;   ;Buyer Address 2     ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact."Address 2" WHERE (No.=FIELD(Buyer)));
                                                   CaptionML=ENU=Buyer Address 2;
                                                   Editable=No }
    { 250 ;   ;Buyer Post Code     ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact."Post Code" WHERE (No.=FIELD(Buyer)));
                                                   TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Buyer Post Code;
                                                   Editable=No }
    { 260 ;   ;Buyer City          ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.City WHERE (No.=FIELD(Buyer)));
                                                   CaptionML=ENU=Buyer City;
                                                   Editable=No }
    { 270 ;   ;Buyer Country/Region;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact."Country/Region Code" WHERE (No.=FIELD(Buyer)));
                                                   TableRelation=Country/Region;
                                                   CaptionML=ENU=Buyer Country/Region;
                                                   Editable=No }
    { 275 ;   ;Buyer County        ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.County WHERE (No.=FIELD(Buyer)));
                                                   CaptionML=ENU=Buyer County;
                                                   Editable=No }
    { 280 ;   ;Buyer Phone         ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact."Phone No." WHERE (No.=FIELD(Buyer)));
                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Buyer Phone;
                                                   Editable=No }
    { 281 ;   ;Buyer Phone 2       ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact."Phone No. 2" WHERE (No.=FIELD(Buyer)));
                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Buyer Phone 2;
                                                   Editable=No }
    { 282 ;   ;Buyer Mobile Phone  ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact."Mobile Phone No." WHERE (No.=FIELD(Buyer)));
                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Buyer Mobile Phone;
                                                   Editable=No }
    { 283 ;   ;Buyer E-Mail        ;Text80        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.E-Mail WHERE (No.=FIELD(Buyer)));
                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=ENU=Buyer E-Mail;
                                                   Editable=No }
    { 284 ;   ;Buyer Mobile Phone 2;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact."Mobile Phone No. 2" WHERE (No.=FIELD(Buyer)));
                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Buyer Mobile Phone 2;
                                                   Editable=No }
    { 285 ;   ;Buyer Phone Work    ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact."Phone No. Work" WHERE (No.=FIELD(Buyer)));
                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Buyer Phone Work;
                                                   Editable=No }
    { 286 ;   ;Buyer Phone Work 2  ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact."Phone No. Work 2" WHERE (No.=FIELD(Buyer)));
                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Buyer Phone Work 2;
                                                   Editable=No }
    { 300 ;   ;Number of Options in Order;Integer ;FieldClass=FlowField;
                                                   CalcFormula=Count(Option WHERE (Project No.=FIELD(Project No.),
                                                                                   Plot No.=FIELD(Plot No.),
                                                                                   Status=FILTER(Order|Invoice)));
                                                   CaptionML=ENU=Number of Options in Order;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 310 ;   ;Number of Options Open;Integer     ;FieldClass=FlowField;
                                                   CalcFormula=Count(Option WHERE (Project No.=FIELD(Project No.),
                                                                                   Plot No.=FIELD(Plot No.),
                                                                                   Status=FILTER(<Order)));
                                                   CaptionML=ENU=Number of Options Open;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 320 ;   ;Principal Options   ;Code20        ;TableRelation="Project Principal".Principal WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=VAR
                                                                OptionRec@1100485000 : Record 11012502;
                                                              BEGIN
                                                                OptionRec.SETRANGE("Project No.","Project No.");
                                                                OptionRec.SETRANGE("Plot No.","Plot No.");
                                                                IF OptionRec.COUNT > 0 THEN
                                                                  IF CONFIRM(Text002, TRUE, "Principal Options") THEN BEGIN
                                                                    IF OptionRec.FINDSET(TRUE,FALSE) THEN BEGIN
                                                                      REPEAT
                                                                        OptionRec.Principal := "Principal Options";
                                                                        OptionRec.MODIFY;
                                                                      UNTIL OptionRec.NEXT = 0;
                                                                    END;
                                                                  END;

                                                                CALCFIELDS("Principal Options Name");
                                                                Buyer := GetProspectNo;
                                                              END;

                                                   CaptionML=ENU=Principal Options }
    { 330 ;   ;Principal Options Name;Text50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Name WHERE (No.=FIELD(Principal Options)));
                                                   CaptionML=ENU=Principal Options Name;
                                                   Editable=No }
    { 340 ;   ;Options Closing Date;Date          ;CaptionML=ENU=Options Closing Date }
    { 350 ;   ;Buyer               ;Code20        ;TableRelation=Contact.No.;
                                                   CaptionML=ENU=Buyer }
    { 360 ;   ;Last Date Option List Printed;Date ;CaptionML=ENU=Last Date Option List Printed;
                                                   Editable=No }
    { 365 ;   ;Last Time Option List Printed;Time ;CaptionML=ENU=Last Time Option List Printed;
                                                   Editable=No }
    { 380 ;   ;(Re)Print Option List;Boolean      ;FieldClass=FlowField;
                                                   CalcFormula=Exist(Option WHERE (Project No.=FIELD(Project No.),
                                                                                   Plot No.=FIELD(Plot No.),
                                                                                   (Re)Print Option List=CONST(Yes)));
                                                   CaptionML=ENU=(Re)Print Option List;
                                                   Editable=No }
    { 387 ;   ;Buyer E-Mail 2      ;Text80        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact."E-Mail 2" WHERE (No.=FIELD(Buyer)));
                                                   CaptionML=ENU=Buyer E-Mail 2;
                                                   Editable=No }
    { 390 ;   ;Offers Expired      ;Boolean       ;CaptionML=ENU=Offers Expired;
                                                   Editable=No }
    { 400 ;   ;Due Date Plot       ;Date          ;CaptionML=ENU=Due Date Plot }
    { 410 ;   ;Contract Date       ;Date          ;CaptionML=ENU=Contract Date }
    { 420 ;   ;Transfer Date       ;Date          ;CaptionML=ENU=Transfer Date }
    { 430 ;   ;Interest Applicable ;Boolean       ;InitValue=No;
                                                   CaptionML=ENU=Interest Applicable }
    { 440 ;   ;Sales Status        ;Option        ;OnValidate=BEGIN
                                                                "Sales Status Since" := TODAY;
                                                                CASE "Sales Status" OF
                                                                  "Sales Status"::"Provisional Contract":
                                                                    IF "Contract Date" = 0D THEN
                                                                      "Contract Date" := TODAY;
                                                                  "Sales Status"::Sold:
                                                                    IF "Sales date" = 0D THEN
                                                                      VALIDATE("Sales date", TODAY);
                                                                  "Sales Status"::Transferred:
                                                                    IF "Transfer Date" = 0D THEN
                                                                      "Transfer Date" := TODAY;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Sales Status;
                                                   OptionCaptionML=ENU=" ,Option,Under Negotiation,Provisional Contract,Consideration Time,Sold,Transferred";
                                                   OptionString=[ ,Option,Under Negotiation,Provisional Contract,Consideration Time,Sold,Transferred] }
    { 450 ;   ;Sales Status Since  ;Date          ;CaptionML=ENU=Sales Status Since }
    { 460 ;   ;Delivered Object    ;Code20        ;TableRelation="Delivered Object".No.;
                                                   CaptionML=ENU=Delivered Object;
                                                   Editable=No }
    { 470 ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=ENU=VAT Bus. Posting Group }
    { 480 ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT Prod. Posting Group }
    { 490 ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Plot Comment Line" WHERE (Project No.=FIELD(Project No.),
                                                                                                Plot No.=FIELD(Plot No.)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 500 ;   ;Floor No.           ;Code10        ;CaptionML=ENU=Floor No. }
    { 510 ;   ;Div. Int. Before Contract Date;Decimal;
                                                   CaptionML=ENU=Div. Interest Before Contract Date;
                                                   DecimalPlaces=2:2;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 520 ;   ;Div. Int. Before Transfer Date;Decimal;
                                                   CaptionML=ENU=Div. Interest Before Transfer Date;
                                                   DecimalPlaces=2:2;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 530 ;   ;Land Registry No.   ;Code20        ;CaptionML=ENU=Land Registry No. }
    { 540 ;   ;EAN Code Electricity;Code18        ;CaptionML=ENU=EAN Code Electricity;
                                                   Numeric=Yes }
    { 545 ;   ;Request EAN Code El. Before;Date   ;CaptionML=ENU=Request EAN Code Electricity Before }
    { 550 ;   ;EAN Code Gas        ;Code18        ;CaptionML=ENU=EAN Code Gas;
                                                   Numeric=Yes }
    { 555 ;   ;Request EAN Code Gas Before;Date   ;CaptionML=ENU=Request EAN Code Gas Before }
    { 560 ;   ;Energy Label        ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("House Model"."Energy Label" WHERE (Project No.=FIELD(Project No.),
                                                                                                          Model=FIELD(House Model)));
                                                   CaptionML=ENU=Energy Label;
                                                   Editable=No }
    { 562 ;   ;GIW Certificate     ;Code30        ;CaptionML=ENU=GIW Certificate }
    { 570 ;   ;Buy/Rent            ;Option        ;CaptionML=ENU=Buy/Rent;
                                                   OptionCaptionML=ENU=Buy,Rent;
                                                   OptionString=Sale,Rent }
    { 610 ;   ;Occupant Name       ;Text50        ;CaptionML=ENU=Occupant Name }
    { 620 ;   ;Occupant Phone      ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Occupant Phone }
    { 630 ;   ;Occupant Mobile Phone;Text30       ;ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Occupant Mobile Phone }
    { 640 ;   ;Occupant E-Mail     ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=ENU=Occupant E-Mail }
    { 650 ;   ;MMR Phase           ;Option        ;CaptionML=ENU=MMR Phase;
                                                   OptionCaptionML=ENU=PreRecording,Recording,Production;
                                                   OptionString=PreRecording,Recording,Production }
    { 660 ;   ;MMR Status          ;Option        ;CaptionML=ENU=MMR Status;
                                                   OptionString=Open,,,Finished }
    { 670 ;   ;MMR Generate Invoice;Boolean       ;CaptionML=ENU=MMR Generate Invoice }
    { 680 ;   ;MMR Invoiced        ;Boolean       ;CaptionML=ENU=MMR Invoiced }
  }
  KEYS
  {
    {    ;Project No.,Plot No.                    ;Clustered=Yes }
    {    ;Plot No.                                 }
    {    ;Project No.,Principal                   ;SumIndexFields=Building Price,Plot Price,Additional Costs }
    {    ;Project No.,Building Seq.                }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ProjSetup@1100485001 : Record 315;
      ModelRec@11012000 : Record 11012501;
      PostCode@11012001 : Record 225;
      ProjRec@1100485000 : Record 11072003;
      BuyersMgt@1210190000 : Codeunit 11012500;
      Text000@1210190001 : TextConst 'ENU=of Plot No. may not be modified, there are already Options present';
      Text001@1210190002 : TextConst 'ENU=of Plot No. may not be modified, there are already Option Quote Lines present';
      Text002@1100485002 : TextConst 'ENU=Change Principal of te Option Lines into %1?';
      Text003@1100525000 : TextConst 'ENU=Project Installments generated. Change them manually.';
      ProjectSiteMgt@1100528300 : Codeunit 11012282;
      DeleteCompleteProject@1100525001 : Boolean;
      Text006@1100525004 : TextConst 'ENU=Process stopped';
      Text007@1100525003 : TextConst 'ENU="Installments already invoiced; Process stopped"';
      Text008@1100525002 : TextConst 'ENU="Installments present; continue ?"';
      Text009@1100528200 : TextConst 'ENU=of Plot No. may not be modified, there are already Plot Recording List Lines present.';

    PROCEDURE UpdateContractAmount@1(lPlotNoRec@11012000 : Record 11012500);
    VAR
      lPrincipRec@11012001 : Record 11012005;
    BEGIN
      COMMIT;
      IF lPrincipRec.GET(lPlotNoRec."Project No.",lPlotNoRec.Principal) THEN
        IF lPrincipRec."Installments per Plot" THEN BEGIN
          lPrincipRec.VALIDATE("Installments per Plot");
          lPrincipRec.MODIFY;
        END;
    END;

    PROCEDURE TestInstallmentsPerPlotno@2();
    VAR
      lPrincipRec@11012000 : Record 11012005;
    BEGIN
      TESTFIELD(Principal);
      lPrincipRec.GET("Project No.",Principal);
      lPrincipRec.TESTFIELD("Installments per Plot",TRUE);
    END;

    PROCEDURE GetProspectNo@1210190002() ProspectCde : Code[20];
    VAR
      BusinessRelRec@1210190000 : Record 5054;
    BEGIN
      BusinessRelRec.SETCURRENTKEY("Link to Table","No.");
      BusinessRelRec.SETRANGE("No.","Principal Options");
      BusinessRelRec.SETRANGE("Link to Table",BusinessRelRec."Link to Table"::Customer);
      IF BusinessRelRec.FIND('-') THEN
        EXIT(BusinessRelRec."Contact No.")
      ELSE
        EXIT('');
    END;

    PROCEDURE PlotHasOptions@1210190000() : Boolean;
    VAR
      lvOptionRec@1210190000 : Record 11012502;
    BEGIN
      IF ("Project No." <> '') AND ("Plot No." <> '') THEN BEGIN
        lvOptionRec.SETRANGE("Project No.", "Project No.");
        lvOptionRec.SETRANGE("Plot No.", "Plot No.");
        IF lvOptionRec.FINDFIRST THEN
          EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    PROCEDURE PlotHasOptQuoteLines@1210190001() : Boolean;
    VAR
      lvOptQuoteLineRec@1210190000 : Record 11012514;
    BEGIN
      IF ("Project No." <> '') AND ("Plot No." <> '') THEN BEGIN
        lvOptQuoteLineRec.SETCURRENTKEY("Project No.", "Plot No.");
        lvOptQuoteLineRec.SETRANGE("Project No.", "Project No.");
        lvOptQuoteLineRec.SETRANGE("Plot No.", "Plot No.");
        IF lvOptQuoteLineRec.FIND('-') THEN
          EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    PROCEDURE PlotVatProdPostingGroup@1100485000() : Code[10];
    BEGIN
      ProjRec.GET("Project No.");
      IF ProjRec."Conveyance Tax" AND
        ((ProjRec."Ready for Building Date" = 0D) OR ("Sales date" < ProjRec."Ready for Building Date")) THEN
      BEGIN
        ProjSetup.GET;
        ProjSetup.TESTFIELD("VAT Prod. Posting Group Plot");
        EXIT(ProjSetup."VAT Prod. Posting Group Plot");
      END;
    END;

    PROCEDURE ShowDocuments@1100485003();
    VAR
      RecRef@1100525000 : RecordRef;
      DocumentFilters@1100525001 : Codeunit 11012432;
    BEGIN
      IF "Plot No." = '' THEN
        EXIT;

      TESTFIELD("Principal Options");

      IF GetProspectNo <> '' THEN BEGIN
        RecRef.GETTABLE(Rec);
        DocumentFilters.CreateTempFilterAndExecute1(RecRef, '', FALSE, TRUE);
      END;
    END;

    PROCEDURE UpdateDeliveredObject@1100525000();
    VAR
      lvDelivbjectRec@1100525000 : Record 11012101;
      lvModified@1100525001 : Boolean;
    BEGIN
      IF "Delivered Object" = '' THEN
        EXIT;
      IF NOT lvDelivbjectRec.GET("Delivered Object") THEN
        EXIT;

      IF lvDelivbjectRec.Address <> Address THEN BEGIN
        lvDelivbjectRec.Address := Address;
        lvModified := TRUE;
      END;
      IF lvDelivbjectRec."Post Code" <> "Post Code" THEN BEGIN
        lvDelivbjectRec."Post Code" := "Post Code";
        lvModified := TRUE;
      END;
      IF lvDelivbjectRec. City <>  City THEN BEGIN
        lvDelivbjectRec. City :=  City;
        lvModified := TRUE;
      END;

      IF lvModified THEN
        lvDelivbjectRec.MODIFY;
    END;

    PROCEDURE EditDocuments@1100528702(DocumentTemplateTypeFilter@1210190003 : Text[250];ContactNo@1210190004 : Code[20];ContactPersonNo@1210190005 : Code[20];SendMail@1210190002 : Boolean;Recipient@1100528700 : Text[120]);
    VAR
      Job@1100528701 : Record 11072003;
      DocumentMailing@1210190000 : Codeunit 11012278;
      RecRef@1100525000 : RecordRef;
      DocumentLinkRIDs@1100525001 : ARRAY [5] OF RecordID;
    BEGIN
      RecRef.GETTABLE(Rec);
      DocumentLinkRIDs[1] := RecRef.RECORDID;

      IF Job.GET("Project No.") THEN BEGIN
        RecRef.GETTABLE(Job);
        DocumentLinkRIDs[2] := RecRef.RECORDID;
      END;

      DocumentMailing.EditDocuments(
        DocumentTemplateTypeFilter, DocumentLinkRIDs, '', ContactNo, ContactPersonNo, SendMail, Recipient);
    END;

    PROCEDURE SetDeleteCompleteProject@1100525001();
    BEGIN
      //CALL C007542
      DeleteCompleteProject := TRUE;
    END;

    PROCEDURE PlotHasPlotRecordingListLines@1100528200() : Boolean;
    VAR
      PlotSQRecordingLine@1100528200 : Record 11072252;
    BEGIN
      IF NOT PlotSQRecordingLine.READPERMISSION THEN
        EXIT;

      IF ("Project No." <> '') AND ("Plot No." <> '') THEN BEGIN
        PlotSQRecordingLine.SETRANGE("Project No.", "Project No.");
        PlotSQRecordingLine.SETRANGE("Plot No.", "Plot No.");
        IF PlotSQRecordingLine.FINDFIRST THEN
          EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    BEGIN
    {
      **4PS01 Jan ter Harmsel, Call 2094  At Rename also update references in documents.
      That table is on database level and will not be handled automatically.

      4PS02 Jan ter Harmsel, Deliveries Heijligers.
    }
    END.
  }
}

