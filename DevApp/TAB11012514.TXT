OBJECT Table 11012514 Option Quote Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               OptionQuoteHeaderRec.GET("Option Quote No.");
               OptionQuoteHeaderRec.TESTFIELD("Project No.");
               OptionQuoteHeaderRec.TESTFIELD("Plot No.");
               TESTFIELD("House Model");
               TESTFIELD("Main Group");
               TESTFIELD(Group);
               TESTFIELD("Sub Group");
               TESTFIELD(Option);
             END;

    OnModify=BEGIN
               OnModifyGroupsChanged();
             END;

    OnDelete=VAR
               lvOptionTextRec@1210190000 : Record 11012511;
             BEGIN
               lvOptionTextRec.SETRANGE(Table, lvOptionTextRec.Table::"Option Quote Line");
               lvOptionTextRec.SETRANGE("Quote No.", "Option Quote No.");
               lvOptionTextRec.SETRANGE("Quote Line No.", "Line No.");
               lvOptionTextRec.DELETEALL;
             END;

    CaptionML=ENU=Option Quote Line;
    PasteIsValid=No;
  }
  FIELDS
  {
    { 10  ;   ;Option Quote No.    ;Code20        ;TableRelation="Option Quote Header";
                                                   CaptionML=ENU=Option Quote No. }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 30  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   CaptionML=ENU=Project No.;
                                                   Editable=No }
    { 40  ;   ;Plot No.            ;Code10        ;TableRelation=Plot."Plot No." WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=ENU=Plot No.;
                                                   Editable=No }
    { 45  ;   ;House Model         ;Code20        ;CaptionML=ENU=House Model;
                                                   Editable=No }
    { 50  ;   ;Main Group          ;Code20        ;TableRelation="Option Main Group".Code WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=BEGIN
                                                                IF "Main Group" <> '' THEN BEGIN
                                                                  CheckHouseModel();
                                                                  IF (Status IN [Status::Order, Status::Invoice]) AND
                                                                     ("Main Group" <> xRec."Main Group") AND  (CurrFieldNo = FIELDNO("Main Group"))
                                                                  THEN
                                                                    FIELDERROR(Status, STRSUBSTNO(Text005, Status, FIELDCAPTION("Main Group")));
                                                                  IF (Group <> '') AND ("Sub Group" <> '') AND (Option <> '') AND
                                                                     ("Main Group" <> xRec."Main Group") AND  (CurrFieldNo = FIELDNO("Main Group"))
                                                                  THEN
                                                                    VALIDATE(Option);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Main Group;
                                                   NotBlank=Yes }
    { 60  ;   ;Group               ;Code20        ;TableRelation="Option Group".Code WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=BEGIN
                                                                IF Group <> '' THEN BEGIN
                                                                  CheckHouseModel();
                                                                  TESTFIELD("Main Group");
                                                                  IF (Status IN [Status::Order, Status::Invoice]) AND
                                                                     (Group <> xRec.Group) AND  (CurrFieldNo = FIELDNO(Group))
                                                                  THEN
                                                                    FIELDERROR(Status, STRSUBSTNO(Text005, Status, FIELDCAPTION(Group)));
                                                                  IF ("Sub Group" <> '') AND (Option <> '') AND (Group <> xRec.Group) AND  (CurrFieldNo = FIELDNO(Group)) THEN
                                                                    VALIDATE(Option);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Group;
                                                   NotBlank=Yes }
    { 70  ;   ;Sub Group           ;Code20        ;TableRelation="Option Sub Group".Code WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=BEGIN
                                                                IF "Sub Group" <> '' THEN BEGIN
                                                                  CheckHouseModel();
                                                                  TESTFIELD("Main Group");
                                                                  TESTFIELD(Group);
                                                                  IF (Status IN [Status::Order, Status::Invoice]) AND
                                                                     ("Sub Group" <> xRec."Sub Group") AND  (CurrFieldNo = FIELDNO("Sub Group"))
                                                                  THEN
                                                                    FIELDERROR(Status, STRSUBSTNO(Text005, Status, FIELDCAPTION("Sub Group")));
                                                                  IF (Option <> '') AND ("Sub Group" <> xRec."Sub Group") AND  (CurrFieldNo = FIELDNO("Sub Group")) THEN
                                                                    VALIDATE(Option);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Sub Group;
                                                   NotBlank=Yes }
    { 80  ;   ;Option              ;Code20        ;OnValidate=BEGIN
                                                                IF Option <> '' THEN BEGIN
                                                                  CheckHouseModel();
                                                                  TESTFIELD("Main Group");
                                                                  TESTFIELD(Group);
                                                                  TESTFIELD("Sub Group");
                                                                  IF (Status IN [Status::Order, Status::Invoice]) AND
                                                                     (Option <> xRec.Option) AND  (CurrFieldNo = FIELDNO(Option))
                                                                  THEN
                                                                    FIELDERROR(Status, STRSUBSTNO(Text005, Status, FIELDCAPTION(Option)));

                                                                  OptionLevel := ReadOptionLevel(Rec);
                                                                  IF OptionLevel = OptionLevel::Plot THEN BEGIN
                                                                    IF OptionRec.Status >= OptionRec.Status::Order THEN
                                                                      ERROR(Text000, "Main Group", Group, "Sub Group", Option, OptionRec.Status, "Project No.", "Plot No.");
                                                                  END;
                                                                  IF OptionLevel <> OptionLevel::None THEN BEGIN
                                                                    IF (TODAY < OptionRec."Valid from") AND (OptionRec."Valid from" <> 0D) THEN BEGIN
                                                                      IF (OptionRec."Valid Until" <> 0D) THEN
                                                                        OptionRec.FIELDERROR(Option, STRSUBSTNO(Text001, OptionRec."Valid from", OptionRec."Valid Until"))
                                                                      ELSE
                                                                        OptionRec.FIELDERROR(Option, STRSUBSTNO(Text002, OptionRec."Valid from"));
                                                                    END;
                                                                    IF (TODAY > OptionRec."Valid Until") AND (OptionRec."Valid Until" <> 0D) THEN BEGIN
                                                                      IF (OptionRec."Valid from" <> 0D) THEN
                                                                        OptionRec.FIELDERROR(Option, STRSUBSTNO(Text001, OptionRec."Valid from", OptionRec."Valid Until"))
                                                                      ELSE
                                                                        OptionRec.FIELDERROR(Option, STRSUBSTNO(Text003, OptionRec."Valid Until"));
                                                                    END;
                                                                  END;
                                                                  IF NOT BuyerMgtCU.BmCheckOptionOnQuote("Project No.","Plot No.","House Model","Option Quote No.",OptionRec,"Line No.") THEN
                                                                    ERROR('');

                                                                  IF OptionLevel <> OptionLevel::None THEN BEGIN
                                                                    IF ((Option <> xRec.Option) AND  (CurrFieldNo = FIELDNO(Option))) OR
                                                                       (("Main Group" <> xRec."Main Group") AND  (CurrFieldNo = FIELDNO("Main Group"))) OR
                                                                       ((Group <> xRec.Group) AND  (CurrFieldNo = FIELDNO(Group))) OR
                                                                       (("Sub Group" <> xRec."Sub Group") AND  (CurrFieldNo = FIELDNO("Sub Group")))
                                                                    THEN BEGIN
                                                                      Description := OptionRec.Description;
                                                                      VALIDATE(Quantity, OptionRec.Quantity);
                                                                      "VAT Prod. Posting Group" := OptionRec."VAT Prod. Posting Group";
                                                                      "VAT Bus. Posting Group" := OptionRec."VAT Bus. Posting Group";
                                                                      VALIDATE("Nett Price", OptionRec."Nett Price");
                                                                    END;
                                                                  END;

                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupOption();
                                                            END;

                                                   CaptionML=ENU=Option;
                                                   NotBlank=Yes }
    { 90  ;   ;Description         ;Text100       ;CaptionML=ENU=Description }
    { 100 ;   ;Quantity            ;Decimal       ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                OptionLevel := ReadOptionLevel(Rec);
                                                                IF (OptionLevel <> OptionLevel::None) AND (NOT OptionRec.Quantities) AND (Quantity <> 1) THEN
                                                                  Quantity := 1;

                                                                BuyerMgtCU.BmCalcQuoteLineTotal(Rec);
                                                              END;

                                                   CaptionML=ENU=Quantity }
    { 110 ;   ;Sales Price excl. VAT;Decimal      ;OnValidate=BEGIN
                                                                CALCFIELDS("VAT Percentage");
                                                                "Sales Price incl. VAT" := ROUND("Sales Price excl. VAT" * (1 + ("VAT Percentage" / 100)));
                                                                BuyerMgtCU.BmCalcQuoteLineTotal(Rec);
                                                              END;

                                                   CaptionML=ENU=Sales Price excl. VAT;
                                                   AutoFormatType=1 }
    { 120 ;   ;Sales Price incl. VAT;Decimal      ;OnValidate=BEGIN
                                                                IF "Developers Discount Percentage" = 100 THEN
                                                                  "Sales Price incl. VAT (Buyer)" := 0
                                                                ELSE
                                                                  "Sales Price incl. VAT (Buyer)" := "Sales Price incl. VAT" * 100 / (100 - "Developers Discount Percentage") ;

                                                                BuyerMgtCU.BmCalcQuoteLineTotal(Rec);
                                                              END;

                                                   CaptionML=ENU=Sales Price incl. VAT }
    { 150 ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group".Code;
                                                   OnValidate=BEGIN
                                                                BuyerMgtCU.BmCalcQuoteLineTotal(Rec);
                                                              END;

                                                   CaptionML=ENU=VAT Prod. Posting Group }
    { 160 ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group".Code;
                                                   OnValidate=BEGIN
                                                                BuyerMgtCU.BmCalcQuoteLineTotal(Rec);
                                                              END;

                                                   CaptionML=ENU=VAT Bus. Posting Group }
    { 170 ;   ;VAT Percentage      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("VAT Posting Setup"."VAT %" WHERE (VAT Bus. Posting Group=FIELD(VAT Bus. Posting Group),
                                                                                                         VAT Prod. Posting Group=FIELD(VAT Prod. Posting Group)));
                                                   CaptionML=ENU=VAT Percentage;
                                                   Editable=No }
    { 180 ;   ;Nett Price          ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Nett Price" <> xRec."Nett Price") AND (CurrFieldNo = FIELDNO("Nett Price")) AND (Status < Status::Order) THEN BEGIN
                                                                  IF CONFIRM(Text004) THEN BEGIN
                                                                    CALCFIELDS("VAT Percentage");
                                                                    "Sales Price incl. VAT" := ROUND("Nett Price" * (1 + ("VAT Percentage" / 100)));
                                                                    BuyerMgtCU.BmCalcQuoteLineTotal(Rec);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Nett Price;
                                                   AutoFormatType=1 }
    { 190 ;   ;VAT Amount          ;Decimal       ;CaptionML=ENU=VAT Amount;
                                                   Editable=No }
    { 200 ;   ;Sales Amount incl. VAT;Decimal     ;CaptionML=ENU=Sales Amount incl. VAT;
                                                   Editable=No }
    { 210 ;   ;Sales Amount excl. VAT;Decimal     ;CaptionML=ENU=Sales Amount excl. VAT;
                                                   Editable=No }
    { 220 ;   ;Quote Amount incl. VAT;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Option Quote Line"."Sales Amount incl. VAT" WHERE (Option Quote No.=FIELD(Option Quote No.),
                                                                                                                       Status=FILTER(<>Expired)));
                                                   CaptionML=ENU=Quote Amount incl. VAT;
                                                   Editable=No }
    { 230 ;   ;Quote Amount excl. VAT;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Option Quote Line"."Sales Amount excl. VAT" WHERE (Option Quote No.=FIELD(Option Quote No.),
                                                                                                                       Status=FILTER(<>Expired)));
                                                   CaptionML=ENU=Quote Amount excl. VAT;
                                                   Editable=No }
    { 240 ;   ;Status              ;Option        ;CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=Applied,Offered,Order,Chargeble,Expired;
                                                   OptionString=Applied,Offered,Order,Invoice,Expired }
    { 250 ;   ;Quantities          ;Boolean       ;FieldClass=Normal;
                                                   OnValidate=BEGIN
                                                                IF (NOT Quantities) AND (Quantity <> 1) THEN
                                                                  VALIDATE(Quantity, 1);
                                                              END;

                                                   CaptionML=ENU=Quantities }
    { 260 ;   ;Sales Text          ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Buyer Management Text" WHERE (Table=CONST(Option Quote Line),
                                                                                                    Text Type=CONST(Sales),
                                                                                                    Quote No.=FIELD(Option Quote No.),
                                                                                                    Quote Line No.=FIELD(Line No.)));
                                                   CaptionML=ENU=Sales Text;
                                                   Editable=No }
    { 265 ;   ;Technical Text      ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Buyer Management Text" WHERE (Table=CONST(Option Quote Line),
                                                                                                    Text Type=CONST(Technical),
                                                                                                    Quote No.=FIELD(Option Quote No.),
                                                                                                    Quote Line No.=FIELD(Line No.)));
                                                   CaptionML=ENU=Technical Text;
                                                   Editable=No }
    { 270 ;   ;Developers Discount Percentage;Decimal;
                                                   OnValidate=BEGIN
                                                                //C-018215
                                                                BuyerMgtCU.BmDetermineVATOptQuote(Rec);
                                                                BuyerMgtCU.BmDetermineSalesPriceOptQuote(Rec);
                                                              END;

                                                   CaptionML=ENU=Developers Discount (%) }
    { 275 ;   ;Sales Price incl. VAT (Buyer);Decimal;
                                                   OnValidate=BEGIN
                                                                //C-018215
                                                                "Sales Price incl. VAT" := "Sales Price incl. VAT (Buyer)" * (100 - "Developers Discount Percentage") /100;
                                                                BuyerMgtCU.BmCalcQuoteLineTotal(Rec);
                                                              END;

                                                   CaptionML=ENU=Sales Price incl. VAT (Buyer);
                                                   AutoFormatType=1 }
  }
  KEYS
  {
    {    ;Option Quote No.,Line No.               ;Clustered=Yes }
    {    ;Project No.,Plot No.,House Model,Main Group,Group,Sub Group,Option }
    {    ;Option Quote No.,Status                 ;SumIndexFields=Sales Amount incl. VAT,Sales Amount excl. VAT }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      OptionQuoteHeaderRec@1210190000 : Record 11012513;
      OptionRec@1210190001 : Record 11012502;
      Text000@1210190002 : TextConst 'ENU=Option %1,%2,%3,%4 is already present with status ''%5'' for project %6, plot %7.';
      PlotRec@1210190008 : Record 11012500;
      Text001@1210190005 : TextConst 'ENU=is not valid, valid from %1 upto %2';
      BuyerMgtCU@1210190006 : Codeunit 11012500;
      OptionLevel@1210190007 : 'None,Standard,Project,Plot';
      Text002@1210190004 : TextConst 'ENU=is not valid, valid from %';
      Text003@1210190009 : TextConst 'ENU=is not valid, valid upto %1';
      Text004@1210190010 : TextConst 'ENU="Recalculate Sales Price ? "';
      Text005@1100485000 : TextConst 'ENU=is ''%1'', rename %2 not allowed';

    PROCEDURE InitRecord@1210190000();
    BEGIN
      IF "Option Quote No." = '' THEN
        EXIT;

      OptionQuoteHeaderRec.GET("Option Quote No.");
      "Project No." := OptionQuoteHeaderRec."Project No.";
      "Plot No." := OptionQuoteHeaderRec."Plot No.";
      OptionQuoteHeaderRec.CALCFIELDS("House Model");
      "House Model" := OptionQuoteHeaderRec."House Model";
    END;

    PROCEDURE ReadOptionLevel@1210190001(IRec@1100485000 : Record 11012514) : Integer;
    BEGIN
      WITH IRec DO BEGIN
        IF OptionRec.GET("Project No.", "Plot No.", "House Model", "Main Group", Group, "Sub Group", Option) THEN
          EXIT(OptionLevel::Plot);

        IF OptionRec.GET("Project No.", '', "House Model", "Main Group", Group, "Sub Group", Option) THEN
          EXIT(OptionLevel::Project);

        IF OptionRec.GET('', '', "House Model", "Main Group", Group, "Sub Group", Option) THEN
          EXIT(OptionLevel::Standard);

        OptionRec.INIT;
        OptionRec."Project No." := '';
        OptionRec."Plot No." := '';
        OptionRec."House Model" := '';
        OptionRec."Main Group" := "Main Group";
        OptionRec.Group := Group;
        OptionRec."Sub Group" := "Sub Group";
        OptionRec.Option := Option;
        EXIT(OptionLevel::None);
      END;
    END;

    PROCEDURE LookupOption@1210190003();
    VAR
      lvOptionRec@1210190000 : Record 11012502;
    BEGIN
      lvOptionRec.SETRANGE("Project No.", "Project No.");
      lvOptionRec.SETRANGE("Plot No.", "Plot No.");
      IF NOT lvOptionRec.FINDFIRST THEN BEGIN
        lvOptionRec.SETRANGE("Plot No.");
        lvOptionRec."Plot No." := '';
      END;
      lvOptionRec."Project No." := "Project No.";
      lvOptionRec."House Model" := "House Model";
      lvOptionRec."Main Group" := "Main Group";
      lvOptionRec.Group := Group;
      lvOptionRec."Sub Group" := "Sub Group";
      lvOptionRec.Option := Option;
      IF PAGE.RUNMODAL(PAGE::"Option List", lvOptionRec) = ACTION::LookupOK THEN
        VALIDATE(Option, lvOptionRec.Option);
    END;

    PROCEDURE CheckHouseModel@1210190002();
    BEGIN
      IF ("House Model" <> '') OR ("Project No." = '') OR ("Plot No." = '') THEN
        EXIT;

      IF PlotRec.GET("Project No.", "Plot No.") THEN
        PlotRec.TESTFIELD("House Model");
    END;

    PROCEDURE OnModifyGroupsChanged@1100485000();
    VAR
      lvOldLineRec@1100485000 : Record 11012514;
      lvOptionRec@1100485013 : Record 11012502;
      lvOptionRec2@1100485014 : Record 11012502;
      lvOptionBudgetRec@1100485010 : Record 11012503;
      lvOptionBudgetRec2@1100485009 : Record 11012503;
      lvOptionBudgetSummaryRec@1100485008 : Record 11012064;
      lvOptionBudgetSummaryRec2@1100485007 : Record 11012064;
      lvOptionSurchargesRec@1100485006 : Record 11012512;
      lvOptionSurchargesRec2@1100485005 : Record 11012512;
      lvOptionTextRec@1100485004 : Record 11012511;
      lvOptionTextRec2@1100485003 : Record 11012511;
      lvOptionLevelNew@1100485001 : Option;
      lvOptionLevelOld@1100485002 : Option;
      lvProjectNo@1100485011 : Code[20];
      lvPlotNo@1100485012 : Code[20];
    BEGIN
      //* C009865: Als wijzigen hoofdgroep, groep of subgroep dan maar optiebegroting toevoegen op project-woningmodel
      //*          niveau (indien voor nieuwe nog niet aanwezig). Alleen maar als optie gelijk blijft (voorlopig).
      //*          NB: Mag hier niet op bouwnummer niveau toegevoegd worden!

      IF ("Option Quote No." = '') OR ("Line No." = 0) OR
         ("Project No." = '') OR ("Plot No." = '') OR ("House Model" = '') OR
         ("Main Group" = '') OR (Group = '') OR ("Sub Group" = '') OR (Option = '')
      THEN
        EXIT;
      IF NOT lvOldLineRec.GET("Option Quote No.", "Line No.") THEN
        EXIT;
      IF (lvOldLineRec."Main Group" = '') OR (lvOldLineRec.Group = '') OR
         (lvOldLineRec."Sub Group" = '') OR (lvOldLineRec.Option = '')
      THEN
        EXIT;
      IF (("Main Group" = lvOldLineRec."Main Group") AND (Group = lvOldLineRec.Group) AND
          ("Sub Group" = lvOldLineRec."Sub Group") ) OR
         (Option <> lvOldLineRec.Option)
      THEN
        EXIT;

      lvOptionLevelNew := ReadOptionLevel(Rec);
      IF lvOptionLevelNew <> OptionLevel::None THEN  //* Als aanwezig bij 'new' dan optiebegroting kopieren niet nodig
        EXIT;

      lvOptionLevelOld := ReadOptionLevel(lvOldLineRec);
      CASE lvOptionLevelOld OF
         OptionLevel::Standard:
           BEGIN
             lvProjectNo := '';
             lvPlotNo := '';
           END;
         OptionLevel::Project:
           BEGIN
             lvProjectNo := lvOldLineRec."Project No.";
             lvPlotNo := '';
           END;
         OptionLevel::Plot:
           BEGIN
             lvProjectNo := lvOldLineRec."Project No.";
             lvPlotNo := lvOldLineRec."Plot No.";
           END;
         ELSE
           EXIT;  //* Alleen mogelijk als aanwezig bij 'old'
      END;

      lvOptionRec.SETRANGE("Project No.", lvProjectNo);
      lvOptionRec.SETRANGE("Plot No.", lvPlotNo);
      lvOptionRec.SETRANGE("House Model", lvOldLineRec."House Model");
      lvOptionRec.SETRANGE("Main Group", lvOldLineRec."Main Group");
      lvOptionRec.SETRANGE(Group, lvOldLineRec.Group);
      lvOptionRec.SETRANGE("Sub Group", lvOldLineRec."Sub Group");
      lvOptionRec.SETRANGE(Option, lvOldLineRec.Option);
      IF lvOptionRec.FINDSET(TRUE, FALSE) THEN BEGIN
        REPEAT
          lvOptionRec2 := lvOptionRec;
          lvOptionRec2."Project No." := "Project No.";
          lvOptionRec2."Plot No." := '';
          lvOptionRec2."House Model" := "House Model";
          lvOptionRec2."Main Group" := "Main Group";
          lvOptionRec2.Group := Group;
          lvOptionRec2."Sub Group" := "Sub Group";
          lvOptionRec2.Option := Option;
          lvOptionRec2.INSERT;
        UNTIL lvOptionRec.NEXT = 0;
      END;

      lvOptionBudgetRec.SETRANGE("Project No.", lvProjectNo);
      lvOptionBudgetRec.SETRANGE("Plot No.", lvPlotNo);
      lvOptionBudgetRec.SETRANGE("House Model", lvOldLineRec."House Model");
      lvOptionBudgetRec.SETRANGE("Main Group", lvOldLineRec."Main Group");
      lvOptionBudgetRec.SETRANGE(Group, lvOldLineRec.Group);
      lvOptionBudgetRec.SETRANGE("Sub Group", lvOldLineRec."Sub Group");
      lvOptionBudgetRec.SETRANGE(Option, lvOldLineRec.Option);
      IF lvOptionBudgetRec.FINDSET(TRUE, FALSE) THEN BEGIN
        REPEAT
          lvOptionBudgetRec2 := lvOptionBudgetRec;
          lvOptionBudgetRec2."Project No." := "Project No.";
          lvOptionBudgetRec2."Plot No." := '';
          lvOptionBudgetRec2."House Model" := "House Model";
          lvOptionBudgetRec2."Main Group" := "Main Group";
          lvOptionBudgetRec2.Group := Group;
          lvOptionBudgetRec2."Sub Group" := "Sub Group";
          lvOptionBudgetRec2.Option := Option;
          lvOptionBudgetRec2.INSERT;
        UNTIL lvOptionBudgetRec.NEXT = 0;
      END;

      lvOptionBudgetSummaryRec.SETRANGE("Project No.", lvProjectNo);
      lvOptionBudgetSummaryRec.SETRANGE("Plot No.", lvPlotNo);
      lvOptionBudgetSummaryRec.SETRANGE("House Model", lvOldLineRec."House Model");
      lvOptionBudgetSummaryRec.SETRANGE("Main Group", lvOldLineRec."Main Group");
      lvOptionBudgetSummaryRec.SETRANGE(Group, lvOldLineRec.Group);
      lvOptionBudgetSummaryRec.SETRANGE("Sub Group", lvOldLineRec."Sub Group");
      lvOptionBudgetSummaryRec.SETRANGE(Option, lvOldLineRec.Option);
      IF lvOptionBudgetSummaryRec.FIND('-') THEN BEGIN
        REPEAT
          lvOptionBudgetSummaryRec2 := lvOptionBudgetSummaryRec;
          lvOptionBudgetSummaryRec2."Project No." := "Project No.";
          lvOptionBudgetSummaryRec2."Plot No." := '';
          lvOptionBudgetSummaryRec2."House Model" := "House Model";
          lvOptionBudgetSummaryRec2."Main Group" := "Main Group";
          lvOptionBudgetSummaryRec2.Group := Group;
          lvOptionBudgetSummaryRec2."Sub Group" := "Sub Group";
          lvOptionBudgetSummaryRec2.Option := Option;
          lvOptionBudgetSummaryRec2.INSERT;
        UNTIL lvOptionBudgetSummaryRec.NEXT = 0;
      END;

      lvOptionSurchargesRec.SETRANGE("Project No.", lvProjectNo);
      lvOptionSurchargesRec.SETRANGE("Plot No.", lvPlotNo);
      lvOptionSurchargesRec.SETRANGE("House Model", lvOldLineRec."House Model");
      lvOptionSurchargesRec.SETRANGE("Main Group", lvOldLineRec."Main Group");
      lvOptionSurchargesRec.SETRANGE(Group, lvOldLineRec.Group);
      lvOptionSurchargesRec.SETRANGE("Sub Group", lvOldLineRec."Sub Group");
      lvOptionSurchargesRec.SETRANGE(Option, lvOldLineRec.Option);
      IF lvOptionSurchargesRec.FIND('-') THEN BEGIN
        REPEAT
          lvOptionSurchargesRec2 := lvOptionSurchargesRec;
          lvOptionSurchargesRec2."Project No." := "Project No.";
          lvOptionSurchargesRec2."Plot No." := '';
          lvOptionSurchargesRec2."House Model" := "House Model";
          lvOptionSurchargesRec2."Main Group" := "Main Group";
          lvOptionSurchargesRec2.Group := Group;
          lvOptionSurchargesRec2."Sub Group" := "Sub Group";
          lvOptionSurchargesRec2.Option := Option;
          lvOptionSurchargesRec2.INSERT;
        UNTIL lvOptionSurchargesRec.NEXT = 0;
      END;

      lvOptionTextRec.SETRANGE(Table, lvOptionTextRec.Table::Option);
      lvOptionTextRec.SETRANGE("Project No.", lvProjectNo);
      lvOptionTextRec.SETRANGE("Plot No.", lvPlotNo);
      lvOptionTextRec.SETRANGE("House Model", lvOldLineRec."House Model");
      lvOptionTextRec.SETRANGE("Option Main Group", lvOldLineRec."Main Group");
      lvOptionTextRec.SETRANGE("Option Sub Group", lvOldLineRec."Sub Group");
      lvOptionTextRec.SETRANGE("Option Group", lvOldLineRec.Group);
      lvOptionTextRec.SETRANGE(Option, lvOldLineRec.Option);
      IF lvOptionTextRec.FIND('-') THEN BEGIN
        REPEAT
          lvOptionTextRec2 := lvOptionTextRec;
          lvOptionTextRec2."Project No." := "Project No.";
          lvOptionTextRec2."Plot No." := '';
          lvOptionTextRec2."House Model" := "House Model";
          lvOptionTextRec2."Option Main Group" := "Main Group";
          lvOptionTextRec2."Option Sub Group" := "Sub Group";
          lvOptionTextRec2."Option Group" := Group;
          lvOptionTextRec2.Option := Option;
          lvOptionTextRec2.INSERT;
        UNTIL lvOptionTextRec.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

