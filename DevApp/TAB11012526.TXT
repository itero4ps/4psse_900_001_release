OBJECT Table 11012526 Project Material Req. Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               JobsSetup@1100525001 : Record 315;
             BEGIN
               IF "Line No." = 0 THEN
                 "Line No." := GetNextLineNo; //kkleermaker.n, 130903, C006035
               IF (Origin = Origin::Manual) THEN BEGIN
                 //130626, kzwerver, sn, #C008188
                 JobsSetup.GET;
                 "Unique Traceable" := JobsSetup."Default Unique Traceable";
                 //130626, kzwerver, en, #C008188
                 "Exclude Logistics" := FALSE;
               END;
               OnDeleteQuestionAsked := FALSE;
               IF Origin <> Origin::Manual THEN
                 VALIDATE(Element);
               CheckEntityNo;
               CheckProjectElementItem;  //db, 30-10-15
               FillCreatedByOn();
             END;

    OnModify=BEGIN
               OnDeleteQuestionAsked := FALSE;
               CheckEntityNo;
               CheckProjectElementItem;  //db, 30-10-15
               FillModifiedByOn();
             END;

    OnDelete=VAR
               PurchaseLineDetail@1210190000 : Record 11020660;
             BEGIN
               //IF ("Processed (AdviceOrder)") THEN BEGIN  //db.o, 09-10-15
               IF ("Advice Order Line No." <> 0) THEN BEGIN  //db.n, 09-10-15
                 IF (NOT OnDeleteQuestionAsked) THEN BEGIN
                   OnDeleteQuestionAsked := TRUE;
                   OnDeleteQuestion := CONFIRM(Text005, FALSE);
                 END;
                 IF (NOT OnDeleteQuestion) THEN
                   ERROR('');
               END;

               //kzwerver, 110606, sn, #27784
               IF PurchaseLineDetail.GET(
                 PurchaseLineDetail."Line Type"::"Material Requirement",
                 PurchaseLineDetail."Record Type"::Project,
                 "Project No.",
                 "Yard No.",
                 "System No.",
                 "Entity Type",
                 "Entity No.",
                 '',
                 '', //kkleermaker.n, 110718, M28356
                 "Line No.")
               THEN
                 PurchaseLineDetail.DELETE;
               //kzwerver, 110606, en, #27784

               DeleteDocumentLinks;
             END;

    OnRename=VAR
               ProjectMaterialReqLine@1100525000 : Record 11012526;
             BEGIN
               //kkleermaker.sn, 130903, C006035
               IF ProjectMaterialReqLine.GET(
                 "Project No.",
                 "Yard No.",
                 "Entity Type",
                 "System No.",
                 "Entity No.",
                 "Line No.")
               THEN
                 "Line No." := GetNextLineNo;
               RenamePurchaseLineDetail;
               //kkleermaker.en
               CheckEntityNo;
             END;

    CaptionML=ENU=Project Material Req. Line;
    LookupPageID=Page11072352;
    DrillDownPageID=Page11072352;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job.No.;
                                                   OnValidate=VAR
                                                                Job@1100526100 : Record 11072003;
                                                              BEGIN
                                                                IF ("Project No." <> '') THEN BEGIN;
                                                                  Job.GET("Project No.");
                                                                  IF (NOT Job."Posting Element Mandatory") THEN
                                                                    Element := '';
                                                                  VALIDATE("Delivery Date", Job."Starting Date");
                                                                END ELSE BEGIN
                                                                  "Delivery Date" := 0D;
                                                                  Element := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Project No.;
                                                   Editable=No }
    { 15  ;   ;Element             ;Code20        ;TableRelation="Project Element".Element WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=VAR
                                                                Job@1210190000 : Record 11072003;
                                                                ProjectElement@1100526100 : Record 11012010;
                                                                FormatManagement@1100526101 : Codeunit 11012022;
                                                              BEGIN
                                                                Job.GET("Project No.");
                                                                IF (Job."Posting Element Mandatory") AND (Element = '') THEN
                                                                  TESTFIELD(Element);
                                                                IF (Element <> '') THEN BEGIN;
                                                                  FormatManagement.FormatElem(Element, 2, COMPANYNAME);
                                                                  ProjectElement.GET("Project No.", Element);
                                                                  ProjectElement.CheckProjectElementBlocked;
                                                                  IF (NOT DeliveryDateIsModified) AND
                                                                     (ProjectElement."Starting Date" <> 0D)
                                                                  THEN
                                                                    "Delivery Date" := ProjectElement."Starting Date";
                                                                END ELSE BEGIN
                                                                  IF ("Delivery Date" = 0D) THEN
                                                                    IF (NOT DeliveryDateIsModified) THEN
                                                                      "Delivery Date" := Job."Starting Date";
                                                                END;
                                                                DeliveryDateIsModified := FALSE;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Element }
    { 20  ;   ;Yard No.            ;Code20        ;TableRelation="Assembly Yard Number Object"."Yard No." WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=BEGIN
                                                                ValidateDeliveryDate;
                                                              END;

                                                   CaptionML=ENU=Yard No.;
                                                   Description=Engineering }
    { 25  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No.;
                                                   Editable=No }
    { 30  ;   ;Entity Type         ;Option        ;OnValidate=BEGIN
                                                                ValidateDeliveryDate;
                                                              END;

                                                   CaptionML=ENU=Entity Type;
                                                   OptionCaptionML=ENU=None,Cable,Device,Extra Need,Cable Transit,,,,,Position;
                                                   OptionString=None,Cable,Device,ExtraNeed,CableTransit,,,,,Position;
                                                   Description=Engineering }
    { 40  ;   ;System No.          ;Code20        ;TableRelation="Assembly Yard Number Object"."System No." WHERE (Project No.=FIELD(Project No.),
                                                                                                                   Yard No.=FIELD(Yard No.));
                                                   OnValidate=BEGIN
                                                                ValidateDeliveryDate;
                                                              END;

                                                   CaptionML=ENU=System;
                                                   Description=Engineering }
    { 50  ;   ;Entity No.          ;Code20        ;TableRelation="Assembly Yard Number Object"."Entity No." WHERE (Project No.=FIELD(Project No.),
                                                                                                                   Yard No.=FIELD(Yard No.),
                                                                                                                   Entity Type=FIELD(Entity Type),
                                                                                                                   System No.=FIELD(System No.));
                                                   OnValidate=BEGIN
                                                                ValidateDeliveryDate;
                                                              END;

                                                   CaptionML=ENU=Entity No.;
                                                   Description=Engineering }
    { 55  ;   ;Origin              ;Option        ;InitValue=Manual;
                                                   CaptionML=ENU=Origin;
                                                   OptionCaptionML=ENU=Manual,PEC,Budget,Advice Order,Import,Assembly Object Material Requirement;
                                                   OptionString=Manual,PEC,Budget,Advice Order,Import,Assembly Object Material Requirement;
                                                   Editable=No }
    { 60  ;   ;Cable Transit Pos.  ;Option        ;CaptionML=ENU=Cable Transit Postion;
                                                   OptionCaptionML=ENU=" ,From Side,To Side";
                                                   OptionString=,From,To;
                                                   Description=Engineering;
                                                   Editable=No }
    { 100 ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=VAR
                                                                Item@1210190000 : Record 27;
                                                              BEGIN
                                                                IF ("Item No." <> xRec."Item No.") AND ("Item No." <> '') THEN BEGIN
                                                                  ValidateItem(ItemTypeOpt::Item);
                                                                  ItemRec.TESTFIELD(Blocked,FALSE);
                                                                  //kzwerver, 110531, sn, #277944
                                                                  IF (Item.GET("Item No.")) THEN
                                                                    "Item Category Code" := Item."Item Category Code";
                                                                  //kzwerver, 110531, en, #277944
                                                                END;
                                                                IF "Item No." <> xRec."Item No." THEN
                                                                  "Variant Code" := '';
                                                                IF "Item No." = '' THEN
                                                                  "Item Category Code" := ''; //kzwerver, 110531, n, #277944
                                                              END;

                                                   CaptionML=ENU=Item No. }
    { 105 ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   OnValidate=BEGIN
                                                                IF "Variant Code" <> '' THEN
                                                                  TESTFIELD("Item No.");
                                                              END;

                                                   CaptionML=ENU=Variant Code }
    { 110 ;   ;Basic Item          ;Code20        ;TableRelation="Basic Item"."Product Code" WHERE (Manufacturer=FIELD(Manufacturer));
                                                   OnValidate=BEGIN
                                                                IF ("Basic Item" <> xRec."Basic Item") AND ("Basic Item" <> '') THEN BEGIN
                                                                  ValidateItem(ItemTypeOpt::"Basic Item");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Basic Item }
    { 120 ;   ;Trade Item          ;Code20        ;TableRelation="Trade Item"."Item Code" WHERE (Vendor=FIELD("Vendor (Trade Item)"));
                                                   OnValidate=BEGIN
                                                                IF ("Trade Item" <> xRec."Trade Item") AND ("Trade Item" <> '') THEN BEGIN
                                                                  ValidateItem(ItemTypeOpt::"Trade Item");
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Trade Item }
    { 130 ;   ;Vendor (Trade Item) ;Code15        ;TableRelation="ETIM Vendor (Central Mgt)";
                                                   OnValidate=VAR
                                                                TradeItemRec@1100525000 : Record 11012317;
                                                                lvExecValidate@1100485000 : Boolean;
                                                              BEGIN
                                                                IF ("Vendor (Trade Item)" <> xRec."Vendor (Trade Item)") AND ("Vendor (Trade Item)" <> '') THEN BEGIN
                                                                  IF "Basic Item" <> '' THEN BEGIN
                                                                    "Trade Item" := '';
                                                                    lvExecValidate := TRUE;
                                                                  END;
                                                                  IF "Trade Item" <> '' THEN BEGIN
                                                                    VALIDATE("Trade Item");
                                                                    lvExecValidate := TRUE;
                                                                  END;
                                                                  //db.sn, 17-12-10: M18021
                                                                  IF lvExecValidate THEN BEGIN
                                                                    IF TradeItemRec.CheckReplaceVendor(
                                                                      xRec."Vendor (Trade Item)", xRec."Trade Item",
                                                                      "Vendor (Trade Item)", "Trade Item") THEN
                                                                      ValidateItem(ItemTypeOpt::"Trade Item")
                                                                    ELSE
                                                                      ValidateItem(ItemTypeOpt::"Trade Vendor");
                                                                  END;
                                                                  //db.en, 17-12-10: M18021
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Vendor (Trade Item) }
    { 135 ;   ;Vendor Name (Trade Item);Text50    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ETIM Vendor (Central Mgt)".Name WHERE (Code=FIELD("Vendor (Trade Item)")));
                                                   CaptionML=ENU=Vendor Name (Trade Item);
                                                   Editable=No }
    { 140 ;   ;Manufacturer        ;Code15        ;TableRelation="ETIM Vendor (Central Mgt)";
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Manufacturer Name");
                                                              END;

                                                   CaptionML=ENU=Manufacturer }
    { 150 ;   ;Manufacturer Name   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ETIM Vendor (Central Mgt)".Name WHERE (Code=FIELD(Manufacturer)));
                                                   CaptionML=ENU=Manufacturer Name;
                                                   Editable=No }
    { 160 ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 170 ;   ;Description2        ;Text50        ;CaptionML=ENU=Description 2 }
    { 180 ;   ;Preferred Vendor    ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=ENU=Preferred Vendor }
    { 185 ;   ;Vendor Name         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Preferred Vendor)));
                                                   CaptionML=ENU=Vendor Name;
                                                   Editable=No }
    { 200 ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                UpdateQuantityToProcure;  //DP00803
                                                                UpdateAmounts(FIELDNO(Quantity));  //DP00803
                                                              END;

                                                   CaptionML=ENU=Quantity }
    { 210 ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure";
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO("Unit of Measure") THEN BEGIN
                                                                  IF "Unit of Measure" <>  xRec."Unit of Measure" THEN  //db, 10-02-05
                                                                    CheckItemUnitConversion(Rec, xRec);
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              HandleLookupUnit;
                                                            END;

                                                   CaptionML=ENU=Unit of Measure;
                                                   Editable=Yes }
    { 220 ;   ;Cost Object         ;Code20        ;TableRelation="Dimension Value".Code WHERE (Cost Type=FILTER(Material),
                                                                                               Global Dimension No.=CONST(2),
                                                                                               Project Filter=FIELD(Project No.));
                                                   OnValidate=BEGIN
                                                                IF ("Cost Object" <> '') AND ("Item No." + "Trade Item" + "Basic Item" = '') THEN
                                                                  IF xRec."Cost Object" = '' THEN
                                                                    GetDefaultsCostObject()
                                                                  ELSE
                                                                    IF "Cost Object" <> xRec."Cost Object" THEN
                                                                      IF CONFIRM(Text007 + Text008) THEN
                                                                        GetDefaultsCostObject();
                                                              END;

                                                   CaptionML=ENU=Cost Object }
    { 230 ;   ;Item Category Code  ;Code10        ;TableRelation="Item Category";
                                                   CaptionML=ENU=Item Category Code;
                                                   Description=#27790 }
    { 300 ;   ;Processed (AdviceOrder) OLD;Boolean;CaptionML=ENU=Processed (Advice Order Line) EXPIRED;
                                                   Description=C024706: expired;
                                                   Editable=No }
    { 301 ;   ;Processed (ReqLine) OLD;Boolean    ;CaptionML=ENU=Processed (Requisition Line) EXPIRED;
                                                   Description=C024706: expired }
    { 310 ;   ;Advice Order Line No.;Integer      ;CaptionML=ENU=Advice Order Line No.;
                                                   Editable=No }
    { 320 ;   ;Delivery Date       ;Date          ;OnValidate=BEGIN
                                                                DeliveryDateIsModified := TRUE;
                                                              END;

                                                   CaptionML=ENU=Delivery Date }
    { 330 ;   ;Unique Traceable    ;Boolean       ;CaptionML=ENU=Unique Traceable;
                                                   Editable=No }
    { 340 ;   ;Exclude Logistics   ;Boolean       ;CaptionML=ENU=Exclude Logistics }
    { 350 ;   ;External Text       ;Text250       ;OnValidate=BEGIN
                                                                "External Text Block" := "External Text" <> '';
                                                              END;

                                                   CaptionML=ENU=External Text;
                                                   Editable=No }
    { 351 ;   ;External Text Block ;Boolean       ;CaptionML=ENU=External Text Block;
                                                   Editable=No }
    { 360 ;   ;E-Plan Item         ;Code50        ;TableRelation="E-Plan Item".No.;
                                                   CaptionML=ENU=E-Plan Item;
                                                   Editable=No }
    { 370 ;   ;Created by          ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Created by;
                                                   Editable=No }
    { 371 ;   ;Created on          ;DateTime      ;CaptionML=ENU=Created on;
                                                   Editable=No }
    { 380 ;   ;Modified by         ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Modified by;
                                                   Editable=No }
    { 381 ;   ;Modified on         ;DateTime      ;CaptionML=ENU=Modified on;
                                                   Editable=No }
    { 390 ;   ;Processed by        ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Processed by;
                                                   Description=C024706;
                                                   Editable=No }
    { 391 ;   ;Processed on        ;DateTime      ;CaptionML=ENU=Processed on;
                                                   Description=C024706;
                                                   Editable=No }
    { 400 ;   ;Quantity to procure ;Decimal       ;CaptionML=ENU=Quantity to procure;
                                                   Description=inherit from UK }
    { 401 ;   ;Quantity procured   ;Decimal       ;CaptionML=ENU=Quantity procured;
                                                   Description=inherit from UK;
                                                   Editable=No }
    { 402 ;   ;Expected Price      ;Decimal       ;OnValidate=BEGIN
                                                                UpdateAmounts(FIELDNO("Expected Price"));  //DP00803
                                                              END;

                                                   CaptionML=ENU=Expected Price;
                                                   DecimalPlaces=2:5;
                                                   Description=inherit from UK }
    { 403 ;   ;Expected Amount     ;Decimal       ;OnValidate=BEGIN
                                                                UpdateAmounts(FIELDNO("Expected Amount"));  //DP00803
                                                              END;

                                                   CaptionML=ENU=Expected Amount;
                                                   Description=inherit from UK }
    { 410 ;   ;Quantity (delivered);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Job Ledger Entry".Quantity WHERE (Job No.=FIELD(Project No.),
                                                                                                      Element=FIELD(Element),
                                                                                                      Item No.=FIELD(Item No.),
                                                                                                      Yard No.=FIELD(Yard No.),
                                                                                                      Entity Type=FIELD(Entity Type),
                                                                                                      Entity No.=FIELD(Entity No.),
                                                                                                      System No.=FIELD(System No.)));
                                                   CaptionML=ENU=Quantity (delivered);
                                                   Description=C024706;
                                                   Editable=No }
    { 411 ;   ;Quantity (adviced)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Advice Order Line"."Quantity (Advice)" WHERE (Project No.=FIELD(Project No.),
                                                                                                                  Element=FIELD(Element),
                                                                                                                  Item No.=FIELD(Item No.),
                                                                                                                  Record Type=CONST(Project),
                                                                                                                  Transaction=CONST(Inventory),
                                                                                                                  Processed=CONST(No),
                                                                                                                  Yard No.=FIELD(Yard No.),
                                                                                                                  Entity Type=FIELD(Entity Type),
                                                                                                                  Entity No.=FIELD(Entity No.),
                                                                                                                  System No.=FIELD(System No.)));
                                                   CaptionML=ENU=Quantity (adviced);
                                                   Description=C024706;
                                                   Editable=No }
    { 412 ;   ;Quantity (to deliver);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Journal Line".Quantity WHERE (Job No.=FIELD(Project No.),
                                                                                                       Element=FIELD(Element),
                                                                                                       Item No.=FIELD(Item No.),
                                                                                                       Entry Type=CONST(Sale),
                                                                                                       Yard No.=FIELD(Yard No.),
                                                                                                       Entity Type=FIELD(Entity Type),
                                                                                                       Entity No.=FIELD(Entity No.),
                                                                                                       System No.=FIELD(System No.)));
                                                   CaptionML=ENU=Quantity (to deliver);
                                                   Description=C024706;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Project No.,Yard No.,Entity Type,System No.,Entity No.,Line No.;
                                                   Clustered=Yes }
    {    ;Project No.,Yard No.,Entity Type,System No.,Entity No.,Cable Transit Pos. }
    {    ;Project No.,Yard No.,Item No.,Basic Item,Trade Item,Vendor (Trade Item),Manufacturer,Cost Object }
    {    ;Project No.,Element,Cost Object          }
    {    ;Item No.,Variant Code,Delivery Date      }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ItemRec@1100525002 : Record 27;
      ItemTypeOpt@1100525001 : 'Item,Basic Item,Trade Item,Trade Vendor';
      ValidateCu@1100525000 : Codeunit 11012033;
      Text000@1210190000 : TextConst 'ENU=Input is aborted.';
      Text003@1100525005 : TextConst 'ENU=First select lines which are not processed.';
      Text005@1100525007 : TextConst 'ENU=There are lines already processed to an Advice Order, do you want to delete these lines anyway?';
      Text006@1100525008 : TextConst 'ENU=%1 Advice Order Lines are created.';
      Text007@1100526001 : TextConst 'ENU=Copy Data from new Cost Object?\\';
      Text008@1100526000 : TextConst 'ENU=Empty fields only will be updated. Existing data will not be overruled.';
      Text010@1100526100 : TextConst 'ENU=Requirement Date updated from Project / Element.';
      OnDeleteQuestionAsked@1100526101 : Boolean;
      OnDeleteQuestion@1100526102 : Boolean;
      Text011@1210190001 : TextConst 'ENU=Are you sure, you want to set the %1 flag to ''No''?';
      DeliveryDateIsModified@1210190002 : Boolean;
      Text012@1100525004 : TextConst 'ENU=@1@@@@@@@@@@@@@@@';
      Text999@1100525003 : TextConst 'ENU=Combination of Element and Item should occur once in Project.';

    PROCEDURE ValidateItem@31(LTypeArtOpt@11012000 : 'Item,Basic Item,Trade Item');
    VAR
      lvDummyDat@1100485005 : Date;
      lvDummyDec@1100525000 : Decimal;
      lvCostComp@1100485006 : Code[20];
      lvRefDate@1100485004 : Date;
      lvDiscRef1@1100485003 : Code[20];
      lvDiscRef2@1100485002 : Code[20];
      ProjRec@1100485001 : Record 11072003;
    BEGIN
      IF ProjRec.GET("Project No.") THEN BEGIN
        lvRefDate := ValidateCu.GetRefDateProject(ProjRec);
        lvDiscRef1 := ProjRec."Purch Discount Term Group 1";
        lvDiscRef2 := ProjRec."Purch Discount Term Group 2";
      END;

      ValidateCu.ValidateItem(LTypeArtOpt,"Trade Item","Item No.",Manufacturer,"Vendor (Trade Item)",
                              "Basic Item", "Cost Object",Description,"Unit of Measure","Expected Price",  //DP00803
                              lvDummyDec,lvDummyDat,lvDummyDec,Description2,lvCostComp,
                              lvDiscRef1,lvDiscRef2,lvRefDate,'');

      IF ItemRec.GET("Item No.") THEN;
      UpdateAmounts(FIELDNO("Expected Price"));  //DP00803
    END;

    PROCEDURE GetDefaultsCostObject@3();
    VAR
      DimValRec@1100526001 : Record 349;
      DimMgt@1100526000 : Codeunit 408;
    BEGIN
      DimMgt.GetDimValueRec(2, "Cost Object", DimValRec, TRUE,'');

      IF Description = '' THEN
        Description := DimValRec.Name;
      IF "Unit of Measure" = '' THEN
        "Unit of Measure" := DimValRec."Unit of Measure";
    END;

    PROCEDURE AddOrderLine@1100525004(VAR ioOrderLineRec@1100525016 : Record 11012526;iProj@1100525006 : Code[20];iBuildNo@1100525007 : Code[30];iType@1100525008 : Option;iSystemNo@1100525009 : Code[30];iCode@1100525010 : Code[30];iCableTransitPos@1100525012 : ',From,To';iItem@1100525005 : Code[20];iBasicItem@1100525004 : Code[20];iManu@1100525003 : Code[15];iTradeItem@1100525002 : Code[20];iVendorTI@1100525001 : Code[15];iQuantity@1100525000 : Decimal;iDescr@1100525014 : Text[50];iDescr2@1100525015 : Text[50];iUnitOfMeas@1100525017 : Code[10];iCostObject@1100526000 : Code[20];iDeliveryDate@1100525013 : Date;iElement@1100526100 : Code[20]);
    BEGIN
      //db, 26-06-15: OBSOLETE FUNCTION
      //-in Nav2009 called from functions for PEC-granule as CheckOrAddxxx (where xxx is Cable, Device or Extra Need)
      //-in Nav2013 this table only filled from report 11012389 (Create Project Material Req.) from table 11020663 (Assembly Object Mat. Req. Line)

      //iTableDesc, iSystemNo and iCode are not required in case of Anonymous orders

      //determine the next line no here, not in the insert trigger, because sometimes ioOrderLineRec is a temp table
      ioOrderLineRec.RESET;
      ioOrderLineRec.SETRANGE("Project No.", iProj);
      ioOrderLineRec.SETRANGE("Yard No.", iBuildNo);
      //**4PS.sn
      ioOrderLineRec.SETRANGE("Entity Type", iType);
      ioOrderLineRec.SETRANGE("System No.", iSystemNo);
      ioOrderLineRec.SETRANGE("Entity No.", iCode);
      //**4PS.en
      IF ioOrderLineRec.FINDLAST THEN BEGIN
        ioOrderLineRec."Line No." := ioOrderLineRec."Line No." + 10000;
      END ELSE BEGIN
        ioOrderLineRec."Line No." := 10000;
      END;
      ioOrderLineRec."Project No." := iProj;
      ioOrderLineRec."Yard No." := iBuildNo;
      ioOrderLineRec.Element := iElement;
      //db.sn, 30-09-15
      //ioOrderLineRec."Processed (AdviceOrder)" := FALSE;  //db.o, 09-10-15
      //ioOrderLineRec."Processed (ReqLine)" := FALSE;  //db.o, 09-10-15
      //db.en, 30-09-15
      ioOrderLineRec."Item No." := iItem;
      ioOrderLineRec."Basic Item" := iBasicItem;
      ioOrderLineRec."Trade Item" := iTradeItem;
      ioOrderLineRec."Vendor (Trade Item)" := iVendorTI;
      ioOrderLineRec.Manufacturer := iManu;
      ioOrderLineRec.Quantity := iQuantity;
      ioOrderLineRec.Description := iDescr;
      ioOrderLineRec.Description2   := iDescr2;
      ioOrderLineRec."Entity Type" := iType;
      ioOrderLineRec."System No." := iSystemNo;
      ioOrderLineRec."Entity No." := iCode;
      ioOrderLineRec."Cable Transit Pos." := iCableTransitPos;
      ioOrderLineRec."Unit of Measure" := iUnitOfMeas;
      ioOrderLineRec."Cost Object" := iCostObject;
      ioOrderLineRec."Delivery Date" := iDeliveryDate;
      ioOrderLineRec.FillCreatedByOn();
      ioOrderLineRec.INSERT(FALSE);
    END;

    PROCEDURE CreateAdviceOrderLine@1100525001(IDefaultLocationCode@1100525001 : Code[20]);
    VAR
      ProjSetup@1100525003 : Record 315;
      lvAdviceLineRec@1100525000 : Record 11012055;
      Project@1100526100 : Record 11072003;
      PurchaseLineDetail@1210190000 : Record 11020660;
      MaterialMonitorManagement@1100526101 : Codeunit 11072073;
      lvNextLineNo@1100525002 : Integer;
      UOMfactor@1100526102 : Decimal;
      ReqQuan@1100525004 : Decimal;
    BEGIN
      //Note: If this function is changed, you have to check the function in
      //      Codeunit Material Monitor Management::B_CreateExtraAdviceOrder
      lvAdviceLineRec.SETRANGE("Record Type", lvAdviceLineRec."Record Type"::Project);
      lvAdviceLineRec.SETRANGE("Project No.", "Project No.");
      IF lvAdviceLineRec.FINDLAST THEN
        lvNextLineNo := lvAdviceLineRec."Line No." + 10000
      ELSE
        lvNextLineNo := 10000;

      Project.GET("Project No.");

      lvAdviceLineRec.INIT;
      lvAdviceLineRec."Record Type" := lvAdviceLineRec."Record Type"::Project;
      lvAdviceLineRec."Project No." := "Project No.";
      lvAdviceLineRec."Line No." := lvNextLineNo;
      lvAdviceLineRec.InitRecord;
      lvAdviceLineRec.VALIDATE(Element, Element);
      lvAdviceLineRec.VALIDATE("E-Plan Item","E-Plan Item");
      lvAdviceLineRec.VALIDATE("Item No.", "Item No.");
      lvAdviceLineRec.VALIDATE("Vendor (Trade Item)", "Vendor (Trade Item)");
      lvAdviceLineRec.VALIDATE("Trade Item", "Trade Item");
      lvAdviceLineRec.VALIDATE(Manufacturer, Manufacturer);
      lvAdviceLineRec.VALIDATE("Basic Item", "Basic Item");
      lvAdviceLineRec.VALIDATE("Cost Object", "Cost Object");
      lvAdviceLineRec.VALIDATE("Variant Code", "Variant Code");
      lvAdviceLineRec.VALIDATE("Item Category Code", "Item Category Code");

      lvAdviceLineRec.Description := Description;
      lvAdviceLineRec."Description 2" := Description2;
      lvAdviceLineRec."Unit of Measure" := MaterialMonitorManagement.GetUOM("Item No.", "Basic Item", Manufacturer,
        "Trade Item", "Vendor (Trade Item)", "Unit of Measure");
      IF lvAdviceLineRec."Order Date" = 0D THEN //if order date still empty fill with work date
        lvAdviceLineRec.VALIDATE("Order Date", WORKDATE);
      IF "Delivery Date" <> 0D THEN
        lvAdviceLineRec.VALIDATE("Receipt Date", "Delivery Date");
      lvAdviceLineRec.VALIDATE("Requested Receipt Date", "Delivery Date");  //C004880
      lvAdviceLineRec.VALIDATE(Deliver, Project.Deliver); //kzwerver, 110311, c, #26060
      UOMfactor := MaterialMonitorManagement.GetFactorUOM("Item No.", "Basic Item", Manufacturer,
        "Trade Item", "Vendor (Trade Item)", "Unit of Measure");
      //DP00803.sn
      ReqQuan := "Quantity to procure" * UOMfactor;
      //lvAdviceLineRec."Quantity (Advice)" := Quantity * UOMfactor; //kzwerver, 110427, c, #27053
      //lvAdviceLineRec.VALIDATE("Quantity (Budget)", Quantity * UOMfactor); //kzwerver, 110311, c, #26060
      //lvAdviceLineRec.VALIDATE("Quantity (Advice)", Quantity * UOMfactor); //kzwerver, 110427, c, #27053
      lvAdviceLineRec."Quantity (Advice)" := ReqQuan;
      lvAdviceLineRec.VALIDATE("Quantity (Budget)", ReqQuan);
      lvAdviceLineRec.VALIDATE("Quantity (Advice)", ReqQuan);
      IF (lvAdviceLineRec."Item No." = '') AND (lvAdviceLineRec."Basic Item" = '') AND (lvAdviceLineRec."Trade Item" = '') THEN BEGIN
        lvAdviceLineRec.VALIDATE(Price, "Expected Price");
        //lvAdviceLineRec."Source of Price" := lvAdviceLineRec."Source of Price"::"MRL Price";
      END;
      IF ("Preferred Vendor" <> '') AND (lvAdviceLineRec."Vendor (Trade Item)" = '') THEN
        lvAdviceLineRec.VALIDATE(lvAdviceLineRec.Vendor, "Preferred Vendor");
      "Quantity procured" += "Quantity to procure";
      UpdateQuantityToProcure;
      //DP00803.en
      IF ("Unique Traceable") THEN BEGIN
        lvAdviceLineRec."Yard No." := "Yard No.";
        lvAdviceLineRec."Entity Type" := "Entity Type";
        lvAdviceLineRec."System No." := "System No.";
        lvAdviceLineRec."Entity No." := "Entity No.";
        lvAdviceLineRec."Cable Transit Pos." := "Cable Transit Pos.";
      END;
      lvAdviceLineRec."Main Project No." := Project."Main Project";
      lvAdviceLineRec."External Text" := "External Text"; //kzwerver, 110316, n, #19743
      lvAdviceLineRec."External Text Block" := "External Text Block"; //kzwerver, 110316, n, #19743
      lvAdviceLineRec."Created by" := USERID;
      lvAdviceLineRec."Date Created" := TODAY;
      lvAdviceLineRec."Modified by" := lvAdviceLineRec."Created by";
      lvAdviceLineRec."Last Date Modified" := lvAdviceLineRec."Date Created";

      //db.sn, 14-09-15: C025630
      ProjSetup.GET;
      IF ProjSetup."Apply ProjMat for ReqLine" THEN
        IF "Item No." <> '' THEN
          lvAdviceLineRec.Transaction := lvAdviceLineRec.Transaction::Inventory;  //preference location set on page 11126576
      //db.en, 14-09-15: C025630

      IF (IDefaultLocationCode <> '') AND (lvAdviceLineRec.Transaction = lvAdviceLineRec.Transaction::Inventory) THEN
        lvAdviceLineRec."Location Code" := IDefaultLocationCode;

      lvAdviceLineRec.INSERT(FALSE);

      PurchaseLineDetail.CopyLine(PurchaseLineDetail."Line Type"::"Material Requirement",
        PurchaseLineDetail."Record Type"::Project, "Project No.", "Yard No.",
        "System No.", "Entity Type", "Entity No.", '', '', "Line No.",
        PurchaseLineDetail."Line Type"::"Advice Order", '', lvNextLineNo,
        NOT "Unique Traceable");

      //"Processed (AdviceOrder)" := ("Quantity to procure" = 0);  //db.o, 09-10-15
      "Advice Order Line No." := lvNextLineNo;
      MODIFY;

      CopyDocLinksToAdviceOrderLine(lvAdviceLineRec);//kkleermaker.n, 110822, M28687
    END;

    PROCEDURE CreateAdviceOrderLines@1100525002(ConsiderMarkedOnly@1100528400 : Boolean;IDefaultLocationCode@1100525001 : Code[20]);
    VAR
      ProjectMaterialReqLine@1100525000 : Record 11012526;
    BEGIN
      ProjectMaterialReqLine.COPY(Rec);

      IF ConsiderMarkedOnly THEN BEGIN
        ProjectMaterialReqLine.MARKEDONLY(TRUE);
        IF ProjectMaterialReqLine.ISEMPTY THEN
          ERROR(Text003);
      END;

      ProjectMaterialReqLine.CreateAdvOrderLinesWithFilter('', IDefaultLocationCode);
    END;

    PROCEDURE CreateAdvOrderLinesWithFilter@1100528400(ItemCategoryFilter@1100528401 : Code[250];IDefaultLocationCode@1100525000 : Code[20]);
    VAR
      NoOfAdviceOrderLines@1100528402 : Integer;
      ProjectMaterialReqLine@1100528403 : Record 11012526;
      RecCount@1100525001 : Integer;
      Counter@1100525002 : Integer;
      Window@1100525003 : Dialog;
    BEGIN
      ProjectMaterialReqLine.COPY(Rec);
      //db.sn, 14-09-15: C025630
      //-Processed=TRUE for Navision-Item if involved by Inventory Profile
      //ProjectMaterialReqLine.SETRANGE(Processed, FALSE);
      //ProjectMaterialReqLine.SETRANGE("Advice Order Line No.", 0);
      ProjectMaterialReqLine.SETFILTER("Quantity to procure", '<>%1', 0);  //db, 02-10-15
      //db.en, 14-09-15: C025630
      ProjectMaterialReqLine.SETRANGE("Exclude Logistics", FALSE);
      IF ProjectMaterialReqLine.FINDSET(TRUE, FALSE) THEN BEGIN
        RecCount := ProjectMaterialReqLine.COUNT;
        Window.OPEN(Text012);
        REPEAT
          Counter += 1;
          Window.UPDATE(1, ROUND((Counter/RecCount)*10000, 1));
          IF ItemWithinItemCategoryFilter(
            ProjectMaterialReqLine."Item No.",
            ItemCategoryFilter)
          THEN BEGIN
            ProjectMaterialReqLine.CreateAdviceOrderLine(IDefaultLocationCode);
            NoOfAdviceOrderLines := NoOfAdviceOrderLines + 1;
          END;
        UNTIL ProjectMaterialReqLine.NEXT = 0;
        Window.CLOSE;
      END;

      MESSAGE(Text006, NoOfAdviceOrderLines);
    END;

    LOCAL PROCEDURE ItemWithinItemCategoryFilter@1100528403(ItemNo@1100528400 : Code[20];ItemCategoryFilter@1100528401 : Code[250]) : Boolean;
    VAR
      Item@1100528402 : Record 27;
    BEGIN
      IF ItemCategoryFilter = '' THEN
        EXIT(TRUE);

      IF (ItemNo = '') THEN //kzwerver, 110406, n, Requirement can be based on Cost Object only
        EXIT(FALSE);

      Item.SETRANGE("No.", ItemNo);
      Item.SETFILTER("Item Category Code", ItemCategoryFilter);
      IF Item.ISEMPTY THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE UpdateReqDateFromProject@1100526100(ProjectNo@1100526101 : Code[20]);
    VAR
      ProjectMaterialReqLine@1100526100 : Record 11012526;
    BEGIN
      WITH ProjectMaterialReqLine DO BEGIN
        SETRANGE("Project No.", ProjectNo);
        IF FINDSET(TRUE) THEN BEGIN
          REPEAT
            "Delivery Date" := GetLatestStartingDate("Project No.", Element, "Delivery Date");
            MODIFY;
          UNTIL (NEXT=0);
          MESSAGE(Text010);
        END;
      END;
    END;

    LOCAL PROCEDURE GetLatestStartingDate@1100526101(ProjectNo@1100526100 : Code[20];ElementNo@1100526101 : Code[20];DeliveryDate@1100526102 : Date) : Date;
    VAR
      Project@1100526104 : Record 11072003;
      ProjectElement@1100526105 : Record 11012010;
      NewDeliveryDate@1100526103 : Date;
    BEGIN
      NewDeliveryDate := 0D;
      IF (ElementNo <> '') THEN BEGIN
        ProjectElement.GET(ProjectNo, ElementNo);
        NewDeliveryDate := ProjectElement."Starting Date";
      END;
      IF (NewDeliveryDate = 0D) THEN BEGIN
        Project.GET(ProjectNo);
        NewDeliveryDate := Project."Starting Date";
      END;
      IF (NewDeliveryDate = 0D) THEN
        NewDeliveryDate := DeliveryDate;

      EXIT(NewDeliveryDate);
    END;

    PROCEDURE AdviceOrderPresentForThisLine@1100526102(ProjectMaterialReqLine@1100526102 : Record 11012526) : Boolean;
    VAR
      AdviceOrderLine@1100526100 : Record 11012055;
    BEGIN
      AdviceOrderLine.SETRANGE("Record Type", AdviceOrderLine."Record Type"::Project);
      AdviceOrderLine.SETRANGE("Project No.", ProjectMaterialReqLine."Project No.");
      AdviceOrderLine.SETRANGE("Yard No.", ProjectMaterialReqLine."Yard No.");
      AdviceOrderLine.SETRANGE("System No.", ProjectMaterialReqLine."System No.");
      AdviceOrderLine.SETRANGE("Entity Type", ProjectMaterialReqLine."Entity Type");
      AdviceOrderLine.SETRANGE("Entity No.", ProjectMaterialReqLine."Entity No.");
      AdviceOrderLine.SETRANGE("Item No.", ProjectMaterialReqLine."Item No.");
      AdviceOrderLine.SETRANGE("Basic Item", ProjectMaterialReqLine."Basic Item");
      AdviceOrderLine.SETRANGE(Manufacturer, ProjectMaterialReqLine.Manufacturer);
      AdviceOrderLine.SETRANGE("Trade Item", ProjectMaterialReqLine."Trade Item");
      AdviceOrderLine.SETRANGE("Vendor (Trade Item)", ProjectMaterialReqLine."Vendor (Trade Item)");
      AdviceOrderLine.SETRANGE("Quantity (Budget)", ProjectMaterialReqLine.Quantity);
      AdviceOrderLine.SETRANGE("Unit of Measure", ProjectMaterialReqLine."Unit of Measure");
      IF (AdviceOrderLine.FINDSET) THEN
        EXIT(TRUE);
      EXIT(FALSE);
    END;

    PROCEDURE ResetProcessedMatReqLines@1210190000();
    VAR
      ProjectMaterialReqLine@1100525000 : Record 11012526;
    BEGIN
      //IF (NOT CONFIRM(Text011, FALSE, FIELDCAPTION("Processed (AdviceOrder)"))) THEN EXIT;  //db, 09-10-15: skip message

      ProjectMaterialReqLine.COPY(Rec);
      //ProjectMaterialReqLine.SETRANGE("Processed (AdviceOrder)", TRUE);  //db.o, 09-10-15
      ProjectMaterialReqLine.SETFILTER("Advice Order Line No.", '<>%1', 0);  //db.n, 09-10-15
      IF ProjectMaterialReqLine.FINDSET(TRUE, FALSE) THEN BEGIN
        REPEAT
          //ProjectMaterialReqLine."Processed (AdviceOrder)" := FALSE;  //db.o, 09-10-15
          ProjectMaterialReqLine."Advice Order Line No." := 0;
          ProjectMaterialReqLine.MODIFY;
        UNTIL ProjectMaterialReqLine.NEXT = 0;
      END;
    END;

    PROCEDURE ChangeDeliveryDates@1210190001();
    VAR
      ProjectMaterialReqLine@1210190000 : Record 11012526;
      Cancelled@1210190001 : Boolean;
      DeliveryDate@1210190002 : Date;
      ModifyDeliveryDate@1210190003 : Report 11012375;
    BEGIN
      ModifyDeliveryDate.SetDeliveryDate(TODAY);
      ModifyDeliveryDate.RUNMODAL;
      ModifyDeliveryDate.GetModifyDeliveryDateData(DeliveryDate, Cancelled);
      IF Cancelled THEN ERROR(Text000);

      ProjectMaterialReqLine.COPY(Rec);
      IF ProjectMaterialReqLine.FINDSET(TRUE, FALSE) THEN BEGIN
        REPEAT
          ProjectMaterialReqLine."Delivery Date" := DeliveryDate;
          ProjectMaterialReqLine.MODIFY;
        UNTIL ProjectMaterialReqLine.NEXT = 0;
      END;
    END;

    PROCEDURE CheckItemUnitConversion@1210190002(VAR MainNewRec@1210190006 : Record 11012526;MainOldRec@1210190007 : Record 11012526);
    VAR
      ItemRec@1210190004 : Record 27;
      UnitFactor@1210190005 : Decimal;
      UnitFactorOld@1210190003 : Decimal;
      UnitFactorNew@1210190002 : Decimal;
      UnitControl@1210190001 : Codeunit 5402;
    BEGIN
      WITH MainNewRec DO BEGIN
        UnitFactorOld := 1;
        UnitFactorNew := 1;
        IF "Trade Item" <> '' THEN BEGIN
          ValidateCu.ValidateUnit(ItemTypeOpt::"Trade Item",
            "Item No.","Basic Item","Trade Item",Manufacturer,"Vendor (Trade Item)",
            Quantity,"Unit of Measure",UnitFactorNew);
        END ELSE BEGIN
          IF "Basic Item" <> '' THEN BEGIN
            ValidateCu.ValidateUnit(ItemTypeOpt::"Basic Item",
              "Item No.","Basic Item","Trade Item",Manufacturer,"Vendor (Trade Item)",
              Quantity,"Unit of Measure",UnitFactorNew);
          END ELSE BEGIN
            IF "Item No." <> '' THEN BEGIN
              ItemRec.GET("Item No.");
              UnitFactorOld := UnitControl.GetQtyPerUnitOfMeasure(ItemRec, MainOldRec."Unit of Measure");
              UnitFactorNew := UnitControl.GetQtyPerUnitOfMeasure(ItemRec, "Unit of Measure");
              UnitFactor := UnitFactorOld;
              ValidateCu.ValidateUnit(ItemTypeOpt::Item,
                "Item No.","Basic Item","Trade Item",Manufacturer,"Vendor (Trade Item)",
                Quantity,"Unit of Measure",UnitFactor);
            END;
          END;
        END;
      END;
    END;

    PROCEDURE HandleLookupUnit@1210190008();
    VAR
      ItemUnitRec@1210190000 : Record 5404;
      lvUnit@1210190001 : Code[10];
    BEGIN
      lvUnit := ItemUnitRec.HandleLookupUnit("Item No.", "Basic Item", "Trade Item", Manufacturer, "Vendor (Trade Item)");
      IF (lvUnit <> '') AND (lvUnit <> "Unit of Measure") THEN BEGIN
        xRec."Unit of Measure" := "Unit of Measure";  //db, 01-07-04: standard bug
        VALIDATE("Unit of Measure", lvUnit);
      END;
    END;

    LOCAL PROCEDURE ValidateDeliveryDate@1210190004();
    VAR
      AssemblyYardNumberObject@1210190000 : Record 11020596;
    BEGIN
      IF (AssemblyYardNumberObject.GET("Project No.","Yard No.","Entity Type","System No.","Entity No.")) THEN
        IF AssemblyYardNumberObject."Delivery Date Material" <> 0D THEN //kkleermaker.n, 130903, C006035
          "Delivery Date" := AssemblyYardNumberObject."Delivery Date Material";
    END;

    PROCEDURE ShowOrEditText@1210190003(Type@1210190000 : 'External,Assembly';Editable@1210190001 : Boolean);
    VAR
      TextFrm@11012001 : Page 11012120;
    BEGIN
      //kzwerver, 110727, c, #28134
      IF Type = Type::External THEN
        TextFrm.SetSelection(DATABASE::"Project Material Req. Line",
          "Project No.", "Yard No.", "System No.", "Entity No.", '', 'EXTERNAL', "Entity Type", "Line No.")
      ELSE
        TextFrm.SetSelection(DATABASE::"Project Material Req. Line",
          "Project No.", "Yard No.", "System No.", "Entity No.", '', 'ASSEMBLY', "Entity Type", "Line No.");

      IF (NOT Editable) THEN BEGIN
        TextFrm.EDITABLE(FALSE);
        TextFrm.RUNMODAL;
      END ELSE BEGIN
        IF (TextFrm.RUNMODAL = ACTION::OK) THEN;
      END;
    END;

    PROCEDURE ShowDocuments@1210190005();
    VAR
      RecRef@1210190000 : RecordRef;
      DocumentFilters@1210190001 : Codeunit 11012432;
    BEGIN
      //kkleermaker, 110822, M28687
      RecRef.GETTABLE(Rec);
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, '', FALSE, TRUE);
    END;

    PROCEDURE HasDocumentLinks@1210190007() : Boolean;
    VAR
      DocumentLink@1100528400 : Record 11012747;
      DocumentLinkMgt@1100525000 : Codeunit 11012401;
      RecRef@1100525001 : RecordRef;
    BEGIN
      //kkleermaker, 110822, M28687
      IF NOT DocumentLink.READPERMISSION THEN
        EXIT(FALSE);

      RecRef.GETTABLE(Rec);
      EXIT(DocumentLinkMgt.EntityHasDocumentLinks(RecRef));
    END;

    PROCEDURE CopyDocLinksToAdviceOrderLine@1210190006(AdviceOrderLine@1210190000 : Record 11012055);
    VAR
      ProjectMaterialReqLineRecRef@1210190001 : RecordRef;
      AdviceOrderLineRecRef@1210190002 : RecordRef;
      DocumentLinkMgt@1210190003 : Codeunit 11012401;
    BEGIN
      //kkleermaker, 110822, M28687
      ProjectMaterialReqLineRecRef.GETTABLE(Rec);
      AdviceOrderLineRecRef.GETTABLE(AdviceOrderLine);
      DocumentLinkMgt.CopyDocLinks(ProjectMaterialReqLineRecRef, AdviceOrderLineRecRef);
    END;

    LOCAL PROCEDURE DeleteDocumentLinks@1100528401();
    VAR
      DocumentLink@1100528402 : Record 11012747;
      DocumentLinkMgt@1100528400 : Codeunit 11012401;
      RecRef@1100528401 : RecordRef;
    BEGIN
      IF NOT DocumentLink.READPERMISSION THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DocumentLinkMgt.DeleteDocumentLinksFromObject(RecRef);
    END;

    LOCAL PROCEDURE RenamePurchaseLineDetail@1100528404();
    VAR
      PurchaseLineDetail@1100528400 : Record 11020660;
    BEGIN
      //kkleermaker, 130903, C006035
      IF PurchaseLineDetail.GET(
        PurchaseLineDetail."Line Type"::"Material Requirement",
        PurchaseLineDetail."Record Type"::Project,
        xRec."Project No.",
        xRec."Yard No.",
        xRec."System No.",
        xRec."Entity Type",
        xRec."Entity No.",
        '',
        '',
        xRec."Line No.")
      THEN
        PurchaseLineDetail.RENAME(
          PurchaseLineDetail."Line Type"::"Material Requirement",
          PurchaseLineDetail."Record Type"::Project,
          "Project No.",
          "Yard No.",
          "System No.",
          "Entity Type",
          "Entity No.",
          '',
          '',
          "Line No.");
    END;

    PROCEDURE GetNextLineNo@1100528402() LineNo : Integer;
    VAR
      ProjectMaterialReqLine@1100528400 : Record 11012526;
    BEGIN
      //kkleermaker, 130903, C006035
      ProjectMaterialReqLine.SETRANGE("Project No.", "Project No.");
      ProjectMaterialReqLine.SETRANGE("Yard No.", "Yard No.");
      ProjectMaterialReqLine.SETRANGE("Entity Type", "Entity Type");
      ProjectMaterialReqLine.SETRANGE("System No.", "System No.");
      ProjectMaterialReqLine.SETRANGE("Entity No.", "Entity No.");
      IF ProjectMaterialReqLine.FINDLAST THEN
        LineNo := ProjectMaterialReqLine."Line No." + 10000
      ELSE
        LineNo := 10000;
    END;

    LOCAL PROCEDURE CheckEntityNo@1100528405();
    VAR
      JobsSetup@1100528400 : Record 315;
    BEGIN
      IF "Entity Type" = "Entity Type"::None THEN
        EXIT;

      IF JobsSetup.GET AND
         JobsSetup."Entity No. Mandatory"
      THEN
        TESTFIELD("Entity No.");
    END;

    PROCEDURE FillCreatedByOn@1100528001();
    BEGIN
      "Created by" := USERID;
      "Created on" := CURRENTDATETIME;
      FillModifiedByOn();
    END;

    PROCEDURE FillModifiedByOn@1100528002();
    BEGIN
      "Modified by" := USERID;
      "Modified on" := CURRENTDATETIME;
    END;

    PROCEDURE FilterLinesWithItemToPlan@69(VAR Item@1000 : Record 27);
    BEGIN
      //db, 21-08-15: C024706
      RESET;
      SETCURRENTKEY("Item No.");
      SETRANGE("Item No.",Item."No.");
      //SETRANGE("Processed (ReqLine)", FALSE);  //db, 09-10-15: check on remaining quantity done in codeunit 99000854 (Inventory Profile)
      SETFILTER("Delivery Date",Item.GETFILTER("Date Filter"));
      SETFILTER(Quantity,'<>0');
    END;

    PROCEDURE FindLinesWithItemToPlan@1100529015(VAR Item@1000 : Record 27) : Boolean;
    BEGIN
      //db, 21-08-15: C024706
      FilterLinesWithItemToPlan(Item);
      EXIT(FINDFIRST);
    END;

    PROCEDURE LinesWithItemToPlanExist@67(VAR Item@1000 : Record 27) : Boolean;
    BEGIN
      //db, 21-08-15: C024706
      FilterLinesWithItemToPlan(Item);
      EXIT(NOT ISEMPTY);
    END;

    PROCEDURE UpdateAmounts@10528005(CalledByFieldNo@10528000 : Integer);
    VAR
      GLSetup@10528001 : Record 98;
    BEGIN
      //DP00803
      GLSetup.GET;

      CASE CalledByFieldNo OF
        FIELDNO(Quantity), FIELDNO("Expected Price"):
          BEGIN
            "Expected Amount" := ROUND(Quantity * "Expected Price", GLSetup."Amount Rounding Precision");
          END;
        FIELDNO("Expected Amount"):
          BEGIN
            IF Quantity <> 0 THEN
              "Expected Price" := ROUND("Expected Amount" / Quantity, GLSetup."Unit-Amount Rounding Precision")
            ELSE
              "Expected Price" := 0;
          END;
      END;
    END;

    PROCEDURE UpdateQuantityToProcure@10528003();
    BEGIN
      //DP00803
      "Quantity to procure" := Quantity - "Quantity procured";
      IF "Quantity to procure" < 0 THEN
        "Quantity to procure" := 0;
    END;

    PROCEDURE GetPreferredLocation@1100525000(ProjectNo@1100525001 : Code[20]) LocationCode : Code[10];
    VAR
      CompInfo@1100525000 : Record 79;
      PrefLocation@1100525002 : Record 11020353;
    BEGIN
      //db, 14-09-15: C025630
      PrefLocation.SETCURRENTKEY(Priority);
      PrefLocation.SETRANGE(Type, PrefLocation.Type::Job);
      PrefLocation.SETRANGE("No.", ProjectNo);
      IF PrefLocation.FINDFIRST THEN BEGIN
        LocationCode := PrefLocation."Location Code";
      END ELSE BEGIN
        CompInfo.GET;
        LocationCode := CompInfo."Location Code";
      END;
      EXIT(LocationCode);
    END;

    PROCEDURE GetRemainingQuantity@1100525003() Result : Decimal;
    VAR
      ProjRec@1100525000 : Record 11072003;
    BEGIN
      //db, 09-10-15
      IF ProjRec.GET("Project No.") THEN
        IF ProjRec."Project Status" >= ProjRec."Project Status"::"Technical Finished" THEN
          EXIT(0);  //db, 30-10-15

      CALCFIELDS("Quantity (delivered)");
      Result := Quantity - "Quantity (delivered)";
      IF Result < 0 THEN Result := 0;  //db, 30-10-15
      EXIT(Result);
    END;

    LOCAL PROCEDURE CheckProjectElementItem@1100525005();
    VAR
      ProjMatReqLine@1100525000 : Record 11012526;
      ProjSetup@1100525001 : Record 315;
    BEGIN
      EXIT;  //db, 23-11-15 (expired, due to use of Engineering keyfields)

      ProjSetup.GET;
      IF NOT ProjSetup."Apply ProjMat for ReqLine" THEN EXIT;

      IF "Item No." <> '' THEN BEGIN
        TESTFIELD(Element);
        ProjMatReqLine.SETRANGE("Project No.", "Project No.");
        ProjMatReqLine.SETRANGE(Element, Element);
        ProjMatReqLine.SETRANGE("Item No.", "Item No.");
        ProjMatReqLine.SETFILTER("Line No.", '<>%1', "Line No.");
        IF ProjMatReqLine.FINDFIRST THEN
          ERROR(Text999);
      END;
    END;

    BEGIN
    {
      4PS01 MMA 20100429 Optionvalue Entity Type/Anonymous renamed into UniqueTraceable
      db, 02-11-15: DeliveryDate added to index Item+Variant
    }
    END.
  }
}

