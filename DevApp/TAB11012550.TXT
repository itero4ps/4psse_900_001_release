OBJECT Table 11012550 Plant Setup
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Plant Setup;
  }
  FIELDS
  {
    { 10  ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 20  ;   ;Plant Type Nos.     ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Plant Type Nos. }
    { 30  ;   ;Rental Correction Nos.;Code10      ;TableRelation="No. Series";
                                                   CaptionML=ENU=Rental Correction Nos. }
    { 40  ;   ;Plant Order Nos.    ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Plant Order Nos. }
    { 50  ;   ;Ship To Location    ;Code20        ;TableRelation="Plant Location";
                                                   CaptionML=ENU=Ship To Location }
    { 60  ;   ;Rental Depot        ;Code20        ;TableRelation="Plant Location" WHERE (Depot=CONST(Yes));
                                                   CaptionML=ENU=Rental Depot }
    { 70  ;   ;Return Depot        ;Code20        ;TableRelation="Plant Location" WHERE (Depot=CONST(Yes));
                                                   CaptionML=ENU=Return Depot }
    { 71  ;   ;Deviating Return Depot base on;Option;
                                                   CaptionML=ENU=Deviating Return Depot base on;
                                                   OptionCaptionML=ENU=One Depot,Multiple Depots;
                                                   OptionString=One Depot,Multiple Depots }
    { 80  ;   ;Stockout Warning    ;Boolean       ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF (NOT "Stockout Warning") AND "Future Deficit Warning" THEN
                                                                  "Future Deficit Warning" := FALSE;
                                                              END;

                                                   CaptionML=ENU=Stockout Warning;
                                                   Description=Plant }
    { 85  ;   ;Item Stockout Warning;Boolean      ;InitValue=Yes;
                                                   CaptionML=ENU=Item Stockout Warning }
    { 100 ;   ;Exit-Order Nos.     ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Exit Order Nos. }
    { 101 ;   ;Returned Loss Order Nos.;Code10    ;TableRelation="No. Series";
                                                   CaptionML=ENU=Returned Loss Order Nos. }
    { 105 ;   ;Plant Stocktaking Nos.;Code10      ;TableRelation="No. Series";
                                                   CaptionML=ENU=Plant Stocktaking Nos. }
    { 130 ;   ;From Loc. per Plant Order Line;Boolean;
                                                   OnValidate=BEGIN
                                                                IF NOT "From Loc. per Plant Order Line" THEN
                                                                  "Suggestion Loc. Unique Plant" := FALSE;
                                                              END;

                                                   CaptionML=ENU=From Loc. per Plant Order Line }
    { 135 ;   ;Suggestion Loc. Unique Plant;Boolean;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("From Loc. per Plant Order Line",TRUE);
                                                              END;

                                                   CaptionML=ENU=Suggestion Loc. Unique Plant }
    { 140 ;   ;Sales Default % of Purch.Price;Decimal;
                                                   CaptionML=ENU=Sales - Default % of Purchase Price;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 141 ;   ;Miss. Default % of Purch.Price;Decimal;
                                                   CaptionML=ENU=Missing - Default % of Purchase Price;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 142 ;   ;Scrap Default % of Purch.Price;Decimal;
                                                   CaptionML=ENU=Scrap - Default % of Purchase Price;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 145 ;   ;Exit-order Special Check FA;Boolean;OnValidate=BEGIN
                                                                TESTFIELD("Exit-order Special Check FA", FALSE);  //C002176 Field obsoleted
                                                              END;

                                                   CaptionML=ENU=Special check FA on posting OLD }
    { 150 ;   ;Negative Bulk Stock Location;Boolean;
                                                   OnValidate=BEGIN
                                                                //24451.o
                                                                //IF ("Negative Bulk Stock") THEN BEGIN
                                                                //  TESTFIELD("Rate Codes", FALSE);  //* See comment on field "Rate Codes"
                                                                //  "Negative Bulk Stock Depot" := TRUE;
                                                                //END ELSE BEGIN
                                                                //  IF xRec."Negative Bulk Stock" THEN
                                                                //    "Negative Bulk Stock Depot" := FALSE;
                                                                //END;

                                                                //26721.so  Rate Codes and negative stock now allowed (25-05-2011)
                                                                //24451.n
                                                                //IF ("Negative Bulk Stock Location") THEN
                                                                //  TESTFIELD("Rate Codes", FALSE);  //* See comment on field "Rate Codes"
                                                                //26721.eo
                                                                IF NOT "Negative Bulk Stock Location" THEN
                                                                  "Ignore Neg. Stock on Close Loc" := FALSE;
                                                              END;

                                                   CaptionML=ENU=Negative Bulk Stock Location }
    { 151 ;   ;Negative Bulk Stock Depot;Boolean  ;OnValidate=BEGIN
                                                                //24451.o
                                                                //IF ("Negative Bulk Stock") THEN
                                                                //  TESTFIELD("Negative Bulk Stock Depot", TRUE);
                                                              END;

                                                   CaptionML=ENU=Negative Bulk Stock Depot }
    { 155 ;   ;Ignore Neg. Stock on Close Loc;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Ignore Neg. Stock on Close Loc" THEN
                                                                  TESTFIELD("Negative Bulk Stock Location", TRUE);
                                                              END;

                                                   CaptionML=ENU=Ignore Neg. Stock on Close Loc. }
    { 160 ;   ;Default Prod.Posting Gr. Plant;Code10;
                                                   TableRelation="Gen. Product Posting Group";
                                                   OnValidate=BEGIN
                                                                IF xRec."Default Prod.Posting Gr. Plant" <> "Default Prod.Posting Gr. Plant" THEN
                                                                  IF GenProdPostingGroup.ValidateVatProdPostingGroup(GenProdPostingGroup,"Default Prod.Posting Gr. Plant") THEN
                                                                    VALIDATE("Default VAT-Prod.Post.Gr.Plant",GenProdPostingGroup."Def. VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=ENU=Default Prod.Posting Gr. Plant }
    { 170 ;   ;Default VAT-Prod.Post.Gr.Plant;Code10;
                                                   TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=Default VAT-Prod.Post.Gr.Plant }
    { 180 ;   ;Default Posting Group Plant In;Code10;
                                                   TableRelation="Plant Posting Group";
                                                   CaptionML=ENU=Default Posting Group Plant Internal }
    { 190 ;   ;Default Posting Group Plant Ex;Code10;
                                                   TableRelation="Plant Posting Group";
                                                   CaptionML=ENU=Default Posting Group Plant External }
    { 200 ;   ;Product Posting Group Hours;Code10 ;TableRelation="Gen. Product Posting Group";
                                                   OnValidate=BEGIN
                                                                IF xRec."Product Posting Group Hours" <> "Product Posting Group Hours" THEN
                                                                  IF GenProdPostingGroup.ValidateVatProdPostingGroup(GenProdPostingGroup,"Product Posting Group Hours") THEN
                                                                    VALIDATE("VAT-Product P.Group Hours",GenProdPostingGroup."Def. VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=ENU=Product Posting Group Hours }
    { 210 ;   ;Prod.Posting Group Transport;Code10;TableRelation="Gen. Product Posting Group";
                                                   OnValidate=BEGIN
                                                                IF xRec."Prod.Posting Group Transport" <> "Prod.Posting Group Transport" THEN
                                                                  IF GenProdPostingGroup.ValidateVatProdPostingGroup(GenProdPostingGroup,"Prod.Posting Group Transport") THEN
                                                                    VALIDATE("VAT-Prod.Posting Gr. Transport",GenProdPostingGroup."Def. VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=ENU=Product Posting Group Transport }
    { 220 ;   ;Prod.Posting Group Miscell.;Code10 ;TableRelation="Gen. Product Posting Group";
                                                   OnValidate=BEGIN
                                                                IF xRec."Prod.Posting Group Miscell." <> "Prod.Posting Group Miscell." THEN
                                                                  IF GenProdPostingGroup.ValidateVatProdPostingGroup(GenProdPostingGroup,"Prod.Posting Group Miscell.") THEN
                                                                    VALIDATE("VAT-Product Post.Gr. Miscell.",GenProdPostingGroup."Def. VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=ENU=Product Posting Group Miscell. }
    { 225 ;   ;Prod.Posting Group Damage;Code10   ;TableRelation="Gen. Product Posting Group";
                                                   OnValidate=BEGIN
                                                                IF xRec."Prod.Posting Group Damage" <> "Prod.Posting Group Damage" THEN
                                                                  IF GenProdPostingGroup.ValidateVatProdPostingGroup(GenProdPostingGroup,"Prod.Posting Group Damage") THEN
                                                                    VALIDATE("VAT-Product Post.Gr. Damage",GenProdPostingGroup."Def. VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=ENU=Product Posting Group Damage }
    { 230 ;   ;VAT-Product P.Group Hours;Code10   ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT-Product Post.Gr. Hours }
    { 240 ;   ;VAT-Prod.Posting Gr. Transport;Code10;
                                                   TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT-Product Post.Gr. Transport }
    { 241 ;   ;VAT-Prod.Post. Gr. Trp. Intern;Code10;
                                                   TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT-Product Post.Gr. Transport Internal }
    { 245 ;   ;VAT Prod. Posting Group BPM;Code10 ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT Prod. Posting Group TPM }
    { 250 ;   ;VAT-Product Post.Gr. Miscell.;Code10;
                                                   TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT-Product Post.Gr. Miscell. }
    { 255 ;   ;VAT-Product Post.Gr. Damage;Code10 ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT-Product Post.Gr. Damage }
    { 259 ;   ;Empl. Sales Rate as Hour Rate;Boolean;
                                                   CaptionML=ENU=Handle Employee Sales Rate as Hour Rate }
    { 260 ;   ;Hours Account       ;Code20        ;TableRelation="G/L Account" WHERE (Direct Posting=CONST(No),
                                                                                      WIP Account=CONST(No));
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Hours Account");
                                                              END;

                                                   CaptionML=ENU=Hours Account }
    { 265 ;   ;Invoice Hours by Day;Boolean       ;CaptionML=ENU=Invoice Hours by Day }
    { 270 ;   ;Transport Account   ;Code20        ;TableRelation="G/L Account" WHERE (Direct Posting=CONST(No),
                                                                                      WIP Account=CONST(No));
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Transport Account");
                                                              END;

                                                   CaptionML=ENU=Transport Account }
    { 280 ;   ;Miscellaneous Account;Code20       ;TableRelation="G/L Account" WHERE (Direct Posting=CONST(No),
                                                                                      WIP Account=CONST(No));
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Miscellaneous Account");
                                                              END;

                                                   CaptionML=ENU=Miscellaneous Account }
    { 285 ;   ;Damage Account      ;Code20        ;TableRelation="G/L Account" WHERE (Direct Posting=CONST(No),
                                                                                      WIP Account=CONST(No));
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Damage Account");
                                                              END;

                                                   CaptionML=ENU=Damage Account }
    { 290 ;   ;Contact No. Plant Book;Code20      ;TableRelation=Contact WHERE (Type=CONST(Company));
                                                   CaptionML=ENU=Contact No. Plant Book (Word doc.) }
    { 295 ;   ;Distr. Inv. over Sub Projects;Option;
                                                   CaptionML=ENU=Distribute Invoice over Sub Projects;
                                                   OptionCaptionML=ENU=No,,Yes,,Automatically;
                                                   OptionString=No,,Yes,,Automatically }
    { 300 ;   ;Ext Bulk Plant with No. in Inv;Boolean;
                                                   CaptionML=ENU=Extern Bulk Plant with No. in Inventory }
    { 310 ;   ;Change Sales Rate   ;Boolean       ;CaptionML=ENU=Change Sales Rate }
    { 320 ;   ;Change Buy Back Rate;Boolean       ;CaptionML=ENU=Change Buy Back Rate }
    { 325 ;   ;BB with Sales Rate (L to L.);Boolean;
                                                   CaptionML=ENU=Buy Back with Sales Rate (Loc. to Loc. Projects same Company);
                                                   Description=Only for 'Other tranfers' for locations with project in the same company }
    { 330 ;   ;Rate Warning        ;Boolean       ;CaptionML=ENU=Rate Warning }
    { 335 ;   ;Order Date Lower Limit;DateFormula ;OnValidate=BEGIN
                                                                GetOrderDateLowerLimit(Rec);
                                                              END;

                                                   CaptionML=ENU=Order Date Lower Limit;
                                                   Description=Allowed before current date }
    { 336 ;   ;Order Date Upper Limit;DateFormula ;OnValidate=BEGIN
                                                                GetOrderDateUpperLimit(Rec);
                                                              END;

                                                   CaptionML=ENU=Order Date Upper Limit;
                                                   Description=Allowed after current date }
    { 340 ;   ;Invoice Suggestion Nos.;Code10     ;TableRelation="No. Series";
                                                   CaptionML=ENU=Invoice Suggestion Nos. }
    { 350 ;   ;Plant Hours Unit of Measure;Code10 ;TableRelation="Unit of Measure";
                                                   CaptionML=ENU=Plant Hours Unit of Measure }
    { 360 ;   ;Fixed Cost Object Loss;Code20      ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                               Cost Type=FILTER(<>Revenue));
                                                   CaptionML=ENU=Fixed Cost Object Loss }
    { 370 ;   ;Source Code Hours Costs;Code10     ;TableRelation="Source Code";
                                                   CaptionML=ENU=Source Code Plant Hours Costs }
    { 380 ;   ;Integration Fixed Assets;Boolean   ;CaptionML=ENU=Integration Fixed Assets }
    { 390 ;   ;Disposal Method Bulk;Option        ;CaptionML=ENU=Disposal Method Bulk;
                                                   OptionCaptionML=ENU=FIFO,LIFO;
                                                   OptionString=FIFO,LIFO }
    { 395 ;   ;Manual Disposal Method Bulk;Option ;CaptionML=ENU=Manual Disposal Method Bulk;
                                                   OptionCaptionML=ENU=No,Yes,Allowed;
                                                   OptionString=No,Yes,Allowed }
    { 399 ;   ;Block Post Exit if FA G/L Jnl.;Boolean;
                                                   CaptionML=ENU=Block post Exit Order if FA G/L Jnl. not empty }
    { 400 ;   ;Cost Component Acquisition;Code10  ;TableRelation="Cost Component Plant";
                                                   CaptionML=ENU=Cost Component Acquisition }
    { 405 ;   ;Cost Component Rent ;Code10        ;TableRelation="Cost Component Plant";
                                                   CaptionML=ENU=Cost Component Rent }
    { 410 ;   ;Cost Component Depreciation;Code10 ;TableRelation="Cost Component Plant";
                                                   CaptionML=ENU=Cost Component Depreciation }
    { 411 ;   ;Plant Entry Book Val. Disposal;Boolean;
                                                   InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                //C002804
                                                                IF NOT "Plant Entry Book Val. Disposal" THEN
                                                                  TESTFIELD("Cost Comp. Book Value Disposal", '');
                                                              END;

                                                   CaptionML=ENU=Plant Entry Book Value on Disposal }
    { 412 ;   ;Cost Comp. Book Value Disposal;Code10;
                                                   TableRelation="Cost Component Plant";
                                                   OnValidate=BEGIN
                                                                IF "Cost Comp. Book Value Disposal" <> '' THEN
                                                                  TESTFIELD("Plant Entry Book Val. Disposal", TRUE);  //C002804.n
                                                              END;

                                                   CaptionML=ENU=Cost Component Book Value on Disposal }
    { 415 ;   ;Cost Component Gain/Loss;Code10    ;TableRelation="Cost Component Plant";
                                                   CaptionML=ENU=Cost Component Gain/Loss;
                                                   Description=Not Used (11-02-2011);
                                                   Editable=No }
    { 420 ;   ;Level 1 Grouping No. of Char.;Integer;
                                                   OnValidate=BEGIN
                                                                IF ("Level 1 Grouping No. of Char." > 0) THEN BEGIN
                                                                  IF ("Level 1 Grouping No. of Char." > 10) AND "Connect Grouping to FA" THEN
                                                                    ERROR(Text007, FIELDCAPTION("Level 1 Grouping No. of Char.") , FIELDCAPTION("Connect Grouping to FA"));
                                                                  IF ("Level 1 Grouping No. of Char." >= "Level 2 Grouping No. of Char.") AND ("Level 2 Grouping No. of Char." > 0) THEN
                                                                    ERROR(Text009, FIELDCAPTION("Level 1 Grouping No. of Char.") , FIELDCAPTION("Level 2 Grouping No. of Char."));
                                                                END ELSE BEGIN
                                                                  TESTFIELD("Level 2 Grouping No. of Char.", 0);
                                                                  TESTFIELD("Level 3 Grouping No. of Char.", 0);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Level 1 Grouping No. of Char.;
                                                   MinValue=0;
                                                   MaxValue=20;
                                                   BlankZero=Yes }
    { 430 ;   ;Level 2 Grouping No. of Char.;Integer;
                                                   OnValidate=BEGIN
                                                                IF ("Level 2 Grouping No. of Char." > 0) THEN BEGIN
                                                                  TESTFIELD("Level 1 Grouping No. of Char.");
                                                                  IF ("Level 2 Grouping No. of Char." > 10) AND "Connect Grouping to FA" THEN
                                                                    ERROR(Text007, FIELDCAPTION("Level 2 Grouping No. of Char.") , FIELDCAPTION("Connect Grouping to FA"));
                                                                  IF ("Level 2 Grouping No. of Char." <= "Level 1 Grouping No. of Char.") THEN
                                                                    ERROR(Text008, FIELDCAPTION("Level 2 Grouping No. of Char.") , FIELDCAPTION("Level 1 Grouping No. of Char."));
                                                                  IF ("Level 2 Grouping No. of Char." >= "Level 3 Grouping No. of Char.") AND ("Level 3 Grouping No. of Char." > 0) THEN
                                                                    ERROR(Text009, FIELDCAPTION("Level 2 Grouping No. of Char.") , FIELDCAPTION("Level 3 Grouping No. of Char."));
                                                                END ELSE BEGIN
                                                                  TESTFIELD("Level 3 Grouping No. of Char.", 0);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Level 2 Grouping No. of Char.;
                                                   MinValue=0;
                                                   MaxValue=20;
                                                   BlankZero=Yes }
    { 440 ;   ;Level 3 Grouping No. of Char.;Integer;
                                                   OnValidate=BEGIN
                                                                IF ("Level 3 Grouping No. of Char." > 0) THEN BEGIN
                                                                  TESTFIELD("Level 1 Grouping No. of Char.");
                                                                  TESTFIELD("Level 2 Grouping No. of Char.");
                                                                  IF ("Level 3 Grouping No. of Char." > 10) AND "Connect Grouping to FA" THEN
                                                                    ERROR(Text007, FIELDCAPTION("Level 3 Grouping No. of Char.") , FIELDCAPTION("Connect Grouping to FA"));
                                                                  IF ("Level 3 Grouping No. of Char." <= "Level 2 Grouping No. of Char.") THEN
                                                                    ERROR(Text008, FIELDCAPTION("Level 3 Grouping No. of Char.") , FIELDCAPTION("Level 2 Grouping No. of Char."));
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Level 3 Grouping No. of Char.;
                                                   MinValue=0;
                                                   MaxValue=20;
                                                   BlankZero=Yes }
    { 450 ;   ;Fixed FA Nos.       ;Boolean       ;CaptionML=ENU=Fixed FA Nos. }
    { 451 ;   ;Default Fixed Asset Inactivate;Boolean;
                                                   CaptionML=ENU=Default Fixed Asset Inactive }
    { 460 ;   ;Level 1 Description ;Text30        ;CaptionML=ENU=Level 1 Description }
    { 470 ;   ;Level 2 Description ;Text30        ;CaptionML=ENU=Level 2 Description }
    { 480 ;   ;Level 3 Description ;Text30        ;CaptionML=ENU=Level 3 Description }
    { 490 ;   ;Connect Grouping to FA;Boolean     ;OnValidate=BEGIN
                                                                IF "Connect Grouping to FA" THEN BEGIN
                                                                  IF ("Level 1 Grouping No. of Char." > 10) THEN
                                                                    ERROR(Text007, FIELDCAPTION("Level 1 Grouping No. of Char.") , FIELDCAPTION("Connect Grouping to FA"));
                                                                  IF ("Level 2 Grouping No. of Char." > 10) THEN
                                                                    ERROR(Text007, FIELDCAPTION("Level 2 Grouping No. of Char.") , FIELDCAPTION("Connect Grouping to FA"));
                                                                  IF ("Level 3 Grouping No. of Char." > 10) THEN
                                                                    ERROR(Text007, FIELDCAPTION("Level 3 Grouping No. of Char.") , FIELDCAPTION("Connect Grouping to FA"));
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Connect Grouping to FA }
    { 495 ;   ;Def. Loc. Bus. P.Grp of Cust.;Boolean;
                                                   CaptionML=ENU=Default Location Bus. Posting Group of Customer }
    { 500 ;   ;Post On FA Acquisition;Boolean     ;CaptionML=ENU=Post On FA Acquisition }
    { 510 ;   ;One Location per Invoice;Boolean   ;InitValue=Yes;
                                                   CaptionML=ENU=One Location per Invoice }
    { 511 ;   ;Level One Loc. per Invoice;Option  ;CaptionML=ENU=Level 'One Location per Invoice';
                                                   OptionCaptionML=ENU=Plant Setup,Customer;
                                                   OptionString=Setup,Customer }
    { 521 ;   ;Post Invoice Proposals via IC;Option;
                                                   CaptionML=ENU=Post Invoice Proposals via IC;
                                                   OptionCaptionML=ENU=No,Yes (all Companies),Specific Companies;
                                                   OptionString=No,Yes,Specific }
    { 530 ;   ;Future Deficit Warning;Boolean     ;CaptionML=ENU=Future Deficit Warning }
    { 540 ;   ;Time Limit Future Deficit;DateFormula;
                                                   CaptionML=ENU=Time Limit Future Deficit Warning }
    { 550 ;   ;Cost Component Hour Costs;Code10   ;TableRelation="Cost Component Plant";
                                                   CaptionML=ENU=Cost Component Hour Costs }
    { 551 ;   ;Cost Component Internal Charge;Code10;
                                                   TableRelation="Cost Component Plant";
                                                   OnValidate=BEGIN
                                                                //DP00815
                                                                IF "Cost Component Internal Charge" = '' THEN
                                                                  "Internal Charge Plant Entry as" := 0
                                                                ELSE BEGIN
                                                                  IF "Internal Charge Plant Entry as" = 0 THEN
                                                                    "Internal Charge Plant Entry as" := "Internal Charge Plant Entry as"::Cost;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Cost Component Internal Charge }
    { 552 ;   ;Internal Charge Plant Entry as;Option;
                                                   OnValidate=BEGIN
                                                                //DP00815
                                                                IF "Internal Charge Plant Entry as" <> 0 THEN
                                                                  TESTFIELD("Cost Component Internal Charge")
                                                                ELSE BEGIN
                                                                  IF "Cost Component Internal Charge" <> '' THEN
                                                                    TESTFIELD("Internal Charge Plant Entry as");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Internal Charge Plant Entry as;
                                                   OptionCaptionML=ENU=" ,Cost,Neg. Revenue";
                                                   OptionString=[ ,Cost,NegRevenue] }
    { 555 ;   ;Save Rent Price on Receipt;Boolean ;OnValidate=VAR
                                                                lvLicensePlantExtendedCU@1100485000 : Codeunit 11012579;
                                                              BEGIN
                                                                //* Only allowed in plant extended. There is no (new) table for this functionality in plant extended,
                                                                //* for that reason a test on a random table of plant extended.
                                                                //* Chosen for table Plant-Items (T11020519), for users that must work with this, the read permission of this table
                                                                //* should be at least 'Indirect'.
                                                                IF NOT lvLicensePlantExtendedCU.LicenseTablePlantItem(FALSE,0) THEN
                                                                  ERROR(Text000);
                                                              END;

                                                   CaptionML=ENU=Save Rent Price on Receipt }
    { 560 ;   ;Default % Purch. Price Damage;Decimal;
                                                   OnValidate=BEGIN
                                                                IF "Default % Purch. Price Damage" <> 0 THEN
                                                                  TESTFIELD("Damage Cost PO Based on", "Damage Cost PO Based on"::Plant);
                                                              END;

                                                   CaptionML=ENU=Default % of Purch. Price for Damage;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 561 ;   ;Damage Cost PO Based on;Option     ;OnValidate=BEGIN
                                                                IF "Damage Cost PO Based on" <> "Damage Cost PO Based on"::Plant THEN
                                                                  TESTFIELD( "Default % Purch. Price Damage", 0);
                                                              END;

                                                   CaptionML=ENU=Damage Cost Based on;
                                                   OptionCaptionML=ENU=Plant,Cost Object;
                                                   OptionString=Plant,CostObject }
    { 570 ;   ;Advanced Removal    ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT "Advanced Removal" THEN BEGIN
                                                                  "Default Advanced Removal" := FALSE;
                                                                  "Default Repair Location" := '';
                                                                  "Default Exit Location" := '';
                                                                  "Check Posting Advanced Removal" := FALSE;
                                                                  "Use Plant Order No for Exit" := FALSE;
                                                                  "Removal with Qty. to Receive" := FALSE;
                                                                  ClearDefaultDeptLocations; //**4PS.n DPA (Plant)
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Advanced Removal }
    { 571 ;   ;Removal with Qty. to Receive;Boolean;
                                                   OnValidate=VAR
                                                                lvLicensePlantExtendedCU@1100525000 : Codeunit 11012579;
                                                              BEGIN
                                                                IF "Removal with Qty. to Receive" THEN BEGIN
                                                                  TESTFIELD("Advanced Removal");
                                                                  IF NOT lvLicensePlantExtendedCU.LicenseTableTransportOrder(FALSE) THEN  //See field 691
                                                                    ERROR(Text000);
                                                                END;
                                                                IF NOT "Removal with Qty. to Receive" THEN
                                                                  TESTFIELD("Fill Qty. with Qty. to Receive", FALSE);
                                                              END;

                                                   CaptionML=ENU=Removal with 'Qty. to Receive' }
    { 572 ;   ;Fill Qty. with Qty. to Receive;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Fill Qty. with Qty. to Receive" THEN
                                                                  TESTFIELD("Removal with Qty. to Receive", TRUE);
                                                              END;

                                                   CaptionML=ENU=Fill Quantity. with 'Qty. to Receive' }
    { 575 ;   ;No Rent End Date L-L (proj.);Boolean;
                                                   CaptionML=ENU=No Rent on End Date Loc to Loc (Projject same Comp.);
                                                   Description=No rent on end date from location (project) if transfer to location with project of the same company (PO - Other Transfer) }
    { 576 ;   ;No Rent End Date Cust.-Cust.;Boolean;
                                                   CaptionML=ENU=No Rent End Date Cust.-Cust.;
                                                   Description=No rent on end date from location (customer) if transfer to location with customer (thencompany empty) (PO - Other Transfer) }
    { 580 ;   ;Default Advanced Removal;Boolean   ;CaptionML=ENU=Default Advanced Removal }
    { 590 ;   ;Default Repair Location;Code20     ;TableRelation="Plant Location".Code WHERE (Depot=CONST(Yes));
                                                   CaptionML=ENU=Default Repair Location }
    { 599 ;   ;Add Linked Plant on Removal;Boolean;CaptionML=ENU=Add Linked Plant on Removal }
    { 600 ;   ;Default Exit Location;Code20       ;TableRelation="Plant Location".Code WHERE (Depot=CONST(Yes));
                                                   CaptionML=ENU=Default Exit Location }
    { 605 ;   ;Split Mandatory For Adv. Rem.;Boolean;
                                                   CaptionML=ENU=Split Mandatory For Advanced Removal;
                                                   Description=Yes: divided quantity should always be equal to 'Quantity', No: idem, but if all divided zero then ok (all will be posted on inventory) }
    { 610 ;   ;Check Posting Advanced Removal;Boolean;
                                                   CaptionML=ENU=Check Posting Advanced Removal;
                                                   Description=Check Cost line at Quantity Damaged and exit order at Quantity Exit }
    { 620 ;   ;Use Plant Order No for Exit;Boolean;CaptionML=ENU=Use Plant Order No for Exit Order No. }
    { 625 ;   ;Exit Order Type     ;Option        ;InitValue=Scrap;
                                                   CaptionML=ENU=Exit Order Type;
                                                   OptionCaptionML=ENU=,Missing,Scrap;
                                                   OptionString=,Missing,Scrap;
                                                   BlankZero=Yes }
    { 630 ;   ;Availabe Rental Days by Year;Integer;
                                                   CaptionML=ENU=Availabe Rental Days by Year;
                                                   MinValue=0;
                                                   MaxValue=366 }
    { 635 ;   ;Move Approved to Rental Depot;Boolean;
                                                   OnValidate=VAR
                                                                lvLicensePlantExtendedCU@1100485000 : Codeunit 11012579;
                                                              BEGIN
                                                                //* Only allowed in plant extended. There is no (new) table for this functionality in plant extended,
                                                                //* for that reason a test on a random table of plant extended.
                                                                //* Chosen for table Plant-Items (T11020519), for users that must work with this, the read permission of this table
                                                                //* should be at least 'Indirect'.
                                                                IF NOT lvLicensePlantExtendedCU.LicenseTablePlantItem(FALSE,0) THEN
                                                                  ERROR(Text000);
                                                              END;

                                                   CaptionML=ENU=Move Approved to Rental Depot }
    { 638 ;   ;External Rent Calendar;Code10      ;TableRelation="Plant Calendar";
                                                   CaptionML=ENU=External Rent Calendar }
    { 640 ;   ;Rate Codes          ;Boolean       ;OnValidate=VAR
                                                                lvLicensePlantExtendedCU@1100485000 : Codeunit 11012579;
                                                              BEGIN
                                                                IF ("Rate Codes") THEN BEGIN
                                                                  lvLicensePlantExtendedCU.LicenseTablePlantRateCode(TRUE);
                                                                  //* Combinatie van tariefcodes en negatieve bulkvoorraad is niet toegestaan. Want de kans dat er dan negatieve voorraad
                                                                  //* ontstaat omdat er een verkeerde tariefcode (van) wordt ingegeven is dan veel te groot, dit terwijl het materieel nog
                                                                  //* wel met een andere tariefcode aanwezig is. Als dit in de toekomst mogelijk wel moet kunnen dan bij de verwerking
                                                                  //* diverse testen inbouwen om te voorkomen dat er ten onrechte negatieve voorraad van een bepaalde tariefcode ontstaat.
                                                                  //* Mogelijk alleen toestaan als van andere tariefcodes geen voorraad aanwezig. Nu eerst lekker simpel houden.
                                                                  //* 28-09-2005 Negatieve voorraad op depots wel toestaan (nieuwe instelling, veld 151), dus niet meer zo simpel
                                                                  //TESTFIELD("Negative Bulk Stock", FALSE);  //24451.o
                                                                  //26721 (25-05-2011) Rate Codes and negative stock now allowed
                                                                  //TESTFIELD("Negative Bulk Stock Location", FALSE);  //24451.n  //26721.o
                                                                END ELSE BEGIN
                                                                  "Default Rate Code" := '';
                                                                  "Default Rate Code Rental" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Rate Codes }
    { 641 ;   ;Default Rate Code   ;Code10        ;TableRelation="Plant Rate Code";
                                                   OnValidate=BEGIN
                                                                IF (NOT "Rate Codes") AND ("Default Rate Code" <> '') THEN
                                                                  "Default Rate Code" := '';
                                                              END;

                                                   CaptionML=ENU=Default Rate Code }
    { 642 ;   ;Default Rate Code Rental;Code10    ;TableRelation="Plant Rate Code";
                                                   OnValidate=BEGIN
                                                                IF (NOT "Rate Codes") AND ("Default Rate Code Rental" <> '') THEN
                                                                  "Default Rate Code Rental" := '';
                                                              END;

                                                   CaptionML=ENU=Default Rate Code Rental }
    { 648 ;   ;Rental Free Order Nos.;Code10      ;TableRelation="No. Series";
                                                   OnValidate=VAR
                                                                lvLicensePlantExtendedCU@1100485000 : Codeunit 11012579;
                                                              BEGIN
                                                                IF ("Rental Free Order Nos." <> '') THEN
                                                                  lvLicensePlantExtendedCU.LicenseTablePlantRateCode(TRUE);
                                                              END;

                                                   CaptionML=ENU=Rental Free Order Nos. }
    { 649 ;   ;Transport Ride Nos. ;Code10        ;TableRelation="No. Series";
                                                   OnValidate=VAR
                                                                lvLicensePlantExtendedCU@1100485000 : Codeunit 11012579;
                                                              BEGIN
                                                                IF ("Transport Ride Nos." <> '') THEN
                                                                  lvLicensePlantExtendedCU.LicenseTableTransportOrder(TRUE);
                                                              END;

                                                   CaptionML=ENU=Transport Ride Nos. }
    { 650 ;   ;Transport Order Nos.;Code10        ;TableRelation="No. Series";
                                                   OnValidate=VAR
                                                                lvLicensePlantExtendedCU@1100485000 : Codeunit 11012579;
                                                              BEGIN
                                                                IF ("Transport Order Nos." <> '') THEN
                                                                  lvLicensePlantExtendedCU.LicenseTableTransportOrder(TRUE);
                                                              END;

                                                   CaptionML=ENU=Transport Order Nos. }
    { 653 ;   ;Def. Create Transport Cost by;Option;
                                                   CaptionML=ENU=Default Create Transport Cost by;
                                                   OptionCaptionML=ENU=" ,Plant Order,Transport Order";
                                                   OptionString=[ ,Plant Order,Transport Order] }
    { 654 ;   ;Def.Create Load/Unload Cost by;Option;
                                                   CaptionML=ENU=Default Create Load/Unload Cost by;
                                                   OptionCaptionML=ENU=" ,Plant Order,Transport Order";
                                                   OptionString=[ ,Plant Order,Transport Order] }
    { 655 ;   ;Create Load/Unload Cost for;Option ;CaptionML=ENU=Create Load/Unload  Cost for;
                                                   OptionCaptionML=ENU=None,Arrival,Removal,Both;
                                                   OptionString=None,Arrival,Removal,Both }
    { 656 ;   ;Create TO Cost Autom.;Option       ;CaptionML=ENU=Create Transport Cost Automatically;
                                                   OptionCaptionML=ENU=None,Transport Cost,Load/Unload Cost,Both;
                                                   OptionString=None,Transport Cost,Load/Unload Cost,Both }
    { 658 ;   ;Default Invoice-to Load/Unload;Option;
                                                   CaptionML=ENU=Default Invoice-to Load/Unload;
                                                   OptionCaptionML=ENU=No,Internal,Project,Location;
                                                   OptionString=No,Internal,Project,Location }
    { 659 ;   ;Lnk TO Cost on Main TO allowed;Boolean;
                                                   OnValidate=BEGIN
                                                                //* Dit veld staat alleen bij BNBM in maatwerk form 'Materieelinstellingen BNBM' (bij alle andere klanten moet deze uit staan).
                                                                //* Mogelijk is dit eerste aanzet tot standaard functionaliteit.
                                                                //* Probleem op gekoppelde TO's geen kosten toegestaan, op factuur komen LL kosten dan onder hoofd TO-nummer.
                                                                //* Dit is voor klanten van BNBM een probleem, men krijgt hier veel vragen over. Voor TR kosten geen probleem.
                                                                //* Voorlopig is dit alleen voor laad/loskosten met het veld 'Factureren aan' op "Locatie" (ook van/naar loc.).
                                                                //* Dit om het simpel te houden. Later eventueel ook voor andere kosten, maar dan wordt het veel ingewikkelder,
                                                                //* want factureren aan (kop en/of regel) moet dan wel overeenkomen. Zolang niemand hier om vraagt maar mooi
                                                                //* zo laten.
                                                                //* Als een TO (met alleen deze specifieke LL kosten) gekoppeld wordt dan komt het systeem met de vraag of deze
                                                                //* kosten gekopieerd moeten worden. Op de transportkostenregel wordt de oorspronkelijke TO (en MO) vastgelegd.
                                                                //* Bij het aanmaken van de transport facturen wordt dan het oorspronkelijk TO nummer in de factuurregel gezet.
                                                              END;

                                                   CaptionML=ENU=Linked TO Cost on Main TO allowed;
                                                   Description=BNBM specific }
    { 660 ;   ;Unit of Measure Distance;Code10    ;TableRelation="Unit of Measure";
                                                   CaptionML=ENU=Unit of Measure Distance }
    { 670 ;   ;Unit of Measure Weight 1;Code10    ;TableRelation="Unit of Measure";
                                                   CaptionML=ENU=Unit of Measure Weigt 1 }
    { 671 ;   ;Qty. per Unit of Msr. Weight 1;Decimal;
                                                   CaptionML=ENU=Qty. per Unit of Measure Weight 1;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 672 ;   ;Unit of Measure Weight 2;Code10    ;TableRelation="Unit of Measure";
                                                   CaptionML=ENU=Unit of Measure Weigt 2 }
    { 673 ;   ;Qty. per Unit of Msr. Weight 2;Decimal;
                                                   CaptionML=ENU=Qty. per Unit of Measure Weight 2;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 680 ;   ;Source Code Item Delivery;Code10   ;TableRelation="Source Code";
                                                   CaptionML=ENU=Source Code Item Delivery }
    { 688 ;   ;Only Create TO fr. rel. Arr.MO;Boolean;
                                                   CaptionML=ENU=Only Create TO from released arrival PO }
    { 689 ;   ;TO Sended On Post Last Remo.PO;Option;
                                                   CaptionML=ENU=TO on 'Sended' during Posting Last Removal PO;
                                                   OptionCaptionML=ENU=No,TO Open/Printed/Released,TO Printed/Released,TO Released;
                                                   OptionString=No,Open,Printed,Released }
    { 690 ;   ;Transport Orders    ;Boolean       ;OnValidate=VAR
                                                                lvLicensePlantExtendedCU@1100485000 : Codeunit 11012579;
                                                              BEGIN
                                                                IF "Transport Orders" THEN BEGIN
                                                                  TESTFIELD("Extended Picking Procedure", TRUE);
                                                                  lvLicensePlantExtendedCU.LicenseTableTransportOrder(TRUE);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Transport Orders }
    { 691 ;   ;Extended Picking Procedure;Boolean ;OnValidate=VAR
                                                                lvLicensePlantExtendedCU@1100485000 : Codeunit 11012579;
                                                              BEGIN
                                                                IF "Extended Picking Procedure" THEN BEGIN
                                                                  IF NOT lvLicensePlantExtendedCU.LicenseTableTransportOrder(FALSE) THEN
                                                                    ERROR(Text000);
                                                                END ELSE BEGIN
                                                                  TESTFIELD("Transport Orders", FALSE);
                                                                  TESTFIELD("Order Picking Procedure", FALSE);  //DP00688
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Extended Picking Procedure }
    { 692 ;   ;PO-Picking Bar Code Scanner;Boolean;OnValidate=VAR
                                                                lvText9001@1100485000 : TextConst 'ENU=Only allowed/possible in combination with customization ''Orderpicking/Bar Code Scanner'' for plant orders. Are you sure?';
                                                              BEGIN
                                                                //* Dit veld staat alleen bij BNBM in maatwerk form 'Materieelinstellingen BNBM' (bij alle andere klanten moet deze uit staan).
                                                                //* Orderpicking (materieelorders) van toepassing, dit mag/kan alleen in combinatie met maatwerk (nu alleen BNBM).

                                                                IF "PO-Picking Bar Code Scanner" THEN BEGIN
                                                                  TESTFIELD("Order Picking Procedure", FALSE);  //DP00688 Not both allowed: customization or standard
                                                                  IF NOT CONFIRM(lvText9001, FALSE) THEN
                                                                    "PO-Picking Bar Code Scanner" := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Picking (PO) with Bar Code Scanner;
                                                   Description=BNBM specific }
    { 693 ;   ;Copy/Link PO to Plant Request;Boolean;
                                                   OnValidate=BEGIN
                                                                //* Dit veld staat alleen bij BNBM in maatwerk form 'Materieelinstellingen BNBM' (bij alle andere klanten moet deze uit staan).
                                                                //* Dit was functionaliteit uit de IMA's (Interne MaterieelAanvraag) die voor BNBM in NAV360 zijn gemaakt.
                                                                //* Deze functionaliteit is voor BNBM een vereiste, maar niet gewenst in de standaard.
                                                              END;

                                                   CaptionML=ENU=Copy/Link PO to Plant Request;
                                                   Description=BNBM specific }
    { 695 ;   ;Post Rent by Rate Component;Boolean;OnValidate=BEGIN
                                                                IF NOT "Post Rent by Rate Component" THEN BEGIN
                                                                  "Type Division of Rate Comp." := "Type Division of Rate Comp."::Proportional;
                                                                  "Rate Component Result" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Post Rent by Rate Component }
    { 696 ;   ;Type Division of Rate Comp.;Option ;OnValidate=VAR
                                                                lvPlantLocRec@1100485001 : Record 11012554;
                                                                lvRateRec@1100485000 : Record 11012567;
                                                              BEGIN
                                                                IF "Type Division of Rate Comp." <> "Type Division of Rate Comp."::DiffOnResult THEN
                                                                  "Rate Component Result" := ''
                                                                ELSE BEGIN
                                                                  TESTFIELD("Post Rent by Rate Component", TRUE);
                                                                  IF "Type Division of Rate Comp." <> xRec."Type Division of Rate Comp." THEN BEGIN
                                                                    lvPlantLocRec.SETFILTER("Rate Type", '<>%1', lvPlantLocRec."Rate Type"::Day);
                                                                    lvPlantLocRec.SETFILTER(Status, '<>%1', lvPlantLocRec.Status::Archived);
                                                                    IF lvPlantLocRec.FINDFIRST THEN
                                                                      ERROR(Text006, "Type Division of Rate Comp.", lvPlantLocRec.COUNT);
                                                                    //
                                                                    lvRateRec.SETFILTER("Rental Type", '%1|%2', lvRateRec."Rental Type"::Rental, lvRateRec."Rental Type"::"Plant Hours");
                                                                    lvRateRec.SETFILTER("Plant Type", '<>%1', '');
                                                                    lvRateRec.SETFILTER("Plant No.", '<>%1', '');
                                                                    IF NOT lvRateRec.FINDFIRST THEN
                                                                      MESSAGE(Text002, "Type Division of Rate Comp.")
                                                                    ELSE BEGIN
                                                                      IF NOT CONFIRM(STRSUBSTNO(Text002,"Type Division of Rate Comp.") + '\ \' + Text003, FALSE, lvRateRec.COUNT) THEN
                                                                        ERROR('');
                                                                    END;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Type Rate Componenten Division;
                                                   OptionCaptionML=ENU=Divide proportional,Difference on Rate Comp. Result;
                                                   OptionString=Proportional,DiffOnResult }
    { 697 ;   ;Rate Component Result;Code10       ;TableRelation="Standard Rate Component";
                                                   OnValidate=VAR
                                                                lvRateCompRec@1100485000 : Record 11012585;
                                                              BEGIN
                                                                IF "Rate Component Result" <> '' THEN BEGIN
                                                                  TESTFIELD("Type Division of Rate Comp.", "Type Division of Rate Comp."::DiffOnResult);
                                                                  lvRateCompRec.SETFILTER("Rental Type",'%1|%2',lvRateCompRec."Rental Type"::Rental,lvRateCompRec."Rental Type"::"Plant Hours");
                                                                  lvRateCompRec.SETRANGE("Rental Rate Code", "Rate Component Result");
                                                                  IF lvRateCompRec.FINDFIRST THEN BEGIN
                                                                    IF CONFIRM(Text004, FALSE, FIELDCAPTION("Rate Component Result"), "Rate Component Result", lvRateCompRec.COUNT) THEN
                                                                      MESSAGE(Text005)
                                                                    ELSE
                                                                      ERROR('');
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Rate Component Result }
    { 698 ;   ;Order Picking Procedure;Boolean    ;OnValidate=VAR
                                                                lvText9001@1100525000 : TextConst 'ENU=Customization ''Orderpicking/Bar Code Scanner'' for plant orders is active. This can not be used in addition to standard %1 (possibly switch to standard).';
                                                              BEGIN
                                                                //DP00688
                                                                IF "Order Picking Procedure" THEN BEGIN
                                                                  IF "PO-Picking Bar Code Scanner" THEN
                                                                    ERROR(lvText9001);
                                                                  TESTFIELD("Extended Picking Procedure", TRUE);  // Must be worked with 'Asked Qty' on PO
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Order Picking Procedure;
                                                   Description=With Arrival Plant Order List for the orderpicker }
    { 699 ;   ;Transport Status (Ext. Plan.);Boolean;
                                                   CaptionML=ENU=Transport Status (External Planning);
                                                   Description=External Transport Planning }
    { 700 ;   ;Item Journal Template;Code10       ;TableRelation="Item Journal Template";
                                                   CaptionML=ENU=Item Journal Template }
    { 710 ;   ;Item Journal Batch  ;Code10        ;TableRelation="Item Journal Batch".Name WHERE (Journal Template Name=FIELD(Item Journal Template));
                                                   CaptionML=ENU=Item Journal Batch }
    { 720 ;   ;Value Items         ;Option        ;CaptionML=ENU=Value Items;
                                                   OptionCaptionML=ENU=Default,Unit Cost,Standard Cost,Average Cost,Last Direct Cost;
                                                   OptionString=Default,Unit Cost,Standard Cost,Average Cost,Last Direct Cost }
    { 730 ;   ;Transferred Item Account;Code20    ;TableRelation="G/L Account" WHERE (Direct Posting=CONST(No),
                                                                                      WIP Account=CONST(No));
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Transferred Item Account");
                                                              END;

                                                   CaptionML=ENU=Transferred Item Account }
    { 740 ;   ;Account Transport Internal;Code20  ;TableRelation="G/L Account" WHERE (Direct Posting=CONST(No),
                                                                                      WIP Account=CONST(No));
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Account Transport Internal");
                                                              END;

                                                   CaptionML=ENU=Account Transport Internal }
    { 741 ;   ;Account Transport External;Code20  ;TableRelation="G/L Account" WHERE (Direct Posting=CONST(No),
                                                                                      WIP Account=CONST(No));
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Account Transport External");
                                                              END;

                                                   CaptionML=ENU=Account Transport External }
    { 742 ;   ;Internal Account Trans. Int.;Code20;TableRelation="G/L Account" WHERE (Direct Posting=CONST(No),
                                                                                      WIP Account=CONST(No));
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Internal Account Trans. Int.");
                                                              END;

                                                   CaptionML=ENU=Internal - Account Trans. Int. }
    { 743 ;   ;Internal Account Trans. Ext.;Code20;TableRelation="G/L Account" WHERE (Direct Posting=CONST(No),
                                                                                      WIP Account=CONST(No));
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Internal Account Trans. Ext.");
                                                              END;

                                                   CaptionML=ENU=Internal - Account Trans. Ext. }
    { 744 ;   ;Account Load/Unload Internal;Code20;TableRelation="G/L Account" WHERE (Direct Posting=CONST(No),
                                                                                      WIP Account=CONST(No));
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Account Load/Unload Internal");
                                                              END;

                                                   CaptionML=ENU=Account Load/Unload Internal }
    { 745 ;   ;Account Load/Unload External;Code20;TableRelation="G/L Account" WHERE (Direct Posting=CONST(No),
                                                                                      WIP Account=CONST(No));
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Account Load/Unload External");
                                                              END;

                                                   CaptionML=ENU=Account Load/Unload External }
    { 746 ;   ;Internal Acc. Load/Unload Int.;Code20;
                                                   TableRelation="G/L Account" WHERE (Direct Posting=CONST(No),
                                                                                      WIP Account=CONST(No));
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Internal Acc. Load/Unload Int.");
                                                              END;

                                                   CaptionML=ENU=Internal - Acc. Load/Unload Int. }
    { 747 ;   ;Internal Acc. Load/Unload Ext.;Code20;
                                                   TableRelation="G/L Account" WHERE (Direct Posting=CONST(No),
                                                                                      WIP Account=CONST(No));
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Internal Acc. Load/Unload Ext.");
                                                              END;

                                                   CaptionML=ENU=Internal - Acc. Load/Unload Ext. }
    { 749 ;   ;Internal Bal. Account Cost;Code20  ;TableRelation="G/L Account" WHERE (WIP Account=CONST(No));
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Internal Bal. Account Cost");
                                                              END;

                                                   CaptionML=ENU=Internal - Bal. Account Cost }
    { 750 ;   ;Account Transport Cost;Code20      ;TableRelation="G/L Account" WHERE (WIP Account=CONST(No));
                                                   CaptionML=ENU=Account Transport Cost }
    { 751 ;   ;Account Load/Unload Cost;Code20    ;TableRelation="G/L Account" WHERE (WIP Account=CONST(No));
                                                   CaptionML=ENU=Account Load/Unload Cost }
    { 760 ;   ;Plant Request Nos.  ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Plant Request Nos. }
    { 761 ;No ;Reserved 761 DP01055;Code10         }
    { 770 ;   ;PLE Journal Template;Code10        ;TableRelation="Gen. Journal Template".Name;
                                                   OnValidate=VAR
                                                                lvLicensePlantExtendedCU@1100485000 : Codeunit 11012579;
                                                              BEGIN
                                                                //* Als dit veld gevuld is, is dat de indicatie dat er met VJP's voor inhuurmaterieel gewerkt wordt.
                                                                IF "PLE Journal Template" <> '' THEN
                                                                  lvLicensePlantExtendedCU.LicenseTablePLE_ExtRentedPlant(TRUE);
                                                              END;

                                                   CaptionML=ENU=PLE Journal Template;
                                                   Description=PLE=Preceding Ledger Entry / VJP=Voorafgaande JournaalPost }
    { 771 ;   ;PLE Journal Batch   ;Code10        ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(PLE Journal Template));
                                                   OnValidate=BEGIN
                                                                IF "PLE Journal Batch" <> '' THEN
                                                                  TESTFIELD("PLE Journal Template");
                                                              END;

                                                   CaptionML=ENU=PLE Journal Batch }
    { 772 ;   ;Skip PLE Older      ;Integer       ;OnValidate=BEGIN
                                                                IF "Skip PLE Older" <> 0 THEN
                                                                  TESTFIELD("PLE Journal Template");
                                                              END;

                                                   CaptionML=ENU=Skip PLE Older [Mth];
                                                   MinValue=0 }
    { 775 ;   ;Plant - Element Mandatory;Boolean  ;CaptionML=ENU=Plant - Element Mandatory;
                                                   Description=Only of projects with 'Element Mandatory' }
    { 776 ;   ;Plant Request Element Mandat.;Option;
                                                   CaptionML=ENU=Plant Request Element Mandatory;
                                                   OptionCaptionML=ENU=No,Request,Approve,Both;
                                                   OptionString=No,Request,Approve,Both;
                                                   Description=Only Request of projects with 'Element Mandatory' }
    { 780 ;   ;Web Page Plant Type (Part 1);Text80;CaptionML=ENU=Web Page Plant Type (Part 1) }
    { 781 ;   ;Web Page Plant Type (Part 2);Text80;CaptionML=ENU=Web Page Plant Type (Part 2) }
    { 800 ;   ;Hours Costs Journal Template;Code10;TableRelation="Gen. Journal Template";
                                                   CaptionML=ENU=Hours Costs Journal Template }
    { 810 ;   ;Hours Costs Journal Batch;Code10   ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(Hours Costs Journal Template));
                                                   CaptionML=ENU=Item Journal Journal Batch }
    { 815 ;   ;Plant Hire Orders (Hours);Boolean  ;CaptionML=ENU=Plant Hire Orders (Hours) }
    { 820 ;   ;Finish and Archive Loc. Oblig.;Boolean;
                                                   CaptionML=ENU=Finish and Archive Locations Obligatorys }
    { 830 ;   ;Archive Company     ;Text30        ;TableRelation=Company;
                                                   OnValidate=VAR
                                                                CompInfRec@11012000 : Record 79;
                                                              BEGIN
                                                                IF "Archive Company" <> '' THEN BEGIN
                                                                  CompInfRec.CHANGECOMPANY("Archive Company");
                                                                  CompInfRec.GET;
                                                                  IF NOT CompInfRec."Archive Company" THEN
                                                                    ERROR(Text001, "Archive Company");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Archive Company }
    { 840 ;   ;Discount Plant Hours;Boolean       ;InitValue=Yes;
                                                   CaptionML=ENU=Loc. Discount Plant Hours }
    { 841 ;   ;Discount Sales/Buy Back;Boolean    ;InitValue=Yes;
                                                   CaptionML=ENU=Loc. Discount Sales/Buy Back Plant }
    { 842 ;   ;Discount Items      ;Boolean       ;InitValue=Yes;
                                                   CaptionML=ENU=Loc. Discount Items }
    { 849 ;   ;Default Damage Settlement Loc.;Boolean;
                                                   CaptionML=ENU=Default Damage Settlement Location }
    { 850 ;   ;Rate Type           ;Option        ;CaptionML=ENU=Rate Type;
                                                   OptionCaptionML=ENU=Day,Week,,Month;
                                                   OptionString=Day,Week,,Month }
    { 855 ;   ;Minimum Number of Rental Days;Integer;
                                                   CaptionML=ENU=Default Min. Number of Rental Days;
                                                   MinValue=0 }
    { 860 ;   ;Reset Transport Order;Option       ;CaptionML=ENU=Reset Transport Order;
                                                   OptionCaptionML=ENU=None,Interactive,Means Of Transport,Shipping Agent+Means of Transport;
                                                   OptionString=None,Interactive,MeansOfTrans,ShippingAgent;
                                                   Description=At deleting of ride order line (unlink TO from ride) }
    { 865 ;   ;Sel. Means of Trans. Create TO;Boolean;
                                                   CaptionML=ENU=Select Means of Transport on Create Transport Order (from PO);
                                                   Description=At creating TO from PO select direct Shipping Agent and Means of Transport (+ then fill on new TO) }
    { 870 ;   ;Plant Invoice Export per Item;Boolean;
                                                   CaptionML=ENU=Plant Invoice Export per Item }
    { 880 ;   ;Prod.P.Grp. Hours PO-Cst;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   OnValidate=BEGIN
                                                                IF xRec."Prod.P.Grp. Hours PO-Cst" <> "Prod.P.Grp. Hours PO-Cst" THEN
                                                                  IF GenProdPostingGroup.ValidateVatProdPostingGroup(GenProdPostingGroup,"Prod.P.Grp. Hours PO-Cst") THEN
                                                                    VALIDATE("VAT-Prod.P.Grp. Hours PO-Cst",GenProdPostingGroup."Def. VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=ENU=Product Posting Group Hours (PO-Cost);
                                                   Description=For creating purchase order from PO-costs }
    { 881 ;   ;VAT-Prod.P.Grp. Hours PO-Cst;Code10;TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT-Product Post.Gr. Hours (PO-Cost) }
    { 882 ;   ;Hours Account PO-Cst;Code20        ;TableRelation="G/L Account" WHERE (Direct Posting=CONST(No),
                                                                                      WIP Account=CONST(No));
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Hours Account");
                                                              END;

                                                   CaptionML=ENU=Hours Account  (PO-Cost) }
    { 883 ;   ;Prod.P.Grp. Transp. PO-Cst;Code10  ;TableRelation="Gen. Product Posting Group";
                                                   OnValidate=BEGIN
                                                                IF xRec."Prod.P.Grp. Transp. PO-Cst" <> "Prod.P.Grp. Transp. PO-Cst" THEN
                                                                  IF GenProdPostingGroup.ValidateVatProdPostingGroup(GenProdPostingGroup,"Prod.P.Grp. Transp. PO-Cst") THEN
                                                                    VALIDATE("VAT-Prod.P.Grp. Transp. PO-Cst",GenProdPostingGroup."Def. VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=ENU=Product Posting Group Transport (PO-Cost) }
    { 884 ;   ;VAT-Prod.P.Grp. Transp. PO-Cst;Code10;
                                                   TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT-Product Post.Gr. Transport (PO-Cost) }
    { 885 ;   ;Transport Account PO-Cst;Code20    ;TableRelation="G/L Account" WHERE (Direct Posting=CONST(No),
                                                                                      WIP Account=CONST(No));
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Transport Account");
                                                              END;

                                                   CaptionML=ENU=Transport Account (PO-Cost) }
    { 886 ;   ;Prod.P.Grp. Miscel. PO-Cst;Code10  ;TableRelation="Gen. Product Posting Group";
                                                   OnValidate=BEGIN
                                                                IF xRec."Prod.P.Grp. Miscel. PO-Cst" <> "Prod.P.Grp. Miscel. PO-Cst" THEN
                                                                  IF GenProdPostingGroup.ValidateVatProdPostingGroup(GenProdPostingGroup,"Prod.P.Grp. Miscel. PO-Cst") THEN
                                                                    VALIDATE("VAT-Prod.P.Grp. Miscel. PO-Cst",GenProdPostingGroup."Def. VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=ENU=Product Posting Group Miscell. (PO-Cost) }
    { 887 ;   ;VAT-Prod.P.Grp. Miscel. PO-Cst;Code10;
                                                   TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT-Product Post.Gr. Miscell. (PO-Cost) }
    { 888 ;   ;Miscellaneous Account PO-Cst;Code20;TableRelation="G/L Account" WHERE (Direct Posting=CONST(No),
                                                                                      WIP Account=CONST(No));
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Miscellaneous Account");
                                                              END;

                                                   CaptionML=ENU=Miscellaneous Account (PO-Cost) }
    { 889 ;   ;Prod.P.Grp. Damage PO-Cst;Code10   ;TableRelation="Gen. Product Posting Group";
                                                   OnValidate=BEGIN
                                                                IF xRec."Prod.P.Grp. Damage PO-Cst" <> "Prod.P.Grp. Damage PO-Cst" THEN
                                                                  IF GenProdPostingGroup.ValidateVatProdPostingGroup(GenProdPostingGroup,"Prod.P.Grp. Damage PO-Cst") THEN
                                                                    VALIDATE("VAT-Prod.P.Grp. Damage PO-Cst",GenProdPostingGroup."Def. VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=ENU=Product Posting Group Damage (PO-Cost) }
    { 890 ;   ;VAT-Prod.P.Grp. Damage PO-Cst;Code10;
                                                   TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT-Product Post.Gr. Damage (PO-Cost) }
    { 891 ;   ;Damage Account PO-Cst;Code20       ;TableRelation="G/L Account" WHERE (Direct Posting=CONST(No),
                                                                                      WIP Account=CONST(No));
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Damage Account");
                                                              END;

                                                   CaptionML=ENU=Damage Account (PO-Cost) }
    { 900 ;   ;Item with Cost Price;Boolean       ;CaptionML=ENU=Item with Cost Price for Projects }
    { 920 ;   ;Default Gen. Bus.Posting Group;Code10;
                                                   TableRelation="Gen. Business Posting Group";
                                                   OnValidate=VAR
                                                                GenBusPostingGrp@1210190000 : Record 250;
                                                              BEGIN
                                                                //mg, 09-03-11: M25508
                                                                IF xRec."Default Gen. Bus.Posting Group" <> "Default Gen. Bus.Posting Group" THEN
                                                                  IF GenBusPostingGrp.ValidateVatBusPostingGroup(GenBusPostingGrp,"Default Gen. Bus.Posting Group") THEN
                                                                    VALIDATE("Default VAT Bus.Posting Group", GenBusPostingGrp."Def. VAT Bus. Posting Group");
                                                              END;

                                                   CaptionML=ENU=Default Gen. Bus. Posting Group }
    { 930 ;   ;Default VAT Bus.Posting Group;Code10;
                                                   TableRelation="VAT Business Posting Group";
                                                   CaptionML=ENU=Default VAT Bus. Posting Group }
    { 935 ;   ;Start Numbering per Plant Type;Option;
                                                   OnValidate=BEGIN
                                                                IF "Start Numbering per Plant Type" = "Start Numbering per Plant Type"::No THEN
                                                                  "Start Number Plant Number" := '';

                                                                IF (xRec."Start Numbering per Plant Type" <> "Start Numbering per Plant Type"::No) AND
                                                                  (Rec."Start Numbering per Plant Type" <> "Start Numbering per Plant Type"::No) THEN BEGIN
                                                                  IF CONFIRM(Text010, TRUE) THEN
                                                                    ClearLastUsedNumbersPlantType();
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Start Numbering per Plant Type;
                                                   OptionCaptionML=ENU=No,Yes,Yes including Company Number;
                                                   OptionString=No,Yes,Yes including Company Number }
    { 940 ;   ;Start Number Plant Number;Code10   ;OnValidate=BEGIN
                                                                IF "Start Numbering per Plant Type" = "Start Numbering per Plant Type"::No THEN
                                                                  TESTFIELD("Start Numbering per Plant Type");

                                                                IF (xRec."Start Number Plant Number" <> "Start Number Plant Number") AND
                                                                  (xRec."Start Number Plant Number" <> '') THEN BEGIN
                                                                  IF CONFIRM(Text010, TRUE) THEN
                                                                    ClearLastUsedNumbersPlantType();
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Start Number Plant Number;
                                                   CharAllowed=0123456789 }
    { 945 ;   ;Length Plant No. in Inspec.No.;Integer;
                                                   CaptionML=ENU=Length Plant No. in Inspection No.;
                                                   MinValue=0 }
    { 950 ;   ;Component Fiscal Value Car;Code20  ;CaptionML=ENU=Component Fiscal Value Car;
                                                   Description=Mercash Component }
    { 9001;   ;Comment CP Order    ;Boolean       ;OnValidate=VAR
                                                                lvText9001@1100485000 : TextConst 'ENU=Only allowed/possible in combination with customization for a plant website''. Are you sure?';
                                                              BEGIN
                                                                //* Dit veld staat alleen bij BNBM in maatwerk form 'Materieelinstellingen BNBM' (bij alle andere klanten moet deze uit staan).
                                                                //* CP was 'Commerce Portal' (for interface website) granule not exist anymore. So now for customization with a website (not only BNBM).
                                                                IF "Comment CP Order" THEN BEGIN
                                                                  IF NOT CONFIRM(lvText9001, FALSE) THEN
                                                                    "Comment CP Order" := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Comment Website Order;
                                                   Description=Customer specific }
    { 9002;   ;CP Item Transport   ;Code20        ;TableRelation=Item;
                                                   OnValidate=VAR
                                                                lvText9001@1100485000 : TextConst 'ENU=Only allowed/possible in combination with customization for a plant website''. Are you sure?';
                                                              BEGIN
                                                                //* Dit veld staat alleen bij BNBM in maatwerk form 'Materieelinstellingen BNBM' (bij alle andere klanten moet deze leeg zijn).
                                                                //* CP was 'Commerce Portal' (for interface website) granule not exist anymore. So now for customization with a website.
                                                                IF ("CP Item Transport" <> '') THEN BEGIN
                                                                  IF NOT CONFIRM(lvText9001, FALSE) THEN
                                                                    "CP Item Transport" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=CP Item Transport;
                                                   Description=BNBM specific }
    { 9003;   ;Def. Transfer PO    ;Option        ;OnValidate=BEGIN
                                                                //* See call 22454 (Dura Vermeer)
                                                                //* Hidden setup, it is not allowed to add this fielld to the form 'Plant Setup' (F11012550)!
                                                              END;

                                                   CaptionML=ENU=Def. Transfer PO;
                                                   OptionCaptionML=ENU=No,Yes;
                                                   OptionString=No,Yes;
                                                   Description=Dura Vermeer Specific (22454) }
    { 9004;   ;Posting on Unique Plant No.;Boolean;CaptionML=ENU="Required to Posting on Unique Plant No. " }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GenProdPostingGroup@11012000 : Record 251;
      Text000@1100485000 : TextConst 'ENU=Only available in de granule''Plant Extended''.';
      Text001@1100485001 : TextConst 'ENU=Company %1 is no Archive Company';
      Text002@1100485002 : TextConst 'ENU=Note: The method ''%1'' is only suitable when rates on Plant Type level are used.';
      Text003@1100485003 : TextConst 'ENU="There are already %1 rates present on Plant No. level. Are you sure you want to use this method? "';
      Text004@1100485004 : TextConst 'ENU="%1 ''%2'' is already present on %3 rates, this rate component may be used as a rate component by rate. Are yoy sure? "';
      Text005@1100485005 : TextConst 'ENU=Delete this rate component on the rates!';
      Text006@1100485006 : TextConst 'ENU="The method ''%1'' is only allowed when Day Rates are used. There are %1 locations with a Rate Type unequal to ''Day''. "';
      Text007@1100485007 : TextConst 'ENU=''%1'' may be at most 10 if ''%2'' is on.';
      Text008@1100485008 : TextConst 'ENU=''%1'' must be greater than ''%2''.';
      Text009@1100485009 : TextConst 'ENU=''%1'' must be less than ''%2''.';
      Text010@1210190001 : TextConst 'ENU=Due to this change all last used ''Plant Numbers'' in the table ''Plant Type'' will be cleared. Are you sure ?';
      gPlantCompany@1100409000 : Text[30];

    LOCAL PROCEDURE CheckGLAcc@2(AccNo@11012000 : Code[20]);
    VAR
      GLAcc@11012001 : Record 15;
    BEGIN
      IF AccNo <> '' THEN BEGIN
        GLAcc.GET(AccNo);
        GLAcc.CheckGLAcc;
      END;
    END;

    PROCEDURE CheckPostInvoiceProposalViaIC@1100485000(ICompanyIC@1100485000 : Text[30]) : Boolean;
    VAR
      lvInvPropICCompRec@1100485001 : Record 11012549;
    BEGIN
      CASE "Post Invoice Proposals via IC" OF
        "Post Invoice Proposals via IC"::Yes:
          EXIT(TRUE);
        "Post Invoice Proposals via IC"::Specific:
          IF lvInvPropICCompRec.GET(ICompanyIC) THEN
            EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    PROCEDURE GetOrderDateLowerLimit@1100525000(IPlantSetupRec@1100525001 : Record 11012550) : Date;
    VAR
      lvLimitDate@1100525000 : Date;
    BEGIN
      IF FORMAT(IPlantSetupRec."Order Date Lower Limit") = '' THEN
        lvLimitDate := DMY2DATE(1, 1, DATE2DMY(TODAY,3)-5)
      ELSE BEGIN
        lvLimitDate := CALCDATE('-'+FORMAT(IPlantSetupRec."Order Date Lower Limit"), TODAY);
        IF lvLimitDate > TODAY THEN
          IPlantSetupRec.FIELDERROR("Order Date Lower Limit");
      END;
      EXIT(lvLimitDate);
    END;

    PROCEDURE GetOrderDateUpperLimit@1100525001(IPlantSetupRec@1100525001 : Record 11012550) : Date;
    VAR
      lvLimitDate@1100525000 : Date;
    BEGIN
      IF FORMAT(IPlantSetupRec."Order Date Upper Limit") = '' THEN
        lvLimitDate := DMY2DATE(31, 12, DATE2DMY(TODAY,3)+5)
      ELSE BEGIN
        lvLimitDate := CALCDATE(IPlantSetupRec."Order Date Upper Limit", TODAY);
        IF lvLimitDate < TODAY THEN
          IPlantSetupRec.FIELDERROR("Order Date Upper Limit");
      END;
      EXIT(lvLimitDate);
    END;

    PROCEDURE GetShipToLocation@1100526000() : Code[20];
    VAR
      PlantSetupDefLocations@1100526000 : Record 11012652;
    BEGIN
      IF GetLocationsSetup(PlantSetupDefLocations) THEN BEGIN
        IF PlantSetupDefLocations."Ship To Location" <> '' THEN
          EXIT(PlantSetupDefLocations."Ship To Location")
      END;
      EXIT("Ship To Location");
    END;

    PROCEDURE GetRentalDepot@1100526001() : Code[20];
    VAR
      PlantSetupDefLocations@1100526000 : Record 11012652;
    BEGIN
      IF GetLocationsSetup(PlantSetupDefLocations) THEN BEGIN
        IF PlantSetupDefLocations."Rental Depot" <> '' THEN
          EXIT(PlantSetupDefLocations."Rental Depot")
      END;
      EXIT("Rental Depot");
    END;

    PROCEDURE GetReturnDepot@1100526002() : Code[20];
    VAR
      PlantSetupDefLocations@1100526000 : Record 11012652;
    BEGIN
      IF GetLocationsSetup(PlantSetupDefLocations) THEN BEGIN
        IF PlantSetupDefLocations."Return Depot" <> '' THEN
          EXIT(PlantSetupDefLocations."Return Depot")
      END;
      EXIT("Return Depot");
    END;

    PROCEDURE GetReturnDepotExternalPlant@1100529000() : Code[20];
    VAR
      PlantSetupDefLocations@1100526000 : Record 11012652;
    BEGIN
      //DP00241 (24932)
      IF GetLocationsSetup(PlantSetupDefLocations) THEN BEGIN
        IF PlantSetupDefLocations."Return Depot External Plant" <> '' THEN
          EXIT(PlantSetupDefLocations."Return Depot External Plant")
      END;
      EXIT('');  //Empty, is not a field in the plant setup
    END;

    PROCEDURE GetDefaultRepairLocation@1100526003() : Code[20];
    VAR
      PlantSetupDefLocations@1100526000 : Record 11012652;
    BEGIN
      IF GetLocationsSetup(PlantSetupDefLocations) THEN BEGIN
        IF PlantSetupDefLocations."Default Repair Location" <> '' THEN
          EXIT(PlantSetupDefLocations."Default Repair Location")
      END;
      EXIT("Default Repair Location");
    END;

    PROCEDURE GetDefaultExitLocation@1100526004() : Code[20];
    VAR
      PlantSetupDefLocations@1100526000 : Record 11012652;
    BEGIN
      IF GetLocationsSetup(PlantSetupDefLocations) THEN BEGIN
        IF PlantSetupDefLocations."Default Exit Location" <> '' THEN
         EXIT(PlantSetupDefLocations."Default Exit Location")
      END;
      EXIT("Default Exit Location");
    END;

    LOCAL PROCEDURE GetLocationsSetup@1100526005(VAR PlantSetupDefLocations@1100526000 : Record 11012652) : Boolean;
    VAR
      UserSetup@1210190000 : Record 91;
      DepartmentAuthorizObject@1100526002 : Record 11012466;
      DepartmentAuthorizationMgt@1100526001 : Codeunit 11012783;
    BEGIN
      IF DepartmentAuthorizObject.READPERMISSION THEN
        IF DepartmentAuthorizationMgt.AuthorizationActive THEN BEGIN
          //*23594.so  Do not use function because there MainTableID is used (called here MainTableID is 0)
          //DepartmentAuthorizationMgt.SetDepartmentCodeUser(PlantSetupDefLocations."Department Code");
          //EXIT(PlantSetupDefLocations.FIND);
          //*23594.eo
          //*23594.sn
          IF UserSetup.GET(USERID) THEN BEGIN
            IF UserSetup."Department Code" <> '' THEN BEGIN
              IF gPlantCompany <> '' THEN
                PlantSetupDefLocations.CHANGECOMPANY(gPlantCompany);  //*T001104.n
              IF PlantSetupDefLocations.GET(UserSetup."Department Code") THEN
                EXIT(TRUE)
            END;
          END;
          //*23594.en
        END;

      EXIT(FALSE);
    END;

    PROCEDURE ClearDefaultDeptLocations@1100526006();
    VAR
      PlantSetupDefLocations@1100526000 : Record 11012652;
    BEGIN
      PlantSetupDefLocations.MODIFYALL("Default Repair Location", '');
      PlantSetupDefLocations.MODIFYALL("Default Exit Location", '');
    END;

    PROCEDURE ClearLastUsedNumbersPlantType@1210190001();
    VAR
      PlantType@1210190000 : Record 11012551;
    BEGIN
      PlantType.MODIFYALL("Last Used Plant Number", '');
    END;

    PROCEDURE SetPlantCompany@1100409000(PlantCompany@1100409000 : Text[30]);
    BEGIN
      //*T001104
      gPlantCompany := PlantCompany;
      IF gPlantCompany = COMPANYNAME THEN
        gPlantCompany := '';
    END;

    PROCEDURE CheckElementMandatory@1100525002(PlantLocation@1100525000 : Code[20];Element@1100525006 : Code[20];PlantCompany@1100525007 : Text[30]) : Boolean;
    VAR
      PlantSetup@1100525003 : Record 11012550;
      PlantLoc@1100525001 : Record 11012554;
      Proj@1100525002 : Record 11072003;
    BEGIN
      //*C004558
      IF (PlantLocation = '') OR (Element <> '') THEN
        EXIT(TRUE);

      IF PlantCompany <> '' THEN BEGIN
        PlantSetup.CHANGECOMPANY(PlantCompany);
        PlantLoc.CHANGECOMPANY(PlantCompany);
      END;
      PlantSetup.GET;
      IF NOT PlantSetup."Plant - Element Mandatory" THEN
        EXIT(TRUE);

      IF NOT PlantLoc.GET(PlantLocation) THEN
        EXIT(TRUE);
      IF (PlantLoc."Project No." = '') OR (PlantLoc.Depot) THEN
        EXIT(TRUE);
      IF PlantLoc."Company Name" <> '' THEN
        Proj.CHANGECOMPANY(PlantLoc."Company Name")
      ELSE BEGIN
        IF PlantCompany <> '' THEN
          Proj.CHANGECOMPANY(PlantCompany);
      END;

      IF NOT Proj.GET(PlantLoc."Project No.") THEN
        EXIT(TRUE);
      IF NOT Proj."Posting Element Mandatory" THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

