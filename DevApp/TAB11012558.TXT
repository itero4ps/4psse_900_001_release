OBJECT Table 11012558 Plant Order Cost Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               GetOrderHeader;
               OrderRec.TESTFIELD(Posted,FALSE);
               IF OrderRec.Type = OrderRec.Type::"Negative Inventory Correction" THEN
                 ERROR(Text001, OrderRec.FIELDCAPTION(Type), OrderRec.Type);

               "Purchase Order No." := '';
               "Purchase Order Line No." := 0;
               "Location Related" := FALSE;
             END;

    OnModify=BEGIN
               GetOrderHeader;
               OrderRec.TESTFIELD(Posted,FALSE);
             END;

    OnDelete=BEGIN
               GetOrderHeader;
               OrderRec.TESTFIELD(Posted,FALSE);
             END;

    OnRename=BEGIN
               GetOrderHeader;
               OrderRec.TESTFIELD(Posted,FALSE);
             END;

    CaptionML=ENU=Plant Order Cost Line;
    DrillDownPageID=Page11125927;
  }
  FIELDS
  {
    { 10  ;   ;Plant Order No.     ;Code20        ;TableRelation="Plant Order".No.;
                                                   CaptionML=ENU=Plant Order No. }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 30  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                TempOrderLine := Rec;
                                                                INIT;
                                                                Type := TempOrderLine.Type;
                                                                Date := TempOrderLine.Date;

                                                                IF Type > Type::Text THEN BEGIN
                                                                  DimValRec.SETFILTER("Global Dimension No.", '2');
                                                                  DimValRec.SETRANGE(Plant, Type);
                                                                  IF DimValRec.COUNT = 1 THEN BEGIN
                                                                    DimValRec.FIND('-');
                                                                    VALIDATE("No.", DimValRec.Code);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Text,Hours,Transport,Sundry Costs,Damage;
                                                   OptionString=Text,Hours,Transport,Sundry Costs,Damage }
    { 40  ;   ;No.                 ;Code10        ;TableRelation=IF (Type=CONST(Text)) "Standard Text"
                                                                 ELSE IF (Type=CONST(Hours)) "Dimension Value".Code WHERE (Plant=CONST(Hours),
                                                                                                                           Global Dimension No.=CONST(2))
                                                                                                                           ELSE IF (Type=CONST(Transport)) "Dimension Value".Code WHERE (Plant=CONST(Transport),
                                                                                                                                                                                         Global Dimension No.=CONST(2))
                                                                                                                                                                                         ELSE IF (Type=CONST(Sundry Costs)) "Dimension Value".Code WHERE (Plant=CONST(Sundry),
                                                                                                                                                                                                                                                          Global Dimension No.=CONST(2))
                                                                                                                                                                                                                                                          ELSE IF (Type=CONST(Damage)) "Dimension Value".Code WHERE (Plant=CONST(Damage),
                                                                                                                                                                                                                                                                                                                     Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                IF "No." <> '' THEN
                                                                  CASE Type OF
                                                                    Type::Text:
                                                                      BEGIN
                                                                        IF "No." <> '' THEN BEGIN
                                                                          StandardText.GET("No.");
                                                                          Description := StandardText.Description;
                                                                        END;
                                                                      END;
                                                                    ELSE BEGIN
                                                                      DimMgt.GetDimValueRec(2,"No.",DimValRec,TRUE,'');
                                                                      IF (NOT PlantBasedDamage()) OR ("Plant Type" = '') THEN BEGIN
                                                                        Description := DimValRec.Name;
                                                                        "Unit of Measure" := DimValRec."Unit of Measure";
                                                                        VALIDATE(Price,DimValRec."Sales Price");
                                                                      END;
                                                                    END;
                                                                  END;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 50  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 51  ;   ;Description 2       ;Text50        ;OnValidate=BEGIN
                                                                IF ("Description 2" <> '') AND (Type = Type::Text) THEN
                                                                  FIELDERROR(Type);
                                                              END;

                                                   CaptionML=ENU=Description 2 }
    { 60  ;   ;Date                ;Date          ;CaptionML=ENU=Date }
    { 70  ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure";
                                                   OnValidate=BEGIN
                                                                IF ("Unit of Measure" <> '') AND (Type = Type::Text) THEN
                                                                  FIELDERROR("Unit of Measure");
                                                              END;

                                                   CaptionML=ENU=Unit of Measure }
    { 80  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                IF (Quantity <> 0) AND (Type = Type::Text) THEN
                                                                  FIELDERROR(Quantity);

                                                                VALIDATE(Price);
                                                              END;

                                                   CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 90  ;   ;Price               ;Decimal       ;OnValidate=BEGIN
                                                                IF (Price <> 0) AND (Type = Type::Text) THEN
                                                                  FIELDERROR(Price);

                                                                GLSetup.GET;
                                                                Amount := ROUND(Quantity * Price,GLSetup."Amount Rounding Precision");
                                                              END;

                                                   CaptionML=ENU=Price;
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 100 ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                IF (Amount <> 0) THEN BEGIN
                                                                  IF (Type = Type::Text) THEN
                                                                    FIELDERROR(Amount);
                                                                  TESTFIELD(Quantity);
                                                                END;

                                                                IF Quantity <> 0 THEN BEGIN
                                                                  Price := Amount / Quantity
                                                                END ELSE
                                                                  Price := Amount;

                                                                GLSetup.GET;
                                                                Price := ROUND(Price,GLSetup."Unit-Amount Rounding Precision")
                                                              END;

                                                   CaptionML=ENU=Amount;
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 110 ;   ;Plant Type          ;Code20        ;TableRelation=IF (Type=FILTER(<>Text)) "Plant Type";
                                                   OnValidate=BEGIN
                                                                IF ("Plant Type" <> '') AND (Type = Type::Text) AND ("Plant Order Line No." = 0) THEN
                                                                  FIELDERROR(Type);

                                                                CALCFIELDS(Bulk);
                                                                IF "Plant Type" <> xRec."Plant Type" THEN
                                                                  "Plant No." := '';

                                                                IF PlantBasedDamage() THEN BEGIN
                                                                  IF ("Plant Type" <> '') THEN BEGIN
                                                                    PlanttypeRec.GET("Plant Type");
                                                                    "Unit of Measure" := PlanttypeRec."Unit of Measure";
                                                                    PlantSetup.GET;
                                                                    IF (PlantSetup."Default % Purch. Price Damage" > 0) THEN
                                                                      VALIDATE(Price, ROUND(PlantSetup."Default % Purch. Price Damage" * PlanttypeRec."Current Price" /100));
                                                                    GetPlantDescription;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Plant Type }
    { 120 ;   ;Plant No.           ;Code10        ;TableRelation="Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   OnValidate=BEGIN
                                                                IF "Plant No." = '' THEN
                                                                  EXIT;

                                                                TESTFIELD("Plant Type");

                                                                CALCFIELDS(Bulk);
                                                                PlantNoRec.GET("Plant Type","Plant No.");
                                                                IF Bulk AND (PlantNoRec."Stock No." <> "Plant No.") THEN
                                                                  FIELDERROR("Plant No.", Text002);

                                                                IF ("Plant No." > '0') THEN
                                                                  GetPlantDescription;
                                                              END;

                                                   CaptionML=ENU=Plant No. }
    { 130 ;   ;Bulk                ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type".Bulk WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=ENU=Bulk;
                                                   Editable=No }
    { 140 ;   ;Plant Order Line No.;Integer       ;TableRelation="Plant Order Line"."Line No." WHERE (Plant Order No.=FIELD(Plant Order No.));
                                                   CaptionML=ENU=Plant Order Line No.;
                                                   Editable=No }
    { 150 ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=ENU=Vendor No. }
    { 160 ;   ;Purchase Order No.  ;Code20        ;TableRelation="Purchase Header".No. WHERE (Document Type=CONST(Order));
                                                   OnLookup=BEGIN
                                                              OrderRec.ShowPurchaseOrders("Plant Order No.", TRUE, "Purchase Order No.");
                                                            END;

                                                   CaptionML=ENU=Purchase Order;
                                                   Editable=No }
    { 161 ;   ;Purchase Order Line No.;Integer    ;TableRelation="Purchase Line"."Line No." WHERE (Document Type=CONST(Order),
                                                                                                   Document No.=FIELD(Purchase Order No.));
                                                   CaptionML=ENU=Purch. Order Line No.;
                                                   Editable=No }
    { 170 ;   ;Location Related    ;Boolean       ;CaptionML=ENU=Location Related;
                                                   Editable=No }
    { 200 ;   ;Element             ;Code20        ;OnValidate=VAR
                                                                lvLocation@1100525000 : Code[20];
                                                              BEGIN
                                                                IF Element = '' THEN
                                                                  EXIT;
                                                                IF Type = Type::Text THEN
                                                                  FIELDERROR(Type);
                                                                GetOrderHeader();
                                                                IF OrderRec.Type <> OrderRec.Type::Removal THEN
                                                                  lvLocation := OrderRec."To Location"
                                                                ELSE
                                                                  lvLocation := OrderRec."From Location";
                                                                CASE OrderRec.Type OF
                                                                  OrderRec.Type::Arrival,
                                                                  OrderRec.Type::"Other Transfers":
                                                                    OrderRec.TESTFIELD("To Location");
                                                                  OrderRec.Type::Removal:
                                                                    OrderRec.TESTFIELD("From Location");
                                                                  ELSE
                                                                    OrderRec.FIELDERROR(Type);
                                                                END;
                                                                PlantElementMgtCU.OnValidateElement(lvLocation, Element, '', FALSE);
                                                              END;

                                                   OnLookup=VAR
                                                              lvEditable@1100525001 : Boolean;
                                                              lvNewElement@1100525000 : Code[20];
                                                              lvLocation@1100525002 : Code[20];
                                                            BEGIN
                                                              GetOrderHeader();
                                                              IF OrderRec.Type <> OrderRec.Type::Removal THEN
                                                                lvLocation := OrderRec."To Location"
                                                              ELSE
                                                                lvLocation := OrderRec."From Location";
                                                              IF (OrderRec.Type IN [OrderRec.Type::Arrival, OrderRec.Type::Removal, OrderRec.Type::"Other Transfers"]) AND
                                                                 (NOT OrderRec.Posted) AND (Type <> Type::Text)
                                                              THEN
                                                                lvEditable := TRUE;
                                                              lvNewElement := PlantElementMgtCU.OnLookupElement(lvLocation, Element, '', lvEditable);
                                                              IF (lvNewElement <> '') AND (lvNewElement <> Element) THEN
                                                                VALIDATE(Element, lvNewElement);
                                                            END;

                                                   CaptionML=ENU=Element }
    { 11130000;;Total Hours        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Order Cost Line".Amount WHERE (Plant Order No.=FIELD(Plant Order No.),
                                                                                                         Type=CONST(Hours)));
                                                   CaptionML=ENU=Total Hours;
                                                   Editable=No }
    { 11130001;;Total Transport    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Order Cost Line".Amount WHERE (Plant Order No.=FIELD(Plant Order No.),
                                                                                                         Type=CONST(Transport)));
                                                   CaptionML=ENU=Total Transport;
                                                   Editable=No }
    { 11130002;;Total Sundry       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Order Cost Line".Amount WHERE (Plant Order No.=FIELD(Plant Order No.),
                                                                                                         Type=CONST(Sundry Costs)));
                                                   CaptionML=ENU=Total Sundry;
                                                   Editable=No }
    { 11130003;;Total Damage       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Order Cost Line".Amount WHERE (Plant Order No.=FIELD(Plant Order No.),
                                                                                                         Type=CONST(Damage)));
                                                   CaptionML=ENU=Total Damage;
                                                   Editable=No }
    { 11130004;;Total Cost         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Order Cost Line".Amount WHERE (Plant Order No.=FIELD(Plant Order No.)));
                                                   CaptionML=ENU=Total Cost }
  }
  KEYS
  {
    {    ;Plant Order No.,Line No.                ;Clustered=Yes }
    {    ;Plant Order No.,Type                    ;SumIndexFields=Amount }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GLSetup@11012000 : Record 98;
      PlantSetup@11012001 : Record 11012550;
      OrderRec@11012002 : Record 11012556;
      StandardText@11012003 : Record 7;
      DimValRec@11012004 : Record 349;
      TempOrderLine@11012005 : Record 11012558;
      PlanttypeRec@1210190002 : Record 11012551;
      PlantNoRec@1210190001 : Record 11012552;
      DimMgt@1210190000 : Codeunit 408;
      Text001@1100485000 : TextConst 'ENU=Costs can not be used when %1 is %2.';
      Text002@1100485001 : TextConst 'ENU=filled is not allowed for bulk plant with Plant No. ''0'' in the inventory';
      PlantElementMgtCU@1100525000 : Codeunit 11012582;
      gSkipReadPORecord@1100409000 : Boolean;

    PROCEDURE SetPlantOrderRecord@1100409000(PlantOrder@1100409000 : Record 11012556);
    BEGIN
      //DP00671
      //Now also location related cost lines (in C11012581), these can be inserted in OnInsert of PO-table.
      //Record in PO-table then not yet inserted.
      gSkipReadPORecord := TRUE;
      OrderRec := PlantOrder;
    END;

    PROCEDURE InitRecord@6();
    BEGIN
      //DP00671.o
      //IF OrderRec.GET("Plant Order No.") THEN
      //  Date := OrderRec."Transfer Date";

      //DP00671.n
      IF NOT gSkipReadPORecord THEN BEGIN
        IF NOT OrderRec.GET("Plant Order No.") THEN
          EXIT;
      END;
      Date := OrderRec."Transfer Date";
    END;

    PROCEDURE GetOrderHeader@5();
    BEGIN
      TESTFIELD("Plant Order No.");
      //IF ("Plant Order No." <> OrderRec."No.") THEN
      IF NOT gSkipReadPORecord THEN  //DP00671.n
        OrderRec.GET("Plant Order No.");
    END;

    PROCEDURE GetPlantDescription@4();
    BEGIN
      IF NOT PlantBasedDamage() THEN
        EXIT;

      PlantNoRec.GetPlantDescription("Plant Type","Plant No.",Description);
    END;

    PROCEDURE PlantBasedDamage@1100525003() : Boolean;
    BEGIN
      IF Type = Type::Damage THEN BEGIN
        PlantSetup.GET;
        IF PlantSetup."Damage Cost PO Based on" = PlantSetup."Damage Cost PO Based on"::Plant THEN
          EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

