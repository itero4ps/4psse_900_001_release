OBJECT Table 11012559 Exit Order
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 PlantSetup.GET;
                 PlantSetup.TESTFIELD("Exit-Order Nos.");
                 NoSeriesMgt.InitSeries(PlantSetup."Exit-Order Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               "Exit-date" := WORKDATE;
               Posted := FALSE;
               "Created by" := USERID;

               //**4PS Generated Code. Do Not Change.sn05
               DPA_OnInsert;
               //**4PS Generated Code.en05
             END;

    OnModify=BEGIN
               TESTFIELD(Posted,FALSE);
             END;

    OnDelete=VAR
               lvExitBulkPlantRec@1100485000 : Record 11012592;
               lvRentalRemovalLineRec@1100485001 : Record 11012789;
               lvSalesPlantOrderRelRec@1100485002 : Record 11012787;
               OrderCont@1100409000 : Record 11012536;
             BEGIN
               IF NOT DeleteAllowed THEN
                 ERROR(Text000,TABLECAPTION,"No.");

               OrderLineRec.RESET;
               OrderLineRec.SETRANGE("Exit-order No.","No.");
               //OrderLineRec.DELETEALL;  //DP00183.o
               //DP00183.sn
               IF OrderLineRec.FINDSET(TRUE,FALSE) THEN BEGIN
                 REPEAT
                   OrderLineRec.DeleteLinkWithPlantOrderLine();
                   OrderLineRec.DeleteDocumentLinks();
                   OrderLineRec.DeleteCommentLines();
                   OrderLineRec.DELETE;
                 UNTIL OrderLineRec.NEXT = 0;
               END;
               DeleteDocumentLinks();
               DeleteCommentLines();
               //DP00183.en

               OrderCostLineRec.RESET;
               OrderCostLineRec.SETRANGE("Exit-order No.","No.");
               OrderCostLineRec.DELETEALL;

               lvExitBulkPlantRec.RESET;
               lvExitBulkPlantRec.SETRANGE("Exit-order No.","No.");
               lvExitBulkPlantRec.DELETEALL;

               //*C020580
               OrderCont.SETRANGE(Type, OrderCont.Type::ExitOrder);
               OrderCont.SETRANGE("Order No.", "No.");
               OrderCont.DELETEALL;

               lvSalesPlantOrderRelRec.SETCURRENTKEY(Level,"Plant Document No.");
               lvSalesPlantOrderRelRec.SETRANGE(Level, lvSalesPlantOrderRelRec.Level::ExitOrder);
               lvSalesPlantOrderRelRec.SETRANGE("Plant Document No.", "No.");
               IF lvSalesPlantOrderRelRec.FINDFIRST THEN BEGIN
                 IF (NOT Posted) AND (Type = Type::Sales) THEN BEGIN
                   lvRentalRemovalLineRec.RESET;
                   lvRentalRemovalLineRec.CHANGECOMPANY(lvSalesPlantOrderRelRec."Sales Company Name");
                   lvRentalRemovalLineRec.SETRANGE("Removal Order No.", "No.");
                   lvRentalRemovalLineRec.SETRANGE("Removal Order Type", lvRentalRemovalLineRec."Removal Order Type"::"Exit-order");
                   IF lvRentalRemovalLineRec.FINDSET(TRUE,FALSE) THEN
                     REPEAT
                       lvRentalRemovalLineRec.Status := lvRentalRemovalLineRec.Status::Open;
                       lvRentalRemovalLineRec."Removal Order No." := '';
                       lvRentalRemovalLineRec.MODIFY;
                     UNTIL lvRentalRemovalLineRec.NEXT = 0;
                 END;
                 lvSalesPlantOrderRelRec.DELETEALL;
               END;
             END;

    OnRename=VAR
               OrderLine@1100529000 : Record 11012560;
               OrderLine2@1100529001 : Record 11012560;
             BEGIN
               //DP00183.sn
               MoveDocumentLinks(xRec, Rec, FALSE);
               OrderLine.SETRANGE("Exit-order No.", xRec."No.");
               IF OrderLine.FINDSET THEN BEGIN
                 REPEAT
                   OrderLine2 := OrderLine;
                   OrderLine2."Exit-order No." := "No.";
                   OrderLine.ChangeLinkWithPlantOrderLine(OrderLine, OrderLine2);
                   OrderLine.MoveDocumentLinks(OrderLine, OrderLine2, FALSE);
                 UNTIL OrderLine.NEXT = 0;
               END;
               //DP00183.en
             END;

    CaptionML=ENU=Exit Order;
    PasteIsValid=No;
    LookupPageID=Page11012567;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  PlantSetup.GET;
                                                                  NoSeriesMgt.TestManual(PlantSetup."Exit-Order Nos.");
                                                                  "Ship-to Post Code" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 20  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF ((Type = Type::External) AND (xRec.Type <> Type::External)) OR
                                                                   ((Type <> Type::External) AND (xRec.Type = Type::External))
                                                                THEN
                                                                  VALIDATE("Ship-to Code",'');
                                                              END;

                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Sales,Missing,Scrap,External;
                                                   OptionString=Sales,Missing,Scrap,External }
    { 30  ;   ;Location            ;Code20        ;TableRelation="Plant Location";
                                                   OnValidate=BEGIN
                                                                IF Location <> '' THEN BEGIN
                                                                  CheckBlock(FALSE);
                                                                  "Customer No." := PlantLocRec."Customer No.";
                                                                  IF PlantLocRec."Customer No." = '' THEN BEGIN
                                                                    Name := PlantLocRec.Description;
                                                                    "Name 2" := PlantLocRec."Description 2";
                                                                    Address := PlantLocRec.Address;
                                                                    "Address 2" := PlantLocRec."Address 2";
                                                                    City := PlantLocRec.City;
                                                                    "Post Code" := PlantLocRec."Post Code";
                                                                    County := PlantLocRec.County;
                                                                    "Country/Region Code" := PlantLocRec."Country/Region Code";
                                                                    Contact := PlantLocRec.Contact;
                                                                  END;
                                                                END;
                                                                VALIDATE("Customer No.");
                                                              END;

                                                   CaptionML=ENU=Location }
    { 40  ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   OnValidate=BEGIN
                                                                IF "Customer No." <> '' THEN BEGIN
                                                                  CheckBlock(FALSE);
                                                                  Name := Customer.Name;
                                                                  "Name 2" := Customer."Name 2";
                                                                  Address := Customer.Address;
                                                                  "Address 2" := Customer."Address 2";
                                                                  City := Customer.City;
                                                                  "Post Code" := Customer."Post Code";
                                                                  County := Customer.County;
                                                                  "Country/Region Code" := Customer."Country/Region Code";
                                                                  Contact := Customer.Contact;
                                                                END ELSE
                                                                  Customer.INIT;

                                                                IF Customer."Bill-to Customer No." <> '' THEN
                                                                  VALIDATE("Bill-to Customer No.",Customer."Bill-to Customer No.")
                                                                ELSE
                                                                  VALIDATE("Bill-to Customer No.","Customer No.");

                                                                VALIDATE("Ship-to Code",'');
                                                              END;

                                                   CaptionML=ENU=Customer No. }
    { 50  ;   ;Name                ;Text50        ;CaptionML=ENU=Name }
    { 60  ;   ;Name 2              ;Text50        ;CaptionML=ENU=Name 2 }
    { 70  ;   ;Address             ;Text50        ;OnValidate=VAR
                                                                lDummy@1210190000 : Text[30];
                                                              BEGIN
                                                              END;

                                                   CaptionML=ENU=Address }
    { 80  ;   ;Address 2           ;Text50        ;CaptionML=ENU=Address 2 }
    { 90  ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=City }
    { 100 ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Post Code }
    { 110 ;   ;County              ;Text30        ;CaptionML=ENU=County }
    { 120 ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Country/Region Code }
    { 125 ;   ;Department Code     ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1, "Department Code");
                                                              END;

                                                   CaptionML=ENU=Department Code }
    { 130 ;   ;Contact             ;Text50        ;CaptionML=ENU=Contact }
    { 140 ;   ;Ship-to Code        ;Code10        ;TableRelation=IF (Type=FILTER(<>External)) "Ship-to Address".Code WHERE (Customer No.=FIELD(Customer No.),
                                                                                                                            Shipping Address=CONST(Yes))
                                                                                                                            ELSE IF (Type=CONST(External)) "Order Address".Code WHERE (Vendor No.=FIELD(Vendor No.));
                                                   OnValidate=BEGIN
                                                                IF (Type = Type::External) THEN BEGIN
                                                                  IF "Ship-to Code" <> '' THEN BEGIN
                                                                    VendAddrRec.GET("Vendor No.","Ship-to Code");
                                                                    "Ship-to Name" := VendAddrRec.Name;
                                                                    "Ship-to Name 2" := VendAddrRec."Name 2";
                                                                    "Ship-to Address" := VendAddrRec.Address;
                                                                    "Ship-to Address 2" := VendAddrRec."Address 2";
                                                                    "Ship-to City" := VendAddrRec.City;
                                                                    "Ship-to Post Code" := VendAddrRec."Post Code";
                                                                    "Ship-to County" := VendAddrRec.County;
                                                                    "Ship-to Country/Region Code" := VendAddrRec."Country/Region Code";
                                                                    "Ship-to Contact" := VendAddrRec.Contact;
                                                                  END ELSE BEGIN
                                                                    IF "Vendor No." <> '' THEN BEGIN
                                                                      VendRec.GET("Vendor No.");
                                                                      "Ship-to Name" := VendRec.Name;
                                                                      "Ship-to Name 2" := VendRec."Name 2";
                                                                      "Ship-to Address" := VendRec.Address;
                                                                      "Ship-to Address 2" := VendRec."Address 2";
                                                                      "Ship-to City" := VendRec.City;
                                                                      "Ship-to Post Code" := VendRec."Post Code";
                                                                      "Ship-to County" := VendRec.County;
                                                                      "Ship-to Country/Region Code" := VendRec."Country/Region Code";
                                                                      "Ship-to Contact" := VendRec.Contact;
                                                                    END;
                                                                  END;
                                                                END ELSE BEGIN
                                                                  IF "Ship-to Code" <> '' THEN BEGIN
                                                                    ShipToAddr.GET("Customer No.","Ship-to Code");
                                                                    "Ship-to Name" := ShipToAddr.Name;
                                                                    "Ship-to Name 2" := ShipToAddr."Name 2";
                                                                    "Ship-to Address" := ShipToAddr.Address;
                                                                    "Ship-to Address 2" := ShipToAddr."Address 2";
                                                                    "Ship-to City" := ShipToAddr.City;
                                                                    "Ship-to Post Code" := ShipToAddr."Post Code";
                                                                    "Ship-to County" := ShipToAddr.County;
                                                                    "Ship-to Country/Region Code" := ShipToAddr."Country/Region Code";
                                                                    "Ship-to Contact" := ShipToAddr.Contact;
                                                                  END ELSE BEGIN
                                                                    IF Location <> '' THEN BEGIN
                                                                      PlantLocRec.GET(Location);
                                                                      "Ship-to Name" := PlantLocRec.Description;
                                                                      "Ship-to Name 2" := PlantLocRec."Description 2";
                                                                      "Ship-to Address" := PlantLocRec.Address;
                                                                      "Ship-to Address 2" := PlantLocRec."Address 2";
                                                                      "Ship-to City" := PlantLocRec.City;
                                                                      "Ship-to Post Code" := PlantLocRec."Post Code";
                                                                      "Ship-to County" := PlantLocRec.County;
                                                                      "Ship-to Country/Region Code" := PlantLocRec."Country/Region Code";
                                                                      "Ship-to Contact" := PlantLocRec.Contact;
                                                                    END ELSE BEGIN
                                                                      IF "Customer No." <> '' THEN BEGIN
                                                                        Customer.GET("Customer No.");
                                                                        "Ship-to Name" := Customer.Name;
                                                                        "Ship-to Name 2" := Customer."Name 2";
                                                                        "Ship-to Address" := Customer.Address;
                                                                        "Ship-to Address 2" := Customer."Address 2";
                                                                        "Ship-to City" := Customer.City;
                                                                        "Ship-to Post Code" := Customer."Post Code";
                                                                        "Ship-to County" := Customer.County;
                                                                        "Ship-to Country/Region Code" := Customer."Country/Region Code";
                                                                        "Ship-to Contact" := Customer.Contact;
                                                                      END;
                                                                    END;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Ship-to Code }
    { 150 ;   ;Ship-to Name        ;Text50        ;CaptionML=ENU=Ship-to Name }
    { 160 ;   ;Ship-to Name 2      ;Text50        ;CaptionML=ENU=Ship-to Name 2 }
    { 170 ;   ;Ship-to Address     ;Text50        ;OnValidate=VAR
                                                                lDummy@1210190000 : Text[30];
                                                              BEGIN
                                                              END;

                                                   CaptionML=ENU=Ship-to Address }
    { 180 ;   ;Ship-to Address 2   ;Text50        ;CaptionML=ENU=Ship-to Address 2 }
    { 190 ;   ;Ship-to City        ;Text30        ;TableRelation=IF (Ship-to Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Ship-to Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Ship-to Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(
                                                                  "Ship-to City",
                                                                  "Ship-to Post Code",
                                                                  "Ship-to County",
                                                                  "Ship-to Country/Region Code",
                                                                  (CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Ship-to City }
    { 200 ;   ;Ship-to Post Code   ;Code20        ;TableRelation=IF (Ship-to Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Ship-to Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Ship-to Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(
                                                                  "Ship-to City",
                                                                  "Ship-to Post Code",
                                                                  "Ship-to County",
                                                                  "Ship-to Country/Region Code",
                                                                  (CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Ship-to Post Code }
    { 210 ;   ;Ship-to County      ;Text30        ;CaptionML=ENU=Ship-to County }
    { 220 ;   ;Ship-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Ship-to Country/Region Code }
    { 230 ;   ;Ship-to Contact     ;Text50        ;CaptionML=ENU=Ship-to Contact }
    { 240 ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   OnValidate=BEGIN
                                                                IF "Bill-to Customer No." <> '' THEN BEGIN
                                                                  Customer.GET("Bill-to Customer No.");
                                                                  Customer.CheckBlockedCustOnDocs(Customer,1,FALSE,FALSE);
                                                                  Customer.TESTFIELD("Customer Posting Group");
                                                                  "Bill-to Name" := Customer.Name;
                                                                  "Bill-to Name 2" := Customer."Name 2";
                                                                  "Bill-to Address" := Customer.Address;
                                                                  "Bill-to Address 2" := Customer."Address 2";
                                                                  "Bill-to City" := Customer.City;
                                                                  "Bill-to Post Code" := Customer."Post Code";
                                                                  "Bill-to County" := Customer.County;
                                                                  "Bill-to Country/Region Code" := Customer."Country/Region Code";
                                                                  "Bill-to Contact" := Customer.Contact;
                                                                END ELSE
                                                                  IF "Customer No." <> '' THEN BEGIN
                                                                    Customer.GET("Customer No.");
                                                                    "Bill-to Name" := Customer.Name;
                                                                    "Bill-to Name 2" := Customer."Name 2";
                                                                    "Bill-to Address" := Customer.Address;
                                                                    "Bill-to Address 2" := Customer."Address 2";
                                                                    "Bill-to City" := Customer.City;
                                                                    "Bill-to Post Code" := Customer."Post Code";
                                                                    "Bill-to County" := Customer.County;
                                                                    "Bill-to Country/Region Code" := Customer."Country/Region Code";
                                                                    "Bill-to Contact" := Customer.Contact;
                                                                  END ELSE
                                                                    IF Location <> '' THEN BEGIN
                                                                      PlantLocRec.GET(Location);
                                                                      "Bill-to Name" := PlantLocRec.Description;
                                                                      "Bill-to Name 2" := PlantLocRec."Description 2";
                                                                      "Bill-to Address" := PlantLocRec.Address;
                                                                      "Bill-to Address 2" := PlantLocRec."Address 2";
                                                                      "Bill-to City" := PlantLocRec.City;
                                                                      "Bill-to Post Code" := PlantLocRec."Post Code";
                                                                      "Bill-to County" := PlantLocRec.County;
                                                                      "Bill-to Country/Region Code" := PlantLocRec."Country/Region Code";
                                                                      "Bill-to Contact" := PlantLocRec.Contact;
                                                                    END;
                                                              END;

                                                   CaptionML=ENU=Bill-to Customer No.;
                                                   NotBlank=Yes }
    { 250 ;   ;Bill-to Name        ;Text50        ;CaptionML=ENU=Bill-to Name }
    { 260 ;   ;Bill-to Name 2      ;Text50        ;CaptionML=ENU=Bill-to Name 2 }
    { 270 ;   ;Bill-to Address     ;Text50        ;OnValidate=VAR
                                                                lDummy@1210190000 : Text[30];
                                                              BEGIN
                                                              END;

                                                   CaptionML=ENU=Bill-to Address }
    { 280 ;   ;Bill-to Address 2   ;Text50        ;CaptionML=ENU=Bill-to Address 2 }
    { 290 ;   ;Bill-to City        ;Text30        ;TableRelation=IF (Bill-to Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Bill-to Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Bill-to Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(
                                                                  "Bill-to City",
                                                                  "Bill-to Post Code",
                                                                  "Bill-to County",
                                                                  "Bill-to Country/Region Code",
                                                                  (CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Bill-to City }
    { 300 ;   ;Bill-to Contact     ;Text50        ;CaptionML=ENU=Bill-to Contact }
    { 310 ;   ;Bill-to Post Code   ;Code20        ;TableRelation=IF (Bill-to Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Bill-to Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Bill-to Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(
                                                                  "Bill-to City",
                                                                  "Bill-to Post Code",
                                                                  "Bill-to County",
                                                                  "Bill-to Country/Region Code",
                                                                  (CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Bill-to Post Code }
    { 320 ;   ;Bill-to County      ;Text30        ;CaptionML=ENU=Bill-to County }
    { 330 ;   ;Bill-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Bill-to Country/Region Code }
    { 340 ;   ;Exit-date           ;Date          ;OnValidate=BEGIN
                                                                CheckOrderDateAllowed();

                                                                MODIFY;

                                                                OrderLineRec.RESET;
                                                                OrderLineRec.SETRANGE("Exit-order No.","No.");
                                                                OrderLineRec.SETRANGE("Exit-date",xRec."Exit-date");
                                                                OrderLineRec.MODIFYALL("Exit-date","Exit-date");

                                                                OrderCostLineRec.RESET;
                                                                OrderCostLineRec.SETRANGE("Exit-order No.","No.");
                                                                OrderCostLineRec.SETRANGE("Exit-date",xRec."Exit-date");
                                                                OrderCostLineRec.MODIFYALL("Exit-date","Exit-date");
                                                              END;

                                                   CaptionML=ENU=Exit-date }
    { 350 ;   ;Posted              ;Boolean       ;CaptionML=ENU=Posted;
                                                   Editable=No }
    { 355 ;   ;Posted by           ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Posted;
                                                   Editable=No }
    { 360 ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date;
                                                   Editable=No }
    { 370 ;   ;No. Printed         ;Integer       ;CaptionML=ENU=No. Printed;
                                                   Editable=No }
    { 380 ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                IF Type = Type::External THEN
                                                                  TESTFIELD("Vendor No.");
                                                                VALIDATE("Ship-to Code",'');
                                                              END;

                                                   CaptionML=ENU=Vendor No. }
    { 390 ;   ;Created by          ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Created by;
                                                   Editable=No }
    { 395 ;   ;Plant Quote No.     ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Quote".No. WHERE (Order Type=CONST(ExitOrder),
                                                                                               Order No.=FIELD(No.)));
                                                   CaptionML=ENU=Plant Quote No.;
                                                   Editable=No }
    { 400 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 410 ;   ;Invoiced            ;Boolean       ;CaptionML=ENU=Invoiced }
    { 420 ;   ;Invoice No.         ;Code20        ;TableRelation=IF (Invoice Status=CONST(Proposal)) "Sales Header".No. WHERE (Document Type=CONST(Invoice Proposal))
                                                                 ELSE IF (Invoice Status=CONST(Temporary)) "Sales Header".No. WHERE (Document Type=CONST(Invoice))
                                                                 ELSE IF (Invoice Status=CONST(Posted)) "Sales Invoice Header".No.;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Invoice No.;
                                                   Editable=No }
    { 430 ;   ;Invoice Status      ;Option        ;CaptionML=ENU=Invoice Status;
                                                   OptionCaptionML=ENU=,Proposal,Temporary,Posted;
                                                   OptionString=,Proposal,Temporary,Posted;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 460 ;   ;Order Plant Amount  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Exit Order Line".Amount WHERE (Exit-order No.=FIELD(No.)));
                                                   CaptionML=ENU=Plant Amount;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 470 ;   ;Order Cost Amount   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Exit Order Cost Line".Amount WHERE (Exit-order No.=FIELD(No.)));
                                                   CaptionML=ENU=Cost Amount;
                                                   Editable=No;
                                                   AutoFormatType=1 }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Invoice Status,Invoice No.               }
    {    ;Posted,Location,Invoiced,Exit-date       }
    {    ;Location                                 }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@11012009 : TextConst 'ENU=%1 %2 is not deleted.';
      Text001@11012010 : TextConst 'ENU=%1 is not invoiced yet. Do you still want to delete the %1?';
      Text002@11012011 : TextConst 'ENU=%1 is not invoiced completely. Do you still want to delete the %1?';
      PlantSetup@11012000 : Record 11012550;
      PlantLocRec@11012001 : Record 11012554;
      ExitOrderRec@11012002 : Record 11012559;
      PostCode@11012003 : Record 225;
      ShipToAddr@11012004 : Record 222;
      Customer@11012005 : Record 18;
      VendRec@1100485000 : Record 23;
      VendAddrRec@1100485001 : Record 224;
      OrderLineRec@11012006 : Record 11012560;
      OrderCostLineRec@11012007 : Record 11012561;
      NoSeriesMgt@11012008 : Codeunit 396;
      DimMgt@1100525008 : Codeunit 408;
      DPA_Management@1100000999 : Codeunit 11012783;
      SkipModify@1100528400 : Boolean;

    PROCEDURE AssistEdit@2(OldExitOrderRec@11012000 : Record 11012559) : Boolean;
    BEGIN
      WITH ExitOrderRec DO BEGIN
        ExitOrderRec := Rec;
        PlantSetup.GET;
        PlantSetup.TESTFIELD("Exit-Order Nos.");
        IF NoSeriesMgt.SelectSeries(PlantSetup."Exit-Order Nos.",OldExitOrderRec."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := ExitOrderRec;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE CheckBlock@1(Transaction@1210190000 : Boolean);
    BEGIN
      IF Location <> '' THEN BEGIN
        PlantLocRec.GET(Location);
        PlantLocRec.CheckBlock(1,FALSE,Transaction)
      END;

      IF "Customer No." <> '' THEN BEGIN
        Customer.GET("Customer No.");
        Customer.CheckBlockedCustOnDocs(Customer,1,FALSE,Transaction);
      END;
    END;

    PROCEDURE DeleteAllowed@5() : Boolean;
    BEGIN
      IF NOT Posted THEN
        EXIT(TRUE);

      IF Location <> '' THEN BEGIN
        IF NOT PlantLocRec.GET(Location) THEN
          EXIT(TRUE);

        IF PlantLocRec.Depot THEN
          EXIT(TRUE);
      END;

      IF NOT Invoiced THEN BEGIN
        IF NOT CONFIRM(STRSUBSTNO(
          Text001,
          TABLECAPTION))
        THEN
          EXIT(FALSE);
      END ELSE
        IF "Invoice Status" IN ["Invoice Status"::Proposal,"Invoice Status"::"Temporary"] THEN
          IF NOT CONFIRM(STRSUBSTNO(
            Text002,TABLECAPTION))
          THEN
            EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE CheckOrderDateAllowed@1100525000();
    VAR
      lvLowerLimitDate@1100525000 : Date;
      lvUpperLimitDate@1100525001 : Date;
      lvText001@1100525002 : TextConst 'ENU=must be within the range %1..%2';
    BEGIN
      IF "Exit-date" = 0D THEN
        EXIT;

      PlantSetup.GET;
      lvLowerLimitDate := PlantSetup.GetOrderDateLowerLimit(PlantSetup);
      lvUpperLimitDate := PlantSetup.GetOrderDateUpperLimit(PlantSetup);
      IF ("Exit-date" < lvLowerLimitDate) OR ("Exit-date" > lvUpperLimitDate) THEN
        FIELDERROR("Exit-date", STRSUBSTNO(lvText001, lvLowerLimitDate, lvUpperLimitDate));
    END;

    LOCAL PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      IF NOT SkipModify THEN
        MODIFY;
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_SetDefaultDpmtFromNoSeries@1100000995(xRecRef@1100525002 : RecordRef);
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      xRecRef.SETTABLE(xRec);
      DPA_Management.SetDepartmentCodeNoSeries(
        TABLENAME,
        "Department Code",
        "No. Series",
        xRec."No. Series" );
    END;

    LOCAL PROCEDURE DPA_OnInsert@1100000991();
    VAR
      Dimension1Code@1100528400 : Code[20];
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      Dimension1Code :=
        DPA_Management.GetNoSeriesDepartmentCode(
          "No. Series",
          xRec."No. Series",
          DATABASE::"Exit Order");
      IF Dimension1Code <> '' THEN
        "Department Code" := Dimension1Code;

      IF "Department Code" <> '' THEN BEGIN
        SkipModify := TRUE;
        VALIDATE("Department Code");
        SkipModify := FALSE;
      END;
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11012559) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11012559');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Exit Order", "Department Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Department Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Department Code");
    END;

    PROCEDURE ShowDocuments@1100529006();
    VAR
      RecRef@1100525000 : RecordRef;
      DocumentFilters@1100525001 : Codeunit 11012432;
    BEGIN
      //DP00183
      TESTFIELD("No.");
      RecRef.GETTABLE(Rec);
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, "Department Code", FALSE, TRUE);
    END;

    PROCEDURE HasDocumentLinks@1100525006() : Boolean;
    VAR
      DocumentLinkMgt@1100525000 : Codeunit 11012401;
      RecRef@1100525001 : RecordRef;
    BEGIN
      //DP00183
      RecRef.GETTABLE(Rec);
      EXIT(DocumentLinkMgt.EntityHasDocumentLinks(RecRef));
    END;

    PROCEDURE DeleteDocumentLinks@1100529004();
    VAR
      DocumentLinkMgt@1100525000 : Codeunit 11012401;
      RecRef@1100525001 : RecordRef;
    BEGIN
      //DP00183
      RecRef.GETTABLE(Rec);
      DocumentLinkMgt.DeleteDocumentLinksFromObject(RecRef);
    END;

    PROCEDURE MoveDocumentLinks@1100529005(SourceRec@1100529001 : Record 11012559;VAR TargetRec@1100529000 : Record 11012559;CopyMode@1100529003 : Boolean);
    VAR
      DocumentLinkMgt@1100525000 : Codeunit 11012401;
      SourceRecRef@1100525001 : RecordRef;
      TargetRecRef@1100529002 : RecordRef;
    BEGIN
      //DP00183
      SourceRecRef.GETTABLE(SourceRec);
      TargetRecRef.GETTABLE(TargetRec);
      IF NOT CopyMode THEN
        DocumentLinkMgt.ReplaceDocLink(SourceRecRef, TargetRecRef)
      ELSE
        DocumentLinkMgt.CopyDocLinks(SourceRecRef, TargetRecRef);
    END;

    PROCEDURE CommentSheet@1100529002(EditableMode@1100529002 : Boolean);
    VAR
      PlantCommentLine@1100529000 : Record 11072666;
    BEGIN
      //DP00183
      TESTFIELD("No.");
      PlantCommentLine.EditCommentLines(DATABASE::"Exit Order", "No.", '', 0, EditableMode);  //C005461.c
    END;

    PROCEDURE HasCommentLines@1100529001() : Boolean;
    VAR
      PlantCommentLine@1100529000 : Record 11072666;
    BEGIN
      //DP00183
      EXIT(PlantCommentLine.HasCommentLines(DATABASE::"Exit Order","No.", '', 0));  //C005461.c
    END;

    PROCEDURE DeleteCommentLines@1100529003();
    VAR
      PlantCommentLine@1100529000 : Record 11072666;
    BEGIN
      //DP00183
      PlantCommentLine.DeleteComments(DATABASE::"Exit Order", "No.", '', 0);  //C005461.c
    END;

    PROCEDURE PrintRecords@1100528400() : Boolean;
    VAR
      ReportSelections@1100528401 : Record 77;
      ExitOrder@1100528400 : Record 11012559;
    BEGIN
      ExitOrder.COPY(Rec);
      IF ExitOrder.ISEMPTY THEN
        EXIT(FALSE);

      ReportSelections.SETRANGE(Usage, 1558);
      ReportSelections.SETRANGE("Default Selection", TRUE);
      ReportSelections.FINDSET;

      REPEAT
        REPORT.RUNMODAL(ReportSelections."Report ID", FALSE, TRUE, ExitOrder);
      UNTIL ReportSelections.NEXT = 0;

      EXIT(TRUE);
    END;

    PROCEDURE SaveRecordsAsPDFFiles@1100528401(VAR TempEmailAttachment@1100528400 : TEMPORARY Record 11229294) : Boolean;
    VAR
      ReportSelections@1100528402 : Record 77;
      ExitOrder@1100528401 : Record 11012559;
      ExitOrder2@1100528405 : Record 11012559;
      EMailSetup@1100528406 : Record 11229911;
      DocumentPrint@1100528403 : Codeunit 229;
      DocumentMailing@1100528407 : Codeunit 260;
      I@1100528404 : Integer;
    BEGIN
      ExitOrder.COPY(Rec);
      IF ExitOrder.ISEMPTY THEN
        EXIT(FALSE);

      ExitOrder.FINDSET;

      ReportSelections.SETRANGE(Usage, 1558);
      ReportSelections.SETRANGE("Default Selection", TRUE);

      REPEAT
        ReportSelections.FINDSET;
        I := 0;
        REPEAT
          ExitOrder2 := ExitOrder;
          ExitOrder2.SETRECFILTER;
          DocumentPrint.SaveAnyRecordReportAsPdf(
            ExitOrder2, EMailSetup.Usage::"Plant Exit Order", ExitOrder2."Department Code",
            ReportSelections."Report ID", TRUE, TempEmailAttachment);
          TempEmailAttachment."Attachment Name" := DocumentMailing.ComposePDFFileName(
            ExitOrder2.TABLECAPTION, ExitOrder2."No.", I);
          TempEmailAttachment.MODIFY;
          I := I + 1;
        UNTIL ReportSelections.NEXT = 0;
      UNTIL ExitOrder.NEXT = 0;

      EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}

