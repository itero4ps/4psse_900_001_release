OBJECT Table 11012560 Exit Order Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Exit-order No.");
               GetOrderHeader;
               OrderRec.TESTFIELD(Posted,FALSE);
               IF ((OrderRec.Type = OrderRec.Type::External) OR (OrderRec."Vendor No." <> '')) AND (Type = Type::Plant) THEN BEGIN
                 OrderRec.TESTFIELD("Vendor No.");
                 TESTFIELD("Vendor No.", OrderRec."Vendor No.");
               END;
               Returned := Returned::No;
             END;

    OnModify=BEGIN
               GetOrderHeader;
               OrderRec.TESTFIELD(Posted,FALSE);
               IF ((OrderRec.Type = OrderRec.Type::External) OR (OrderRec."Vendor No." <> '')) AND (Type = Type::Plant) THEN BEGIN
                 OrderRec.TESTFIELD("Vendor No.");
                 TESTFIELD("Vendor No.", OrderRec."Vendor No.");
               END;
             END;

    OnDelete=BEGIN
               GetOrderHeader;
               OrderRec.TESTFIELD(Posted,FALSE);

               DeleteExitOrderBulkPlant();
               DeleteLinkWithPlantOrderLine();  //DP00183
               DeleteDocumentLinks(); //DP00183
               DeleteCommentLines();  //DP00183
             END;

    OnRename=BEGIN
               TESTFIELD("Exit-order No.");
               GetOrderHeader;
               OrderRec.TESTFIELD(Posted,FALSE);
               IF ((OrderRec.Type = OrderRec.Type::External) OR (OrderRec."Vendor No." <> '')) AND (Type = Type::Plant) THEN BEGIN
                 OrderRec.TESTFIELD("Vendor No.");
                 TESTFIELD("Vendor No.", OrderRec."Vendor No.");
               END;
               //DP00183 Note: ChangeLinkWithPlantOrderLine not needed here, becoause of TableRelation
               MoveDocumentLinks(xRec, Rec, FALSE); //DP00183
             END;

    CaptionML=ENU=Exit Order Line;
  }
  FIELDS
  {
    { 10  ;   ;Exit-order No.      ;Code20        ;TableRelation="Exit Order".No.;
                                                   CaptionML=ENU=Exit Order No. }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 30  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                TempOrderLine := Rec;
                                                                INIT;
                                                                Type := TempOrderLine.Type;
                                                                "Exit-date" := TempOrderLine."Exit-date";
                                                                "From Location" := TempOrderLine."From Location";
                                                                IF (Type <> xRec.Type) THEN BEGIN
                                                                  DeleteExitOrderBulkPlant();
                                                                  CALCFIELDS("Quantity Bulk Plant");
                                                                END;

                                                                IF Type = Type::Plant THEN BEGIN
                                                                  GetOrderHeader;
                                                                  IF (OrderRec.Type = OrderRec.Type::External) OR (OrderRec."Vendor No." <> '') THEN
                                                                    "Vendor No." := OrderRec."Vendor No.";
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Plant,Text;
                                                   OptionString=Plant,Text }
    { 40  ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type";
                                                   OnValidate=VAR
                                                                lvPlantInventRec@1100485000 : Record 11012555;
                                                                BasicPrice@1100525000 : Decimal;
                                                              BEGIN
                                                                IF "Plant Type" <> '' THEN
                                                                  TESTFIELD(Type,Type::Plant);

                                                                GetOrderHeader();
                                                                CALCFIELDS(Bulk,"Unit of Measure","Current Price","Settlement Value Exit-Order", "Stnd. Plant Items");
                                                                IF Bulk THEN BEGIN
                                                                  IF ("Plant Type" <> '') THEN BEGIN
                                                                    TESTFIELD("BPM Amount", 0);
                                                                    lvPlantInventRec.SETCURRENTKEY(Removed, "Plant Type", "Plant No.");
                                                                    lvPlantInventRec.SETRANGE(Removed, FALSE);
                                                                    lvPlantInventRec.SETRANGE("Plant Type", "Plant Type");
                                                                    lvPlantInventRec.SETRANGE("Plant No.", '0');
                                                                    IF NOT lvPlantInventRec.FIND('-') THEN
                                                                      "No." := ''
                                                                    ELSE BEGIN
                                                                      "No." := '0';
                                                                      IF (OrderRec."Vendor No." <> '') THEN BEGIN
                                                                        PlantRec.GET("Plant Type");
                                                                        IF NOT PlantRec.External THEN
                                                                          "No." := ''
                                                                        ELSE BEGIN
                                                                          lvPlantInventRec.SETFILTER("Plant No.", '<>%1', '0');
                                                                          IF lvPlantInventRec.FIND('-') THEN  //* Extern bulk with entry no. present
                                                                            "No." := '';
                                                                        END;
                                                                      END;
                                                                    END;
                                                                  END;
                                                                END ELSE BEGIN
                                                                  IF NOT PlantNoRec.GET("Plant Type","No.") THEN
                                                                    "No." := '';
                                                                END;

                                                                CALCFIELDS("Stock Plant Type on Location", "Stock Plant No. on Location", "Stock Rate Code on Location");

                                                                IF ("Plant Type" <> '') AND (Type = Type::Plant) THEN BEGIN
                                                                  PlantRec.GET("Plant Type");
                                                                  Description := PlantRec.Description;
                                                                  PlantSetup.GET;
                                                                  IF (OrderRec.Type = OrderRec.Type::External) OR (OrderRec."Vendor No." <> '') THEN BEGIN
                                                                    OrderRec.TESTFIELD("Vendor No.");
                                                                    "Vendor No." := OrderRec."Vendor No.";
                                                                  END;
                                                                  {  Er zijn nu 3 default percentage
                                                                  IF (OrderRec.Type = OrderRec.Type::Scrap) OR (OrderRec.Type = OrderRec.Type::External) THEN
                                                                    Price := 0
                                                                  ELSE
                                                                    Price := ROUND(PlantSetup."Default % of Purchase Price" * PlantRec."Current Price" /100);
                                                                  }

                                                                  IF "Settlement Value Exit-Order" <> 0 THEN
                                                                    BasicPrice := PlantRec."Settlement Value Exit Order"
                                                                  ELSE
                                                                    BasicPrice := PlantRec."Current Price";

                                                                  CASE OrderRec.Type OF
                                                                    OrderRec.Type::Sales:
                                                                      Price := ROUND(PlantSetup."Sales Default % of Purch.Price" * BasicPrice /100);
                                                                    OrderRec.Type::Missing:
                                                                      Price := ROUND(PlantSetup."Miss. Default % of Purch.Price" * BasicPrice /100);
                                                                    OrderRec.Type::Scrap:
                                                                      Price := ROUND(PlantSetup."Scrap Default % of Purch.Price" * BasicPrice /100);
                                                                    ELSE
                                                                      Price := 0
                                                                  END;
                                                                  VALIDATE(Price);
                                                                  IF Bulk THEN
                                                                    FillDefaultFromRateCode();
                                                                END;

                                                                IF ("Plant Type" <> xRec."Plant Type") THEN BEGIN
                                                                  DeleteExitOrderBulkPlant();
                                                                  CALCFIELDS("Quantity Bulk Plant");
                                                                END;

                                                                VALIDATE("To Item Inventory");
                                                              END;

                                                   CaptionML=ENU=Plant Type }
    { 50  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 60  ;   ;No.                 ;Code10        ;TableRelation=IF (Type=CONST(Text)) "Standard Text"
                                                                 ELSE IF (Type=CONST(Plant),
                                                                          Bulk=CONST(No)) "Plant Number".No. WHERE (Plant Type=FIELD(Plant Type),
                                                                                                                    Posted=CONST(Yes))
                                                                                                                    ELSE IF (Type=CONST(Plant),
                                                                                                                             Bulk=CONST(Yes)) "Plant Inventory"."Plant No." WHERE (Removed=CONST(No),
                                                                                                                                                                                   Plant Type=FIELD(Plant Type));
                                                   OnValidate=VAR
                                                                lvRentEntryRec@1100485000 : Record 11012535;
                                                              BEGIN
                                                                CALCFIELDS(Bulk,"Stock Plant No. on Location", "Stock Rate Code on Location", "Purchase Price");

                                                                CASE Type OF
                                                                  Type::Text:
                                                                    BEGIN
                                                                      IF "No." <> '' THEN BEGIN
                                                                        StandardText.GET("No.");
                                                                        Description := StandardText.Description;
                                                                      END;
                                                                    END;
                                                                  Type::Plant:
                                                                    BEGIN
                                                                      GetOrderHeader();
                                                                      IF ("No." > '0') THEN BEGIN
                                                                        PlantNoRec.GET("Plant Type", "No.");
                                                                        IF (NOT PlantNoRec.External) AND ((OrderRec.Type = OrderRec.Type::External) OR (OrderRec."Vendor No." <> '')) THEN
                                                                          PlantNoRec.TESTFIELD(External, TRUE);
                                                                        IF (Quantity = 0) AND (NOT Bulk) THEN
                                                                          VALIDATE(Quantity,1)
                                                                        ELSE
                                                                          VALIDATE(Quantity);
                                                                        IF PlantNoRec.External AND (OrderRec."Vendor No." = '') THEN
                                                                          "Vendor No." := PlantNoRec.Vendor;

                                                                        IF (CurrFieldNo = FIELDNO("No.")) AND (PlantNoRec.External) THEN BEGIN
                                                                          IF OrderRec."Vendor No." <> '' THEN BEGIN
                                                                            lvRentEntryRec.SETCURRENTKEY("Plant Type", "Plant No.","Vendor No.");
                                                                            lvRentEntryRec.SETRANGE("Plant Type", "Plant Type");
                                                                            lvRentEntryRec.SETRANGE("Plant No.", "No.");
                                                                            IF NOT lvRentEntryRec.FIND('-') THEN
                                                                              lvRentEntryRec."Vendor No." := '';
                                                                            IF (lvRentEntryRec."Vendor No." <> OrderRec."Vendor No.") AND GUIALLOWED THEN
                                                                              MESSAGE(Text004, lvRentEntryRec."Vendor No.");
                                                                          END;
                                                                        END;
                                                                        FillDefaultFromRateCode();
                                                                      END;
                                                                      IF ("No." = '0') THEN BEGIN
                                                                        IF (OrderRec.Type = OrderRec.Type::External) OR (OrderRec."Vendor No." <> '') THEN BEGIN
                                                                          PlantRec.GET("Plant Type");
                                                                          PlantRec.TESTFIELD(External, TRUE);
                                                                        END;
                                                                      END;
                                                                      GetPlantDescription;
                                                                      IF ("No." <> xRec."No.") THEN BEGIN
                                                                        DeleteExitOrderBulkPlant();
                                                                        CALCFIELDS("Quantity Bulk Plant");
                                                                      END;
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 70  ;   ;Exit-date           ;Date          ;OnValidate=BEGIN
                                                                IF "Exit-date" <> 0D THEN
                                                                  TESTFIELD(Type,Type::Plant);
                                                                SETFILTER("Date Filter",'..%1',"Exit-date");
                                                              END;

                                                   CaptionML=ENU=Exit-date }
    { 80  ;   ;Unit of Measure     ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type"."Unit of Measure" WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=ENU=Unit of Measure;
                                                   Editable=No }
    { 90  ;   ;From Location       ;Code20        ;FieldClass=Normal;
                                                   TableRelation="Plant Location";
                                                   OnValidate=BEGIN
                                                                IF "From Location" <> xRec."From Location" THEN BEGIN
                                                                  IF "From Rate Code" <> '' THEN BEGIN
                                                                    IF NOT PlantRateCodeRec.CheckPlantRateCode("From Location", "From Rate Code", FALSE, '') THEN
                                                                      "From Rate Code" := '';
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=From Location }
    { 100 ;   ;Stock Plant No. on Location;Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Inventory".Quantity WHERE (Removed=CONST(No),
                                                                                                     Location=FIELD(From Location),
                                                                                                     Plant Type=FIELD(Plant Type),
                                                                                                     Plant No.=FIELD(No.),
                                                                                                     Sold=CONST(No),
                                                                                                     Present from=FIELD(Date Filter),
                                                                                                     Quantity=FILTER(>0)));
                                                   CaptionML=ENU=Stock Plant No. on Location;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 105 ;   ;Stock Rate Code on Location;Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Inventory".Quantity WHERE (Removed=CONST(No),
                                                                                                     Location=FIELD(From Location),
                                                                                                     Plant Type=FIELD(Plant Type),
                                                                                                     Plant No.=FIELD(No.),
                                                                                                     Rate Code=FIELD(From Rate Code),
                                                                                                     Sold=CONST(No),
                                                                                                     Present from=FIELD(Date Filter),
                                                                                                     Quantity=FILTER(>0)));
                                                   CaptionML=ENU=Stock Plant-Rate Code on Loc.;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 110 ;   ;Stock Plant Type on Location;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Inventory".Quantity WHERE (Removed=CONST(No),
                                                                                                     Location=FIELD(From Location),
                                                                                                     Plant Type=FIELD(Plant Type),
                                                                                                     Sold=CONST(No),
                                                                                                     Present from=FIELD(Date Filter),
                                                                                                     Quantity=FILTER(>0)));
                                                   CaptionML=ENU=Stock Plant Type on Location;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 120 ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                CASE Type OF
                                                                  Type::Text:
                                                                    TESTFIELD(Quantity,0);
                                                                  Type::Plant:
                                                                    BEGIN
                                                                      CALCFIELDS(Bulk);
                                                                      IF (NOT Bulk) AND ("No." <> '') AND (NOT (Quantity IN [0,1])) THEN
                                                                        FIELDERROR(Quantity,Text000);
                                                                      CheckInventory;
                                                                      Amount := ROUND(Quantity * Price);
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 130 ;   ;Quantity Plant No.  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Exit Order Line".Quantity WHERE (Exit-order No.=FIELD(Exit-order No.),
                                                                                                     From Location=FIELD(From Location),
                                                                                                     Type=CONST(Plant),
                                                                                                     Plant Type=FIELD(Plant Type),
                                                                                                     No.=FIELD(No.)));
                                                   CaptionML=ENU=Quantity Plant No.;
                                                   Editable=No }
    { 135 ;   ;Quantity Rate Code  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Exit Order Line".Quantity WHERE (Exit-order No.=FIELD(Exit-order No.),
                                                                                                     From Location=FIELD(From Location),
                                                                                                     Type=CONST(Plant),
                                                                                                     Plant Type=FIELD(Plant Type),
                                                                                                     No.=FIELD(No.),
                                                                                                     From Rate Code=FIELD(From Rate Code)));
                                                   CaptionML=ENU=Quantity Rate Code.;
                                                   Editable=No }
    { 140 ;   ;Quantity Plant Type ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Exit Order Line".Quantity WHERE (Exit-order No.=FIELD(Exit-order No.),
                                                                                                     From Location=FIELD(From Location),
                                                                                                     Type=CONST(Plant),
                                                                                                     Plant Type=FIELD(Plant Type)));
                                                   CaptionML=ENU=Quantity Plant Type;
                                                   Editable=No }
    { 150 ;   ;Bulk                ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type".Bulk WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=ENU=Bulk;
                                                   Editable=No }
    { 160 ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Date Filter }
    { 170 ;   ;Current Price       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type"."Current Price" WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=ENU=Current Price;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 175 ;   ;Settlement Value Exit-Order;Decimal;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type"."Settlement Value Exit Order" WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=ENU=Basic Settlement Value Exit-Order;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 180 ;   ;Purchase Price      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number"."Purchase Price" WHERE (Plant Type=FIELD(Plant Type),
                                                                                                             No.=FIELD(No.)));
                                                   CaptionML=ENU=Purchase Price;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 190 ;   ;Price               ;Decimal       ;OnValidate=BEGIN
                                                                IF (Price <> 0) AND NOT (Type = Type::Plant) THEN
                                                                  FIELDERROR(Price);

                                                                GLSetup.GET;
                                                                Amount := ROUND(Quantity * Price,GLSetup."Amount Rounding Precision");
                                                              END;

                                                   CaptionML=ENU=Price;
                                                   MinValue=0;
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 200 ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                IF Amount <> 0 THEN
                                                                  TESTFIELD(Type,Type::Plant);

                                                                IF (Amount <> 0) AND NOT (Type = Type::Plant) THEN
                                                                  FIELDERROR(Amount);

                                                                IF Quantity <> 0 THEN
                                                                  Price := Amount / Quantity
                                                                ELSE
                                                                  Price := Amount;

                                                                GLSetup.GET;
                                                                Price := ROUND(Price,GLSetup."Unit-Amount Rounding Precision")
                                                              END;

                                                   CaptionML=ENU=Amount;
                                                   MinValue=0;
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 210 ;   ;Quantity Bulk Plant ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Exit Order Bulk Plant".Quantity WHERE (Exit-order No.=FIELD(Exit-order No.),
                                                                                                           Exit-order Line No.=FIELD(Line No.)));
                                                   CaptionML=ENU=Quantity Bulk Plant;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 220 ;   ;From Rate Code      ;Code10        ;OnValidate=BEGIN
                                                                IF Type = Type::Text THEN
                                                                  TESTFIELD("From Rate Code", '')
                                                                ELSE BEGIN
                                                                  IF ("From Rate Code" <> '') THEN BEGIN
                                                                    PlantRateCodeRec.CheckPlantRateCode("From Location", "From Rate Code", TRUE, '');
                                                                    CheckInventory();
                                                                  END;
                                                                  CALCFIELDS("Stock Rate Code on Location");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              GetOrderHeader;
                                                              PlantRateCodeRec.Code := PlantRateCodeRec.LookupPlantRateCode("From Location", "From Rate Code", TRUE, '');
                                                              IF (NOT OrderRec.Posted) AND (Type <> Type::Text) AND (PlantRateCodeRec.Code <> "From Rate Code") THEN
                                                                VALIDATE("From Rate Code", PlantRateCodeRec.Code);
                                                            END;

                                                   CaptionML=ENU=From Rate Code }
    { 230 ;   ;Exit Type           ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Exit Order".Type WHERE (No.=FIELD(Exit-order No.)));
                                                   CaptionML=ENU=Exit Type;
                                                   OptionCaptionML=ENU=Sales,Missing,Scrap,External;
                                                   OptionString=Sales,Missing,Scrap,External;
                                                   Editable=No }
    { 231 ;   ;Exit Location       ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Exit Order".Location WHERE (No.=FIELD(Exit-order No.)));
                                                   CaptionML=ENU=Exit Location;
                                                   Editable=No }
    { 232 ;   ;Posted              ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Exit Order".Posted WHERE (No.=FIELD(Exit-order No.)));
                                                   CaptionML=ENU=Posted;
                                                   Editable=No }
    { 240 ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=VAR
                                                                lvPlantExternal@1100485000 : Boolean;
                                                              BEGIN
                                                                IF "Vendor No." <> '' THEN
                                                                  TESTFIELD(Type,Type::Plant);

                                                                IF Type = Type::Plant THEN BEGIN
                                                                  GetOrderHeader;
                                                                  IF (OrderRec.Type = OrderRec.Type::External) OR (OrderRec."Vendor No." <> '') THEN
                                                                    TESTFIELD("Vendor No.", OrderRec."Vendor No.")
                                                                  ELSE BEGIN
                                                                    lvPlantExternal := FALSE;
                                                                    IF ("No." > '0') THEN BEGIN
                                                                      IF PlantNoRec.GET("Plant Type", "No.") THEN
                                                                        lvPlantExternal := PlantNoRec.External;
                                                                    END ELSE BEGIN
                                                                      IF PlantRec.GET("Plant Type") THEN
                                                                        lvPlantExternal := PlantRec.External;
                                                                    END;
                                                                    IF lvPlantExternal THEN
                                                                      TESTFIELD("Vendor No.")
                                                                    ELSE
                                                                      TESTFIELD("Vendor No.", '');
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Vendor No. }
    { 250 ;   ;BPM Amount          ;Decimal       ;OnValidate=BEGIN
                                                                IF "BPM Amount" <> 0 THEN BEGIN
                                                                  TESTFIELD(Type,Type::Plant);
                                                                  CALCFIELDS(Bulk);
                                                                  TESTFIELD(Bulk, FALSE);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=TPM Amount;
                                                   MinValue=0;
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 260 ;   ;Order Plant Amount  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Exit Order Line".Amount WHERE (Exit-order No.=FIELD(Exit-order No.)));
                                                   CaptionML=ENU=Plant Amount;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 265 ;   ;Order Cost Amount   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Exit Order Cost Line".Amount WHERE (Exit-order No.=FIELD(Exit-order No.)));
                                                   CaptionML=ENU=Cost Amount;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 270 ;   ;Returned            ;Option        ;CaptionML=ENU=Returned;
                                                   OptionCaptionML=ENU=No,,Yes;
                                                   OptionString=No,,Yes;
                                                   Description=Now only for unique, maybe in future also bulk. Then also option 'Partly' en Returned Qty needed;
                                                   Editable=No }
    { 280 ;   ;Reason Code         ;Code10        ;TableRelation="Exit Reason Code";
                                                   OnValidate=BEGIN
                                                                IF "Reason Code" <> '' THEN
                                                                  TESTFIELD(Type,Type::Plant);
                                                              END;

                                                   CaptionML=ENU=Reason Code }
    { 290 ;   ;Element             ;Code20        ;OnValidate=BEGIN
                                                                //*C005404.n
                                                                IF Element = '' THEN
                                                                  EXIT;
                                                                TESTFIELD(Type, Type::Plant);
                                                                GetOrderHeader();
                                                                OrderRec.TESTFIELD(Location);
                                                                PlantElementMgt.OnValidateElement(OrderRec.Location, Element, '', FALSE);
                                                              END;

                                                   OnLookup=VAR
                                                              EditableMode@1100525001 : Boolean;
                                                              NewElement@1100525000 : Code[20];
                                                            BEGIN
                                                              //*C005404.n
                                                              GetOrderHeader();
                                                              EditableMode := ((NOT OrderRec.Posted) AND (Type <> Type::Text));
                                                              NewElement := PlantElementMgt.OnLookupElement(OrderRec.Location, Element, '', EditableMode);
                                                              IF (NewElement <> '') AND (NewElement <> Element) THEN
                                                                VALIDATE(Element, NewElement);
                                                            END;

                                                   CaptionML=ENU=Element }
    { 300 ;   ;To Item Inventory   ;Boolean       ;OnValidate=VAR
                                                                Item@1100485000 : Record 27;
                                                              BEGIN
                                                                IF "To Item Inventory" THEN BEGIN
                                                                  IF "Plant Type" <> '' THEN
                                                                    IF Item.GET("Plant Type") THEN
                                                                      "Item No." := "Plant Type";
                                                                END ELSE BEGIN
                                                                  "Item No." := '';
                                                                  "Location Code" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=To Item Inventory }
    { 310 ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=ENU=Item No. }
    { 320 ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=ENU=Location Code }
    { 330 ;   ;Original Arrival Order No.;Code20  ;TableRelation="Plant Order".No.;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Original Arrival Order No. }
    { 340 ;   ;Stnd. Plant Items   ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Plant Standard Item" WHERE (Plant Type=FIELD(Plant Type),
                                                                                                  Quantity=FILTER(>0)));
                                                   OnValidate=BEGIN
                                                                //DP00670
                                                              END;

                                                   CaptionML=ENU=Stnd. Plant Items;
                                                   BlankZero=Yes;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Exit-order No.,Line No.                 ;SumIndexFields=Amount;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Exit-order No.,Type,Plant Type,No.,From Location,From Rate Code;
                                                   SumIndexFields=Quantity }
    {    ;Plant Type,No.,Exit-date                 }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@11012008 : TextConst 'ENU=must be 0 or 1 for unique Plant';
      Text001@11012009 : TextConst 'ENU=Total %1 (%2) of Plant Type '' %3'' is greater than %4 (%5).';
      Text002@11012010 : TextConst 'ENU=Total %1 (%2) of Plant No. ''%3-%4'' is greater than the %5 (%6). \%7';
      Text003@1100485000 : TextConst 'ENU=Total %1 (%2) of Plant No. ''%3-%4'', Rate Code ''%5'' is greater than the  %6 (%7). \%8';
      Text004@1100485001 : TextConst 'ENU=Plant No. is rented from vendor ''%1''.';
      GLSetup@11012000 : Record 98;
      PlantSetup@11012001 : Record 11012550;
      OrderRec@11012002 : Record 11012559;
      OrderLineRec@11012003 : Record 11012560;
      PlantRec@11012004 : Record 11012551;
      PlantNoRec@11012005 : Record 11012552;
      PlantRateCodeRec@1100525000 : Record 11020502;
      StandardText@11012006 : Record 7;
      TempOrderLine@11012007 : Record 11012560;
      Text005@1100529000 : TextConst 'ENU=Note: Plant No. %1-%2 is present on location %3.';
      PlantElementMgt@1100409000 : Codeunit 11012582;

    PROCEDURE InitRecord@2();
    BEGIN
      IF OrderRec.GET("Exit-order No.") THEN BEGIN;
        "Exit-date" := OrderRec."Exit-date";
        SETFILTER("Date Filter",'..%1',"Exit-date");
        "From Location" := OrderRec.Location;
        IF (OrderRec.Type = OrderRec.Type::External) OR (OrderRec."Vendor No." <> '') THEN
          "Vendor No." := OrderRec."Vendor No.";
        Returned := Returned::No;
      END;
    END;

    PROCEDURE CheckInventory@1();
    VAR
      NumberPLantNotInDB@11012000 : Decimal;
    BEGIN
      IF (Quantity <= 0) OR (NOT GUIALLOWED) THEN
        EXIT;

      PlantSetup.GET;
      IF NOT PlantSetup."Stockout Warning" THEN
        EXIT;

      NumberPLantNotInDB := Quantity;
      OrderLineRec.RESET;
      OrderLineRec := Rec;
      IF OrderLineRec.FIND('=') THEN
        IF ("Plant Type" = OrderLineRec."Plant Type") AND
           ("No." = OrderLineRec."No.")
        THEN
          NumberPLantNotInDB := Quantity - OrderLineRec.Quantity;

      IF (("No." <> '') AND ("From Rate Code" <> '')) OR (PlantSetup."Rate Codes" AND (CurrFieldNo=FIELDNO(Quantity))) THEN BEGIN
        CALCFIELDS("Stock Rate Code on Location","Quantity Rate Code");
        IF ("Quantity Rate Code" + NumberPLantNotInDB) > "Stock Rate Code on Location" THEN
          MESSAGE(Text003,
            FIELDCAPTION(Quantity), ("Quantity Rate Code" + NumberPLantNotInDB), "Plant Type", "No.",
            "From Rate Code", FIELDCAPTION("Stock Rate Code on Location"), "Stock Rate Code on Location",
            ExtraInfoPresentLoc());  //DP00241.n (C-029114)
      END ELSE BEGIN
        IF "No." <= '0' THEN BEGIN
          CALCFIELDS("Stock Plant Type on Location","Quantity Plant Type");
          IF ("Quantity Plant Type" + NumberPLantNotInDB) > "Stock Plant Type on Location" THEN
            MESSAGE(Text001,
              FIELDCAPTION(Quantity), ("Quantity Plant Type"+ NumberPLantNotInDB), "Plant Type",
              FIELDCAPTION("Stock Plant Type on Location"), "Stock Plant Type on Location");
        END ELSE BEGIN
          CALCFIELDS("Stock Plant No. on Location","Quantity Plant No.");
          IF ("Quantity Plant No." + NumberPLantNotInDB) > "Stock Plant No. on Location" THEN
            MESSAGE(Text002,
              FIELDCAPTION(Quantity), ("Quantity Plant No." + NumberPLantNotInDB), "Plant Type", "No.",
              FIELDCAPTION("Stock Plant No. on Location"), "Stock Plant No. on Location",
              ExtraInfoPresentLoc());  //DP00241.n (C-029114)
        END;
      END;
    END;

    PROCEDURE ExtraInfoPresentLoc@1210190004() : Text[250];
    VAR
      PlantInvent@1100529000 : Record 11012555;
    BEGIN
      //DP00241 (C-029114)
      CALCFIELDS(Bulk);
      IF NOT Bulk THEN BEGIN
        PlantInvent.SETCURRENTKEY(Removed, "Plant Type", "Plant No.", "Rate Code", Location);
        PlantInvent.SETRANGE(Removed, FALSE);
        PlantInvent.SETRANGE("Plant Type", "Plant Type");
        PlantInvent.SETRANGE("Plant No.", "No.");
        IF PlantInvent.FINDFIRST THEN BEGIN
          IF "From Location" <> PlantInvent.Location THEN
            EXIT(STRSUBSTNO(Text005, "Plant Type", "No.", PlantInvent.Location));
        END;
      END;
      EXIT('');
    END;

    PROCEDURE GetPlantDescription@4();
    BEGIN
      IF Type <> Type::Plant THEN
        EXIT;

      PlantNoRec.GetPlantDescription("Plant Type","No.",Description);
    END;

    PROCEDURE GetOrderHeader@5();
    BEGIN
      //IF ("Exit-order No." <> OrderRec."No.") THEN  //* Always read! (meanwhile a field in header can be changed)
      IF ("Exit-order No." <> '') THEN
        OrderRec.GET("Exit-order No.");
    END;

    PROCEDURE DeleteExitOrderBulkPlant@1100485001();
    VAR
      lvExitBulkPlantRec@1100485000 : Record 11012592;
    BEGIN
      lvExitBulkPlantRec.RESET;
      lvExitBulkPlantRec.SETRANGE("Exit-order No.", "Exit-order No.");
      lvExitBulkPlantRec.SETRANGE("Exit-order Line No.", "Line No.");
      lvExitBulkPlantRec.DELETEALL;
    END;

    PROCEDURE ExitOrderBulkPlant@1100485000();
    VAR
      lvExitBulkPlantRec@1100485000 : Record 11012592;
      lvExitBulkPlantFrm@1100485001 : Page 11012627;
      lvExitExternalBulkPlantFrm@1100485002 : Page 11020583;
      lvExternal@1100485003 : Boolean;
    BEGIN
      lvExitBulkPlantRec.FILTERGROUP(9);
      lvExitBulkPlantRec.SETRANGE("Exit-order No.", "Exit-order No.");
      lvExitBulkPlantRec.SETRANGE("Exit-order Line No.", "Line No.");
      lvExitBulkPlantRec.FILTERGROUP(0);

      TESTFIELD(Type, Type::Plant);
      IF ("No." <> '') AND ("No." <> '0') THEN BEGIN
        PlantNoRec.GET("Plant Type","No.");
        lvExternal := PlantNoRec.External;
      END ELSE BEGIN
        PlantRec.GET("Plant Type");
        lvExternal := PlantRec.External
      END;
      IF (NOT lvExternal) THEN BEGIN
        lvExitBulkPlantFrm.SETTABLEVIEW(lvExitBulkPlantRec);
        lvExitBulkPlantFrm.SetSelections("Exit-order No.", "Line No.");
        lvExitBulkPlantFrm.RUNMODAL;
      END ELSE BEGIN
        lvExitExternalBulkPlantFrm.SETTABLEVIEW(lvExitBulkPlantRec);
        lvExitExternalBulkPlantFrm.SetSelections("Exit-order No.", "Line No.");
        lvExitExternalBulkPlantFrm.RUNMODAL;
      END;
    END;

    PROCEDURE FillDefaultFromRateCode@1100485002();
    VAR
      lvInventoryRec@1100485000 : Record 11012555;
      lvDefaultRateCode@1100485001 : Code[10];
    BEGIN
      lvInventoryRec.SETRANGE(Removed, FALSE);
      lvInventoryRec.SETRANGE(Location, "From Location");
      lvInventoryRec.SETRANGE("Plant Type", "Plant Type");
      lvInventoryRec.SETRANGE("Plant No.", "No.");
      lvInventoryRec.SETRANGE(Sold, FALSE);
      lvInventoryRec.SETFILTER(Quantity, '>0');
      IF lvInventoryRec.FIND('-') THEN BEGIN
        IF (NOT Bulk) THEN
          "From Rate Code" := lvInventoryRec."Rate Code"
        ELSE BEGIN
          lvDefaultRateCode := lvInventoryRec."Rate Code";
          lvInventoryRec.SETFILTER("Rate Code", '<>%1', lvInventoryRec."Rate Code");
          IF NOT lvInventoryRec.FIND('-') THEN
            "From Rate Code" := lvDefaultRateCode;
        END;
      END;
    END;

    PROCEDURE DeleteLinkWithPlantOrderLine@1100529007();
    VAR
      PlantOrderLine@1100529000 : Record 11012557;
      PlantOrderLine2@1100529001 : Record 11012557;
    BEGIN
      //DP00183
      PlantOrderLine.SETCURRENTKEY("Exit Order No.", "Exit Order Line No.");
      PlantOrderLine.SETRANGE("Exit Order No.", "Exit-order No.");
      PlantOrderLine.SETRANGE("Exit Order Line No.", "Line No.");
      IF PlantOrderLine.FINDSET(TRUE, TRUE) THEN BEGIN
        REPEAT
          PlantOrderLine2.GET(PlantOrderLine."Plant Order No.", PlantOrderLine."Line No.");
          PlantOrderLine2."Exit Order No." := '';
          PlantOrderLine2."Exit Order Line No." := 0;
          PlantOrderLine2.MODIFY;
        UNTIL PlantOrderLine.NEXT = 0;
      END;
    END;

    PROCEDURE ChangeLinkWithPlantOrderLine@1100529009(SourceRec@1100529001 : Record 11012560;TargetRec@1100529000 : Record 11012560);
    VAR
      PlantOrderLine@1100529002 : Record 11012557;
      PlantOrderLine2@1100529003 : Record 11012557;
    BEGIN
      //DP00183
      PlantOrderLine.SETCURRENTKEY("Exit Order No.", "Exit Order Line No.");
      PlantOrderLine.SETRANGE("Exit Order No.", SourceRec."Exit-order No.");
      PlantOrderLine.SETRANGE("Exit Order Line No.", SourceRec."Line No.");
      IF PlantOrderLine.FINDSET(TRUE, TRUE) THEN BEGIN
        REPEAT
          PlantOrderLine2.GET(PlantOrderLine."Plant Order No.", PlantOrderLine."Line No.");
          PlantOrderLine2."Exit Order No." := TargetRec."Exit-order No.";
          PlantOrderLine2."Exit Order Line No." := TargetRec."Line No.";
          PlantOrderLine2.MODIFY;
        UNTIL PlantOrderLine.NEXT = 0;
      END;
    END;

    PROCEDURE ShowDocuments@1100529000();
    VAR
      RecRef@1100525000 : RecordRef;
      DocumentFilters@1100525001 : Codeunit 11012432;
    BEGIN
      //DP00183
      TESTFIELD("Line No.");
      GetOrderHeader();
      RecRef.GETTABLE(Rec);
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, OrderRec."Department Code", FALSE, TRUE);
    END;

    PROCEDURE HasDocumentLinks@1100525006() : Boolean;
    VAR
      DocumentLinkMgt@1100525000 : Codeunit 11012401;
      RecRef@1100525001 : RecordRef;
    BEGIN
      //DP00183
      RecRef.GETTABLE(Rec);
      EXIT(DocumentLinkMgt.EntityHasDocumentLinks(RecRef));
    END;

    PROCEDURE DeleteDocumentLinks@1100529004();
    VAR
      DocumentLinkMgt@1100525000 : Codeunit 11012401;
      RecRef@1100525001 : RecordRef;
    BEGIN
      //DP00183
      RecRef.GETTABLE(Rec);
      DocumentLinkMgt.DeleteDocumentLinksFromObject(RecRef);
    END;

    PROCEDURE MoveDocumentLinks@1100529006(SourceRec@1100529001 : Record 11012560;TargetRec@1100529000 : Record 11012560;CopyMode@1100529003 : Boolean);
    VAR
      DocumentLinkMgt@1100525000 : Codeunit 11012401;
      SourceRecRef@1100525001 : RecordRef;
      TargetRecRef@1100529002 : RecordRef;
    BEGIN
      //DP00183
      SourceRecRef.GETTABLE(SourceRec);
      TargetRecRef.GETTABLE(TargetRec);
      IF NOT CopyMode THEN
        DocumentLinkMgt.ReplaceDocLink(SourceRecRef, TargetRecRef)
      ELSE
        DocumentLinkMgt.CopyDocLinks(SourceRecRef, TargetRecRef);
    END;

    PROCEDURE CommentSheet@1100529002(EditableMode@1100529002 : Boolean);
    VAR
      PlantCommentLine@1100529000 : Record 11072666;
    BEGIN
      //DP00183
      TESTFIELD("Line No.");
      PlantCommentLine.EditCommentLines(DATABASE::"Exit Order Line", "Exit-order No.", '', "Line No.", EditableMode);  //C005461.c
    END;

    PROCEDURE HasCommentLines@1100529001() : Boolean;
    VAR
      PlantCommentLine@1100529000 : Record 11072666;
    BEGIN
      //DP00183
      EXIT(PlantCommentLine.HasCommentLines(DATABASE::"Exit Order Line", "Exit-order No.", '', "Line No."));  //C005461.c
    END;

    PROCEDURE DeleteCommentLines@1100529003();
    VAR
      PlantCommentLine@1100529000 : Record 11072666;
    BEGIN
      //DP00183
      PlantCommentLine.DeleteComments(DATABASE::"Exit Order Line", "Exit-order No.", '', "Line No.");  //C005461.c
    END;

    PROCEDURE ShowFixedAsset@1100529005();
    VAR
      PlantNumber@1100529001 : Record 11012552;
      FA@1100529000 : Record 5600;
    BEGIN
      //DP00241 (19335)
      TESTFIELD(Type, Type::Plant);
      TESTFIELD("Plant Type");

      PlantSetup.GET;
      PlantSetup.TESTFIELD("Integration Fixed Assets");

      CALCFIELDS(Bulk);
      IF ("No." <> '') AND ("No." <> '0') THEN BEGIN
        PlantNumber.GET("Plant Type", "No.");
        PlantNumber.TESTFIELD("Fixed Asset");
        FA.SETRANGE("No.", PlantNumber."Fixed Asset");
        FA."No." := PlantNumber."Fixed Asset";
      END ELSE BEGIN
        IF PlantSetup."Fixed FA Nos." THEN
          FA.SETFILTER("No.", '%1', "Plant Type" + '-*');
        FA.SETRANGE("Plant Type", "Plant Type");
        FA.SETRANGE(Inactive, FALSE);
      END;
      PAGE.RUNMODAL(0, FA);
    END;

    PROCEDURE OnDrillDownStndPlantItems@1100409000();
    VAR
      PlantStandardItem@1100409000 : Record 11020519;
      PlantStndItems@1100409001 : Page 11071764;
    BEGIN
      //DP00670
      IF ("Plant Type" = '') OR ("Stnd. Plant Items" = 0) THEN
        EXIT;
      PlantStandardItem.FILTERGROUP(9);
      PlantStandardItem.SETRANGE("Plant Type", "Plant Type");
      PlantStandardItem.FILTERGROUP(0);
      PlantStndItems.SETTABLEVIEW(PlantStandardItem);
      PlantStndItems.EDITABLE(FALSE);
      PlantStndItems.RUNMODAL;
    END;

    BEGIN
    END.
  }
}

