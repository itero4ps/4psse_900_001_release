OBJECT Table 11012572 Plant Ledger Entry
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               GenJnlPostPreview@1100525000 : Codeunit 19;
             BEGIN
               //**4PS Generated Code. Do Not Change.sn05
               DPA_OnInsert;
               //**4PS Generated Code.en05

               GenJnlPostPreview.SavePlantLedgerEntry(Rec);
             END;

    OnModify=BEGIN
               IF DimValRec.GET("Cost Object") THEN
                 "Cost Type" := DimValRec."Cost Type"
               ELSE
                 CLEAR("Cost Type");
             END;

    CaptionML=ENU=Plant Ledger Entry;
    LookupPageID=Page11012585;
    DrillDownPageID=Page11012585;
  }
  FIELDS
  {
    { 10  ;   ;Entry No.           ;Integer       ;CaptionML=ENU=Entry No. }
    { 15  ;   ;Company Name        ;Text30        ;TableRelation=Company;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Company Name }
    { 20  ;   ;Project No.         ;Code20        ;TableRelation=IF (Company Name=FILTER('')) Job.No.;
                                                   OnLookup=VAR
                                                              lProjRec@11012000 : Record 11072003;
                                                            BEGIN
                                                              IF "Company Name" <> '' THEN
                                                                lProjRec.CHANGECOMPANY("Company Name");
                                                              lProjRec."No." := "Project No.";
                                                              //IF PAGE.RUNMODAL(0,lProjRec) = ACTION::LookupOK THEN     //*Old  Edit not Allowed
                                                              //  VALIDATE("Project No.",lProjRec."No.");
                                                              PAGE.RUNMODAL(0,lProjRec);
                                                            END;

                                                   CaptionML=ENU=Project No. }
    { 25  ;   ;Element             ;Code20        ;TableRelation=IF (Company Name=FILTER('')) "Project Element".Element WHERE (Project No.=FIELD(Project No.));
                                                   OnLookup=VAR
                                                              lProjElemRec@1100525000 : Record 11012010;
                                                            BEGIN
                                                              IF "Company Name" <> '' THEN
                                                                lProjElemRec.CHANGECOMPANY("Company Name");
                                                              lProjElemRec.SETRANGE("Project No.", "Project No.");
                                                              lProjElemRec."Project No." := "Project No.";
                                                              lProjElemRec.Element := Element;
                                                              PAGE.RUNMODAL(0,lProjElemRec);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Element }
    { 30  ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Customer No. }
    { 31  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=ENU=Vendor No. }
    { 32  ;   ;Vendor Name         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Vendor No.)));
                                                   CaptionML=ENU=Vendor Name;
                                                   Editable=No }
    { 35  ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 40  ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No. }
    { 50  ;   ;Document Date       ;Date          ;CaptionML=ENU=Document Date }
    { 60  ;   ;Account No.         ;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=ENU=Account No. }
    { 70  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 75  ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
    { 80  ;   ;Quantity            ;Decimal       ;CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5 }
    { 90  ;   ;Direct Unit Cost    ;Decimal       ;CaptionML=ENU=Direct Unit Cost;
                                                   AutoFormatType=2 }
    { 100 ;   ;Unit Cost           ;Decimal       ;CaptionML=ENU=Unit Cost;
                                                   AutoFormatType=2 }
    { 110 ;   ;Total Cost          ;Decimal       ;CaptionML=ENU=Total Cost;
                                                   AutoFormatType=1 }
    { 120 ;   ;Unit Amount         ;Decimal       ;CaptionML=ENU=Unit Amount;
                                                   AutoFormatType=2 }
    { 130 ;   ;Total Price         ;Decimal       ;CaptionML=ENU=Total Price;
                                                   AutoFormatType=1 }
    { 140 ;   ;Unit of Measure Code;Code10        ;TableRelation="Unit of Measure";
                                                   CaptionML=ENU=Unit of Measure Code }
    { 150 ;   ;Department Code     ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Department Code }
    { 160 ;   ;Cost Object         ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Cost Object }
    { 170 ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=User ID }
    { 180 ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=ENU=Source Code }
    { 190 ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=ENU=Reason Code }
    { 200 ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Country/Region Code }
    { 210 ;   ;Territory Code      ;Code10        ;TableRelation=Territory;
                                                   CaptionML=ENU=Territory Code }
    { 215 ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=ENU=Gen. Bus. Posting Group }
    { 220 ;   ;Plant Posting Group ;Code10        ;TableRelation="Plant Posting Group";
                                                   CaptionML=ENU=Plant Posting Group }
    { 230 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series }
    { 240 ;   ;Cost Type           ;Option        ;FieldClass=Normal;
                                                   CaptionML=ENU=Cost Type;
                                                   OptionCaptionML=ENU=Labor,Material,Subcontracting,Plant,Sundry,Revenues;
                                                   OptionString=Labor,Material,Subcontracting,Plant,Sundry,Revenues }
    { 250 ;   ;Plant Location      ;Code20        ;TableRelation="Plant Location";
                                                   CaptionML=ENU=Plant Location;
                                                   Editable=No }
    { 260 ;   ;Plant Invoice Origin;Option        ;CaptionML=ENU=Plant Invoice Origin;
                                                   OptionCaptionML=ENU=,Plant Inventory,Plant Order,Exit Order,Rental Correction,Plant Hours,Transport Order,Returned Loss,Service Order;
                                                   OptionString=,Plant Inventory,Plant Order,Exit Order,Rental Correction,Plant Hours,Transport Order,Returned Loss,Service Order;
                                                   BlankZero=Yes;
                                                   Description=Options must be the same in the tables 37, 113, 115, 11012572, 11020501 !!!!;
                                                   Editable=No }
    { 270 ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type";
                                                   CaptionML=ENU=Plant Type;
                                                   Editable=No }
    { 280 ;   ;Plant No.           ;Code10        ;TableRelation=IF (Bulk=CONST(No)) "Plant Number".No. WHERE (Plant Type=FIELD(Plant Type))
                                                                 ELSE IF (Bulk=CONST(Yes),
                                                                          Plant No.=FILTER(>0)) "Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   CaptionML=ENU=Plant No.;
                                                   Editable=No }
    { 290 ;   ;Bulk                ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type".Bulk WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=ENU=Bulk;
                                                   Editable=No }
    { 300 ;   ;Number of Time Units;Decimal       ;CaptionML=ENU=No. of Time Units;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 305 ;   ;Rate Type           ;Option        ;CaptionML=ENU=Rate Type;
                                                   OptionCaptionML=ENU=" ,day,,,mth";
                                                   OptionString=[ ,Day,,,Month];
                                                   Editable=No }
    { 310 ;   ;Arrival Order Type  ;Option        ;CaptionML=ENU=Arrival Order Type;
                                                   OptionCaptionML=ENU=,Plant Order,Exit-order,Rental Correction,Transport Order,Returned Loss;
                                                   OptionString=,Plant Order,Exit Order,Rental Correction,Transport Order,Returned Loss;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 320 ;   ;Arrival Order       ;Code20        ;TableRelation=IF (Arrival Order Type=CONST(Plant Order)) "Plant Order"
                                                                 ELSE IF (Arrival Order Type=CONST(Exit Order)) "Exit Order"
                                                                 ELSE IF (Arrival Order Type=CONST(Returned Loss)) "Returned Loss Order";
                                                   OnLookup=BEGIN
                                                              LookupArrivalOrder();
                                                            END;

                                                   CaptionML=ENU=Arrival Order;
                                                   Editable=No }
    { 330 ;   ;Removal Order Type  ;Option        ;CaptionML=ENU=Removal Order Type;
                                                   OptionCaptionML=ENU=,Plant Order,Exit-order,Rental Correction,Transport Order;
                                                   OptionString=,Plant Order,Exit Order,Rental Correction,Transport Order;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 340 ;   ;Removal Order       ;Code20        ;TableRelation=IF (Removal Order Type=CONST(Plant Order)) "Plant Order"
                                                                 ELSE IF (Removal Order Type=CONST(Exit Order)) "Exit Order";
                                                   OnLookup=BEGIN
                                                              LookupRemovalOrder();
                                                            END;

                                                   CaptionML=ENU=Removal Order;
                                                   Editable=No }
    { 345 ;   ;Transport Order No. ;Code20        ;TableRelation="Posted Plant Transport Order";
                                                   CaptionML=ENU=Transport Order No.;
                                                   Editable=No }
    { 350 ;   ;Plant Location Description;Text50  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Location".Description WHERE (Code=FIELD(Plant Location)));
                                                   CaptionML=ENU=Plant Location Description;
                                                   Editable=No }
    { 360 ;   ;Rental Period       ;Text30        ;CaptionML=ENU=Rental Period }
    { 370 ;   ;Relate to           ;Option        ;CaptionML=ENU=Relate to;
                                                   OptionCaptionML=ENU=,Rental,Sales,Missing,Scrap,Buy Back,Hours,Transport,Sundry Costs,Plant Hours,Damage,Job Order,Load/Unload,Item,Item Buy-Back;
                                                   OptionString=,Rental,Sales,Missing,Scrap,Buy Back,Hours,Transport,Sundry Costs,Plant Hours,Damage,Job Order,Load/Unload,Item,ItemBuyBack;
                                                   BlankZero=Yes;
                                                   Description=Options must be the same in the tables 37, 113, 115, 11012572, 11020501 !!!!  Also T11012551/552/554 'Relate to Filter';
                                                   Editable=No }
    { 390 ;   ;Cost Component      ;Code10        ;TableRelation="Cost Component Plant";
                                                   CaptionML=ENU=Cost Component }
    { 400 ;   ;Employee No.        ;Code20        ;TableRelation=Employee;
                                                   CaptionML=ENU=Employee No. }
    { 410 ;   ;Rate Code           ;Code10        ;OnLookup=VAR
                                                              PlantRateCodeRec@1100525000 : Record 11020502;
                                                            BEGIN
                                                              PlantRateCodeRec.LookupPlantRateCode("Plant Location", "Rate Code", FALSE, '');
                                                            END;

                                                   CaptionML=ENU=Rate Code;
                                                   Editable=No }
    { 420 ;   ;Service Order No.   ;Code20        ;TableRelation=IF (Company Name=CONST()) "Service Order";
                                                   OnLookup=VAR
                                                              lServOrderRec@1100525000 : Record 11012823;
                                                            BEGIN
                                                              IF "Company Name" <> '' THEN
                                                                lServOrderRec.CHANGECOMPANY("Company Name");
                                                              lServOrderRec."No." := "Service Order No.";
                                                              PAGE.RUNMODAL(0,lServOrderRec);
                                                            END;

                                                   CaptionML=ENU=Service Order No. }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=No }
    { 490 ;   ;Intercompany Ledger Entry No.;Integer;
                                                   TableRelation="Intercompany Ledger Entry";
                                                   CaptionML=ENU=Intercompany Ledger Entry No.;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 491 ;   ;Intercompany Price  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Intercompany Ledger Entry".Price WHERE (Entry No.=FIELD(Intercompany Ledger Entry No.)));
                                                   CaptionML=ENU=Intercompany Price;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="Intercompany Currency Code" }
    { 492 ;   ;Intercompany Amount ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Intercompany Ledger Entry".Amount WHERE (Entry No.=FIELD(Intercompany Ledger Entry No.)));
                                                   CaptionML=ENU=Intercompany Amount;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Intercompany Currency Code" }
    { 493 ;   ;Intercompany Currency Code;Code10  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Intercompany Ledger Entry"."Currency Code" WHERE (Entry No.=FIELD(Intercompany Ledger Entry No.)));
                                                   CaptionML=ENU=Intercompany Currency Code;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Plant Type,Posting Date                  }
    {    ;Plant Type,Plant No.,Posting Date        }
    {    ;Document No.,Posting Date                }
    {    ;Plant Type,Relate to,Gen. Bus. Posting Group,Plant Posting Group,Posting Date;
                                                   SumIndexFields=Total Price }
    {    ;Plant Type,Plant Posting Group,Cost Component,Posting Date;
                                                   SumIndexFields=Total Cost }
    {    ;Plant Type,Plant No.,Relate to,Gen. Bus. Posting Group,Plant Posting Group,Posting Date;
                                                   SumIndexFields=Total Price }
    {    ;Plant Type,Plant No.,Plant Posting Group,Cost Component,Posting Date;
                                                   SumIndexFields=Total Cost }
    {    ;Plant Location,Posting Date,Relate to   ;SumIndexFields=Total Price }
    {    ;Project No.,Cost Object                 ;SumIndexFields=Total Price }
    {    ;Service Order No.,Cost Object            }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DimValRec@11012000 : Record 349;
      DPA_Management@1100000999 : Codeunit 11012783;
      PlantLookupMgt@1100409000 : Codeunit 11012590;

    PROCEDURE ShowDimensions@3();
    VAR
      DimMgt@1000 : Codeunit 408;
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"Entry No."));
    END;

    PROCEDURE LookupArrivalOrder@1100525002();
    BEGIN
      PlantLookupMgt.PlantLedgerEntryArrivalOrder(Rec);
    END;

    PROCEDURE LookupRemovalOrder@1100525003();
    BEGIN
      PlantLookupMgt.PlantLedgerEntryRemovalOrder(Rec);
    END;

    PROCEDURE DPA_SetDefaultDpmtFromNoSeries@1100000995(xRecRef@1100525002 : RecordRef);
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      xRecRef.SETTABLE(xRec);
      DPA_Management.SetDepartmentCodeNoSeries(
        TABLENAME,
        "Department Code",
        "No. Series",
        xRec."No. Series" );
    END;

    LOCAL PROCEDURE DPA_OnInsert@1100000991();
    VAR
      Dimension1Code@1100528400 : Code[20];
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      Dimension1Code :=
        DPA_Management.GetNoSeriesDepartmentCode(
          "No. Series",
          xRec."No. Series",
          DATABASE::"Plant Ledger Entry");
      IF Dimension1Code <> '' THEN
        "Department Code" := Dimension1Code;

      IF "Department Code" <> '' THEN
        VALIDATE("Department Code");
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11012572) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11012572');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Plant Ledger Entry", "Department Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Department Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Department Code");
    END;

    BEGIN
    END.
  }
}

