OBJECT Table 11012591 Plant Cost Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD(Code);
               { 23-03-2010 Now also 'Transport' allowed, standard cost are inserted on TO (so not on PO)
               IF (Type = Type::Transport) THEN BEGIN
                 PlantSetupRec.GET;
                 IF PlantSetupRec."Transport Orders" THEN
                   FIELDERROR(Type, STRSUBSTNO(Text000, Type, PlantSetupRec.TABLECAPTION, PlantSetupRec.FIELDCAPTION("Transport Orders")));
                   Text000 was: ENU='%1' not allowed because %2 '%3' is on.;NLD='%1' niet toegestaan omdat de %2 '%3' aan staat.
               END;
               }
             END;

    OnDelete=VAR
               PlantCostLinePrice@1100529000 : Record 11072664;
             BEGIN
               //DP00241 (16930)
               PlantCostLinePrice.SETRANGE("Cost Level", "Cost Level");
               PlantCostLinePrice.SETRANGE(Code, Code);
               PlantCostLinePrice.SETRANGE("Cost Line No.", "Line No.");
               PlantCostLinePrice.DELETEALL;
             END;

    OnRename=VAR
               PlantCostLinePrice@1100529000 : Record 11072664;
             BEGIN
               //DP00241 (16930)
               PlantCostLinePrice.SETRANGE("Cost Level", "Cost Level");
               PlantCostLinePrice.SETRANGE(Code, Code);
               PlantCostLinePrice.SETRANGE("Cost Line No.", "Line No.");
               IF NOT PlantCostLinePrice.ISEMPTY THEN
                 ERROR(PlantCostLinePrice.TABLECAPTION);
             END;

    CaptionML=ENU=Plant Cost Line;
  }
  FIELDS
  {
    { 5   ;   ;Cost Level          ;Option        ;CaptionML=ENU=Cost Level;
                                                   OptionCaptionML=ENU=Plant Type,Set,Location,Customer Price Group;
                                                   OptionString=PlantType,Set,Location,CustomerPriceGroup;
                                                   Description=Option must be the same as in T11072664;
                                                   Editable=No }
    { 10  ;   ;Code                ;Code20        ;TableRelation=IF (Cost Level=CONST(PlantType)) "Plant Type"
                                                                 ELSE IF (Cost Level=CONST(Set)) "Plant Set"
                                                                 ELSE IF (Cost Level=CONST(Location)) "Plant Location"
                                                                 ELSE IF (Cost Level=CONST(CustomerPriceGroup)) "Customer Price Group";
                                                   CaptionML=ENU=Code;
                                                   NotBlank=Yes }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 30  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                { 23-03-2010 Now also 'Transport' allowed, standard cost are inserted on TO (so not on PO)
                                                                IF (Type = Type::Transport) THEN BEGIN
                                                                  PlantSetupRec.GET;
                                                                  IF PlantSetupRec."Transport Orders" THEN
                                                                    FIELDERROR(Type, STRSUBSTNO(Text000, Type, PlantSetupRec.TABLECAPTION, PlantSetupRec.FIELDCAPTION("Transport Orders")));
                                                                END;
                                                                }
                                                                IF (Type = Type::Damage) AND ("Cost Level" IN ["Cost Level"::Set, "Cost Level"::Location, "Cost Level"::CustomerPriceGroup]) THEN
                                                                  FIELDERROR(Type);

                                                                IF (Type = Type::Transport) THEN BEGIN  // 23-03-2010 (new)
                                                                  PlantSetupRec.GET;
                                                                  IF PlantSetupRec."Transport Orders" THEN
                                                                    "Vendor No." := '';
                                                                END;

                                                                SaveCostLineRec := Rec;
                                                                INIT;
                                                                Type := SaveCostLineRec.Type;

                                                                IF Type > Type::Text THEN BEGIN
                                                                  DimValRec.SETFILTER("Global Dimension No.", '2');
                                                                  DimValRec.SETRANGE(Plant, Type);
                                                                  IF DimValRec.COUNT = 1 THEN BEGIN
                                                                    DimValRec.FIND('-');
                                                                    VALIDATE("No.", DimValRec.Code);
                                                                  END;
                                                                END;

                                                                //DP00241.n (C004697)
                                                                IF Type = Type::Damage THEN
                                                                  "Type Cost":= "Type Cost"::Removal;
                                                              END;

                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Text,Hours,Transport,Sundry Costs,Damage;
                                                   OptionString=Text,Hours,Transport,Sundry Costs,Damage }
    { 40  ;   ;No.                 ;Code10        ;TableRelation=IF (Type=CONST(Text)) "Standard Text"
                                                                 ELSE IF (Type=CONST(Hours)) "Dimension Value".Code WHERE (Plant=CONST(Hours),
                                                                                                                           Global Dimension No.=CONST(2))
                                                                                                                           ELSE IF (Type=CONST(Transport)) "Dimension Value".Code WHERE (Plant=CONST(Transport),
                                                                                                                                                                                         Global Dimension No.=CONST(2))
                                                                                                                                                                                         ELSE IF (Type=CONST(Sundry Costs)) "Dimension Value".Code WHERE (Plant=CONST(Sundry),
                                                                                                                                                                                                                                                          Global Dimension No.=CONST(2))
                                                                                                                                                                                                                                                          ELSE IF (Type=CONST(Damage)) "Dimension Value".Code WHERE (Plant=CONST(Damage),
                                                                                                                                                                                                                                                                                                                     Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                IF "No." <> '' THEN BEGIN
                                                                  CASE Type OF
                                                                    Type::Text:
                                                                      BEGIN
                                                                        IF "No." <> '' THEN BEGIN
                                                                          StandTextRec.GET("No.");
                                                                          Description := StandTextRec.Description;
                                                                        END;
                                                                      END;
                                                                    ELSE BEGIN
                                                                      DimMgtCU.GetDimValueRec(2, "No.", DimValRec, TRUE, '');
                                                                      Description := DimValRec.Name;
                                                                      "Unit of Measure" := DimValRec."Unit of Measure";
                                                                      //VALIDATE(Price, DimValRec."Sales Price");  //DP00241.o (16930)
                                                                    END;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 50  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 60  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                IF (Quantity <> 0) AND ((Type = Type::Text) OR (Type = Type::Damage)) THEN  //DP00241.c (C004697)
                                                                  FIELDERROR(Quantity);

                                                                //VALIDATE(Price);  //DP00241.o (16930)
                                                              END;

                                                   CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 70  ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure";
                                                   OnValidate=BEGIN
                                                                IF ("Unit of Measure" <> '') AND (Type = Type::Text) THEN
                                                                  FIELDERROR("Unit of Measure");
                                                              END;

                                                   CaptionML=ENU=Unit of Measure }
    { 100 ;   ;Type Cost           ;Option        ;OnValidate=BEGIN
                                                                //*C-025816
                                                                IF "Type Cost" = "Type Cost"::Removal THEN
                                                                  "Incl. Arrival Other Transfers" := FALSE;

                                                                //DP00241.n (C004697)
                                                                IF Type = Type::Damage THEN
                                                                  TESTFIELD("Type Cost", "Type Cost"::Removal);
                                                              END;

                                                   CaptionML=ENU=Type Cost;
                                                   OptionCaptionML=ENU=Arrival,Removal,Both;
                                                   OptionString=Arrival,Removal,Both }
    { 101 ;   ;Incl. Arrival Other Transfers;Boolean;
                                                   OnValidate=BEGIN
                                                                //*C-025816
                                                                IF "Incl. Arrival Other Transfers" THEN BEGIN
                                                                  IF ("Type Cost" = "Type Cost"::Removal) THEN
                                                                    TESTFIELD("Incl. Arrival Other Transfers", FALSE);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Incl. Arrival Other Transfers }
    { 110 ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                IF (Type = Type::Transport) THEN BEGIN  // 23-03-2010 (new)
                                                                  PlantSetupRec.GET;
                                                                  IF PlantSetupRec."Transport Orders" THEN
                                                                    TESTFIELD("Vendor No.", '');
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Vendor No. (Default) }
  }
  KEYS
  {
    {    ;Cost Level,Code,Line No.                ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PlantSetupRec@1100485001 : Record 11012550;
      StandTextRec@11012003 : Record 7;
      DimValRec@11012004 : Record 349;
      SaveCostLineRec@11012005 : Record 11012591;
      DimMgtCU@1210190000 : Codeunit 408;
      Text001@1100525000 : TextConst 'ENU=Standard cost line ''%1'' for transportorder';

    PROCEDURE GetCommentTransport@1100525000() : Text[100];
    BEGIN
      IF (Type = Type::Transport) THEN BEGIN
        PlantSetupRec.GET;
        IF PlantSetupRec."Transport Orders" THEN
          EXIT(STRSUBSTNO(Text001, Type));
      END;
      EXIT('');
    END;

    PROCEDURE CheckUpdateDefaultCostPrice@1100529001();
    VAR
      PlantCostLinePrice@1100529000 : Record 11072664;
    BEGIN
      //DP00241 (16930)
      IF (Type = Type::Text) OR (Code = '') OR ("Line No." = 0) OR ("No." = '') THEN
        EXIT;
      DimMgtCU.GetDimValueRec(2, "No.", DimValRec, FALSE, '');
      IF DimValRec."Sales Price" = 0 THEN
        EXIT;

      PlantCostLinePrice.SETRANGE("Cost Level", "Cost Level");
      PlantCostLinePrice.SETRANGE(Code, Code);
      PlantCostLinePrice.SETRANGE("Cost Line No.", "Line No.");
      IF PlantCostLinePrice.ISEMPTY THEN BEGIN
        PlantCostLinePrice.INIT;
        PlantCostLinePrice."Cost Level" := "Cost Level";
        PlantCostLinePrice.Code := Code;
        PlantCostLinePrice."Cost Line No." := "Line No.";
        PlantCostLinePrice."Starting Date" := 0D;
        PlantCostLinePrice.Price := DimValRec."Sales Price";
        PlantCostLinePrice.INSERT;
      END ELSE BEGIN
        IF "No." <> xRec."No." THEN BEGIN
          IF PlantCostLinePrice.COUNT = 1 THEN BEGIN
            IF PlantCostLinePrice.FINDFIRST THEN BEGIN
              IF PlantCostLinePrice.Price <> DimValRec."Sales Price" THEN BEGIN
                PlantCostLinePrice.Price := DimValRec."Sales Price";
                PlantCostLinePrice.MODIFY;
              END;
            END;
          END;
        END;
      END;
    END;

    PROCEDURE RunCostLinePrices@1100529000();
    VAR
      PlantCostLinePrice@1100529000 : Record 11072664;
    BEGIN
      //DP00241 (16930)
      IF Type = Type::Text THEN
        FIELDERROR(Type);

      PlantCostLinePrice.FILTERGROUP(4);
      PlantCostLinePrice.SETRANGE("Cost Level", "Cost Level");
      PlantCostLinePrice.SETRANGE(Code, Code);
      PlantCostLinePrice.SETRANGE("Cost Line No.", "Line No.");
      PlantCostLinePrice.FILTERGROUP(0);
      PAGE.RUNMODAL(PAGE::"Plant Cost Line Prices", PlantCostLinePrice);
    END;

    PROCEDURE GetCostLinePrice@1100529002(RefDate@1100529001 : Date) : Decimal;
    VAR
      PlantCostLinePrice@1100529000 : Record 11072664;
    BEGIN
      //DP00241 (16930)
      IF RefDate = 0D THEN
        RefDate := WORKDATE;
      PlantCostLinePrice.SETRANGE("Cost Level", "Cost Level");
      PlantCostLinePrice.SETRANGE(Code, Code);
      PlantCostLinePrice.SETRANGE("Cost Line No.", "Line No.");
      PlantCostLinePrice.SETRANGE("Starting Date", 0D, RefDate);
      IF PlantCostLinePrice.FINDLAST THEN
        EXIT(PlantCostLinePrice.Price);
    END;

    PROCEDURE GetAmount@1100529006(RefDate@1100529000 : Date) : Decimal;
    BEGIN
      //DP00241 (16930)
      EXIT(ROUND(Quantity * GetCostLinePrice(RefDate)));
    END;

    BEGIN
    END.
  }
}

