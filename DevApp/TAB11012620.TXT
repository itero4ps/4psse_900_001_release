OBJECT Table 11012620 Request Line - Rail
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnModify=BEGIN
               IF (Element <> xRec.Element) OR ("Cost Component" <> xRec."Cost Component") THEN
                 UpdateRelatedCapacityPlanning();
             END;

    OnDelete=VAR
               lvAssEmplRec@1210190000 : Record 11012621;
               lvCapPlanRec@1210190001 : Record 11012623;
             BEGIN
               lvAssEmplRec.SETRANGE("Request No.", "Request No.");
               lvAssEmplRec.SETRANGE("Request Line No.", "Line No.");
               lvAssEmplRec.DELETEALL;

               lvCapPlanRec.SETCURRENTKEY("Request No.", "Request Line No.", "Assigned Employee Line No.");
               lvCapPlanRec.SETRANGE("Request No.", "Request No.");
               lvCapPlanRec.SETRANGE("Request Line No.", "Line No.");
               lvCapPlanRec.DELETEALL;
             END;

    OnRename=BEGIN
               ERROR(Text003, TABLECAPTION);
             END;

    CaptionML=ENU=Request Line;
  }
  FIELDS
  {
    { 10  ;   ;Request No.         ;Code20        ;TableRelation="Request - Rail";
                                                   CaptionML=ENU=Request No. }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 30  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   CaptionML=ENU=Project No. }
    { 40  ;   ;Element             ;Code20        ;TableRelation="Project Element".Element WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=VAR
                                                                lvProjRec@1100485000 : Record 11072003;
                                                              BEGIN
                                                                //ProjSetupRec.GET;                  //**4PS01.o
                                                                IF lvProjRec.GET("Project No.") THEN //**4PS01.n
                                                                  IF (Element = '') AND (lvProjRec."Posting Element Mandatory") THEN BEGIN
                                                                    IF HasAssignedLines() THEN
                                                                      FIELDERROR("Cost Component", Text004);
                                                                  END;

                                                                ElementFormat.FormatElem(Element,2,'');

                                                                IF (Element <> '') THEN BEGIN
                                                                  IF NOT ProjElemRec.GET("Project No.",Element) THEN
                                                                    FIELDERROR(Element, STRSUBSTNO(Text002, Element, "Project No."));
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Element }
    { 50  ;   ;Cost Component      ;Code10        ;TableRelation="Cost Component";
                                                   OnValidate=BEGIN
                                                                IF ("Cost Component" = '') THEN BEGIN
                                                                  IF HasAssignedLines() THEN
                                                                    FIELDERROR("Cost Component", Text004);
                                                                END;
                                                                CheckCostComponentAllowed();
                                                                CheckAssignedCostCompRelated();

                                                                CALCFIELDS("Function Name");
                                                              END;

                                                   CaptionML=ENU=Cost Component }
    { 51  ;   ;Function Name       ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Cost Component".Description WHERE (Code=FIELD(Cost Component)));
                                                   CaptionML=ENU=Function Name;
                                                   Editable=No }
    { 60  ;   ;Date From           ;Date          ;OnValidate=BEGIN
                                                                IF ("Date From" = 0D) THEN BEGIN
                                                                  IF HasAssignedLines() THEN
                                                                    FIELDERROR("Date From", Text004);
                                                                END;

                                                                IF "Date To" < "Date From" THEN
                                                                  "Date To" := "Date From";

                                                                CheckAssignedDateTimeRelated();
                                                              END;

                                                   CaptionML=ENU=Date From }
    { 65  ;   ;Date To             ;Date          ;OnValidate=BEGIN
                                                                IF ("Date To" = 0D) THEN BEGIN
                                                                  IF HasAssignedLines() THEN
                                                                    FIELDERROR("Date To", Text004);
                                                                END;
                                                                IF ("Date To" = 0D) AND ("Date From" <> 0D) THEN
                                                                  "Date To" := "Date From";
                                                                IF "Date To" < "Date From" THEN
                                                                  FIELDERROR("Date To", STRSUBSTNO(Text000, "Date To", FIELDCAPTION("Date From"), "Date From"));

                                                                CheckAssignedDateTimeRelated();
                                                              END;

                                                   CaptionML=ENU=Date To }
    { 70  ;   ;Time From           ;Time          ;OnValidate=BEGIN
                                                                IF ("Time From" = 0T) THEN BEGIN
                                                                  IF HasAssignedLines() THEN
                                                                    FIELDERROR("Time From", Text004);
                                                                END;
                                                                HourAccFunctionsCU.TimeFormatHhMmCheck("Time From");
                                                                CheckAssignedDateTimeRelated();
                                                              END;

                                                   CaptionML=ENU=Time From }
    { 75  ;   ;Time To             ;Time          ;OnValidate=BEGIN
                                                                IF ("Time To" = 0T) THEN BEGIN
                                                                  IF HasAssignedLines() THEN
                                                                    FIELDERROR("Time To", Text004);
                                                                END;
                                                                HourAccFunctionsCU.TimeFormatHhMmCheck("Time To");
                                                                CheckAssignedDateTimeRelated();
                                                              END;

                                                   CaptionML=ENU=Time To }
    { 80  ;   ;Quantity            ;Decimal       ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                IF (Quantity = 0) THEN BEGIN
                                                                  IF HasAssignedLines() THEN
                                                                    FIELDERROR(Quantity, Text004);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:0 }
    { 90  ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Hard,Soft;
                                                   OptionString=Hard,Soft }
    { 100 ;   ;Note                ;Text50        ;CaptionML=ENU=Note }
    { 110 ;   ;Plan on Saterday    ;Boolean       ;CaptionML=ENU=Sat }
    { 111 ;   ;Plan on Sunday      ;Boolean       ;CaptionML=ENU=Sun }
    { 112 ;   ;Plan on Monday      ;Boolean       ;CaptionML=ENU=Mon }
    { 113 ;   ;Plan on Tuesday     ;Boolean       ;CaptionML=ENU=Tue }
    { 114 ;   ;Plan on Wednesday   ;Boolean       ;CaptionML=ENU=Wed }
    { 115 ;   ;Plan on Thursday    ;Boolean       ;CaptionML=ENU=Thu }
    { 116 ;   ;Plan on Friday      ;Boolean       ;CaptionML=ENU=Fri }
  }
  KEYS
  {
    {    ;Request No.,Line No.                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      HrsSetupRec@1210190002 : Record 11012600;
      RequestRec@1210190005 : Record 11012619;
      AssEmplRec@1210190009 : Record 11012621;
      ProjElemRec@1210190006 : Record 11012010;
      HourAccFunctionsCU@1210190003 : Codeunit 11012607;
      ElementFormat@1210190000 : Codeunit 11012022;
      Text000@1210190004 : TextConst 'ENU=''%1'' may not be less than %2 ''%3''';
      Text001@1210190001 : TextConst 'ENU=may not be %1 ''%2'' from the %3';
      Text002@1210190007 : TextConst 'ENU=''%1'' not present fo Project ''%2''';
      Text003@1210190008 : TextConst 'ENU=Rename %1 not allowed.';
      Text004@1210190010 : TextConst 'ENU=empty not allowed, there are already employees assigned';

    PROCEDURE InitRecord@1210190000();
    BEGIN
      IF RequestRec.GET("Request No.") THEN
        "Project No." := RequestRec."Project No.";
    END;

    PROCEDURE CheckCostComponentAllowed@1210190011();
    BEGIN
      HrsSetupRec.GET;

      IF ("Cost Component" = HrsSetupRec."Cost Component Pause") THEN
        FIELDERROR("Cost Component", STRSUBSTNO(Text001, HrsSetupRec.FIELDCAPTION("Cost Component Pause"),
          HrsSetupRec."Cost Component Pause", HrsSetupRec.TABLECAPTION));
    END;

    PROCEDURE HasAssignedLines@1210190002() : Boolean;
    BEGIN
      AssEmplRec.RESET;
      AssEmplRec.SETRANGE("Request No.", "Request No.");
      AssEmplRec.SETRANGE("Request Line No.", "Line No.");
      IF AssEmplRec.FIND('-') THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE CheckAssignedCostCompRelated@1210190001();
    BEGIN
      AssEmplRec.RESET;
      AssEmplRec.SETRANGE("Request No.", "Request No.");
      AssEmplRec.SETRANGE("Request Line No.", "Line No.");
      IF NOT AssEmplRec.FIND('-') THEN
        EXIT;

      REPEAT
        AssEmplRec.SetModifiedReqLine(Rec);
        AssEmplRec.CheckHireVendor();
        AssEmplRec.CheckEmployeeHasFunction();
        AssEmplRec.ResetModifiedReqLine();
      UNTIL AssEmplRec.NEXT = 0;
    END;

    PROCEDURE CheckAssignedDateTimeRelated@1210190003();
    BEGIN
      AssEmplRec.RESET;
      AssEmplRec.SETRANGE("Request No.", "Request No.");
      AssEmplRec.SETRANGE("Request Line No.", "Line No.");
      IF NOT AssEmplRec.FIND('-') THEN
        EXIT;

      REPEAT
        AssEmplRec.SetModifiedReqLine(Rec);
        AssEmplRec.CheckDateFrom();
        AssEmplRec.CheckDateTo();
        AssEmplRec.CheckTimeFrom();
        AssEmplRec.CheckTimeTo();
        AssEmplRec.CheckHireVendor();
        AssEmplRec.CheckEmployeeEmployed();
        AssEmplRec.ResetModifiedReqLine();
      UNTIL AssEmplRec.NEXT = 0;
    END;

    PROCEDURE UpdateRelatedCapacityPlanning@1210190005();
    VAR
      lvCapPlanRec@1210190000 : Record 11012623;
    BEGIN
      lvCapPlanRec.SETCURRENTKEY("Request No.", "Request Line No.", "Assigned Employee Line No.");
      lvCapPlanRec.SETRANGE("Request No.", "Request No.");
      lvCapPlanRec.SETRANGE("Request Line No.", "Line No.");
      IF NOT lvCapPlanRec.FIND('-') THEN
        EXIT;

      REPEAT
        lvCapPlanRec.Element := Element;
        lvCapPlanRec."Cost Component" := "Cost Component";
        lvCapPlanRec.MODIFY;
      UNTIL lvCapPlanRec.NEXT = 0;
    END;

    BEGIN
    {
      4PS01 JD, 8 aug 2007, Call 5990, "Posting Element Mandatory" also on project card
    }
    END.
  }
}

