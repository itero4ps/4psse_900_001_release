OBJECT Table 11012672 Project Delivery Note Header
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               JobsSetup.GET;

               IF "No." = '' THEN BEGIN
                 TestNoSeries;
                 NoSeriesMgt.InitSeries(GetNoSeriesCode,xRec."No. Series","Posting Date","No.","No. Series");
               END;

               InitRecord;
             END;

    OnModify=BEGIN
               TESTFIELD(Status, Status::Open); //DP00653
               ProjectDeliveryNoteReserve.VerifyHeaderChange(Rec,xRec); //DP00121
             END;

    OnDelete=VAR
               ProjDelNoteLine@1100525000 : Record 11012673;
             BEGIN
               ProjDelNoteLine.SETRANGE("Project Delivery Note No.","No.");
               ProjDelNoteLine.DELETEALL(TRUE);
             END;

    CaptionML=ENU=Project Delivery Note Header;
    LookupPageID=Page11012678;
    DrillDownPageID=Page11012678;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  JobsSetup.GET;
                                                                  NoSeriesMgt.TestManual(GetNoSeriesCode);
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 11  ;   ;Your Reference      ;Text35        ;CaptionML=ENU=Your Reference }
    { 13  ;   ;Ship-to Name        ;Text50        ;CaptionML=ENU=Ship-to Name }
    { 14  ;   ;Ship-to Name 2      ;Text50        ;CaptionML=ENU=Ship-to Name 2 }
    { 15  ;   ;Ship-to Address     ;Text50        ;OnValidate=VAR
                                                                PhoneNo@1000000 : Text[30];
                                                                FaxNo@1000001 : Text[30];
                                                              BEGIN
                                                              END;

                                                   CaptionML=ENU=Ship-to Address }
    { 16  ;   ;Ship-to Address 2   ;Text50        ;CaptionML=ENU=Ship-to Address 2 }
    { 17  ;   ;Ship-to City        ;Text30        ;TableRelation=IF (Ship-to Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Ship-to Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Ship-to Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(
                                                                  "Ship-to City",
                                                                  "Ship-to Post Code",
                                                                  "Ship-to County",
                                                                  "Ship-to Country/Region Code",
                                                                  (CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Ship-to City }
    { 18  ;   ;Ship-to Contact     ;Text50        ;CaptionML=ENU=Ship-to Contact }
    { 19  ;   ;Ship-to Contact No. ;Code20        ;TableRelation=Contact;
                                                   OnValidate=VAR
                                                                Contact@1100525000 : Record 5050;
                                                              BEGIN
                                                                IF ("Transaction Type" IN ["Transaction Type"::"Temporary Shipment Third Party",
                                                                  "Transaction Type"::"Return Temporary Shipment Third Party"]) AND
                                                                 ("Ship-to Contact No." <> '')
                                                                THEN BEGIN
                                                                  Contact.GET("Ship-to Contact No.");

                                                                  "Ship-to Name" := Contact.Name;
                                                                  "Ship-to Name 2" := Contact."Name 2";
                                                                  "Ship-to Address" := Contact.Address;
                                                                  "Ship-to Address 2" := Contact."Address 2";
                                                                  "Ship-to City" := Contact.City;
                                                                  "Ship-to Post Code" := Contact."Post Code";
                                                                  "Ship-to County" := Contact.County;
                                                                  "Ship-to Country/Region Code" := Contact."Country/Region Code";
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Ship-to Contact No. }
    { 20  ;   ;Posting Date        ;Date          ;OnValidate=BEGIN
                                                                ProjectDeliveryNoteReserve.VerifyHeaderChange(Rec,xRec); //DP00121
                                                              END;

                                                   CaptionML=ENU=Posting Date }
    { 30  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   OnValidate=VAR
                                                                Job@1100525000 : Record 11072003;
                                                              BEGIN
                                                                IF ("Project No." <> '') AND ("Receiving Project No." = "Project No.") THEN
                                                                  ERROR(ErrorSameProject);

                                                                IF ("Transaction Type" = "Transaction Type"::Delivery) AND ("Project No." <> '') THEN BEGIN
                                                                  Job.GET("Project No.");
                                                                  "Ship-to Address" := Job.Address;
                                                                  "Ship-to Address 2" := Job."Address 2";
                                                                  "Ship-to City" := Job.City;
                                                                  "Ship-to Post Code" := Job."Post Code";
                                                                  "Ship-to County" := Job.County;
                                                                  "Ship-to Country/Region Code" := Job."Country/Region Code";
                                                                END;

                                                                ProjectDeliveryNoteReserve.VerifyHeaderChange(Rec,xRec); //DP00121
                                                              END;

                                                   CaptionML=ENU=Project No. }
    { 35  ;   ;Receiving Project No.;Code20       ;TableRelation=Job;
                                                   OnValidate=VAR
                                                                Job@1100525000 : Record 11072003;
                                                              BEGIN
                                                                IF ("Receiving Project No." <> '') AND ("Receiving Project No." = "Project No.") THEN
                                                                  ERROR(ErrorSameProject);
                                                                IF ("Transaction Type" = "Transaction Type"::Transfer) AND ("Project No." <> '') THEN BEGIN
                                                                  Job.GET("Receiving Project No.");
                                                                  "Ship-to Address" := Job.Address;
                                                                  "Ship-to Address 2" := Job."Address 2";
                                                                  "Ship-to City" := Job.City;
                                                                  "Ship-to Post Code" := Job."Post Code";
                                                                  "Ship-to County" := Job.County;
                                                                  "Ship-to Country/Region Code" := Job."Country/Region Code";
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Receiving Project No. }
    { 47  ;   ;No. Printed         ;Integer       ;CaptionML=ENU=No. Printed;
                                                   Editable=No }
    { 63  ;   ;Posting No.         ;Code20        ;CaptionML=ENU=Posting No. }
    { 91  ;   ;Ship-to Post Code   ;Code20        ;TableRelation=IF (Ship-to Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Ship-to Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Ship-to Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(
                                                                  "Ship-to City",
                                                                  "Ship-to Post Code",
                                                                  "Ship-to County",
                                                                  "Ship-to Country/Region Code",
                                                                  (CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Ship-to Post Code }
    { 92  ;   ;Ship-to County      ;Text30        ;CaptionML=ENU=Ship-to County }
    { 93  ;   ;Ship-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Ship-to Country/Region Code }
    { 99  ;   ;Document Date       ;Date          ;CaptionML=ENU=Document Date }
    { 107 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 108 ;   ;Posting No. Series  ;Code10        ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF "Posting No. Series" <> '' THEN BEGIN
                                                                  JobsSetup.GET;
                                                                  TestNoSeries;
                                                                  NoSeriesMgt.TestSeries(GetPostingNoSeriesCode,"Posting No. Series");
                                                                END;
                                                                TESTFIELD("Posting No.",'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              WITH ProjDelNoteHeader DO BEGIN
                                                                ProjDelNoteHeader := Rec;
                                                                JobsSetup.GET;
                                                                TestNoSeries;
                                                                IF NoSeriesMgt.LookupSeries(GetPostingNoSeriesCode,"Posting No. Series") THEN
                                                                  VALIDATE("Posting No. Series");
                                                                Rec := ProjDelNoteHeader;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Posting No. Series }
    { 120 ;   ;Transaction Type    ;Option        ;OnValidate=VAR
                                                                ProjDelNoteLine@1100525000 : Record 11012673;
                                                              BEGIN
                                                                IF ("Transaction Type" <> xRec."Transaction Type") THEN BEGIN
                                                                  ProjDelNoteLine.SETRANGE("Project Delivery Note No.","No.");
                                                                  IF NOT ProjDelNoteLine.ISEMPTY THEN
                                                                    ERROR(ErrorExistingLines,FIELDCAPTION("Transaction Type"));
                                                                END;
                                                                IF "Transaction Type" <> "Transaction Type"::Transfer THEN
                                                                  "Receiving Project No." := '';

                                                                ProjectDeliveryNoteReserve.VerifyHeaderChange(Rec,xRec); //DP00121
                                                              END;

                                                   CaptionML=ENU=Transaction Type;
                                                   OptionCaptionML=ENU=Delivery,,Return,,Transfer,Project Internal Transfer,Temporary Shipment Third Party,,Return Temporary Shipment Third Party;
                                                   OptionString=Delivery,,Return,,Transfer,Internal Transfer,Temporary Shipment Third Party,,Return Temporary Shipment Third Party }
    { 170 ;   ;Deliver             ;Option        ;OnValidate=BEGIN
                                                                IF Deliver <> Deliver::" " THEN
                                                                  TESTFIELD("Transaction Type", "Transaction Type"::Delivery);

                                                                IF Deliver <> xRec.Deliver THEN
                                                                  "Ship To Location" := '';
                                                              END;

                                                   CaptionML=ENU=Deliver;
                                                   OptionCaptionML=ENU=" ,Project Location,Location";
                                                   OptionString=[ ,Project Location,Location] }
    { 175 ;   ;Ship To Location    ;Code10        ;TableRelation=IF (Deliver=CONST(Project Location)) "Project Location".Code WHERE (Project No.=FIELD(Project No.))
                                                                 ELSE IF (Deliver=CONST(Location)) Location.Code;
                                                   OnValidate=VAR
                                                                ProjectLocation@1100525000 : Record 11012011;
                                                                Location@1100525001 : Record 14;
                                                              BEGIN
                                                                IF "Ship To Location" <> '' THEN BEGIN
                                                                  TESTFIELD(Deliver);
                                                                  IF Deliver = Deliver::"Project Location" THEN BEGIN
                                                                    ProjectLocation.GET("Project No.","Ship To Location");
                                                                    "Ship-to Name" := ProjectLocation.Name;
                                                                    "Ship-to Name 2" := ProjectLocation."Name 2";
                                                                    "Ship-to Address" := ProjectLocation.Address;
                                                                    "Ship-to Address 2" := ProjectLocation."Address 2";
                                                                    "Ship-to City" := ProjectLocation.City;
                                                                    "Ship-to Post Code" := ProjectLocation."Post Code";
                                                                    "Ship-to County" := '';
                                                                    "Ship-to Country/Region Code" := ProjectLocation."Country/Region Code";
                                                                    "Ship-to Contact" := ProjectLocation.Contact;
                                                                  END;
                                                                  IF Deliver = Deliver::Location THEN BEGIN
                                                                    Location.GET("Ship To Location");
                                                                    "Ship-to Name" := Location.Name;
                                                                    "Ship-to Name 2" := Location."Name 2";
                                                                    "Ship-to Address" := Location.Address;
                                                                    "Ship-to Address 2" := Location."Address 2";
                                                                    "Ship-to City" := Location.City;
                                                                    "Ship-to Post Code" := Location."Post Code";
                                                                    "Ship-to County" := Location.County;
                                                                    "Ship-to Country/Region Code" := Location."Country/Region Code";
                                                                    "Ship-to Contact" := Location.Contact;

                                                                  END;

                                                                END;
                                                              END;

                                                   CaptionML=ENU=Ship To Location }
    { 180 ;   ;Status              ;Option        ;CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=Open,Released;
                                                   OptionString=Open,Released;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      JobsSetup@1033 : Record 315;
      ProjDelNoteHeader@1100525001 : Record 11012672;
      PostCode@1100525003 : Record 225;
      NoSeriesMgt@1100525000 : Codeunit 396;
      ErrorSameProject@1100525004 : TextConst 'ENU=You can not trasfer to the same project.';
      ErrorExistingLines@1100525005 : TextConst 'ENU=You can''t change %1. You must first remove the lines.';
      ProjectDeliveryNoteReserve@1100528600 : Codeunit 11012354;

    PROCEDURE InitRecord@10();
    BEGIN
      IF ("No. Series" <> '') AND
         (JobsSetup."Project Delivery Note Nos." = JobsSetup."Posted Proj. Del. Note Nos.")
      THEN
        "Posting No. Series" := "No. Series"
      ELSE
        NoSeriesMgt.SetDefaultSeries("Posting No. Series",JobsSetup."Posted Proj. Del. Note Nos.");

      IF "Document Date" = 0D THEN
        "Document Date" := WORKDATE;
      IF "Posting Date" = 0D THEN
        "Posting Date" := WORKDATE;
    END;

    PROCEDURE AssistEdit@1(OldProjDelNoteHeader@1000 : Record 11012672) : Boolean;
    VAR
      ProjDelNoteHeader2@1001 : Record 11012672;
      Text001@1100525000 : TextConst 'ENU=The Project Delivery Note %1 already exists.';
    BEGIN
      WITH ProjDelNoteHeader DO BEGIN
        COPY(Rec);
        JobsSetup.GET;
        TestNoSeries;
        IF NoSeriesMgt.SelectSeries(GetNoSeriesCode,OldProjDelNoteHeader."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          IF ProjDelNoteHeader2.GET("No.") THEN
            ERROR(Text001,"No.");
          Rec := ProjDelNoteHeader;
          EXIT(TRUE);
        END;
      END;
    END;

    LOCAL PROCEDURE TestNoSeries@6() : Boolean;
    BEGIN
      JobsSetup.TESTFIELD("Project Delivery Note Nos.");
    END;

    LOCAL PROCEDURE GetNoSeriesCode@9() : Code[10];
    BEGIN
      EXIT(JobsSetup."Project Delivery Note Nos.");
    END;

    LOCAL PROCEDURE GetPostingNoSeriesCode@8() : Code[10];
    BEGIN
      EXIT(JobsSetup."Posted Proj. Del. Note Nos.");
    END;

    PROCEDURE GetProjectInventory@1100525000();
    VAR
      ProjectInvEntry@1100525000 : Record 11012670;
      ProjectInventoryList@1100525001 : Page 11012673;
    BEGIN
      TESTFIELD(Status, Status::Open);
      FILTERGROUP(10);
      ProjectInvEntry.SETRANGE("Project No.",Rec."Project No.");
      FILTERGROUP(0);
      ProjectInventoryList.CopyToDeliveryNote("No.");
      ProjectInventoryList.SETTABLEVIEW(ProjectInvEntry);
      ProjectInventoryList.LOOKUPMODE(TRUE);
      ProjectInventoryList.RUNMODAL;
    END;

    PROCEDURE GetTemporaryShipments@1100525001();
    VAR
      PostedProjDelLine@1100525000 : Record 11012675;
      PostedProjDelLineList@1100525001 : Page 11125656;
    BEGIN
      TESTFIELD(Status, Status::Open);
      IF "Transaction Type" <> "Transaction Type"::"Return Temporary Shipment Third Party" THEN
        FIELDERROR("Transaction Type");

      FILTERGROUP(10);
      PostedProjDelLine.SETRANGE("Ship-to Contact No.",Rec."Ship-to Contact No.");
      PostedProjDelLine.SETRANGE("Project No.",Rec."Project No.");
      PostedProjDelLine.SETRANGE("Transaction Type", "Transaction Type"::"Temporary Shipment Third Party");
      FILTERGROUP(0);
      PostedProjDelLineList.SETTABLEVIEW(PostedProjDelLine);
      PostedProjDelLineList.LOOKUPMODE(TRUE);
      IF PostedProjDelLineList.RUNMODAL = ACTION::LookupOK THEN
        PostedProjDelLineList.CreateDeliveryNoteLines(Rec);
    END;

    PROCEDURE ReleaseDeliveryNote@1100409000();
    BEGIN
      //DP00653
      IF Status = Status::Open THEN BEGIN
        Status := Status::Released;
        MODIFY;
      END;
    END;

    PROCEDURE ReOpendeliveryNote@1100409001();
    VAR
      UserSetup@1100409000 : Record 91;
      InventorySetup@1100409001 : Record 313;
    BEGIN
      //DP00653
      IF Status = Status::Released THEN BEGIN
        UserSetup.GET(USERID);
        InventorySetup.GET;
        IF InventorySetup."Release Pr. Del. Note Required" THEN
          UserSetup.TESTFIELD("Reopen Project Delivery Note", TRUE);
        Status := Status::Open;
        MODIFY;
      END;
    END;

    PROCEDURE CheckStatus@1100409004() : Boolean;
    VAR
      InventorySetup@1100409001 : Record 313;
    BEGIN
      //DP00653
      InventorySetup.GET;
      IF InventorySetup."Release Pr. Del. Note Required" THEN
        EXIT(TRUE)
      ELSE
        EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

