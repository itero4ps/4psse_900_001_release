OBJECT Table 11012676 4PS-Mobile Setup
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    Permissions=TableData 11012449=rd;
    OnInsert=BEGIN
               UpdateProjSetupInterfaceActive();
             END;

    OnModify=BEGIN
               UpdateProjSetupInterfaceActive();
             END;

    OnDelete=BEGIN
               "4PS-Mobile Active" := FALSE;
               UpdateProjSetupInterfaceActive();
             END;

    CaptionML=ENU=4PS Mobile Setup;
  }
  FIELDS
  {
    { 10  ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 20  ;   ;4PS-Mobile Active   ;Boolean       ;OnValidate=VAR
                                                                SpecialLicense@1100525000 : Record 11012449;
                                                                Resource@1100525002 : Record 11229278;
                                                                LoadLicense@1100525001 : Codeunit 11012196;
                                                                WebServiceMgtperProduct@1100525003 : Codeunit 11012280;
                                                              BEGIN
                                                                IF "4PS-Mobile Active" THEN BEGIN
                                                                  IF NOT SpecialLicense.GET(SpecialLicense."Licence Type"::"4PS Mobile") THEN
                                                                    LoadLicense.RUN();
                                                                END ELSE BEGIN
                                                                  Resource.SETCURRENTKEY(Type, Company, "No.");
                                                                  Resource.SETRANGE(Type, Resource.Type::Employee);
                                                                  Resource.SETRANGE(Company, COMPANYNAME);
                                                                  Resource.SETRANGE("Active in FSA", TRUE);
                                                                  IF NOT Resource.ISEMPTY THEN BEGIN
                                                                    IF NOT CONFIRM(Text003, FALSE, COMPANYNAME, Resource.COUNT, Resource.FIELDCAPTION("Active in FSA")) THEN
                                                                      ERROR('')
                                                                    ELSE
                                                                      Resource.MODIFYALL("Active in FSA", FALSE);
                                                                  END;
                                                                  IF SpecialLicense.GET(SpecialLicense."Licence Type"::"4PS Mobile") THEN
                                                                    SpecialLicense.DELETE(TRUE);
                                                                END;
                                                                WebServiceMgtperProduct.Toggle4PSMobileWebservices("4PS-Mobile Active");
                                                              END;

                                                   CaptionML=ENU=4PS-Mobile Active }
    { 30  ;   ;Reference Period Response;Code10   ;TableRelation="Reference Period".Code WHERE (Type=CONST(Common));
                                                   CaptionML=ENU=Reference Period Response }
    { 31  ;   ;Reference Period Repair;Code10     ;TableRelation="Reference Period".Code WHERE (Type=CONST(Common));
                                                   CaptionML=ENU=Reference Period Repair }
    { 40  ;   ;Ref. Point Sending SO;Integer      ;TableRelation="Reference Point".No. WHERE (Apply=CONST(ServOrder));
                                                   CaptionML=ENU=Ref. Point Sending Service Order;
                                                   BlankZero=Yes }
    { 50  ;   ;Reason Code Hours/Material;Code10  ;TableRelation="Reason Code";
                                                   CaptionML=ENU=Reason Code Hours/Material }
    { 60  ;   ;Item Journal Template;Code10       ;TableRelation="Item Journal Template" WHERE (Type=CONST(Item),
                                                                                                Recurring=CONST(No));
                                                   CaptionML=ENU=Item Journal Template }
    { 61  ;   ;Item Journal Batch  ;Code10        ;TableRelation="Item Journal Batch".Name WHERE (Journal Template Name=FIELD(Item Journal Template));
                                                   CaptionML=ENU=Item Journal Batch }
    { 65  ;   ;Determine Def. CO Working Hrs.;Option;
                                                   CaptionML=ENU=Determine Default Cost Object Working Hrs.;
                                                   OptionCaptionML=ENU=Setup,,,Employee;
                                                   OptionString=Setup,,,Employee }
    { 70  ;   ;Def. Cost Object Working Hrs;Code20;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Labor),
                                                                                               Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Default Cost Object Working Hours }
    { 71  ;   ;Def. Wage Comp. Working Hrs;Code10 ;TableRelation="Wage Component".Code WHERE (Component Type=FILTER(Hours|Expenses));
                                                   CaptionML=ENU=Default Wage Component Working Hours }
    { 80  ;   ;Def. Cost Object Travel Hrs;Code20 ;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Labor),
                                                                                               Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Default Cost Object Travel Hours }
    { 81  ;   ;Def. Wage Comp. Travel Hrs;Code10  ;TableRelation="Wage Component".Code WHERE (Component Type=FILTER(Hours|Expenses));
                                                   CaptionML=ENU=Default Wage Component Travel Hours }
    { 90  ;   ;Def. Cost Object Items;Code20      ;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Material),
                                                                                               Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Default Cost Object Items }
    { 100 ;   ;Def. Cost Code Pause;Code10        ;TableRelation="Cost Code";
                                                   CaptionML=ENU=Def. Cost Code Pause }
    { 110 ;   ;Def. Cost Code Under-util.;Code10  ;TableRelation="Cost Code";
                                                   CaptionML=ENU=Def. Cost Code Under-utilization }
    { 115 ;   ;Def. Cost Code Break;Code10        ;TableRelation="Cost Code";
                                                   CaptionML=ENU=Def. Cost Code Break }
    { 120 ;   ;Daysheet Presentation;Option       ;CaptionML=ENU=Daysheet Presentation;
                                                   OptionCaptionML=ENU=Hours,Time Ticks;
                                                   OptionString=Hours,TimeTicks }
    { 121 ;   ;Daysheet Presentation 2;Option     ;CaptionML=ENU=Daysheet Presentation;
                                                   OptionCaptionML=ENU=Daysheet Hours,Day Sheet Time Ticks,Weeksheet Hours,Weeksheet Time Ticks,Week- & Daysheet Hours,Week- & Daysheet Time Ticks;
                                                   OptionString=DaySheetHours,DaySheetTimeTicks,WeekSheetHours,WeekSheetTimeTicks,WeekDaySheetHours,WeekDaySheetTimeTicks }
    { 130 ;   ;Service Order Nos. (Decentral);Code10;
                                                   TableRelation="No. Series";
                                                   OnValidate=VAR
                                                                lvNoSeriesRec@1100525000 : Record 308;
                                                              BEGIN
                                                                lvNoSeriesRec.GET("Service Order Nos. (Decentral)");
                                                                lvNoSeriesRec.TESTFIELD("Manual Nos.", FALSE);
                                                              END;

                                                   CaptionML=ENU=Service Order Nos. (Decentral) }
    { 140 ;   ;Receive Message Queue;Text100      ;InitValue=.\private$\4psmobile_receive;
                                                   CaptionML=ENU=Receive Message Queue }
    { 150 ;   ;Reply Message Queue ;Text100       ;InitValue=.\private$\4psmobile_reply;
                                                   CaptionML=ENU=Reply Message Queue }
    { 160 ;   ;Round Working Hours on Minutes;Integer;
                                                   CaptionML=ENU=Round Working Hours on Minutes;
                                                   MinValue=0 }
    { 170 ;   ;Round Travel Hours on Minutes;Integer;
                                                   CaptionML=ENU=Round Travel Hours on Minutes;
                                                   MinValue=0 }
    { 180 ;   ;Number of Historic Orders;Integer  ;CaptionML=ENU=Number of Historic Service Orders;
                                                   MinValue=0 }
    { 190 ;   ;Keep Employee Position History;Integer;
                                                   CaptionML=ENU=Keep Employee Position History (in Days) }
    { 200 ;   ;Field 1 Main Form   ;Text30        ;OnValidate=BEGIN
                                                                ValidateUIField("Field 1 Main Form");
                                                              END;

                                                   OnLookup=BEGIN
                                                              SelectUIField("Field 1 Main Form");
                                                            END;

                                                   CaptionML=ENU=Field 1 Main Form }
    { 210 ;   ;Field 2 Main Form   ;Text30        ;OnValidate=BEGIN
                                                                ValidateUIField("Field 2 Main Form");
                                                              END;

                                                   OnLookup=BEGIN
                                                              SelectUIField("Field 2 Main Form");
                                                            END;

                                                   CaptionML=ENU=Field 2 Main Form }
    { 220 ;   ;Field 3 Main Form   ;Text30        ;OnValidate=BEGIN
                                                                ValidateUIField("Field 3 Main Form");
                                                              END;

                                                   OnLookup=BEGIN
                                                              SelectUIField("Field 3 Main Form");
                                                            END;

                                                   CaptionML=ENU=Field 3 Main Form }
    { 230 ;   ;Field 4 Main Form   ;Text30        ;OnValidate=BEGIN
                                                                ValidateUIField("Field 4 Main Form");
                                                              END;

                                                   OnLookup=BEGIN
                                                              SelectUIField("Field 4 Main Form");
                                                            END;

                                                   CaptionML=ENU=Field 4 Main Form }
    { 240 ;   ;Field 5 Main Form   ;Text30        ;OnValidate=BEGIN
                                                                ValidateUIField("Field 5 Main Form");
                                                              END;

                                                   OnLookup=BEGIN
                                                              SelectUIField("Field 5 Main Form");
                                                            END;

                                                   CaptionML=ENU=Field 5 Main Form }
    { 250 ;   ;Sync. Consignment and Absence;Boolean;
                                                   CaptionML=ENU=Synchronize Consignment and Absence }
    { 260 ;   ;Sync. Window Consign. Absence;Integer;
                                                   CaptionML=ENU=Sync. Window Consignment and Absence (in days) }
    { 270 ;   ;Restock Item Journal Template;Code10;
                                                   TableRelation="Item Journal Template" WHERE (Type=CONST(Transfer),
                                                                                                Recurring=CONST(No));
                                                   CaptionML=ENU=Restock Item Journal Template }
    { 271 ;   ;Restock Item Journal Batch;Code10  ;TableRelation="Item Journal Batch".Name WHERE (Journal Template Name=FIELD(Restock Item Journal Template));
                                                   CaptionML=ENU=Restock Item Journal Batch }
    { 272 ;   ;Restock Purch Journal Template;Code10;
                                                   TableRelation="Req. Wksh. Template".Name WHERE (Type=CONST(Req.),
                                                                                                   Recurring=CONST(No));
                                                   CaptionML=ENU=Restock Purchase Journal Template }
    { 273 ;   ;Restock Purch Journal Batch;Code10 ;TableRelation="Requisition Wksh. Name".Name WHERE (Worksheet Template Name=FIELD(Restock Purch Journal Template));
                                                   CaptionML=ENU=Restock Purchase Journal Batch }
    { 274 ;   ;Post Restock Purch Jour Auto;Boolean;
                                                   CaptionML=ENU=Post Restock Purchase Journal Automatically }
    { 300 ;   ;Source Type Call As History;Boolean;CaptionML=ENU=Source Type Call As History }
    { 310 ;   ;Source Type Contract As Hist.;Boolean;
                                                   CaptionML=ENU=Source Type Contract As History }
    { 320 ;   ;Source Type Direct As History;Boolean;
                                                   CaptionML=ENU=Source Type Direct As History }
    { 330 ;   ;Source Type Estimate As Hist.;Boolean;
                                                   CaptionML=ENU=Source Type Estimate As History }
    { 340 ;   ;Source Type Modific. As Hist.;Boolean;
                                                   CaptionML=ENU=Source Type Modification As History }
    { 350 ;   ;Source Type Replacem. As Hist.;Boolean;
                                                   CaptionML=ENU=Source Type Replacement As History }
    { 360 ;   ;Def. Init. Minutes Work. Hours;Integer;
                                                   CaptionML=ENU=Default Initial Minutes Working Hours;
                                                   MinValue=0 }
    { 370 ;   ;Def. Round Work. Hours on Min.;Integer;
                                                   CaptionML=ENU=Default Round Working Hours on Minutes;
                                                   MinValue=0 }
    { 380 ;   ;Def. Round Trav. Hours on Min.;Integer;
                                                   CaptionML=ENU=Default Round Travel Hours on Minutes;
                                                   MinValue=0 }
    { 390 ;   ;Use Decentral Planning;Boolean     ;CaptionML=ENU=Use Decentral Planning }
    { 400 ;   ;Document Mgmt. Max. File Size;Integer;
                                                   OnValidate=BEGIN
                                                                IF "Document Mgmt. Max. File Size" > 8 THEN
                                                                  ERROR(Text002, FIELDCAPTION("Document Mgmt. Max. File Size"), 8);
                                                              END;

                                                   CaptionML=ENU=Document Mgmt. Max. File Size (MB) }
    { 410 ;   ;Analysis Code Call Mandatory;Boolean;
                                                   CaptionML=ENU=Analysis Code Call Mandatory }
    { 420 ;   ;Service Locs. Online Avail.;Boolean;CaptionML=ENU=Service Locations Online Available }
    { 430 ;   ;Add Existing Objects Allowed;Boolean;
                                                   CaptionML=ENU=Add Existing Objects Allowed }
    { 440 ;   ;Items Online Available;Boolean     ;CaptionML=ENU=Items Online Available }
    { 441 ;   ;Work Orders Online Available;Boolean;
                                                   CaptionML=ENU=Work Orders Online Available }
    { 450 ;   ;Notify Planner Advice Order;Boolean;CaptionML=ENU=Notify Planner Advice Order }
    { 460 ;   ;Email Notification Adv. Order;Text100;
                                                   CaptionML=ENU=Email Notification Adv. Order }
    { 470 ;   ;Create Purchase Order;Boolean      ;CaptionML=ENU=Create Purchase Order }
    { 480 ;   ;Inspection Lines in History;Boolean;CaptionML=ENU=Inspection Lines in Installation History }
    { 490 ;   ;Object Group Fixed for Objects;Boolean;
                                                   CaptionML=ENU=Object Group Fixed for Objects }
    { 500 ;   ;Use Quantity Adviced;Boolean       ;InitValue=Yes;
                                                   CaptionML=ENU=Use Quantity Adviced }
    { 510 ;   ;Filter Set Cost Obj. Ext. Cost;Code20;
                                                   TableRelation="Export Filter Set (Mobile)";
                                                   CaptionML=ENU=Filter Set Cost Objects Extra Costs }
    { 520 ;   ;Order Kind/Type Editable;Boolean   ;CaptionML=ENU=Order Kind/Type Editable }
    { 530 ;   ;Filter Set Wage Comp. Wrk Hrs.;Code20;
                                                   TableRelation="Export Filter Set (Mobile)";
                                                   CaptionML=ENU=Filter Set Wage Components Working Times }
    { 540 ;   ;Cost Plus Lines with Qty Zero;Boolean;
                                                   CaptionML=ENU=Cost Plus Lines with Quantity Zero }
    { 545 ;   ;Object on CP Lines Mandatory;Boolean;
                                                   CaptionML=ENU=Object No. on Cost Plus Lines Mandatory }
    { 550 ;   ;Create New Objects Allowed;Boolean ;CaptionML=ENU=Create New Objects Allowed }
    { 560 ;   ;Standard Object Editable;Boolean   ;CaptionML=ENU=Standard Object Editable }
    { 570 ;   ;Filter Set Editable Std Obj;Code20 ;TableRelation="Export Filter Set (Mobile)";
                                                   CaptionML=ENU=Filter Set Editable Standard Objects }
    { 580 ;   ;Communication Fields Editable;Boolean;
                                                   CaptionML=ENU=Communication Fields Editable }
    { 590 ;   ;Replace Objects Allowed;Boolean    ;CaptionML=ENU=Replace Objects Allowed }
    { 600 ;   ;Create CP Lines for SUP Auto;Boolean;
                                                   CaptionML=ENU=Create Cost Plus Lines for SUP Production Automatically }
    { 610 ;   ;Donot Create Working Times Aut;Boolean;
                                                   CaptionML=ENU=Donot Create Working Times Automatically }
    { 620 ;   ;Customers Online Available;Boolean ;CaptionML=ENU=Customers Online Available }
    { 630 ;   ;Refr. Insp. and Spec before Ex;Boolean;
                                                   CaptionML=ENU=Refresh Inspections and Specification Before Export to FSA }
    { 640 ;   ;Use Vessel Functionality;Boolean   ;CaptionML=ENU=Use Vessel Functionality }
    { 650 ;   ;Filter Set Cost Obj. Travel Hr;Code20;
                                                   TableRelation="Export Filter Set (Mobile)";
                                                   CaptionML=ENU=Filter Set Cost Objects Travel Hours }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1210190000 : TextConst 'ENU=%1 and %2';
      Text002@1100409000 : TextConst 'ENU=%1 cannot be greater than %2.';
      Text003@1100525000 : TextConst 'ENU=Of company ''%1'' still %2 resources (employees) ''%3'', these wil be set to inactive. Are you sure?';

    PROCEDURE UpdateProjSetupInterfaceActive@1100485000();
    VAR
      lvProjSetupRec@1100485000 : Record 315;
    BEGIN
      //* Mobile actief wordt ook bijgewerkt in de projectinstellingen zodat hier buiten de '4PS-Mobile' granule ook op getest
      //* kan worden. Dit ivm met permissie problemen. Net zo als bij andere buitendiensten (Field Service Admin. - FSA).
      lvProjSetupRec.GET;
      IF lvProjSetupRec."4PS-Mobile Active" <> "4PS-Mobile Active" THEN BEGIN
        lvProjSetupRec."4PS-Mobile Active" := "4PS-Mobile Active";
        lvProjSetupRec.MODIFY;
      END;
    END;

    PROCEDURE SelectUIField@1100525002(VAR FieldName@1100525001 : Text[30]);
    VAR
      TempPossibleUIField@1210190000 : TEMPORARY Record 11020445;
    BEGIN
      FillUIFieldTable(TempPossibleUIField);

      IF PAGE.RUNMODAL(0, TempPossibleUIField) = ACTION::LookupOK THEN
        FieldName := TempPossibleUIField."Field Name";
    END;

    PROCEDURE ValidateUIField@1100525003(VAR FieldName@1100525001 : Text[30]);
    VAR
      TempPossibleUIField@1100525000 : TEMPORARY Record 11020445;
    BEGIN
      IF FieldName <> '' THEN BEGIN
        FillUIFieldTable(TempPossibleUIField);
        TempPossibleUIField.GET(FieldName);
      END;
    END;

    PROCEDURE FillUIFieldTable@1100525000(VAR PossibleUIField@1100525000 : TEMPORARY Record 11020445);
    VAR
      ServiceOrder@1210190000 : Record 11012823;
    BEGIN
      InsertUIField(PossibleUIField, 'Description', ServiceOrder.FIELDCAPTION(Description));
      InsertUIField(PossibleUIField, 'Address', ServiceOrder.FIELDCAPTION(Address));
      InsertUIField(PossibleUIField, 'City', ServiceOrder.FIELDCAPTION(City));
      InsertUIField(PossibleUIField, 'PostCode', ServiceOrder.FIELDCAPTION("Post Code"));
      InsertUIField(PossibleUIField, 'StartingDateTime', ServiceOrder.FIELDCAPTION("Starting Time"));
      InsertUIField(PossibleUIField, 'EndingDateTime', ServiceOrder.FIELDCAPTION("Ending Time"));
      InsertUIField(PossibleUIField, 'ServiceLocationDescription', ServiceOrder.FIELDCAPTION("Service Location Description"));
      InsertUIField(PossibleUIField, 'ServiceLocationNo', ServiceOrder.FIELDCAPTION("Service Location No."));
      InsertUIField(PossibleUIField, 'NoAndDescription',
        STRSUBSTNO(Text001, ServiceOrder.FIELDCAPTION("No."), ServiceOrder.FIELDCAPTION(Description)));
      InsertUIField(PossibleUIField, 'NavServiceOrderNo', ServiceOrder.FIELDCAPTION("No."));
    END;

    PROCEDURE InsertUIField@1100525001(VAR PossibleUIField@1100525001 : Record 11020445;FieldName@1100525000 : Text[30];FieldCaption@1210190000 : Text[249]);
    BEGIN
      PossibleUIField."Field Name" := FieldName;
      PossibleUIField.Caption := FieldCaption;
      PossibleUIField.INSERT;
    END;

    PROCEDURE PublishWebservicesMOB@1100525004(Publish@1100525001 : Boolean);
    VAR
      WebserviceManagement@1100525000 : Codeunit 11012280;
    BEGIN
      WebserviceManagement.Toggle4PSMobileWebservices(Publish);
    END;

    BEGIN
    END.
  }
}

