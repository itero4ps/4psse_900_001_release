OBJECT Table 11012800 Service Setup
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnModify=BEGIN
               //IF "Rates Based On" = "Rates Based On"::"Rate Group" THEN BEGIN
               //TESTFIELD("Rate Group");  //db, 11-02-09: M14324
               //END ELSE BEGIN
               //  TESTFIELD("Rate Group", '');
               //END;
               UpdateLocalSetup;
             END;

    CaptionML=ENU=Service and Maintenance Setup;
  }
  FIELDS
  {
    { 10  ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 30  ;   ;Rates Based On      ;Option        ;CaptionML=ENU=Rates Based On;
                                                   OptionCaptionML=ENU=Rate Group,Budget Rate;
                                                   OptionString=Rate Group,Budget Rate }
    { 50  ;   ;Journal Template Closing Proc.;Code10;
                                                   TableRelation="Gen. Journal Template".Name;
                                                   CaptionML=ENU=Journal Template Closing Procedure }
    { 51  ;   ;Journal Batch Closing Proc.;Code10 ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(Journal Template Closing Proc.));
                                                   CaptionML=ENU=Journal Batch Closing Procedure }
    { 90  ;   ;Search Directory    ;BLOB          ;CaptionML=ENU=Search Directory;
                                                   SubType=User-Defined }
    { 100 ;   ;Cost Object Travel Time;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Cost Object Travel Time }
    { 110 ;   ;Cost Object Travel Distance;Code20 ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Cost Object Travel Distance }
    { 130 ;   ;Cost Object Consult ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Cost Object Consult }
    { 140 ;   ;Cost Object Travel Cost;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Cost Object Travel Cost }
    { 145 ;   ;Cost Object Subcontracting;Code20  ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                               Cost Type=CONST(Subcontracting));
                                                   CaptionML=ENU=Cost Object Subcontracting }
    { 170 ;   ;Service Order 1 Nos.;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Service Order Nos. (Call) }
    { 171 ;   ;Service Order 2 Nos.;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Service Order Nos. (Contract) }
    { 172 ;   ;Service Order 3 Nos.;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Service Order Nos. (Direct) }
    { 173 ;   ;Service Order 4 Nos.;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Service Order Nos. (Estimate) }
    { 180 ;   ;Call Nos.           ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Call Nos. }
    { 190 ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT Prod. Posting Group }
    { 200 ;   ;Cost Object Revenues;Code20        ;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Revenue),
                                                                                               Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Cost Object Revenues }
    { 210 ;   ;Standard Object Nos.;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Standard Object Nos. }
    { 215 ;   ;Object Coding Method;Option        ;CaptionML=ENU=Object Coding Method;
                                                   OptionCaptionML=ENU=Generate,Manual;
                                                   OptionString=Generate,Manual;
                                                   Description=expired }
    { 220 ;   ;Cost Object Planning;Code20        ;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Labor),
                                                                                               Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Cost Object Planning;
                                                   Description=expired }
    { 230 ;   ;Cost Object Invoice Base;Code20    ;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Sundry),
                                                                                               Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Cost Object Invoice Base }
    { 240 ;   ;Item Price Cost Plus Entry;Option  ;CaptionML=ENU=Item Price Cost Plus Entry;
                                                   OptionCaptionML=ENU=CostPrice,Gross Price - Sales Discount;
                                                   OptionString=CostPrice,GrossMin }
    { 250 ;   ;Description Cost Plus Entry;Option ;CaptionML=ENU=Description Price Cost Plus Entry;
                                                   OptionCaptionML=ENU=Cost Object,Rate Code,Employee,Wage Component;
                                                   OptionString=CostObject,RateCode,Employee,WageComponent }
    { 260 ;   ;Copy Entry Description to CPE;Boolean;
                                                   CaptionML=ENU=Copy Entry Description to Cost Plus Entry }
    { 265 ;   ;Add Entry Posting Date to CPE;Boolean;
                                                   CaptionML=ENU=Add Posting Date Labor to Description Cost Plus Entry }
    { 267 ;No ;Reserved 267 mve    ;Boolean        }
    { 270 ;   ;Description Maintenance Orders;Text50;
                                                   CaptionML=ENU=Description Maintenance Orders }
    { 280 ;   ;Maintenance Planning based on;Option;
                                                   CaptionML=ENU=Maintenance Planning based on;
                                                   OptionCaptionML=ENU=Date,Cluster;
                                                   OptionString=Date,Cluster;
                                                   Description=expired }
    { 281 ;   ;Suppress Not Clustered Lines;Boolean;
                                                   CaptionML=ENU=Suppress not clustered Lines (Workload CW);
                                                   Description=expired }
    { 290 ;   ;Copy Additional Cost Setup;Boolean ;CaptionML=ENU=Copy Additional Cost Setup }
    { 300 ;   ;Fix Prognosis Line  ;Boolean       ;CaptionML=ENU=Fix Prognosis Line }
    { 310 ;   ;Copy Positive Prognosis only;Boolean;
                                                   CaptionML=ENU=Copy Positive Prognosis without Progress recording only }
    { 320 ;   ;Service Time Table OBS;Code20      ;TableRelation="Service Time Table OBS".Code;
                                                   CaptionML=ENU=Service Time Table OBSOLETE;
                                                   Description=OBSOLETE }
    { 330 ;   ;Assign To           ;Option        ;CaptionML=ENU=Assign To;
                                                   OptionCaptionML=ENU=User,Contract Manager,Location Manager;
                                                   OptionString=User,ContractMgt,LocationMgt }
    { 331 ;   ;Order Manager based on;Option      ;CaptionML=ENU=Order Manager based on;
                                                   OptionCaptionML=ENU=" ,Contract Manager,Location Manager,User";
                                                   OptionString=[ ,ContractMgt,LocationMgt,User] }
    { 335 ;   ;Use Pref. Employee as Employee;Boolean;
                                                   CaptionML=ENU=Use Preferred Employee as Employee }
    { 340 ;   ;Service Order Planning;Option      ;CaptionML=ENU=Service Order Planning;
                                                   OptionCaptionML=ENU=Capacity-Check,Gantt-Chart;
                                                   OptionString=Capacity-Check,Gantt-Chart;
                                                   Description=expired }
    { 350 ;   ;Set Open to Process if Planned;Boolean;
                                                   CaptionML=ENU=Set Order Status Open to Process if Planned;
                                                   Description=expired }
    { 360 ;   ;Release CPE Mandatory OLD;Boolean  ;CaptionML=ENU=Release Cost Plus Entries Mandatory OLD;
                                                   Description=OBSOLETE }
    { 365 ;   ;Release CPE CntrAmnt Mandatory;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Release CPE CntrAmnt Mandatory" = FALSE THEN
                                                                  TESTFIELD("Release CPE Mandatory", "Release CPE Mandatory"::No);
                                                              END;

                                                   CaptionML=ENU=Release Cost Plus Entries with Contract Amount Mandatory }
    { 370 ;   ;Page ID Call        ;Integer       ;TableRelation=Object.ID WHERE (Type=CONST(Page));
                                                   CaptionML=ENU=Page ID Call }
    { 371 ;   ;Page ID Glazing Call;Integer       ;TableRelation=Object.ID WHERE (Type=CONST(Page));
                                                   CaptionML=ENU=Page ID Glazing Call }
    { 380 ;   ;Wage Component (Ovh. Surch.);Code10;TableRelation="Wage Component".Code WHERE (Component Type=FILTER(Hours),
                                                                                              Overtime=CONST(No));
                                                   CaptionML=ENU=Wage Component (Budget Overhead Surcharge) }
    { 390 ;   ;Get Hour Rate Sequence;Option      ;CaptionML=ENU=Get Hour Rate Order;
                                                   OptionCaptionML=ENU=TradeGroup - CostObject,CostObject - TradeGroup;
                                                   OptionString=TradeGroup_CostObject,CostObject_TradeGroup }
    { 400 ;   ;Invoice Method Installments;Option ;CaptionML=ENU=Invoice Method Contract Installments;
                                                   OptionCaptionML=ENU=Collect Positive and Negative Amounts,Separate Amounts for Invoice and Credit Memo;
                                                   OptionString=Collect Pos/Neg,Separate Pos/Neg }
    { 410 ;   ;Contract Prognosis Level 1;Option  ;CaptionML=ENU=Contract Prognosis (Level 1);
                                                   OptionCaptionML=ENU=Source Type,Cost Component;
                                                   OptionString=SourceType,CostComponent }
    { 411 ;   ;Contract Prognosis Level 2;Option  ;CaptionML=ENU=Contract Prognosis (Level 2);
                                                   OptionCaptionML=ENU=Cost Object,Cost Type;
                                                   OptionString=CostObject,CostType }
    { 420 ;   ;Contract Prognosis based on;Option ;CaptionML=ENU=Contract Prognosis (Labor) based on;
                                                   OptionCaptionML=ENU=Available,Extrapolation,Allowed;
                                                   OptionString=Available,Extrapolation,Allowed }
    { 425 ;   ;Prognosis Ovh Surcharge Labor;Boolean;
                                                   CaptionML=ENU=Prognosis Calculate Overhead Surcharge for Labor }
    { 430 ;   ;Service Authorization;Boolean      ;CaptionML=ENU=Service Authorization }
    { 440 ;   ;Chargeable Entry in Prognosis;Boolean;
                                                   CaptionML=ENU=Chargeable Entries in Prognosis }
    { 450 ;   ;Preclosure Result   ;Option        ;InitValue=No;
                                                   CaptionML=ENU=Preclosure Result;
                                                   OptionCaptionML=ENU=No,Yes;
                                                   OptionString=No,Yes }
    { 460 ;   ;Send Automatic E-Mail Using;Option ;CaptionML=ENU=Send Automatic E-Mail Using;
                                                   OptionCaptionML=ENU=" ,Service Order E-Mail Queue,SMTP";
                                                   OptionString=[ ,Service Order E-Mail Queue,SMTP] }
    { 470 ;   ;Cost Component Mandatory;Boolean   ;CaptionML=ENU=Cost Component Mandatory }
    { 475 ;   ;Cost Component Editable;Boolean    ;CaptionML=ENU=Cost Component Editable }
    { 480 ;   ;Rate Group          ;Code10        ;TableRelation="Rate Group".No.;
                                                   CaptionML=ENU=Rate Group;
                                                   Description=expired }
    { 485 ;   ;Rate Code           ;Code10        ;TableRelation="Rate by Group"."Rate Code";
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Rate Code;
                                                   Description=expired }
    { 490 ;   ;Recipe Group        ;Code10        ;TableRelation="Estimate Group".No. WHERE (Type=CONST(Recipe));
                                                   CaptionML=ENU=Recipe Group;
                                                   Description=expired }
    { 491 ;   ;Norm Group          ;Code10        ;TableRelation="Norm Group".Code;
                                                   CaptionML=ENU=Norm Group;
                                                   Description=expired }
    { 500 ;   ;Copy Part Lines     ;Boolean       ;CaptionML=ENU=Copy Part Lines;
                                                   Description=expired }
    { 510 ;   ;Cost Object Object Rate;Code20     ;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Sundry),
                                                                                               Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Cost Object Object Rate }
    { 522 ;   ;Maintenance Period (LT);DateFormula;CaptionML=ENU=Maintenance Period (Long Term) }
    { 530 ;   ;Collect Data for Gantt Chart;Boolean;
                                                   OnValidate=VAR
                                                                GanttChartMgt@1100525000 : Codeunit 11012037;
                                                              BEGIN
                                                                MODIFY; //Setup is read in next function
                                                                GanttChartMgt.InitBuildServiceHours;
                                                              END;

                                                   CaptionML=ENU=Collect Data for Graphical Work Order Planning }
    { 540 ;   ;Window for SMD OLD  ;Integer       ;OnValidate=BEGIN
                                                                TESTFIELD("Window for SMD OLD", 0);
                                                              END;

                                                   CaptionML=ENU=Window (in Days) for Service and Maintenance Diagram OLD }
    { 550 ;   ;Window start for SMD OLD;Integer   ;OnValidate=BEGIN
                                                                TESTFIELD("Window start for SMD OLD", 0);
                                                              END;

                                                   CaptionML=ENU=Start Window (in Days before Workdate) for Service and Maintenance Diagram OLD }
    { 560 ;   ;Show in SMD until Status OLD;Option;OnValidate=BEGIN
                                                                TESTFIELD("Show in SMD until Status OLD", 0);
                                                              END;

                                                   CaptionML=ENU=Show in Service and Maintenance Planning until Status OLD;
                                                   OptionCaptionML=ENU=" ,Open,,In Process,Technical Finished,Administrative Finished,Finished,Cancelled";
                                                   OptionString=,Open,,In Process,Technical Finished,Administrative Finished,Finished,Cancelled }
    { 580 ;   ;Contract Discount Level;Option     ;CaptionML=ENU=Contract Discount Level;
                                                   OptionCaptionML=ENU=Source Type,Cost Component;
                                                   OptionString=SourceType,CostComponent }
    { 590 ;   ;Add.Cost Based On Contr.Disc.;Boolean;
                                                   CaptionML=ENU=Additional Cost Based On Contract Discount }
    { 600 ;   ;Progress Preclosure Result;Option  ;CaptionML=ENU=Progress Preclosure Result;
                                                   OptionCaptionML=ENU=Contract Prognosis,Financial Period;
                                                   OptionString=Prognosis,FinPeriod }
    { 610 ;   ;Build Plant Location Code from;Option;
                                                   CaptionML=ENU=Build Plant Location Code from;
                                                   OptionCaptionML=ENU=" ,Service Order No.,Company No.+Service Order No.";
                                                   OptionString=[ ,ServNo,CompNoServNo];
                                                   Description=For create Plant Location from a service order }
    { 620 ;   ;Change Reference Point;Boolean     ;CaptionML=ENU=Change Reference Point }
    { 630 ;   ;E-Mail (Archive) OLD;Text80        ;CaptionML=ENU=E-Mail (Archive) OLD }
    { 640 ;   ;Path Name (Archive) ;Text250       ;OnValidate=BEGIN
                                                                FileMgt.AddBackSlashToDirectoryName("Path Name (Archive)");
                                                              END;

                                                   CaptionML=ENU=Path Name (Archive) }
    { 650 ;   ;Cost Object Intern Charge Cost;Code20;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                               Cost Type=FILTER(Subcontracting));
                                                   CaptionML=ENU=Cost Object Internal Charge Costs }
    { 651 ;   ;Cost Object Intern Charge Rev;Code20;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                               Cost Type=FILTER(Revenue));
                                                   CaptionML=ENU=Cost Object Internal Charge Revenues }
    { 655 ;   ;Intern Charge Journal Template;Code10;
                                                   TableRelation="Gen. Journal Template".Name;
                                                   CaptionML=ENU=Internal Charge Journal Template }
    { 656 ;   ;Intern Charge Journal Batch;Code10 ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(Intern Charge Journal Template));
                                                   CaptionML=ENU=Internal Charge Journal Batch }
    { 660 ;   ;Customer Internal Charge;Code20    ;TableRelation=Customer;
                                                   CaptionML=ENU=Customer Internal Charge }
    { 665 ;   ;Orig.Cost Object Intern Charge;Boolean;
                                                   CaptionML=ENU=Apply Original Cost Object for Internal Charge }
    { 700 ;   ;Lab Customer No.    ;Code4         ;CaptionML=ENU=Lab Customer No.;
                                                   Editable=No }
    { 710 ;   ;Lab User Name       ;Code20        ;CaptionML=ENU=Lab User Name;
                                                   Editable=No }
    { 720 ;   ;Lab Password        ;Text20        ;CaptionML=ENU=Lab Password;
                                                   Editable=No }
    { 730 ;   ;Lab Invoice Vendor No.;Code20      ;TableRelation=Vendor;
                                                   CaptionML=ENU=Lab Invoice Vendor No.;
                                                   Editable=No }
    { 810 ;   ;Service Location Nos.;Code10       ;TableRelation="No. Series";
                                                   CaptionML=ENU=Service Location Nos.;
                                                   Description=SERV_CONS }
    { 820 ;   ;Service Contract Nos.;Code10       ;TableRelation="No. Series";
                                                   CaptionML=ENU=Service Contract Nos.;
                                                   Description=SERV_CONS }
    { 830 ;   ;Invoice Proposal Nos.;Code10       ;TableRelation="No. Series";
                                                   CaptionML=ENU=Invoice Proposal Nos.;
                                                   Description=SERV_CONS }
    { 840 ;   ;Maintenance Proposal Nos.;Code10   ;TableRelation="No. Series";
                                                   CaptionML=ENU=Maintenance Proposal Nos.;
                                                   Description=SERV_CONS }
    { 850 ;   ;Service Contract Description 1;Text50;
                                                   CaptionML=ENU=Service Contract Description 1;
                                                   Description=SERV_CONS }
    { 860 ;   ;Service Contract Description 2;Text50;
                                                   CaptionML=ENU=Service Contract Description 2;
                                                   Description=SERV_CONS }
    { 870 ;   ;Default Index Date  ;Date          ;CaptionML=ENU=Default Index Date;
                                                   Description=SERV_CONS }
    { 880 ;   ;Source VAT Prod. Posting Group;Option;
                                                   CaptionML=ENU=Source VAT Prod. Posting Group Cost Plus Entries;
                                                   OptionCaptionML=ENU=ServiceOrder,Item/CostObject;
                                                   OptionString=ServiceOrder,Item/CostObject }
    { 890 ;   ;Object Modification Nos.;Code10    ;TableRelation="No. Series";
                                                   CaptionML=ENU=Object Modification Nos.;
                                                   Description=SERV_CONS }
    { 900 ;   ;Replacement Nos.    ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Replacements Nos.;
                                                   Description=SERV_CONS }
    { 910 ;   ;Object Nos.         ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Object Nos.;
                                                   Description=SERV_CONS }
    { 920 ;   ;Copy Insp.List Src.Type Other;Boolean;
                                                   CaptionML=ENU=Copy Inspection List with Source Type Other }
    { 925 ;   ;Tender Code System 1;Code10        ;TableRelation="Coding System"."Coding System";
                                                   OnValidate=BEGIN
                                                                UpdateTenderCodeSystem;
                                                              END;

                                                   CaptionML=ENU=Tender Code System 1;
                                                   Description=SERV_CONS }
    { 926 ;   ;Tender Code System 2;Code10        ;TableRelation="Coding System"."Coding System";
                                                   OnValidate=BEGIN
                                                                UpdateTenderCodeSystem;
                                                              END;

                                                   CaptionML=ENU=Tender Code System 2;
                                                   Description=SERV_CONS }
    { 930 ;   ;Object Imp. Worksheet Nos.;Code10  ;TableRelation="No. Series";
                                                   CaptionML=ENU=Object Imp. Worksheet Nos.;
                                                   Description=SERV_CONS }
    { 940 ;   ;Expected Hours      ;Decimal       ;CaptionML=ENU=Expected Hours }
    { 950 ;   ;Collect Invoices By for Calls;Option;
                                                   CaptionML=ENU=Collect Invoices By for Orders with Source Call;
                                                   OptionCaptionML=ENU=Service Order,Service Location,Service Contract,Customer,Call,Orderno. Customer,Base Service Order;
                                                   OptionString=ServOrder,ServLocation,ServContract,Customer,Call,CustOrder,BaseOrder }
    { 960 ;   ;Update GSP Automatically OLD;Boolean;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Update GSP Automatically OLD", FALSE);
                                                                //IF "Update GSP Automatically OLD" AND ("Update GSP Interval (Sec) OLD" <= 0) THEN
                                                                //  "Update GSP Interval (Sec) OLD" := 1;
                                                              END;

                                                   CaptionML=ENU=Update GSP Automatically OLD }
    { 970 ;   ;Update GSP Interval (Sec) OLD;Integer;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Update GSP Interval (Sec) OLD", 0);
                                                              END;

                                                   CaptionML=ENU=Update GSP Interval (Seconds) OLD }
    { 980 ;   ;Collective List Nos.;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Collective List Nos.;
                                                   Description=SERV_CONS }
    { 990 ;   ;Page ID Order       ;Integer       ;TableRelation=Object.ID WHERE (Type=CONST(Page));
                                                   CaptionML=ENU=Page ID Order;
                                                   Description=Vessels }
    { 1000;   ;Vessel Nos.         ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Vessel Nos. }
    { 1010;   ;SO (Plan) Ref. Point Filter;Text30 ;OnValidate=BEGIN
                                                                CheckReferencePointFilter("SO (Plan) Ref. Point Filter");
                                                              END;

                                                   OnLookup=VAR
                                                              ReferencePoint@1100528600 : Record 11020271;
                                                            BEGIN
                                                              ReferencePoint.SETRANGE(Apply, ReferencePoint.Apply::ServOrder);
                                                              IF PAGE.RUNMODAL(0, ReferencePoint) = ACTION::LookupOK THEN
                                                                VALIDATE("SO (Plan) Ref. Point Filter", FORMAT(ReferencePoint."No."));
                                                            END;

                                                   CaptionML=ENU=Service Order (Plan) Reference Point Filter;
                                                   Description=SERV_CONS }
    { 1015;   ;SO (Prepare) Ref. Point Filter;Text30;
                                                   OnValidate=BEGIN
                                                                CheckReferencePointFilter("SO (Prepare) Ref. Point Filter");
                                                              END;

                                                   OnLookup=VAR
                                                              ReferencePoint@1100528600 : Record 11020271;
                                                            BEGIN
                                                              ReferencePoint.SETRANGE(Apply, ReferencePoint.Apply::ServOrder);
                                                              IF PAGE.RUNMODAL(0, ReferencePoint) = ACTION::LookupOK THEN
                                                                VALIDATE("SO (Prepare) Ref. Point Filter", FORMAT(ReferencePoint."No."));
                                                            END;

                                                   CaptionML=ENU=Service Order (Work Preparation) Reference Point Filter;
                                                   Description=DP01015 }
    { 1020;   ;SO (Review) Ref. Point Filter;Text30;
                                                   OnValidate=BEGIN
                                                                CheckReferencePointFilter("SO (Review) Ref. Point Filter");
                                                              END;

                                                   OnLookup=VAR
                                                              ReferencePoint@1100528600 : Record 11020271;
                                                            BEGIN
                                                              ReferencePoint.SETRANGE(Apply, ReferencePoint.Apply::ServOrder);
                                                              IF PAGE.RUNMODAL(0, ReferencePoint) = ACTION::LookupOK THEN
                                                                VALIDATE("SO (Review) Ref. Point Filter", FORMAT(ReferencePoint."No."));
                                                            END;

                                                   CaptionML=ENU=Service Order (Review) Reference Point Filter;
                                                   Description=SERV_CONS }
    { 1030;   ;SO (Invoice) Ref. Point Filter;Text30;
                                                   OnValidate=BEGIN
                                                                CheckReferencePointFilter("SO (Invoice) Ref. Point Filter");
                                                              END;

                                                   OnLookup=VAR
                                                              ReferencePoint@1100528600 : Record 11020271;
                                                            BEGIN
                                                              ReferencePoint.SETRANGE(Apply, ReferencePoint.Apply::ServOrder);
                                                              IF PAGE.RUNMODAL(0, ReferencePoint) = ACTION::LookupOK THEN
                                                                VALIDATE("SO (Invoice) Ref. Point Filter", FORMAT(ReferencePoint."No."));
                                                            END;

                                                   CaptionML=ENU=Service Order (Invoice) Ref. Point Filter;
                                                   Description=SERV_CONS }
    { 1035;   ;Ref. Point SO Call Intake;Integer  ;TableRelation="Reference Point" WHERE (Apply=CONST(ServOrder));
                                                   CaptionML=ENU=Ref. Point Service Order Call Intake;
                                                   BlankZero=Yes;
                                                   Description=C023471 }
    { 1040;   ;Ref. Point SO Planned;Integer      ;TableRelation="Reference Point" WHERE (Apply=CONST(ServOrder));
                                                   CaptionML=ENU=Ref. Point Service Order Planned;
                                                   BlankZero=Yes;
                                                   Description=SERV_CONS }
    { 1045;   ;Ref. Point SO Prepared;Integer     ;TableRelation="Reference Point" WHERE (Apply=CONST(ServOrder));
                                                   CaptionML=ENU=Ref. Point Service Order Work Preparation Finished;
                                                   BlankZero=Yes;
                                                   Description=DP01015 }
    { 1050;   ;Ref. Point SO Reviewed;Integer     ;TableRelation="Reference Point" WHERE (Apply=CONST(ServOrder));
                                                   CaptionML=ENU=Ref. Point Service Order Reviewed;
                                                   BlankZero=Yes;
                                                   Description=SERV_CONS }
    { 1060;   ;Ref. Point SO Make Chargeable;Integer;
                                                   TableRelation="Reference Point" WHERE (Apply=CONST(ServOrder));
                                                   CaptionML=ENU=Ref. Point SO Make Chargeable;
                                                   BlankZero=Yes;
                                                   Description=SERV_CONS }
    { 1065;   ;Ref. Point SO Not Invoice;Integer  ;TableRelation="Reference Point" WHERE (Apply=CONST(ServOrder));
                                                   CaptionML=ENU=Ref. Point SO Not Invoice;
                                                   BlankZero=Yes;
                                                   Description=SERV_CONS }
    { 1070;No ;Status SO Coll. List Processed;Option;
                                                   CaptionML=ENU=Status Service Order ater Collective List Processed;
                                                   OptionCaptionML=ENU=" ,Open,,In Process,Technical Finished,Administrative Finished,Finished,Cancelled";
                                                   OptionString=[ ,Open,,In Process,Technical Finished,Administrative Finished,Finished,Cancelled];
                                                   Description=Reserved S&O cons }
    { 1080;   ;Accept Plant Costs Hours;Boolean   ;CaptionML=ENU=Accept Plant Costs Hours }
    { 1090;   ;Send Mail Status Update Once;Boolean;
                                                   CaptionML=ENU=Send Mail Status Update Once }
    { 1100;   ;Def. Location Structure Format;Code20;
                                                   CaptionML=ENU=Default Location Structure Format;
                                                   Description=SERV_CONS }
    { 1110;   ;Spec. Code Serial No.;Code10       ;TableRelation="Base Object Specification Line";
                                                   CaptionML=ENU=Spec. Code Serial No.;
                                                   Description=SERV_CONS }
    { 1120;   ;Spec. Code Year of Manufact.;Code10;TableRelation="Base Object Specification Line";
                                                   CaptionML=ENU=Spec. Code Year of Manufact.;
                                                   Description=SERV_CONS }
    { 1130;   ;SMD Tracking Username OLD;Text50   ;OnValidate=BEGIN
                                                                TESTFIELD("SMD Tracking Username OLD", '');  //T004638
                                                              END;

                                                   CaptionML=ENU=SMD Tracking username OLD;
                                                   Description=GSP }
    { 1140;   ;SMD Tracking Password OLD;Text50   ;OnValidate=BEGIN
                                                                TESTFIELD("SMD Tracking Password OLD", '');  //T004638
                                                              END;

                                                   CaptionML=ENU=SMD Tracking password OLD;
                                                   Description=GSP }
    { 1150;   ;SMD Tracking Server OLD;Text100    ;OnValidate=BEGIN
                                                                TESTFIELD("SMD Tracking Server OLD", '');  //T004638
                                                              END;

                                                   CaptionML=ENU=GSP XRoute service OLD;
                                                   Description=GSP }
    { 1152;   ;SMD XLocate Service OLD;Text100    ;OnValidate=BEGIN
                                                                TESTFIELD("SMD XLocate Service OLD", '');  //T004638
                                                              END;

                                                   CaptionML=ENU=GSP XLocate service OLD;
                                                   Description=GSP }
    { 1154;   ;SMD AjaxMaps Service OLD;Text100   ;OnValidate=BEGIN
                                                                TESTFIELD("SMD AjaxMaps Service OLD", '');  //T004638
                                                              END;

                                                   CaptionML=ENU=GSP AjaxMaps service OLD;
                                                   Description=GSP }
    { 1155;   ;SMD XMaps Service OLD;Text100      ;OnValidate=BEGIN
                                                                TESTFIELD("SMD XMaps Service OLD", '');  //T004638
                                                              END;

                                                   CaptionML=ENU=GSP XMaps service OLD;
                                                   Description=GSP }
    { 1170;   ;Calc. Prognosis Based On;Option    ;CaptionML=ENU=Calculate Prognosis Based On;
                                                   OptionCaptionML=ENU=Budget Hours,Actual Hours;
                                                   OptionString=Budget Hours,Actual Hours;
                                                   Description=SERV_CONS }
    { 1180;   ;Prognosis Method    ;Option        ;CaptionML=ENU=Prognosis Method;
                                                   OptionCaptionML=ENU=" ,Calculated Value,Previous Value";
                                                   OptionString=[ ,Calculated Value,Previous Value];
                                                   Description=SERV_CONS }
    { 1200;   ;Use Bill-to as Sell-to Custom.;Boolean;
                                                   CaptionML=ENU=Use Bill-to Customer as Sell-to Customer on Sales Invoice }
    { 1210;   ;Time Frame Double Call Check;Integer;
                                                   CaptionML=ENU=Time Frame for double call check (minutes);
                                                   MinValue=0 }
    { 1220;   ;Central Management  ;Boolean       ;OnValidate=VAR
                                                                LeadingCompany@1210190000 : Text[50];
                                                                CompanyRelationsCentralMgt@1100528600 : Record 11012059;
                                                              BEGIN
                                                                LeadingCompany := CompanyRelationsCentralMgt.GetLeadingCompany(DATABASE::"Service Setup", "Central Management");
                                                                IF NOT "Central Management" THEN BEGIN
                                                                  CompanyRelationsCentralMgt.UpdateCompanyRelation(DATABASE::"Service Setup", '');
                                                                  InitFlagsCentralMgt;
                                                                END ELSE BEGIN
                                                                  IF LeadingCompany <> '' THEN
                                                                    CompanyRelationsCentralMgt.UpdateCompanyRelation(DATABASE::"Service Setup", LeadingCompany);
                                                                END;
                                                                UpdateLocalSetup;
                                                              END;

                                                   CaptionML=ENU=Central Service Management }
    { 1230;   ;Standard Objects    ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT "Standard Objects" THEN BEGIN
                                                                  "Object Specifications" := FALSE;
                                                                  IF NOT "Maintenance Schemes" THEN
                                                                    Inspections := FALSE;
                                                                  "Material Inventories" := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Standard Objects }
    { 1240;   ;Maintenance Schemes ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT "Maintenance Schemes" THEN
                                                                  IF NOT "Standard Objects" THEN
                                                                    Inspections := FALSE;
                                                              END;

                                                   CaptionML=ENU=Maintenance Schemes }
    { 1250;   ;Object Specifications;Boolean      ;OnValidate=BEGIN
                                                                IF "Object Specifications" THEN
                                                                  TESTFIELD("Standard Objects");
                                                              END;

                                                   CaptionML=ENU=Object Specifications }
    { 1260;   ;Inspections         ;Boolean       ;OnValidate=BEGIN
                                                                IF Inspections THEN
                                                                  IF NOT "Standard Objects" AND NOT "Maintenance Schemes" THEN
                                                                    ERROR(Text000, FIELDCAPTION(Inspections), FIELDCAPTION("Standard Objects"), FIELDCAPTION("Maintenance Schemes"));
                                                              END;

                                                   CaptionML=ENU=Inspections }
    { 1270;   ;Maintenance Sales Rates;Boolean    ;CaptionML=ENU=Maintenance Sales Rates }
    { 1280;   ;Material Inventories;Boolean       ;OnValidate=BEGIN
                                                                IF "Material Inventories" THEN
                                                                  TESTFIELD("Standard Objects");
                                                              END;

                                                   CaptionML=ENU=Material Inventories }
    { 1290;   ;Default SO Appointm. Letter;Code10 ;TableRelation="SO Appointment Letter";
                                                   CaptionML=ENU=Default SO Appointmoint Letter }
    { 1300;   ;Priority Maintenance Orders;Code10 ;TableRelation="Service Priority";
                                                   CaptionML=ENU=Priority Maintenance Orders }
    { 1305;   ;Show only Company Priorities;Boolean;
                                                   CaptionML=ENU=If no Reference Norms, show only Company Priorities }
    { 1310;   ;Survey Nos.         ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Survey Nos. }
    { 1320;   ;Complex Nos.        ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Complex Nos. }
    { 1330;   ;Building Nos.       ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Building Nos. }
    { 1340;   ;Automatic Scheduling OLD;Boolean   ;OnValidate=BEGIN
                                                                TESTFIELD("Automatic Scheduling OLD", FALSE);
                                                              END;

                                                   CaptionML=ENU=Automatic Scheduling OLD;
                                                   Description=GSP }
    { 1345;   ;Store Mailed Worksheet;Boolean     ;CaptionML=ENU=Store Mailed Worksheet }
    { 1350;   ;Publish Stored Worksheet SPT;Boolean;
                                                   CaptionML=ENU=Publish Stored Worksheet SPT }
    { 1360;   ;Store Worksheet as Doc.Type.;Code10;TableRelation="Document Type";
                                                   CaptionML=ENU=Store Worksheet as Document Type }
    { 1370;   ;Spec. Code Lot No.  ;Code10        ;TableRelation="Base Object Specification Line";
                                                   CaptionML=ENU=Spec. Code Lot No. }
    { 1380;   ;Spec. Code Warr. Start Date V;Code10;
                                                   TableRelation="Base Object Specification Line";
                                                   CaptionML=ENU=Spec. Code Warranty Start Date Vendor }
    { 1390;   ;Spec. Code Warranty Date Vend.;Code10;
                                                   TableRelation="Base Object Specification Line";
                                                   CaptionML=ENU=Spec. Code Warranty Date Vendor }
    { 1400;   ;Spec. Code Warr. Start Date C.;Code10;
                                                   TableRelation="Base Object Specification Line";
                                                   CaptionML=ENU=Spec. Code Warranty Start Date Customer }
    { 1410;   ;Spec. Code Warranty Date Cust.;Code10;
                                                   TableRelation="Base Object Specification Line";
                                                   CaptionML=ENU=Spec. Code Warranty Date Customer }
    { 1420;   ;Spec. Code Warranty Code Vend.;Code10;
                                                   TableRelation="Base Object Specification Line";
                                                   CaptionML=ENU=Spec. Code Warranty Code Vend. }
    { 1430;   ;Spec. Code Warranty Code Cust.;Code10;
                                                   TableRelation="Base Object Specification Line";
                                                   CaptionML=ENU=Spec. Code Warranty Code Customer }
    { 1440;   ;Service Object Group Filter;Boolean;CaptionML=ENU=Service Object Group Filter }
    { 1450;   ;Create Adv./Purch. Subc. Call;Boolean;
                                                   CaptionML=ENU=Create Advice/Purchase Order with Subcontracting (Call) }
    { 1451;   ;Create Adv./Purch. Subc. Con.;Boolean;
                                                   CaptionML=ENU=Create Advice/Purchase Order with Subcontracting (Contract) }
    { 1452;   ;Create Adv./Purch. Subc. Dir.;Boolean;
                                                   CaptionML=ENU=Create Advice/Purchase Order with Subcontracting (Direct) }
    { 1460;   ;Update Status Base Order;Boolean   ;CaptionML=ENU=Update Status Base Order }
    { 1470;   ;Service Order Window;Integer       ;CaptionML=ENU=Service Order Window (days);
                                                   MinValue=0 }
    { 1475;   ;Service Order Window Before;Integer;CaptionML=ENU=Service Order Window (days before);
                                                   MinValue=0 }
    { 1480;   ;BORG Password Time Out;Integer     ;CaptionML=ENU=BORG Password Time Out;
                                                   MinValue=0 }
    { 1490;   ;Service to Project  ;Option        ;OnValidate=BEGIN
                                                                IF "Service to Project" = "Service to Project"::"Transfer Cost and Revenue" THEN
                                                                  TESTFIELD("Customer Internal Charge", '');
                                                              END;

                                                   CaptionML=ENU=Service to Project;
                                                   OptionCaptionML=ENU=Revenue as Cost,Transfer Cost and Revenue;
                                                   OptionString=Revenue as Cost,Transfer Cost and Revenue }
    { 1500;   ;NEN2767 Element Format OLD;Code20  ;CaptionML=ENU=NEN2767 Element Format (OBSOLETE);
                                                   Description=OBSOLETE }
    { 1510;   ;Appointment E-Mail Links;Option    ;CaptionML=ENU=Appointment E-Mail Links;
                                                   OptionCaptionML=ENU=Confirmation,Change,Both;
                                                   OptionString=Confirmation,Change,Both }
    { 1520;   ;Ref. Point Appointm. Confirm.;Integer;
                                                   TableRelation="Reference Point" WHERE (Apply=CONST(ServOrder));
                                                   CaptionML=ENU=Reference Point Appointment Confirmation;
                                                   BlankZero=Yes }
    { 1530;   ;Cause of Abs. for Reservations;Code10;
                                                   TableRelation="Cause of Absence" WHERE (Plannable=CONST(Yes));
                                                   CaptionML=ENU=Cause of Abs. for Reservations }
    { 1540;   ;Contract Publ on ServPort OLD;Boolean;
                                                   CaptionML=ENU=Contract Publish on Service Portal OLD;
                                                   Description=OBSOLETE }
    { 1550;   ;Location Publ on ServPort OLD;Boolean;
                                                   CaptionML=ENU=Location Publish on Service Portal OLD;
                                                   Description=OBSOLETE }
    { 1560;   ;CES Creates Call in ;Option        ;OnValidate=BEGIN
                                                                IF "CES Creates Call in" = "CES Creates Call in"::Cockpit THEN BEGIN
                                                                  IF "CES Creates Call Without SL" = "CES Creates Call Without SL"::" " THEN
                                                                    "CES Creates Call Without SL" := "CES Creates Call Without SL"::Card;
                                                                END ELSE
                                                                  "CES Creates Call Without SL" := "CES Creates Call Without SL"::" ";
                                                              END;

                                                   CaptionML=ENU=CES Creates Call in;
                                                   OptionCaptionML=ENU=Card,Wizard,Cockpit;
                                                   OptionString=Card,Wizard,Cockpit }
    { 1565;   ;CES Creates Call Without SL;Option ;CaptionML=ENU=CES Creates Call Without SL;
                                                   OptionCaptionML=ENU=" ,Card,Wizard";
                                                   OptionString=[ ,Card,Wizard] }
    { 1570;   ;Add Unit Price Lines ProdOBS;Boolean;
                                                   CaptionML=ENU=Add Unit Price Lines in Prod. Recording OBSOLETE;
                                                   Description=OBSOLETE }
    { 1580;   ;LTMP Planning Horizon OBS;DateFormula;
                                                   CaptionML=ENU=LTMP Planning Horizon (OBSOLETE);
                                                   Description=OBSOLETE }
    { 1590;   ;Reserve Hours for Calls;Option     ;CaptionML=ENU=Reserve Hours for Calls;
                                                   OptionCaptionML=ENU=Per Day,Per Daypart;
                                                   OptionString=Per Day,Per Daypart }
    { 1600;   ;Start Address for SO Replan;Option ;CaptionML=ENU=Start Address for SO Replan;
                                                   OptionCaptionML=ENU=" ,Company,Employee,Contact of Cost Center";
                                                   OptionString=[ ,Company,Employee,Cost Center] }
    { 1610;   ;Google API Client ID;Text50        ;OnValidate=BEGIN
                                                                IF "Google API Client ID" = '' THEN
                                                                  CLEAR("Google API Private Key");
                                                              END;

                                                   CaptionML=ENU=Google API Client ID }
    { 1615;   ;Google API Private Key;Text50      ;CaptionML=ENU=Google API Private Key }
    { 1620;   ;Sync. Location by Order/Call;Boolean;
                                                   CaptionML=ENU=Synchronize Location Data by Service Order/Call }
    { 1700;   ;Allow Inter- and Extrapolation;Boolean;
                                                   CaptionML=ENU=Allow Inter- and Extrapolation for Final Consumption Invoice }
    { 1701;   ;Do not Invoice First Prd SC;Boolean;CaptionML=ENU=Do not Invoice First Period of Standing Charge }
    { 1702;   ;Invoice Entire Last Prd SC;Boolean ;CaptionML=ENU=Invoice Entire Last Period of Standing Charge }
    { 1704;   ;Recalculate Advance Payments;Boolean;
                                                   CaptionML=ENU=Recalculate Advance Payments based on Including VAT }
    { 1710;   ;Base Code Installation Type;Code20 ;TableRelation="Base Object Specification Line";
                                                   CaptionML=ENU=Base Code Installation Type (IPCC) }
    { 1720;   ;Base Code Nominal Fill;Code20      ;TableRelation="Base Object Specification Line";
                                                   CaptionML=ENU=Base Code Nominal Fill }
    { 1730;   ;Base Code Refrigerant;Code20       ;TableRelation="Base Object Specification Line";
                                                   CaptionML=ENU=Base Code Refrigerant }
    { 1740;   ;Copy Docs to Next Order;Boolean    ;CaptionML=ENU=Copy Documents to Next Order }
    { 1750;   ;Activation Cost     ;Option        ;CaptionML=ENU=Activation Cost;
                                                   OptionCaptionML=ENU=No,Budget Cost,Actual Cost;
                                                   OptionString=No,BudgetCost,ActualCost }
    { 1755;   ;OnlyActivateForCostComponent;Code10;TableRelation="Cost Component";
                                                   CaptionML=ENU=Only Activate Cost For Cost Component }
    { 1760;   ;Journal Template Activate Cost;Code10;
                                                   TableRelation="Gen. Journal Template".Name WHERE (Type=CONST(General));
                                                   CaptionML=ENU=Journal Template Activate Cost }
    { 1761;   ;Journal Batch Activate Cost;Code10 ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(Journal Template Activate Cost));
                                                   CaptionML=ENU=Journal Batch Activate Cost }
    { 1770;   ;VAT Exemption Applicable;Boolean   ;OnValidate=BEGIN
                                                                IF NOT "VAT Exemption Applicable" THEN BEGIN
                                                                  "VAT Bus. Posting Group (Act.)" := '';
                                                                  "VAT Prod. Posting Group (Act.)" := '';
                                                                  "VAT Exemption Labor" := FALSE;
                                                                  "VAT Exemption Material" := FALSE;
                                                                  "VAT Exemption Subcontracting" := FALSE;
                                                                  "VAT Exemption Plant" := FALSE;
                                                                  "VAT Exemption Sundry" := FALSE;
                                                                END ELSE BEGIN
                                                                  IF NOT xRec."VAT Exemption Applicable" THEN BEGIN
                                                                    "VAT Exemption Labor" := TRUE;
                                                                    "VAT Exemption Material" := TRUE;
                                                                    "VAT Exemption Subcontracting" := TRUE;
                                                                    "VAT Exemption Plant" := TRUE;
                                                                    "VAT Exemption Sundry" := TRUE;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=VAT Exemption Applicable }
    { 1771;   ;VAT Bus. Posting Group (Act.);Code10;
                                                   TableRelation="VAT Business Posting Group";
                                                   OnValidate=BEGIN
                                                                IF "VAT Bus. Posting Group (Act.)" <> '' THEN
                                                                  TESTFIELD("VAT Exemption Applicable", TRUE);
                                                              END;

                                                   CaptionML=ENU=VAT Bus. Posting Group (Activ. Cost) }
    { 1772;   ;VAT Prod. Posting Group (Act.);Code10;
                                                   TableRelation="VAT Product Posting Group";
                                                   OnValidate=BEGIN
                                                                IF "VAT Prod. Posting Group (Act.)" <> '' THEN
                                                                  TESTFIELD("VAT Exemption Applicable", TRUE);
                                                              END;

                                                   CaptionML=ENU=VAT Prod. Posting Group (Activ. Cost) }
    { 1775;   ;VAT Exemption Labor ;Boolean       ;OnValidate=BEGIN
                                                                IF "VAT Exemption Labor" THEN
                                                                  TESTFIELD("VAT Exemption Applicable", TRUE);
                                                              END;

                                                   CaptionML=ENU=VAT Exemption Labor }
    { 1776;   ;VAT Exemption Material;Boolean     ;OnValidate=BEGIN
                                                                IF "VAT Exemption Material" THEN
                                                                  TESTFIELD("VAT Exemption Applicable", TRUE);
                                                              END;

                                                   CaptionML=ENU=VAT Exemption Material }
    { 1777;   ;VAT Exemption Subcontracting;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "VAT Exemption Subcontracting" THEN
                                                                  TESTFIELD("VAT Exemption Applicable", TRUE);
                                                              END;

                                                   CaptionML=ENU=VAT Exemption Subcontracting }
    { 1778;   ;VAT Exemption Plant ;Boolean       ;OnValidate=BEGIN
                                                                IF "VAT Exemption Plant" THEN
                                                                  TESTFIELD("VAT Exemption Applicable", TRUE);
                                                              END;

                                                   CaptionML=ENU=VAT Exemption Plant }
    { 1779;   ;VAT Exemption Sundry;Boolean       ;OnValidate=BEGIN
                                                                IF "VAT Exemption Sundry" THEN
                                                                  TESTFIELD("VAT Exemption Applicable", TRUE);
                                                              END;

                                                   CaptionML=ENU=VAT Exemption Sundry }
    { 1790;   ;Problem Desc. as Call Descr.;Boolean;
                                                   CaptionML=ENU=Problem Description as Call Description }
    { 1800;   ;Sync. Object Brand/Model/Type;Boolean;
                                                   CaptionML=ENU=Synchronize Object Brand/Model/Type }
    { 1810;   ;Copy Unit Prices to Next Order;Boolean;
                                                   CaptionML=ENU=Copy Unit Prices to Next Order }
    { 1820;   ;FLS VisiTour Active ;Boolean       ;OnValidate=VAR
                                                                ConsumedWebServiceMgt@1100528300 : Codeunit 11229310;
                                                              BEGIN
                                                                ConsumedWebServiceMgt.SetConsumedWebService('FLS', "FLS VisiTour Active", FALSE);
                                                              END;

                                                   CaptionML=ENU=FLS VisiTour Active }
    { 1830;   ;Customer not at Home;Code20        ;TableRelation="Debrief Text Rubric";
                                                   CaptionML=ENU=Customer not at Home }
    { 1900;   ;Change Request Nos. ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Change Request Nos. }
    { 1910;   ;Change Mgt Portal Active;Boolean   ;OnValidate=VAR
                                                                PossibleWebServiceMgt@1100528300 : Codeunit 11125354;
                                                              BEGIN
                                                                PossibleWebServiceMgt.ToggleSPT("Change Mgt Portal Active");
                                                              END;

                                                   CaptionML=ENU=Change Mgt Portal Active }
    { 1920;   ;Default Hour Cost Cd ChangeReq;Code10;
                                                   TableRelation="Cost Code";
                                                   CaptionML=ENU=Default Hour Cost Code Change Request }
    { 1930;   ;Use Planning Agreement on SO;Boolean;
                                                   CaptionML=ENU=Use Planning Agreement on SO (Contract) }
    { 1940;   ;Release CPE Mandatory;Option       ;OnValidate=BEGIN
                                                                IF "Release CPE Mandatory" = "Release CPE Mandatory"::Yes THEN
                                                                  "Release CPE CntrAmnt Mandatory" := TRUE;
                                                              END;

                                                   CaptionML=ENU=Release Cost Plus Entries Mandatory;
                                                   OptionCaptionML=ENU=No,Yes,At 100% Discount;
                                                   OptionString=No,Yes,At 100% Discount }
    { 1950;   ;Dispatch Woon Active;Boolean       ;OnValidate=VAR
                                                                ConsumedWebServiceMgt@1100528600 : Codeunit 11229310;
                                                              BEGIN
                                                                ConsumedWebServiceMgt.SetConsumedWebService('DISPATCH', "Dispatch Woon Active", "Dispatch Demo Mode");
                                                              END;

                                                   CaptionML=ENU=Dispatch Woon Active }
    { 1960;   ;Dispatch Demo Mode  ;Boolean       ;OnValidate=VAR
                                                                ConsumedWebServiceMgt@1100528600 : Codeunit 11229310;
                                                              BEGIN
                                                                ConsumedWebServiceMgt.SetConsumedWebService('DISPATCH', "Dispatch Woon Active", "Dispatch Demo Mode");
                                                              END;

                                                   CaptionML=ENU=Dispatch Demo Mode }
    { 1970;   ;Auto Reopen Coll.List Disabled;Boolean;
                                                   CaptionML=ENU=Auto Reopen Collective List Disabled }
    { 1980;   ;Auto Recalculate Coll. List;Boolean;CaptionML=ENU=Auto Recalculate Coll. List }
    { 1990;   ;Auto Update Call from Order;Boolean;CaptionML=ENU=Auto Update Call from Order }
    { 2000;   ;Include in Contract (Scheme);Boolean;
                                                   CaptionML=ENU=Include in Contract (Survey Maintenance Scheme);
                                                   Description=DP00978 }
    { 2010;   ;Limit Budget Control Active;Boolean;CaptionML=ENU=Limit Budget Control Active }
    { 11128285;;Tactics Agreement  ;Decimal       ;CaptionML=ENU=Tactics Agreeement (%) }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528600 : TextConst 'ENU=%1 can only be active when %2 of %2 is active';
      FileMgt@1100525000 : Codeunit 419;
      Text001@1100528601 : TextConst 'ENU=%1 is no valid Base 64 key';

    PROCEDURE CodeInFilter@1100485002(lvCode@1100485000 : Code[20];lvFilter@1100485001 : Text[1000]) : Boolean;
    VAR
      TmpRec@1100485002 : TEMPORARY Record 352;
    BEGIN
      IF lvFilter='*' THEN
        EXIT(TRUE);
      TmpRec.RESET;
      TmpRec.DELETEALL;
      TmpRec."Dimension Value Code" := lvCode;
      TmpRec.INSERT;
      TmpRec.SETFILTER("Dimension Value Code", lvFilter);
      EXIT(TmpRec.FIND('-'));
    END;

    PROCEDURE CheckReferencePointFilter@1100528601(Filter@1100528601 : Text[30]);
    VAR
      ReferencePoint@1100528600 : Record 11020271;
    BEGIN
      ReferencePoint.SETFILTER("No.", Filter);
    END;

    PROCEDURE UpdateLocalSetup@1100485000();
    VAR
      LeadingCompany@1210190000 : Text[50];
      CompRec@1210190001 : Record 2000000006;
      ServiceSetup@1100528600 : Record 11012800;
      CompanyRelationsCentralMgt@1100528601 : Record 11012059;
    BEGIN
      CompanyRelationsCentralMgt.SETRANGE("Company Service Data", COMPANYNAME);
      CompanyRelationsCentralMgt.SETFILTER(Company, '<>%1', COMPANYNAME);
      IF CompanyRelationsCentralMgt.FIND('-') THEN BEGIN
        REPEAT
          ServiceSetup.CHANGECOMPANY(CompanyRelationsCentralMgt.Company);
          ServiceSetup.GET;
          IF ServiceSetup."Central Management" THEN BEGIN
            CopyFlagsCentralMgt(ServiceSetup, Rec);
            ServiceSetup.MODIFY;
          END;
        UNTIL CompanyRelationsCentralMgt.NEXT = 0;
      END;

      IF "Central Management" AND (xRec."Central Management" <> "Central Management") THEN BEGIN
        LeadingCompany := CompanyRelationsCentralMgt.GetLeadingCompany(DATABASE::"Service Setup", "Central Management");
        IF (LeadingCompany <> '') AND (LeadingCompany <> COMPANYNAME) THEN BEGIN
          IF CompRec.GET(LeadingCompany) THEN BEGIN
            ServiceSetup.CHANGECOMPANY(LeadingCompany);
            ServiceSetup.GET;
            CopyFlagsCentralMgt(Rec, ServiceSetup);
          END;
        END;
      END;
    END;

    PROCEDURE InitFlagsCentralMgt@1210190000();
    BEGIN
      "Standard Objects" := FALSE;
      "Maintenance Schemes" := FALSE;
      "Object Specifications" := FALSE;
      Inspections := FALSE;
      "Maintenance Sales Rates" := FALSE;
      "Material Inventories" := FALSE;
    END;

    PROCEDURE CopyFlagsCentralMgt@1210190001(VAR ServiceSetup1@1210190000 : Record 11012800;VAR ServiceSetup2@1210190001 : Record 11012800);
    BEGIN
      ServiceSetup1."Standard Objects" := ServiceSetup2."Standard Objects";
      ServiceSetup1."Maintenance Schemes" := ServiceSetup2."Maintenance Schemes";
      ServiceSetup1."Object Specifications" := ServiceSetup2."Object Specifications";
      ServiceSetup1.Inspections := ServiceSetup2.Inspections;
      ServiceSetup1."Maintenance Sales Rates" := ServiceSetup2."Maintenance Sales Rates";
      ServiceSetup1."Material Inventories" := ServiceSetup2."Material Inventories";
    END;

    PROCEDURE CentralManagementActive@1100485001() : Boolean;
    VAR
      LeadingCompany@1210190000 : Text[50];
      CompanyRelationsCentralMgt@1100528600 : Record 11012059;
    BEGIN
      IF NOT GET THEN EXIT(FALSE);
      IF NOT "Central Management" THEN EXIT(FALSE);

      LeadingCompany := CompanyRelationsCentralMgt.GetLeadingCompany(DATABASE::"Service Setup", "Central Management");
      IF COMPANYNAME <> LeadingCompany THEN EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE UpdateTenderCodeSystem@1100528600();
    VAR
      StandardObject@1100528600 : Record 11020334;
      ServiceObject@1100528601 : Record 11071691;
      ServSurvLocationObject@1100528602 : Record 11071813;
    BEGIN
      IF "Tender Code System 1" <> xRec."Tender Code System 1" THEN BEGIN
        StandardObject.SETRANGE(Expired, FALSE);
        StandardObject.MODIFYALL("Tender Code System 1", "Tender Code System 1", TRUE);

        ServiceObject.MODIFYALL("Tender Code System 1", "Tender Code System 1", TRUE);

        ServSurvLocationObject.SETRANGE("Objects Created", FALSE);
        ServSurvLocationObject.MODIFYALL("Tender Code System 1", "Tender Code System 1", TRUE);
      END;
      IF "Tender Code System 2" <> xRec."Tender Code System 2" THEN BEGIN
        StandardObject.SETRANGE(Expired, FALSE);
        StandardObject.MODIFYALL("Tender Code System 2", "Tender Code System 2");

        ServiceObject.MODIFYALL("Tender Code System 2", "Tender Code System 2", TRUE);

        ServSurvLocationObject.SETRANGE("Objects Created", FALSE);
        ServSurvLocationObject.MODIFYALL("Tender Code System 2", "Tender Code System 2", TRUE);
      END;
    END;

    PROCEDURE IsServiceOrderNos@1100528602(INos@1100528600 : Code[10]) : Boolean;
    VAR
      ServiceSourceTypeSetup@1100528601 : Record 11071726;
      NoSeriesRelationship@1100528602 : Record 310;
    BEGIN
      ServiceSourceTypeSetup.SETRANGE("No. Series", INos);
      IF NOT ServiceSourceTypeSetup.ISEMPTY THEN
        EXIT(TRUE);
      ServiceSourceTypeSetup.SETFILTER("No. Series", '<>%1', '');
      IF ServiceSourceTypeSetup.FINDSET THEN
        REPEAT
          IF NoSeriesRelationship.GET(ServiceSourceTypeSetup."No. Series", INos) THEN
            EXIT(TRUE);
        UNTIL ServiceSourceTypeSetup.NEXT = 0;
    END;

    PROCEDURE IsServiceContractNos@1100528603(INos@1100528600 : Code[10]) : Boolean;
    VAR
      NoSeriesRelationship@1100528601 : Record 310;
    BEGIN
      IF "Service Contract Nos." = INos THEN
        EXIT(TRUE);
      IF NoSeriesRelationship.GET("Service Contract Nos.", INos) THEN
        EXIT(TRUE);
    END;

    PROCEDURE GetMaskedGoogleAPIPrivateKey@1100528610() : Text;
    VAR
      Istream@1100528600 : InStream;
      BigText@1100528601 : BigText;
    BEGIN
      EXIT(PADSTR('', STRLEN("Google API Private Key"), '*'));
    END;

    PROCEDURE SetGoogleAPIPrivateKey@1100528609(IKey@1100528600 : Text);
    VAR
      RegExpManagement@1100528601 : Codeunit 11012262;
    BEGIN
      IF IKey <> '' THEN BEGIN
        TESTFIELD("Google API Client ID");
        IF NOT RegExpManagement.IsValidBase64String(IKey) THEN
          ERROR(Text001, "Google API Private Key");
        "Google API Private Key" := IKey;
      END ELSE
        "Google API Private Key" := '';
      MODIFY(TRUE);
    END;

    BEGIN
    {
      160408 ITERO.SB RAD-206 Added field "Tactics Agreement"
    }
    END.
  }
}

