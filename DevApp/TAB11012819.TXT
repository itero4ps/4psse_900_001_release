OBJECT Table 11012819 Service-Ledger Entry
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               GenJnlPostPreview@1100525000 : Codeunit 19;
             BEGIN
               GenJnlPostPreview.SaveServLedgerEntry(Rec);
             END;

    CaptionML=ENU=Service & Maintenance Ledger Entry;
    LookupPageID=Page11012826;
    DrillDownPageID=Page11012826;
  }
  FIELDS
  {
    { 10  ;   ;Entry No.           ;Integer       ;CaptionML=ENU=Entry No. }
    { 20  ;   ;Service Contract No.;Code20        ;TableRelation=Service-Contract.No.;
                                                   CaptionML=ENU=Service Contract No. }
    { 30  ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=" ,Purchase Invoice,Purchase Credit Memo,Sales Invoice,Sales Credit Memo";
                                                   OptionString=[ ,Purchase Invoice,Purchase Credit Memo,Sales Invoice,Sales Credit Memo] }
    { 40  ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No. }
    { 45  ;   ;Document Line No.   ;Integer       ;CaptionML=ENU=Document Line No. }
    { 50  ;   ;G/L Account         ;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=ENU=G/L Account }
    { 60  ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 80  ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Customer }
    { 81  ;   ;Customer Name       ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Name WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=ENU=Customer Name;
                                                   Editable=No }
    { 85  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=ENU=Vendor }
    { 86  ;   ;Vendor Name         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Vendor No.)));
                                                   CaptionML=ENU=Vendor Name;
                                                   Editable=No }
    { 90  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=User ID }
    { 100 ;   ;Installment No.     ;Code10        ;CaptionML=ENU=Installment No.;
                                                   Numeric=Yes }
    { 110 ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   CaptionClass='1,2,1' }
    { 120 ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Global Dimension 2 Code;
                                                   CaptionClass='1,2,2' }
    { 130 ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=ENU=Currency Code }
    { 140 ;   ;Unit Cost (LCY)     ;Decimal       ;CaptionML=ENU=Unit Cost (LCY);
                                                   AutoFormatType=2 }
    { 142 ;   ;Unit Cost           ;Decimal       ;CaptionML=ENU=Unit Cost;
                                                   AutoFormatType=2 }
    { 150 ;   ;Quantity            ;Decimal       ;CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5 }
    { 170 ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 175 ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
    { 180 ;   ;Unit of Measure Code;Code10        ;TableRelation="Unit of Measure";
                                                   CaptionML=ENU=Unit of Measure Code }
    { 185 ;   ;Qty. per Unit of Measure;Decimal   ;InitValue=1;
                                                   CaptionML=ENU=Qty. per Unit of Measure;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 190 ;   ;Sales Price (LCY)   ;Decimal       ;CaptionML=ENU=Sales Price (LCY);
                                                   AutoFormatType=2 }
    { 192 ;   ;Sales Price         ;Decimal       ;CaptionML=ENU=Sales Price;
                                                   AutoFormatType=2 }
    { 200 ;   ;Total Cost (LCY)    ;Decimal       ;CaptionML=ENU=Total Cost (LCY);
                                                   AutoFormatType=1 }
    { 202 ;   ;Total Cost          ;Decimal       ;CaptionML=ENU=Total Cost;
                                                   AutoFormatType=1 }
    { 210 ;   ;Total Revenue (LCY) ;Decimal       ;CaptionML=ENU=Total Revenue (LCY);
                                                   AutoFormatType=1 }
    { 212 ;   ;Total Revenue       ;Decimal       ;CaptionML=ENU=Total Revenue;
                                                   AutoFormatType=1 }
    { 220 ;   ;Service Order No.   ;Code20        ;TableRelation="Service Order";
                                                   OnValidate=BEGIN
                                                                //db, 07-01-09
                                                                ValidateServOrder(COMPANYNAME);
                                                              END;

                                                   CaptionML=ENU=Service Order No. }
    { 221 ;   ;Service Order Status;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Order".Status WHERE (No.=FIELD(Service Order No.)));
                                                   CaptionML=ENU=Service Order Status;
                                                   OptionCaptionML=ENU=Open,,In Process,Technical Finished,Administrative Finished,Finished,Cancelled;
                                                   OptionString=Open,,In Process,Technical Finished,Administrative Finished,Finished,Cancelled;
                                                   Editable=No }
    { 222 ;   ;Service Order Description;Text50   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Order".Description WHERE (No.=FIELD(Service Order No.)));
                                                   CaptionML=ENU=Service Order Description;
                                                   Editable=No }
    { 230 ;   ;Employee No.        ;Code20        ;TableRelation=Employee;
                                                   CaptionML=ENU=Employee No. }
    { 240 ;   ;WIP Account Costs   ;Code20        ;TableRelation="G/L Account".No.;
                                                   CaptionML=ENU=WIP Account Costs }
    { 250 ;   ;WIP Balance Account ;Code20        ;TableRelation="G/L Account".No.;
                                                   CaptionML=ENU=WIP Balance Account }
    { 260 ;   ;Wage Component      ;Code10        ;TableRelation="Wage Component";
                                                   CaptionML=ENU=Wage Component }
    { 270 ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=ENU=Source Code }
    { 280 ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=ENU=Reason Code }
    { 290 ;   ;Service Location No.;Code20        ;TableRelation="Service Location".No.;
                                                   CaptionML=ENU=Service Location No. }
    { 300 ;   ;Cost Plus Entry Created;Boolean    ;CaptionML=ENU=Cost Plus Entry Created }
    { 310 ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=ENU=Item No.;
                                                   Editable=No }
    { 311 ;   ;Basic Item          ;Code20        ;TableRelation="Basic Item"."Product Code" WHERE (Manufacturer=FIELD(Manufacturer));
                                                   CaptionML=ENU=Basic Item;
                                                   Editable=No }
    { 312 ;   ;Trade Item          ;Code20        ;TableRelation="Trade Item"."Item Code" WHERE (Vendor=FIELD("Vendor (Trade Item)"));
                                                   CaptionML=ENU=Trade Item;
                                                   Editable=No }
    { 315 ;   ;Vendor (Trade Item) ;Code15        ;TableRelation="ETIM Vendor (Central Mgt)";
                                                   CaptionML=ENU=Vendor (Trade Item);
                                                   Editable=No }
    { 316 ;   ;Manufacturer        ;Code15        ;TableRelation="ETIM Vendor (Central Mgt)";
                                                   CaptionML=ENU=Manufacturer;
                                                   Editable=No }
    { 320 ;   ;Cost Type           ;Option        ;CaptionML=ENU=Cost Type;
                                                   OptionCaptionML=ENU=Labor,Material,Subcontracting,Plant,Sundry,Revenues;
                                                   OptionString=Labor,Material,Subcontracting,Plant,Sundry,Revenues }
    { 330 ;   ;Project No.         ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=ENU=Project No. }
    { 335 ;   ;Chargeable          ;Boolean       ;InitValue=Yes;
                                                   CaptionML=ENU=Chargeable }
    { 340 ;   ;Surcharge           ;Boolean       ;CaptionML=ENU=Surcharge }
    { 345 ;   ;Expense             ;Boolean       ;CaptionML=ENU=Expense }
    { 350 ;   ;Cost Plus Line No.  ;Integer       ;CaptionML=ENU=Cost Plus Line No.;
                                                   BlankZero=Yes }
    { 355 ;   ;Source Type         ;Option        ;InitValue=Direct;
                                                   OnValidate=BEGIN
                                                                IF "Service Order No." = '' THEN BEGIN
                                                                  "Source Type" := "Source Type"::Contract;
                                                                END ELSE BEGIN
                                                                  IF ServOrderRec.GET("Service Order No.") THEN
                                                                    "Source Type" := ServOrderRec."Source Type";
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Source Type;
                                                   OptionCaptionML=ENU=Call,Contract,Direct,Estimate;
                                                   OptionString=Call,Contract,Direct,Estimate }
    { 360 ;   ;Closed Costs        ;Decimal       ;CaptionML=ENU=Closed Costs;
                                                   AutoFormatType=1 }
    { 370 ;   ;Closed Revenues     ;Decimal       ;CaptionML=ENU=Closed Revenues;
                                                   AutoFormatType=1 }
    { 375 ;   ;Actual Preclosure Result;Decimal   ;CaptionML=ENU=Actual Preclosure Result }
    { 376 ;   ;Actual Preclosure Cost;Decimal     ;CaptionML=ENU=Actual Preclosure Cost }
    { 377 ;   ;Actual Preclosure Revenue;Decimal  ;CaptionML=ENU=Actual Preclosure Revenue }
    { 380 ;   ;Service Contract WIP processed;Boolean;
                                                   CaptionML=ENU=Service Contract WIP processed;
                                                   Editable=No }
    { 385 ;   ;Service Order WIP processed;Boolean;CaptionML=ENU=Service Order WIP processed;
                                                   Editable=No }
    { 390 ;   ;Comment             ;Text50        ;CaptionML=ENU=Comment }
    { 410 ;   ;Additional Cost     ;Boolean       ;CaptionML=ENU=Additional Cost }
    { 420 ;   ;Supplying Company   ;Text30        ;TableRelation=Company;
                                                   CaptionML=ENU=Supplying Company }
    { 430 ;   ;Cost Component      ;Code20        ;TableRelation="Cost Component".Code;
                                                   CaptionML=ENU=Cost Component;
                                                   NotBlank=Yes }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=No }
    { 505 ;   ;Rental Period       ;Text30        ;CaptionML=ENU=Rental Period }
    { 510 ;   ;Original Cost Type  ;Option        ;CaptionML=ENU=Original Cost Type;
                                                   OptionCaptionML=ENU=" ,Labor,Material,Subcontracting,Plant,Sundry,Revenues";
                                                   OptionString=[ ,Labor,Material,Subcontracting,Plant,Sundry,Revenues] }
    { 520 ;   ;Removal Contribution;Boolean       ;CaptionML=ENU=Removal Contribution }
    { 530 ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=ENU=Location Code }
    { 550 ;   ;Sales Price Purch. Order;Decimal   ;CaptionML=ENU=Sales Price Purchase Order;
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 560 ;   ;Cost Entry No. Service Ledger;Integer;
                                                   TableRelation="Service-Ledger Entry";
                                                   CaptionML=ENU=Cost Entry No. Service Ledger }
    { 570 ;   ;Cost Present        ;Boolean       ;OnValidate=BEGIN
                                                                "Cost Present" := ("Total Cost (LCY)" <> 0);  //db, 19-06-08
                                                              END;

                                                   CaptionML=ENU=Cost Present }
    { 571 ;   ;Revenue Present     ;Boolean       ;OnValidate=BEGIN
                                                                "Revenue Present" := ("Total Revenue (LCY)" <> 0);  //db, 19-06-08
                                                              END;

                                                   CaptionML=ENU=Revenue Present }
    { 600 ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Date Filter }
    { 610 ;   ;Amount Invoiced     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Service-Ledger Entry"."Total Revenue (LCY)" WHERE (Cost Entry No. Service Ledger=FIELD(Entry No.),
                                                                                                                        Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Amount Invoiced;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 620 ;   ;Quantity Invoiced   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Service-Ledger Entry".Quantity WHERE (Cost Entry No. Service Ledger=FIELD(Entry No.),
                                                                                                           Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Quantity Invoiced;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 650 ;   ;Text                ;Text250       ;CaptionML=ENU=Text;
                                                   Editable=No }
    { 700 ;   ;Vendor Posting Group;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor."Vendor Posting Group" WHERE (No.=FIELD(Vendor No.)));
                                                   TableRelation="Vendor Posting Group";
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Vendor Posting Group;
                                                   Editable=No }
    { 705 ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=ENU=Transaction Type }
    { 706 ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=ENU=Transport Method }
    { 707 ;   ;Entry/Exit Point    ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=ENU=Entry/Exit Point }
    { 708 ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=ENU=Area }
    { 709 ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=ENU=Transaction Specification }
    { 710 ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Country?Region Code }
    { 720 ;   ;Country/Region of Origin/Dest.;Code10;
                                                   TableRelation=Country/Region;
                                                   CaptionML=ENU=Country/Region of Origin/Destination }
    { 730 ;   ;Tariff No.          ;Code20        ;TableRelation="Tariff Number";
                                                   CaptionML=ENU=Tariff No. }
    { 740 ;   ;Net Weight          ;Decimal       ;CaptionML=ENU=Net Weight;
                                                   DecimalPlaces=0:5 }
    { 750 ;   ;Execution Date      ;Date          ;CaptionML=ENU=Execution Date }
    { 760 ;   ;Order Kind          ;Code10        ;TableRelation="Service Order Indication".Code WHERE (Indication=CONST(Kind));
                                                   CaptionML=ENU=Order Kind }
    { 761 ;   ;Order Type          ;Code10        ;TableRelation="Service Order Indication".Code WHERE (Indication=CONST(Type));
                                                   CaptionML=ENU=Order Type }
    { 770 ;   ;Discipline          ;Code10        ;TableRelation=Discipline;
                                                   CaptionML=ENU=Discipline }
    { 771 ;   ;Trade Speciality    ;Code10        ;TableRelation="Trade Speciality";
                                                   CaptionML=ENU=Trade Speciality }
    { 780 ;   ;Order Manager       ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=ENU=Order Manager }
    { 790 ;   ;Base Service Order No.;Code20      ;TableRelation="Service Order".No.;
                                                   CaptionML=ENU=Base Service Order No.;
                                                   Editable=No }
    { 800 ;   ;Closed Entry No. Serv. Ledger;Integer;
                                                   TableRelation="Service-Ledger Entry" WHERE (Entry No.=FIELD(Closed Entry No. Serv. Ledger));
                                                   CaptionML=ENU=Closed Entry No. Serv. Ledger;
                                                   Editable=No }
    { 810 ;   ;Time From           ;Time          ;CaptionML=ENU=Time From }
    { 820 ;   ;Time Until          ;Time          ;CaptionML=ENU=Time Until }
    { 830 ;   ;Coll.-List SC Inv. Line No.;Integer;CaptionML=ENU=Collective-List Service Contract Invoicng Line No.;
                                                   Editable=No }
    { 840 ;   ;Collective List No. ;Code20        ;TableRelation="Service Collective-List";
                                                   CaptionML=ENU=Collective List No.;
                                                   Editable=No }
    { 850 ;   ;Transfer to Project ;Option        ;CaptionML=ENU=Transfer to Project;
                                                   OptionCaptionML=ENU=" ,Processed,Correction";
                                                   OptionString=[ ,Processed,Correction];
                                                   Editable=No }
    { 860 ;   ;Service Control Period Date;Date   ;OnValidate=BEGIN
                                                                IF ("Service Contract No." <> '') AND ("Service Order No." = '') THEN
                                                                  TestValidSCCtrlPeriod;
                                                              END;

                                                   CaptionML=ENU=Service Control Period Date;
                                                   Editable=No }
    { 870 ;   ;Installment Line No.;Integer       ;CaptionML=ENU=Installment Line No.;
                                                   Editable=No }
    { 880 ;   ;Intercompany Ledger Entry No.;Integer;
                                                   TableRelation="Intercompany Ledger Entry";
                                                   CaptionML=ENU=Intercompany Ledger Entry No.;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 881 ;   ;Intercompany Price  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Intercompany Ledger Entry".Price WHERE (Entry No.=FIELD(Intercompany Ledger Entry No.)));
                                                   CaptionML=ENU=Intercompany Price;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="Intercompany Currency Code" }
    { 882 ;   ;Intercompany Amount ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Intercompany Ledger Entry".Amount WHERE (Entry No.=FIELD(Intercompany Ledger Entry No.)));
                                                   CaptionML=ENU=Intercompany Amount;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Intercompany Currency Code" }
    { 883 ;   ;Intercompany Currency Code;Code10  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Intercompany Ledger Entry"."Currency Code" WHERE (Entry No.=FIELD(Intercompany Ledger Entry No.)));
                                                   CaptionML=ENU=Intercompany Currency Code;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Document Type,Document No.               }
    {    ;Document No.,Posting Date                }
    {    ;Service Contract No.,Installment Line No.;
                                                   SumIndexFields=Total Revenue (LCY);
                                                   MaintainSIFTIndex=No }
    {    ;Service Order No.,Cost Plus Line No.    ;SumIndexFields=Total Cost (LCY),Total Revenue (LCY),Total Revenue,Quantity;
                                                   MaintainSIFTIndex=No }
    {    ;Service Contract No.,Source Type,Cost Type,Global Dimension 2 Code,Additional Cost,Cost Present,Revenue Present,Posting Date;
                                                   SumIndexFields=Total Cost (LCY),Total Revenue (LCY),Quantity,Closed Costs,Closed Revenues,Actual Preclosure Result,Actual Preclosure Cost,Actual Preclosure Revenue;
                                                   MaintainSQLIndex=No;
                                                   MaintainSIFTIndex=No }
    {    ;Service Order No.,Source Type,Cost Type,Global Dimension 2 Code,Cost Component,Additional Cost,Cost Present,Revenue Present,Posting Date;
                                                   SumIndexFields=Total Cost (LCY),Total Revenue (LCY),Quantity,Closed Costs,Closed Revenues;
                                                   MaintainSIFTIndex=No }
    {    ;Service Location No.,Source Type,Cost Type,Global Dimension 2 Code,Cost Component,Additional Cost,Cost Present,Revenue Present,Posting Date;
                                                   SumIndexFields=Total Cost (LCY),Total Revenue (LCY),Quantity;
                                                   MaintainSIFTIndex=No }
    {    ;Service Contract No.,Cost Type,Global Dimension 2 Code;
                                                   SumIndexFields=Total Cost (LCY),Total Revenue (LCY),Quantity;
                                                   MaintainSQLIndex=No;
                                                   MaintainSIFTIndex=No }
    {    ;Service Contract No.,Source Type,Cost Component,Cost Type,Global Dimension 2 Code,Additional Cost,Cost Present,Revenue Present,Posting Date,Surcharge;
                                                   SumIndexFields=Total Cost (LCY),Total Revenue (LCY),Quantity,Closed Costs,Closed Revenues,Actual Preclosure Result,Actual Preclosure Cost,Actual Preclosure Revenue;
                                                   MaintainSIFTIndex=No }
    {    ;Service Contract No.,Source Type,Cost Type,Global Dimension 2 Code,Posting Date;
                                                   SumIndexFields=Total Cost (LCY),Total Revenue (LCY),Quantity;
                                                   MaintainSIFTIndex=No }
    {    ;Service Contract No.,Posting Date       ;SumIndexFields=Total Cost (LCY),Total Revenue (LCY) }
    {    ;Service Contract No.,Service Control Period Date;
                                                   SumIndexFields=Total Cost (LCY),Total Revenue (LCY) }
    {    ;Cost Entry No. Service Ledger,Posting Date;
                                                   SumIndexFields=Total Revenue (LCY),Quantity;
                                                   MaintainSIFTIndex=No }
    {    ;Base Service Order No.,Service Order No.,Cost Type,Cost Component,Additional Cost,Chargeable,Cost Plus Entry Created,Cost Present,Revenue Present,Posting Date;
                                                   SumIndexFields=Total Cost (LCY),Total Revenue (LCY),Quantity,Closed Costs,Closed Revenues;
                                                   MaintainSIFTIndex=No }
    {    ;Base Service Order No.,Service Order No.,Service Order WIP processed;
                                                   SumIndexFields=Total Cost (LCY),Total Revenue (LCY),Quantity;
                                                   MaintainSIFTIndex=No }
    {    ;Service Contract No.,Service Order No.,Posting Date,Additional Cost;
                                                   SumIndexFields=Total Revenue (LCY);
                                                   MaintainSIFTIndex=No }
    {    ;Service Contract No.,Service Order No.,Service Control Period Date,Additional Cost;
                                                   SumIndexFields=Total Revenue (LCY);
                                                   MaintainSQLIndex=No;
                                                   MaintainSIFTIndex=No }
    {    ;Customer No.,Cost Type,Posting Date     ;SumIndexFields=Total Cost (LCY),Total Revenue (LCY) }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ServOrderRec@1210190000 : Record 11012823;
      ServContractRec@1100485000 : Record 11012812;
      DPA_Management@1100000999 : Codeunit 11012783;

    PROCEDURE ShowDimensions@1();
    VAR
      DimMgt@1100525000 : Codeunit 408;
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"Entry No."));
    END;

    PROCEDURE ValidateServOrder@1100525000(CompName@1100525000 : Text[50]);
    BEGIN
      IF "Service Order No." = '' THEN BEGIN
        "Base Service Order No." := '';
        ServContractRec.CHANGECOMPANY(CompName);
        IF ServContractRec.GET("Service Contract No.") THEN
          "Order Manager" := ServContractRec."Contract Manager";
      END ELSE BEGIN
        ServOrderRec.CHANGECOMPANY(CompName);
        IF ServOrderRec.GET("Service Order No.") THEN BEGIN
          "Order Manager" := ServOrderRec."Order Manager";
          "Order Kind" := ServOrderRec."Order Kind";
          "Order Type" := ServOrderRec."Order Type";
          Discipline := ServOrderRec.Discipline;
          "Trade Speciality" := ServOrderRec."Trade Speciality";
          "Base Service Order No." := ServOrderRec."Base Service Order No.";
        END;
      END;
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11012819) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11012819');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Service-Ledger Entry", "Global Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Global Dimension 1 Code");
    END;

    PROCEDURE ItemIsInvalid@1100528401() InvalidItem : Boolean;
    VAR
      Item@1100528400 : Record 27;
      BasicItem@1100528401 : Record 11012316;
      TradeItem@1100528402 : Record 11012317;
    BEGIN
      //**4PS
      IF "Item No." <> '' THEN
        IF Item.GET("Item No.") THEN
          InvalidItem := Item.Blocked
        ELSE
          InvalidItem := TRUE;

      IF "Basic Item" <> '' THEN
        IF BasicItem.GET(Manufacturer, "Basic Item") THEN
          InvalidItem := BasicItem.Expired
        ELSE
          InvalidItem := TRUE;

      IF "Trade Item" <> '' THEN
        IF TradeItem.GET("Vendor (Trade Item)", "Trade Item") THEN
          InvalidItem := TradeItem.Expired
        ELSE
          InvalidItem := TRUE;
    END;

    LOCAL PROCEDURE TestValidSCCtrlPeriod@1100528600();
    VAR
      ServiceContractCtrlPeriod@1100528600 : Record 11071746;
    BEGIN
      IF "Service Control Period Date" = 0D THEN
        EXIT;
      ServiceContractCtrlPeriod.UpdateControlPeriodsUntil("Service Contract No.", "Service Control Period Date");
      ServiceContractCtrlPeriod.SETRANGE("Service Contract No.", "Service Contract No.");
      ServiceContractCtrlPeriod.SETFILTER("Starting Date", '<=%1', "Service Control Period Date");
      ServiceContractCtrlPeriod.SETFILTER("Ending Date", '>=%1', "Service Control Period Date");
      ServiceContractCtrlPeriod.SETRANGE("Date Finished", 0D);
      ServiceContractCtrlPeriod.FINDFIRST;
    END;

    BEGIN
    {
      4PS - 16-11-07 - Sumindexfield Quantity added on key "Service Order No.,Cost Plus Line No.". For speeding up GanntChart.

      db, 25-05-11: index 14 (base order) expanded with several fields from index 7 (serv.order); closed cost/revenue as SumIndexFields

      4PS, 15-11-13, DP00483, Performance tuning: Several MaintainSQLIndex en MaintainSiftIndex disabled
      4PS, 10-11-14, C017173, Index Customer No. added
    }
    END.
  }
}

