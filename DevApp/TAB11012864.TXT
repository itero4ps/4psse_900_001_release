OBJECT Table 11012864 Consignment Time
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               LicenceCu.CheckLicenceConsignment;
             END;

    OnModify=BEGIN
               LicenceCu.CheckLicenceConsignment;
             END;

    CaptionML=ENU=Consignment Time;
  }
  FIELDS
  {
    { 1   ;   ;Consignment Code    ;Code10        ;TableRelation=Consignment;
                                                   CaptionML=ENU=Consignment Code;
                                                   NotBlank=Yes }
    { 2   ;   ;Start Day of Week   ;Integer       ;CaptionML=ENU=Start Day of Week }
    { 3   ;   ;Start Date          ;Date          ;OnValidate=BEGIN
                                                                LookupDayAndWeek("Start Date", "Start Day", "Start Week");
                                                                CheckDateTimeOverlap;
                                                                "Start Day of Week" := DATE2DWY("Start Date", 1);
                                                              END;

                                                   CaptionML=ENU=Start Date }
    { 4   ;   ;Start Time          ;Time          ;OnValidate=BEGIN
                                                                CheckDateTimeOverlap;
                                                              END;

                                                   CaptionML=ENU=Start Time }
    { 5   ;   ;Start Day           ;Text30        ;FieldClass=Normal;
                                                   CaptionML=ENU=Start Day;
                                                   Editable=No }
    { 6   ;   ;Start Week          ;Integer       ;FieldClass=Normal;
                                                   CaptionML=ENU=Start Week;
                                                   Editable=No }
    { 7   ;   ;End Date            ;Date          ;OnValidate=BEGIN
                                                                LookupDayAndWeek("End Date", "End Day", "End Week");
                                                                CheckDateTimeOverlap;
                                                              END;

                                                   CaptionML=ENU=End Date }
    { 8   ;   ;End Time            ;Time          ;OnValidate=BEGIN
                                                                CheckDateTimeOverlap;
                                                              END;

                                                   CaptionML=ENU=End Time }
    { 9   ;   ;End Day             ;Text30        ;FieldClass=Normal;
                                                   CaptionML=ENU=End Day;
                                                   Editable=No }
    { 10  ;   ;End Week            ;Integer       ;CaptionML=ENU=End Week;
                                                   Editable=No }
    { 11  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
  }
  KEYS
  {
    {    ;Consignment Code,Start Date,Start Time  ;Clustered=Yes }
    {    ;Consignment Code,Start Date,End Date     }
    {    ;Start Date,Start Time                    }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text11012864@1100485000 : TextConst 'ENU=%1 has an overlap with another %2.';
      LicenceCu@1100485001 : Codeunit 11012131;

    LOCAL PROCEDURE LookupDayAndWeek@1100485000(LookupDate@1100485000 : Date;VAR DayText@1100485001 : Text[30];VAR WeekNo@1100485002 : Integer);
    VAR
      DateRec@1100485003 : Record 2000000007;
    BEGIN
      DateRec.SETRANGE("Period Type", DateRec."Period Type"::Date);
      DateRec.SETRANGE("Period Start", LookupDate);
      IF DateRec.FINDFIRST THEN
        DayText := DateRec."Period Name";

      DateRec.SETRANGE("Period Type", DateRec."Period Type"::Week);
      DateRec.SETFILTER("Period Start", '..%1', LookupDate);
      DateRec.SETFILTER("Period End", '%1..', LookupDate);
      IF DateRec.FINDFIRST THEN
        WeekNo := DateRec."Period No.";
    END;

    LOCAL PROCEDURE CheckDateTimeOverlap@1100485001();
    VAR
      ConsignmentTime@1100485000 : Record 11012864;
      CheckDT@1100485001 : DateTime;
      StartDT@1100485002 : DateTime;
      EndDT@1100485003 : DateTime;
    BEGIN
      IF ("Start Date" <> 0D) AND ("Start Time" <> 0T) THEN BEGIN
        CheckDT := CREATEDATETIME("Start Date", "Start Time");
        ConsignmentTime.SETRANGE("Consignment Code", "Consignment Code");
        ConsignmentTime.SETFILTER("Start Date", '..%1' ,"Start Date");
        ConsignmentTime.SETFILTER("End Date", '%1..' ,"Start Date");
        IF ConsignmentTime.FINDSET(FALSE, FALSE) THEN
          REPEAT
            IF ConsignmentTime.GETPOSITION <> xRec.GETPOSITION THEN BEGIN
              StartDT := CREATEDATETIME(ConsignmentTime."Start Date", ConsignmentTime."Start Time");
              EndDT := CREATEDATETIME(ConsignmentTime."End Date", ConsignmentTime."End Time");
              IF (CheckDT > StartDT) AND (CheckDT < EndDT) THEN
                ERROR(Text11012864, FIELDCAPTION("Start Date"), TABLECAPTION);
            END;
          UNTIL ConsignmentTime.NEXT = 0;
      END;

      IF ("End Date" <> 0D) AND ("End Time" <> 0T) THEN BEGIN
        CheckDT := CREATEDATETIME("End Date", "End Time");
        ConsignmentTime.SETFILTER("Start Date", '..%1' ,"End Date");
        ConsignmentTime.SETFILTER("End Date", '%1..' ,"End Date");
        IF ConsignmentTime.FINDSET(FALSE, FALSE) THEN
          REPEAT
            IF ConsignmentTime.GETPOSITION <> xRec.GETPOSITION THEN BEGIN
              StartDT := CREATEDATETIME(ConsignmentTime."Start Date", ConsignmentTime."Start Time");
              EndDT := CREATEDATETIME(ConsignmentTime."End Date", ConsignmentTime."End Time");
              IF (CheckDT > StartDT) AND (CheckDT < EndDT) THEN
                ERROR(Text11012864, FIELDCAPTION("End Date"), TABLECAPTION);
            END;
          UNTIL ConsignmentTime.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

