OBJECT Table 11012915 Project Development
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnDelete=VAR
               lvInvPropRec@1210190000 : Record 11012912;
               lvInvPropRubricRec@1210190001 : Record 11012913;
               lvInvPropBudgetRec@1210190002 : Record 11012914;
               lvProductTextRec@1210190003 : Record 11012918;
               lvProjDevPhaseRec@1100485001 : Record 11012911;
               lvProjDevHouseModelRec@1100485000 : Record 11012919;
               lvBudgetToDistrRec@1100485002 : Record 11012909;
             BEGIN
               lvBudgetToDistrRec.SETRANGE("Project No.","Project No.");
               lvBudgetToDistrRec.DELETEALL;

               lvInvPropBudgetRec.SETRANGE("Project No.","Project No.");
               lvInvPropBudgetRec.DELETEALL;

               lvInvPropRubricRec.SETRANGE("Project No.","Project No.");
               lvInvPropRubricRec.DELETEALL;

               lvInvPropRec.SETRANGE("Project No.","Project No.");
               lvInvPropRec.DELETEALL;

               lvProductTextRec.SETRANGE("Project No.","Project No.");
               lvProductTextRec.DELETEALL;

               lvProjDevPhaseRec.SETRANGE("Project No.","Project No.");
               lvProjDevPhaseRec.DELETEALL;

               lvProjDevHouseModelRec.SETRANGE("Project No.","Project No.");
               lvProjDevHouseModelRec.DELETEALL;
             END;

    CaptionML=ENU=Project Development;
    LookupPageID=Page11012662;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS(Description, "Starting Date", "Ending Date", City);
                                                                CheckUpdateBudgetDistrDates(FIELDNO("Project No."));
                                                              END;

                                                   CaptionML=ENU=Project No.;
                                                   NotBlank=Yes }
    { 20  ;   ;Description         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=ENU=Description;
                                                   Editable=No }
    { 21  ;   ;Starting Date       ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job."Starting Date" WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=ENU=Starting Date;
                                                   Editable=No }
    { 22  ;   ;Ending Date         ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job."Ending Date" WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=ENU=Ending Date;
                                                   Editable=No }
    { 25  ;   ;City                ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.City WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=ENU=City;
                                                   Editable=No }
    { 30  ;   ;Location            ;Text50        ;CaptionML=ENU=Location }
    { 50  ;   ;Year                ;Integer       ;CaptionML=ENU=Year }
    { 60  ;   ;Date                ;Date          ;CaptionML=ENU=Date }
    { 65  ;   ;Principal           ;Code20        ;TableRelation=Contact.No.;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Principal Name");
                                                              END;

                                                   CaptionML=ENU=Principal }
    { 66  ;   ;Principal Name      ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD(Principal)));
                                                   CaptionML=ENU=Principal Name;
                                                   Editable=No }
    { 70  ;   ;Average Capital Cost Perc.;Decimal ;CaptionML=ENU=Wacc percentage;
                                                   MinValue=0;
                                                   Description=Percentage: Weight Average Capital Costs (gewogen gemiddelde vermogenskosten) }
    { 90  ;   ;Gross Surface Area  ;Decimal       ;OnValidate=BEGIN
                                                                CalculateSurfaceArea(1);
                                                              END;

                                                   CaptionML=ENU=Gross Surface Area;
                                                   MinValue=0 }
    { 100 ;   ;Public Surface Area ;Decimal       ;OnValidate=BEGIN
                                                                CalculateSurfaceArea(2);
                                                              END;

                                                   CaptionML=ENU=Public Surface Area;
                                                   MinValue=0 }
    { 110 ;   ;Nett Surface Area   ;Decimal       ;OnValidate=BEGIN
                                                                CalculateSurfaceArea(3);
                                                              END;

                                                   CaptionML=ENU=Nett Surface Area;
                                                   MinValue=0 }
    { 120 ;   ;Issue Percentage    ;Decimal       ;OnValidate=BEGIN
                                                                CalculateSurfaceArea(4);
                                                              END;

                                                   CaptionML=ENU=Issue Percentage;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 130 ;   ;Risc Profile        ;Option        ;CaptionML=ENU=Risc Profile;
                                                   OptionCaptionML=ENU=Low,Average,High;
                                                   OptionString=Low,Average,High }
    { 140 ;   ;Investment Proposal ;Code20        ;TableRelation="Investment Proposal".Version WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=ENU=Investment Proposal }
    { 150 ;   ;Definite Exploitation;Code20       ;TableRelation="Investment Proposal".Version WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=ENU=Definite Exploitation }
    { 160 ;   ;Actual Exploitation ;Code20        ;TableRelation="Investment Proposal".Version WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=ENU=Actual Exploitation }
    { 170 ;   ;Starting Date Sales ;Date          ;OnValidate=BEGIN
                                                                CheckUpdateBudgetDistrDates(FIELDNO("Starting Date Sales"));
                                                              END;

                                                   CaptionML=ENU=Starting Date Sales }
    { 175 ;   ;Starting Date Construction;Date    ;OnValidate=BEGIN
                                                                CheckUpdateBudgetDistrDates(FIELDNO("Starting Date Construction"));
                                                              END;

                                                   CaptionML=ENU=Starting Date Construction }
    { 177 ;   ;Delivery Date       ;Date          ;OnValidate=BEGIN
                                                                CheckUpdateBudgetDistrDates(FIELDNO("Delivery Date"));
                                                              END;

                                                   CaptionML=ENU=Delivery Date }
    { 180 ;   ;Scheme Cost Budget Distr.;Code10   ;TableRelation="Budget Distribution Scheme";
                                                   CaptionML=ENU=Scheme Cost Distribution }
    { 185 ;   ;Scheme Rev. Budget Distr.;Code10   ;TableRelation="Budget Distribution Scheme";
                                                   CaptionML=ENU=Scheme Revenue Distribution }
    { 190 ;   ;Frequency Cost Budget Distr.;DateFormula;
                                                   InitValue=1M;
                                                   OnValidate=BEGIN
                                                                IF (CALCDATE("Frequency Cost Budget Distr.", TODAY) < TODAY) THEN
                                                                  FIELDERROR("Frequency Cost Budget Distr.");
                                                              END;

                                                   CaptionML=ENU=Frequency Cost Distribution }
    { 195 ;   ;Frequency Rev. Budget Distr.;DateFormula;
                                                   InitValue=1M;
                                                   OnValidate=BEGIN
                                                                IF (CALCDATE("Frequency Rev. Budget Distr.", TODAY) < TODAY) THEN
                                                                  FIELDERROR("Frequency Rev. Budget Distr.");
                                                              END;

                                                   CaptionML=ENU=Frequency Revenue Distribution }
    { 230 ;   ;Budget Level        ;Option        ;OnValidate=BEGIN
                                                                IF ("Budget Level" <> xRec."Budget Level") THEN
                                                                  CheckBudgetLinesUpdate((FIELDNO("Budget Level") = CurrFieldNo));
                                                              END;

                                                   CaptionML=ENU=Budget Level;
                                                   OptionCaptionML=ENU=Project,House Model;
                                                   OptionString=Project,Model }
    { 244 ;   ;Start Date Cost Budget Distr.;Date ;CaptionML=ENU=Starting Date Cost Distribution }
    { 245 ;   ;End Date Cost Budget Distr.;Date   ;CaptionML=ENU=Ending Date Cost Distribution }
    { 246 ;   ;Start Date Rev. Budget Distr.;Date ;CaptionML=ENU=Starting Date Revenue Distribution }
    { 247 ;   ;End Date Rev. Budget Distr.;Date   ;CaptionML=ENU=Ending Date Revenue Distribution }
    { 250 ;   ;Total Gross Floor Surface;Decimal  ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Proj. Development House Model"."Total Gross Floor Surface" WHERE (Project No.=FIELD(Project No.)));
                                                   CaptionML=ENU=Total Gross Floor Surface;
                                                   MinValue=0;
                                                   Editable=No }
    { 251 ;   ;Total Nett Floor Surface;Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Proj. Development House Model"."Total Nett Floor Surface" WHERE (Project No.=FIELD(Project No.)));
                                                   CaptionML=ENU=Total Nett Floor Surface;
                                                   MinValue=0;
                                                   Editable=No }
    { 252 ;   ;Total Content       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Proj. Development House Model"."Total Content" WHERE (Project No.=FIELD(Project No.)));
                                                   CaptionML=ENU=Total Content;
                                                   MinValue=0;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Project No.                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ProjDevSetupRec@1100485000 : Record 11012900;
      Text000@1100485004 : TextConst 'ENU=This will be modified in ''Project'' level. Continue?';
      Text001@1100485003 : TextConst 'ENU=There is already budget present on ''%1'' level.';
      Text002@1100485002 : TextConst 'ENU=There is already budget to distribute present on ''%1'' level.';
      Text003@1100485001 : TextConst 'ENU=There is already budget and budget to distribute present on ''%1'' level.';

    PROCEDURE CalculateSurfaceArea@1210190000(IFromField@1210190000 : Integer);
    BEGIN
      CASE IFromField OF
        1:  //* Gross
          BEGIN
            IF "Public Surface Area" <> 0 THEN BEGIN
              IF "Public Surface Area" > "Gross Surface Area" THEN
                "Public Surface Area" := 0;
              "Nett Surface Area" := "Gross Surface Area" - "Public Surface Area";
              CalculateIssuePerc();
            END ELSE BEGIN
              IF "Nett Surface Area" <> 0 THEN BEGIN
                IF "Nett Surface Area" > "Gross Surface Area" THEN
                  "Nett Surface Area" := "Gross Surface Area";
                "Public Surface Area" := "Gross Surface Area" - "Nett Surface Area";
                CalculateIssuePerc();
              END ELSE BEGIN
                IF "Issue Percentage" <> 0 THEN BEGIN
                  "Nett Surface Area" := ROUND("Gross Surface Area" * ("Issue Percentage" / 100), 0.01);
                  "Public Surface Area" := "Gross Surface Area" - "Nett Surface Area";
                END;
              END;
            END;
          END;
        2:  //* Public
          BEGIN
            IF "Gross Surface Area" <> 0 THEN BEGIN
              IF "Public Surface Area" > "Gross Surface Area" THEN
                "Gross Surface Area" := "Public Surface Area";
              "Nett Surface Area" := "Gross Surface Area" - "Public Surface Area";
              CalculateIssuePerc();
            END ELSE BEGIN
              IF "Nett Surface Area" <> 0 THEN BEGIN
                "Gross Surface Area" := "Nett Surface Area" + "Public Surface Area";
                CalculateIssuePerc();
              END ELSE BEGIN
                IF "Issue Percentage" <> 0 THEN BEGIN
                  "Gross Surface Area" := ROUND("Public Surface Area" / (1 - ("Issue Percentage"/100)), 0.01);
                  "Nett Surface Area" := "Gross Surface Area" - "Public Surface Area";
                END;
              END;
            END;
          END;
        3:  //* Nett
          BEGIN
            IF "Gross Surface Area" <> 0 THEN BEGIN
              IF "Nett Surface Area" > "Gross Surface Area" THEN
                "Gross Surface Area" := "Nett Surface Area";
              "Public Surface Area" := "Gross Surface Area" - "Nett Surface Area";
              CalculateIssuePerc();
            END ELSE BEGIN
              IF "Public Surface Area" <> 0 THEN BEGIN
                "Gross Surface Area" := "Nett Surface Area" + "Public Surface Area";
                CalculateIssuePerc();
              END ELSE BEGIN
                IF "Issue Percentage" <> 0 THEN BEGIN
                  "Gross Surface Area" := ROUND("Nett Surface Area" / "Issue Percentage" * 100, 0.01);
                  "Public Surface Area" := "Gross Surface Area" - "Nett Surface Area";
                END;
              END;
            END;
          END;
        4:  //* Issue Perc.
          BEGIN
            IF "Gross Surface Area" <> 0 THEN BEGIN
              "Nett Surface Area" := ROUND("Gross Surface Area" * ("Issue Percentage" / 100), 0.01);
              "Public Surface Area" := "Gross Surface Area" - "Nett Surface Area";
            END ELSE BEGIN
              IF "Public Surface Area" <> 0 THEN BEGIN
                "Gross Surface Area" := ROUND("Public Surface Area" / (1 - ("Issue Percentage"/100)), 0.01);
                "Nett Surface Area" := "Gross Surface Area" - "Public Surface Area";
              END ELSE BEGIN
                IF "Nett Surface Area" <> 0 THEN BEGIN
                  "Gross Surface Area" := ROUND("Nett Surface Area" / "Issue Percentage" * 100, 0.01);
                  "Public Surface Area" := "Gross Surface Area" - "Nett Surface Area";
                END;
              END;
            END;
          END;
      END;
    END;

    PROCEDURE CalculateIssuePerc@1210190001();
    BEGIN
      IF "Gross Surface Area" = 0 THEN
        "Issue Percentage" := 0
      ELSE
        "Issue Percentage" := ROUND(("Nett Surface Area" / "Gross Surface Area") * 100, 0.01);
    END;

    PROCEDURE CheckUpdateBudgetDistrDates@1100485009(ICurrFieldNo@1100485000 : Integer);
    BEGIN
      ProjDevSetupRec.GET;
      CASE ICurrFieldNo OF
        FIELDNO("Project No."):
          BEGIN
            CALCFIELDS("Starting Date", "Ending Date");
            IF ProjDevSetupRec."Type Start Cost Budget Distr." =
               ProjDevSetupRec."Type Start Cost Budget Distr."::"Starting Date Project"
            THEN
              "Start Date Cost Budget Distr." := "Starting Date";
            IF ProjDevSetupRec."Type Start Rev. Budget Distr." =
               ProjDevSetupRec."Type Start Rev. Budget Distr."::"Starting Date Project"
            THEN
              "Start Date Rev. Budget Distr." := "Starting Date";
            IF ProjDevSetupRec."Type End Cost Budget Distr." =
               ProjDevSetupRec."Type End Cost Budget Distr."::"Ending Date Project"
            THEN
              "End Date Cost Budget Distr." := "Ending Date";
            IF ProjDevSetupRec."Type End Rev. Budget Distr." =
               ProjDevSetupRec."Type End Rev. Budget Distr."::"Ending Date Project"
            THEN
              "End Date Rev. Budget Distr." := "Ending Date";
          END;
        FIELDNO("Starting Date Sales"):
          BEGIN
            IF ProjDevSetupRec."Type Start Cost Budget Distr." =
               ProjDevSetupRec."Type Start Cost Budget Distr."::"Starting Date Sales"
            THEN
              "Start Date Cost Budget Distr." := "Starting Date Sales";
            IF ProjDevSetupRec."Type Start Rev. Budget Distr." =
               ProjDevSetupRec."Type Start Rev. Budget Distr."::"Starting Date Sales"
            THEN
              "Start Date Rev. Budget Distr." := "Starting Date Sales";
          END;
        FIELDNO("Starting Date Construction"):
          BEGIN
            IF ProjDevSetupRec."Type Start Cost Budget Distr." =
               ProjDevSetupRec."Type Start Cost Budget Distr."::"Starting Date Construction"
            THEN
              "Start Date Cost Budget Distr." := "Starting Date Construction";
            IF ProjDevSetupRec."Type Start Rev. Budget Distr." =
               ProjDevSetupRec."Type Start Rev. Budget Distr.":: "Starting Date Construction"
            THEN
              "Start Date Rev. Budget Distr." := "Starting Date Construction";
          END;
        FIELDNO("Delivery Date"):
          BEGIN
            IF ProjDevSetupRec."Type End Cost Budget Distr." = ProjDevSetupRec."Type End Cost Budget Distr."::"Delivery Date" THEN
              "End Date Cost Budget Distr." := "Delivery Date";
            IF ProjDevSetupRec."Type End Rev. Budget Distr." = ProjDevSetupRec."Type End Rev. Budget Distr."::"Delivery Date" THEN
              "End Date Rev. Budget Distr." := "Delivery Date";
          END;
      END;
    END;

    PROCEDURE CheckBudgetLinesUpdate@1100485000(IMessMode@1100485002 : Boolean);
    VAR
      lvInvPropBudgetRec@1210190000 : Record 11012914;
      lvBudgetToDistrRec@1100485000 : Record 11012909;
      lvBudgetToDistrRec2@1100485003 : Record 11012909;
      lvBudgetToDistrRec3@1100485004 : Record 11012909;
      lvTypeNo@1100485001 : Integer;
    BEGIN
      lvTypeNo := 0;  //* 0:None, 1: Only Budget, 2: Only Budget to Distribute, 3: Both

      lvInvPropBudgetRec.SETRANGE("Project No.", "Project No.");
      lvInvPropBudgetRec.SETRANGE(Fixed, FALSE);
      IF "Budget Level" = "Budget Level"::Model THEN
        lvInvPropBudgetRec.SETRANGE("House Model", '')
      ELSE
        lvInvPropBudgetRec.SETFILTER("House Model", '<>%1', '');
      IF lvInvPropBudgetRec.FIND('-') THEN
        lvTypeNo := lvTypeNo + 1;

      lvBudgetToDistrRec.SETRANGE("Project No.", "Project No.");
      lvBudgetToDistrRec.SETRANGE(Fixed, FALSE);
      IF "Budget Level" = "Budget Level"::Model THEN
        lvBudgetToDistrRec.SETRANGE("House Model", '')
      ELSE
        lvBudgetToDistrRec.SETFILTER("House Model", '<>%1', '');
      IF lvBudgetToDistrRec.FIND('-') THEN
        lvTypeNo := lvTypeNo + 2;

      IF "Budget Level" = "Budget Level"::Model THEN BEGIN
        IF IMessMode THEN BEGIN
          CASE lvTypeNo OF
            1: MESSAGE(Text001, xRec."Budget Level");
            2: MESSAGE(Text002, xRec."Budget Level");
            3: MESSAGE(Text003, xRec."Budget Level");
          END;
        END;
      END ELSE BEGIN
        IF IMessMode THEN BEGIN
          CASE lvTypeNo OF
            1: IF NOT CONFIRM(STRSUBSTNO(Text001, xRec."Budget Level") + '\ \' + Text000) THEN ERROR('');
            2: IF NOT CONFIRM(STRSUBSTNO(Text002, xRec."Budget Level") + '\ \' + Text000) THEN ERROR('');
            3: IF NOT CONFIRM(STRSUBSTNO(Text003, xRec."Budget Level") + '\ \' + Text000) THEN ERROR('');
          END;
        END;
        IF lvTypeNo IN [1, 2] THEN BEGIN
          REPEAT
            lvInvPropBudgetRec."House Model" := '';
            lvInvPropBudgetRec.MODIFY;
          UNTIL lvInvPropBudgetRec.NEXT = 0;
        END;
        IF lvTypeNo IN [2, 3] THEN BEGIN
          REPEAT
      { OLD  //nu regelnr. dus samenvoegen niet meer nodig, is ook beter voor ivm met velden freq/schema/start+eind verdeling
            lvBudgetToDistrRec2 := lvBudgetToDistrRec;
            lvBudgetToDistrRec2."House Model" := '';
            IF NOT lvBudgetToDistrRec2.FIND THEN BEGIN
              lvBudgetToDistrRec2.INIT;
              lvBudgetToDistrRec2."Project No." := lvBudgetToDistrRec."Project No.";
              lvBudgetToDistrRec2.Version := lvBudgetToDistrRec.Version;
              lvBudgetToDistrRec2."Rubric Code" := lvBudgetToDistrRec."Rubric Code";
              lvBudgetToDistrRec2."House Model" := '';
              lvBudgetToDistrRec2.Amount := lvBudgetToDistrRec.Amount;
              lvBudgetToDistrRec2.INSERT;
            END ELSE BEGIN
              lvBudgetToDistrRec2.Amount := lvBudgetToDistrRec2.Amount + lvBudgetToDistrRec.Amount;
              lvBudgetToDistrRec2.MODIFY;
            END;
      }
            lvBudgetToDistrRec2 := lvBudgetToDistrRec;
            lvBudgetToDistrRec2."House Model" := '';
            lvBudgetToDistrRec3.SETRANGE("Project No.", lvBudgetToDistrRec2."Project No.");
            lvBudgetToDistrRec3.SETRANGE(Version, lvBudgetToDistrRec2.Version);
            lvBudgetToDistrRec3.SETRANGE("Rubric Code", lvBudgetToDistrRec2."Rubric Code");
            lvBudgetToDistrRec3.SETRANGE("House Model", '');
            IF lvBudgetToDistrRec3.FIND('+') THEN
              lvBudgetToDistrRec2."Line No." := lvBudgetToDistrRec3."Line No." + 10000
            ELSE
              lvBudgetToDistrRec2."Line No." := 10000;
            lvBudgetToDistrRec2.INSERT;

            lvBudgetToDistrRec.DELETE;
          UNTIL lvBudgetToDistrRec.NEXT = 0;
        END;
      END;
    END;

    BEGIN
    END.
  }
}

