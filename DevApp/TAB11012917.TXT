OBJECT Table 11012917 Invest. Proposal Template Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Investment Proposal Template Line;
  }
  FIELDS
  {
    { 10  ;   ;Template            ;Code10        ;TableRelation="Investment Proposal Template";
                                                   CaptionML=ENU=Template;
                                                   NotBlank=Yes }
    { 20  ;   ;Rubric Code         ;Code10        ;CaptionML=ENU=Rubric Code;
                                                   NotBlank=Yes }
    { 30  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 40  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF NOT (Type IN [Type::Subtotal, Type::Balance, Type::"Perc. (Sub)Totals"]) THEN  //*15625.c
                                                                  TESTFIELD(Totaling, '');

                                                                IF NOT (Type IN [Type::"Percentage Costs", Type::"Percentage Revenues",
                                                                                 Type::"Costs as Perc. Revenues", Type::"Revenues as Perc. Costs",
                                                                                 Type::"Costs to Distr. as Perc. Rev."])
                                                                THEN BEGIN
                                                                  TESTFIELD(Percentage, 0);
                                                                  IF (Type <> Type::"Perc. (Sub)Totals") THEN  //*15625.n
                                                                    TESTFIELD("Percentage Filter", '');
                                                                END;

                                                                IF NOT (Type IN [Type::Costs, Type::Revenues, Type::"Percentage Costs", Type::"Percentage Revenues",
                                                                                 Type::"Costs as Perc. Revenues", Type::"Revenues as Perc. Costs",
                                                                                 Type::"Costs to Distr. as Perc. Rev."])
                                                                THEN
                                                                  TESTFIELD("Cost Object Filter", '');

                                                                IF (Type = Type::Line) THEN
                                                                  TESTFIELD(Description, '');

                                                                IF NOT (Type IN [Type::Costs, Type::Revenues, Type::"Costs to Distr. as Perc. Rev."]) THEN
                                                                  "Budget Distribution" := "Budget Distribution"::" ";

                                                                IF (Type <> Type::"Perc. (Sub)Totals") THEN  //*15625.sn
                                                                  "Tot.Type for Perc. (Sub)Totals" := 0
                                                                ELSE BEGIN
                                                                  IF "Tot.Type for Perc. (Sub)Totals" = 0 THEN
                                                                    "Tot.Type for Perc. (Sub)Totals" := "Tot.Type for Perc. (Sub)Totals"::"Subtotal (P) - Subtotal (T)";
                                                                END;  //*15625.en

                                                                IF (xRec.Type <> Type) THEN BEGIN
                                                                  IF (Type = Type::"Costs to Distr. as Perc. Rev.") AND ("Budget Distribution" = 0) THEN
                                                                    "Budget Distribution" := "Budget Distribution"::Scheme;
                                                                  IF (Type IN [Type::Title, Type::Subtotal, Type::Balance]) THEN
                                                                    Bold := TRUE
                                                                  ELSE
                                                                    Indentation := 1;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Text,Title,Costs,Revenues,Percentage Costs,Percentage Revenues,Subtotal,Balance,ROS,EPV,PRI,Line,Costs as Perc. Revenues,Revenues as Perc. Costs,Costs to Distribute as Perc. Revenues,Perc. (Sub)Totals;
                                                   OptionString=Text,Title,Costs,Revenues,Percentage Costs,Percentage Revenues,Subtotal,Balance,ROS,EPV,PRI,Line,Costs as Perc. Revenues,Revenues as Perc. Costs,Costs to Distr. as Perc. Rev.,Perc. (Sub)Totals }
    { 50  ;   ;Totaling            ;Text250       ;OnValidate=BEGIN
                                                                IF (Totaling <> '') AND (NOT (Type IN [Type::Subtotal, Type::Balance, Type::"Perc. (Sub)Totals"])) THEN  //*15625.c
                                                                  FIELDERROR(Totaling, STRSUBSTNO(Text000, FIELDCAPTION(Type), Type));

                                                                Totaling := UPPERCASE(Totaling);
                                                              END;

                                                   CaptionML=ENU=Totaling }
    { 60  ;   ;Cost Object Filter  ;Text250       ;TableRelation=IF (Type=FILTER(Revenues|Percentage Revenues|Revenues as Perc. Costs)) "Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                                                                                                      Cost Type=CONST(Revenue))
                                                                                                                                                                      ELSE IF (Type=FILTER(Costs|Percentage Costs|Costs as Perc. Revenues|Costs to Distr. as Perc. Rev.)) "Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                                                                                                                                                                                                                                        Cost Type=FILTER(<>Revenue));
                                                   OnValidate=BEGIN
                                                                IF ("Cost Object Filter" <> '') AND
                                                                   (NOT (Type IN [Type::Costs, Type::Revenues, Type::"Percentage Costs", Type::"Percentage Revenues",
                                                                                  Type::"Costs as Perc. Revenues", Type::"Revenues as Perc. Costs",
                                                                                  Type::"Costs to Distr. as Perc. Rev."]))
                                                                THEN
                                                                  FIELDERROR("Cost Object Filter", STRSUBSTNO(Text000, FIELDCAPTION(Type), Type));

                                                                "Cost Object Filter" := UPPERCASE("Cost Object Filter");
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Cost Object Filter }
    { 70  ;   ;Percentage          ;Decimal       ;OnValidate=BEGIN
                                                                IF (Percentage <> 0) AND
                                                                   (NOT (Type IN [Type::"Percentage Costs", Type::"Percentage Revenues",
                                                                                  Type::"Costs as Perc. Revenues", Type::"Revenues as Perc. Costs",
                                                                                  Type::"Costs to Distr. as Perc. Rev."]))
                                                                THEN
                                                                  FIELDERROR(Percentage, STRSUBSTNO(Text000, FIELDCAPTION(Type), Type));
                                                              END;

                                                   CaptionML=ENU=Percentage }
    { 75  ;   ;Percentage Filter   ;Text250       ;OnValidate=BEGIN
                                                                IF ("Percentage Filter" <> '') AND
                                                                   (NOT (Type IN [Type::"Percentage Costs", Type::"Percentage Revenues",
                                                                                  Type::"Costs as Perc. Revenues", Type::"Revenues as Perc. Costs",
                                                                                  Type::"Costs to Distr. as Perc. Rev.",
                                                                                  Type::"Perc. (Sub)Totals"]))  //*15625.n
                                                                THEN
                                                                  FIELDERROR("Percentage Filter", STRSUBSTNO(Text000, FIELDCAPTION(Type), Type));

                                                                "Percentage Filter" := UPPERCASE("Percentage Filter");
                                                              END;

                                                   CaptionML=ENU=Percentage Filter;
                                                   Description=Filter om Rubric }
    { 80  ;   ;Indentation         ;Integer       ;OnValidate=BEGIN
                                                                IF (Indentation <> 0) AND (Type = Type::Line) THEN
                                                                  Indentation := 0;  // Make zero, no error

                                                                IF (Indentation < 0) OR (Indentation > MaxValueIndentation()) THEN
                                                                  FIELDERROR(Indentation, STRSUBSTNO(Text001, Indentation, MaxValueIndentation()));
                                                              END;

                                                   CaptionML=ENU=Indentation;
                                                   MinValue=0;
                                                   Editable=No }
    { 90  ;   ;Bold                ;Boolean       ;OnValidate=BEGIN
                                                                IF Bold AND (Type = Type::Line) THEN
                                                                  Bold := FALSE;  // Make false, no error
                                                              END;

                                                   CaptionML=ENU=Bold }
    { 100 ;   ;Budget Distribution ;Option        ;OnValidate=BEGIN
                                                                IF NOT (Type IN [Type::Costs, Type::Revenues, Type::"Costs to Distr. as Perc. Rev."]) THEN
                                                                  "Budget Distribution" := "Budget Distribution"::" ";

                                                                IF (Type = Type::"Costs to Distr. as Perc. Rev.") THEN
                                                                  TESTFIELD("Budget Distribution");
                                                              END;

                                                   CaptionML=ENU=Budget Distribution;
                                                   OptionCaptionML=ENU=" ,Linear,Scheme";
                                                   OptionString=[ ,Linear,Scheme] }
    { 110 ;   ;Tot.Type for Perc. (Sub)Totals;Option;
                                                   OnValidate=BEGIN
                                                                //*15625.n
                                                                IF (Type <> Type::"Perc. (Sub)Totals") THEN
                                                                  TESTFIELD("Tot.Type for Perc. (Sub)Totals", 0)
                                                                ELSE
                                                                  TESTFIELD("Tot.Type for Perc. (Sub)Totals");
                                                              END;

                                                   CaptionML=ENU=Total Type for Perc. (Sub)Totals;
                                                   OptionCaptionML=ENU=" ,Subtotal (Perc.Filter) - Subtotal (Totaling),Subtotal (Perc.Filter) - Balance (Totaling),Balance (Perc.Filter) - Subtotal (Totaling),Balance (Perc.Filter) - Balance (Totaling)";
                                                   OptionString=[ ,Subtotal (P) - Subtotal (T),Subtotal (P) - Balance (T),Balance (P) - Subtotal (T),Balance (P) - Balance (T)] }
  }
  KEYS
  {
    {    ;Template,Rubric Code                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1210190002 : TextConst 'ENU="not allowed for %1 ''%2'' "';
      Text001@1100529000 : TextConst 'ENU=''%1'' not allowed (min. 0 / max. %2)';

    PROCEDURE MaxValueIndentation@1100529000() : Integer;
    BEGIN
      EXIT(2);  //* Max. value must be the same in T11012913
    END;

    PROCEDURE CollAdjustIndentation@1210190005(VAR InvPropTemplLine@1100529001 : Record 11012917;IndentStep@1100529000 : Integer);
    BEGIN
      //* IndentStep: Pos=Indent, Neg=Outdent
      IF InvPropTemplLine.FINDSET(TRUE,FALSE) THEN BEGIN
        REPEAT
          InvPropTemplLine.VALIDATE(Indentation, InvPropTemplLine.Indentation + IndentStep);
          InvPropTemplLine.MODIFY;
        UNTIL InvPropTemplLine.NEXT = 0;
      END;
    END;

    PROCEDURE CollSwitchBold@1210190006(VAR InvPropTemplLine@1100529000 : Record 11012917);
    BEGIN
      IF InvPropTemplLine.FINDSET(TRUE,FALSE) THEN BEGIN
        REPEAT
          InvPropTemplLine.VALIDATE(Bold, NOT InvPropTemplLine.Bold);
          InvPropTemplLine.MODIFY;
        UNTIL InvPropTemplLine.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

