OBJECT Table 11012924 Available hours Empl/Date
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Available hours Empl/Date;
    LookupPageID=Page11012925;
  }
  FIELDS
  {
    { 10  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=User ID }
    { 20  ;   ;Employee No.        ;Code20        ;TableRelation=Employee;
                                                   CaptionML=ENU=Employee No. }
    { 30  ;   ;Date                ;Date          ;CaptionML=ENU=Date }
    { 40  ;   ;Available Hours     ;Decimal       ;CaptionML=ENU=Available Hours }
    { 60  ;   ;Manager No.         ;Code20        ;TableRelation=Employee;
                                                   CaptionML=ENU=Manager No. }
    { 70  ;   ;Comment             ;Text100       ;CaptionML=ENU=Comment }
  }
  KEYS
  {
    {    ;User ID,Employee No.,Date               ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE ClearAvailableHoursEmplDate@1100528700();
    VAR
      AvailableHoursEmplDate@1100528700 : Record 11012924;
    BEGIN
      AvailableHoursEmplDate.SETRANGE("User ID", USERID);
      AvailableHoursEmplDate.DELETEALL;
    END;

    PROCEDURE FillAvailableHoursEmplDate@1210190007(EmployeeNo@1100528701 : Code[20];AvailabilityDate@1100528700 : Date);
    VAR
      CompanyInformation@1100528704 : Record 79;
      UserSetup@1100528705 : Record 91;
      Employee@1210190001 : Record 5200;
      AvailableHoursEmplDate@1210190002 : Record 11012924;
      BaseCalendar@1100528703 : Record 11072014;
      CalendarManagement@1100528702 : Codeunit 7600;
      Hours@1210190005 : Decimal;
      NonWorkDate@1100528706 : Boolean;
      DummyDesc@1100528707 : Text[50];
      AbsenceDescription@1100528708 : Text[100];
    BEGIN
      CompanyInformation.GET;

      IF NOT UserSetup.GET(USERID) THEN
        UserSetup.INIT;

      Employee.GET(EmployeeNo);
      IF Employee."Employment Date" > AvailabilityDate THEN
        EXIT;
      IF (Employee."Termination Date" <> 0D) AND
         (Employee."Termination Date" <= AvailabilityDate) THEN
        EXIT;

      IF BaseCalendar.READPERMISSION THEN
        NonWorkDate := CalendarManagement.CheckDateStatus(CompanyInformation."Base Calendar Code", AvailabilityDate, DummyDesc);

      IF NonWorkDate THEN
        EXIT;

      Employee.SETRANGE("Date Filter", AvailabilityDate, AvailabilityDate);
      Hours := Employee.AvailableHours;

      AvailableHoursEmplDate.INIT;
      AvailableHoursEmplDate."User ID" := USERID;
      AvailableHoursEmplDate."Employee No." := Employee."No.";
      AvailableHoursEmplDate.Date := AvailabilityDate;
      AvailableHoursEmplDate."Available Hours" := Hours;
      IF Employee."Manager No." <> '' THEN
        AvailableHoursEmplDate."Manager No." := Employee."Manager No."
      ELSE
        AvailableHoursEmplDate."Manager No." := UserSetup."Employee No.";
      AvailableHoursEmplDate.Comment := AbsenceDescription;
      AvailableHoursEmplDate.INSERT;
    END;

    BEGIN
    END.
  }
}

