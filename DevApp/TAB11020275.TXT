OBJECT Table 11020275 WKA Check
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnDelete=VAR
               VendorWKACheck@1100485000 : Record 11020276;
             BEGIN
               VendorWKACheck.RESET;
               VendorWKACheck.SETRANGE(Code, Code);
               IF VendorWKACheck.FIND('-') THEN
                 IF CONFIRM(Text003, FALSE, VendorWKACheck.TABLECAPTION) THEN
                   VendorWKACheck.DELETEALL(TRUE)
                 ELSE
                   ERROR(Text004);
             END;

    CaptionML=ENU=WKA Check;
    LookupPageID=Page11020330;
    DrillDownPageID=Page11020330;
  }
  FIELDS
  {
    { 10  ;   ;Code                ;Code20        ;CaptionML=ENU=Code;
                                                   NotBlank=Yes }
    { 20  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 30  ;   ;Check Type          ;Option        ;OnValidate=BEGIN
                                                                CheckContainsAndCheckType;
                                                              END;

                                                   CaptionML=ENU=Check Type;
                                                   OptionCaptionML=ENU=" ,Value,Due Date,Approved";
                                                   OptionString=[ ,Value,Date,Approved] }
    { 40  ;   ;Mandatory           ;Boolean       ;CaptionML=ENU=Mandatory }
    { 50  ;   ;Request             ;Boolean       ;CaptionML=ENU=Request }
    { 70  ;   ;Apply on Other Subcontractors;Boolean;
                                                   CaptionML=ENU=Apply on Other Subcontractors }
    { 80  ;   ;Apply on SWP        ;Boolean       ;CaptionML=ENU=Apply on SWP }
    { 90  ;   ;Apply on Security Fund;Boolean     ;CaptionML=ENU=Apply on Security Fund }
    { 100 ;   ;Contains            ;Option        ;OnValidate=BEGIN
                                                                IF Contains > 0 THEN BEGIN
                                                                  CheckContainsAndCheckType;

                                                                  WKACheck.RESET;
                                                                  WKACheck.SETFILTER(Code, '<>%1', Code);
                                                                  WKACheck.SETRANGE(Contains, Contains);
                                                                  IF WKACheck.FINDFIRST THEN
                                                                    ERROR(Text001, FIELDCAPTION(Contains), Contains, TABLECAPTION);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Contains;
                                                   OptionCaptionML=ENU=" ,Income Tax No.,Affiliation No.";
                                                   OptionString=[ ,Income Tax No.,Affiliation No.];
                                                   BlankZero=Yes }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      WKACheck@1100485000 : Record 11020275;
      Text001@1100485001 : TextConst 'ENU=%1 %2 may only be used for one %3.';
      Text002@1100485002 : TextConst 'ENU=%1 must be %2 if %3 is %4';
      VendorWkaCheck@1100485004 : Record 11020276;
      Vendor@1100485003 : Record 23;
      Text003@1100485005 : TextConst 'ENU=%1s are present. Do you still want to continue deleting?';
      Text004@1100485006 : TextConst 'ENU=Deletion has been cancelled';

    PROCEDURE AddVendorWKAChecks@1100485000();
    BEGIN
      WKACheck.RESET;
      IF WKACheck.FIND('-') THEN
        REPEAT
          Vendor.SETRANGE(Subcontractor, TRUE);
          IF Vendor.FINDSET THEN
            REPEAT
              IF WKACheckApplicable(WKACheck, Vendor) THEN BEGIN
                VendorWkaCheck.INIT;
                VendorWkaCheck."Vendor No." := Vendor."No.";
                VendorWkaCheck.Code := WKACheck.Code;
                IF VendorWkaCheck.INSERT(TRUE) THEN;
              END;
            UNTIL Vendor.NEXT = 0;
        UNTIL WKACheck.NEXT = 0;
    END;

    PROCEDURE DeleteVendorWKAChecks@1100485004();
    BEGIN
      WKACheck.RESET;
      IF WKACheck.FIND('-') THEN
        REPEAT
          Vendor.SETRANGE(Subcontractor, TRUE);
          IF Vendor.FINDSET THEN
            REPEAT
              IF NOT WKACheckApplicable(WKACheck, Vendor) THEN BEGIN
                VendorWkaCheck.RESET;
                VendorWkaCheck.SETRANGE("Vendor No.", Vendor."No.");
                VendorWkaCheck.SETRANGE(Code, WKACheck.Code);
                VendorWkaCheck.SETRANGE("Extra Obligation Vendor", FALSE);
                IF VendorWkaCheck.FINDSET(TRUE,FALSE) THEN
                  REPEAT
                    VendorWkaCheck.DELETE(TRUE);
                  UNTIL VendorWkaCheck.NEXT = 0
              END;
            UNTIL Vendor.NEXT = 0;
        UNTIL WKACheck.NEXT = 0;
    END;

    PROCEDURE WKACheckApplicable@1100485001(IWKACheck@1100485001 : Record 11020275;IVendorRec@1100485000 : Record 23) : Boolean;
    BEGIN
      EXIT(
         (IWKACheck."Apply on Security Fund" AND IVendorRec."Security Fund") OR
         (IWKACheck."Apply on SWP" AND IVendorRec.SWP AND NOT IVendorRec."Security Fund") OR
         (IWKACheck."Apply on Other Subcontractors" AND NOT IVendorRec.SWP AND NOT IVendorRec."Security Fund"));
    END;

    PROCEDURE CheckContainsAndCheckType@1100485002();
    BEGIN
      IF (Contains > 0) AND ("Check Type" <> "Check Type"::Value) THEN BEGIN
        "Check Type" := "Check Type"::Value;
        ERROR(Text002, FIELDCAPTION("Check Type"), "Check Type", FIELDCAPTION(Contains), Contains);
      END;
    END;

    PROCEDURE SetWKAVendorFilters@1100485003(IVendorRec@1100485000 : Record 23);
    BEGIN
      SETRANGE("Apply on Security Fund");
      SETRANGE("Apply on SWP");
      SETRANGE("Apply on Other Subcontractors");

      IF IVendorRec."Security Fund" THEN
        SETRANGE("Apply on Security Fund", TRUE)
      ELSE
        IF IVendorRec.SWP THEN
          SETRANGE("Apply on SWP", TRUE)
        ELSE
          SETRANGE("Apply on Other Subcontractors", TRUE);
    END;

    BEGIN
    END.
  }
}

