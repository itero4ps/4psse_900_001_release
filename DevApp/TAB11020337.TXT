OBJECT Table 11020337 Service Order E-Mail Queue
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               lvSelfRec@1100525000 : Record 11020337;
             BEGIN
               IF "Entry No." = 0 THEN BEGIN
                 lvSelfRec.RESET;
                 IF lvSelfRec.FINDLAST THEN
                   "Entry No." := lvSelfRec."Entry No." + 1
                 ELSE
                   "Entry No." := 1;
               END;
             END;

    OnDelete=VAR
               ServiceOrderEMailAttachm@1100525000 : Record 11071933;
             BEGIN
               ServiceOrderEMailAttachm.SETRANGE("Queue Entry No.", "Entry No.");
               ServiceOrderEMailAttachm.DELETEALL(TRUE);
             END;

    CaptionML=ENU=Service Order E-Mail Queue;
    LookupPageID=Page11126289;
    DrillDownPageID=Page11126289;
  }
  FIELDS
  {
    { 10  ;   ;Entry No.           ;Integer       ;CaptionML=ENU=Entry No.;
                                                   Editable=No }
    { 20  ;   ;To Address          ;Text250       ;CaptionML=ENU=To Address;
                                                   Editable=No }
    { 30  ;   ;Copy-to Address     ;Text250       ;CaptionML=ENU=Copy-to Address;
                                                   Editable=No }
    { 40  ;   ;Subject             ;Text250       ;CaptionML=ENU=Subject;
                                                   Editable=No }
    { 50  ;   ;Body                ;BLOB          ;CaptionML=ENU=Body }
    { 70  ;   ;Priority            ;Option        ;CaptionML=ENU=Priority;
                                                   OptionCaptionML=ENU=1,2,3;
                                                   OptionString=1,2,3;
                                                   Description=Not implemented yet }
    { 80  ;   ;Status              ;Option        ;CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=Unprocessed,Processing,Send,Error,Initializing;
                                                   OptionString=Unprocessed,Processing,Send,Error,Initializing }
    { 90  ;   ;Sending Date        ;Date          ;CaptionML=ENU=Sending Date;
                                                   Editable=No }
    { 100 ;   ;Sending Time        ;Time          ;CaptionML=ENU=Sending Time;
                                                   Editable=No }
    { 110 ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=" ,Service Order,Subcontractor SO's not Finished,Subcontractor Invoice not Received,Work Order";
                                                   OptionString=[ ,Service Order,Subcontractor SO's not Finished,Subcontractor Invoice not Received,Work Order];
                                                   Editable=No }
    { 120 ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No.;
                                                   Editable=No }
    { 130 ;   ;Error Message       ;Text250       ;CaptionML=ENU=Error Message;
                                                   Editable=No }
    { 140 ;   ;Attachments Exists  ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Service Order E-Mail Attachm." WHERE (Queue Entry No.=FIELD(Entry No.)));
                                                   CaptionML=ENU=Attachments Exists;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Status,Sending Date,Document Type,Document No. }
    {    ;Document Type,Document No.,Status,Sending Date }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE SendMailFromQueue@1100526200();
    VAR
      MailCu@1100526200 : Codeunit 11012824;
      MailQueueRec@1210190000 : Record 11020337;
    BEGIN
      //db, 12-04-11
      MailQueueRec.SETCURRENTKEY("Entry No.");
      MailQueueRec.SETRANGE("Entry No.", "Entry No.");
      MailCu.NASServMailQueue(MailQueueRec);
    END;

    PROCEDURE AddEmailToServiceOrderEmailQueue@1100528500(ToAddress@1100528501 : Text;CopyToAddress@1100528507 : Text;Subject@1100528502 : Text;DocumentType@1100528503 : Integer;DocumentNo@1100528504 : Code[20];BodyText@1100528505 : Text;VAR TempEmailAttachment@1100528506 : TEMPORARY Record 11229294) ServiceOrderEMailQueueEntryNo : Integer;
    VAR
      ServiceOrderEMailQueue@1100528500 : Record 11020337;
      ServiceOrderEMailAttachm@1100528508 : Record 11071933;
      EMailOnBehalf@1100528400 : Record 11012768;
      FileManagement@1100528509 : Codeunit 419;
      OnBehalfOfName@1100528402 : Text[50];
      OnBehalfOfEMail@1100528401 : Text[80];
    BEGIN
      IF ToAddress <> '' THEN BEGIN
        IF NOT EMailOnBehalf.GetApplicableEMailOnBehalf(
          EMailOnBehalf.Usage::"Service Order", FALSE, OnBehalfOfName, OnBehalfOfEMail)
        THEN BEGIN
          TempEmailAttachment.DeleteTempEmailAttachmentFiles(TempEmailAttachment);
          EMailOnBehalf.CheckEMailOnBehalf(EMailOnBehalf.Usage::"Service Order");
        END;
        ServiceOrderEMailQueue."To Address" := ToAddress;
        ServiceOrderEMailQueue."Copy-to Address" := CopyToAddress;
        ServiceOrderEMailQueue.Subject := COPYSTR(Subject, 1, MAXSTRLEN(ServiceOrderEMailQueue.Subject));
        ServiceOrderEMailQueue."Document Type" := DocumentType;
        ServiceOrderEMailQueue."Document No." := DocumentNo;
        ServiceOrderEMailQueue.Status := ServiceOrderEMailQueue.Status::Initializing;
        ServiceOrderEMailQueue.INSERT(TRUE);

        ServiceOrderEMailQueue.SetBodyText(BodyText);

        IF TempEmailAttachment.FINDSET THEN
          REPEAT
            ServiceOrderEMailAttachm.INIT;
            ServiceOrderEMailAttachm.VALIDATE("Queue Entry No.", ServiceOrderEMailQueue."Entry No.");
            ServiceOrderEMailAttachm."Attachment No." := 0;
            ServiceOrderEMailAttachm.VALIDATE(Filename, TempEmailAttachment."Attachment Client File Path");
            ServiceOrderEMailAttachm.INSERT(TRUE);
          UNTIL TempEmailAttachment.NEXT = 0;

        ServiceOrderEMailQueue.Status := ServiceOrderEMailQueue.Status::Unprocessed;
        ServiceOrderEMailQueue.MODIFY;
        ServiceOrderEMailQueueEntryNo := ServiceOrderEMailQueue."Entry No.";
      END;

      TempEmailAttachment.DeleteTempEmailAttachmentFiles(TempEmailAttachment);
    END;

    PROCEDURE SetBodyText@5(Value@1100528500 : Text);
    VAR
      DataStream@1100528501 : OutStream;
      BodyText@1100528502 : BigText;
    BEGIN
      CLEAR(Body);
      BodyText.ADDTEXT(Value);
      Body.CREATEOUTSTREAM(DataStream);
      BodyText.WRITE(DataStream);
    END;

    BEGIN
    {
      Table for collecting E-Mail status updates.
      These messages are then send by the Navision Application Server.

      - Build on 9 dec 2008
      - Last revision on 9 dec 2008 by WWB
    }
    END.
  }
}

