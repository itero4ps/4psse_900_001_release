OBJECT Table 11020398 Purchase Header Extension
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00,4PSSE.FI.SE;
  }
  PROPERTIES
  {
    CaptionML=ENU=Purchase Header Extension;
  }
  FIELDS
  {
    { 1   ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order;
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order }
    { 2   ;   ;Document No.        ;Code20        ;TableRelation="Purchase Header".No. WHERE (Document Type=FIELD(Document Type));
                                                   CaptionML=ENU=Document No. }
    { 4   ;   ;Pay-to Vendor No.   ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Purchase Header"."Pay-to Vendor No." WHERE (Document Type=FIELD(Document Type),
                                                                                                                   No.=FIELD(Document No.)));
                                                   TableRelation=Vendor;
                                                   CaptionML=ENU=Pay-to Vendor No.;
                                                   NotBlank=Yes }
    { 10  ;   ;Memo                ;Text250       ;CaptionML=ENU=Text }
    { 20  ;   ;DMS Status          ;Option        ;CaptionML=ENU=DMS Status;
                                                   OptionCaptionML=ENU=" ,,,Awaiting Line Entry";
                                                   OptionString=[ ,,,Awaiting Line Entry];
                                                   Editable=No }
    { 30  ;   ;GS1 Sent by         ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=GS1 Sent by;
                                                   Editable=No }
    { 31  ;   ;GS1 Sent on         ;Date          ;CaptionML=ENU=GS1 Sent on;
                                                   Editable=No }
    { 40  ;   ;Delivery Time       ;Time          ;CaptionML=ENU=Delivery Time }
    { 100 ;   ;Service Warranty Code;Code10       ;TableRelation="Service Warranty";
                                                   CaptionML=ENU=Service Warranty Code }
    { 11126180;;Message Type       ;Option        ;InitValue=Reference No.;
                                                   OnValidate=VAR
                                                                RefNoCheck@1100285500 : Codeunit 11126182;
                                                              BEGIN
                                                                RefNoCheck.PurchMessageCheck(Rec);
                                                              END;

                                                   CaptionML=ENU=Message Type;
                                                   OptionCaptionML=ENU=Reference No.,Invoice Information,Message,Long Message,Tax Message;
                                                   OptionString=Reference No.,Invoice Information,Message,Long Message,Tax Message;
                                                   Description=NAVFI }
    { 11126181;;Invoice Message    ;Text128       ;OnValidate=VAR
                                                                RefNoCheck@1100285500 : Codeunit 11126182;
                                                              BEGIN
                                                                IF ("Invoice Message" <> '') AND ("Message Type" = "Message Type"::"Reference No.") THEN BEGIN
                                                                  IF STRLEN("Invoice Message")  > 20 THEN
                                                                    ERROR(Text1090000, FIELDCAPTION("Invoice Message"), 20);
                                                                  RefNoCheck.InvReferenceCheck("Invoice Message");
                                                                END;

                                                                IF "Message Type" = "Message Type"::Message THEN
                                                                  IF STRLEN("Invoice Message") > 70 THEN
                                                                    ERROR(Text1090000, FIELDCAPTION("Invoice Message"), 70);

                                                                IF ("Invoice Message" <> '') AND ("Message Type" = "Message Type"::"Tax Message") THEN BEGIN
                                                                  IF STRLEN("Invoice Message")  > 20 THEN
                                                                    ERROR(Text1090000, FIELDCAPTION("Invoice Message"), 20);
                                                                  RefNoCheck.InvReferenceCheck("Invoice Message");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Invoice Message;
                                                   Description=NAVFI 250->128 }
    { 11128060;;Gross Invoice Amount;Decimal      ;CaptionML=ENU=Gross Invoice Amount;
                                                   Description=PEB0025 }
    { 11128061;;Note of Goods      ;Text30        ;CaptionML=ENU=Note of Goods;
                                                   Description=PEB0012 }
    { 11128063;;OCR No.            ;Code30        ;CaptionML=ENU=OCR No.;
                                                   Description=PEB0091 }
    { 11128064;;Recipient Bank Account;Code10     ;TableRelation="Vendor Bank Account".Code WHERE (Vendor No.=FIELD(Pay-to Vendor No.));
                                                   CaptionML=ENU=Recipient Bank Account;
                                                   Description=PEB0091 }
  }
  KEYS
  {
    {    ;Document Type,Document No.              ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text1090000@1100285500 : TextConst 'ENU=%1 is too long, maximum length is %2 characters.';
      Text1090003@1100285501 : TextConst 'ENU=%1 and %2 are too long, maximum length is %3 characters.';

    PROCEDURE GetPurchHeadExtension@1100525001(DocType@1100525000 : Option;DocNo@1100525001 : Code[20]);
    BEGIN
      IF NOT GET(DocType, DocNo) THEN BEGIN
        INIT;
        "Document Type" := DocType;
        "Document No."  := DocNo;
      END;
    END;

    PROCEDURE UpdatePurchHeadExtension@1100525000(DocType@1100525002 : Option;DocNo@1100525000 : Code[20]);
    VAR
      PurchHeadExtRec@1100525001 : Record 11020398;
      PurchHeadExtInitRec@1100525003 : Record 11020398;
      DeleteExt@1100525004 : Boolean;
    BEGIN
      PurchHeadExtInitRec.INIT;
      PurchHeadExtInitRec."Document Type" := DocType;
      PurchHeadExtInitRec."Document No."  := DocNo;
      IF FORMAT(Rec) = FORMAT(PurchHeadExtInitRec) THEN
        DeleteExt := TRUE
      ELSE
        DeleteExt := FALSE;

      IF NOT PurchHeadExtRec.GET(DocType, DocNo) THEN BEGIN
        IF DeleteExt THEN
          EXIT;
        PurchHeadExtRec.INIT;
        PurchHeadExtRec."Document Type" := DocType;
        PurchHeadExtRec."Document No."  := DocNo;
        PurchHeadExtRec.INSERT;
      END ELSE BEGIN
        IF DeleteExt THEN BEGIN
          PurchHeadExtRec.DELETE;
          EXIT;
        END;
      END;
      PurchHeadExtRec.TRANSFERFIELDS(Rec, FALSE);
      PurchHeadExtRec.MODIFY;
    END;

    PROCEDURE CopyPurchHeadExtension@1100525002(FromDocType@1100525001 : Option;FromDocNo@1100525000 : Code[20];ToDocType@1100525003 : Option;ToDocNo@1100525002 : Code[20]);
    VAR
      FromPurchHeadExtRec@1100525004 : Record 11020398;
      ToPurchHeadExtRec@1100525005 : Record 11020398;
    BEGIN
      IF ToPurchHeadExtRec.GET(ToDocType, ToDocNo) THEN
        ToPurchHeadExtRec.DELETE;
      IF FromPurchHeadExtRec.GET(FromDocType, FromDocNo) THEN BEGIN
        ToPurchHeadExtRec."Document Type" := ToDocType;
        ToPurchHeadExtRec."Document No."  := ToDocNo;
        ToPurchHeadExtRec.TRANSFERFIELDS(FromPurchHeadExtRec, FALSE);
        ToPurchHeadExtRec.INSERT;
      END;
    END;

    BEGIN
    {
      NAVFI: added field "Invoice Message" from tab38, reduced size of "Invoice Message" from 250 -> 128, due to full table-definition
    }
    END.
  }
}

