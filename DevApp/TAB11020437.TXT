OBJECT Table 11020437 Hours Consent Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               InsertOrUpdateMainLine;
               InsertOrUpdateHalfCompactLine;
             END;

    OnDelete=BEGIN
               IF Rec.IsOpenNormalLine THEN BEGIN
                 UpdHCLineForProcessdNormalLine(Rec);
                 UpdMainLineForProcessdNrmlLine(Rec);
               END;
             END;

    CaptionML=ENU=Hours Consent Line;
    LookupPageID=Page11072564;
    DrillDownPageID=Page11072564;
  }
  FIELDS
  {
    { 10  ;   ;Consenter           ;Code50        ;TableRelation=User."User Name";
                                                   OnValidate=BEGIN
                                                                UserMgt.ValidateUserID(Consenter);
                                                              END;

                                                   OnLookup=BEGIN
                                                              UserMgt.LookupUserID(Consenter);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Consenter }
    { 15  ;   ;Year                ;Integer       ;CaptionML=ENU=Year }
    { 20  ;   ;Week                ;Integer       ;CaptionML=ENU=Week }
    { 25  ;   ;Employee            ;Code20        ;TableRelation=IF (Week=FILTER(<>0),
                                                                     Source=CONST(Hour Accounting)) "Hour Accounting"."Employee No." WHERE (Year=FIELD(Year),
                                                                                                                                            Week=FIELD(Week),
                                                                                                                                            Employee No.=FIELD(Employee))
                                                                                                                                            ELSE IF (Week=FILTER(<>0),
                                                                                                                                                     Source=CONST(Site Mngmnt. Hours)) "Site Mngmnt. Hours Header"."Employee No." WHERE (Year=FIELD(Year),
                                                                                                                                                                                                                                         Week=FIELD(Week),
                                                                                                                                                                                                                                         Supplying Company=FIELD(Supplying Company),
                                                                                                                                                                                                                                         Employee No.=FIELD(Employee));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Employee }
    { 30  ;   ;Consent             ;Boolean       ;OnValidate=BEGIN
                                                                IF Consent THEN
                                                                  "Consent By" := USERID;
                                                              END;

                                                   CaptionML=ENU=Consent }
    { 40  ;   ;LineType            ;Option        ;CaptionML=ENU=LineType;
                                                   OptionCaptionML=ENU=Compact,Half-compact,Normal;
                                                   OptionString=Main,Half-compact,Normal }
    { 50  ;   ;Serial Number       ;Integer       ;CaptionML=ENU=Serial Number }
    { 55  ;   ;Source              ;Option        ;CaptionML=ENU=Source;
                                                   OptionCaptionML=ENU=Hour Accounting,Site Mngmnt. Hours;
                                                   OptionString=Hour Accounting,Site Mngmnt. Hours }
    { 60  ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Project,Service,Indirect,,Plant;
                                                   OptionString=Project,Service,Indirect,,Plant }
    { 70  ;   ;No.                 ;Code20        ;TableRelation=IF (Receiving Company=FILTER(''),
                                                                     Type=CONST(Project)) Job
                                                                     ELSE IF (Receiving Company=FILTER(''),
                                                                              Type=CONST(Service)) Service-Contract
                                                                              ELSE IF (Receiving Company=FILTER(''),
                                                                                       Type=CONST(Indirect)) "Cost Code"
                                                                                       ELSE IF (Receiving Company=FILTER(''),
                                                                                                Type=CONST(Plant)) "Plant Location";
                                                   CaptionML=ENU=No. }
    { 80  ;   ;Consent By          ;Code50        ;TableRelation=User."User Name";
                                                   OnValidate=BEGIN
                                                                UserMgt.ValidateUserID("Consent By");
                                                              END;

                                                   OnLookup=BEGIN
                                                              UserMgt.LookupUserID("Consent By");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Consent By }
    { 90  ;   ;Input Consent       ;Boolean       ;OnValidate=BEGIN
                                                                "Consent By" := '';
                                                                IF Consent THEN
                                                                  "Consent By" := USERID;
                                                              END;

                                                   CaptionML=ENU=Input Consent }
    { 100 ;   ;Hours Quantity      ;Decimal       ;CaptionML=ENU=Hours Quantity }
    { 105 ;   ;Amount              ;Decimal       ;CaptionML=ENU=Amount }
    { 120 ;   ;Line No.            ;Integer       ;TableRelation=IF (Line No.=FILTER(<>0),
                                                                     Source=CONST(Hour Accounting)) "Hour Accounting Line"."Line No." WHERE (Year=FIELD(Year),
                                                                                                                                             Week=FIELD(Week),
                                                                                                                                             Employee No.=FIELD(Employee),
                                                                                                                                             Line No.=FIELD(Line No.))
                                                                                                                                             ELSE IF (Line No.=FILTER(<>0),
                                                                                                                                                      Source=CONST(Site Mngmnt. Hours)) "Site Mngmnt. Hours Line"."Line No." WHERE (Year=FIELD(Year),
                                                                                                                                                                                                                                    Week=FIELD(Week),
                                                                                                                                                                                                                                    Supplying Company=FIELD(Supplying Company),
                                                                                                                                                                                                                                    Employee No.=FIELD(Employee),
                                                                                                                                                                                                                                    Line No.=FIELD(Line No.));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Line No. }
    { 121 ;   ;Input Deny          ;Boolean       ;CaptionML=ENU=Input Deny }
    { 130 ;   ;Denied              ;Boolean       ;OnValidate=BEGIN
                                                                "Denied By" := '';
                                                                IF Denied THEN
                                                                  "Denied By" := USERID;
                                                              END;

                                                   CaptionML=ENU=Denied }
    { 140 ;   ;Denied By           ;Code50        ;TableRelation=User."User Name";
                                                   OnValidate=BEGIN
                                                                UserMgt.ValidateUserID("Denied By");
                                                              END;

                                                   OnLookup=BEGIN
                                                              UserMgt.LookupUserID("Denied By");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Denied By }
    { 150 ;   ;Comment             ;Text50        ;CaptionML=ENU=Comment }
    { 160 ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Global Dimension 1 Code }
    { 170 ;   ;Wage Component      ;Code20        ;TableRelation="Wage Component".Code WHERE (Component Type=FILTER(Hours|Expenses));
                                                   CaptionML=ENU=Wage Component }
    { 171 ;   ;Wage Component Descr;Text50        ;CaptionML=ENU=Wage Component Description;
                                                   Editable=No }
    { 180 ;   ;Cost Object         ;Code20        ;TableRelation=IF (Receiving Company=FILTER('')) "Dimension Value".Code WHERE (Cost Type=FILTER(Labor|Subcontracting|Plant|Sundry),
                                                                                                                                 Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Cost Object }
    { 181 ;   ;Cost Object Descr   ;Text50        ;CaptionML=ENU=Cost Object Description;
                                                   Editable=No }
    { 190 ;   ;Supplying Company   ;Text30        ;TableRelation=Company;
                                                   CaptionML=ENU=Supplying Company }
    { 200 ;   ;Receiving Company   ;Text30        ;TableRelation=Company;
                                                   CaptionML=ENU=Receiving Company }
    { 210 ;   ;Element             ;Code20        ;TableRelation=IF (Receiving Company=FILTER(''),
                                                                     Type=CONST(Project)) "Project Element".Element WHERE (Project No.=FIELD(No.));
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Element }
    { 220 ;   ;Extension Contract  ;Code10        ;TableRelation=IF (Receiving Company=FILTER('')) "Extension Contract"."Contract No." WHERE (Project No.=FIELD(No.));
                                                   CaptionML=ENU=Extension Contract }
    { 240 ;   ;Input Reject        ;Boolean       ;CaptionML=ENU=Input Reject }
    { 250 ;   ;Rejected            ;Boolean       ;OnValidate=BEGIN
                                                                "Rejected By" := '';
                                                                IF Rejected THEN
                                                                  "Rejected By" := USERID;
                                                              END;

                                                   CaptionML=ENU=Rejected }
    { 260 ;   ;Rejected By         ;Code50        ;TableRelation=User."User Name";
                                                   OnValidate=BEGIN
                                                                UserMgt.ValidateUserID("Rejected By");
                                                              END;

                                                   OnLookup=BEGIN
                                                              UserMgt.LookupUserID("Rejected By");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Rejected By }
    { 270 ;   ;Week Day            ;Option        ;CaptionML=ENU=Week Day;
                                                   OptionCaptionML=ENU=" ,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday";
                                                   OptionString=[ ,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday];
                                                   Editable=No }
    { 300 ;   ;Hour Line Comment   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Hour Accounting Line".Comment WHERE (Year=FIELD(Year),
                                                                                                            Week=FIELD(Week),
                                                                                                            Employee No.=FIELD(Employee),
                                                                                                            Line No.=FIELD(Line No.)));
                                                   CaptionML=ENU=Hour Line Comment;
                                                   Editable=No }
    { 700 ;   ;Plant Company       ;Text30        ;TableRelation=Company;
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Plant Company }
    { 710 ;   ;Plant Type          ;Code20        ;CaptionML=ENU=Plant Type }
    { 720 ;   ;Plant No.           ;Code10        ;CaptionML=ENU=Plant No. }
    { 860 ;   ;Start Time          ;Time          ;CaptionML=ENU=Start Time;
                                                   Editable=No }
    { 870 ;   ;End Time            ;Time          ;CaptionML=ENU=End Time;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Year,Week,Employee,LineType,Serial Number,Type,No.,Line No.,Consenter,Denied,Consent,Source,Supplying Company;
                                                   Clustered=Yes }
    {    ;Consenter,Serial Number                  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528400 : TextConst 'ENU=No %1 found for %2 %3, %4 %5 and %6 %7.';
      Text001@1100528401 : TextConst 'ENU=%1 is not allowed to deny an %2.';
      Text002@1100528402 : TextConst 'ENU=SUP-%1';
      UserMgt@1100528403 : Codeunit 418;

    PROCEDURE InsertOrUpdateMainLine@1100485001();
    VAR
      HoursConsentLine@1100485000 : Record 11020437;
    BEGIN
      IF LineType <> LineType::Normal THEN
        EXIT;

      IF HoursConsentLine.GET(
        Year,0,'',HoursConsentLine.LineType::Main,"Serial Number",Type,"No.",0,
        Consenter,FALSE,FALSE,Source,'')
      THEN BEGIN
        HoursConsentLine."Hours Quantity" := HoursConsentLine."Hours Quantity" + "Hours Quantity";
        HoursConsentLine.Amount := HoursConsentLine.Amount + Amount;
        HoursConsentLine.MODIFY;
      END ELSE BEGIN
        HoursConsentLine.INIT;
        HoursConsentLine.Year := Year;
        HoursConsentLine.LineType := HoursConsentLine.LineType::Main;
        HoursConsentLine."Serial Number" := "Serial Number";
        HoursConsentLine.Source := Source;
        HoursConsentLine."No." := "No.";
        HoursConsentLine.Consenter := Consenter;
        HoursConsentLine.Type := Type;
        HoursConsentLine."Hours Quantity" := "Hours Quantity";
        HoursConsentLine.Amount := Amount;
        HoursConsentLine.INSERT;
      END;
    END;

    PROCEDURE InsertOrUpdateHalfCompactLine@1100485028();
    VAR
      HoursConsentLine@1100485000 : Record 11020437;
      Employee2@1100485001 : Record 5200;
    BEGIN
      IF LineType <> LineType::Normal THEN
        EXIT;

      HoursConsentLine.SETRANGE(Year, Year);
      HoursConsentLine.SETRANGE(Week, 0);
      HoursConsentLine.SETRANGE(Employee, Employee);
      HoursConsentLine.SETRANGE(LineType, LineType::"Half-compact");
      HoursConsentLine.SETRANGE("Serial Number", "Serial Number");
      HoursConsentLine.SETRANGE(Type, Type);
      HoursConsentLine.SETRANGE("No.", "No.");
      HoursConsentLine.SETRANGE("Line No.", 0);
      HoursConsentLine.SETRANGE(Consenter, Consenter);
      HoursConsentLine.SETRANGE(Denied, FALSE);
      HoursConsentLine.SETRANGE(Consent, FALSE);
      HoursConsentLine.SETRANGE(Source, Source);
      IF Source = Source::"Site Mngmnt. Hours" THEN
        HoursConsentLine.SETRANGE("Supplying Company", "Supplying Company");

      IF HoursConsentLine.FINDFIRST THEN BEGIN
        HoursConsentLine."Hours Quantity" := HoursConsentLine."Hours Quantity" + "Hours Quantity";
        HoursConsentLine.Amount := HoursConsentLine.Amount + Amount;
        HoursConsentLine.MODIFY
      END ELSE BEGIN
        HoursConsentLine.INIT;
        HoursConsentLine.Year := Year;
        IF (Source = Source::"Site Mngmnt. Hours") AND
           ("Supplying Company" <> '')
        THEN BEGIN
          HoursConsentLine."Supplying Company" := "Supplying Company";
          Employee2.CHANGECOMPANY("Supplying Company");
        END;
        HoursConsentLine.Employee := Employee;
        Employee2.GET(Employee);
        HoursConsentLine."Global Dimension 1 Code" := Employee2."Global Dimension 1 Code";
        HoursConsentLine.LineType := HoursConsentLine.LineType::"Half-compact";
        HoursConsentLine."Serial Number" := "Serial Number";
        HoursConsentLine.Source := Source;
        HoursConsentLine."No." := "No.";
        HoursConsentLine.Consenter := Consenter;
        HoursConsentLine.Type := Type;
        HoursConsentLine."Hours Quantity" := "Hours Quantity";
        HoursConsentLine.Amount := Amount;
        HoursConsentLine.INSERT;
      END;
    END;

    LOCAL PROCEDURE UpdateSource@1100528428(NormalHoursConsentLine@1100528400 : Record 11020437);
    VAR
      HoursConsentLine@1100528401 : Record 11020437;
      OpenHoursConsentLinesPresent@1100528402 : Boolean;
    BEGIN
      HoursConsentLine.SETRANGE(Year, NormalHoursConsentLine.Year);
      HoursConsentLine.SETRANGE(Week, NormalHoursConsentLine.Week);
      HoursConsentLine.SETRANGE(Employee, NormalHoursConsentLine.Employee);
      HoursConsentLine.SETRANGE(Consent, FALSE);
      HoursConsentLine.SETRANGE(Denied, FALSE);
      HoursConsentLine.SETRANGE(Source, NormalHoursConsentLine.Source);

      CASE NormalHoursConsentLine.Source OF
        NormalHoursConsentLine.Source::"Hour Accounting":
          BEGIN
            OpenHoursConsentLinesPresent := NOT HoursConsentLine.ISEMPTY;
            UpdateHourAccounting(NormalHoursConsentLine, OpenHoursConsentLinesPresent);
          END;
        NormalHoursConsentLine.Source::"Site Mngmnt. Hours":
          BEGIN
            HoursConsentLine.SETRANGE("Supplying Company", NormalHoursConsentLine."Supplying Company");
            HoursConsentLine.SETRANGE("Line No.", NormalHoursConsentLine."Line No.");
            OpenHoursConsentLinesPresent := NOT HoursConsentLine.ISEMPTY;
            UpdateSiteMngmntHoursLine(NormalHoursConsentLine, OpenHoursConsentLinesPresent);
          END;
      END;
    END;

    LOCAL PROCEDURE UpdateHourAccounting@1100485003(NormalHoursConsentLine@1100528400 : Record 11020437;OpenHoursConsentLinesPresent@1100528402 : Boolean);
    VAR
      HourAccounting@1100528401 : Record 11012038;
    BEGIN
      IF NOT HourAccounting.GET(
        NormalHoursConsentLine.Year, NormalHoursConsentLine.Week, NormalHoursConsentLine.Employee)
      THEN
        EXIT;

      IF OpenHoursConsentLinesPresent THEN
        HourAccounting.Consented := FALSE
      ELSE
        HourAccounting.Consented := TRUE;

      HourAccounting.MODIFY;
    END;

    LOCAL PROCEDURE UpdateSiteMngmntHoursLine@1100528419(NormalHoursConsentLine@1100528400 : Record 11020437;OpenHoursConsentLinesPresent@1100528403 : Boolean);
    VAR
      HoursConsentLine@1100528402 : Record 11020437;
      SiteMngmntHoursLine@1100528401 : Record 11012361;
    BEGIN
      IF NOT SiteMngmntHoursLine.GET(
        NormalHoursConsentLine.Year, NormalHoursConsentLine.Week, NormalHoursConsentLine."Supplying Company",
        NormalHoursConsentLine.Employee, NormalHoursConsentLine."Line No.")
      THEN
        EXIT;

      IF NOT OpenHoursConsentLinesPresent THEN
        SiteMngmntHoursLine.Approve;
    END;

    LOCAL PROCEDURE RejectSource@1100528425(NormalHoursConsentLine@1100528400 : Record 11020437);
    BEGIN
      CASE NormalHoursConsentLine.Source OF
        NormalHoursConsentLine.Source::"Hour Accounting":
          RejectHourAccounting(NormalHoursConsentLine);
        NormalHoursConsentLine.Source::"Site Mngmnt. Hours":
          RejectSiteMngmntHoursLine(NormalHoursConsentLine);
      END;
    END;

    LOCAL PROCEDURE RejectHourAccounting@1100528430(NormalHoursConsentLine@1100528400 : Record 11020437);
    BEGIN
      NormalHoursConsentLine.TESTFIELD(Source, Source::"Site Mngmnt. Hours");
      //TODO KK
      //Reject is not implemented in the Hour Accounting Lines
    END;

    LOCAL PROCEDURE RejectSiteMngmntHoursLine@1100528427(NormalHoursConsentLine@1100528400 : Record 11020437);
    VAR
      SiteMngmntHoursLine@1100528401 : Record 11012361;
    BEGIN
      IF NOT SiteMngmntHoursLine.GET(
        NormalHoursConsentLine.Year, NormalHoursConsentLine.Week, NormalHoursConsentLine."Supplying Company",
        NormalHoursConsentLine.Employee, NormalHoursConsentLine."Line No.")
      THEN
        EXIT;

      SiteMngmntHoursLine.Reject;
    END;

    PROCEDURE ProcessMainLines@1100528400();
    BEGIN
      IF FINDSET THEN BEGIN
        REPEAT
          IF ("Input Consent") AND
             (LineType = LineType::Main)
          THEN
            ConsentMainLine;
        UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE ConsentMainLine@1100528411();
    VAR
      MainHoursConsentLine@1100528402 : Record 11020437;
    BEGIN
      IF MainHoursConsentLine.GET(Year,0,'',LineType::Main,"Serial Number",Type,"No.",0,
        Consenter,FALSE,FALSE,Source,'')
      THEN BEGIN
        MainHoursConsentLine.DELETE;
        ConsentNormalLinesOfMainLine(MainHoursConsentLine);
        ConsentHalfCompLinesOfMainLine(MainHoursConsentLine);
      END;
    END;

    LOCAL PROCEDURE ConsentNormalLinesOfMainLine@1100528406(MainHoursConsentLine@1100528400 : Record 11020437);
    VAR
      HoursConsentLine@1100528414 : Record 11020437;
    BEGIN
      SetRangeOfMainFields(HoursConsentLine, MainHoursConsentLine);
      HoursConsentLine.SETRANGE(LineType, HoursConsentLine.LineType::Normal);

      IF HoursConsentLine.FINDSET THEN BEGIN
        REPEAT
          ConsentHoursConsentLine(HoursConsentLine);
          InsertNextHoursConsentLine(HoursConsentLine);
          UpdateSource(HoursConsentLine);
        UNTIL HoursConsentLine.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE ConsentHalfCompLinesOfMainLine@1100528415(MainHoursConsentLine@1100528408 : Record 11020437);
    VAR
      HoursConsentLine@1100528414 : Record 11020437;
    BEGIN
      SetRangeOfMainFields(HoursConsentLine, MainHoursConsentLine);
      HoursConsentLine.SETRANGE(LineType, HoursConsentLine.LineType::"Half-compact");

      IF HoursConsentLine.FINDSET THEN BEGIN
        REPEAT
          HoursConsentLine.DELETE;
        UNTIL HoursConsentLine.NEXT = 0;
      END;
    END;

    PROCEDURE ProcessHalfCompactLines@1100528402();
    BEGIN
      IF FINDSET THEN BEGIN
        REPEAT
          IF ("Input Consent") AND
             (LineType = LineType::"Half-compact")
          THEN
            ConsentHalfCompactLine;
        UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE ConsentHalfCompactLine@1100528405();
    VAR
      HalfCompactHoursConsentLine@1100528417 : Record 11020437;
    BEGIN
      HalfCompactHoursConsentLine.SETRANGE(Year, Year);
      HalfCompactHoursConsentLine.SETRANGE(Week, 0);
      HalfCompactHoursConsentLine.SETRANGE(Employee, Employee);
      HalfCompactHoursConsentLine.SETRANGE(LineType, LineType::"Half-compact");
      HalfCompactHoursConsentLine.SETRANGE("Serial Number", "Serial Number");
      HalfCompactHoursConsentLine.SETRANGE(Type, Type);
      HalfCompactHoursConsentLine.SETRANGE("No.", "No.");
      HalfCompactHoursConsentLine.SETRANGE("Line No.", 0);
      HalfCompactHoursConsentLine.SETRANGE(Consenter, Consenter);
      HalfCompactHoursConsentLine.SETRANGE(Denied, FALSE);
      HalfCompactHoursConsentLine.SETRANGE(Consent, FALSE);
      HalfCompactHoursConsentLine.SETRANGE(Source, Source);
      IF Source = Source::"Site Mngmnt. Hours" THEN
        HalfCompactHoursConsentLine.SETRANGE("Supplying Company", "Supplying Company");

      IF HalfCompactHoursConsentLine.FINDFIRST THEN BEGIN
        HalfCompactHoursConsentLine.DELETE;
        ConsentNormalLinesOfHlfCmpLine(HalfCompactHoursConsentLine);
        UpdMainLineForProcessedHCLine(HalfCompactHoursConsentLine);
      END;
    END;

    LOCAL PROCEDURE ConsentNormalLinesOfHlfCmpLine@1100528407(HalfCompactHoursConsentLine@1100528400 : Record 11020437);
    VAR
      HoursConsentLine@1100528414 : Record 11020437;
    BEGIN
      SetRangeOfMainFields(HoursConsentLine, HalfCompactHoursConsentLine);
      HoursConsentLine.SETRANGE(Employee, HalfCompactHoursConsentLine.Employee);
      HoursConsentLine.SETRANGE(LineType, HoursConsentLine.LineType::Normal);
      IF HalfCompactHoursConsentLine.Source = HalfCompactHoursConsentLine.Source::"Site Mngmnt. Hours" THEN
        HoursConsentLine.SETRANGE("Supplying Company", HalfCompactHoursConsentLine."Supplying Company");

      IF HoursConsentLine.FINDSET THEN BEGIN
        REPEAT
          ConsentHoursConsentLine(HoursConsentLine);
          InsertNextHoursConsentLine(HoursConsentLine);
          UpdateSource(HoursConsentLine);
        UNTIL HoursConsentLine.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE UpdMainLineForProcessedHCLine@1100528408(CurrHalfCmpHoursConsentLine@1100528400 : Record 11020437);
    VAR
      HalfCompactHoursConsentLine@1100528402 : Record 11020437;
      MainHoursConsentLine@1100528403 : Record 11020437;
    BEGIN
      IF NOT MainHoursConsentLine.GET(
        CurrHalfCmpHoursConsentLine.Year,
        0,
        '',
        MainHoursConsentLine.LineType::Main,
        CurrHalfCmpHoursConsentLine."Serial Number",
        CurrHalfCmpHoursConsentLine.Type,
        CurrHalfCmpHoursConsentLine."No.",
        0,
        CurrHalfCmpHoursConsentLine.Consenter,
        FALSE,
        FALSE,
        CurrHalfCmpHoursConsentLine.Source,
        '')
      THEN
        EXIT;

      SetRangeOfMainFields(HalfCompactHoursConsentLine, CurrHalfCmpHoursConsentLine);
      HalfCompactHoursConsentLine.SETRANGE(LineType, HalfCompactHoursConsentLine.LineType::"Half-compact");

      IF NOT HalfCompactHoursConsentLine.FINDFIRST THEN BEGIN
        MainHoursConsentLine.DELETE;
      END ELSE BEGIN
        MainHoursConsentLine.Amount := MainHoursConsentLine.Amount - CurrHalfCmpHoursConsentLine.Amount;
        MainHoursConsentLine."Hours Quantity" := MainHoursConsentLine."Hours Quantity" - CurrHalfCmpHoursConsentLine."Hours Quantity";
        MainHoursConsentLine.MODIFY;
      END;
    END;

    PROCEDURE ProcessNormalLines@1100528401();
    VAR
      SiteMngmntHoursHeader@1100528300 : Record 11012360;
    BEGIN
      IF FINDSET THEN BEGIN
        REPEAT
          IF ("Input Consent") AND
             (LineType = LineType::Normal)
          THEN
            ConsentNormalLine;
          IF ("Input Deny") AND
             (LineType = LineType::Normal)
          THEN
            DenyNormalLine;
          IF ("Input Reject") AND
             (LineType = LineType::Normal)
          THEN
            RejectNormalLine;
        UNTIL NEXT = 0;
        IF (SiteMngmntHoursHeader.GET(Year, Week, COMPANYNAME, Employee)) THEN BEGIN
          SiteMngmntHoursHeader.SetStatus;
          SiteMngmntHoursHeader.MODIFY;
        END;
      END;
    END;

    PROCEDURE SuperConsentNormalLine@1100528418();
    VAR
      NormalHoursConsentLine@1100528401 : Record 11020437;
      ProcessedHoursConsentLine@1100528400 : Record 11020439;
    BEGIN
      IF NormalHoursConsentLine.GET(
        Year,Week,Employee,LineType::Normal,"Serial Number",Type,"No.","Line No.",
        Consenter,FALSE,FALSE,Source,"Supplying Company")
      THEN BEGIN
        NormalHoursConsentLine.DELETE;
        NormalHoursConsentLine.Consent := TRUE;
        NormalHoursConsentLine."Consent By" :=
          COPYSTR(STRSUBSTNO(Text002, USERID), 1, MAXSTRLEN(NormalHoursConsentLine."Consent By"));
        ProcessedHoursConsentLine.TRANSFERFIELDS(NormalHoursConsentLine);
        ProcessedHoursConsentLine.INSERT(TRUE);

        UpdateSource(NormalHoursConsentLine);

        UpdHCLineForProcessdNormalLine(NormalHoursConsentLine);
        UpdMainLineForProcessdNrmlLine(NormalHoursConsentLine);
      END;
    END;

    PROCEDURE ConsentNormalLine@1100528404();
    VAR
      NormalHoursConsentLine@1100528401 : Record 11020437;
    BEGIN
      IF NormalHoursConsentLine.GET(
        Year,Week,Employee,LineType::Normal,"Serial Number",Type,"No.","Line No.",
        Consenter,FALSE,FALSE,Source,"Supplying Company")
      THEN BEGIN
        ConsentHoursConsentLine(NormalHoursConsentLine);
        InsertNextHoursConsentLine(NormalHoursConsentLine);
        UpdateSource(NormalHoursConsentLine);

        UpdHCLineForProcessdNormalLine(NormalHoursConsentLine);
        UpdMainLineForProcessdNrmlLine(NormalHoursConsentLine);
      END;
    END;

    LOCAL PROCEDURE UpdHCLineForProcessdNormalLine@1100528410(CurrNormalHoursConsentLine@1100528400 : Record 11020437);
    VAR
      NormalHoursConsentLine@1100528402 : Record 11020437;
      HalfCompactHoursConsentLine@1100528403 : Record 11020437;
    BEGIN
      HalfCompactHoursConsentLine.SETRANGE(Year, CurrNormalHoursConsentLine.Year);
      HalfCompactHoursConsentLine.SETRANGE(Week, 0);
      HalfCompactHoursConsentLine.SETRANGE(Employee, CurrNormalHoursConsentLine.Employee);
      HalfCompactHoursConsentLine.SETRANGE(LineType, LineType::"Half-compact");
      HalfCompactHoursConsentLine.SETRANGE("Serial Number", CurrNormalHoursConsentLine."Serial Number");
      HalfCompactHoursConsentLine.SETRANGE(Type, CurrNormalHoursConsentLine.Type);
      HalfCompactHoursConsentLine.SETRANGE("No.", CurrNormalHoursConsentLine."No.");
      HalfCompactHoursConsentLine.SETRANGE("Line No.", 0);
      HalfCompactHoursConsentLine.SETRANGE(Consenter, CurrNormalHoursConsentLine.Consenter);
      HalfCompactHoursConsentLine.SETRANGE(Denied, FALSE);
      HalfCompactHoursConsentLine.SETRANGE(Consent, FALSE);
      HalfCompactHoursConsentLine.SETRANGE(Source, CurrNormalHoursConsentLine.Source);
      IF Source = Source::"Site Mngmnt. Hours" THEN
        HalfCompactHoursConsentLine.SETRANGE("Supplying Company", CurrNormalHoursConsentLine."Supplying Company");

      IF NOT HalfCompactHoursConsentLine.FINDFIRST THEN
        EXIT;

      SetRangeOfMainFields(NormalHoursConsentLine, CurrNormalHoursConsentLine);
      IF CurrNormalHoursConsentLine.Source = CurrNormalHoursConsentLine.Source::"Site Mngmnt. Hours" THEN
        NormalHoursConsentLine.SETRANGE("Supplying Company", CurrNormalHoursConsentLine."Supplying Company");
      NormalHoursConsentLine.SETRANGE(Employee, CurrNormalHoursConsentLine.Employee);
      NormalHoursConsentLine.SETRANGE(LineType, CurrNormalHoursConsentLine.LineType::Normal);

      IF NormalHoursConsentLine.ISEMPTY THEN
        HalfCompactHoursConsentLine.DELETE
      ELSE
        IF CurrLineIsLastChild(NormalHoursConsentLine, CurrNormalHoursConsentLine) THEN
          HalfCompactHoursConsentLine.DELETE
        ELSE
          BEGIN
            HalfCompactHoursConsentLine.Amount := HalfCompactHoursConsentLine.Amount - CurrNormalHoursConsentLine.Amount;
            HalfCompactHoursConsentLine."Hours Quantity" :=
              HalfCompactHoursConsentLine."Hours Quantity" - CurrNormalHoursConsentLine."Hours Quantity";
            HalfCompactHoursConsentLine.MODIFY;
          END;
    END;

    LOCAL PROCEDURE UpdMainLineForProcessdNrmlLine@1100528412(CurrNormalHoursConsentLine@1100528400 : Record 11020437);
    VAR
      MainHoursConsentLine@1100528402 : Record 11020437;
      HalfCompactHoursConsentLine@1100528403 : Record 11020437;
    BEGIN
      IF NOT MainHoursConsentLine.GET(
        CurrNormalHoursConsentLine.Year,
        0,
        '',
        MainHoursConsentLine.LineType::Main,
        CurrNormalHoursConsentLine."Serial Number",
        CurrNormalHoursConsentLine.Type,
        CurrNormalHoursConsentLine."No.",
        0,
        CurrNormalHoursConsentLine.Consenter,
        FALSE,
        FALSE,
        CurrNormalHoursConsentLine.Source,
        '')
      THEN
        EXIT;

      SetRangeOfMainFields(HalfCompactHoursConsentLine, CurrNormalHoursConsentLine);
      HalfCompactHoursConsentLine.SETRANGE(LineType, HalfCompactHoursConsentLine.LineType::"Half-compact");

      IF HalfCompactHoursConsentLine.ISEMPTY THEN
        MainHoursConsentLine.DELETE
      ELSE BEGIN
        MainHoursConsentLine.Amount := MainHoursConsentLine.Amount - CurrNormalHoursConsentLine.Amount;
        MainHoursConsentLine."Hours Quantity" :=
          MainHoursConsentLine."Hours Quantity" - CurrNormalHoursConsentLine."Hours Quantity";
        MainHoursConsentLine.MODIFY;
      END;
    END;

    PROCEDURE DenyNormalLine@1100528409();
    VAR
      NormalHoursConsentLine@1100528402 : Record 11020437;
      NewHoursConsentLine@1100528403 : Record 11020437;
      ProcessedHoursConsentLine@1100528400 : Record 11020439;
      ConsenterDeniedLines@1100528401 : Code[50];
    BEGIN
      IF NormalHoursConsentLine.GET(
        Year,Week,Employee,LineType::Normal,"Serial Number",Type,"No.","Line No.",
        Consenter,FALSE,FALSE,Source,"Supplying Company")
      THEN BEGIN
        ConsenterDeniedLines := GetHourConsenterDeniedLines(NormalHoursConsentLine);

        NormalHoursConsentLine.DELETE;
        NormalHoursConsentLine.VALIDATE(Denied, TRUE);
        NormalHoursConsentLine."Input Deny" := FALSE;
        ProcessedHoursConsentLine.TRANSFERFIELDS(NormalHoursConsentLine);
        ProcessedHoursConsentLine.INSERT(TRUE);

        NewHoursConsentLine.COPY(NormalHoursConsentLine);
        NewHoursConsentLine."Denied By" := USERID;
        NewHoursConsentLine.Denied := FALSE;
        NewHoursConsentLine."Input Deny" := FALSE;
        NewHoursConsentLine.Consenter := ConsenterDeniedLines;
        NewHoursConsentLine.INSERT(TRUE);

        UpdateSource(NormalHoursConsentLine);

        UpdHCLineForProcessdNormalLine(NormalHoursConsentLine);
        UpdMainLineForProcessdNrmlLine(NormalHoursConsentLine);
      END;
    END;

    LOCAL PROCEDURE RejectNormalLine@1100528423();
    VAR
      NormalHoursConsentLine@1100528402 : Record 11020437;
      ProcessedHoursConsentLine@1100528400 : Record 11020439;
    BEGIN
      IF NormalHoursConsentLine.GET(
        Year,Week,Employee,LineType::Normal,"Serial Number",Type,"No.","Line No.",
        Consenter,FALSE,FALSE,Source,"Supplying Company")
      THEN BEGIN
        NormalHoursConsentLine.DELETE;
        NormalHoursConsentLine.VALIDATE(Rejected, TRUE);
        NormalHoursConsentLine."Input Reject" := FALSE;
        ProcessedHoursConsentLine.TRANSFERFIELDS(NormalHoursConsentLine);
        ProcessedHoursConsentLine.INSERT(TRUE);

        RejectSource(NormalHoursConsentLine);

        UpdHCLineForProcessdNormalLine(NormalHoursConsentLine);
        UpdMainLineForProcessdNrmlLine(NormalHoursConsentLine);
      END;
    END;

    LOCAL PROCEDURE ConsentHoursConsentLine@1100528429(VAR HoursConsentLine@1100528400 : Record 11020437);
    VAR
      ProcessedHoursConsentLine@1100528401 : Record 11020439;
    BEGIN
      HoursConsentLine.DELETE;
      IF HoursConsentLine.LineType = HoursConsentLine.LineType::Normal THEN BEGIN
        HoursConsentLine.VALIDATE(Consent, TRUE);
        HoursConsentLine."Input Consent" := FALSE;
        ProcessedHoursConsentLine.TRANSFERFIELDS(HoursConsentLine);
        ProcessedHoursConsentLine.INSERT(TRUE);
      END;
    END;

    LOCAL PROCEDURE InsertNextHoursConsentLine@1100528426(HoursConsentLine@1100528400 : Record 11020437);
    VAR
      NewHoursConsentLine@1100528402 : Record 11020437;
      SerialNumber@1100528407 : Integer;
      ConsenterID@1100528406 : Code[50];
    BEGIN
      IF GetHourConsenterInfo(
        SerialNumber,
        ConsenterID,
        HoursConsentLine,
        HoursConsentLine."Serial Number" + 1)
      THEN BEGIN
        NewHoursConsentLine.COPY(HoursConsentLine);
        NewHoursConsentLine.Consent := FALSE;
        NewHoursConsentLine."Input Consent" := FALSE;
        NewHoursConsentLine."Denied By" := '';
        NewHoursConsentLine.Consenter := ConsenterID;
        NewHoursConsentLine."Serial Number" := SerialNumber;
        NewHoursConsentLine.INSERT(TRUE);
      END;
    END;

    LOCAL PROCEDURE GetHourConsenterInfo@1100528403(VAR SerialNumber@1100528400 : Integer;VAR Consenter@1100528401 : Code[50];HoursConsentLine@1100528402 : Record 11020437;MinimumSerialNo@1100528407 : Integer) : Boolean;
    BEGIN
      CASE HoursConsentLine.Source OF
        HoursConsentLine.Source::"Hour Accounting":
          EXIT(GetHourConsenterInfoForHourAccounting(SerialNumber, Consenter, HoursConsentLine, MinimumSerialNo));
        HoursConsentLine.Source::"Site Mngmnt. Hours":
          EXIT(GetHourConsenterInfoForSiteMngmntHours(SerialNumber, Consenter, HoursConsentLine, MinimumSerialNo));
      END;
    END;

    LOCAL PROCEDURE GetHourConsenterInfoForHourAccounting@1100528431(VAR SerialNumber@1100528400 : Integer;VAR Consenter@1100528401 : Code[50];HoursConsentLine@1100528402 : Record 11020437;MinimumSerialNo@1100528407 : Integer) : Boolean;
    VAR
      HourAccountingLine@1100528403 : Record 11012039;
    BEGIN
      IF HourAccountingLine.GET(
        HoursConsentLine.Year,
        HoursConsentLine.Week,
        HoursConsentLine.Employee,
        HoursConsentLine."Line No.")
      THEN
        EXIT(HourAccountingLine.GetHourConsenterInfo(SerialNumber, Consenter, MinimumSerialNo))
      ELSE
        EXIT(FALSE);
    END;

    LOCAL PROCEDURE GetHourConsenterInfoForSiteMngmntHours@1100528432(VAR SerialNumber@1100528400 : Integer;VAR Consenter@1100528401 : Code[50];HoursConsentLine@1100528402 : Record 11020437;MinimumSerialNo@1100528407 : Integer) : Boolean;
    VAR
      SiteMngmntHoursLine@1100528404 : Record 11012361;
    BEGIN
      IF SiteMngmntHoursLine.GET(
        HoursConsentLine.Year,
        HoursConsentLine.Week,
        HoursConsentLine."Supplying Company",
        HoursConsentLine.Employee,
        HoursConsentLine."Line No.")
      THEN
        EXIT(SiteMngmntHoursLine.GetHourConsenterInfo(SerialNumber, Consenter, MinimumSerialNo))
      ELSE
        EXIT(FALSE);
    END;

    LOCAL PROCEDURE GetHourConsenterDeniedLines@1100528413(HoursConsentLine@1100528400 : Record 11020437) : Code[50];
    VAR
      HoursConsentSetup@1100528401 : Record 11020436;
      HourAccountingLine@1100528403 : Record 11012039;
    BEGIN
      CASE HoursConsentLine.Source OF
        HoursConsentLine.Source::"Hour Accounting":
          EXIT(GetHourConsenterDeniedLinesForHourAccounting(HoursConsentLine));
        HoursConsentLine.Source::"Site Mngmnt. Hours":
          EXIT(GetHourConsenterDeniedLinesForSiteMngmntHours(HoursConsentLine));
      END;
    END;

    LOCAL PROCEDURE GetHourConsenterDeniedLinesForHourAccounting@1100528421(HoursConsentLine@1100528400 : Record 11020437) : Code[50];
    VAR
      HoursConsentSetup@1100528401 : Record 11020436;
      HourAccountingLine@1100528403 : Record 11012039;
    BEGIN
      HourAccountingLine.GET(
        HoursConsentLine.Year,
        HoursConsentLine.Week,
        HoursConsentLine.Employee,
        HoursConsentLine."Line No.");

      IF HourAccountingLine.GetApplicableHoursConsentSetup(
        HoursConsentSetup,
        HoursConsentLine."Serial Number")
      THEN BEGIN
        HoursConsentSetup.TESTFIELD("Serial Number", HoursConsentLine."Serial Number");
        HoursConsentSetup.TESTFIELD("Consenter Denied Lines");
        IF HoursConsentSetup."Consenter Denied Lines" = USERID THEN
          ERROR(Text001, HoursConsentSetup.FIELDCAPTION("Consenter Denied Lines"), HoursConsentLine.TABLECAPTION);
        EXIT(HoursConsentSetup."Consenter Denied Lines");
      END ELSE
        ERROR(
          Text000,
          HoursConsentSetup.TABLECAPTION,
          HoursConsentSetup.FIELDCAPTION(Type),
          HoursConsentSetup.Type,
          HoursConsentSetup.FIELDCAPTION("No."),
          HoursConsentSetup."No.",
          HoursConsentSetup.FIELDCAPTION("Serial Number"),
          HoursConsentLine."Serial Number");
    END;

    LOCAL PROCEDURE GetHourConsenterDeniedLinesForSiteMngmntHours@1100528422(HoursConsentLine@1100528400 : Record 11020437) : Code[50];
    VAR
      HoursConsentSetup@1100528401 : Record 11020436;
      SiteMngmntHoursLine@1100528403 : Record 11012361;
    BEGIN
      SiteMngmntHoursLine.GET(
        HoursConsentLine.Year,
        HoursConsentLine.Week,
        HoursConsentLine."Supplying Company",
        HoursConsentLine.Employee,
        HoursConsentLine."Line No.");

      IF SiteMngmntHoursLine.GetApplicableHoursConsentSetup(
        HoursConsentSetup,
        HoursConsentLine."Serial Number")
      THEN BEGIN
        HoursConsentSetup.TESTFIELD("Serial Number", HoursConsentLine."Serial Number");
        HoursConsentSetup.TESTFIELD("Consenter Denied Lines");
        IF HoursConsentSetup."Consenter Denied Lines" = USERID THEN
          ERROR(Text001, HoursConsentSetup.FIELDCAPTION("Consenter Denied Lines"), HoursConsentLine.TABLECAPTION);
        EXIT(HoursConsentSetup."Consenter Denied Lines");
      END ELSE
        ERROR(
          Text000,
          HoursConsentSetup.TABLECAPTION,
          HoursConsentSetup.FIELDCAPTION(Type),
          HoursConsentSetup.Type,
          HoursConsentSetup.FIELDCAPTION("No."),
          HoursConsentSetup."No.",
          HoursConsentSetup.FIELDCAPTION("Serial Number"),
          HoursConsentLine."Serial Number");
    END;

    LOCAL PROCEDURE SetRangeOfMainFields@1100528414(VAR HoursConsentLine@1100528400 : Record 11020437;HrsConsentLineWithFilterValues@1100528401 : Record 11020437);
    BEGIN
      HoursConsentLine.SETRANGE(Year, HrsConsentLineWithFilterValues.Year);
      HoursConsentLine.SETRANGE("Serial Number", HrsConsentLineWithFilterValues."Serial Number");
      HoursConsentLine.SETRANGE(Type, HrsConsentLineWithFilterValues.Type);
      HoursConsentLine.SETRANGE("No.", HrsConsentLineWithFilterValues."No.");
      HoursConsentLine.SETRANGE(Consenter, HrsConsentLineWithFilterValues.Consenter);
      HoursConsentLine.SETRANGE(Denied, FALSE);
      HoursConsentLine.SETRANGE(Consent, FALSE);
      HoursConsentLine.SETRANGE(Source, HrsConsentLineWithFilterValues.Source);
    END;

    PROCEDURE IsOpenNormalLine@1100528416() : Boolean;
    BEGIN
      IF LineType <> LineType::Normal THEN
        EXIT(FALSE);

      IF Consent THEN
        EXIT(FALSE);

      IF Denied THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE CurrLineIsLastChild@1100528417(VAR ChildHoursConsentLine@1100528401 : Record 11020437;CurrHoursConsentLine@1100528400 : Record 11020437) : Boolean;
    BEGIN
      IF ChildHoursConsentLine.FINDSET THEN
        REPEAT
          IF CurrHoursConsentLine.GETPOSITION <> ChildHoursConsentLine.GETPOSITION THEN
            EXIT(FALSE);
        UNTIL ChildHoursConsentLine.NEXT = 0;

      EXIT(TRUE);
    END;

    PROCEDURE SetInputClearOfLines@1100528303();
    BEGIN
      MODIFYALL("Input Consent", FALSE);
      MODIFYALL("Input Deny", FALSE);
      MODIFYALL("Input Reject", FALSE);
    END;

    PROCEDURE SetInputConsentOfLines@1210190000(InputConsent@1210190001 : Boolean);
    BEGIN
      //kkleermaker, 110818, M28428
      SETRANGE("Input Deny", NOT InputConsent);
      SETRANGE("Input Reject", NOT InputConsent);
      MODIFYALL("Input Consent", InputConsent);
    END;

    PROCEDURE SetInputDenyOfLines@1100528302(InputDeny@1210190001 : Boolean);
    BEGIN
      SETRANGE("Input Consent", NOT InputDeny);
      SETRANGE("Input Reject", NOT InputDeny);
      MODIFYALL("Input Deny", InputDeny);
    END;

    PROCEDURE SetInputRejectOfLines@1100528301(InputReject@1210190001 : Boolean);
    BEGIN
      SETRANGE("Input Consent", NOT InputReject);
      SETRANGE("Input Deny", NOT InputReject);
      MODIFYALL("Input Reject", InputReject);
    END;

    PROCEDURE DescriptionOfNo@1100528700() : Text[50];
    VAR
      Job@1100528700 : Record 11072003;
      ServiceContract@1100528701 : Record 11012812;
      CostCode@1100528702 : Record 11012083;
      PlantLocation@1100528703 : Record 11012554;
    BEGIN
      IF "No." = '' THEN
        EXIT;

      CASE Type OF
        Type::Project:
          BEGIN
            IF "Receiving Company" <> '' THEN
              Job.CHANGECOMPANY("Receiving Company");
            IF NOT Job.READPERMISSION THEN
              EXIT;
            IF Job.GET("No.") THEN
              EXIT(Job.Description);
          END;
        Type::Service:
          BEGIN
            IF "Receiving Company" <> '' THEN
              ServiceContract.CHANGECOMPANY("Receiving Company");
            IF NOT ServiceContract.READPERMISSION THEN
              EXIT;
            IF ServiceContract.GET("No.") THEN
              EXIT(ServiceContract.Description);
          END;
        Type::Indirect:
          BEGIN
            IF "Receiving Company" <> '' THEN
              CostCode.CHANGECOMPANY("Receiving Company");
            IF NOT CostCode.READPERMISSION THEN
              EXIT;
            IF CostCode.GET("No.") THEN
              EXIT(CostCode.Description);
          END;
        Type::Plant:
          BEGIN
            IF "Receiving Company" <> '' THEN
              PlantLocation.CHANGECOMPANY("Receiving Company");
            IF NOT PlantLocation.READPERMISSION THEN
              EXIT;
            IF PlantLocation.GET("No.") THEN
              EXIT(PlantLocation.Description);
          END;
      END;
    END;

    PROCEDURE GetEmployeeFullName@1100528420() FullName : Text;
    VAR
      Employee2@1100528400 : Record 5200;
    BEGIN
      IF (Employee = '') THEN
        EXIT;

      IF (Source = Source::"Site Mngmnt. Hours") AND
         ("Supplying Company" <> '')
      THEN
        Employee2.CHANGECOMPANY("Supplying Company");

      IF Employee2.GET(Employee) THEN
        FullName := Employee2."Full Name";
    END;

    PROCEDURE GetPlantTypeDescription@1100525000() : Text;
    VAR
      PlantType@1100525000 : Record 11012551;
    BEGIN
      //CALL C028290
      IF (Type = Type::Plant) AND ("Plant Type" <> '') THEN BEGIN
        PlantType.CHANGECOMPANY("Plant Company");
        IF PlantType.GET("Plant Type") THEN
          EXIT(PlantType.Description);
      END;
      EXIT('');
    END;

    BEGIN
    END.
  }
}

