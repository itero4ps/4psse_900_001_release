OBJECT Table 11020437 Hours Consent Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF Rec.IsOpenNormalLine THEN BEGIN // SESB.I031 VKO 08.08.2013
                 InsertOrUpdateMainLine;
                 InsertOrUpdateHalfCompactLine;
               END; // SESB.I031 VKO 08.08.2013
             END;

    OnDelete=BEGIN
               IF Rec.IsOpenNormalLine THEN BEGIN
                 UpdHCLineForProcessdNormalLine(Rec);
                 UpdMainLineForProcessdNrmlLine(Rec);
               END;
             END;

    CaptionML=ENU=Hours Consent Line;
    LookupPageID=Page11072564;
    DrillDownPageID=Page11072564;
  }
  FIELDS
  {
    { 10  ;   ;Consenter           ;Code50        ;TableRelation=User."User Name";
                                                   OnValidate=BEGIN
                                                                UserMgt.ValidateUserID(Consenter);
                                                              END;

                                                   OnLookup=BEGIN
                                                              UserMgt.LookupUserID(Consenter);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Consenter }
    { 15  ;   ;Year                ;Integer       ;CaptionML=ENU=Year }
    { 20  ;   ;Week                ;Integer       ;CaptionML=ENU=Week }
    { 25  ;   ;Employee            ;Code20        ;TableRelation=IF (Week=FILTER(<>0),
                                                                     Source=CONST(Hour Accounting)) "Hour Accounting"."Employee No." WHERE (Year=FIELD(Year),
                                                                                                                                            Week=FIELD(Week),
                                                                                                                                            Employee No.=FIELD(Employee))
                                                                                                                                            ELSE IF (Week=FILTER(<>0),
                                                                                                                                                     Source=CONST(Site Mngmnt. Hours)) "Site Mngmnt. Hours Header"."Employee No." WHERE (Year=FIELD(Year),
                                                                                                                                                                                                                                         Week=FIELD(Week),
                                                                                                                                                                                                                                         Supplying Company=FIELD(Supplying Company),
                                                                                                                                                                                                                                         Employee No.=FIELD(Employee));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Employee }
    { 30  ;   ;Consent             ;Boolean       ;OnValidate=BEGIN
                                                                IF Consent THEN
                                                                  "Consent By" := USERID;
                                                              END;

                                                   CaptionML=ENU=Consent }
    { 40  ;   ;LineType            ;Option        ;CaptionML=ENU=LineType;
                                                   OptionCaptionML=ENU=Compact,Half-compact,Normal;
                                                   OptionString=Main,Half-compact,Normal }
    { 50  ;   ;Serial Number       ;Integer       ;CaptionML=ENU=Consent level }
    { 55  ;   ;Source              ;Option        ;CaptionML=ENU=Source;
                                                   OptionCaptionML=ENU=Hour Accounting,Site Mngmnt. Hours;
                                                   OptionString=Hour Accounting,Site Mngmnt. Hours }
    { 60  ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Project,Service,Indirect,,Plant;
                                                   OptionString=Project,Service,Indirect,,Plant }
    { 70  ;   ;No.                 ;Code20        ;TableRelation=IF (Receiving Company=FILTER(''),
                                                                     Type=CONST(Project)) Job
                                                                     ELSE IF (Receiving Company=FILTER(''),
                                                                              Type=CONST(Service)) Service-Contract
                                                                              ELSE IF (Receiving Company=FILTER(''),
                                                                                       Type=CONST(Indirect)) "Cost Code"
                                                                                       ELSE IF (Receiving Company=FILTER(''),
                                                                                                Type=CONST(Plant)) "Plant Location";
                                                   CaptionML=ENU=No. }
    { 80  ;   ;Consent By          ;Code50        ;TableRelation=User."User Name";
                                                   OnValidate=BEGIN
                                                                UserMgt.ValidateUserID("Consent By");
                                                              END;

                                                   OnLookup=BEGIN
                                                              UserMgt.LookupUserID("Consent By");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Consent By }
    { 90  ;   ;Input Consent       ;Boolean       ;OnValidate=BEGIN
                                                                "Consent By" := '';
                                                                IF Consent THEN
                                                                  "Consent By" := USERID;
                                                              END;

                                                   CaptionML=ENU=Input Consent }
    { 100 ;   ;Hours Quantity      ;Decimal       ;CaptionML=ENU=Hours Quantity }
    { 105 ;   ;Amount              ;Decimal       ;CaptionML=ENU=Amount }
    { 120 ;   ;Line No.            ;Integer       ;TableRelation=IF (Line No.=FILTER(<>0),
                                                                     Source=CONST(Hour Accounting)) "Hour Accounting Line"."Line No." WHERE (Year=FIELD(Year),
                                                                                                                                             Week=FIELD(Week),
                                                                                                                                             Employee No.=FIELD(Employee),
                                                                                                                                             Line No.=FIELD(Line No.))
                                                                                                                                             ELSE IF (Line No.=FILTER(<>0),
                                                                                                                                                      Source=CONST(Site Mngmnt. Hours)) "Site Mngmnt. Hours Line"."Line No." WHERE (Year=FIELD(Year),
                                                                                                                                                                                                                                    Week=FIELD(Week),
                                                                                                                                                                                                                                    Supplying Company=FIELD(Supplying Company),
                                                                                                                                                                                                                                    Employee No.=FIELD(Employee),
                                                                                                                                                                                                                                    Line No.=FIELD(Line No.));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Line No. }
    { 121 ;   ;Input Deny          ;Boolean       ;CaptionML=ENU=Input Deny }
    { 130 ;   ;Denied              ;Boolean       ;OnValidate=BEGIN
                                                                "Denied By" := '';
                                                                IF Denied THEN
                                                                  "Denied By" := USERID;
                                                              END;

                                                   CaptionML=ENU=Denied }
    { 140 ;   ;Denied By           ;Code50        ;TableRelation=User."User Name";
                                                   OnValidate=BEGIN
                                                                UserMgt.ValidateUserID("Denied By");
                                                              END;

                                                   OnLookup=BEGIN
                                                              UserMgt.LookupUserID("Denied By");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Denied By }
    { 150 ;   ;Comment             ;Text50        ;CaptionML=ENU=Comment }
    { 160 ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   CaptionClass='1,2,1' }
    { 170 ;   ;Wage Component      ;Code20        ;TableRelation="Wage Component".Code WHERE (Component Type=FILTER(Hours|Expenses|Expense hours));
                                                   CaptionML=ENU=Wage Component }
    { 171 ;   ;Wage Component Descr;Text50        ;CaptionML=ENU=Wage Component Description;
                                                   Editable=No }
    { 180 ;   ;Cost Object         ;Code20        ;TableRelation=IF (Receiving Company=FILTER('')) "Dimension Value".Code WHERE (Cost Type=FILTER(Labor|Subcontracting|Plant|Sundry),
                                                                                                                                 Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Cost Object }
    { 181 ;   ;Cost Object Descr   ;Text50        ;CaptionML=ENU=Cost Object Description;
                                                   Editable=No }
    { 190 ;   ;Supplying Company   ;Text30        ;TableRelation=Company;
                                                   CaptionML=ENU=Supplying Company }
    { 200 ;   ;Receiving Company   ;Text30        ;TableRelation=Company;
                                                   CaptionML=ENU=Receiving Company }
    { 210 ;   ;Element             ;Code20        ;TableRelation=IF (Receiving Company=FILTER(''),
                                                                     Type=CONST(Project)) "Project Element".Element WHERE (Project No.=FIELD(No.));
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Element }
    { 220 ;   ;Extension Contract  ;Code10        ;TableRelation=IF (Receiving Company=FILTER('')) "Extension Contract"."Contract No." WHERE (Project No.=FIELD(No.));
                                                   CaptionML=ENU=Extension Contract }
    { 240 ;   ;Input Reject        ;Boolean       ;CaptionML=ENU=Input Reject }
    { 250 ;   ;Rejected            ;Boolean       ;OnValidate=BEGIN
                                                                "Rejected By" := '';
                                                                IF Rejected THEN
                                                                  "Rejected By" := USERID;
                                                              END;

                                                   CaptionML=ENU=Rejected }
    { 260 ;   ;Rejected By         ;Code50        ;TableRelation=User."User Name";
                                                   OnValidate=BEGIN
                                                                UserMgt.ValidateUserID("Rejected By");
                                                              END;

                                                   OnLookup=BEGIN
                                                              UserMgt.LookupUserID("Rejected By");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Rejected By }
    { 270 ;   ;Week Day            ;Option        ;CaptionML=ENU=Week Day;
                                                   OptionCaptionML=ENU=" ,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday";
                                                   OptionString=[ ,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday];
                                                   Editable=No }
    { 300 ;   ;Hour Line Comment   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Hour Accounting Line".Comment WHERE (Year=FIELD(Year),
                                                                                                            Week=FIELD(Week),
                                                                                                            Employee No.=FIELD(Employee),
                                                                                                            Line No.=FIELD(Line No.)));
                                                   CaptionML=ENU=Hour Line Comment;
                                                   Editable=No }
    { 700 ;   ;Plant Company       ;Text30        ;TableRelation=Company;
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Plant Company }
    { 710 ;   ;Plant Type          ;Code20        ;CaptionML=ENU=Plant Type }
    { 720 ;   ;Plant No.           ;Code10        ;CaptionML=ENU=Plant No. }
    { 860 ;   ;Start Time          ;Time          ;CaptionML=ENU=Start Time;
                                                   Editable=No }
    { 870 ;   ;End Time            ;Time          ;CaptionML=ENU=End Time;
                                                   Editable=No }
    { 11128230;;Quantity           ;Decimal       ;CaptionML=ENU=Quantity;
                                                   Description=SESB.I035.I036 }
    { 11128231;;Inform Employee    ;Boolean       ;CaptionML=ENU=Inform Employee;
                                                   Description=SESB.I035.I036 }
    { 11128232;;Component Type     ;Option        ;CaptionML=ENU=Component Type;
                                                   OptionCaptionML=ENU=Hours,Days,Expenses,Expense hours;
                                                   OptionString=Hours,Days,Expenses,Expense hours;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Year,Week,Employee,LineType,Serial Number,Type,No.,Line No.,Consenter,Denied,Consent,Source,Supplying Company,Component Type,Wage Component;
                                                   Clustered=Yes }
    {    ;Consenter,Serial Number                  }
    {    ;Year,Employee,Week,Type,No.,Cost Object  }
    {    ;Year,Week,Type,No.,Cost Object,Employee  }
    {    ;Employee,Denied,Inform Employee          }
    {    ;Serial Number                            }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528400 : TextConst 'ENU=No %1 found for %2 %3, %4 %5 and %6 %7.';
      Text001@1100528401 : TextConst 'ENU=%1 is not allowed to deny an %2.';
      Text002@1100528402 : TextConst 'ENU=SUP-%1';
      UserMgt@1100528403 : Codeunit 418;
      "***4PS-007***"@1100285000 : TextConst;
      Text003@1100285001 : TextConst 'ENU=Hours are not visible because of user setup. You don''t have access to another ones hours.';
      ownHoursOverride@1100285500 : Boolean;

    PROCEDURE InsertOrUpdateMainLine@1100485001();
    VAR
      HoursConsentLine@1100485000 : Record 11020437;
    BEGIN
      IF LineType <> LineType::Normal THEN
        EXIT;

      //"Year","Week","Employee","LineType","Serial Number","Type","No.","Line No.","Consenter","Denied","Consent"
      IF HoursConsentLine.GET(
        //>>Itero 131010
        //Year,0,'',HoursConsentLine.LineType::Main,"Serial Number",Type,"No.",0,Consenter)

        //>>131113 ITERO.DJ
        //Year,0,'',HoursConsentLine.LineType::Main,"Serial Number",Type,"No.",0,Consenter,FALSE,FALSE)
        //>>140410 ITERO.GH
        //Year,0,'',HoursConsentLine.LineType::Main,"Serial Number",Type,"No.",0,Consenter,FALSE,FALSE,"Wage Component")
        Year,0,'',HoursConsentLine.LineType::Main,"Serial Number",Type,"No.",0,Consenter,FALSE,FALSE,Source,'',0,'')
        //<<140410 ITERO.GH
        //<<131113 ITERO.DJ

        //<<Itero 131010
      THEN BEGIN
        HoursConsentLine."Hours Quantity" := HoursConsentLine."Hours Quantity" + "Hours Quantity";
        HoursConsentLine.Amount := HoursConsentLine.Amount + Amount;
        HoursConsentLine.MODIFY;
      END ELSE BEGIN
        HoursConsentLine.INIT;
        HoursConsentLine.Year := Year;
        HoursConsentLine.LineType := HoursConsentLine.LineType::Main;
        HoursConsentLine."Serial Number" := "Serial Number";
        HoursConsentLine.Source := Source;
        HoursConsentLine."No." := "No.";
        HoursConsentLine.Consenter := Consenter;
        HoursConsentLine.Type := Type;
        HoursConsentLine."Hours Quantity" := "Hours Quantity";
        HoursConsentLine.Amount := Amount;

        //>>140410 ITERO.GH
        //HoursConsentLine."Component Type" := "Component Type";
        //>>131113 ITERO.DJ
        //HoursConsentLine."Wage Component" := "Wage Component";
        //<<131113 ITERO.DJ
        //<<140410 ITERO.GH

        HoursConsentLine.INSERT;
      END;
    END;

    PROCEDURE InsertOrUpdateHalfCompactLine@1100485028();
    VAR
      HoursConsentLine@1100485000 : Record 11020437;
      Employee2@1100485001 : Record 5200;
      lvWageComponent@1100285000 : Record 11012014;
    BEGIN
      IF LineType <> LineType::Normal THEN
        EXIT;

      //>>Itero WeekNo
      //IF HoursConsentLine.GET(
      //  Year,0,Employee,HoursConsentLine.LineType::"Half-compact","Serial Number",Type,"No.",0,Consenter)
      //THEN BEGIN
      CLEAR(HoursConsentLine);
      HoursConsentLine.SETRANGE(Year            , Year);
      HoursConsentLine.SETRANGE(Week            , Week);
      HoursConsentLine.SETRANGE(Employee        , Employee);
      HoursConsentLine.SETRANGE(LineType        , HoursConsentLine.LineType::"Half-compact");
      HoursConsentLine.SETRANGE("Serial Number" , "Serial Number");
      HoursConsentLine.SETRANGE(Type            , Type);
      HoursConsentLine.SETRANGE("No."           , "No.");
      HoursConsentLine.SETRANGE("Line No.", 0);
      //HoursConsentLine.SETRANGE(Denied          , FALSE );
      HoursConsentLine.SETRANGE(Consent          , FALSE);
      HoursConsentLine.SETRANGE(Consenter       , Consenter );
      HoursConsentLine.SETRANGE(Source, Source);
      IF Source = Source::"Site Mngmnt. Hours" THEN
        HoursConsentLine.SETRANGE("Supplying Company", "Supplying Company");
      //<<Itero WeekNo

      //>>140410 ITERO.GH
      HoursConsentLine.SETRANGE("Component Type" , "Component Type");
      //>>131113 ITERO.DJ
      //<<140410 ITERO.GH

      //IF HoursConsentLine.FINDFIRST THEN REPEAT
      IF HoursConsentLine.FINDSET(FALSE) THEN REPEAT

         BEGIN
          HoursConsentLine."Hours Quantity" := HoursConsentLine."Hours Quantity" + "Hours Quantity";
          HoursConsentLine.Amount := HoursConsentLine.Amount + Amount;
          HoursConsentLine.MODIFY
        END;
       UNTIL HoursConsentLine.NEXT = 0
      //<<131113 ITERO.DJ

      ELSE BEGIN
        HoursConsentLine.INIT;
        HoursConsentLine.Year := Year;
        IF (Source = Source::"Site Mngmnt. Hours") AND
           ("Supplying Company" <> '')
        THEN BEGIN
          HoursConsentLine."Supplying Company" := "Supplying Company";
          Employee2.CHANGECOMPANY("Supplying Company");
        END;
        //>>Itero WeekNo
        HoursConsentLine.Week := Week;
        //>>Itero WeekNo
        HoursConsentLine.Employee := Employee;
        Employee2.GET(Employee);
        HoursConsentLine."Global Dimension 1 Code" := Employee2."Global Dimension 1 Code";
        HoursConsentLine.LineType := HoursConsentLine.LineType::"Half-compact";
        HoursConsentLine."Serial Number" := "Serial Number";
        HoursConsentLine.Source := Source;
        HoursConsentLine."No." := "No.";
        HoursConsentLine.Consenter := Consenter;
        HoursConsentLine.Type := Type;
        HoursConsentLine."Hours Quantity" := "Hours Quantity";
        HoursConsentLine.Amount := Amount;

        //>>140410 ITERO.GH
        HoursConsentLine."Component Type" := "Component Type";
        //<<140410 ITERO.GH

        HoursConsentLine.INSERT;
      END;
    END;

    LOCAL PROCEDURE UpdateSource@1100528428(NormalHoursConsentLine@1100528400 : Record 11020437);
    VAR
      HoursConsentLine@1100528401 : Record 11020437;
      OpenHoursConsentLinesPresent@1100528402 : Boolean;
      HoursConsentLine2@1100285002 : Record 11020437;
      HourAccountingLine@1100285000 : Record 11012039;
    BEGIN
      HoursConsentLine.SETRANGE(Year, NormalHoursConsentLine.Year);
      HoursConsentLine.SETRANGE(Week, NormalHoursConsentLine.Week);
      HoursConsentLine.SETRANGE(Employee, NormalHoursConsentLine.Employee);
      HoursConsentLine.SETRANGE(Consent, FALSE);
      HoursConsentLine.SETRANGE(Denied, FALSE);
      HoursConsentLine.SETRANGE(Source, NormalHoursConsentLine.Source);

      CASE NormalHoursConsentLine.Source OF
        NormalHoursConsentLine.Source::"Hour Accounting":
          BEGIN
            OpenHoursConsentLinesPresent := NOT HoursConsentLine.ISEMPTY;
            UpdateHourAccounting(NormalHoursConsentLine, OpenHoursConsentLinesPresent);
          END;
        NormalHoursConsentLine.Source::"Site Mngmnt. Hours":
          BEGIN
            HoursConsentLine.SETRANGE("Supplying Company", NormalHoursConsentLine."Supplying Company");
            HoursConsentLine.SETRANGE("Line No.", NormalHoursConsentLine."Line No.");
            OpenHoursConsentLinesPresent := NOT HoursConsentLine.ISEMPTY;
            UpdateSiteMngmntHoursLine(NormalHoursConsentLine, OpenHoursConsentLinesPresent);
          END;
      END;
    END;

    LOCAL PROCEDURE UpdateHourAccounting@1100485003(NormalHoursConsentLine@1100528400 : Record 11020437;OpenHoursConsentLinesPresent@1100528402 : Boolean);
    VAR
      HourAccounting@1100528401 : Record 11012038;
    BEGIN
      IF NOT HourAccounting.GET(
        NormalHoursConsentLine.Year, NormalHoursConsentLine.Week, NormalHoursConsentLine.Employee)
      THEN
        EXIT;

      IF OpenHoursConsentLinesPresent THEN
        HourAccounting.Consented := FALSE
      ELSE
        HourAccounting.Consented := TRUE;

      HourAccounting.MODIFY;
    END;

    LOCAL PROCEDURE UpdateSiteMngmntHoursLine@1100528419(NormalHoursConsentLine@1100528400 : Record 11020437;OpenHoursConsentLinesPresent@1100528403 : Boolean);
    VAR
      HoursConsentLine@1100528402 : Record 11020437;
      SiteMngmntHoursLine@1100528401 : Record 11012361;
    BEGIN
      IF NOT SiteMngmntHoursLine.GET(
        NormalHoursConsentLine.Year, NormalHoursConsentLine.Week, NormalHoursConsentLine."Supplying Company",
        NormalHoursConsentLine.Employee, NormalHoursConsentLine."Line No.")
      THEN
        EXIT;

      IF NOT OpenHoursConsentLinesPresent THEN
        SiteMngmntHoursLine.Approve;
    END;

    LOCAL PROCEDURE RejectSource@1100528425(NormalHoursConsentLine@1100528400 : Record 11020437);
    BEGIN
      CASE NormalHoursConsentLine.Source OF
        NormalHoursConsentLine.Source::"Hour Accounting":
          RejectHourAccounting(NormalHoursConsentLine);
        NormalHoursConsentLine.Source::"Site Mngmnt. Hours":
          RejectSiteMngmntHoursLine(NormalHoursConsentLine);
      END;
    END;

    LOCAL PROCEDURE RejectHourAccounting@1100528430(NormalHoursConsentLine@1100528400 : Record 11020437);
    BEGIN
      NormalHoursConsentLine.TESTFIELD(Source, Source::"Site Mngmnt. Hours");
      //TODO KK
      //Reject is not implemented in the Hour Accounting Lines
    END;

    LOCAL PROCEDURE RejectSiteMngmntHoursLine@1100528427(NormalHoursConsentLine@1100528400 : Record 11020437);
    VAR
      SiteMngmntHoursLine@1100528401 : Record 11012361;
    BEGIN
      IF NOT SiteMngmntHoursLine.GET(
        NormalHoursConsentLine.Year, NormalHoursConsentLine.Week, NormalHoursConsentLine."Supplying Company",
        NormalHoursConsentLine.Employee, NormalHoursConsentLine."Line No.")
      THEN
        EXIT;

      SiteMngmntHoursLine.Reject;
    END;

    PROCEDURE ProcessMainLines@1100528400();
    BEGIN
      IF FINDSET THEN BEGIN
        REPEAT
          IF ("Input Consent") AND
             (LineType = LineType::Main)
          THEN
            ConsentMainLine;
        UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE ConsentMainLine@1100528411();
    VAR
      MainHoursConsentLine@1100528402 : Record 11020437;
    BEGIN
      //>>GHE 131115
      //IF MainHoursConsentLine.GET(Year,0,'',LineType::Main,"Serial Number",Type,"No.",0,Consenter,FALSE,FALSE) THEN BEGIN

      //>>140410 ITERO.GH
      //IF MainHoursConsentLine.GET(Year,0,'',LineType::Main,"Serial Number",Type,"No.",0,Consenter,FALSE,FALSE,"Wage Component") THEN BEGIN
      IF MainHoursConsentLine.GET(Year,0,'',LineType::Main,"Serial Number",Type,"No.",0,Consenter,FALSE,FALSE,Source,'',"Component Type",'') THEN BEGIN
      //<<GHE 131115
          MainHoursConsentLine.DELETE;
        ConsentNormalLinesOfMainLine(MainHoursConsentLine);
        ConsentHalfCompLinesOfMainLine(MainHoursConsentLine);
      END;
    END;

    LOCAL PROCEDURE ConsentNormalLinesOfMainLine@1100528406(MainHoursConsentLine@1100528400 : Record 11020437);
    VAR
      HoursConsentLine@1100528414 : Record 11020437;
    BEGIN
      SetRangeOfMainFields(HoursConsentLine, MainHoursConsentLine);
      HoursConsentLine.SETRANGE(LineType, HoursConsentLine.LineType::Normal);

      IF HoursConsentLine.FINDSET THEN BEGIN
        REPEAT
          ConsentHoursConsentLine(HoursConsentLine);
          InsertNextHoursConsentLine(HoursConsentLine);
          UpdateSource(HoursConsentLine);
        UNTIL HoursConsentLine.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE ConsentHalfCompLinesOfMainLine@1100528415(MainHoursConsentLine@1100528408 : Record 11020437);
    VAR
      HoursConsentLine@1100528414 : Record 11020437;
    BEGIN
      SetRangeOfMainFields(HoursConsentLine, MainHoursConsentLine);
      HoursConsentLine.SETRANGE(LineType, HoursConsentLine.LineType::"Half-compact");
      //>>Itero WeekNo
      HoursConsentLine.SETRANGE(Week,MainHoursConsentLine.Week);
      //<<Itero WeekNo
      IF HoursConsentLine.FINDSET THEN BEGIN
        REPEAT
          HoursConsentLine.DELETE;
        UNTIL HoursConsentLine.NEXT = 0;
      END;
    END;

    PROCEDURE ProcessHalfCompactLines@1100528402();
    BEGIN
      IF FINDSET THEN BEGIN
        REPEAT
          IF ("Input Consent") AND
             (LineType = LineType::"Half-compact")
          THEN
            ConsentHalfCompactLine;
        UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE ConsentHalfCompactLine@1100528405();
    VAR
      HalfCompactHoursConsentLine@1100528417 : Record 11020437;
    BEGIN
      HalfCompactHoursConsentLine.SETRANGE(Year, Year);
      HalfCompactHoursConsentLine.SETRANGE(Week, 0);
      HalfCompactHoursConsentLine.SETRANGE(Employee, Employee);
      HalfCompactHoursConsentLine.SETRANGE(LineType, LineType::"Half-compact");
      HalfCompactHoursConsentLine.SETRANGE("Serial Number", "Serial Number");
      HalfCompactHoursConsentLine.SETRANGE(Type, Type);
      HalfCompactHoursConsentLine.SETRANGE("No.", "No.");
      HalfCompactHoursConsentLine.SETRANGE("Line No.", 0);
      HalfCompactHoursConsentLine.SETRANGE(Consenter, Consenter);
      HalfCompactHoursConsentLine.SETRANGE(Denied, FALSE);
      HalfCompactHoursConsentLine.SETRANGE(Consent, FALSE);
      HalfCompactHoursConsentLine.SETRANGE(Source, Source);
      //>>Itero WeekNo
      HalfCompactHoursConsentLine.SETRANGE("Component Type","Component Type");
      HalfCompactHoursConsentLine.SETRANGE("Wage Component",'');
      //<<Itero WeekNo
      IF Source = Source::"Site Mngmnt. Hours" THEN
        HalfCompactHoursConsentLine.SETRANGE("Supplying Company", "Supplying Company");

      IF HalfCompactHoursConsentLine.FINDFIRST THEN BEGIN
        HalfCompactHoursConsentLine.DELETE;
        ConsentNormalLinesOfHlfCmpLine(HalfCompactHoursConsentLine);
        UpdMainLineForProcessedHCLine(HalfCompactHoursConsentLine);
      END;
    END;

    LOCAL PROCEDURE ConsentNormalLinesOfHlfCmpLine@1100528407(HalfCompactHoursConsentLine@1100528400 : Record 11020437);
    VAR
      HoursConsentLine@1100528414 : Record 11020437;
    BEGIN
      SetRangeOfMainFields(HoursConsentLine, HalfCompactHoursConsentLine);
      HoursConsentLine.SETRANGE(Employee, HalfCompactHoursConsentLine.Employee);
      HoursConsentLine.SETRANGE(LineType, HoursConsentLine.LineType::Normal);
      IF HalfCompactHoursConsentLine.Source = HalfCompactHoursConsentLine.Source::"Site Mngmnt. Hours" THEN
        HoursConsentLine.SETRANGE("Supplying Company", HalfCompactHoursConsentLine."Supplying Company");

      //>>140411 ITERO.GH
      HoursConsentLine.SETRANGE(Week             , HalfCompactHoursConsentLine.Week);
      HoursConsentLine.SETRANGE("Component Type" , HalfCompactHoursConsentLine."Component Type");
      //<<140411 ITERO.GH

      IF HoursConsentLine.FINDSET THEN BEGIN
        REPEAT
          ConsentHoursConsentLine(HoursConsentLine);
          InsertNextHoursConsentLine(HoursConsentLine);
          UpdateSource(HoursConsentLine);
        UNTIL HoursConsentLine.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE UpdMainLineForProcessedHCLine@1100528408(CurrHalfCmpHoursConsentLine@1100528400 : Record 11020437);
    VAR
      HalfCompactHoursConsentLine@1100528402 : Record 11020437;
      MainHoursConsentLine@1100528403 : Record 11020437;
    BEGIN
      IF NOT MainHoursConsentLine.GET(
        CurrHalfCmpHoursConsentLine.Year,
        0,
        '',
        MainHoursConsentLine.LineType::Main,
        CurrHalfCmpHoursConsentLine."Serial Number",
        CurrHalfCmpHoursConsentLine.Type,
        CurrHalfCmpHoursConsentLine."No.",
        0,
        CurrHalfCmpHoursConsentLine.Consenter,
        FALSE,
        FALSE,
        CurrHalfCmpHoursConsentLine.Source,
        //>>140410 ITERO.GH
        //'')
        '',
        "Component Type",
        '')
        //<<140410 ITERO.GH

      THEN
        EXIT;

      SetRangeOfMainFields(HalfCompactHoursConsentLine, CurrHalfCmpHoursConsentLine);
      HalfCompactHoursConsentLine.SETRANGE(LineType, HalfCompactHoursConsentLine.LineType::"Half-compact");
      //>>Itero WeekNo
      HalfCompactHoursConsentLine.SETRANGE(Week    , CurrHalfCmpHoursConsentLine.Week);
      //<<Itero WeekNo
      IF NOT HalfCompactHoursConsentLine.FINDFIRST THEN BEGIN
        MainHoursConsentLine.DELETE;
      END ELSE BEGIN
        MainHoursConsentLine.Amount := MainHoursConsentLine.Amount - CurrHalfCmpHoursConsentLine.Amount;
        MainHoursConsentLine."Hours Quantity" := MainHoursConsentLine."Hours Quantity" - CurrHalfCmpHoursConsentLine."Hours Quantity";
        MainHoursConsentLine.MODIFY;
      END;
    END;

    PROCEDURE ProcessNormalLines@1100528401();
    VAR
      SiteMngmntHoursHeader@1100528300 : Record 11012360;
    BEGIN
      IF FINDSET THEN BEGIN
        REPEAT
          IF ("Input Consent") AND
             (LineType = LineType::Normal)
          THEN
            ConsentNormalLine;
          IF ("Input Deny") AND
             (LineType = LineType::Normal)
          THEN
            DenyNormalLine;
          IF ("Input Reject") AND
             (LineType = LineType::Normal)
          THEN
            RejectNormalLine;
        UNTIL NEXT = 0;
        IF (SiteMngmntHoursHeader.GET(Year, Week, COMPANYNAME, Employee)) THEN BEGIN
          SiteMngmntHoursHeader.SetStatus;
          SiteMngmntHoursHeader.MODIFY;
        END;
      END;
    END;

    PROCEDURE SuperConsentNormalLine@1100528418();
    VAR
      NormalHoursConsentLine@1100528401 : Record 11020437;
      ProcessedHoursConsentLine@1100528400 : Record 11020439;
    BEGIN
      IF NormalHoursConsentLine.GET(
        Year,Week,Employee,LineType::Normal,"Serial Number",Type,"No.","Line No.",
        Consenter,FALSE,FALSE,Source,"Supplying Company","Component Type","Wage Component")
      THEN BEGIN
        NormalHoursConsentLine.DELETE;
        NormalHoursConsentLine.Consent := TRUE;
        NormalHoursConsentLine."Consent By" :=
          COPYSTR(STRSUBSTNO(Text002, USERID), 1, MAXSTRLEN(NormalHoursConsentLine."Consent By"));
        ProcessedHoursConsentLine.TRANSFERFIELDS(NormalHoursConsentLine);
        ProcessedHoursConsentLine.INSERT(TRUE);

        UpdateSource(NormalHoursConsentLine);

        UpdHCLineForProcessdNormalLine(NormalHoursConsentLine);
        UpdMainLineForProcessdNrmlLine(NormalHoursConsentLine);
      END;
    END;

    PROCEDURE ConsentNormalLine@1100528404();
    VAR
      NormalHoursConsentLine@1100528401 : Record 11020437;
    BEGIN
      IF NormalHoursConsentLine.GET(
        Year,Week,Employee,LineType::Normal,"Serial Number",Type,"No.","Line No.",
        Consenter,FALSE,FALSE,Source,"Supplying Company","Component Type","Wage Component")
      THEN BEGIN
        ConsentHoursConsentLine(NormalHoursConsentLine);
        InsertNextHoursConsentLine(NormalHoursConsentLine);
        //>>140327 ITERO.DJ 4PS-028
        //UpdateSource(NormalHoursConsentLine);
        //<<4PS-028
        UpdHCLineForProcessdNormalLine(NormalHoursConsentLine);
        UpdMainLineForProcessdNrmlLine(NormalHoursConsentLine);
        //>>140327 ITERO.DJ 4PS-028
        UpdateSource(NormalHoursConsentLine);
        //<<4PS-028
      END;
    END;

    LOCAL PROCEDURE UpdHCLineForProcessdNormalLine@1100528410(CurrNormalHoursConsentLine@1100528400 : Record 11020437);
    VAR
      NormalHoursConsentLine@1100528402 : Record 11020437;
      HalfCompactHoursConsentLine@1100528403 : Record 11020437;
      DelHalfCompactHoursConsentLine@1100285000 : Record 11020437;
      HourAccounting@1100285001 : Record 11012038;
      lvStatusOpen@1100285002 : Boolean;
    BEGIN
      HalfCompactHoursConsentLine.SETRANGE(Year, CurrNormalHoursConsentLine.Year);
        //>>Itero WeekNo
      //HalfCompactHoursConsentLine.SETRANGE(Week, 0);
      HalfCompactHoursConsentLine.SETRANGE(Week, CurrNormalHoursConsentLine.Week);
        //<<Itero WeekNo
      HalfCompactHoursConsentLine.SETRANGE(Employee, CurrNormalHoursConsentLine.Employee);
      HalfCompactHoursConsentLine.SETRANGE(LineType, LineType::"Half-compact");
      HalfCompactHoursConsentLine.SETRANGE("Serial Number", CurrNormalHoursConsentLine."Serial Number");
      HalfCompactHoursConsentLine.SETRANGE(Type, CurrNormalHoursConsentLine.Type);
      HalfCompactHoursConsentLine.SETRANGE("No.", CurrNormalHoursConsentLine."No.");
      HalfCompactHoursConsentLine.SETRANGE("Line No.", 0);
      HalfCompactHoursConsentLine.SETRANGE(Consenter, CurrNormalHoursConsentLine.Consenter);
      HalfCompactHoursConsentLine.SETRANGE(Denied, FALSE);
      HalfCompactHoursConsentLine.SETRANGE(Consent, FALSE);
      HalfCompactHoursConsentLine.SETRANGE(Source, CurrNormalHoursConsentLine.Source);
        //>>140410 ITERO.GH
      HalfCompactHoursConsentLine.SETRANGE("Component Type",CurrNormalHoursConsentLine."Component Type");
      HalfCompactHoursConsentLine.SETRANGE("Wage Component",'');
        //<<140410 ITERO.GH
      IF Source = Source::"Site Mngmnt. Hours" THEN
        HalfCompactHoursConsentLine.SETRANGE("Supplying Company", CurrNormalHoursConsentLine."Supplying Company");

      IF NOT HalfCompactHoursConsentLine.FINDFIRST THEN
        EXIT;

      SetRangeOfMainFields(NormalHoursConsentLine, CurrNormalHoursConsentLine);
      IF CurrNormalHoursConsentLine.Source = CurrNormalHoursConsentLine.Source::"Site Mngmnt. Hours" THEN
        NormalHoursConsentLine.SETRANGE("Supplying Company", CurrNormalHoursConsentLine."Supplying Company");
      NormalHoursConsentLine.SETRANGE(Employee, CurrNormalHoursConsentLine.Employee);
      NormalHoursConsentLine.SETRANGE(LineType, CurrNormalHoursConsentLine.LineType::Normal);

      //>>ITERO.GH IME-114
      NormalHoursConsentLine.SETRANGE(Week             , CurrNormalHoursConsentLine.Week);
      NormalHoursConsentLine.SETRANGE("Component Type" , CurrNormalHoursConsentLine."Component Type");

      //>>140421 ITERO.WvG
      //NormalHoursConsentLine.SETRANGE("Wage Component" , CurrNormalHoursConsentLine."Wage Component");
      //<<140421 ITERO.WvG

      //<<ITERO.GH IME-114

      //>>WeekNo.
      IF HourAccounting.GET(CurrNormalHoursConsentLine.Year,CurrNormalHoursConsentLine.Week,CurrNormalHoursConsentLine.Employee) THEN
         IF HourAccounting.Status = HourAccounting.Status :: Open THEN
            lvStatusOpen := TRUE
          ELSE
            lvStatusOpen := FALSE;
      //<<WeekNo.
      IF NormalHoursConsentLine.ISEMPTY THEN
        HalfCompactHoursConsentLine.DELETE
      ELSE
        //>>Week No.
        //IF CurrLineIsLastChild(NormalHoursConsentLine, CurrNormalHoursConsentLine) THEN
         IF (CurrLineIsLastChild(NormalHoursConsentLine, CurrNormalHoursConsentLine)) OR lvStatusOpen THEN
          //  HalfCompactHoursConsentLine.DELETE
          BEGIN
            DelHalfCompactHoursConsentLine.SETRANGE(Year       , CurrNormalHoursConsentLine.Year);
            DelHalfCompactHoursConsentLine.SETRANGE(Week       , CurrNormalHoursConsentLine.Week);
            DelHalfCompactHoursConsentLine.SETRANGE(Employee   , CurrNormalHoursConsentLine.Employee);
            DelHalfCompactHoursConsentLine.SETRANGE(LineType   , HalfCompactHoursConsentLine.LineType::"Half-compact");
            //>>140414 ITERO.GH
            DelHalfCompactHoursConsentLine.SETRANGE(Type       , CurrNormalHoursConsentLine.Type);
            DelHalfCompactHoursConsentLine.SETRANGE("No."      , CurrNormalHoursConsentLine."No.");
            //<<140414 ITERO.GH

            //>>140410 ITERO.GH
            DelHalfCompactHoursConsentLine.SETRANGE("Component Type" , CurrNormalHoursConsentLine."Component Type");

            //>>131113 ITERO.DJ
            //DelHalfCompactHoursConsentLine.SETRANGE("Wage Component" , CurrNormalHoursConsentLine."Wage Component");
            //>>131113 ITERO.DJ
            //<<140410 ITERO.GH
            IF DelHalfCompactHoursConsentLine.FINDFIRST THEN
               DelHalfCompactHoursConsentLine.DELETEALL;
          END
          //<<Week no.
        ELSE
          BEGIN
            HalfCompactHoursConsentLine.Amount := HalfCompactHoursConsentLine.Amount - CurrNormalHoursConsentLine.Amount;
            HalfCompactHoursConsentLine."Hours Quantity" :=
              HalfCompactHoursConsentLine."Hours Quantity" - CurrNormalHoursConsentLine."Hours Quantity";
            HalfCompactHoursConsentLine.MODIFY;
          END;
    END;

    LOCAL PROCEDURE UpdMainLineForProcessdNrmlLine@1100528412(CurrNormalHoursConsentLine@1100528400 : Record 11020437);
    VAR
      MainHoursConsentLine@1100528402 : Record 11020437;
      HalfCompactHoursConsentLine@1100528403 : Record 11020437;
      lvWageComponent@1100285000 : Record 11012014;
    BEGIN
      IF NOT MainHoursConsentLine.GET(
        CurrNormalHoursConsentLine.Year,
        0,
        '',
        MainHoursConsentLine.LineType::Main,
        CurrNormalHoursConsentLine."Serial Number",
        CurrNormalHoursConsentLine.Type,
        CurrNormalHoursConsentLine."No.",
        0,
        CurrNormalHoursConsentLine.Consenter,
        FALSE,
        FALSE,
        CurrNormalHoursConsentLine.Source,
        //>>140410 ITERO.GH
        //'')
        '',
        CurrNormalHoursConsentLine."Component Type",
        '')
        //<<140410 ITERO.GH
      THEN
        EXIT;

      SetRangeOfMainFields(HalfCompactHoursConsentLine, CurrNormalHoursConsentLine);
      HalfCompactHoursConsentLine.SETRANGE(LineType, HalfCompactHoursConsentLine.LineType::"Half-compact");

      //>>140410 ITERO.GH
      HalfCompactHoursConsentLine.SETRANGE("Component Type" , "Component Type");
      //>>131113 ITERO.DJ
      //HalfCompactHoursConsentLine.SETRANGE("Wage Component", "Wage Component");
      //<<140410 ITERO.GH

      IF lvWageComponent.GET("Wage Component") THEN;
      //<<131113 ITERO.DJ
      IF HalfCompactHoursConsentLine.ISEMPTY THEN
        MainHoursConsentLine.DELETE
      ELSE BEGIN
        IF lvWageComponent."Component Type" = lvWageComponent."Component Type" :: "Expense hours" THEN BEGIN
           MainHoursConsentLine.Amount := MainHoursConsentLine.Amount - CurrNormalHoursConsentLine.Amount;
           MainHoursConsentLine."Hours Quantity" :=
             MainHoursConsentLine."Hours Quantity" - CurrNormalHoursConsentLine."Hours Quantity";
           MainHoursConsentLine.MODIFY;
         END
        ELSE BEGIN
        MainHoursConsentLine.Amount := MainHoursConsentLine.Amount - CurrNormalHoursConsentLine.Amount;
        MainHoursConsentLine."Hours Quantity" :=
          MainHoursConsentLine."Hours Quantity" - CurrNormalHoursConsentLine."Hours Quantity";
        MainHoursConsentLine.MODIFY;
        END;
      END;
    END;

    PROCEDURE DenyNormalLine@1100528409();
    VAR
      NormalHoursConsentLine@1100528402 : Record 11020437;
      NewHoursConsentLine@1100528403 : Record 11020437;
      ProcessedHoursConsentLine@1100528400 : Record 11020439;
      ConsenterDeniedLines@1100528401 : Code[50];
    BEGIN
      IF NormalHoursConsentLine.GET(
        Year,Week,Employee,LineType::Normal,"Serial Number",Type,"No.","Line No.",
        //Consenter,FALSE,FALSE,Source,"Supplying Company")
        Consenter,FALSE,FALSE,Source,"Supplying Company","Component Type","Wage Component")
      THEN BEGIN
        ConsenterDeniedLines := GetHourConsenterDeniedLines(NormalHoursConsentLine);

        NormalHoursConsentLine.DELETE;
        NormalHoursConsentLine.VALIDATE(Denied, TRUE);
        NormalHoursConsentLine."Input Deny" := FALSE;
        ProcessedHoursConsentLine.TRANSFERFIELDS(NormalHoursConsentLine);
        // SESB.I035.I036 VKO 23.07.2013 >>
        NormalHoursConsentLine."Inform Employee" := ConsenterDeniedLines = '';
        // SESB.I035.I036 VKO 23.07.2013 <<
        ProcessedHoursConsentLine.INSERT(TRUE);

        IF ConsenterDeniedLines <> '' THEN BEGIN // SESB.I035.I036 VKO 23.07.2013

          NewHoursConsentLine.COPY(NormalHoursConsentLine);
          NewHoursConsentLine."Denied By" := USERID;
          NewHoursConsentLine.Denied := FALSE;
          NewHoursConsentLine."Input Deny" := FALSE;
          NewHoursConsentLine.Consenter := ConsenterDeniedLines;
          NewHoursConsentLine.INSERT(TRUE);

        END; // SESB.I035.I036 VKO 23.07.2013

        UpdateSource(NormalHoursConsentLine);

        UpdHCLineForProcessdNormalLine(NormalHoursConsentLine);
        UpdMainLineForProcessdNrmlLine(NormalHoursConsentLine);
      END;
    END;

    LOCAL PROCEDURE RejectNormalLine@1100528423();
    VAR
      NormalHoursConsentLine@1100528402 : Record 11020437;
      ProcessedHoursConsentLine@1100528400 : Record 11020439;
    BEGIN
      IF NormalHoursConsentLine.GET(
        Year,Week,Employee,LineType::Normal,"Serial Number",Type,"No.","Line No.",
        Consenter,FALSE,FALSE,Source,"Supplying Company")
      THEN BEGIN
        NormalHoursConsentLine.DELETE;
        NormalHoursConsentLine.VALIDATE(Rejected, TRUE);
        NormalHoursConsentLine."Input Reject" := FALSE;
        ProcessedHoursConsentLine.TRANSFERFIELDS(NormalHoursConsentLine);
        ProcessedHoursConsentLine.INSERT(TRUE);

        RejectSource(NormalHoursConsentLine);

        UpdHCLineForProcessdNormalLine(NormalHoursConsentLine);
        UpdMainLineForProcessdNrmlLine(NormalHoursConsentLine);
      END;
    END;

    LOCAL PROCEDURE ConsentHoursConsentLine@1100528429(VAR HoursConsentLine@1100528400 : Record 11020437);
    VAR
      ProcessedHoursConsentLine@1100528401 : Record 11020439;
    BEGIN
      HoursConsentLine.DELETE;
      IF HoursConsentLine.LineType = HoursConsentLine.LineType::Normal THEN BEGIN
        HoursConsentLine.VALIDATE(Consent, TRUE);
        HoursConsentLine."Input Consent" := FALSE;
        ProcessedHoursConsentLine.TRANSFERFIELDS(HoursConsentLine);
        ProcessedHoursConsentLine.INSERT(TRUE);
      END;
    END;

    LOCAL PROCEDURE InsertNextHoursConsentLine@1100528426(HoursConsentLine@1100528400 : Record 11020437);
    VAR
      NewHoursConsentLine@1100528402 : Record 11020437;
      SerialNumber@1100528407 : Integer;
      ConsenterID@1100528406 : Code[50];
      NewHoursConsentLine2@1100285002 : Record 11020437;
      HourAccountingLine@1100285001 : Record 11012039;
      HourAccounting@1100285000 : Record 11012038;
    BEGIN
      HourAccounting.GET(HoursConsentLine.Year,HoursConsentLine.Week,HoursConsentLine.Employee); // SESB.I026 VKO 09.08.2013

      IF GetHourConsenterInfo(
        SerialNumber,
        ConsenterID,
        HoursConsentLine,
        HoursConsentLine."Serial Number" + 1)
      THEN BEGIN
        NewHoursConsentLine.COPY(HoursConsentLine);
        NewHoursConsentLine.Consent := FALSE;
        NewHoursConsentLine."Input Consent" := FALSE;
        NewHoursConsentLine."Denied By" := '';
        NewHoursConsentLine.Consenter := ConsenterID;
        NewHoursConsentLine."Serial Number" := SerialNumber;
        NewHoursConsentLine.INSERT(TRUE);

        // SESB.I026 VKO 09.08.2013 >>
        IF HourAccountingLine.CheckUserIsConsenter(NewHoursConsentLine.Consenter,USERID) OR
          HourAccountingLine.CheckUserIsConsenter(NewHoursConsentLine.Consenter,HourAccounting."Released by")
        THEN
          NewHoursConsentLine.ConsentNormalLine
        // SESB.I026 VKO 09.08.2013 <<
      END;

      // SESB.I026 VKO 09.08.2013 >>
      IF NOT (HoursConsentLine.Type IN [HoursConsentLine.Type::Project,HoursConsentLine.Type::Indirect]) THEN
        EXIT;

      IF GetAllHoursConsenterInfo(
        SerialNumber,
        ConsenterID,
        HoursConsentLine,
        HoursConsentLine."Serial Number" + 1)
      THEN BEGIN
        NewHoursConsentLine2.COPY(HoursConsentLine);
        NewHoursConsentLine2.Consent := FALSE;
        NewHoursConsentLine2."Input Consent" := FALSE;
        NewHoursConsentLine2."Denied By" := '';
        NewHoursConsentLine2."Consent By" := '';
        NewHoursConsentLine2.Consenter := ConsenterID;
        NewHoursConsentLine2."Serial Number" := SerialNumber;
        NewHoursConsentLine2.INSERT(TRUE);
        // SESB.I026 VKO 09.08.2013 >>
        IF HourAccountingLine.CheckUserIsConsenter(NewHoursConsentLine2.Consenter,USERID) OR
          HourAccountingLine.CheckUserIsConsenter(NewHoursConsentLine2.Consenter,HourAccounting."Released by")
        THEN
          NewHoursConsentLine2.ConsentNormalLine;
        // SESB.I026 VKO 09.08.2013 <<
      END;
      // SESB.I026 VKO 09.08.2013 <<
    END;

    LOCAL PROCEDURE GetHourConsenterInfo@1100528403(VAR SerialNumber@1100528400 : Integer;VAR Consenter@1100528401 : Code[50];HoursConsentLine@1100528402 : Record 11020437;MinimumSerialNo@1100528407 : Integer) : Boolean;
    BEGIN
      CASE HoursConsentLine.Source OF
        HoursConsentLine.Source::"Hour Accounting":
          EXIT(GetHourConsenterInfoForHourAccounting(SerialNumber, Consenter, HoursConsentLine, MinimumSerialNo));
        HoursConsentLine.Source::"Site Mngmnt. Hours":
          EXIT(GetHourConsenterInfoForSiteMngmntHours(SerialNumber, Consenter, HoursConsentLine, MinimumSerialNo));
      END;
    END;

    LOCAL PROCEDURE GetHourConsenterInfoForHourAccounting@1100528431(VAR SerialNumber@1100528400 : Integer;VAR Consenter@1100528401 : Code[50];HoursConsentLine@1100528402 : Record 11020437;MinimumSerialNo@1100528407 : Integer) : Boolean;
    VAR
      HourAccountingLine@1100528403 : Record 11012039;
    BEGIN
      IF HourAccountingLine.GET(
        HoursConsentLine.Year,
        HoursConsentLine.Week,
        HoursConsentLine.Employee,
        HoursConsentLine."Line No.")
      THEN
        EXIT(HourAccountingLine.GetHourConsenterInfo(SerialNumber, Consenter, MinimumSerialNo))
      ELSE
        EXIT(FALSE);
    END;

    LOCAL PROCEDURE GetHourConsenterInfoForSiteMngmntHours@1100528432(VAR SerialNumber@1100528400 : Integer;VAR Consenter@1100528401 : Code[50];HoursConsentLine@1100528402 : Record 11020437;MinimumSerialNo@1100528407 : Integer) : Boolean;
    VAR
      SiteMngmntHoursLine@1100528404 : Record 11012361;
    BEGIN
      IF SiteMngmntHoursLine.GET(
        HoursConsentLine.Year,
        HoursConsentLine.Week,
        HoursConsentLine."Supplying Company",
        HoursConsentLine.Employee,
        HoursConsentLine."Line No.")
      THEN
        EXIT(SiteMngmntHoursLine.GetHourConsenterInfo(SerialNumber, Consenter, MinimumSerialNo))
      ELSE
        EXIT(FALSE);
    END;

    LOCAL PROCEDURE GetHourConsenterDeniedLines@1100528413(HoursConsentLine@1100528400 : Record 11020437) : Code[50];
    VAR
      HoursConsentSetup@1100528401 : Record 11020436;
      HourAccountingLine@1100528403 : Record 11012039;
    BEGIN
      CASE HoursConsentLine.Source OF
        HoursConsentLine.Source::"Hour Accounting":
          EXIT(GetHourConsenterDeniedLinesForHourAccounting(HoursConsentLine));
        HoursConsentLine.Source::"Site Mngmnt. Hours":
          EXIT(GetHourConsenterDeniedLinesForSiteMngmntHours(HoursConsentLine));
      END;
    END;

    LOCAL PROCEDURE GetHourConsenterDeniedLinesForHourAccounting@1100528421(HoursConsentLine@1100528400 : Record 11020437) : Code[50];
    VAR
      HoursConsentSetup@1100528401 : Record 11020436;
      HourAccountingLine@1100528403 : Record 11012039;
    BEGIN
      HourAccountingLine.GET(
        HoursConsentLine.Year,
        HoursConsentLine.Week,
        HoursConsentLine.Employee,
        HoursConsentLine."Line No.");

      IF HourAccountingLine.GetApplicableHoursConsentSetup(
        HoursConsentSetup,
        HoursConsentLine."Serial Number")
      THEN BEGIN
        HoursConsentSetup.TESTFIELD("Serial Number", HoursConsentLine."Serial Number");

        // SESB.I035.I036 VKO 29.07.2013 >>
        // HoursConsentSetup.TESTFIELD("Consenter Denied Lines");
        IF HoursConsentSetup."Consenter Denied Lines" = '' THEN
          EXIT;
        // SESB.I035.I036 VKO 29.07.2013 <<
        HoursConsentSetup.TESTFIELD("Consenter Denied Lines");
        IF HoursConsentSetup."Consenter Denied Lines" = USERID THEN
          ERROR(Text001, HoursConsentSetup.FIELDCAPTION("Consenter Denied Lines"), HoursConsentLine.TABLECAPTION);
        EXIT(HoursConsentSetup."Consenter Denied Lines");

      // SESB.I035.I036 VKO 29.07.2013 >>
      // Commented out
      END; // ELSE
      //  ERROR(
      //    Text000,
      //    HoursConsentSetup.TABLECAPTION,
      //    HoursConsentSetup.FIELDCAPTION(Type),
      //    HoursConsentSetup.Type,
      //    HoursConsentSetup.FIELDCAPTION("No."),
      //    HoursConsentSetup."No.",
      //    HoursConsentSetup.FIELDCAPTION("Serial Number"),
      //    HoursConsentLine."Serial Number");
      // SESB.I035.I036 VKO 29.07.2013 <<
    END;

    LOCAL PROCEDURE GetHourConsenterDeniedLinesForSiteMngmntHours@1100528422(HoursConsentLine@1100528400 : Record 11020437) : Code[50];
    VAR
      HoursConsentSetup@1100528401 : Record 11020436;
      SiteMngmntHoursLine@1100528403 : Record 11012361;
    BEGIN
      SiteMngmntHoursLine.GET(
        HoursConsentLine.Year,
        HoursConsentLine.Week,
        HoursConsentLine."Supplying Company",
        HoursConsentLine.Employee,
        HoursConsentLine."Line No.");

      IF SiteMngmntHoursLine.GetApplicableHoursConsentSetup(
        HoursConsentSetup,
        HoursConsentLine."Serial Number")
      THEN BEGIN
        HoursConsentSetup.TESTFIELD("Serial Number", HoursConsentLine."Serial Number");

        // SESB.I035.I036 VKO 29.07.2013 >>
        // HoursConsentSetup.TESTFIELD("Consenter Denied Lines");
        IF HoursConsentSetup."Consenter Denied Lines" = '' THEN
          EXIT;
        // SESB.I035.I036 VKO 29.07.2013 <<
        HoursConsentSetup.TESTFIELD("Consenter Denied Lines");
        IF HoursConsentSetup."Consenter Denied Lines" = USERID THEN
          ERROR(Text001, HoursConsentSetup.FIELDCAPTION("Consenter Denied Lines"), HoursConsentLine.TABLECAPTION);
        EXIT(HoursConsentSetup."Consenter Denied Lines");

      // SESB.I035.I036 VKO 29.07.2013 >>
      // Commented out
      END; // ELSE
      //  ERROR(
      //    Text000,
      //    HoursConsentSetup.TABLECAPTION,
      //    HoursConsentSetup.FIELDCAPTION(Type),
      //    HoursConsentSetup.Type,
      //    HoursConsentSetup.FIELDCAPTION("No."),
      //    HoursConsentSetup."No.",
      //    HoursConsentSetup.FIELDCAPTION("Serial Number"),
      //    HoursConsentLine."Serial Number");
      // SESB.I035.I036 VKO 29.07.2013 <<
    END;

    LOCAL PROCEDURE SetRangeOfMainFields@1100528414(VAR HoursConsentLine@1100528400 : Record 11020437;HrsConsentLineWithFilterValues@1100528401 : Record 11020437);
    BEGIN
      HoursConsentLine.SETRANGE(Year, HrsConsentLineWithFilterValues.Year);
      HoursConsentLine.SETRANGE("Serial Number", HrsConsentLineWithFilterValues."Serial Number");
      HoursConsentLine.SETRANGE(Type, HrsConsentLineWithFilterValues.Type);
      HoursConsentLine.SETRANGE("No.", HrsConsentLineWithFilterValues."No.");
      HoursConsentLine.SETRANGE(Consenter, HrsConsentLineWithFilterValues.Consenter);
      HoursConsentLine.SETRANGE(Denied, FALSE);
      HoursConsentLine.SETRANGE(Consent, FALSE);
      HoursConsentLine.SETRANGE(Source, HrsConsentLineWithFilterValues.Source);
    END;

    PROCEDURE IsOpenNormalLine@1100528416() : Boolean;
    BEGIN
      IF LineType <> LineType::Normal THEN
        EXIT(FALSE);

      IF Consent THEN
        EXIT(FALSE);

      IF Denied THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE CurrLineIsLastChild@1100528417(VAR ChildHoursConsentLine@1100528401 : Record 11020437;CurrHoursConsentLine@1100528400 : Record 11020437) : Boolean;
    BEGIN
      IF ChildHoursConsentLine.FINDSET THEN
        REPEAT
          IF CurrHoursConsentLine.GETPOSITION <> ChildHoursConsentLine.GETPOSITION THEN
            EXIT(FALSE);
        UNTIL ChildHoursConsentLine.NEXT = 0;

      EXIT(TRUE);
    END;

    PROCEDURE SetInputClearOfLines@1100528303();
    BEGIN
      MODIFYALL("Input Consent", FALSE);
      MODIFYALL("Input Deny", FALSE);
      MODIFYALL("Input Reject", FALSE);
    END;

    PROCEDURE SetInputConsentOfLines@1210190000(InputConsent@1210190001 : Boolean);
    BEGIN
      //kkleermaker, 110818, M28428
      SETRANGE("Input Deny", NOT InputConsent);
      SETRANGE("Input Reject", NOT InputConsent);
      MODIFYALL("Input Consent", InputConsent);
    END;

    PROCEDURE SetInputDenyOfLines@1100528302(InputDeny@1210190001 : Boolean);
    BEGIN
      SETRANGE("Input Consent", NOT InputDeny);
      SETRANGE("Input Reject", NOT InputDeny);
      MODIFYALL("Input Deny", InputDeny);
    END;

    PROCEDURE SetInputRejectOfLines@1100528301(InputReject@1210190001 : Boolean);
    BEGIN
      SETRANGE("Input Consent", NOT InputReject);
      SETRANGE("Input Deny", NOT InputReject);
      MODIFYALL("Input Reject", InputReject);
    END;

    PROCEDURE DescriptionOfNo@1100528700() : Text[50];
    VAR
      Job@1100528700 : Record 11072003;
      ServiceContract@1100528701 : Record 11012812;
      CostCode@1100528702 : Record 11012083;
      PlantLocation@1100528703 : Record 11012554;
    BEGIN
      IF "No." = '' THEN
        EXIT;

      CASE Type OF
        Type::Project:
          BEGIN
            IF "Receiving Company" <> '' THEN
              Job.CHANGECOMPANY("Receiving Company");
            IF NOT Job.READPERMISSION THEN
              EXIT;
            IF Job.GET("No.") THEN
              EXIT(Job.Description);
          END;
        Type::Service:
          BEGIN
            IF "Receiving Company" <> '' THEN
              ServiceContract.CHANGECOMPANY("Receiving Company");
            IF NOT ServiceContract.READPERMISSION THEN
              EXIT;
            IF ServiceContract.GET("No.") THEN
              EXIT(ServiceContract.Description);
          END;
        Type::Indirect:
          BEGIN
            IF "Receiving Company" <> '' THEN
              CostCode.CHANGECOMPANY("Receiving Company");
            IF NOT CostCode.READPERMISSION THEN
              EXIT;
            IF CostCode.GET("No.") THEN
              EXIT(CostCode.Description);
          END;
        Type::Plant:
          BEGIN
            IF "Receiving Company" <> '' THEN
              PlantLocation.CHANGECOMPANY("Receiving Company");
            IF NOT PlantLocation.READPERMISSION THEN
              EXIT;
            IF PlantLocation.GET("No.") THEN
              EXIT(PlantLocation.Description);
          END;
      END;
    END;

    PROCEDURE GetEmployeeFullName@1100528420() FullName : Text;
    VAR
      Employee2@1100528400 : Record 5200;
    BEGIN
      IF (Employee = '') THEN
        EXIT;

      IF (Source = Source::"Site Mngmnt. Hours") AND
         ("Supplying Company" <> '')
      THEN
        Employee2.CHANGECOMPANY("Supplying Company");

      IF Employee2.GET(Employee) THEN
        FullName := Employee2."Full Name";
    END;

    PROCEDURE ShowHourAccCard@1100294000(HoursConsentLine@1100294000 : Record 11020437);
    VAR
      HourAccounting@1100294002 : Record 11012038;
      HourAccountingForm@1100294001 : Page 11012035;
      "***4PSE***"@1100285001 : Integer;
      UserSetup@1100285000 : Record 91;
    BEGIN
      // SESB.I034 VKO 09.07.2013 >>
      HourAccounting.GET(HoursConsentLine.Year,HoursConsentLine.Week,HoursConsentLine.Employee);
      HourAccountingForm.SETRECORD(HourAccounting);

      //140305
      HourAccountingForm.SetOverride(ownHoursOverride);

      // SESB.I034 VKO 09.07.2013 <<
      //+++131009 4PS-007.MK

      //>>IME108ENH 140205
      //IF UserSetup.GET(USERID) THEN BEGIN
      IF UserSetup.GET(USERID) AND (NOT ownHoursOverride) THEN BEGIN//<<IME108ENH 140205

        IF (UserSetup."Access own Hours only") AND (HoursConsentLine.Employee <> UserSetup."Employee No.") THEN
          MESSAGE(Text003)
        ELSE
          HourAccountingForm.RUNMODAL;
      END ELSE
      //---131009 4PS-007.MK
        HourAccountingForm.RUNMODAL;
      // SESB.I034 VKO 09.07.2013 <<
    END;

    PROCEDURE ShowHourAccList@1100294002(HoursConsentLine@1100294000 : Record 11020437);
    VAR
      HourAccounting@1100294002 : Record 11012038;
      "***4PSE***"@1100285000 : Integer;
      UserSetup@1100285001 : Record 91;
    BEGIN
      // SESB.I034 VKO 09.07.2013 >>
      HourAccounting.SETRANGE(Year,HoursConsentLine.Year);
      HourAccounting.SETRANGE("Employee No.",HoursConsentLine.Employee);
      //+++131009 4PS-007.MK
      IF UserSetup.GET(USERID) THEN BEGIN
        IF (UserSetup."Access own Hours only") AND (HoursConsentLine.Employee <> UserSetup."Employee No.") THEN
          MESSAGE(Text003)
        ELSE
          PAGE.RUNMODAL(0,HourAccounting);
      END ELSE
      //---131009 4PS-007.MK
        PAGE.RUNMODAL(0,HourAccounting);
      // SESB.I034 VKO 09.07.2013 <<
    END;

    PROCEDURE OpenPredefinedLevelForm@1100294001() : Boolean;
    VAR
      HRSetup@1100294001 : Record 5218;
    BEGIN
      // SESB.I027 ASH 09.07.2013 >>
      HRSetup.GET;
      CASE HRSetup."Startup Consent Level" OF
        HRSetup."Startup Consent Level"::"Half-compact":
          BEGIN
            PAGE.RUNMODAL(PAGE::"Half-Compact Hrs Consent Lines");
            EXIT(TRUE);
          END;
        HRSetup."Startup Consent Level"::Normal:
          BEGIN
            PAGE.RUNMODAL(PAGE::"Detailed Hours Consent Lines");
            EXIT(TRUE);
          END;
      END;
      // SESB.I027 ASH 09.07.2013 <<
    END;

    LOCAL PROCEDURE GetAllHoursConsenterInfo@1100294003(VAR SerialNumber@1100528400 : Integer;VAR Consenter@1100528401 : Code[20];HoursConsentLine@1100528402 : Record 11020437;MinimumSerialNo@1100528407 : Integer) : Boolean;
    VAR
      HourAccountingLine@1100528403 : Record 11012039;
    BEGIN
      // SESB.I026 VKO 09.08.2013 >>
      IF HourAccountingLine.GET(
        HoursConsentLine.Year,
        HoursConsentLine.Week,
        HoursConsentLine.Employee,
        HoursConsentLine."Line No.")
      THEN BEGIN
        SerialNumber := MinimumSerialNo;
        EXIT(HourAccountingLine.GetAllHourConsenterInfo(SerialNumber,Consenter,FALSE));
      END ELSE
        EXIT(FALSE);
      // SESB.I026 VKO 09.08.2013 <<
    END;

    PROCEDURE SetOverride@1100285500(OverrideInput@1100285500 : Boolean);
    BEGIN
      ownHoursOverride := OverrideInput;
    END;

    PROCEDURE HourAccountingCheck@1100285501(pNormalHoursConsentLine@1100285500 : Record 11020437);
    VAR
      OpenHoursConsentLinesPresent@11128200 : Boolean;
    BEGIN
      OpenHoursConsentLinesPresent := NOT pNormalHoursConsentLine.ISEMPTY;
      UpdateHourAccounting(pNormalHoursConsentLine, OpenHoursConsentLinesPresent);
    END;

    PROCEDURE GetPlantTypeDescription@1100525000() : Text;
    VAR
      PlantType@1100525000 : Record 11012551;
    BEGIN
      //CALL C028290
      IF (Type = Type::Plant) AND ("Plant Type" <> '') THEN BEGIN
        PlantType.CHANGECOMPANY("Plant Company");
        IF PlantType.GET("Plant Type") THEN
          EXIT(PlantType.Description);
      END;
      EXIT('');
    END;

    BEGIN
    {

      SESB.I034 Link to correct timesheet
         VKO 09.07.2013 Trigger ShowHourAccCard added

      SESB.I027 FD Level of detail accounting
         ASH 09.07.2013 Key "Year,Employee,Week,Type,No.,Cost Object" added
         ASH 09.07.2013 Key "Year,Week,Type,No.,Cost Object,Employee" added
         ASH 09.07.2013 Trigger OpenPredefinedLevelForm added

      SESB.I035.I036 FD Message when dissaproving-correcting hours
         VKO 12.07.2013 Field 11128230 Quantity added
         VKO 12.07.2013 Field 11128231 "Inform Employee" added
         VKO 23.07.2013 Trigger DenyNormalLine changed
         VKO 29.07.2013 Trigger GetHourConsenterDeniedLines changed
         VKO 29.07.2013 Key "Employee,Denied,Inform Employee" added

      SESB.I026 2 step approval
         ASH 15.07.2013 Trigger ConsentNormalLine changed
         ASH 15.07.2013 Trigger ProcessNormalLines changed
         VKO 09.08.2013 Trigger InsertNextHoursConsentLine changed
         VKO 09.08.2013 Trigger GetAllHoursConsenterInfo added

      SESB.I031 Work Flow - Approval of hours
         VKO 05.08.2013 Trigger UpdateHourAccounting changed
         VKO 05.08.2013 Trigger OnInsert changed
         VKO 05.08.2013 Key "Serial Number" added

      130912 ITERO - Hour Accounting not set to Consent Correctly
             Itero WeekNo - Half Compact hours incl. Week No.
      131010 ITERO.MK 4PS-007 - Added message when the user is not allowed to see the hours of other users.
      Itero 131010 GH         - Old key used
      131113 ITERO.DJ IME057 - Added Wage component to Primary key, split lines for different Wage Components
      131114 ITERO.DJ IME050 changed caption for field serial number
      140305 ITERO.DJ IME108ENH added function setOverride
      140325 ITERO.GH IME-130 Field Wage Component: "Wage Component".Code WHERE (Component Type=FILTER(Hours|Expenses|Expense Hours))
      140226 ITERO.GH 4PS-028 Added Function HourAccountingCheck for outside call - With ITERO.DJ
      140327 ITERO.DJ 4PS-028 chaged the order of functioncalls in consenting of normal lines to make sure hour accounting is properly updated
      140410 ITERO.GH IME-123 Consent HalfCompact Wage Component
                              added field Component Type + added to Key
                              Changed Key swapped fields Component Type - Wage Component

      140414 ITERO.GH IME-114 Add filter fields for match records
      140421 ITERO.WvG IME-123 Removed range Wage Component
      160225 ITERO.DL IME424x repace 'findfirst then repeat' (causes locking) with 'findset(false) then repeat'
    }
    END.
  }
}

