OBJECT Table 11020520 Plant Request
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 IF "Web Site No. Series" <> '' THEN BEGIN
                    //M25336 sn
                   NoSeriesMgt.InitSeries("Web Site No. Series", xRec."No. Series",0D,"No.","No. Series");
                    //M25336 en
                 END ELSE BEGIN
                   PlantSetupRec.GET;
                   PlantSetupRec.TESTFIELD("Plant Request Nos.");
                   NoSeriesMgt.InitSeries(PlantSetupRec."Plant Request Nos.",xRec."No. Series",0D,"No.","No. Series");
                 END;
               END;

               InitRecord();

               //**4PS Generated Code. Do Not Change.sn05
               DPA_OnInsert;
               //**4PS Generated Code.en05
             END;

    OnDelete=VAR
               lvReqLineRec@1100485002 : Record 11020521;
               lvOrderContRec@1100485001 : Record 11012536;
               ReqCostLine@1100525000 : Record 11020554;
             BEGIN
               lvReqLineRec.SETRANGE("Plant Request No.","No.");
               lvReqLineRec.DELETEALL;

               ReqCostLine.SETRANGE("Plant Request No.","No.");
               ReqCostLine.DELETEALL;

               lvOrderContRec.SETRANGE(Type, lvOrderContRec.Type::"Req From", lvOrderContRec.Type::"Req To");
               lvOrderContRec.SETRANGE("Order No.", "No.");
               lvOrderContRec.DELETEALL;

               DeleteCommentLines();  //DP00183.c
             END;

    OnRename=BEGIN
               TESTFIELD(Posted,FALSE);
               TESTFIELD(Status, Status::Open);
             END;

    CaptionML=ENU=Plant Request;
    LookupPageID=Page11020526;
    DrillDownPageID=Page11020526;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                PlantSetupRec.GET;
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  NoSeriesMgt.TestManual(PlantSetupRec."Plant Request Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 20  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF (Type <> Type::"Other Transfers") AND
                                                                   ("Transport Cost for (Advice)" IN
                                                                     ["Transport Cost for (Advice)"::"From Location","Transport Cost for (Advice)"::"To Location"])
                                                                THEN
                                                                  "Transport Cost for (Advice)" := "Transport Cost for (Advice)"::Location;

                                                                FillLocations();
                                                              END;

                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Arrival,Removal,Other Transfers;
                                                   OptionString=Arrival,Removal,Other Transfers }
    { 30  ;   ;From Location       ;Code20        ;TableRelation=IF (Type=CONST(Arrival)) "Plant Location".Code WHERE (Depot=CONST(Yes))
                                                                 ELSE IF (Type=CONST(Removal)) "Plant Location".Code WHERE (Depot=CONST(No))
                                                                 ELSE "Plant Location".Code;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("From Location Description");

                                                                IF "From Location" <> xRec."From Location" THEN BEGIN
                                                                  "From Location Address Code" := '';
                                                                  IF "From Location" <> '' THEN BEGIN
                                                                    //PlantLocRec.GET("From Location");
                                                                    //**4PS.sn DPA Plant
                                                                    PlantLocRec.Code := "From Location";
                                                                    PlantLocRec.DPA_FindRecWithDPAFilterAppld;
                                                                    //**4PS.en DPA Plant
                                                                    PlantLocRec.TESTFIELD(Blocked,FALSE);
                                                                    "From Location Name" := PlantLocRec.Description;
                                                                    "From Location Name 2" := PlantLocRec."Description 2";
                                                                    "From Location Address" := PlantLocRec.Address;
                                                                    "From Location Address 2" := PlantLocRec."Address 2";
                                                                    "From Location Post Code" := PlantLocRec."Post Code";
                                                                    "From Location City" := PlantLocRec.City;
                                                                    "From Location Contact" := PlantLocRec.Contact;
                                                                    "From Location Contact Phone No" := PlantLocRec."Contact Phone No.";
                                                                  END ELSE BEGIN
                                                                    "From Location Name" := '';
                                                                    "From Location Name 2" := '';
                                                                    "From Location Address" := '';
                                                                    "From Location Address 2" := '';
                                                                    "From Location Post Code" := '';
                                                                    "From Location City" := '';
                                                                    "From Location Contact" := '';
                                                                    "From Location Contact Phone No" := '';
                                                                  END;
                                                                  DeleteOrderContact('FROM');
                                                                END;
                                                              END;

                                                   CaptionML=ENU=From Location }
    { 35  ;   ;From Location Description;Text50   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Location".Description WHERE (Code=FIELD(From Location)));
                                                   CaptionML=ENU=From Location Description;
                                                   Editable=No }
    { 40  ;   ;To Location         ;Code20        ;TableRelation=IF (Type=CONST(Arrival)) "Plant Location".Code WHERE (Depot=CONST(No))
                                                                 ELSE IF (Type=CONST(Removal)) "Plant Location".Code WHERE (Depot=CONST(Yes))
                                                                 ELSE "Plant Location".Code;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("To Location Description");

                                                                IF "To Location" <> xRec."To Location" THEN BEGIN
                                                                  "To Location Address Code" := '';
                                                                  IF "To Location" <> '' THEN BEGIN
                                                                    //CheckBlock("To Location");
                                                                    //**4PS.sn DPA Plant
                                                                    PlantLocRec.Code := "To Location";
                                                                    PlantLocRec.DPA_FindRecWithDPAFilterAppld;
                                                                    PlantLocRec.CheckBlock(0,TRUE,FALSE);
                                                                    //**4PS.en DPA Plant
                                                                    "To Location Name" := PlantLocRec.Description;
                                                                    "To Location Name 2" := PlantLocRec."Description 2";
                                                                    "To Location Address" := PlantLocRec.Address;
                                                                    "To Location Address 2" := PlantLocRec."Address 2";
                                                                    "To Location City" := PlantLocRec.City;
                                                                    "To Location Contact" := PlantLocRec.Contact;
                                                                    "To Location Post Code" := PlantLocRec."Post Code";
                                                                    "To Location Contact Phone No" := PlantLocRec."Contact Phone No.";
                                                                  END ELSE BEGIN
                                                                    "To Location Name" := '';
                                                                    "To Location Name 2" := '';
                                                                    "To Location Address" := '';
                                                                    "To Location Address 2" := '';
                                                                    "To Location City" := '';
                                                                    "To Location Contact" := '';
                                                                    "To Location Post Code" := '';
                                                                    "To Location Contact Phone No" := '';
                                                                  END;
                                                                  DeleteOrderContact('TO');
                                                                END;
                                                              END;

                                                   CaptionML=ENU=To Location }
    { 45  ;   ;To Location Description;Text50     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Location".Description WHERE (Code=FIELD(To Location)));
                                                   CaptionML=ENU=To Location Description;
                                                   Editable=No }
    { 55  ;   ;Department Code     ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1, "Department Code");
                                                              END;

                                                   CaptionML=ENU=Department Code }
    { 60  ;   ;Transfer Date       ;Date          ;CaptionML=ENU=Transfer Date }
    { 70  ;   ;Status              ;Option        ;CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=Open,,,,Requested,,,,Approved,,,Disapproved,Cancelled;
                                                   OptionString=Open,,,,Requested,,,,Approved,,,Disapproved,Cancelled;
                                                   Editable=No }
    { 75  ;   ;Posted              ;Boolean       ;CaptionML=ENU=Posted;
                                                   Editable=No }
    { 80  ;   ;Posted on           ;DateTime      ;CaptionML=ENU=Posted on;
                                                   Editable=No }
    { 85  ;   ;Plant Order No.     ;Code20        ;TableRelation="Plant Order";
                                                   OnLookup=VAR
                                                              PlantOrder@1100525000 : Record 11012556;
                                                            BEGIN
                                                              IF "Plant Order No." <> '' THEN BEGIN  //Only show, not editable
                                                                IF PlantOrder.GET("Plant Order No.") THEN BEGIN
                                                                  IF NOT PlantOrder.Posted THEN
                                                                    PAGE.RUNMODAL(0, PlantOrder)
                                                                  ELSE
                                                                    PAGE.RUNMODAL(PAGE::"Posted Plant Order List", PlantOrder);
                                                                END;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Plant Order No.;
                                                   Editable=No }
    { 90  ;   ;Transport Cost for (Advice);Option ;OnValidate=BEGIN
                                                                PlantSetupRec.GET;
                                                                IF (NOT PlantSetupRec."Transport Orders") AND ("Transport Cost for (Advice)" <> "Transport Cost for (Advice)"::" ") THEN
                                                                  "Transport Cost for (Advice)" := "Transport Cost for (Advice)"::" ";

                                                                IF (Type <> Type::"Other Transfers") AND
                                                                   ("Transport Cost for (Advice)" IN
                                                                     ["Transport Cost for (Advice)"::"From Location","Transport Cost for (Advice)"::"To Location"])
                                                                THEN
                                                                  "Transport Cost for (Advice)" := "Transport Cost for (Advice)"::Location;

                                                                IF ("Transport Cost for (Advice)" <> "Transport Cost for (Advice)"::Project) AND ("Project No. (TP-Cost)" <> '') THEN
                                                                  TESTFIELD("Project No. (TP-Cost)", '');
                                                              END;

                                                   CaptionML=ENU=Transport Cost for (Advice);
                                                   OptionCaptionML=ENU=" ,Internal,Project,Location,From Location,To Location";
                                                   OptionString=[ ,Internal,Project,Location,From Location,To Location] }
    { 91  ;   ;Project No. (TP-Cost);Code20       ;TableRelation=IF (Posted=CONST(No)) Job WHERE (Project Status=FILTER(Preparation..Production))
                                                                 ELSE Job;
                                                   OnValidate=VAR
                                                                lvProjRec@1100485000 : Record 11072003;
                                                              BEGIN
                                                                IF "Project No. (TP-Cost)" = '' THEN
                                                                  EXIT;

                                                                TESTFIELD("Transport Cost for (Advice)", "Transport Cost for (Advice)"::Project);
                                                                lvProjRec.GET("Project No. (TP-Cost)");
                                                                lvProjRec.CheckProjectStatus(1);
                                                              END;

                                                   CaptionML=ENU=Project No. (Transport) }
    { 100 ;   ;Internet Order      ;Boolean       ;CaptionML=ENU=Internet Order }
    { 101 ;   ;CP Login ID         ;Code30        ;CaptionML=ENU=CP Login ID;
                                                   Description=Table relation was "Commerce Portal Login". CP is expired, should this field be deleted, figure out;
                                                   Editable=No }
    { 102 ;   ;Web Site Code       ;Code20        ;CaptionML=ENU=Web Site Code;
                                                   Description=Tablerelation was "Web Site".  CP is expired, should this field be deleted, figure out }
    { 103 ;   ;Web Site No. Series ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Web Site No. Series }
    { 110 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 115 ;   ;Created by          ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              lvLoginMgtCU@1100485000 : Codeunit 418;
                                                              UserCode@1100485001 : Code[50];
                                                            BEGIN
                                                              UserCode := "Created by";             //* Field not editable, may also not be changed via lookup,
                                                              lvLoginMgtCU.LookupUserID(UserCode);  //* for that reason send local.
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Created by;
                                                   Editable=No }
    { 116 ;   ;Created on          ;DateTime      ;CaptionML=ENU=Created on;
                                                   Editable=No }
    { 117 ;   ;Requested on        ;DateTime      ;CaptionML=ENU=Requested on;
                                                   Editable=No }
    { 118 ;   ;Requested by        ;Text50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Requested by }
    { 130 ;   ;Appointment Fixed Date;Boolean     ;CaptionML=ENU=Appointment Fixed Date }
    { 131 ;   ;Appointment Time    ;Time          ;CaptionML=ENU=Appointment Time }
    { 135 ;   ;Appointment Code    ;Code10        ;TableRelation="Logistic Appointment";
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Appointment Description");
                                                              END;

                                                   CaptionML=ENU=Appointment Code }
    { 136 ;   ;Appointment Description;Text50     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Logistic Appointment".Description WHERE (Code=FIELD(Appointment Code)));
                                                   CaptionML=ENU=Appointment Description;
                                                   Editable=No }
    { 139 ;   ;Appointment Comment ;Text80        ;CaptionML=ENU=Appointment Comment }
    { 200 ;   ;From Location Address;Text50       ;CaptionML=ENU=From Location Address }
    { 210 ;   ;From Location Address 2;Text50     ;CaptionML=ENU=From Location Address 2 }
    { 220 ;   ;From Location City  ;Text30        ;CaptionML=ENU=From Location City }
    { 230 ;   ;From Location Contact;Text50       ;CaptionML=ENU=From Location Contact }
    { 235 ;   ;From Location Contact Phone No;Text30;
                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=From Location Contact Phone No. }
    { 240 ;   ;From Location Post Code;Code20     ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                IF PostCodeRec.GET("From Location Post Code") THEN
                                                                  "From Location City" := PostCodeRec.City;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=From Location Post Code }
    { 250 ;   ;From Location Address Code;Code10  ;TableRelation="Plant Location Address"."Address Code" WHERE (Location=FIELD(From Location));
                                                   OnValidate=BEGIN
                                                                IF ("From Location Address Code" <> '') THEN BEGIN
                                                                  PlantLocRec.GET("From Location");
                                                                  LocAddressRec.GET("From Location", "From Location Address Code");
                                                                  "From Location Name" := PlantLocRec.Description;
                                                                  "From Location Name 2" := PlantLocRec."Description 2";
                                                                  "From Location Address" := LocAddressRec.Address;
                                                                  "From Location Address 2" := LocAddressRec."Address 2";
                                                                  "From Location Post Code" := LocAddressRec."Post Code";
                                                                  "From Location City" := LocAddressRec.City;
                                                                  "From Location Contact" := LocAddressRec.Contact;
                                                                  "From Location Contact Phone No" := LocAddressRec."Phone No.";
                                                                END ELSE BEGIN
                                                                  IF ("From Location Address Code" <> xRec."From Location Address Code") AND ("From Location" <> '') THEN BEGIN
                                                                    PlantLocRec.GET("From Location");
                                                                    "From Location Name" := PlantLocRec.Description;
                                                                    "From Location Name 2" := PlantLocRec."Description 2";
                                                                    "From Location Address" := PlantLocRec.Address;
                                                                    "From Location Address 2" := PlantLocRec."Address 2";
                                                                    "From Location Post Code" := PlantLocRec."Post Code";
                                                                    "From Location City" := PlantLocRec.City;
                                                                    "From Location Contact" := PlantLocRec.Contact;
                                                                    "From Location Contact Phone No" := PlantLocRec."Contact Phone No.";
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=From Location Address Code }
    { 260 ;   ;From Location Name  ;Text50        ;CaptionML=ENU=From Location Name }
    { 265 ;   ;From Location Name 2;Text50        ;CaptionML=ENU=From Location Name 2 }
    { 300 ;   ;To Location Address ;Text50        ;CaptionML=ENU=To Location Address }
    { 310 ;   ;To Location Address 2;Text50       ;CaptionML=ENU=To Location Address 2 }
    { 320 ;   ;To Location City    ;Text30        ;CaptionML=ENU=To Location City }
    { 330 ;   ;To Location Contact ;Text50        ;CaptionML=ENU=To Location Contact }
    { 335 ;   ;To Location Contact Phone No;Text30;ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=To Location Contact Phone No. }
    { 340 ;   ;To Location Post Code;Code20       ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                IF PostCodeRec.GET("To Location Post Code") THEN
                                                                  "To Location City" := PostCodeRec.City;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=To Location Post Code }
    { 350 ;   ;To Location Address Code;Code10    ;TableRelation="Plant Location Address"."Address Code" WHERE (Location=FIELD(To Location));
                                                   OnValidate=BEGIN
                                                                IF ("To Location Address Code" <> '') THEN BEGIN
                                                                  PlantLocRec.GET("To Location");
                                                                  LocAddressRec.GET("To Location", "To Location Address Code");
                                                                  "To Location Name" := PlantLocRec.Description;
                                                                  "To Location Name 2" := PlantLocRec."Description 2";
                                                                  "To Location Address" := LocAddressRec.Address;
                                                                  "To Location Address 2" := LocAddressRec."Address 2";
                                                                  "To Location Post Code" := LocAddressRec."Post Code";
                                                                  "To Location City" := LocAddressRec.City;
                                                                  "To Location Contact" := LocAddressRec.Contact;
                                                                  "To Location Contact Phone No" := LocAddressRec."Phone No.";
                                                                END ELSE BEGIN
                                                                  IF ("To Location Address Code" <> xRec."To Location Address Code") AND ("To Location" <> '') THEN BEGIN
                                                                    PlantLocRec.GET("To Location");
                                                                    "To Location Name" := PlantLocRec.Description;
                                                                    "To Location Name 2" := PlantLocRec."Description 2";
                                                                    "To Location Address" := PlantLocRec.Address;
                                                                    "To Location Address 2" := PlantLocRec."Address 2";
                                                                    "To Location Post Code" := PlantLocRec."Post Code";
                                                                    "To Location City" := PlantLocRec.City;
                                                                    "To Location Contact" := PlantLocRec.Contact;
                                                                    "To Location Contact Phone No" := PlantLocRec."Contact Phone No.";
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=To Location Address Code }
    { 360 ;   ;To Location Name    ;Text50        ;CaptionML=ENU=To Location Name }
    { 365 ;   ;To Location Name 2  ;Text50        ;CaptionML=ENU=To Location Name 2 }
    { 370 ;   ;Advice Order        ;Boolean       ;CaptionML=ENU=Advice Order }
    { 380 ;   ;Your Reference      ;Text35        ;CaptionML=ENU=Your Reference }
    { 538 ;   ;Collect Order       ;Boolean       ;CaptionML=ENU=Collect Order;
                                                   Description=Plant will be picked up or returned (brought back for a removal order). So no transport. }
    { 539 ;   ;Urgent              ;Boolean       ;CaptionML=ENU=Urgent }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Plant Order No.                          }
    {    ;From Location                            }
    {    ;To Location                              }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PlantSetupRec@1100485004 : Record 11012550;
      PostCodeRec@1100485003 : Record 225;
      PlantLocRec@1100485002 : Record 11012554;
      LocAddressRec@1100485001 : Record 11012590;
      NoSeriesMgt@1100485000 : Codeunit 396;
      DimMgt@1100525008 : Codeunit 408;
      DPA_Management@1100000999 : Codeunit 11012783;
      SkipModify@1100528400 : Boolean;

    PROCEDURE AssistEdit@2(IReqXRec@11012000 : Record 11020520) : Boolean;
    VAR
      lvReqRec@1100485000 : Record 11020520;
    BEGIN
      WITH lvReqRec DO BEGIN
        lvReqRec := Rec;
        PlantSetupRec.GET;
        PlantSetupRec.TESTFIELD("Plant Request Nos.");
        IF NoSeriesMgt.SelectSeries(PlantSetupRec."Plant Request Nos.",IReqXRec."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := lvReqRec;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE InitRecord@1100485002();
    BEGIN
      PlantSetupRec.GET;
      Status := Status::Open;
      Posted := FALSE;
      "Created by" := USERID;
      "Created on" := CURRENTDATETIME;
      "Requested by" := USERID;
      "Requested on" := CURRENTDATETIME;
      CLEAR("Posted on");
      "Plant Order No." := '';
      IF PlantSetupRec."Transport Orders" AND ("Transport Cost for (Advice)" = "Transport Cost for (Advice)"::" ") THEN
        "Transport Cost for (Advice)" := "Transport Cost for (Advice)"::Location;
      IF "Web Site No. Series"  <> '' THEN //M25336
        Status := Status::Requested
      ELSE BEGIN
        "Internet Order" := FALSE;
        "CP Login ID" := '';
        "Web Site Code" := '';
      END;

      xRec.INIT;
      CASE Type OF
        Type::Arrival:
          VALIDATE("From Location",PlantSetupRec.GetRentalDepot);
        Type::Removal:
          VALIDATE("To Location",PlantSetupRec.GetReturnDepot);
      END;
    END;

    PROCEDURE FillLocations@1();
    BEGIN
      IF NOT Posted THEN BEGIN
        PlantSetupRec.GET;
        CASE Type OF
          Type::Arrival:
            BEGIN
              VALIDATE("From Location",PlantSetupRec.GetRentalDepot);
              VALIDATE("To Location",'');
            END;
          Type::Removal:
            BEGIN
              VALIDATE("From Location",'');
              VALIDATE("To Location",PlantSetupRec.GetReturnDepot);
            END;
        END;
      END;
    END;

    PROCEDURE CheckBlock@4(LocNo@11012000 : Code[20]);
    BEGIN
      IF LocNo <> '' THEN BEGIN
        PlantLocRec.GET(LocNo);
        PlantLocRec.CheckBlock(0,TRUE,FALSE);
      END;
    END;

    PROCEDURE GetFromLocationName@1100485000() : Text[100];
    BEGIN
      CALCFIELDS("From Location Description");
      IF ("From Location" = '') AND ("From Location Name" <> '') THEN
        EXIT("From Location Name");

      EXIT("From Location Description");
    END;

    PROCEDURE GetToLocationName@1100485001() : Text[100];
    BEGIN
      CALCFIELDS("To Location Description");
      IF ("To Location" = '') AND ("To Location Name" <> '') THEN
        EXIT("To Location Name");

      EXIT("To Location Description");
    END;

    PROCEDURE DeleteOrderContact@1100485003(IFromTo@1100485001 : Code[4]);
    VAR
      lvOrderContRec@1100485000 : Record 11012536;
    BEGIN
      IF "No." = '' THEN
        EXIT;

      CASE IFromTo OF
        'FROM':
          lvOrderContRec.SETRANGE(Type, lvOrderContRec.Type::"Req From");
        'TO':
          lvOrderContRec.SETRANGE(Type, lvOrderContRec.Type::"Req To");
        ELSE
          EXIT;
      END;
      lvOrderContRec.SETRANGE("Order No.", "No.");
      lvOrderContRec.DELETEALL;
    END;

    LOCAL PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      IF NOT SkipModify THEN
        MODIFY;
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_SetDefaultDpmtFromNoSeries@1100000995(xRecRef@1100525002 : RecordRef);
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      xRecRef.SETTABLE(xRec);
      DPA_Management.SetDepartmentCodeNoSeries(
        TABLENAME,
        "Department Code",
        "No. Series",
        xRec."No. Series" );
    END;

    LOCAL PROCEDURE DPA_OnInsert@1100000991();
    VAR
      Dimension1Code@1100528400 : Code[20];
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      Dimension1Code :=
        DPA_Management.GetNoSeriesDepartmentCode(
          "No. Series",
          xRec."No. Series",
          DATABASE::"Plant Request");
      IF Dimension1Code <> '' THEN
        "Department Code" := Dimension1Code;

      IF "Department Code" <> '' THEN BEGIN
        SkipModify := TRUE;
        VALIDATE("Department Code");
        SkipModify := FALSE;
      END;
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11020520) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11020520');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Plant Request", "Department Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Department Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Department Code");
    END;

    PROCEDURE CommentSheet@1100529004(EditableMode@1100529002 : Boolean);
    VAR
      PlantCommentLine@1100529000 : Record 11072666;
    BEGIN
      //DP00183
      TESTFIELD("No.");
      PlantCommentLine.EditCommentLines(DATABASE::"Plant Request", "No.", '', 0, EditableMode);  //C005461.c
    END;

    PROCEDURE HasCommentLines@1100529002() : Boolean;
    VAR
      PlantCommentLine@1100529000 : Record 11072666;
    BEGIN
      //DP00183
      EXIT(PlantCommentLine.HasCommentLines(DATABASE::"Plant Request","No.", '', 0));  //C005461.c
    END;

    PROCEDURE DeleteCommentLines@1100529003();
    VAR
      PlantCommentLine@1100529000 : Record 11072666;
    BEGIN
      //DP00183
      PlantCommentLine.DeleteComments(DATABASE::"Plant Request", "No.", '', 0);  //C005461.c
    END;

    BEGIN
    END.
  }
}

