OBJECT Table 11020550 Transp. Ride Plant Order Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Ride No.");
               TESTFIELD("Plant Order No.");
             END;

    OnDelete=VAR
               lvTransOrderNo@1100525000 : Code[20];
             BEGIN
               IF CheckPlantOrderOnRideTrOrders("Ride No.", "Plant Order No.", lvTransOrderNo) THEN
                 ERROR(Text005, "Plant Order No.", lvTransOrderNo, "Ride No.");
             END;

    OnRename=BEGIN
               FIELDERROR("Plant Order No.", Text004);
             END;

    CaptionML=ENU=Transport Ride Plant Order Line;
    LookupPageID=Page11020515;
  }
  FIELDS
  {
    { 10  ;   ;Ride No.            ;Code20        ;TableRelation="Plant Transport Ride";
                                                   CaptionML=ENU=Ride No.;
                                                   NotBlank=No }
    { 30  ;   ;Plant Order No.     ;Code20        ;TableRelation="Plant Order" WHERE (Type=FILTER(<>Negative Inventory Correction));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Transfer Date", "From Location", "To Location" ,"Transport Cost for (Advice)", "Status (PO)");
                                                                CALCFIELDS("Appointment Fixed Date", "Appointment Time", "Appointment Code", "Appointment Comment");
                                                                CALCFIELDS("Appointment Description");

                                                                IF ("Plant Order No." = '') OR ("Ride No." = '') THEN
                                                                  EXIT;

                                                                GetTransRideHeader();
                                                                GetPlantOrderHeader();

                                                                PlantOrderRec.TESTFIELD("Collect Order", FALSE);
                                                                PlantOrderRec.TESTFIELD("Rental Free Order Type", PlantOrderRec."Rental Free Order Type"::" ");
                                                                IF ("Plant Order No." <> xRec."Plant Order No.") THEN BEGIN
                                                                  IF PlantOrderRec.Posted THEN
                                                                    MESSAGE(Text001, "Plant Order No.");
                                                                  IF ("Transfer Date" <> TransRideRec.Date) THEN
                                                                    MESSAGE(Text003, "Transfer Date", TransRideRec.Date, ABS("Transfer Date" - TransRideRec.Date));
                                                                  IF (TransRideRec."Shipping Agent" <> '') AND (PlantOrderRec."Shipping Agent" <> '') AND
                                                                     (TransRideRec."Shipping Agent" <> PlantOrderRec."Shipping Agent")
                                                                  THEN
                                                                    MESSAGE(Text006, PlantOrderRec."Shipping Agent", TransRideRec."Shipping Agent");

                                                                  CheckPlantOrderOnOtherRides();
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Plant Order No.;
                                                   NotBlank=Yes }
    { 31  ;   ;Transfer Date       ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Order"."Transfer Date" WHERE (No.=FIELD(Plant Order No.)));
                                                   CaptionML=ENU=Transfer Date;
                                                   Editable=No }
    { 32  ;   ;From Location       ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Order"."From Location" WHERE (No.=FIELD(Plant Order No.)));
                                                   CaptionML=ENU=From Location;
                                                   Editable=No }
    { 33  ;   ;To Location         ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Order"."To Location" WHERE (No.=FIELD(Plant Order No.)));
                                                   CaptionML=ENU=To Location;
                                                   Editable=No }
    { 34  ;   ;Transport Cost for (Advice);Option ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Order"."Transport Cost for (Advice)" WHERE (No.=FIELD(Plant Order No.)));
                                                   CaptionML=ENU=Transport Cost for (Advice);
                                                   OptionCaptionML=ENU=" ,Internal,Project,Location,From Location,To Location";
                                                   OptionString=[ ,Internal,Project,Location,From Location,To Location];
                                                   Editable=No }
    { 35  ;   ;Status (PO)         ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Order".Status WHERE (No.=FIELD(Plant Order No.)));
                                                   CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=Open,Printed,Released,Posted;
                                                   OptionString=Open,Printed,Released,Posted;
                                                   Description=Of the Plant Order;
                                                   Editable=No }
    { 36  ;   ;Order Picking Status;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Order"."Order Picking Status" WHERE (No.=FIELD(Plant Order No.)));
                                                   CaptionML=ENU=Order Picking Status;
                                                   OptionCaptionML=ENU=Open,Plan,Planned,In Process,Ready;
                                                   OptionString=Open,To Plan,Planned,In Process,Ready;
                                                   Description=PO;
                                                   Editable=No }
    { 50  ;   ;Appointment Fixed Date;Boolean     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Order"."Appointment Fixed Date" WHERE (No.=FIELD(Plant Order No.)));
                                                   CaptionML=ENU=Appointment Fixed Date;
                                                   Editable=No }
    { 51  ;   ;Appointment Time    ;Time          ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Order"."Appointment Time" WHERE (No.=FIELD(Plant Order No.)));
                                                   CaptionML=ENU=Appointment Time;
                                                   Editable=No }
    { 52  ;   ;Appointment Code    ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Order"."Appointment Code" WHERE (No.=FIELD(Plant Order No.)));
                                                   TableRelation="Logistic Appointment";
                                                   CaptionML=ENU=Appointment Code;
                                                   Editable=No }
    { 53  ;   ;Appointment Description;Text50     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Logistic Appointment".Description WHERE (Code=FIELD(Appointment Code)));
                                                   CaptionML=ENU=Appointment Description;
                                                   Description=Flowfield from flowfield!;
                                                   Editable=No }
    { 54  ;   ;Appointment Comment ;Text80        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Order"."Appointment Comment" WHERE (No.=FIELD(Plant Order No.)));
                                                   CaptionML=ENU=Appointment Comment;
                                                   Editable=No }
    { 60  ;   ;Shipment Method Code;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Order"."Shipment Method Code" WHERE (No.=FIELD(Plant Order No.)));
                                                   TableRelation="Shipment Method";
                                                   CaptionML=ENU=Shipment Method Code;
                                                   Editable=No }
    { 70  ;   ;Type                ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Order".Type WHERE (No.=FIELD(Plant Order No.)));
                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Arrival,Removal,Other Transfers;
                                                   OptionString=Arrival,Removal,Other Transfers;
                                                   Description=PO;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Ride No.,Plant Order No.                ;Clustered=Yes }
    {    ;Plant Order No.,Ride No.                 }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      TransRideRec@1100485006 : Record 11020517;
      PlantOrderRec@1100485002 : Record 11012556;
      HoldWeightPlantOrderTotWeight@1100485007 : Decimal;
      HoldWeightPlantOrderNo@1100485008 : Code[20];
      Text000@1100485010 : TextConst 'ENU=Note: Plant Order ''%1'' is already present on Transport Ride(s) ''%2''.';
      Text001@1100485011 : TextConst 'ENU=Note: Plant Order ''%1'' is already posted.';
      Text003@1100485013 : TextConst 'ENU=Note: Transfer Date ''%1'' is not equal to the Transport Date ''%2''. The difference is%3 day(s).';
      Text004@1100485003 : TextConst 'ENU=rename not allowed, first delete and then insert a new line';
      Text005@1100525000 : TextConst 'ENU=Delete not allowed. Plant Orderr ''%1'' is linked to Transport Order ''%2'' of the Ride (%3).';
      Text006@1100525001 : TextConst 'ENU=Note: Shipping Agent ''%1'' is not equal to that of the Transport Ride ''%2''.';

    PROCEDURE GetTransRideHeader@5();
    BEGIN
      IF ("Ride No." <> '') THEN
        TransRideRec.GET("Ride No.");
    END;

    PROCEDURE GetPlantOrderHeader@1100485003();
    BEGIN
      IF ("Plant Order No." <> '') THEN
        PlantOrderRec.GET("Plant Order No.");
    END;

    PROCEDURE CheckPlantOrderOnRideTrOrders@1100525001(RideNo@1100525002 : Code[20];PlantOrderNo@1100525003 : Code[20];VAR TransOrderNo@1100525004 : Code[20]) : Boolean;
    VAR
      lvTransRideLineRec@1100525000 : Record 11020518;
      lvTransPlantOrderRec@1100525001 : Record 11020509;
    BEGIN
      TransOrderNo := '';
      lvTransRideLineRec.SETRANGE("Ride No.", RideNo);
      IF lvTransRideLineRec.FINDSET THEN BEGIN
        REPEAT
          IF lvTransPlantOrderRec.GET(lvTransRideLineRec."Transport Order No.", PlantOrderNo) THEN BEGIN
            TransOrderNo := lvTransRideLineRec."Transport Order No.";
            EXIT(TRUE);
          END;
        UNTIL lvTransRideLineRec.NEXT = 0;
      END;
      EXIT(FALSE);
    END;

    PROCEDURE CheckPlantOrderOnOtherRides@1100485004();
    VAR
      lvRidePlantOrderRec@1100485000 : Record 11020550;
      lvSep@1100485003 : Text[2];
      lvOrderTxt@1100485004 : Text[1024];
    BEGIN
      lvRidePlantOrderRec.SETCURRENTKEY("Plant Order No.");
      lvRidePlantOrderRec.SETRANGE("Plant Order No.", "Plant Order No.");
      lvRidePlantOrderRec.SETFILTER("Ride No.", '<>%1', "Ride No.");
      IF lvRidePlantOrderRec.FINDSET THEN BEGIN
        REPEAT
          lvOrderTxt := lvOrderTxt + lvSep + lvRidePlantOrderRec."Ride No.";
          lvSep := ', ';
        UNTIL lvRidePlantOrderRec.NEXT = 0;
      END;

      IF lvOrderTxt <> '' THEN
        MESSAGE(Text000, "Plant Order No.", lvOrderTxt);
    END;

    PROCEDURE GetTotalWeightPlantOrder@1100485001() : Decimal;
    VAR
      lvPlantOrderLine@1100485000 : Record 11012557;
    BEGIN
      IF "Plant Order No." = '' THEN
        EXIT(0);

      IF "Plant Order No." <> HoldWeightPlantOrderNo THEN BEGIN
        lvPlantOrderLine."Plant Order No." := "Plant Order No.";
        HoldWeightPlantOrderTotWeight := lvPlantOrderLine.PlantOrderTotalWeight(FALSE);
        HoldWeightPlantOrderNo := "Plant Order No.";
      END;

      EXIT(HoldWeightPlantOrderTotWeight);
    END;

    PROCEDURE TransportRideWeights@1100525000(IRideNo@1100525000 : Code[20];VAR WeightArrival@1100525003 : Decimal;VAR WeightRemoval@1100525004 : Decimal;VAR WeightOtherTr@1100525005 : Decimal);
    VAR
      lvRidePlantOrderLineRec@1100525002 : Record 11020550;
      lvWeight@1100525001 : Decimal;
    BEGIN
      WeightArrival := 0;
      WeightRemoval := 0;
      WeightOtherTr := 0;
      IF IRideNo = '' THEN
        EXIT;

      lvRidePlantOrderLineRec.SETRANGE("Ride No.", IRideNo);
      IF NOT lvRidePlantOrderLineRec.FINDSET THEN
        EXIT;

      REPEAT
        lvRidePlantOrderLineRec.CALCFIELDS(Type);  //* Type PO
        lvWeight := lvRidePlantOrderLineRec.GetTotalWeightPlantOrder();
        CASE lvRidePlantOrderLineRec.Type OF
          lvRidePlantOrderLineRec.Type::Arrival:
            WeightArrival := WeightArrival + lvWeight;
          lvRidePlantOrderLineRec.Type::Removal:
            WeightRemoval := WeightRemoval + lvWeight;
          ELSE
            WeightOtherTr := WeightOtherTr + lvWeight;
        END;
      UNTIL lvRidePlantOrderLineRec.NEXT = 0;
    END;

    PROCEDURE OnLookupPlantOrder@1100485000(ILookupSpecial@1100485001 : Boolean) : Boolean;
    VAR
      lvPlantOrderRec@1100525000 : Record 11012556;
      RidePOLineRec@1100530002 : Record 11020550;
      TmpPlantOrderRec@1100530001 : TEMPORARY Record 11012556;
      PlantOrderList@1100530000 : Page 11012563;
    BEGIN
      TransRideRec.GET("Ride No.");
      IF TransRideRec.Posted THEN BEGIN
        lvPlantOrderRec.SETRANGE(Posted, TRUE);
        lvPlantOrderRec."No." := "Plant Order No.";
        PAGE.RUNMODAL(0, lvPlantOrderRec);
      END ELSE BEGIN
        lvPlantOrderRec.SETCURRENTKEY("Transfer Date");
        IF ILookupSpecial THEN BEGIN
          lvPlantOrderRec.SETRANGE("Ride No.", '');
          lvPlantOrderRec.SETRANGE("Transport Order No.", '');
        END;
        IF TransRideRec."Shipping Agent" <> '' THEN
          lvPlantOrderRec.SETFILTER("Shipping Agent", '%1|%2', TransRideRec."Shipping Agent", '');
        lvPlantOrderRec.SETRANGE("Collect Order", FALSE);
        lvPlantOrderRec.SETRANGE("Rental Free Order Type", PlantOrderRec."Rental Free Order Type"::" ");
        lvPlantOrderRec.SETRANGE(Posted, FALSE);
        IF ("Plant Order No." = '') THEN
          lvPlantOrderRec."Transfer Date" := TransRideRec.Date
        ELSE BEGIN
          IF NOT lvPlantOrderRec.GET("Plant Order No.") THEN
            lvPlantOrderRec."Transfer Date" := TransRideRec.Date;
        END;
        IF lvPlantOrderRec.Status >= lvPlantOrderRec.Status::Released THEN
          PAGE.RUNMODAL(0, lvPlantOrderRec)
        ELSE BEGIN
          //*19533.so
          //IF PAGE.RUNMODAL(0, lvPlantOrderRec) = ACTION::LookupOK THEN BEGIN
          //  CurrFieldNo := FIELDNO("Plant Order No.");
          //  VALIDATE("Plant Order No.", lvPlantOrderRec."No.");
          //END;
          //*19533.sn
          PlantOrderList.SETTABLEVIEW(lvPlantOrderRec);
          PlantOrderList.SETRECORD(lvPlantOrderRec);
          PlantOrderList.SetCopyAllowed();
          PlantOrderList.LOOKUPMODE(TRUE);
          IF PlantOrderList.RUNMODAL = ACTION::LookupOK THEN BEGIN
            PlantOrderList.GETRECORD(lvPlantOrderRec);
            VALIDATE("Plant Order No.", lvPlantOrderRec."No.");
          END ELSE BEGIN
            IF PlantOrderList.GetMultiCopyRec(TmpPlantOrderRec) THEN BEGIN
              IF TmpPlantOrderRec.FINDSET THEN BEGIN
                REPEAT
                  RidePOLineRec.INIT;
                  RidePOLineRec."Ride No." := "Ride No.";
                  RidePOLineRec.VALIDATE("Plant Order No.", TmpPlantOrderRec."No.");
                  RidePOLineRec.INSERT(TRUE);
                UNTIL TmpPlantOrderRec.NEXT = 0;
                EXIT(TRUE);
              END;
            END;
          END;
        END;
      END;
    END;

    PROCEDURE GetTransOrderOfRidePlantOrder@1100525002(RideNo@1100525000 : Code[20];PlantOrderNo@1100525001 : Code[20];SkipTransOrderNoOnDelete@1100525004 : Code[20]) : Code[20];
    VAR
      lvRideTORec@1100525002 : Record 11020518;
      lvTransOrderPORec@1100525003 : Record 11020509;
    BEGIN
      IF (RideNo = '') OR (PlantOrderNo = '') THEN
        EXIT('');
      lvRideTORec.SETRANGE("Ride No.", RideNo);
      lvRideTORec.SETFILTER("Transport Order No.", '<>%1', '');
      IF SkipTransOrderNoOnDelete <> '' THEN BEGIN  //* In OnDelete of a Ride TO-line the record is still there, so skip
        lvRideTORec.FILTERGROUP(9);
        lvRideTORec.SETFILTER("Transport Order No.", '<>%1', SkipTransOrderNoOnDelete);
        lvRideTORec.FILTERGROUP(0);
      END;
      IF lvRideTORec.FINDSET THEN BEGIN
        REPEAT
          IF lvTransOrderPORec.GET(lvRideTORec."Transport Order No.", PlantOrderNo) THEN
            EXIT(lvRideTORec."Transport Order No.");
        UNTIL  lvRideTORec.NEXT = 0;
      END;
      EXIT('');
    END;

    PROCEDURE PlantOrderCommentSheet@1100529004(EditableMode@1100529002 : Boolean);
    VAR
      PlantOrder@1100529003 : Record 11012556;
    BEGIN
      //DP00183
      IF "Plant Order No." <> '' THEN
        IF PlantOrder.GET("Plant Order No.") THEN BEGIN
          PlantOrder.CommentSheet(EditableMode);
      END;
    END;

    PROCEDURE PlantOrderHasCommentLines@1100529002() : Boolean;
    VAR
      PlantOrder@1100529002 : Record 11012556;
    BEGIN
      //DP00183
      IF "Plant Order No." <> '' THEN
        IF PlantOrder.GET("Plant Order No.") THEN BEGIN
          EXIT(PlantOrder.HasCommentLines());
      END;
    END;

    BEGIN
    {
      Copied from T11020509 (Plantorders by transportorder)
    }
    END.
  }
}

