OBJECT Table 11020552 Plant Rental Free Order
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    DataCaptionFields=No.;
    OnInsert=BEGIN
               PlantSetupRec.GET;
               PlantSetupRec.TESTFIELD("Rate Codes");
               IF "No." = '' THEN BEGIN
                 PlantSetupRec.TESTFIELD("Rental Free Order Nos.");
                 NoSeriesMgt.InitSeries(PlantSetupRec."Rental Free Order Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               Posted := FALSE;
             END;

    OnModify=BEGIN
               TESTFIELD(Posted, FALSE);
             END;

    OnDelete=BEGIN
               OrderLineRec.RESET;
               OrderLineRec.SETRANGE("Rental Free Order No.","No.");
               OrderLineRec.DELETEALL;
             END;

    OnRename=BEGIN
               TESTFIELD(Posted, FALSE);
             END;

    CaptionML=ENU=Plant Rent Free Order;
    PasteIsValid=No;
    LookupPageID=Page11071769;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                PlantSetupRec.GET;
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  NoSeriesMgt.TestManual(PlantSetupRec."Rental Free Order Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 20  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF Type <> xRec.Type THEN BEGIN
                                                                  IF CheckOrderLinesPresent() THEN
                                                                    ERROR(Text003, FIELDCAPTION(Type));
                                                                END;

                                                                CASE Type OF
                                                                  Type::RentalFree:
                                                                    "Ending Date Rental Free" := 0D;
                                                                  Type::EndRentalFree:
                                                                    "Starting Date Rental Free" := 0D;
                                                                  Type::Modify:  //C008369
                                                                    "Ending Date Rental Free" := 0D;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Rental Free,End Rental Free,Period Rental Free,Rental Modification,Period Rental Modification;
                                                   OptionString=RentalFree,EndRentalFree,PeriodRentalFree,Modify,PeriodModify }
    { 30  ;   ;Plant Location      ;Code20        ;TableRelation="Plant Location".Code WHERE (Depot=CONST(No));
                                                   OnValidate=BEGIN
                                                                IF "Plant Location" <> xRec."Plant Location" THEN BEGIN
                                                                  IF CheckOrderLinesPresent() THEN
                                                                    ERROR(Text003, FIELDCAPTION("Plant Location"));
                                                                END;

                                                                IF "Plant Location" <> '' THEN
                                                                  CheckBlock("Plant Location",FALSE);

                                                                CALCFIELDS("Location Description");
                                                              END;

                                                   CaptionML=ENU=Plant Location }
    { 40  ;   ;Location Description;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Location".Description WHERE (Code=FIELD(Plant Location)));
                                                   CaptionML=ENU=Location Description;
                                                   Editable=No }
    { 50  ;   ;Starting Date Rental Free;Date     ;OnValidate=BEGIN
                                                                IF "Starting Date Rental Free" <> 0D THEN BEGIN
                                                                  IF NOT (Type IN [Type::RentalFree, Type::PeriodRentalFree, Type::Modify, Type::PeriodModify]) THEN  //C008369.c
                                                                    FIELDERROR(Type);
                                                                  CheckEndingDate();
                                                                  CheckOrderDateAllowed(FIELDNO("Starting Date Rental Free"));
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Starting Date }
    { 60  ;   ;Ending Date Rental Free;Date       ;OnValidate=BEGIN
                                                                IF "Ending Date Rental Free" <> 0D THEN BEGIN
                                                                  IF NOT (Type IN [Type::EndRentalFree, Type::PeriodRentalFree, Type::PeriodModify]) THEN  //C008369.c
                                                                    FIELDERROR(Type);
                                                                  CheckEndingDate();
                                                                  CheckOrderDateAllowed(FIELDNO("Ending Date Rental Free"));
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Ending Date }
    { 100 ;   ;Posted              ;Boolean       ;CaptionML=ENU=Posted;
                                                   Editable=No }
    { 105 ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date;
                                                   Editable=No }
    { 110 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 120 ;   ;Plant Order No.     ;Code20        ;TableRelation="Plant Order" WHERE (Rental Free Order Type=FILTER(<>' '));
                                                   CaptionML=ENU=Plant Order No.;
                                                   Editable=No }
    { 125 ;   ;Plant Order No. 2   ;Code20        ;TableRelation="Plant Order" WHERE (Rental Free Order Type=FILTER(<>' '));
                                                   CaptionML=ENU=Plant Order No. 2;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Plant Location                           }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PlantSetupRec@11012000 : Record 11012550;
      OrderRec@11012001 : Record 11020552;
      OrderLineRec@1100525002 : Record 11020553;
      PlantLocRec@11012005 : Record 11012554;
      NoSeriesMgt@11012008 : Codeunit 396;
      Text001@1100525000 : TextConst 'ENU=may not be less than %1';
      Text002@1100525001 : TextConst 'ENU=must be within the range %1..%2';
      Text003@1100525003 : TextConst 'ENU=Modify ''%1'' not allowed, there are already order lines present.';
      Text004@1100525004 : TextConst 'ENU=Insert all plant (%1) present on %2?';
      Text005@1100525005 : TextConst 'ENU=rental';
      Text006@1100525006 : TextConst 'ENU=rental free';
      Text007@1100409001 : TextConst 'ENU=%1 ''''%2'' has no %3.';
      Text008@1100409000 : TextConst 'ENU=Do you want to split %1 ''%2'' (%3)?';

    PROCEDURE AssistEdit@2(OldOrderRec@11012000 : Record 11020552) : Boolean;
    BEGIN
      WITH OrderRec DO BEGIN
        OrderRec := Rec;
        PlantSetupRec.GET;
        PlantSetupRec.TESTFIELD("Rental Free Order Nos.");
        IF NoSeriesMgt.SelectSeries(PlantSetupRec."Rental Free Order Nos.",OldOrderRec."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := OrderRec;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE CheckBlock@4(PlantLoc@11012000 : Code[20];Transaction@1210190000 : Boolean);
    BEGIN
      IF PlantLoc <> '' THEN BEGIN
        PlantLocRec.GET(PlantLoc);
        PlantLocRec.CheckBlock(1,TRUE,Transaction);
      END;
    END;

    PROCEDURE CheckEndingDate@1100525004();
    BEGIN
      //IF (Type <> Type::PeriodRentalFree) OR ("Ending Date Rental Free" = 0D) THEN  //C008369.o
      IF (NOT (Type IN [Type::PeriodRentalFree, Type::PeriodModify])) OR ("Ending Date Rental Free" = 0D) THEN  //C008369.n
        EXIT;

      IF ("Ending Date Rental Free" < "Starting Date Rental Free") THEN
        FIELDERROR("Ending Date Rental Free", STRSUBSTNO(Text001, FIELDCAPTION("Starting Date Rental Free")));
    END;

    PROCEDURE CheckOrderDateAllowed@1100525000(FieldNumber@1100525004 : Integer);
    VAR
      OrderDate@1100525003 : Date;
      LowerLimitDate@1100525000 : Date;
      UpperLimitDate@1100525001 : Date;
    BEGIN
      CASE FieldNumber OF
        FIELDNO("Starting Date Rental Free"):
          OrderDate := "Starting Date Rental Free";
        FIELDNO("Ending Date Rental Free"):
          OrderDate := "Ending Date Rental Free";
      END;
      IF OrderDate = 0D THEN
        EXIT;

      PlantSetupRec.GET;
      LowerLimitDate := PlantSetupRec.GetOrderDateLowerLimit(PlantSetupRec);
      UpperLimitDate := PlantSetupRec.GetOrderDateUpperLimit(PlantSetupRec);
      IF (OrderDate < LowerLimitDate) OR (OrderDate > UpperLimitDate) THEN BEGIN
        CASE FieldNumber OF
          FIELDNO("Starting Date Rental Free"):
            FIELDERROR("Starting Date Rental Free", STRSUBSTNO(Text002, LowerLimitDate, UpperLimitDate));
          FIELDNO("Ending Date Rental Free"):
            FIELDERROR("Ending Date Rental Free", STRSUBSTNO(Text002, LowerLimitDate, UpperLimitDate));
        END;
      END;
    END;

    PROCEDURE CheckOrderLinesPresent@1100525001() : Boolean;
    BEGIN
      OrderLineRec.RESET;
      OrderLineRec.SETRANGE("Rental Free Order No.","No.");
      EXIT(NOT OrderLineRec.ISEMPTY);
    END;

    PROCEDURE InsertPlantOnLocation@1100525002(OrderNo@1100525002 : Code[20]);
    VAR
      OrderLineRec@1100525000 : Record 11020553;
      OrderLineRec2@1100525006 : Record 11020553;
      PlantInventRec@1100525003 : Record 11012555;
      PlantRateCodeRec@1100525004 : Record 11020502;
      OrderDate@1100525001 : Date;
      NextLineNo@1100525005 : Integer;
      RentalText@1100525009 : Text[30];
    BEGIN
      IF OrderNo = '' THEN
        EXIT;

      OrderRec.GET(OrderNo);
      OrderRec.TESTFIELD(Posted,FALSE);
      OrderRec.TESTFIELD("Plant Location");
      IF OrderRec.Type <> OrderRec.Type::EndRentalFree THEN BEGIN
        OrderRec.TESTFIELD("Starting Date Rental Free");
        OrderDate := OrderRec."Starting Date Rental Free";
        RentalText := Text005;
      END ELSE BEGIN
        OrderRec.TESTFIELD("Ending Date Rental Free");
        OrderDate := OrderRec."Ending Date Rental Free";
        RentalText := Text006;
      END;

      IF NOT CONFIRM(Text004, TRUE, RentalText, OrderDate) THEN
        EXIT;

      OrderLineRec.RESET;
      OrderLineRec.SETRANGE("Rental Free Order No.", OrderNo);
      OrderLineRec.DELETEALL;
      NextLineNo := 10000;

      PlantInventRec.RESET;
      PlantInventRec.SETRANGE(Removed, FALSE);
      PlantInventRec.SETRANGE(Location, OrderRec."Plant Location");
      PlantInventRec.SETRANGE(Sold, FALSE);
      PlantInventRec.SETFILTER("Present from", '<=%1', OrderDate);
      PlantInventRec.SETFILTER(Quantity, '>%1', 0);
      IF PlantInventRec.FINDSET(FALSE,FALSE) THEN BEGIN
        REPEAT
          IF PlantInventRec."Rate Code" = '' THEN
            PlantRateCodeRec.Percentage := 100
          ELSE BEGIN
            IF NOT PlantRateCodeRec.ReadPlantRateCode(OrderRec."Plant Location", PlantInventRec."Rate Code", '') THEN
              PlantRateCodeRec.Percentage := 100;
          END;
          IF ((OrderRec.Type <> OrderRec.Type::EndRentalFree) AND (PlantRateCodeRec.Percentage <> 0)) OR
             ((OrderRec.Type = OrderRec.Type::EndRentalFree) AND (PlantRateCodeRec.Percentage = 0))
          THEN BEGIN
            PlantInventRec.CALCFIELDS(Element);  //C008414
            OrderLineRec2.SETRANGE("Rental Free Order No.", OrderNo);
            OrderLineRec2.SETRANGE("Plant Type", PlantInventRec."Plant Type");
            OrderLineRec2.SETRANGE("Plant No.", PlantInventRec."Plant No.");
            OrderLineRec2.SETRANGE("From Rate Code", PlantInventRec."Rate Code");
            OrderLineRec2.SETRANGE(Element, PlantInventRec.Element);  //C008414
            IF OrderLineRec2.FINDFIRST THEN BEGIN
              OrderLineRec.GET(OrderNo, OrderLineRec2."Line No.");
              OrderLineRec.Quantity := OrderLineRec.Quantity + PlantInventRec.Quantity;
              OrderLineRec.MODIFY;
            END ELSE BEGIN
              OrderLineRec.INIT;
              OrderLineRec."Rental Free Order No." := OrderNo;
              OrderLineRec."Line No." := NextLineNo;
              OrderLineRec."Plant Type" := PlantInventRec."Plant Type";
              OrderLineRec."Plant No." := PlantInventRec."Plant No.";
              OrderLineRec.GetPlantDescription;
              OrderLineRec."From Rate Code" := PlantInventRec."Rate Code";
              OrderLineRec.FillDefaultToRateCode();  //* Fill "To Rate Code"
              OrderLineRec2.Element := PlantInventRec.Element;  //C008414
              OrderLineRec.Quantity := PlantInventRec.Quantity;
              OrderLineRec.INSERT;
              NextLineNo := NextLineNo + 10000;
            END;
          END;
        UNTIL PlantInventRec.NEXT = 0;
      END;
    END;

    PROCEDURE InsertPlantSelectionOnLocation@1100529000(OrderNo@1100525000 : Code[20]);
    VAR
      RentalFreeOrder@1100529002 : Record 11020552;
      OrderLine@1100529004 : Record 11020553;
      PlantInvent@1100529001 : Record 11012555;
      PlantRateCode@1100529006 : Record 11020502;
      TmpPlantInvent@1100525002 : TEMPORARY Record 11012555;
      TmpElement@1100525001 : TEMPORARY Record 11012060;
      PlantInventPage@1100529003 : Page 11012559;
      OrderDate@1100529000 : Date;
      NextLineNo@1100529005 : Integer;
    BEGIN
      //DP00241 (26716)
      IF OrderNo = '' THEN
        EXIT;

      RentalFreeOrder.GET(OrderNo);
      RentalFreeOrder.TESTFIELD(Posted,FALSE);
      RentalFreeOrder.TESTFIELD("Plant Location");
      IF RentalFreeOrder.Type <> RentalFreeOrder.Type::EndRentalFree THEN BEGIN
        RentalFreeOrder.TESTFIELD("Starting Date Rental Free");
        OrderDate := RentalFreeOrder."Starting Date Rental Free";
      END ELSE BEGIN
        RentalFreeOrder.TESTFIELD("Ending Date Rental Free");
        OrderDate := RentalFreeOrder."Ending Date Rental Free";
      END;

      PlantInvent.RESET;
      PlantInvent.FILTERGROUP(9);
      PlantInvent.SETRANGE(Removed, FALSE);
      PlantInvent.SETRANGE(Location, RentalFreeOrder."Plant Location");
      PlantInvent.SETRANGE(Sold, FALSE);
      PlantInvent.SETFILTER("Present from", '<=%1', OrderDate);
      PlantInvent.SETFILTER("Date Filter", '<=%1', OrderDate);
      PlantInvent.SETFILTER(Quantity, '>%1', 0);
      PlantInvent.SETFILTER("Quantity Filter", '>%1', 0);
      OrderLine."Rental Free Order No." := OrderNo;
      PlantInvent.SETFILTER("Rate Code", OrderLine.FillFromRateCodeFilter());
      PlantInvent.COPYFILTER("Rate Code", PlantInvent."Rate Code Filter");
      PlantInvent.FILTERGROUP(0);
      PlantInventPage.SetDetailSelection(3);  //3=Plant-RateCode Level
      PlantInventPage.SetMultiSelection(); //Then Detail Level not editable in form, so in returned in the level that is set
      PlantInventPage.SETTABLEVIEW(PlantInvent);
      PlantInventPage.LOOKUPMODE(TRUE);
      IF PlantInventPage.RUNMODAL <> ACTION::LookupOK THEN
        EXIT;
      IF NOT PlantInventPage.GetMarkedRecords(TmpPlantInvent) THEN //* In tmprec compressed quantity is returned
        EXIT;

      TmpPlantInvent.RESET;
      IF TmpPlantInvent.FINDSET THEN BEGIN
        OrderLine.RESET;
        OrderLine.SETRANGE("Rental Free Order No.", OrderNo);
        IF OrderLine.FINDLAST THEN
          NextLineNo := OrderLine."Line No." + 10000
        ELSE
          NextLineNo := 10000;
        REPEAT
          IF TmpPlantInvent."Rate Code" = '' THEN
            PlantRateCode.Percentage := 100
          ELSE BEGIN
            IF NOT PlantRateCode.ReadPlantRateCode(RentalFreeOrder."Plant Location", TmpPlantInvent."Rate Code", '') THEN
              PlantRateCode.Percentage := 100;
          END;
          IF ((RentalFreeOrder.Type <> RentalFreeOrder.Type::EndRentalFree) AND (PlantRateCode.Percentage <> 0)) OR
             ((RentalFreeOrder.Type = RentalFreeOrder.Type::EndRentalFree) AND (PlantRateCode.Percentage = 0))
          THEN BEGIN
            TmpElement.RESET;  //C008414
            TmpElement.DELETEALL;  //C008414
            TmpPlantInvent.CALCFIELDS(Bulk);
            OrderLine.RESET;
            OrderLine.SETRANGE("Rental Free Order No.", OrderNo);
            OrderLine.SETRANGE("Plant Type",TmpPlantInvent."Plant Type");
            OrderLine.SETRANGE("Plant No.",TmpPlantInvent."Plant No.");
            IF NOT TmpPlantInvent.Bulk THEN BEGIN
              IF NOT OrderLine.ISEMPTY THEN
                TmpPlantInvent.Quantity := 0  //* Unique plant no. already on order
              ELSE BEGIN  //C008414.sn
                TmpPlantInvent.CALCFIELDS(Element);
                TmpElement.Code := TmpPlantInvent.Element;
                TmpElement.Quantity := 1;
                TmpElement.INSERT;
              END;
            END ELSE BEGIN
              OrderLine.SETRANGE("From Rate Code",TmpPlantInvent."Rate Code");
              IF OrderLine.FINDFIRST THEN BEGIN  //* Correction: minus qty already on order
                OrderLine.CALCFIELDS("Total Quantity");  //* Quantity of Plant Type/No, Rate Code already on order
                TmpPlantInvent.Quantity := TmpPlantInvent.Quantity - OrderLine."Total Quantity";
                IF TmpPlantInvent.Quantity > 0 THEN BEGIN  //C008414.sn
                  REPEAT
                    IF TmpElement.GET(OrderLine.Element) THEN BEGIN
                      TmpElement.Quantity := TmpElement.Quantity - OrderLine.Quantity;
                      TmpElement.MODIFY;
                    END ELSE BEGIN
                      TmpElement.Code := OrderLine.Element;
                      TmpElement.Quantity := -OrderLine.Quantity;
                      TmpElement.INSERT;
                    END;
                  UNTIL OrderLine.NEXT = 0;
                END;
              END;
              IF TmpPlantInvent.Quantity > 0 THEN BEGIN  //C008414.sn
                PlantInvent.RESET;
                PlantInvent.SETRANGE(Removed, FALSE);
                PlantInvent.SETRANGE(Location, RentalFreeOrder."Plant Location");
                PlantInvent.SETRANGE("Plant Type", TmpPlantInvent."Plant Type");
                PlantInvent.SETRANGE("Plant No.", TmpPlantInvent."Plant No.");
                PlantInvent.SETRANGE("Rate Code", TmpPlantInvent."Rate Code");
                PlantInvent.SETRANGE(Sold, FALSE);
                PlantInvent.SETFILTER("Present from", '<=%1', OrderDate);
                PlantInvent.SETFILTER(Quantity, '>%1', 0);
                PlantInvent.SETFILTER(Element, '<>%1', '');
                IF PlantInvent.ISEMPTY THEN BEGIN
                  IF TmpElement.GET('') THEN
                    TmpElement.DELETE;
                  TmpElement.Code := '';
                  TmpElement.Quantity := TmpPlantInvent.Quantity;
                  TmpElement.INSERT;
                END ELSE BEGIN
                  PlantInvent.SETRANGE(Element);  //Reset filter
                  PlantInvent.FINDSET;
                  REPEAT
                    PlantInvent.CALCFIELDS(Element);
                    IF TmpElement.GET(PlantInvent.Element) THEN BEGIN
                      TmpElement.Quantity := TmpElement.Quantity + PlantInvent.Quantity;
                      TmpElement.MODIFY;
                    END ELSE BEGIN
                      TmpElement.Code := PlantInvent.Element;
                      TmpElement.Quantity := PlantInvent.Quantity;
                      TmpElement.INSERT;
                    END;
                  UNTIL PlantInvent.NEXT = 0
                END;
              END;
            END;
            //IF TmpPlantInvent.Quantity > 0 THEN BEGIN  //C008414.o
            //C008414.sn
            TmpElement.SETFILTER(Quantity, '>%1', 0);
            IF TmpElement.FINDFIRST THEN BEGIN
              REPEAT
            //C008414.en
                OrderLine.INIT;
                OrderLine."Rental Free Order No." := OrderNo;
                OrderLine."Line No." := NextLineNo;
                OrderLine."Plant Type" := TmpPlantInvent."Plant Type";
                OrderLine."Plant No." := TmpPlantInvent."Plant No.";
                OrderLine.GetPlantDescription;
                OrderLine."From Rate Code" := TmpPlantInvent."Rate Code";
                OrderLine.FillDefaultToRateCode();  //* Fill "To Rate Code"
                //OrderLine.Quantity := TmpPlantInvent.Quantity; //C008414.o
                //C008414.sn
                IF TmpElement.Quantity <= TmpPlantInvent.Quantity THEN
                  OrderLine.Quantity := TmpElement.Quantity
                ELSE
                  OrderLine.Quantity := TmpPlantInvent.Quantity;
                TmpPlantInvent.Quantity := TmpPlantInvent.Quantity - TmpElement.Quantity;
                OrderLine.Element := TmpElement.Code;
                //C008414.en
                OrderLine.INSERT;
                NextLineNo := NextLineNo + 10000;
              UNTIL (TmpElement.NEXT = 0) OR (TmpPlantInvent.Quantity <= 0);  //C008414.n
            END;
          END;
        UNTIL TmpPlantInvent.NEXT = 0;
      END;
    END;

    PROCEDURE SplitPeriodOrder@1100525003();
    VAR
      RentalFreeOrder2@1100525001 : Record 11020552;
      RentalFreeOrderLine1@1100525002 : Record 11020553;
      RentalFreeOrderLine2@1100525003 : Record 11020553;
      PO@1100525000 : Record 11012556;
      PlantRateCodes@1100525009 : Record 11020502;
      ToRateCode@1100525006 : Code[10];
    BEGIN
      TESTFIELD(Posted, FALSE);
      IF NOT (Type IN [Type::PeriodRentalFree, Type::PeriodModify]) THEN
        FIELDERROR(Type);
      TESTFIELD("Plant Location");
      TESTFIELD("Starting Date Rental Free");
      TESTFIELD("Ending Date Rental Free");
      CheckEndingDate();

      RentalFreeOrderLine1.SETRANGE("Rental Free Order No.", "No.");
      IF NOT RentalFreeOrderLine1.FINDSET THEN
        ERROR(Text007, RentalFreeOrderLine1.FIELDCAPTION("Rental Free Order No."), "No.", RentalFreeOrderLine1.TABLECAPTION);
      REPEAT
          RentalFreeOrderLine1.TESTFIELD("Plant Type");
          RentalFreeOrderLine1.TESTFIELD("Plant No.");
          RentalFreeOrderLine1.TESTFIELD("To Rate Code");
          IF RentalFreeOrderLine1."From Rate Code" = RentalFreeOrderLine1."To Rate Code" THEN
            RentalFreeOrderLine1.FIELDERROR("To Rate Code");
          RentalFreeOrderLine1.TESTFIELD(Quantity);
          RentalFreeOrderLine1.CheckFromRateCode(Rec);
          RentalFreeOrderLine1.CheckToRateCode(Rec);
      UNTIL RentalFreeOrderLine1.NEXT = 0;

      IF NOT CONFIRM(Text008, FALSE, TABLECAPTION, "No.", Type) THEN
        EXIT;

      RentalFreeOrder2 := Rec;
      RentalFreeOrder2."No." := "No." + PO.BackorderSign + '1';
      CASE Type OF
        Type::PeriodRentalFree:
          BEGIN
            RentalFreeOrder2.Type := Type::EndRentalFree;
            RentalFreeOrder2."Starting Date Rental Free" := 0D;
            Type := Type::RentalFree;
            "Ending Date Rental Free" := 0D;
          END;
        Type::PeriodModify:
          BEGIN
            RentalFreeOrder2.Type := Type::Modify;
            RentalFreeOrder2."Starting Date Rental Free" := "Ending Date Rental Free";
            RentalFreeOrder2."Ending Date Rental Free" := 0D;
            Type := Type::Modify;
            "Ending Date Rental Free" := 0D;
         END;
      END;
      RentalFreeOrder2.INSERT(FALSE);
      MODIFY(FALSE);

      RentalFreeOrderLine1.RESET;
      RentalFreeOrderLine1.SETRANGE("Rental Free Order No.", "No.");
      RentalFreeOrderLine1.FINDSET;
      REPEAT
        RentalFreeOrderLine2 := RentalFreeOrderLine1;
        RentalFreeOrderLine2."Rental Free Order No." := RentalFreeOrder2."No.";
        RentalFreeOrderLine2."From Rate Code" := RentalFreeOrderLine1."To Rate Code";
        RentalFreeOrderLine2."To Rate Code" := RentalFreeOrderLine1."From Rate Code";
        IF RentalFreeOrderLine2."To Rate Code" = '' THEN BEGIN
          // So was on loc with rate code empty(=100%), then fill with 'default rate code rental' but only if 100%
          ToRateCode := PlantRateCodes.GetDefaultRateCodeRental("Plant Location", FALSE, '');
          IF (ToRateCode <> '') AND (ToRateCode <> RentalFreeOrderLine2."From Rate Code") THEN BEGIN
            IF PlantRateCodes.ReadPlantRateCode("Plant Location",ToRateCode,'') THEN BEGIN
              IF PlantRateCodes.Percentage = 100 THEN
                RentalFreeOrderLine2."To Rate Code" := ToRateCode;
            END;
          END;
        END;
        RentalFreeOrderLine2.INSERT(FALSE);
      UNTIL RentalFreeOrderLine1.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

