OBJECT Table 11020564 Mapping XML Invoice Elements
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Mapping XML Invoice Elements;
  }
  FIELDS
  {
    { 10  ;   ;Supplying GLN       ;Code20        ;TableRelation="ETIM Vendor (Local Mgt)";
                                                   CaptionML=ENU=Supplying GLN;
                                                   NotBlank=Yes }
    { 20  ;   ;Data Type           ;Option        ;OnValidate=BEGIN
                                                                DetermineReceivingNo;
                                                                TestDataTypeElemRelation;
                                                                TestDataTypeSequenceRelation;
                                                                TestDataTypeProjFilterRelation;
                                                                TestDataTypeElemFilterRelation;
                                                                TestDataTypeProjectRelation;
                                                              END;

                                                   CaptionML=ENU=Data Type;
                                                   OptionCaptionML=ENU=Project Element,Project Element Filter,Project Filter Element,Project Filter Element Filter;
                                                   OptionString=Project Element,Project Element Filter,Project Filter Element,Project Filter Element Filter }
    { 30  ;   ;Project No.         ;Code20        ;OnValidate=BEGIN
                                                                CASE "Data Type" OF
                                                                "Data Type"::"Project Filter Element",
                                                                "Data Type"::"Project Filter Element Filter":
                                                                  IF "Project No." <> '' THEN
                                                                    ERROR(Text001, "Data Type");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Project No. }
    { 40  ;   ;Element             ;Code20        ;OnValidate=BEGIN
                                                                DetermineReceivingNo;
                                                                CASE "Data Type" OF
                                                                "Data Type"::"Project Element Filter",
                                                                "Data Type"::"Project Filter Element Filter":
                                                                  IF Element <> '' THEN
                                                                    ERROR(Text001, "Data Type");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Element }
    { 50  ;   ;Sequence No.        ;Integer       ;OnValidate=BEGIN
                                                                CASE "Data Type" OF
                                                                "Data Type"::"Project Element":
                                                                  IF "Sequence No." > 0 THEN
                                                                    ERROR(Text002, "Data Type");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Sequence No.;
                                                   BlankZero=Yes }
    { 60  ;   ;Project Filter      ;Code250       ;OnValidate=BEGIN
                                                                CASE "Data Type" OF
                                                                "Data Type"::"Project Element Filter",
                                                                "Data Type"::"Project Element":
                                                                  IF "Project Filter" <> '' THEN
                                                                    ERROR(Text001, "Data Type");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Project Filter }
    { 70  ;   ;Element Filter      ;Code250       ;OnValidate=BEGIN
                                                                CASE "Data Type" OF
                                                                "Data Type"::"Project Element",
                                                                "Data Type"::"Project Filter Element":
                                                                  IF "Element Filter" <> '' THEN
                                                                    ERROR(Text001, "Data Type");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Element Filter }
    { 80  ;   ;Convert             ;Boolean       ;OnValidate=BEGIN
                                                                DetermineReceivingNo;
                                                              END;

                                                   CaptionML=ENU=Convert }
    { 90  ;   ;Receiving Element   ;Code20        ;TableRelation="Base Element".Code;
                                                   OnValidate=BEGIN
                                                                DetermineReceivingNo;
                                                              END;

                                                   CaptionML=ENU=Receiving Element }
  }
  KEYS
  {
    {    ;Supplying GLN,Data Type,Project No.,Element,Sequence No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100525000 : TextConst 'ENU=Not allowed in case  Data Type is %1.';
      Text002@1100525001 : TextConst 'ENU=Sequence no. not allowed for Data Type %1.';
      Text003@1100525002 : TextConst 'ENU=In case checkbox Convert is ''No'', the Receiving Element and Element should be the same.';
      Text004@1100525003 : TextConst 'ENU=In case checkbox ''Convert'' is checked, then value of ''Receiving Element'' should be inrange of field'' Element Filter''.';

    PROCEDURE DetermineReceivingNo@1100525000();
    BEGIN
      CASE "Data Type" OF
        "Data Type"::"Project Element":
          IF (NOT Convert) AND
             ("Receiving Element" <> '')
          THEN BEGIN
            MESSAGE(Text003);
            "Receiving Element" := FORMAT(Element);
          END;
        "Data Type"::"Project Element Filter",
        "Data Type"::"Project Filter Element Filter":
           BEGIN
             IF  NOT Convert THEN
               IF NOT CheckRecElementExistInFilter(
                        "Element Filter","Receiving Element")
               THEN BEGIN
                 MESSAGE(Text004);
                 "Receiving Element" := FORMAT(Element);
               END;
           END;
      END;
    END;

    PROCEDURE TestDataTypeElemRelation@1100525001();
    BEGIN
      CASE "Data Type" OF
        "Data Type"::"Project Element Filter",
        "Data Type"::"Project Filter Element Filter":
          Element := '';
      END;
    END;

    PROCEDURE TestDataTypeSequenceRelation@1100525002();
    BEGIN
      CASE "Data Type" OF
        "Data Type"::"Project Element":
            "Sequence No." := 0;
      END;
    END;

    PROCEDURE TestDataTypeProjFilterRelation@1100525003();
    BEGIN
      CASE "Data Type" OF
        "Data Type"::"Project Element Filter",
        "Data Type"::"Project Filter Element":
          "Project Filter" := '';
      END;
    END;

    PROCEDURE TestDataTypeElemFilterRelation@1100525004();
    BEGIN
      CASE "Data Type" OF
        "Data Type"::"Project Element",
        "Data Type"::"Project Filter Element":
          "Element Filter" := '';
      END;
    END;

    PROCEDURE TestDataTypeProjectRelation@1100525005();
    BEGIN
      CASE "Data Type" OF
        "Data Type"::"Project Filter Element",
        "Data Type"::"Project Filter Element Filter":
          "Project No." := '';
      END;
    END;

    PROCEDURE CheckRecElementExistInFilter@1100525006(ElemFilter@1100525000 : Code[250];RecElem@1100525001 : Code[20]) : Boolean;
    VAR
      BaseElement@1100525002 : Record 11012060;
    BEGIN
      BaseElement.SETFILTER(Code, ElemFilter);
      BaseElement.Code := RecElem;
      EXIT(BaseElement.FIND('='));
    END;

    BEGIN
    END.
  }
}

