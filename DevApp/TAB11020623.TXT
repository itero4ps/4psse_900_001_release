OBJECT Table 11020623 Shipping Order Header
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               InventorySetup@1100525000 : Record 313;
             BEGIN
               InventorySetup.GET;

               IF "No." = '' THEN BEGIN
                 InventorySetup.TESTFIELD("Shipping Order Nos.");
                 NoSeriesMgt.InitSeries(InventorySetup."Shipping Order Nos.", xRec."No. Series", "Posting Date", "No.", "No. Series");
               END;
             END;

    OnModify=BEGIN
               TESTFIELD(Status, Status::Open);
             END;

    OnDelete=VAR
               CommentLine@1100525001 : Record 11071887;
               ShippingOrderLine@1100409000 : Record 11071885;
             BEGIN
               //C014447.sn
               ShippingOrderLine.SETRANGE("Document No.", "No.");
               ShippingOrderLine.DELETEALL(TRUE);
               //C014447.en

               CommentLine.RESET;
               CommentLine.SETRANGE("Document No.", "No.");
               CommentLine.DELETEALL(TRUE);
             END;

    CaptionML=ENU=Shipping Order Header;
    LookupPageID=Page11124932;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;OnValidate=VAR
                                                                InventorySetup@1100525000 : Record 313;
                                                              BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  InventorySetup.GET;
                                                                  NoSeriesMgt.TestManual(InventorySetup."Shipping Order Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 43  ;   ;Source Type         ;Option        ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                                IF LinesExist THEN
                                                                  ERROR(Text000, FIELDCAPTION("Source Type"));
                                                                IF "Source Type" <> xRec."Source Type" THEN
                                                                  "Source No." := '';
                                                              END;

                                                   CaptionML=ENU=Source Type;
                                                   OptionCaptionML=ENU=Sales Order,Purchase Return Order,Project,Service Order;
                                                   OptionString=Sales Order,Purchase Return Order,Project,Service Order }
    { 46  ;   ;Source No.          ;Code20        ;TableRelation=IF (Source Type=CONST(Sales Order)) "Sales Header".No. WHERE (Document Type=CONST(Order),
                                                                                                                               Status=CONST(Released))
                                                                                                                               ELSE IF (Source Type=CONST(Purchase Return Order)) "Purchase Header".No. WHERE (Document Type=CONST(Order),
                                                                                                                                                                                                               Purchase Order Type=CONST(Return Order),
                                                                                                                                                                                                               Status=CONST(Released))
                                                                                                                                                                                                               ELSE IF (Source Type=CONST(Project)) Job.No. WHERE (Project Status=CONST(Production))
                                                                                                                                                                                                               ELSE IF (Source Type=CONST(Service Order)) "Service Order".No. WHERE (Status=FILTER(In Process|Technical Finished));
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                                IF LinesExist THEN
                                                                  ERROR(Text000, FIELDCAPTION("Source No."));
                                                                FillHeaderAdress;
                                                              END;

                                                   CaptionML=ENU=Source No.;
                                                   NotBlank=Yes }
    { 50  ;   ;Ship-to Code        ;Code10        ;TableRelation=IF (Source Type=FILTER(Project)) "Project Location".Code WHERE (Project No.=FIELD(Source No.));
                                                   OnValidate=VAR
                                                                ProjectLocation@1100528800 : Record 11012011;
                                                              BEGIN
                                                                IF "Source Type" <> "Source Type"::Project THEN
                                                                  TESTFIELD("Ship-to Code",'');

                                                                IF "Ship-to Code" <> xRec."Ship-to Code" THEN BEGIN
                                                                  CASE "Source Type" OF
                                                                    "Source Type"::Project:
                                                                      BEGIN
                                                                        IF ProjectLocation.GET("Source No.", "Ship-to Code") THEN BEGIN
                                                                          "Ship-to Name" := ProjectLocation.Name;
                                                                          "Ship-to Name 2" := ProjectLocation."Name 2";
                                                                          "Ship-to Address" := ProjectLocation.Address;
                                                                          "Ship-to Address 2" := ProjectLocation."Address 2";
                                                                          "Ship-to City" := ProjectLocation.City;
                                                                          "Ship-to Contact" := ProjectLocation.Contact;
                                                                          "Ship-to Post Code" := ProjectLocation."Post Code";
                                                                          "Ship-to County" := '';
                                                                          "Ship-to Country/Region Code" := ProjectLocation."Country/Region Code";
                                                                        END;
                                                                      END;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Ship-to Code }
    { 60  ;   ;Ship-to Name        ;Text50        ;CaptionML=ENU=Ship-to Name }
    { 70  ;   ;Ship-to Name 2      ;Text50        ;CaptionML=ENU=Ship-to Name 2 }
    { 80  ;   ;Ship-to Address     ;Text50        ;CaptionML=ENU=Ship-to Address }
    { 90  ;   ;Ship-to Address 2   ;Text50        ;CaptionML=ENU=Ship-to Address 2 }
    { 100 ;   ;Ship-to City        ;Text30        ;TableRelation=IF (Ship-to Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Ship-to Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Ship-to Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(
                                                                  "Ship-to City",
                                                                  "Ship-to Post Code",
                                                                  "Ship-to County",
                                                                  "Ship-to Country/Region Code",
                                                                  (CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Ship-to City }
    { 110 ;   ;Ship-to Contact     ;Text50        ;CaptionML=ENU=Ship-to Contact }
    { 120 ;   ;Ship-to Post Code   ;Code20        ;TableRelation=IF (Ship-to Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Ship-to Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Ship-to Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(
                                                                  "Ship-to City",
                                                                  "Ship-to Post Code",
                                                                  "Ship-to County",
                                                                  "Ship-to Country/Region Code",
                                                                  (CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Ship-to Post Code }
    { 130 ;   ;Ship-to County      ;Text30        ;CaptionML=ENU=Ship-to County }
    { 140 ;   ;Ship-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Ship-to Country/Region Code }
    { 150 ;   ;Your Reference      ;Text35        ;CaptionML=ENU=Your Reference }
    { 160 ;   ;External Shipment No.;Code20       ;CaptionML=ENU=External Shipment No. }
    { 170 ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 180 ;   ;Shipment Date       ;Date          ;CaptionML=ENU=Shipment Date }
    { 190 ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=ENU=Shipment Method Code }
    { 200 ;   ;Shipping Agent Code ;Code10        ;TableRelation="Shipping Agent";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                                IF xRec."Shipping Agent Code" = "Shipping Agent Code" THEN
                                                                  EXIT;

                                                                "Shipping Agent Service Code" := '';
                                                              END;

                                                   CaptionML=ENU=Shipping Agent Code }
    { 210 ;   ;Shipping Agent Service Code;Code10 ;TableRelation="Shipping Agent Services".Code WHERE (Shipping Agent Code=FIELD(Shipping Agent Code));
                                                   OnValidate=VAR
                                                                ShippingAgentServices@1100525000 : Record 5790;
                                                              BEGIN
                                                                IF ShippingAgentServices.GET("Shipping Agent Code", "Shipping Agent Service Code") THEN
                                                                  "Shipping Time" := ShippingAgentServices."Shipping Time";
                                                              END;

                                                   CaptionML=ENU=Shipping Agent Service Code }
    { 220 ;   ;Status              ;Option        ;CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=Open,Released;
                                                   OptionString=Open,Released }
    { 230 ;   ;Shipping No. Series ;Code10        ;TableRelation="No. Series";
                                                   OnValidate=VAR
                                                                SalesSetup@1100525000 : Record 311;
                                                              BEGIN
                                                                IF "Shipping No. Series" <> '' THEN BEGIN
                                                                  SalesSetup.GET;
                                                                  SalesSetup.TESTFIELD("Posted Shipment Nos.");
                                                                  NoSeriesMgt.TestSeries(SalesSetup."Posted Shipment Nos.", "Shipping No. Series");
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              ShippingOrderHeader@1100525000 : Record 11020623;
                                                              SalesSetup@1100525001 : Record 311;
                                                            BEGIN
                                                              WITH ShippingOrderHeader DO BEGIN
                                                                ShippingOrderHeader := Rec;
                                                                SalesSetup.GET;
                                                                SalesSetup.TESTFIELD("Posted Shipment Nos.");
                                                                IF NoSeriesMgt.LookupSeries(SalesSetup."Posted Shipment Nos.", "Shipping No. Series") THEN
                                                                  VALIDATE("Shipping No. Series");
                                                                Rec := ShippingOrderHeader;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Shipping No. Series }
    { 240 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 250 ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Shipping Order Comment Line" WHERE (Document No.=FIELD(No.),
                                                                                                          Shipping Order Line No.=CONST(0)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 260 ;   ;Parcels Qty.        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Shipping Order Line".Quantity WHERE (Document No.=FIELD(No.)));
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=ENU=Parcels Qty.;
                                                   DecimalPlaces=0:0;
                                                   MinValue=0;
                                                   Editable=No }
    { 270 ;   ;Volume              ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Shipping Order Line".Volume WHERE (Document No.=FIELD(No.)));
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=ENU=Volume;
                                                   MinValue=0;
                                                   Editable=No }
    { 280 ;   ;Nett Weight         ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=ENU=Nett weight;
                                                   MinValue=0 }
    { 290 ;   ;Gross Weight        ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=ENU=Gross Weight;
                                                   MinValue=0 }
    { 300 ;   ;Posting No.         ;Code20        ;CaptionML=ENU=Posting No. }
    { 310 ;   ;Shipment Rate       ;Decimal       ;CaptionML=ENU=Shipment Rate;
                                                   MinValue=0;
                                                   Editable=No }
    { 320 ;   ;Packaging Weight    ;Decimal       ;FieldClass=Normal;
                                                   CaptionML=ENU=Packaging Weight;
                                                   MinValue=0 }
    { 330 ;   ;Shipping Instructions;Text250      ;CaptionML=ENU=Shipping Instructions }
    { 340 ;   ;Shipping Time       ;DateFormula   ;FieldClass=Normal;
                                                   CaptionML=ENU=Shipping Time }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PostCode@1100525001 : Record 225;
      NoSeriesMgt@1100525002 : Codeunit 396;
      Text000@1100525003 : TextConst 'ENU=You cannot change %1 if lines exist. Please delete the lines before changing the %1.';

    PROCEDURE ClearShipto@1100525002();
    BEGIN
      "Ship-to Name" := '';
      "Ship-to Name 2" := '';
      "Ship-to Address" := '';
      "Ship-to Address 2" := '';
      "Ship-to City" := '';
      "Ship-to Contact" := '';
      "Ship-to Post Code" := '';
      "Ship-to County" := '';
      "Ship-to Country/Region Code" := '';
      "Shipment Method Code" := '';
      "Shipping Agent Code" := '';
      "Shipping Agent Service Code" := '';
      CLEAR("Shipping Time");
    END;

    PROCEDURE LinesExist@1100525000() : Boolean;
    VAR
      ShippingOrderLine@1100525000 : Record 11071885;
    BEGIN
      ShippingOrderLine.SETRANGE("Document No.", "No.");
      EXIT(NOT ShippingOrderLine.ISEMPTY);
    END;

    PROCEDURE FillHeaderAdress@1100528800();
    VAR
      SalesHeader@1100528800 : Record 36;
      PurchaseHeader@1100528801 : Record 38;
      Job@1100528802 : Record 11072003;
      ServiceOrder@1100528803 : Record 11012823;
    BEGIN
      CASE "Source Type" OF
        "Source Type"::"Sales Order":
          BEGIN
            IF SalesHeader.GET(SalesHeader."Document Type"::Order,"Source No.") THEN BEGIN
              "Ship-to Name" := SalesHeader."Ship-to Name";
              "Ship-to Name 2" := SalesHeader."Ship-to Name 2";
              "Ship-to Address" := SalesHeader."Ship-to Address";
              "Ship-to Address 2" := SalesHeader."Ship-to Address 2";
              "Ship-to City" := SalesHeader."Ship-to City";
              "Ship-to Contact" := SalesHeader."Ship-to Contact";
              "Ship-to Post Code" := SalesHeader."Ship-to Post Code";
              "Ship-to County" := SalesHeader."Ship-to County";
              "Ship-to Country/Region Code" := SalesHeader."Ship-to Country/Region Code";
              "Shipment Method Code" := SalesHeader."Shipment Method Code";
              "Shipping Agent Code" := SalesHeader."Shipping Agent Code";
              "Shipping Agent Service Code" := SalesHeader."Shipping Agent Service Code";
              "Shipping Time" := SalesHeader."Shipping Time";
              "Your Reference" := SalesHeader."Your Reference"; //C015240
            END;
          END;
        "Source Type"::"Purchase Return Order":
          BEGIN
            IF PurchaseHeader.GET(PurchaseHeader."Document Type"::Order,"Source No.") THEN BEGIN
              "Ship-to Name" := PurchaseHeader."Ship-to Name";
              "Ship-to Name 2" := PurchaseHeader."Ship-to Name 2";
              "Ship-to Address" := PurchaseHeader."Ship-to Address";
              "Ship-to Address 2" := PurchaseHeader."Ship-to Address 2";
              "Ship-to City" := PurchaseHeader."Ship-to City";
              "Ship-to Contact" := PurchaseHeader."Ship-to Contact";
              "Ship-to Post Code" := PurchaseHeader."Ship-to Post Code";
              "Ship-to County" := PurchaseHeader."Ship-to County";
              "Ship-to Country/Region Code" := PurchaseHeader."Ship-to Country/Region Code";
              "Shipment Method Code" := PurchaseHeader."Shipment Method Code";
              "Shipping Agent Code" := PurchaseHeader."Shipping Agent Code";
              "Your Reference" := PurchaseHeader."Your Reference"; //C015240
            END;
          END;
        "Source Type"::Project:
          BEGIN
            IF Job.GET("Source No.") THEN BEGIN
              "Ship-to Name" := Job.Name;
              "Ship-to Name 2" := Job."Name 2";
              "Ship-to Address" := Job.Address;
              "Ship-to Address 2" := Job."Address 2";
              "Ship-to City" := Job.City;
              "Ship-to Contact" := Job.Contact;
              "Ship-to Post Code" := Job."Post Code";
              "Ship-to County" := Job.County;
              "Ship-to Country/Region Code" := Job."Country/Region Code";
            END;
          END;
        "Source Type"::"Service Order":
          BEGIN
            IF ServiceOrder.GET("Source No.") THEN BEGIN
              "Ship-to Name" := ServiceOrder.Name;
              "Ship-to Name 2" := ServiceOrder."Name 2";
              "Ship-to Address" := ServiceOrder.Address;
              "Ship-to Address 2" := ServiceOrder."Address 2";
              "Ship-to City" := ServiceOrder.City;
              "Ship-to Contact" := ServiceOrder."Contact Person No.";
              "Ship-to Post Code" := ServiceOrder."Post Code";
              "Ship-to County" := ServiceOrder.County;
              "Ship-to Country/Region Code" := ServiceOrder."Country/Region Code";
              "Your Reference" := ServiceOrder."Your Reference"; //C015240
            END;
          END;
      END;
    END;

    BEGIN
    END.
  }
}

