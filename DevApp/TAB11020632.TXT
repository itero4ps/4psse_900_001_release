OBJECT Table 11020632 Project Forecast in Period
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckForecastFixed(TRUE);
               UpdateLog;

               IF "Line No." = 0 THEN
                 "Line No." := GetNextLineNo;
             END;

    OnModify=BEGIN
               CheckForecastFixed(TRUE);
               UpdateLog;
             END;

    OnDelete=BEGIN
               CheckForecastFixed(TRUE);
               UpdateLog;
             END;

    OnRename=BEGIN
               ERROR(Text002);
             END;

    CaptionML=ENU=Project Forecast in Period;
    LookupPageID=Page11124950;
    DrillDownPageID=Page11124950;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=ENU=Project No.;
                                                   NotBlank=Yes }
    { 20  ;   ;Forecast Date       ;Date          ;CaptionML=ENU=Forecast Date;
                                                   NotBlank=Yes }
    { 30  ;   ;Cost Type           ;Option        ;CaptionML=ENU=Cost Type;
                                                   OptionCaptionML=ENU=Labor,Material,Subcontracting,Plant,Sundry,Revenue;
                                                   OptionString=Labor,Material,Subcontracting,Plant,Sundry,Revenue;
                                                   Editable=No }
    { 40  ;   ;Cost Object         ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                               Project Filter=FIELD(Project No.),
                                                                                               Cost Type=FIELD(Cost Type));
                                                   OnValidate=VAR
                                                                DimVal@1100525001 : Record 349;
                                                                DimMgt@1100525000 : Codeunit 408;
                                                              BEGIN
                                                                IF ("Cost Object" <> '') AND ("Cost Object" <> xRec."Cost Object") THEN BEGIN
                                                                  DimMgt.GetDimValueRec(2, "Cost Object", DimVal, TRUE, '');
                                                                  "Cost Type" := DimVal."Cost Type";
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Cost Object }
    { 50  ;   ;Cost Object Description;Text50     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Dimension Value".Name WHERE (Code=FIELD(Cost Object),
                                                                                                    Global Dimension No.=CONST(2)));
                                                   CaptionML=ENU=Cost Object Description;
                                                   Editable=No }
    { 60  ;   ;Project Cost Object Name;Text50    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project - Cost Object".Name WHERE (Project No.=FIELD(Project No.),
                                                                                                          Cost Object=FIELD(Cost Object)));
                                                   CaptionML=ENU=Project Cost Object Name;
                                                   Editable=No }
    { 80  ;   ;Element             ;Code20        ;TableRelation="Project Element".Element WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=VAR
                                                                ElementFormat@1100525000 : Codeunit 11012022;
                                                              BEGIN
                                                                ElementFormat.FormatElem(Element,2,'');
                                                                CALCFIELDS("Element Description");
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Element }
    { 85  ;   ;Element Description ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Element".Description WHERE (Project No.=FIELD(Project No.),
                                                                                                           Element=FIELD(Element)));
                                                   CaptionML=ENU=Element Description;
                                                   Editable=No }
    { 100 ;   ;Date                ;Date          ;OnValidate=BEGIN
                                                                IF Date <= "Forecast Date" THEN
                                                                  ERROR(Text003, FIELDCAPTION(Date), FIELDCAPTION("Forecast Date"));
                                                              END;

                                                   CaptionML=ENU=Date;
                                                   NotBlank=Yes }
    { 110 ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 120 ;   ;Document No.        ;Code20        ;TableRelation=IF (Source=FILTER(Outstanding Purchase|Received Not Invoiced)) "Purchase Header".No. WHERE (Document Type=CONST(Order));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Document No.;
                                                   Editable=No }
    { 1000;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                CalcAmount;
                                                              END;

                                                   CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5 }
    { 1010;   ;Amount              ;Decimal       ;CaptionML=ENU=Amount;
                                                   AutoFormatType=1 }
    { 1030;   ;Rate Code           ;Code10        ;TableRelation="Budget Rate".Code WHERE (Project Filter=FIELD(Project No.));
                                                   OnValidate=VAR
                                                                BudgetRateManagement@1100528600 : Codeunit 11012358;
                                                                Job@1100528601 : Record 11072003;
                                                                BudgetRateFoundAt@1100528602 : Text[250];
                                                              BEGIN
                                                                TESTFIELD("Cost Type", "Cost Type"::Labor);
                                                                Job.GET("Project No.");
                                                                Rate := BudgetRateManagement.GetBudgetRate(
                                                                  0, "Project No.", '', '', Job."Global Dimension 1 Code", "Rate Code", Date, BudgetRateFoundAt);
                                                                CalcAmount;
                                                              END;

                                                   CaptionML=ENU=Rate Code }
    { 1040;   ;Rate                ;Decimal       ;OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO(Rate) THEN
                                                                  TESTFIELD("Rate Code", '');

                                                                CalcAmount;
                                                              END;

                                                   CaptionML=ENU=Rate;
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 1050;   ;Comment             ;Text50        ;CaptionML=ENU=Comment }
    { 2000;   ;Source              ;Option        ;CaptionML=ENU=Source;
                                                   OptionCaptionML=ENU=Forecast,Outstanding Purchase,Received Not Invoiced,Outstanding Hours,Overhead Surcharge Forecast,Outstanding Inventory;
                                                   OptionString=Forecast,Outstanding Purchase,Received Not Invoiced,Outstanding Hours,Overhead Surcharge Forecast,Outstanding Inventory;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Project No.,Forecast Date,Cost Type,Element,Cost Object,Date,Line No.;
                                                   SumIndexFields=Amount,Quantity;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Project No.,Forecast Date,Cost Type,Date,Comment;
                                                   SumIndexFields=Amount }
    {    ;Project No.,Forecast Date,Cost Type,Element,Cost Object,Source,Date;
                                                   SumIndexFields=Amount,Quantity }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      SkipFixedCheck@1100525000 : Boolean;
      Text001@1100525002 : TextConst 'ENU=Forecast is frozen, Changes not allowed.';
      Text002@1100525001 : TextConst 'ENU=Renaming is not allowed.';
      Text003@1100525003 : TextConst 'ENU=%1 must be after %2';

    PROCEDURE GetNextLineNo@1100525000() : Integer;
    VAR
      ProjectForecastInPeriod@1100525000 : Record 11020632;
    BEGIN
      ProjectForecastInPeriod := Rec;
      ProjectForecastInPeriod.SETRECFILTER;
      ProjectForecastInPeriod.SETRANGE("Line No.");
      IF ProjectForecastInPeriod.FINDLAST THEN
        EXIT(ProjectForecastInPeriod."Line No." + 10000)
      ELSE
        EXIT(10000);
    END;

    PROCEDURE InitLaborRate@1100525002();
    VAR
      ProjectForecastLine@1100525000 : Record 11020631;
    BEGIN
      IF "Cost Type" <> "Cost Type"::Labor THEN
        EXIT;

      ProjectForecastLine.SETRANGE("Project No.", "Project No.");
      ProjectForecastLine.SETRANGE("Forecast Date", "Forecast Date");
      ProjectForecastLine.SETRANGE("Cost Type", "Cost Type");
      ProjectForecastLine.SETRANGE(Element, Element);
      ProjectForecastLine.SETRANGE("Cost Object", "Cost Object");
      IF ProjectForecastLine.FINDFIRST THEN
        IF ProjectForecastLine."Rate Code" <> '' THEN
          VALIDATE("Rate Code", ProjectForecastLine."Rate Code")
        ELSE
          VALIDATE(Rate, ProjectForecastLine.Rate);
    END;

    PROCEDURE CalcAmount@1100525001();
    BEGIN
      VALIDATE(Amount, Quantity * Rate);
    END;

    PROCEDURE CheckForecastFixed@1100525007(ShowErrorMessage@1100525001 : Boolean) : Boolean;
    VAR
      ProjectForecastHeader@1100525000 : Record 11020630;
    BEGIN
      IF SkipFixedCheck THEN
        EXIT(FALSE);

      IF NOT ProjectForecastHeader.GET("Project No.", "Forecast Date") THEN
        EXIT(FALSE);

      IF ProjectForecastHeader.Fixed THEN
        IF ShowErrorMessage THEN
          ERROR(Text001)
        ELSE
          EXIT(TRUE);
    END;

    PROCEDURE SetSkipFixedCheck@1100525013();
    BEGIN
      SkipFixedCheck := TRUE;
    END;

    PROCEDURE UpdateLog@1100525012();
    VAR
      ProjectForecastHeader@1100525000 : Record 11020630;
    BEGIN
      ProjectForecastHeader.UpdateLog("Project No.", "Forecast Date");
    END;

    PROCEDURE LookupDocumentNo@1210190000();
    VAR
      HourAccountingLine@1210190000 : Record 11012039;
      Project@1210190001 : Record 11072003;
      PurchHeader@1210190002 : Record 38;
      ItemJnlLine@1100526200 : Record 83;
      IemmJnl@1100526201 : Page 40;
    BEGIN
      CASE Source OF
        Source::"Outstanding Purchase", Source::"Received Not Invoiced":
          BEGIN
            PurchHeader.SETRANGE("Document Type", PurchHeader."Document Type"::Order);
            PurchHeader.GET(PurchHeader."Document Type"::Order, "Document No.");
            PAGE.RUNMODAL(PAGE::"Purchase Order", PurchHeader);
          END;
        Source::"Outstanding Hours":
          BEGIN
            Project.GET("Project No.");
            HourAccountingLine.SETRANGE("Main Project No.", Project."Main Project");
            IF Project."No." <> Project."Main Project" THEN
              HourAccountingLine.SETRANGE("Project No.", "Project No.");
            HourAccountingLine.SETRANGE("Posting Date", Date);
            IF Date <= "Forecast Date" + 1 THEN                            //*C005703.n
              HourAccountingLine.SETFILTER("Posting Date", '..%1', Date);  //*C005703.n
            CASE Project."Forecast Level" OF
              Project."Forecast Level"::"Element - Cost Object":
                BEGIN
                  HourAccountingLine.SETCURRENTKEY(
                    "Main Project No.","Project No.",Element);
                  HourAccountingLine.SETRANGE(Element, Element);
                  HourAccountingLine.SETRANGE("Cost Object", "Cost Object");
                END;
              Project."Forecast Level"::"Element - Cost Type":
                BEGIN
                  HourAccountingLine.SETCURRENTKEY(
                    "Main Project No.","Project No.",Element);
                  HourAccountingLine.SETRANGE(Element, Element);
                  HourAccountingLine.SETRANGE("Cost Type", "Cost Type");
                END;
              Project."Forecast Level"::"Cost Object":
                BEGIN
                  HourAccountingLine.SETCURRENTKEY(
                    "Main Project No.","Cost Type", "Cost Object");
                  HourAccountingLine.SETRANGE("Cost Object", "Cost Object");
                END;
              Project."Forecast Level"::"Cost Type":
                BEGIN
                  HourAccountingLine.SETCURRENTKEY(
                    "Main Project No.","Cost Type");
                  HourAccountingLine.SETRANGE("Cost Type", "Cost Type");
                END;
            END;
            HourAccountingLine.SETRANGE("Document No.", "Document No.");
            PAGE.RUNMODAL(0, HourAccountingLine);
          END;
        Source::"Outstanding Inventory":  //*C005928.n
          BEGIN
            Project.GET("Project No.");
            ItemJnlLine.SETRANGE("Main Project No.", Project."Main Project");
            IF Project."No." <> Project."Main Project" THEN
              ItemJnlLine.SETRANGE("Job No.", "Project No.");
            ItemJnlLine.SETRANGE("Document No.", "Document No.");
            IF ItemJnlLine.FINDFIRST THEN BEGIN
              IemmJnl.SETTABLEVIEW(ItemJnlLine);  // First pass document, then setselection(/filters) on Templ. and Batch
              IemmJnl.SetSelectionTemplateAndBatch(ItemJnlLine."Journal Template Name", ItemJnlLine."Journal Batch Name");
              IemmJnl.RUNMODAL;
            END;
          END;
      END;
    END;

    BEGIN
    END.
  }
}

