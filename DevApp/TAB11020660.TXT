OBJECT Table 11020660 Purchase Line Detail
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Line Type,Record Type;
    OnInsert=BEGIN
               CheckEntityNo;
               "Detail No." := DetermineDetailNo();
             END;

    OnModify=BEGIN
               CheckEntityNo;
             END;

    CaptionML=ENU=Purchase Line Detail;
  }
  FIELDS
  {
    { 10  ;   ;Line Type           ;Option        ;CaptionML=ENU=Line Type;
                                                   OptionCaptionML=ENU=,Material Requirement,Advice Order,Purchase Order,Assembly Object Material Requirement,Purchase Receipt;
                                                   OptionString=,Material Requirement,Advice Order,Purchase Order,Assembly Object Material Requirement,Purchase Receipt;
                                                   Editable=No }
    { 20  ;   ;Record Type         ;Option        ;CaptionML=ENU=Record Type;
                                                   OptionCaptionML=ENU=Project,Service Order;
                                                   OptionString=Project,ServOrder;
                                                   Editable=No }
    { 30  ;   ;Project No.         ;Code20        ;TableRelation=IF (Record Type=CONST(Project)) Job;
                                                   OnValidate=BEGIN
                                                                IF ("Record Type" = "Record Type"::ServOrder) THEN
                                                                  "Project No." := '';
                                                              END;

                                                   CaptionML=ENU=Project No.;
                                                   Editable=No }
    { 32  ;   ;Yard No.            ;Code20        ;CaptionML=ENU=Yard No. }
    { 34  ;   ;System No.          ;Code20        ;CaptionML=ENU=System No. }
    { 36  ;   ;Entity Type         ;Option        ;CaptionML=ENU=Entity Type;
                                                   OptionCaptionML=ENU=None,Cable,Device,Extra Need,Cable Transit,,,,,Position;
                                                   OptionString=None,Cable,Device,Extra Need,Cable Transit,,,,,Position }
    { 38  ;   ;Entity No.          ;Code20        ;CaptionML=ENU=Entity No. }
    { 40  ;   ;Service Order No.   ;Code20        ;TableRelation=IF (Record Type=CONST(ServOrder)) "Service Order";
                                                   OnValidate=BEGIN
                                                                IF ("Record Type" = "Record Type"::Project) THEN
                                                                  "Service Order No." := '';
                                                              END;

                                                   CaptionML=ENU=Service Order No.;
                                                   Editable=No }
    { 45  ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No. }
    { 50  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No.;
                                                   Editable=No }
    { 60  ;   ;Height              ;Decimal       ;CaptionML=ENU=Height;
                                                   MinValue=0 }
    { 65  ;   ;Unit of Measure Code Height;Code10 ;TableRelation="Unit of Measure";
                                                   CaptionML=ENU=Unit of Measure Code Height }
    { 70  ;   ;Width               ;Decimal       ;CaptionML=ENU=Width;
                                                   MinValue=0 }
    { 75  ;   ;Unit of Measure Code Width;Code10  ;TableRelation="Unit of Measure";
                                                   CaptionML=ENU=Unit of Measure Code Width }
    { 80  ;   ;Length              ;Decimal       ;CaptionML=ENU=Length;
                                                   MinValue=0 }
    { 85  ;   ;Unit of Measure Code Length;Code10 ;TableRelation="Unit of Measure";
                                                   CaptionML=ENU=Unit of Measure Code Length }
    { 90  ;   ;Thickness           ;Decimal       ;CaptionML=ENU=Thickness;
                                                   MinValue=0 }
    { 95  ;   ;Unit of Measure Code Thickness;Code10;
                                                   TableRelation="Unit of Measure";
                                                   CaptionML=ENU=Unit of Measure Code Thickness }
    { 100 ;   ;Version             ;Code20        ;TableRelation="Purchase Line Detail Type".Code WHERE (Line Type=CONST(Version));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Version Description");
                                                              END;

                                                   CaptionML=ENU=Version }
    { 110 ;   ;Version Description ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Purchase Line Detail Type".Description WHERE (Line Type=CONST(Version),
                                                                                                                     Code=FIELD(Version)));
                                                   CaptionML=ENU=Version Description;
                                                   Editable=No }
    { 120 ;   ;Color               ;Code20        ;TableRelation="Purchase Line Detail Type".Code WHERE (Line Type=CONST(Color));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Color Description");
                                                              END;

                                                   CaptionML=ENU=Color }
    { 130 ;   ;Color Description   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Purchase Line Detail Type".Description WHERE (Line Type=CONST(Color),
                                                                                                                     Code=FIELD(Color)));
                                                   CaptionML=ENU=Color Description;
                                                   Editable=No }
    { 140 ;   ;Detail No.          ;Code10        ;CaptionML=ENU=Detail No.;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Line Type,Record Type,Project No.,Yard No.,System No.,Entity Type,Entity No.,Service Order No.,Document No.,Line No.;
                                                   Clustered=Yes }
    {    ;Line Type,Document No.,Line No.         ;MaintainSIFTIndex=No }
    {    ;Detail No.                               }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE ShowCard@1210190003(LineType@1210190002 : ',Material Requirement,Advice Order,Purchase Order';RecordType@1210190003 : 'Project,ServOrder';ProjectNo@1210190004 : Code[20];YardNo@1210190007 : Code[20];SystemNo@1210190008 : Code[20];EntityType@1210190009 : ' ,Cable,Device,Extra Need,Cable Transit,,,,,Position';EntityNo@1210190010 : Code[20];ServiceOrderNo@1210190011 : Code[20];DocumentNo@1210190006 : Code[20];LineNo@1210190005 : Integer);
    VAR
      PurchaseLineDetail@1210190000 : Record 11020660;
      PurchaseLineDetailCard@1210190001 : Page 11124853;
    BEGIN
      //kzwerver, 110606, n, #27784
      PurchaseLineDetail.FILTERGROUP(4);
      PurchaseLineDetail.SETRANGE("Line Type", LineType);
      PurchaseLineDetail.SETRANGE("Record Type", RecordType);
      PurchaseLineDetail.SETRANGE("Project No.", ProjectNo);
      PurchaseLineDetail.SETRANGE("Yard No.", YardNo);
      PurchaseLineDetail.SETRANGE("System No.", SystemNo);
      PurchaseLineDetail.SETRANGE("Entity Type", EntityType);
      PurchaseLineDetail.SETRANGE("Entity No.", EntityNo);
      PurchaseLineDetail.SETRANGE("Service Order No.", ServiceOrderNo);
      PurchaseLineDetail.SETRANGE("Document No.", DocumentNo);
      PurchaseLineDetail.FILTERGROUP(0);
      PurchaseLineDetail.SETRANGE("Line No.", LineNo);
      IF PurchaseLineDetail.FINDSET THEN;
      PurchaseLineDetailCard.SETTABLEVIEW(PurchaseLineDetail);
      PurchaseLineDetailCard.RUNMODAL;
    END;

    PROCEDURE CopyLine@1210190001(LineType@1210190002 : ',Material Requirement,Advice Order,Purchase Order,Assembly Object Material Requirement,Purchase Receipt';RecordType@1210190003 : 'Project,ServOrder';ProjectNo@1210190004 : Code[20];YardNo@1210190007 : Code[20];SystemNo@1210190008 : Code[20];EntityType@1210190009 : ' ,Cable,Device,Extra Need,Cable Transit,,,,,Position';EntityNo@1210190010 : Code[20];ServiceOrderNo@1210190011 : Code[20];DocumentNo@1210190001 : Code[20];LineNo@1210190005 : Integer;ToLineType@1210190006 : ',Material Requirement,Advice Order,Purchase Order';ToDocumentNo@1210190013 : Code[20];ToLineNo@1210190012 : Integer;ClearAYNOFields@1100528400 : Boolean) : Boolean;
    VAR
      PurchaseLineDetail@1210190000 : Record 11020660;
    BEGIN
      //kzwerver, 110606, n, #27784
      IF (PurchaseLineDetail.GET(ToLineType, RecordType, ProjectNo, YardNo,
        SystemNo, EntityType, EntityNo, ServiceOrderNo, ToDocumentNo, ToLineNo))
      THEN
        EXIT(TRUE);

      IF (PurchaseLineDetail.GET(LineType, RecordType, ProjectNo, YardNo,
        SystemNo, EntityType, EntityNo, ServiceOrderNo, DocumentNo, LineNo))
      THEN BEGIN
        PurchaseLineDetail.VALIDATE("Line Type", ToLineType);
        PurchaseLineDetail.VALIDATE("Document No.", ToDocumentNo);
        PurchaseLineDetail.VALIDATE("Line No.", ToLineNo);
        IF ClearAYNOFields THEN BEGIN
          CLEAR(PurchaseLineDetail."Yard No.");
          CLEAR(PurchaseLineDetail."System No.");
          CLEAR(PurchaseLineDetail."Entity Type");
          CLEAR(PurchaseLineDetail."Entity No.");
        END;
        PurchaseLineDetail."Detail No." := PurchaseLineDetail.DetermineDetailNo();
        PurchaseLineDetail.INSERT;
        EXIT(TRUE);
      END;

      EXIT(FALSE);
    END;

    PROCEDURE ShowList@1100409000(LineType@1210190002 : ',Material Requirement,Advice Order,Purchase Order';DocumentNo@1210190006 : Code[20]);
    VAR
      PurchaseLineDetail@1210190000 : Record 11020660;
      PurchaseLineDetailList@1210190001 : Page 11124854;
    BEGIN
      //kzwerver, 110606, n, #27784
      PurchaseLineDetail.FILTERGROUP(4);
      PurchaseLineDetail.SETRANGE("Line Type", LineType);
      PurchaseLineDetail.SETRANGE("Document No.", DocumentNo);
      PurchaseLineDetail.FILTERGROUP(0);
      IF PurchaseLineDetail.FINDSET THEN BEGIN
        PurchaseLineDetailList.SETTABLEVIEW(PurchaseLineDetail);
        PurchaseLineDetailList.EDITABLE := FALSE;
        PurchaseLineDetailList.RUNMODAL;
      END;
    END;

    LOCAL PROCEDURE CheckEntityNo@1100528401();
    VAR
      JobsSetup@1100528400 : Record 315;
    BEGIN
      IF "Entity Type" = "Entity Type"::None THEN
        EXIT;

      IF JobsSetup.GET AND
         JobsSetup."Entity No. Mandatory"
      THEN
        TESTFIELD("Entity No.");
    END;

    PROCEDURE DetermineDetailNo@1100529000() : Code[10];
    VAR
      PurchLineDetail@1100529000 : Record 11020660;
    BEGIN
      PurchLineDetail.SETCURRENTKEY("Detail No.");
      IF PurchLineDetail.FINDLAST THEN BEGIN
        IF PurchLineDetail."Detail No." <> '' THEN
          EXIT(INCSTR(PurchLineDetail."Detail No."));
      END;
      EXIT('0000000001');
    END;

    PROCEDURE PurchaseDetailDescription@1100529005(DetailNo@1100529001 : Code[10]) : Text;
    VAR
      PurchaseLineDetail@1100529000 : Record 11020660;
    BEGIN
      IF DetailNo <> '' THEN BEGIN
        PurchaseLineDetail.SETCURRENTKEY("Detail No.");
        PurchaseLineDetail.SETRANGE("Detail No.", DetailNo);
        IF PurchaseLineDetail.FINDFIRST THEN
          EXIT(PurchaseLineDetail.DetailDescription());
      END;
      EXIT('');
    END;

    PROCEDURE DetailDescription@1100529001() ComposedDescription : Text;
    BEGIN
      CALCFIELDS("Version Description", "Color Description");
      ComposedDescription := '';

      IF "Version Description" <> '' THEN BEGIN
        IF ComposedDescription <> '' THEN
          ComposedDescription := ComposedDescription + ', ';
        ComposedDescription := ComposedDescription + "Version Description";
      END;
      IF "Color Description" <> '' THEN BEGIN
        IF ComposedDescription <> '' THEN
          ComposedDescription := ComposedDescription + ', ';
        ComposedDescription := ComposedDescription + "Color Description";
      END;
      IF (Height <> 0) OR (Width <> 0) OR (Length <> 0) OR (Thickness <> 0) THEN BEGIN
        IF ComposedDescription <> '' THEN
          ComposedDescription := ComposedDescription + ', ';
        IF Height <> 0 THEN
          ComposedDescription := ComposedDescription + LOWERCASE(COPYSTR(FIELDCAPTION(Height),1,1));
        IF Width <> 0 THEN BEGIN
          IF (Height <> 0) THEN
            ComposedDescription := ComposedDescription + '*';
          ComposedDescription := ComposedDescription + LOWERCASE(COPYSTR(FIELDCAPTION(Width),1,1));
        END;
        IF Length <> 0 THEN BEGIN
          IF (Height <> 0) OR (Width <> 0) THEN
            ComposedDescription := ComposedDescription + '*';
          ComposedDescription := ComposedDescription + LOWERCASE(COPYSTR(FIELDCAPTION(Length),1,1));
        END;
        IF Thickness <> 0 THEN BEGIN
          IF (Height <> 0) OR (Width <> 0) OR (Length <> 0) THEN
            ComposedDescription := ComposedDescription + '*';
          ComposedDescription := ComposedDescription + LOWERCASE(COPYSTR(FIELDCAPTION(Thickness),1,1));
        END;
        ComposedDescription := ComposedDescription + ' : ';
        IF Height <> 0 THEN
          ComposedDescription := ComposedDescription + FORMAT(Height) + LOWERCASE("Unit of Measure Code Height");
        IF Width <> 0 THEN BEGIN
          IF Height <> 0 THEN
            ComposedDescription := ComposedDescription + '*';
          ComposedDescription := ComposedDescription + FORMAT(Width) + LOWERCASE("Unit of Measure Code Width");
        END;
        IF Length <> 0 THEN BEGIN
          IF (Height <> 0) OR (Width <> 0) THEN
            ComposedDescription := ComposedDescription + '*';
          ComposedDescription := ComposedDescription + FORMAT(Length) + LOWERCASE("Unit of Measure Code Length");
        END;
        IF Thickness <> 0 THEN BEGIN
          IF (Height <> 0) OR (Width <> 0) OR (Length <> 0) THEN
            ComposedDescription := ComposedDescription + '*';
          ComposedDescription := ComposedDescription + FORMAT(Thickness) + LOWERCASE("Unit of Measure Code Thickness");
        END;
      END;
    END;

    PROCEDURE GetDetailNoPurchOrderLine@1100529002(DocumentNo@1100529001 : Code[20];LineNo@1100529002 : Integer) : Code[10];
    VAR
      PurchaseLineDetail@1100529000 : Record 11020660;
    BEGIN
      PurchaseLineDetail.SETRANGE("Line Type", PurchaseLineDetail."Line Type"::"Purchase Order");
      PurchaseLineDetail.SETRANGE("Document No.", DocumentNo);
      PurchaseLineDetail.SETRANGE("Line No.", LineNo);
      IF PurchaseLineDetail.FINDFIRST THEN
        EXIT(PurchaseLineDetail."Detail No.");
      EXIT('');
    END;

    PROCEDURE ShowDetailCardOfDetailNo@1100529003(DetailNo@1100529001 : Code[10]);
    VAR
      PurchaseLineDetail@1100529000 : Record 11020660;
      PurchaseLineDetailCard@1100529002 : Page 11124853;
    BEGIN
      IF DetailNo = '' THEN
        EXIT;
      PurchaseLineDetail.SETCURRENTKEY("Detail No.");
      PurchaseLineDetail.SETRANGE("Detail No.", DetailNo);
      PurchaseLineDetail.FINDFIRST;
      PurchaseLineDetailCard.SETTABLEVIEW(PurchaseLineDetail);
      PurchaseLineDetailCard.SETRECORD(PurchaseLineDetail);
      PurchaseLineDetailCard.EDITABLE(FALSE);  //Only show!
      PurchaseLineDetailCard.RUNMODAL;
    END;

    PROCEDURE ShowDetailCardPurchInvLine@1100529004(ReceiptNo@1100529001 : Code[20];ReceiptLineNo@1100529003 : Integer);
    VAR
      PurchReceptLine@1100529004 : Record 121;
      PurchOrderLine@1100529005 : Record 39;
      PurchaseLineDetail@1100529000 : Record 11020660;
      PurchaseLineDetailCard@1100529002 : Page 11124853;
    BEGIN
      //Via Receipt No./Line No. of invoice line (T39(DocType::Invoice)/T11012032/T123)
      IF ReceiptNo = '' THEN
        EXIT;
      IF NOT PurchReceptLine.GET(ReceiptNo, ReceiptLineNo) THEN
        EXIT;
      IF PurchReceptLine."Order No." = '' THEN
        EXIT;
      IF NOT PurchOrderLine.GET(PurchOrderLine."Document Type"::Order, PurchReceptLine."Order No.", PurchReceptLine."Order Line No.") THEN
        EXIT;
      PurchaseLineDetail.SETRANGE("Line Type", PurchaseLineDetail."Line Type"::"Purchase Order");
      PurchaseLineDetail.SETRANGE("Document No.", PurchOrderLine."Document No.");
      PurchaseLineDetail.SETRANGE("Line No.", PurchOrderLine."Line No.");
      PurchaseLineDetail.FINDFIRST;
      PurchaseLineDetailCard.SETTABLEVIEW(PurchaseLineDetail);
      PurchaseLineDetailCard.SETRECORD(PurchaseLineDetail);
      PurchaseLineDetailCard.EDITABLE(FALSE);  //Only show!
      PurchaseLineDetailCard.RUNMODAL;
    END;

    BEGIN
    END.
  }
}

