OBJECT Table 11020687 Prognosis Line Specification
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               NullGuid@11136550 : GUID;
             BEGIN
               IF "Line No." = 0 THEN
                 "Line No." := FindNextLineNo;

               IF "Reference No." = NullGuid THEN
                 "Reference No." := CREATEGUID;

               UpdatePrognosisLine(Quantity, Amount);
             END;

    OnModify=BEGIN
               UpdatePrognosisLine(Quantity - xRec.Quantity, Amount - xRec.Amount);
             END;

    OnDelete=BEGIN
               UpdatePrognosisLine(-Quantity, -Amount);
             END;

    CaptionML=ENU=Prognosis Line Specification;
    LookupPageID=Page11125030;
    DrillDownPageID=Page11125030;
  }
  FIELDS
  {
    { 1   ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   CaptionML=ENU=Project No.;
                                                   NotBlank=Yes }
    { 2   ;   ;Prognosis Date      ;Date          ;TableRelation=Prognosis."Prognosis Date" WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=ENU=Prognosis Date;
                                                   NotBlank=Yes }
    { 3   ;   ;Cost Type           ;Option        ;TableRelation="Prognosis Line"."Cost Type" WHERE (Project No.=FIELD(Project No.),
                                                                                                     Prognosis Date=FIELD(Prognosis Date));
                                                   CaptionML=ENU=Cost Type;
                                                   OptionCaptionML=ENU=Labor,Material,Subcontracting,Plant,Sundry,Revenue;
                                                   OptionString=Labor,Material,Subcontracting,Plant,Sundry,Revenue }
    { 4   ;   ;Element             ;Code20        ;TableRelation="Prognosis Line".Element WHERE (Project No.=FIELD(Project No.),
                                                                                                 Prognosis Date=FIELD(Prognosis Date),
                                                                                                 Cost Type=FIELD(Cost Type));
                                                   CaptionML=ENU=Element }
    { 5   ;   ;Cost Object         ;Code20        ;TableRelation="Prognosis Line"."Cost Object" WHERE (Project No.=FIELD(Project No.),
                                                                                                       Prognosis Date=FIELD(Prognosis Date),
                                                                                                       Cost Type=FIELD(Cost Type),
                                                                                                       Element=FIELD(Element));
                                                   CaptionML=ENU=Cost Object }
    { 9   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 10  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 100 ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                UpdateAmount;
                                                              END;

                                                   CaptionML=ENU=Quantity }
    { 105 ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure";
                                                   CaptionML=ENU=Unit of Measure }
    { 110 ;   ;Price               ;Decimal       ;OnValidate=BEGIN
                                                                UpdateAmount;
                                                              END;

                                                   CaptionML=ENU=Price/Rate;
                                                   AutoFormatType=2 }
    { 120 ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                UpdatePrice;
                                                              END;

                                                   CaptionML=ENU=Amount;
                                                   AutoFormatType=1 }
    { 130 ;   ;Budget Amount       ;Decimal       ;CaptionML=ENU=Budget Amount;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 200 ;   ;Extension Contract  ;Code10        ;TableRelation="Extension Contract"."Contract No." WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=ENU=Extension Contract }
    { 205 ;   ;Extension Contract Description;Text50;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Extension Contract".Description WHERE (Project No.=FIELD(Project No.),
                                                                                                              Contract No.=FIELD(Extension Contract)));
                                                   CaptionML=ENU=Extension Contract Description;
                                                   Editable=No }
    { 210 ;   ;Cost Component      ;Code20        ;TableRelation="Cost Component";
                                                   CaptionML=ENU=Cost Component }
    { 490 ;   ;Reference No.       ;GUID          ;CaptionML=ENU=Reference No.;
                                                   Editable=No }
    { 500 ;   ;Fixed               ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Prognosis.Fixed WHERE (Project No.=FIELD(Project No.),
                                                                                             Prognosis Date=FIELD(Prognosis Date)));
                                                   CaptionML=ENU=Fixed;
                                                   Editable=No }
    { 510 ;   ;Comment             ;Text50        ;CaptionML=ENU=Comment }
    { 600 ;   ;Previous Prognosis Amount;Decimal  ;CaptionML=ENU=Previous Prognosis Amount;
                                                   Editable=No }
    { 610 ;   ;Previous Budget Amount;Decimal     ;CaptionML=ENU=Previous Budget Amount;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Project No.,Prognosis Date,Cost Type,Element,Cost Object,Line No.;
                                                   SumIndexFields=Amount,Quantity;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Reference No.                           ;SumIndexFields=Amount,Quantity }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ProjSetup@1100525000 : Record 315;

    PROCEDURE FindNextLineNo@11136557() : Integer;
    VAR
      ForecastDetailLine@11136550 : Record 11020687;
    BEGIN
      ForecastDetailLine.SETRANGE("Project No.", "Project No.");
      ForecastDetailLine.SETRANGE("Prognosis Date", "Prognosis Date");
      ForecastDetailLine.SETRANGE("Cost Type", "Cost Type");
      ForecastDetailLine.SETRANGE(Element, Element);
      ForecastDetailLine.SETRANGE("Cost Object", "Cost Object");
      IF NOT ForecastDetailLine.FINDLAST THEN;

      EXIT(ForecastDetailLine."Line No." + 10000);
    END;

    PROCEDURE UpdateAmount@11136551();
    BEGIN
      Amount := ROUND(Quantity * Price); //C009648 rounding added
    END;

    PROCEDURE UpdatePrice@11136552();
    VAR
      Currency@1100525000 : Record 4;
    BEGIN
      Currency.InitRoundingPrecision; //C009648 rounding added
      Price := ROUND(SafeDivision(Amount, Quantity),Currency."Unit-Amount Rounding Precision");  //C009648 rounding added
    END;

    PROCEDURE UpdatePrognosisLine@11136559(ChangeInQuantity@11136551 : Decimal;ChangeInAmount@11136552 : Decimal);
    VAR
      PrognosisLine@11136550 : Record 11012035;
      Currency@1100525000 : Record 4;
    BEGIN
      ProjSetup.GET;
      IF NOT ProjSetup."Prognosis Specifications" THEN  //C004846.n
        EXIT;

      Currency.InitRoundingPrecision; //C009648 rounding added

      PrognosisLine.GET("Project No.", "Prognosis Date", "Cost Type", Element, "Cost Object");
      PrognosisLine.Quantity := PrognosisLine.Quantity + ChangeInQuantity;
      PrognosisLine.VALIDATE(Amount, PrognosisLine.Amount + ChangeInAmount);

      IF PrognosisLine."Cost Type" = PrognosisLine."Cost Type"::Labor THEN
        PrognosisLine.Rate := ROUND(SafeDivision(PrognosisLine.Amount, PrognosisLine.Quantity),Currency."Unit-Amount Rounding Precision") //C009648 rounding added
      ELSE
        PrognosisLine.Price := ROUND(SafeDivision(PrognosisLine.Amount, PrognosisLine.Quantity),Currency."Unit-Amount Rounding Precision"); //C009648 rounding added

      PrognosisLine.MODIFY;
    END;

    LOCAL PROCEDURE SafeDivision@11136558(Numerator@11136550 : Decimal;Denominator@11136551 : Decimal) : Decimal;
    BEGIN
      IF Denominator = 0 THEN
        EXIT(0);
      EXIT(Numerator/Denominator);
    END;

    BEGIN
    END.
  }
}

