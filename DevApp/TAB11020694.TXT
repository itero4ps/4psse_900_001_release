OBJECT Table 11020694 Subcontracting Hours Invoice
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    Permissions=TableData 25=rm,
                TableData 122=rm,
                TableData 124=rm;
    OnInsert=BEGIN
               TESTFIELD("Employee No.");
               GetDefaults;
               UpdateTotals;
             END;

    OnModify=BEGIN
               TESTFIELD("Employee No.");
               UpdateTotals;
             END;

    CaptionML=ENU=Subcontracting Hours Invoice;
    LookupPageID=Page11125042;
  }
  FIELDS
  {
    { 5   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Invoice,Posted Invoice;
                                                   OptionString=Invoice,Posted Invoice }
    { 10  ;   ;Document No.        ;Code20        ;TableRelation=IF (Type=CONST(Invoice)) "Purchase Header".No. WHERE (Document Type=CONST(Invoice))
                                                                 ELSE IF (Type=CONST(Posted Invoice)) "Purch. Inv. Header".No.;
                                                   CaptionML=ENU=Document No.;
                                                   NotBlank=Yes }
    { 20  ;   ;Year                ;Integer       ;OnValidate=VAR
                                                                Date@1100528300 : Record 2000000007;
                                                              BEGIN
                                                                Date.SETRANGE("Period Type", Date."Period Type"::Year);
                                                                Date.SETRANGE("Period No.", Year);
                                                                IF NOT Date.FINDFIRST THEN
                                                                  FIELDERROR(Year);

                                                                StartDateYear := Date."Period Start";
                                                                YearEndDate := Date."Period End";
                                                              END;

                                                   CaptionML=ENU=Year;
                                                   MinValue=1;
                                                   NotBlank=Yes }
    { 30  ;   ;Week                ;Integer       ;OnValidate=VAR
                                                                Date@1100528300 : Record 2000000007;
                                                              BEGIN
                                                                IF Year = 0 THEN
                                                                  Year := DATE2DMY(TODAY, 3);
                                                                VALIDATE(Year, Year);

                                                                Date.SETRANGE("Period Type", Date."Period Type"::Week);
                                                                Date.SETRANGE("Period No.", Week);
                                                                Date.SETRANGE("Period Start", CALCDATE('<-3D>', StartDateYear), YearEndDate);
                                                                Date.SETRANGE("Period End", StartDateYear, CALCDATE('<+3D>', YearEndDate));
                                                                IF NOT Date.FINDFIRST THEN
                                                                  FIELDERROR(Week);
                                                              END;

                                                   OnLookup=VAR
                                                              DateSelectionManagement@1100409000 : Codeunit 11130005;
                                                            BEGIN
                                                              DateSelectionManagement.GetWeekYear(Week, Year);
                                                              VALIDATE(Week);
                                                            END;

                                                   CaptionML=ENU=Week;
                                                   MinValue=1;
                                                   MaxValue=53;
                                                   NotBlank=Yes }
    { 35  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No.;
                                                   Editable=No }
    { 40  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Vendor Name");
                                                              END;

                                                   CaptionML=ENU=Vendor No. }
    { 41  ;   ;Vendor Name         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Vendor No.)));
                                                   CaptionML=ENU=Vendor Name;
                                                   Editable=No }
    { 50  ;   ;Employee No.        ;Code20        ;TableRelation="Employee per Vendor"."Employee No." WHERE (Vendor No.=FIELD(Vendor No.),
                                                                                                             Employee No.=FIELD(Employee No.));
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN BEGIN
                                                                  CALCFIELDS("Employee Name");
                                                                  CALCFIELDS("Employee Social Security No.");
                                                                END;

                                                                CheckEmployeeValidity;
                                                                IF ("Hour Rate" = 0) AND ("B Amount %" = 0) THEN
                                                                  GetDefaults;
                                                              END;

                                                   CaptionML=ENU=Employee No. }
    { 51  ;   ;Employee Name       ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Employee per Vendor"."Employee Name" WHERE (Vendor No.=FIELD(Vendor No.),
                                                                                                                   Employee No.=FIELD(Employee No.)));
                                                   CaptionML=ENU=Employee Name;
                                                   Editable=No }
    { 54  ;   ;Employee Social Security No.;Text30;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Employee per Vendor"."Social Security No." WHERE (Vendor No.=FIELD(Vendor No.),
                                                                                                                         Employee No.=FIELD(Employee No.)));
                                                   CaptionML=ENU=Employee Social Security No.;
                                                   Editable=No }
    { 60  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   CaptionML=ENU=Project No. }
    { 70  ;   ;Service Order No.   ;Code20        ;TableRelation="Service Order";
                                                   CaptionML=ENU=Service Order No. }
    { 80  ;   ;Extension Contract  ;Code10        ;TableRelation="Extension Contract"."Contract No." WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=ENU=Extension Contract }
    { 90  ;   ;Cost Object         ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                               Cost Type=FILTER(Labor|Subcontracting|Sundry));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Cost Object Description");
                                                              END;

                                                   CaptionML=ENU=Cost Object }
    { 91  ;   ;Cost Object Description;Text50     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Dimension Value".Name WHERE (Global Dimension No.=FILTER(2),
                                                                                                    Code=FIELD(Cost Object)));
                                                   CaptionML=ENU=Cost Object Description;
                                                   Editable=No }
    { 100 ;   ;Element             ;Code10        ;TableRelation="Project Element".Element WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=VAR
                                                                ProjectElement@1210190000 : Record 11012010;
                                                                ElementFormat@1210190001 : Codeunit 11012022;
                                                              BEGIN
                                                                IF Element = '' THEN
                                                                  EXIT;

                                                                ElementFormat.FormatElem(Element, 2, COMPANYNAME);
                                                                ProjectElement.GET("Project No.", Element);

                                                                CALCFIELDS("Element Description");
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Element }
    { 101 ;   ;Element Description ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Element".Description WHERE (Project No.=FIELD(Project No.),
                                                                                                           Element=FIELD(Element)));
                                                   CaptionML=ENU=Element Description;
                                                   Editable=No }
    { 150 ;   ;Hour Rate           ;Decimal       ;OnValidate=BEGIN
                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=ENU=Hour Rate }
    { 160 ;   ;B Amount %          ;Decimal       ;OnValidate=BEGIN
                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=ENU=B Amount % }
    { 200 ;   ;Monday              ;Decimal       ;OnValidate=BEGIN
                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=ENU=Monday }
    { 210 ;   ;Tuesday             ;Decimal       ;OnValidate=BEGIN
                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=ENU=Tuesday }
    { 220 ;   ;Wednesday           ;Decimal       ;OnValidate=BEGIN
                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=ENU=Wednesday }
    { 230 ;   ;Thursday            ;Decimal       ;OnValidate=BEGIN
                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=ENU=Thursday }
    { 240 ;   ;Friday              ;Decimal       ;OnValidate=BEGIN
                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=ENU=Friday }
    { 250 ;   ;Saturday            ;Decimal       ;OnValidate=BEGIN
                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=ENU=Saturday }
    { 260 ;   ;Sunday              ;Decimal       ;OnValidate=BEGIN
                                                                UpdateTotals;
                                                              END;

                                                   CaptionML=ENU=Sunday }
    { 300 ;   ;Total Hours         ;Decimal       ;CaptionML=ENU=Total Hours;
                                                   Editable=No }
    { 310 ;   ;Total Amount        ;Decimal       ;CaptionML=ENU=Total Amount;
                                                   Editable=No }
    { 320 ;   ;Total B Amount      ;Decimal       ;CaptionML=ENU=Total B Amount;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Type,Document No.,Year,Week,Line No.    ;Clustered=Yes }
    {    ;Project No.,Year,Week,Employee No.       }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      StartDateYear@1100528301 : Date;
      YearEndDate@1100528300 : Date;
      Text000@1100528302 : TextConst 'ENU=There is no %1 present.';
      Text001@1100528303 : TextConst 'ENU=%1 is expired.';

    PROCEDURE UpdateTotals@1100528300();
    BEGIN
      "Total Hours" := Monday + Tuesday + Wednesday + Thursday + Friday + Saturday + Sunday;
      "Total Amount" := "Total Hours" * "Hour Rate";
      "Total B Amount" := "Total Amount" * ("B Amount %" / 100);
      IF ("Hour Rate" <> 0) THEN
        TESTFIELD("Total Hours");
    END;

    PROCEDURE GetDefaults@1100528302();
    VAR
      EmployeePerVendor@1100528300 : Record 11020693;
    BEGIN
      IF (EmployeePerVendor.GET("Vendor No.", "Employee No.")) THEN BEGIN
        "Hour Rate" := EmployeePerVendor."Hour Rate";
        "B Amount %" := EmployeePerVendor."B Amount %";
      END;
    END;

    PROCEDURE CheckEmployeeValidity@1100528301();
    VAR
      EmployeePerVendor@1100528300 : Record 11020693;
    BEGIN
      EmployeePerVendor.GET("Vendor No.", "Employee No.");

      IF (NOT EmployeePerVendor."ID Copy Present") THEN
        MESSAGE(Text000, EmployeePerVendor.FIELDCAPTION("ID Copy Present"))
      ELSE
        IF (EmployeePerVendor."ID Valid Till" < TODAY) THEN
          MESSAGE(Text001, EmployeePerVendor.FIELDCAPTION("ID Valid Till"));


      CASE EmployeePerVendor.Type OF
        EmployeePerVendor.Type::Soletrader: BEGIN
          IF (NOT EmployeePerVendor."Labour Declaration") THEN
            MESSAGE(Text000, EmployeePerVendor.FIELDCAPTION("Labour Declaration"))
          ELSE
            IF (EmployeePerVendor."Labour Declaration Valid Till" < TODAY) THEN
              MESSAGE(Text001, EmployeePerVendor.FIELDCAPTION("Labour Declaration Valid Till"));
        END;
      END;
    END;

    PROCEDURE UpdateAmounts@1100409000(EntryNo@1100409000 : Integer);
    VAR
      PurchaseHeader@1100528300 : Record 38;
    BEGIN
      IF (PurchaseHeader.GET(PurchaseHeader."Document Type"::Invoice, "Document No.")) THEN
        UpdateAmountsFromPurchInvoice
      ELSE
        IF (EntryNo = 0) THEN
          UpdateAmountsFromPurchInvHdr
        ELSE
          UpdateAmountsFromVendLedgerEnt(EntryNo);
    END;

    PROCEDURE UpdateAmountsFromPurchInvoice@1100528303();
    VAR
      PurchaseHeader@1100528300 : Record 38;
      SubcontractingHoursInvoice@1100528303 : Record 11020694;
      TotalAmount@1100528301 : Decimal;
      TotalBAmount@1100528302 : Decimal;
      TotalHours@1100525000 : Decimal;
    BEGIN
      SubcontractingHoursInvoice.SETRANGE(Type, Type::Invoice);
      SubcontractingHoursInvoice.SETRANGE("Document No.", "Document No.");
      IF (SubcontractingHoursInvoice.FINDFIRST) THEN BEGIN
        REPEAT
          TotalHours += SubcontractingHoursInvoice."Total Hours";
          TotalAmount += SubcontractingHoursInvoice."Total Amount";
          TotalBAmount += SubcontractingHoursInvoice."Total B Amount";
        UNTIL (SubcontractingHoursInvoice.NEXT = 0);
      END;

      IF (TotalHours <> 0) THEN BEGIN
        PurchaseHeader.GET(PurchaseHeader."Document Type"::Invoice, "Document No.");
        PurchaseHeader.VALIDATE("Number of Hours", TotalHours);
        PurchaseHeader.VALIDATE("Labor Amount", TotalAmount);
        PurchaseHeader.VALIDATE("Wage Charge (to B Account)", TotalBAmount);
        PurchaseHeader."Avg. Wage Rate" := ROUND(TotalAmount / TotalHours, 0.00001);
        PurchaseHeader.MODIFY;
      END;
    END;

    PROCEDURE UpdateAmountsFromPurchInvHdr@1100409001();
    VAR
      PurchInvHeader@1100528300 : Record 122;
      SubcontractingHoursInvoice@1100528303 : Record 11020694;
      VendorLedgerEntry@1100528304 : Record 25;
      TotalAmount@1100528301 : Decimal;
      TotalBAmount@1100528302 : Decimal;
      TotalHours@1100525000 : Decimal;
    BEGIN
      SubcontractingHoursInvoice.SETRANGE(Type, Type::"Posted Invoice");
      SubcontractingHoursInvoice.SETRANGE("Document No.", "Document No.");
      IF (SubcontractingHoursInvoice.FINDFIRST) THEN BEGIN
        REPEAT
          TotalHours += SubcontractingHoursInvoice."Total Hours";
          TotalAmount += SubcontractingHoursInvoice."Total Amount";
          TotalBAmount += SubcontractingHoursInvoice."Total B Amount";
        UNTIL (SubcontractingHoursInvoice.NEXT = 0);
      END;

      IF (TotalHours <> 0) THEN BEGIN
        PurchInvHeader.GET("Document No.");
        PurchInvHeader.VALIDATE("Number of Hours", TotalHours);
        PurchInvHeader.VALIDATE("Labor Amount", TotalAmount);
        PurchInvHeader.VALIDATE("Wage Charge (to B Account)", TotalBAmount);
        PurchInvHeader."Avg. Wage Rate" := ROUND(TotalAmount / TotalHours, 0.00001);
        PurchInvHeader.MODIFY;

        VendorLedgerEntry.SETRANGE("Vendor No.", PurchInvHeader."Buy-from Vendor No.");
        VendorLedgerEntry.SETRANGE("Document Type", VendorLedgerEntry."Document Type"::Invoice);
        VendorLedgerEntry.SETRANGE("Document No.", PurchInvHeader."No.");
        IF (VendorLedgerEntry.FINDFIRST) THEN
          UpdateVendorLedgerEntry(VendorLedgerEntry."Entry No.", TotalAmount, TotalBAmount, TotalHours);
      END;
    END;

    PROCEDURE UpdateAmountsFromVendLedgerEnt@1100528308(EntryNo@1100409000 : Integer);
    VAR
      SubcontractingHoursInvoice@1100528303 : Record 11020694;
      TotalAmount@1100528301 : Decimal;
      TotalBAmount@1100528302 : Decimal;
      TotalHours@1100525000 : Decimal;
    BEGIN
      IF (EntryNo = 0) THEN
        EXIT;

      SubcontractingHoursInvoice.SETRANGE(Type, Type::"Posted Invoice");
      SubcontractingHoursInvoice.SETRANGE("Document No.", "Document No.");
      IF (SubcontractingHoursInvoice.FINDFIRST) THEN BEGIN
        REPEAT
          TotalHours += SubcontractingHoursInvoice."Total Hours";
          TotalAmount += SubcontractingHoursInvoice."Total Amount";
          TotalBAmount += SubcontractingHoursInvoice."Total B Amount";
        UNTIL (SubcontractingHoursInvoice.NEXT = 0);
      END;

      IF (TotalHours <> 0) THEN
        UpdateVendorLedgerEntry(EntryNo, TotalAmount, TotalBAmount, TotalHours);
    END;

    PROCEDURE RunPageFromPurchaseHeader@1100528304(PurchaseHeader@1100528303 : Record 38);
    BEGIN
      PurchaseHeader.TESTFIELD("Document Type", PurchaseHeader."Document Type"::Invoice);
      PurchaseHeader.TESTFIELD("Subcontracting Invoice", TRUE);

      RunPage(0, PurchaseHeader."No.", PurchaseHeader."Posting Date",
        PurchaseHeader."Buy-from Vendor No.", PurchaseHeader."Job No.",
        PurchaseHeader."Service Order No.", (PurchaseHeader.Status < PurchaseHeader.Status::Closed), 0);
    END;

    PROCEDURE RunPageFromPurchInvHeader@1100525004(PurchInvHeader@1100528303 : Record 122);
    BEGIN
      PurchInvHeader.TESTFIELD("Subcontracting Invoice", TRUE);

      RunPage(1, PurchInvHeader."No.", PurchInvHeader."Posting Date",
        PurchInvHeader."Buy-from Vendor No.", PurchInvHeader."Job No.",
        PurchInvHeader."Service Order No.", (NOT PurchInvHeader."Invoice Approved"), 0);
    END;

    PROCEDURE RunPageFromVendorLedgerEntry@1100528305(VendorLedgerEntry@1100528303 : Record 25);
    BEGIN
      VendorLedgerEntry.TESTFIELD("Document Type", VendorLedgerEntry."Document Type"::Invoice);
      VendorLedgerEntry.TESTFIELD("Subcontracting Invoice", TRUE);

      RunPage(1, VendorLedgerEntry."Document No.", VendorLedgerEntry."Posting Date",
        VendorLedgerEntry."Buy-from Vendor No.", VendorLedgerEntry."Project No.",
        '', (VendorLedgerEntry."Closed at Date" = 0D), VendorLedgerEntry."Entry No.");
    END;

    LOCAL PROCEDURE RunPage@1100525000(DocumentType@1100409000 : Option;DocumentNo@1100525000 : Code[20];PostingDate@1100525001 : Date;VendorNo@1100525002 : Code[20];ProjectNo@1100525003 : Code[20];ServiceOrderNo@1100525004 : Code[20];FormEditable@1100525005 : Boolean;EntryNo@1100409001 : Integer);
    VAR
      SubcontractingHoursInvoice@1100528300 : Record 11020694;
      SubcontractingHoursInvoiceFrm@1100528301 : Page 11125042;
    BEGIN
      SubcontractingHoursInvoice.FILTERGROUP(9);
      SubcontractingHoursInvoice.SETRANGE(Type, DocumentType);
      SubcontractingHoursInvoice.SETRANGE("Document No.", DocumentNo);
      SubcontractingHoursInvoice.FILTERGROUP(0);

      SubcontractingHoursInvoiceFrm.SetGlobalVars(DATE2DMY(PostingDate, 3), DATE2DWY(PostingDate, 2),
        VendorNo, ProjectNo, ServiceOrderNo, EntryNo);
      SubcontractingHoursInvoiceFrm.SETTABLEVIEW(SubcontractingHoursInvoice);
      SubcontractingHoursInvoiceFrm.EDITABLE := FormEditable;
      SubcontractingHoursInvoiceFrm.LOOKUPMODE := FormEditable;
      SubcontractingHoursInvoiceFrm.RUNMODAL;
    END;

    LOCAL PROCEDURE UpdateVendorLedgerEntry@1100528306(EntryNo@1100528301 : Integer;TotalAmount@1100528302 : Decimal;TotalBAmount@1100528303 : Decimal;TotalHours@1100528304 : Decimal);
    VAR
      VendorLedgerEntry@1100528300 : Record 25;
    BEGIN
      VendorLedgerEntry.GET(EntryNo);
      VendorLedgerEntry.VALIDATE("Number of Hours", TotalHours);
      VendorLedgerEntry.VALIDATE("Labor Amount", TotalAmount);
      VendorLedgerEntry.VALIDATE("Wage Charge (to B Account)", TotalBAmount);
      VendorLedgerEntry."Avg. Wage Rate" := ROUND(TotalAmount / TotalHours, 0.00001);
      VendorLedgerEntry.MODIFY;
    END;

    BEGIN
    END.
  }
}

