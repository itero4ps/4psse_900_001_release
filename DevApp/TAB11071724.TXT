OBJECT Table 11071724 Service Order Object
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ServiceInspectionManagement@1100528600 : Codeunit 11012844;
               ObjectInspectionManagement@1100528601 : Codeunit 11012848;
             BEGIN
               TESTFIELD("Object No.");
               ServiceInspectionManagement.CreateSOInspectionLines("Service Order No.", "Service Contract No.",
                 "Object No.", "Maintenance Scheme", Code);
               ObjectInspectionManagement.CreateSOSpecificationLines("Service Order No.", "Object No.");

               MergeDimensionValuesFirstObject;
             END;

    OnDelete=VAR
               MaintenanceProposalLine@1100528601 : Record 11071696;
               ServiceOrder@1100525001 : Record 11012823;
               ServiceOrderObject@1100525000 : Record 11071724;
               ServiceOrderBudgetLine@1100525002 : Record 11012875;
               ServiceInspectionManagement@1100528600 : Codeunit 11012844;
               ObjectInspectionManagement@1100528602 : Codeunit 11012848;
             BEGIN
               TESTFIELD(Finished, FALSE);

               CASE Source OF
                 Source::Maintenance:
                   BEGIN
                     MaintenanceProposalLine.SETCURRENTKEY("Service Contract No.", "Object No.");
                     MaintenanceProposalLine.SETRANGE("Service Contract No.", "Service Contract No.");
                     MaintenanceProposalLine.SETRANGE("Object No.", "Object No.");
                     MaintenanceProposalLine.SETRANGE("Maintenance Scheme", "Maintenance Scheme");
                     MaintenanceProposalLine.SETRANGE("Service Contract Arr. Line No.",  "Source Line No.");
                     IF MaintenanceProposalLine.FINDFIRST THEN BEGIN
                       MaintenanceProposalLine."Service Order No." := '';
                       MaintenanceProposalLine."Service Order Description" := '';
                       MaintenanceProposalLine.MODIFY(TRUE);
                     END;
                   END;
               END;

               ServiceInspectionManagement.DeleteSOInspectionLines("Service Order No.", "Object No.", "Maintenance Scheme");
               ObjectInspectionManagement.DeleteSOSpecificationLines("Service Order No.", "Object No.");

               ServiceOrderObject.SETRANGE("Service Order No.", "Service Order No.");
               ServiceOrderObject.SETFILTER("Object No.", '<>%1', "Object No.");
               IF ServiceOrderObject.ISEMPTY THEN
                 IF ServiceOrder.GET("Service Order No.") THEN
                   IF ServiceOrder."Charge Vendor (Warranty)" THEN BEGIN
                     ServiceOrder."Charge Vendor (Warranty)" := FALSE;
                     ServiceOrder.MODIFY(TRUE);
                   END;

               ServiceOrderBudgetLine.SETRANGE("Budget Type", ServiceOrderBudgetLine."Budget Type"::Order);
               ServiceOrderBudgetLine.SETRANGE("Service Order No.", "Service Order No.");
               ServiceOrderBudgetLine.SETRANGE("Object No.", "Object No.");
               ServiceOrderBudgetLine.SETRANGE("Maintenance Scheme", "Maintenance Scheme");
               ServiceOrderBudgetLine.DELETEALL(TRUE);

               UpdateServicePackageOnServiceOrder(2);
               UpdatePreferredEmployeeOnServiceOrder(2);

               FIND('=');
             END;

    CaptionML=ENU=Service Order Object;
    LookupPageID=Page11125251;
    DrillDownPageID=Page11125251;
  }
  FIELDS
  {
    { 10  ;   ;Service Order No.   ;Code20        ;CaptionML=ENU=Service Order No. }
    { 20  ;   ;Object No.          ;Code20        ;TableRelation=Service-Object;
                                                   OnValidate=VAR
                                                                ServiceContract@1100525000 : Record 11012812;
                                                                ServiceObject@1100526200 : Record 11071691;
                                                                ServiceOrder@1210190000 : Record 11012823;
                                                                ServiceOrderObject@1100528601 : Record 11071724;
                                                                ContractObject@1100528604 : Record 11071702;
                                                                BilltoVendorNo@1100528600 : Code[20];
                                                                BilltoVendorNo2@1100528602 : Code[20];
                                                                VendorWillBeCharged@1100528603 : Boolean;
                                                              BEGIN
                                                                //
                                                                // If this code is changed see also codeunit 11012197 (PrepareServiceOrderLookup)
                                                                //
                                                                IF ServiceOrder.GET("Service Order No.") AND ServiceObject.GET("Object No.") THEN BEGIN
                                                                  IF ServiceContract.GET(ServiceOrder."Service Contract No.") THEN BEGIN
                                                                    ServiceContract.CheckObjectPartOfContract("Object No.", ServiceOrder."Order Date");
                                                                    IF "Service Contract No." = '' THEN
                                                                      "Service Contract No." := ServiceOrder."Service Contract No.";
                                                                  END;
                                                                  "Standard Object No." := ServiceObject."Standard Object No.";
                                                                  IF "Service Category" = '' THEN
                                                                    "Service Category" := DetermineServiceCategory;

                                                                  VendorWillBeCharged := ServiceObject.VendorWillBeCharged("Service Order No.", WORKDATE, BilltoVendorNo);

                                                                  ServiceOrderObject.SETRANGE("Service Order No.", "Service Order No.");
                                                                  ServiceOrderObject.SETFILTER("Object No.", '<>%1', "Object No.");
                                                                  IF ServiceOrderObject.FINDFIRST THEN BEGIN
                                                                    ServiceObject.GET(ServiceOrderObject."Object No.");
                                                                    IF (ServiceObject.VendorWillBeCharged("Service Order No.", WORKDATE, BilltoVendorNo2) <> VendorWillBeCharged) OR
                                                                       (BilltoVendorNo2 <> BilltoVendorNo)
                                                                    THEN
                                                                      ERROR(Text001, "Object No.");
                                                                  END ELSE BEGIN
                                                                    IF ServiceOrder."Charge Vendor (Warranty)" <> VendorWillBeCharged THEN
                                                                      ServiceOrder."Charge Vendor (Warranty)" := VendorWillBeCharged;
                                                                    IF VendorWillBeCharged THEN BEGIN
                                                                      IF ServiceOrder."Bill-to Customer No." <> BilltoVendorNo THEN BEGIN
                                                                        ServiceOrder.VALIDATE("Bill-to Customer No.", BilltoVendorNo);
                                                                        MESSAGE(Text000, ServiceObject."Bill-to Vendor No.");
                                                                      END;
                                                                    END;
                                                                    IF "Service Category" <> '' THEN
                                                                      ServiceOrder."Service Category" := "Service Category";
                                                                    ServiceOrder.MODIFY(TRUE);
                                                                  END;
                                                                  UpdateServicePackageOnServiceOrder(1);
                                                                  UpdatePreferredEmployeeOnServiceOrder(1);
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              ServiceLocation@1100528300 : Record 11012801;
                                                              ServiceObject@1210190000 : Record 11071691;
                                                              ServiceOrder@1210190001 : Record 11012823;
                                                              ContractObject@1210190002 : Record 11071702;
                                                            BEGIN
                                                              //
                                                              // If this code is changed see also codeunit 11012197 (PrepareServiceOrderLookup)
                                                              //
                                                              IF ServiceOrder.GET("Service Order No.") THEN BEGIN
                                                                IF ServiceOrder."Service Contract No." <> '' THEN BEGIN
                                                                  ContractObject.SETRANGE("Service Contract No.", ServiceOrder."Service Contract No.");
                                                                  IF ContractObject.FINDSET THEN
                                                                    REPEAT
                                                                      ServiceObject."No." := ContractObject."Service Object No.";
                                                                      ServiceObject.MARK(TRUE);
                                                                    UNTIL ContractObject.NEXT = 0;
                                                                  ServiceObject.MARKEDONLY(TRUE);
                                                                END ELSE
                                                                  IF ServiceOrder."Service Location No." <> '' THEN BEGIN
                                                                    ServiceLocation.GET(ServiceOrder."Service Location No.");
                                                                    ServiceLocation.GetRelatedObjects(ServiceObject);
                                                                  END;
                                                                IF "Object No." <> '' THEN
                                                                  IF ServiceObject.GET("Object No.") THEN;
                                                                IF PAGE.RUNMODAL(0, ServiceObject) = ACTION::LookupOK THEN
                                                                  VALIDATE("Object No.", ServiceObject."No.");
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Object No. }
    { 25  ;   ;Object Description  ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Service-Object.Description WHERE (No.=FIELD(Object No.)));
                                                   CaptionML=ENU=Object Description;
                                                   Editable=No }
    { 27  ;   ;Object Description 2;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Service-Object."Description 2" WHERE (No.=FIELD(Object No.)));
                                                   CaptionML=ENU=Object Description 2;
                                                   Editable=No }
    { 30  ;   ;Standard Object No. ;Code20        ;TableRelation="Standard Object";
                                                   CaptionML=ENU=Standard Object No.;
                                                   Editable=No }
    { 40  ;   ;Maintenance Scheme  ;Code20        ;TableRelation="Maintenance Scheme Version".Code WHERE (Line Type=CONST(Maintenance Scheme),
                                                                                                          Index Date=FIELD(Maintenance Scheme Index Date));
                                                   CaptionML=ENU=Maintenance Scheme }
    { 45  ;   ;Maintenance Scheme Description;Text50;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Maintenance Scheme".Description WHERE (Code=FIELD(Maintenance Scheme)));
                                                   CaptionML=ENU=Maintenance Scheme Description;
                                                   Editable=No }
    { 50  ;   ;Maintenance Scheme Index Date;Date ;CaptionML=ENU=Maintenance Scheme Index Date }
    { 60  ;   ;Standard Object Description;Text50 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Standard Object".Description WHERE (No.=FIELD(Standard Object No.)));
                                                   CaptionML=ENU=Standard Object Description;
                                                   Editable=No }
    { 65  ;   ;Standard Object Description 2;Text50;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Standard Object"."Description 2" WHERE (No.=FIELD(Standard Object No.)));
                                                   CaptionML=ENU=Standard Object Description 2;
                                                   Editable=No }
    { 70  ;   ;Code                ;Code20        ;TableRelation=IF (Source=CONST(Maintenance)) "Maintenance Scheme".Code
                                                                 ELSE IF (Source=CONST(Modifications)) "Object Modification".No.
                                                                 ELSE IF (Source=CONST(Replacements)) "Object Replacement".No.;
                                                   CaptionML=ENU=Maintenance/Modification Code }
    { 80  ;   ;Source              ;Option        ;CaptionML=ENU=Maintenance/Modification Option;
                                                   OptionString=Calls,Maintenance,Modifications,Replacements,Other }
    { 90  ;   ;Service Contract No.;Code20        ;TableRelation=Service-Contract;
                                                   CaptionML=ENU=Service Contract No.;
                                                   Editable=No }
    { 100 ;   ;Source Line No.     ;Integer       ;CaptionML=ENU=Source Line No.;
                                                   Editable=No }
    { 110 ;   ;Execution Date      ;Date          ;CaptionML=ENU=Execution Date }
    { 120 ;   ;Finished            ;Boolean       ;OnValidate=VAR
                                                                ContractObjectMaintenance@1100525000 : Record 11071692;
                                                              BEGIN
                                                                IF xRec.Finished <> Finished THEN BEGIN
                                                                  UpdateFinishBudgetLines;
                                                                  IF Finished THEN BEGIN
                                                                    IF "Execution Date" = 0D THEN
                                                                      "Execution Date" := TODAY;
                                                                  END ELSE
                                                                    "Execution Date" := 0D;
                                                                END;
                                                                IF MODIFY THEN
                                                                  IF ContractObjectMaintenance.GET("Service Contract No.", "Object No.", "Maintenance Scheme") THEN BEGIN
                                                                    ContractObjectMaintenance.UpdateLastAndNextMaintDate;
                                                                    ContractObjectMaintenance.MODIFY(TRUE);
                                                                  END;
                                                              END;

                                                   CaptionML=ENU=Finished }
    { 130 ;   ;Firm Planned        ;Boolean       ;OnValidate=VAR
                                                                ServiceOrder@1100528600 : Record 11012823;
                                                              BEGIN
                                                                IF "Firm Planned" THEN BEGIN
                                                                  ServiceOrder.GET("Service Order No.");
                                                                  ServiceOrder."Firm Planned" := TRUE;
                                                                  ServiceOrder.MODIFY;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Firm Planned;
                                                   Editable=No }
    { 140 ;   ;Service Order Starting Date;Date   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Order"."Starting Date" WHERE (No.=FIELD(Service Order No.)));
                                                   CaptionML=ENU=Service Order Starting Date;
                                                   Editable=No }
    { 150 ;   ;Follow-up Job       ;Boolean       ;OnValidate=BEGIN
                                                                IF xRec."Follow-up Job" <> "Follow-up Job" THEN
                                                                  UpdateFollowupJobBudgetLines;
                                                              END;

                                                   CaptionML=ENU=Follow-up Job }
    { 160 ;   ;Quantity            ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Service-Object.Quantity WHERE (No.=FIELD(Object No.)));
                                                   CaptionML=ENU=Quantity;
                                                   Editable=No }
    { 170 ;   ;Theoretical Maintenance Date;Date  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Contract Arrangement"."Theoretical Maintenance Date" WHERE (Service Contract No.=FIELD(Service Contract No.),
                                                                                                                                           Object No.=FIELD(Object No.),
                                                                                                                                           Maintenance Scheme=FIELD(Maintenance Scheme),
                                                                                                                                           Line No.=FIELD(Source Line No.)));
                                                   CaptionML=ENU=Theoretical Maintenance Date;
                                                   Editable=No }
    { 180 ;   ;Object Group        ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Standard Object"."Object Group" WHERE (No.=FIELD(Standard Object No.)));
                                                   CaptionML=ENU=Object Group;
                                                   Editable=No }
    { 190 ;   ;Maintenance Day     ;Option        ;CaptionML=ENU=Maintenance Day;
                                                   OptionCaptionML=ENU=" ,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday,Weekday,Weekend";
                                                   OptionString=[ ,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday,Weekday,Weekend];
                                                   Editable=No }
    { 200 ;   ;Starting Time Maint. Window;Time   ;CaptionML=ENU=Starting Time Maintenance Window;
                                                   Editable=No }
    { 210 ;   ;Ending Time Maint. Window;Time     ;CaptionML=ENU=Ending Time Maintenance Window;
                                                   Editable=No }
    { 220 ;   ;Service Category    ;Code10        ;CaptionML=ENU=Service Category;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Service Order No.,Object No.,Maintenance Scheme;
                                                   Clustered=Yes }
    {    ;Object No.                               }
    {    ;Maintenance Scheme                       }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528600 : TextConst 'ENU=Invoice will be charged to vendor %1 due to warranty.';
      Text001@1100528601 : TextConst 'ENU=Object %1 cannot be added because of warranty reasons.';

    PROCEDURE UpdateFinishBudgetLines@1100528600();
    VAR
      ServiceOrderBudgetLine@1100528600 : Record 11012875;
    BEGIN
      ServiceOrderBudgetLine.SETRANGE("Budget Type", ServiceOrderBudgetLine."Budget Type"::Order);
      ServiceOrderBudgetLine.SETRANGE("Service Order No.", "Service Order No.");
      ServiceOrderBudgetLine.SETRANGE("Object No.", "Object No.");
      ServiceOrderBudgetLine.SETRANGE("Maintenance Scheme", "Maintenance Scheme");
      ServiceOrderBudgetLine.SETRANGE(Finished, NOT Finished);
      ServiceOrderBudgetLine.SetUpdateSOObjectFinished(FALSE);
      IF NOT ServiceOrderBudgetLine.FINDSET THEN EXIT;
      REPEAT
        ServiceOrderBudgetLine.VALIDATE(Finished, Finished);
        ServiceOrderBudgetLine.MODIFY(TRUE);
      UNTIL ServiceOrderBudgetLine.NEXT = 0;
    END;

    PROCEDURE UpdateFollowupJobBudgetLines@1210190000();
    VAR
      ServiceOrderBudgetLine@1210190000 : Record 11012875;
    BEGIN
      ServiceOrderBudgetLine.SETRANGE("Budget Type", ServiceOrderBudgetLine."Budget Type"::Order);
      ServiceOrderBudgetLine.SETRANGE("Service Order No.", "Service Order No.");
      ServiceOrderBudgetLine.SETRANGE("Service Contract No.", "Service Contract No.");
      ServiceOrderBudgetLine.SETRANGE("Maintenance Scheme", "Maintenance Scheme");
      ServiceOrderBudgetLine.SETRANGE("Surcharge Line Budget", FALSE);
      ServiceOrderBudgetLine.SETRANGE("Follow-up Job", NOT "Follow-up Job");
      ServiceOrderBudgetLine.SetUpdateSOObjectFinished(FALSE);
      IF NOT ServiceOrderBudgetLine.FINDSET THEN EXIT;
      REPEAT
        ServiceOrderBudgetLine.VALIDATE("Follow-up Job", "Follow-up Job");
        ServiceOrderBudgetLine.MODIFY(TRUE);
      UNTIL ServiceOrderBudgetLine.NEXT = 0;
    END;

    PROCEDURE UpdateFinishedFromBudgetLines@1100525000();
    VAR
      ServiceOrderBudgetLine@1100525000 : Record 11012875;
      ContractObjectMaintenance@1100525001 : Record 11071692;
    BEGIN
      ServiceOrderBudgetLine.SETRANGE("Budget Type", ServiceOrderBudgetLine."Budget Type"::Order);
      ServiceOrderBudgetLine.SETRANGE("Service Order No.", "Service Order No.");
      ServiceOrderBudgetLine.SETRANGE("Object No.", "Object No.");
      ServiceOrderBudgetLine.SETRANGE("Maintenance Scheme", "Maintenance Scheme");
      ServiceOrderBudgetLine.SETRANGE(Finished, FALSE);
      Finished := ServiceOrderBudgetLine.ISEMPTY;
      IF Finished AND ("Execution Date" = 0D) THEN
        "Execution Date" := TODAY;

      ServiceOrderBudgetLine.SETRANGE(Finished);
      ServiceOrderBudgetLine.SETRANGE("Follow-up Job", TRUE);
      "Follow-up Job" := NOT ServiceOrderBudgetLine.ISEMPTY;
      MODIFY(TRUE);

      IF ContractObjectMaintenance.GET("Service Contract No.", "Object No.", "Maintenance Scheme") THEN BEGIN
        ContractObjectMaintenance.UpdateLastAndNextMaintDate;
        ContractObjectMaintenance.MODIFY(TRUE);
      END;
    END;

    PROCEDURE VendorWillBeCharged@1100525001(IPostingDate@1100525001 : Date;VAR OBilltoVendorNo@1100525000 : Code[20]) : Boolean;
    VAR
      ServiceObject@1100525002 : Record 11071691;
    BEGIN
      IF NOT ServiceObject.GET("Object No.") THEN
        EXIT;
      EXIT(ServiceObject.VendorWillBeCharged("Service Order No.", IPostingDate, OBilltoVendorNo));
    END;

    PROCEDURE MergeDimensionValuesFirstObject@1100528601();
    VAR
      ServiceOrderObject@1100528601 : Record 11071724;
      DimensionManagement@1100528600 : Codeunit 408;
    BEGIN
      CALCFIELDS("Object Group");
      IF "Object Group" = '' THEN
        EXIT;
      ServiceOrderObject.SETRANGE("Service Order No.", "Service Order No.");
      ServiceOrderObject.SETFILTER("Object No.", '<>%1', "Object No.");
      IF ServiceOrderObject.ISEMPTY THEN
        DimensionManagement.MergeDefaultDim(
          DATABASE::"Service Group", "Object Group",
          DATABASE::"Service Order", "Service Order No.");
    END;

    PROCEDURE DetermineServiceCategory@1100528607() : Text[10];
    VAR
      ServiceOrder@1100528601 : Record 11012823;
      ContractObject@1100528600 : Record 11071702;
    BEGIN
      ServiceOrder.GET("Service Order No.");
      IF ContractObject.GET("Service Contract No.", "Object No.") THEN
        CASE ServiceOrder."Source Type" OF
          ServiceOrder."Source Type"::Call:
            EXIT(ContractObject."Service Category (Calls)");
          ServiceOrder."Source Type"::Direct:
            EXIT(ContractObject."Service Category (Add.)");
        END;
    END;

    PROCEDURE GetServicePackage@1100409000() : Code[10];
    VAR
      ServiceContract@1100409000 : Record 11012812;
      ContractObject@1100409001 : Record 11071702;
      ServicePackage@1100409002 : Record 11012806;
      ServiceOrder@1100409004 : Record 11012823;
      ServicePackageCode@1100409003 : Code[10];
    BEGIN
      IF NOT ServiceOrder.GET("Service Order No.") THEN
        EXIT;

      IF "Object No." = '' THEN
        ServicePackageCode := ServiceOrder."Service Package";

      IF ContractObject.GET(ServiceOrder."Service Contract No.", "Object No.") THEN
        ServicePackageCode := ContractObject."Service Package";

      IF NOT ServicePackage.GET(ServicePackageCode) THEN
        EXIT(ServicePackageCode);

      CASE ServiceOrder."Source Type" OF
        ServiceOrder."Source Type"::Call:
          IF ServicePackage."Service Package Call" <> '' THEN
            EXIT(ServicePackage."Service Package Call");
        ServiceOrder."Source Type"::Contract:
          IF ServicePackage."Service Package Contract" <> '' THEN
            EXIT(ServicePackage."Service Package Contract");
        ServiceOrder."Source Type"::Direct:
          IF ServicePackage."Service Package Direct" <> '' THEN
            EXIT(ServicePackage."Service Package Direct");
      END;
      EXIT(ServicePackageCode);
    END;

    LOCAL PROCEDURE UpdateServicePackageOnServiceOrder@1100528602(Action@1100528605 : 'Insert,Modify,Delete');
    VAR
      ServiceOrder@1100528600 : Record 11012823;
      ServiceObject@1100528601 : Record 11071691;
      ServiceOrderObject@1100528604 : Record 11071724;
      ServicePackageCode@1100528602 : Code[10];
      DifferentServicePackage@1100528603 : Boolean;
    BEGIN
      IF NOT ServiceOrder.GET("Service Order No.") THEN
        EXIT;
      IF NOT ServiceObject.GET("Object No.") THEN
        EXIT;
      IF Action <> Action::Delete THEN BEGIN
        ServicePackageCode := GetServicePackage;
        IF ServicePackageCode = '' THEN
          EXIT;
      END;
      ServiceOrderObject.SETRANGE("Service Order No.", "Service Order No.");
      ServiceOrderObject.SETFILTER("Object No.", '<>%1', "Object No.");
      IF ServiceOrderObject.FINDSET THEN BEGIN
        IF Action = Action::Delete THEN
          ServicePackageCode := ServiceOrderObject.GetServicePackage;
        REPEAT
          IF ServicePackageCode <> ServiceOrderObject.GetServicePackage THEN
            DifferentServicePackage := TRUE;
        UNTIL ServiceOrderObject.NEXT = 0;
        IF DifferentServicePackage THEN
          ServicePackageCode := '';
      END;
      IF (DifferentServicePackage OR (ServicePackageCode <> '')) AND (ServiceOrder."Service Package" <> ServicePackageCode) THEN BEGIN
        ServiceOrder.VALIDATE("Service Package", ServicePackageCode);
        ServiceOrder.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdatePreferredEmployeeOnServiceOrder@1100528603(Action@1100528600 : 'Insert,Modify,Delete');
    VAR
      ServiceOrder@1100528601 : Record 11012823;
      ServiceObject@1100528602 : Record 11071691;
      ServiceOrderObject@1100528603 : Record 11071724;
      PreferredEmployee@1100528604 : Record 11012843;
      DummyOption@1100528606 : Option;
      Origin@1100528605 : ' ,Call,Service Order';
      PreferredEmployeeNo@1100528607 : Code[20];
    BEGIN
      IF NOT ServiceOrder.GET("Service Order No.") THEN
        EXIT;
      IF NOT ServiceObject.GET("Object No.") THEN
        EXIT;
      ServiceOrderObject := Rec;
      IF Action = Action::Delete THEN
        IF ServiceOrderObject.NEXT = 0 THEN
          CLEAR(ServiceOrderObject);
      PreferredEmployeeNo :=
        PreferredEmployee.GetPreferredEmployee(
          "Service Contract No.", ServiceOrder."Service Location No.", ServiceOrderObject."Object No.", ServiceOrderObject."Maintenance Scheme",
          "Service Order No.", '', '', ServiceOrder."Starting Date", DummyOption, Origin::"Service Order");
      IF PreferredEmployeeNo <> '' THEN BEGIN
        ServiceOrder.VALIDATE("Preferred Employee No.", PreferredEmployeeNo);
        ServiceOrder.MODIFY(TRUE);
      END;
    END;

    PROCEDURE AddServiceOrderInspectionLines@1100528700();
    VAR
      ServiceOrder@1100528700 : Record 11012823;
      BaseServiceInspectionList@1100528702 : Record 11071930;
      ServiceInspectionManagement@1100528701 : Codeunit 11012844;
    BEGIN
      TESTFIELD("Object No.");
      IF NOT ServiceOrder.GET("Service Order No.") THEN
        EXIT;
      ServiceOrder.TESTFIELD("Source Type", ServiceOrder."Source Type"::Direct);
      IF PAGE.RUNMODAL(0, BaseServiceInspectionList) = ACTION::LookupOK THEN
        ServiceInspectionManagement.CopyBaseInspectionListToSOInspectionLine(BaseServiceInspectionList.Code, TODAY, "Service Order No.", "Object No.");
    END;

    PROCEDURE UpdateMaintenanceProposalLine@1100528604();
    VAR
      MaintenanceProposalLine@1100528601 : Record 11071696;
    BEGIN
      IF Source = Source::Maintenance THEN BEGIN
        MaintenanceProposalLine.SETCURRENTKEY("Service Contract No.", "Object No.");
        MaintenanceProposalLine.SETRANGE("Service Contract No.", "Service Contract No.");
        MaintenanceProposalLine.SETRANGE("Object No.", "Object No.");
        MaintenanceProposalLine.SETRANGE("Maintenance Scheme", "Maintenance Scheme");
        MaintenanceProposalLine.SETRANGE("Service Contract Arr. Line No.",  "Source Line No.");
        IF MaintenanceProposalLine.FINDFIRST THEN BEGIN
          MaintenanceProposalLine."Service Order No." := "Service Order No.";
          MaintenanceProposalLine.MODIFY(TRUE);
        END;
      END;
    END;

    BEGIN
    END.
  }
}

