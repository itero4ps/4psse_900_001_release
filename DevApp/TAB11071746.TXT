OBJECT Table 11071746 Service-Contract Ctrl. Period
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TestOverlappingPeriods;
               IF Code = '' THEN
                 DetermineCode;
             END;

    OnModify=BEGIN
               TESTFIELD("Date Finished", 0D);
               TestOverlappingPeriods;
               TestInUse;
             END;

    OnDelete=BEGIN
               TESTFIELD("Date Finished", 0D);
               TestInUse;
             END;

    CaptionML=ENU=Service-Contract Control Period;
    LookupPageID=Page11125253;
    DrillDownPageID=Page11125253;
  }
  FIELDS
  {
    { 10  ;   ;Service Contract No.;Code20        ;TableRelation=Service-Contract;
                                                   CaptionML=ENU=Service Contract No. }
    { 20  ;   ;Code                ;Code10        ;CaptionML=ENU=Code }
    { 30  ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                VALIDATE("Control Period Filter");
                                                              END;

                                                   CaptionML=ENU=Starting Date }
    { 40  ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                VALIDATE("Control Period Filter");
                                                              END;

                                                   CaptionML=ENU=Ending Date }
    { 50  ;   ;Date Finished       ;Date          ;CaptionML=ENU=Date Finished;
                                                   Editable=No }
    { 60  ;   ;Control Period Filter;Text250      ;OnValidate=BEGIN
                                                                "Control Period Filter" := '';
                                                                IF "Starting Date" <> 0D THEN
                                                                  "Control Period Filter" := FORMAT("Starting Date");
                                                                IF ("Starting Date" <> 0D) OR ("Ending Date" <> 0D) THEN
                                                                  "Control Period Filter" += '..';
                                                                IF "Ending Date" <> 0D THEN
                                                                  "Control Period Filter" += FORMAT("Ending Date");
                                                              END;

                                                   CaptionML=ENU=Control Period Filter;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Service Contract No.,Code               ;Clustered=Yes }
    {    ;Service Contract No.,Ending Date         }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528600 : TextConst 'ENU=%1 must exceed %2';
      Text001@1100528601 : TextConst 'ENU=No overlapping allowed';
      Text002@1210190000 : TextConst 'ENU=Period is used in Perclose Result, modify or delete not allowed';

    PROCEDURE TestOverlappingPeriods@1100528600();
    VAR
      ContractControlPeriod@1100528600 : Record 11071746;
    BEGIN
      IF ("Starting Date" = 0D) OR ("Ending Date" = 0D) THEN EXIT;
      IF "Ending Date" <= "Starting Date" THEN
        ERROR(Text000, FIELDCAPTION("Ending Date"), FIELDCAPTION("Starting Date"));
      ContractControlPeriod.SETRANGE("Service Contract No.", "Service Contract No.");
      ContractControlPeriod.SETFILTER(Code, '<>%1', Code);
      IF ContractControlPeriod.FINDSET THEN
        REPEAT
          IF NOT ((("Starting Date" < ContractControlPeriod."Starting Date") AND
                   ("Ending Date" < ContractControlPeriod."Starting Date")) OR
                  (("Starting Date" > ContractControlPeriod."Ending Date") AND
                   ("Ending Date" > ContractControlPeriod."Ending Date"))) THEN
            ERROR(Text001);
        UNTIL ContractControlPeriod.NEXT = 0;
    END;

    PROCEDURE DetermineCode@1100528601();
    BEGIN
      Code := GetNextControlPeriodCode("Service Contract No.");
    END;

    PROCEDURE UpdateControlPeriodsUntil@1100528602(IServiceContractNo@1100528600 : Code[20];IUntil@1100528601 : Date);
    VAR
      ContractControlPeriod@1100528602 : Record 11071746;
      NewContractControlPeriod@1100528604 : Record 11071746;
      ServiceContract@1100528603 : Record 11012812;
      StartingDate@1100528605 : Date;
    BEGIN
      ServiceContract.GET(IServiceContractNo);
      ServiceContract.TESTFIELD("Starting Date Control Period");
      ServiceContract.TESTFIELD("Control Period Interval");
      ContractControlPeriod.SETCURRENTKEY("Service Contract No.", "Ending Date");
      ContractControlPeriod.SETRANGE("Service Contract No.", IServiceContractNo);
      ContractControlPeriod.SETFILTER("Ending Date", '<>%1', 0D);
      IF NOT ContractControlPeriod.FINDLAST THEN
        ContractControlPeriod.INIT;

      IF ContractControlPeriod."Ending Date" < IUntil THEN BEGIN
        IF ContractControlPeriod."Ending Date" <> 0D THEN
          StartingDate := ContractControlPeriod."Ending Date" +1
        ELSE
          StartingDate := ServiceContract."Starting Date Control Period";
        REPEAT
          NewContractControlPeriod.INIT;
          NewContractControlPeriod.VALIDATE("Service Contract No.", IServiceContractNo);
          NewContractControlPeriod.Code := GetNextControlPeriodCode(IServiceContractNo);
          NewContractControlPeriod."Starting Date" := StartingDate;
          NewContractControlPeriod.VALIDATE("Ending Date", CALCDATE(ServiceContract."Control Period Interval", StartingDate) -1);
          NewContractControlPeriod.INSERT(TRUE);
          StartingDate := NewContractControlPeriod."Ending Date" +1;
        UNTIL NewContractControlPeriod."Ending Date" > IUntil;
      END;
    END;

    PROCEDURE GetNextControlPeriodCode@1100528603(IServiceContractNo@1100528601 : Code[20]) : Code[10];
    VAR
      ContractControlPeriod@1100528600 : Record 11071746;
    BEGIN
      ContractControlPeriod.SETRANGE("Service Contract No.", IServiceContractNo);
      IF NOT ContractControlPeriod.FINDLAST THEN
        EXIT('001');
      EXIT(INCSTR(ContractControlPeriod.Code));
    END;

    PROCEDURE TestInUse@1210190000();
    VAR
      ServiceContrPreclDetail@1210190000 : Record 11071767;
    BEGIN
      ServiceContrPreclDetail.SETCURRENTKEY("Service Contract No.", "Contract Control Period Code");
      ServiceContrPreclDetail.SETRANGE("Service Contract No.", "Service Contract No.");
      ServiceContrPreclDetail.SETRANGE("Contract Control Period Code", Code);
      IF NOT ServiceContrPreclDetail.ISEMPTY THEN
        ERROR(Text002);
    END;

    BEGIN
    END.
  }
}

