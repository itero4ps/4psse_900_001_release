OBJECT Table 11071750 Service Inspection Version
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Inspection Type,Code,Index Date;
    OnInsert=BEGIN
               TESTFIELD(Code);
               TESTFIELD("Index Date");

               IF "Inspection Type" IN ["Inspection Type"::"Standard Object", "Inspection Type"::"Contract Object"] THEN
                 TESTFIELD("Belongs to Scheme");

               CentralDataManagement.EditServiceInspectionVersion(Rec, 1, xRec);
             END;

    OnModify=BEGIN
               CentralDataManagement.EditServiceInspectionVersion(Rec, 2, xRec);
             END;

    OnDelete=VAR
               ServiceInspectionLine@1100528600 : Record 11071751;
               CancelledInspectionLine@1100528601 : Record 11071978;
             BEGIN
               ServiceInspectionLine.SETRANGE("Inspection Type", "Inspection Type");
               ServiceInspectionLine.SETRANGE("Service Contract No.", "Service Contract No.");
               ServiceInspectionLine.SETRANGE(Code, Code);
               ServiceInspectionLine.SETRANGE("Belongs to Scheme", "Belongs to Scheme");
               ServiceInspectionLine.SETRANGE("Belongs to Base Insp. List", "Belongs to Base Insp. List");
               ServiceInspectionLine.SETRANGE("Index Date", "Index Date");
               ServiceInspectionLine.DELETEALL(TRUE);

               CancelledInspectionLine.SETRANGE("Inspection Type", "Inspection Type");
               CancelledInspectionLine.SETRANGE("Service Contract No.", "Service Contract No.");
               CancelledInspectionLine.SETRANGE(Code, Code);
               CancelledInspectionLine.SETRANGE("Belongs to Scheme", "Belongs to Scheme");
               CancelledInspectionLine.SETRANGE("Belongs to Base Insp. List", "Belongs to Base Insp. List");
               CancelledInspectionLine.SETRANGE("Index Date", "Index Date");
               CancelledInspectionLine.DELETEALL(TRUE);

               CentralDataManagement.EditServiceInspectionVersion(Rec, 4, xRec);
             END;

    OnRename=VAR
               ServiceInspectionLine@1210190001 : Record 11071751;
               ServiceInspectionLine2@1210190000 : Record 11071751;
             BEGIN
               IF ("Index Date" <> 0D) AND ("Index Date" <> xRec."Index Date") THEN BEGIN
                 ServiceInspectionLine.SETRANGE("Inspection Type", xRec."Inspection Type");
                 ServiceInspectionLine.SETRANGE("Service Contract No.", xRec."Service Contract No.");
                 ServiceInspectionLine.SETRANGE(Code, xRec.Code);
                 ServiceInspectionLine.SETRANGE("Index Date", xRec."Index Date");
                 IF ServiceInspectionLine.FINDSET THEN
                   REPEAT
                     ServiceInspectionLine2 := ServiceInspectionLine;
                     ServiceInspectionLine2."Index Date" := "Index Date";
                     ServiceInspectionLine2.INSERT(TRUE);
                     ServiceInspectionLine.DELETE(TRUE);
                   UNTIL ServiceInspectionLine.NEXT = 0;
               END;
             END;

    CaptionML=ENU=Sevice Inspection Version;
    LookupPageID=Page11125257;
    DrillDownPageID=Page11125257;
  }
  FIELDS
  {
    { 10  ;   ;Inspection Type     ;Option        ;CaptionML=ENU=Inspection Type;
                                                   OptionCaptionML=ENU=Base Inspection List,Standard Object,Contract Object,Standard Object (Calls),Object (Calls);
                                                   OptionString=Base Inspection List,Standard Object,Contract Object,Standard Object (Calls),Object (Calls);
                                                   Editable=No }
    { 15  ;   ;Service Contract No.;Code20        ;TableRelation=Service-Contract;
                                                   CaptionML=ENU=Service Contract No.;
                                                   Editable=No }
    { 20  ;   ;Code                ;Code20        ;TableRelation=IF (Inspection Type=CONST(Base Inspection List)) "Base Service Inspection List"
                                                                 ELSE IF (Inspection Type=CONST(Standard Object)) "Standard Object"
                                                                 ELSE IF (Inspection Type=CONST(Contract Object)) "Contract Object"."Service Object No." WHERE (Service Contract No.=FIELD(Service Contract No.))
                                                                 ELSE IF (Inspection Type=CONST("Standard Object (Calls)")) "Standard Object"
                                                                 ELSE IF (Inspection Type=CONST("Object (Calls)")) Service-Object;
                                                   CaptionML=ENU=Code;
                                                   Editable=No }
    { 25  ;   ;Belongs to Scheme   ;Code20        ;TableRelation="Maintenance Scheme";
                                                   CaptionML=ENU=Belongs to Scheme;
                                                   Editable=No }
    { 27  ;   ;Maintenance Scheme Description;Text50;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Maintenance Scheme".Description WHERE (Code=FIELD(Belongs to Scheme)));
                                                   CaptionML=ENU=Maintenance Scheme Description;
                                                   Editable=No }
    { 30  ;   ;Index Date          ;Date          ;OnValidate=BEGIN
                                                                IF "Index Date" <> xRec."Index Date" THEN BEGIN
                                                                  MainRec := xRec;
                                                                  IF MainRec.FIND THEN
                                                                    CentralDataManagement.EditServiceInspectionVersion(Rec, 3, xRec);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Index Date }
    { 40  ;   ;Belongs to Base Insp. List;Code20  ;TableRelation="Base Service Inspection List";
                                                   CaptionML=ENU=Belongs to Base Inspection List;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Inspection Type,Service Contract No.,Code,Belongs to Scheme,Belongs to Base Insp. List,Index Date;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CentralDataManagement@1100528600 : Codeunit 11012010;
      MainRec@1100528601 : Record 11071750;

    PROCEDURE NewerVersionExists@1100528600() : Boolean;
    VAR
      ServiceInspectionVersion@1100528600 : Record 11071750;
    BEGIN
      ServiceInspectionVersion := Rec;
      ServiceInspectionVersion.SETRECFILTER;
      ServiceInspectionVersion.SETFILTER("Index Date", '>%1', "Index Date");
      EXIT(NOT ServiceInspectionVersion.ISEMPTY);
    END;

    PROCEDURE CopyServiceInspectionVersion@1100528601(IInspectionType@1100528600 : Option;IServiceContractNo@1100528602 : Code[20];ICode@1100528601 : Code[20];IBelongstoScheme@1100528603 : Code[20];IBelongstoBaseInspList@1100528604 : Code[20];IIndexDate@1100528605 : Date);
    VAR
      ToServiceInspectionVersion@1100528606 : Record 11071750;
      FromServiceInspectionLine@1100528607 : Record 11071751;
      ToServiceInspectionLine@1100528608 : Record 11071751;
      FromCancelledInspectionLine@1100528609 : Record 11071978;
      ToCancelledInspectionLine@1100528610 : Record 11071978;
    BEGIN
      ToServiceInspectionVersion := Rec;
      ToServiceInspectionVersion."Inspection Type" := IInspectionType;
      ToServiceInspectionVersion."Service Contract No." := IServiceContractNo;
      ToServiceInspectionVersion.Code := ICode;
      ToServiceInspectionVersion."Belongs to Scheme" := IBelongstoScheme;
      ToServiceInspectionVersion."Belongs to Base Insp. List" := IBelongstoBaseInspList;
      ToServiceInspectionVersion."Index Date" := IIndexDate;
      IF NOT ToServiceInspectionVersion.INSERT(TRUE) THEN
        EXIT;

      FromServiceInspectionLine.SETRANGE("Inspection Type", "Inspection Type");
      FromServiceInspectionLine.SETRANGE("Service Contract No.", "Service Contract No.");
      FromServiceInspectionLine.SETRANGE(Code, Code);
      FromServiceInspectionLine.SETRANGE("Belongs to Scheme", "Belongs to Scheme");
      FromServiceInspectionLine.SETRANGE("Belongs to Base Insp. List", "Belongs to Base Insp. List");
      FromServiceInspectionLine.SETRANGE("Index Date", "Index Date");
      IF FromServiceInspectionLine.FINDSET THEN
        REPEAT
          ToServiceInspectionLine := FromServiceInspectionLine;
          ToServiceInspectionLine."Inspection Type" := ToServiceInspectionVersion."Inspection Type";
          ToServiceInspectionLine."Service Contract No." := ToServiceInspectionVersion."Service Contract No.";
          ToServiceInspectionLine.Code := ToServiceInspectionVersion.Code;
          ToServiceInspectionLine."Belongs to Scheme" := ToServiceInspectionVersion."Belongs to Scheme";
          ToServiceInspectionLine."Belongs to Base Insp. List" := ToServiceInspectionVersion."Belongs to Base Insp. List";
          ToServiceInspectionLine."Index Date" := ToServiceInspectionVersion."Index Date";
          ToServiceInspectionLine.INSERT(TRUE);
        UNTIL FromServiceInspectionLine.NEXT = 0;

      IF (ToServiceInspectionVersion."Belongs to Scheme" = "Belongs to Scheme") AND
         (ToServiceInspectionVersion."Belongs to Base Insp. List" = "Belongs to Base Insp. List")
      THEN BEGIN
        FromCancelledInspectionLine.SETRANGE("Inspection Type", "Inspection Type");
        FromCancelledInspectionLine.SETRANGE("Service Contract No.", "Service Contract No.");
        FromCancelledInspectionLine.SETRANGE(Code, Code);
        FromCancelledInspectionLine.SETRANGE("Belongs to Scheme", "Belongs to Scheme");
        FromCancelledInspectionLine.SETRANGE("Belongs to Base Insp. List", "Belongs to Base Insp. List");
        FromCancelledInspectionLine.SETRANGE("Index Date", "Index Date");
        IF FromCancelledInspectionLine.FINDSET THEN
          REPEAT
            ToCancelledInspectionLine."Inspection Type" := ToServiceInspectionVersion."Inspection Type";
            ToCancelledInspectionLine."Service Contract No." := ToServiceInspectionVersion."Service Contract No.";
            ToCancelledInspectionLine.Code := ToServiceInspectionVersion.Code;
            ToCancelledInspectionLine."Belongs to Scheme" := ToServiceInspectionVersion."Belongs to Scheme";
            ToCancelledInspectionLine."Belongs to Base Insp. List" := ToServiceInspectionVersion."Belongs to Base Insp. List";
            ToCancelledInspectionLine."Index Date" := ToServiceInspectionVersion."Index Date";
            ToCancelledInspectionLine.INSERT(TRUE);
          UNTIL FromCancelledInspectionLine.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

