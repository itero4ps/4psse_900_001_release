OBJECT Table 11071751 Service Inspection Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Index Date");
               CentralDataManagement.EditServiceInspectionLine(Rec, 1, xRec);
             END;

    OnModify=BEGIN
               CentralDataManagement.EditServiceInspectionLine(Rec, 2, xRec);
             END;

    OnDelete=BEGIN
               CentralDataManagement.EditServiceInspectionLine(Rec, 4, xRec);
             END;

    CaptionML=ENU=Service Inspection Line;
  }
  FIELDS
  {
    { 10  ;   ;Inspection Type     ;Option        ;CaptionML=ENU=Inspection Type;
                                                   OptionCaptionML=ENU=Base Inspection List,Standard Object,Contract Object,Standard Object (Calls),Object (Calls);
                                                   OptionString=Base Inspection List,Standard Object,Contract Object,Standard Object (Calls),Object (Calls);
                                                   Editable=No }
    { 15  ;   ;Service Contract No.;Code20        ;TableRelation=Service-Contract;
                                                   OnValidate=BEGIN
                                                                IF "Service Contract No." <> xRec."Service Contract No." THEN BEGIN
                                                                  MainRec := xRec;
                                                                  IF MainRec.FIND THEN
                                                                    CentralDataManagement.EditServiceInspectionLine(Rec, 3, xRec);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Service Contract No.;
                                                   Editable=No }
    { 20  ;   ;Code                ;Code20        ;TableRelation=IF (Inspection Type=CONST(Base Inspection List)) "Base Service Inspection List"
                                                                 ELSE IF (Inspection Type=CONST(Standard Object)) "Standard Object"
                                                                 ELSE IF (Inspection Type=CONST(Contract Object)) "Contract Object"."Service Object No." WHERE (Service Contract No.=FIELD(Service Contract No.))
                                                                 ELSE IF (Inspection Type=CONST("Standard Object (Calls)")) "Standard Object"
                                                                 ELSE IF (Inspection Type=CONST("Object (Calls)")) Service-Object;
                                                   OnValidate=BEGIN
                                                                IF Code <> xRec.Code THEN BEGIN
                                                                  MainRec := xRec;
                                                                  IF MainRec.FIND THEN
                                                                    CentralDataManagement.EditServiceInspectionLine(Rec, 3, xRec);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Code;
                                                   Editable=No }
    { 25  ;   ;Belongs to Scheme   ;Code20        ;TableRelation="Maintenance Scheme";
                                                   OnValidate=BEGIN
                                                                IF "Belongs to Scheme" <> xRec."Belongs to Scheme" THEN BEGIN
                                                                  MainRec := xRec;
                                                                  IF MainRec.FIND THEN
                                                                    CentralDataManagement.EditServiceInspectionLine(Rec, 3, xRec);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Belongs to Scheme;
                                                   Editable=No }
    { 30  ;   ;Index Date          ;Date          ;OnValidate=BEGIN
                                                                IF "Index Date" <> xRec."Index Date" THEN BEGIN
                                                                  MainRec := xRec;
                                                                  IF MainRec.FIND THEN
                                                                    CentralDataManagement.EditServiceInspectionLine(Rec, 3, xRec);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Index Date;
                                                   Editable=No }
    { 40  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 50  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF (xRec.Type <> Type) AND (Type = Type::Group) THEN BEGIN
                                                                  "Field Type" := "Field Type"::" ";
                                                                  "Unit Of Measure" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Group,Line;
                                                   OptionString=Group,Line }
    { 60  ;   ;Inspection Code     ;Code10        ;TableRelation=IF (Type=CONST(Group)) "Service Inspection Group"
                                                                 ELSE IF (Type=CONST(Line)) "Base Service Inspection Line";
                                                   OnValidate=VAR
                                                                ServiceInspectionGroup@1100528601 : Record 11071747;
                                                                BaseServiceInspectionLine@1100528600 : Record 11071748;
                                                              BEGIN
                                                                CASE Type OF
                                                                  Type::Group:
                                                                    BEGIN
                                                                      ServiceInspectionGroup.GET("Inspection Code");
                                                                      VALIDATE(Description, ServiceInspectionGroup.Description);
                                                                    END;
                                                                  Type::Line:
                                                                    BEGIN
                                                                      BaseServiceInspectionLine.GET("Inspection Code");
                                                                      VALIDATE(Description, BaseServiceInspectionLine.Description);
                                                                      VALIDATE("Field Type", BaseServiceInspectionLine."Field Type");
                                                                      VALIDATE("Unit Of Measure", BaseServiceInspectionLine."Unit Of Measure");
                                                                      VALIDATE(Mandatory, BaseServiceInspectionLine.Mandatory);
                                                                    END;
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              ServiceInspectionGroup@1100528601 : Record 11071747;
                                                              BaseServiceInspectionLine@1100528600 : Record 11071748;
                                                              ServiceInspectionGroupCode@1100528602 : Code[10];
                                                            BEGIN
                                                              CASE Type OF
                                                                Type::Group:
                                                                  BEGIN
                                                                    IF ServiceInspectionGroup.GET("Inspection Code") THEN;
                                                                    IF PAGE.RUNMODAL(0, ServiceInspectionGroup) = ACTION::LookupOK THEN
                                                                      VALIDATE("Inspection Code", ServiceInspectionGroup.Code);
                                                                  END;
                                                                Type::Line:
                                                                  BEGIN
                                                                    ServiceInspectionGroupCode := GetServiceInspectionGroupCode;
                                                                    IF ServiceInspectionGroupCode <> '' THEN
                                                                      BaseServiceInspectionLine.SETFILTER("Inspection Group Code", '%1|%2', '', ServiceInspectionGroupCode);
                                                                    IF BaseServiceInspectionLine.GET("Inspection Code") THEN;
                                                                    IF PAGE.RUNMODAL(0, BaseServiceInspectionLine) = ACTION::LookupOK THEN
                                                                      VALIDATE("Inspection Code", BaseServiceInspectionLine.Code);
                                                                  END;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Inspection Code }
    { 70  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 80  ;   ;Field Type          ;Option        ;OnValidate=BEGIN
                                                                IF "Field Type" = "Field Type"::" " THEN
                                                                  TESTFIELD(Type, Type::Group);

                                                                IF (CurrFieldNo = FIELDNO("Field Type")) AND
                                                                   ((("Field Type" IN ["Field Type"::Option, "Field Type"::"Yes/No"]) OR
                                                                     (xRec."Field Type" IN ["Field Type"::Option, "Field Type"::"Yes/No"])) AND
                                                                    ("Field Type" <> xRec."Field Type"))
                                                                THEN
                                                                  ERROR(Text000, FIELDCAPTION("Field Type"));
                                                              END;

                                                   CaptionML=ENU=Field Type;
                                                   OptionCaptionML=ENU="Date,Value,Text,Option,Yes/No,,,,, ";
                                                   OptionString=[Date,Value,Text,Option,Yes/No,,,,, ] }
    { 90  ;   ;Unit Of Measure     ;Code10        ;TableRelation="Unit of Measure";
                                                   CaptionML=ENU=Unit Of Measure }
    { 100 ;   ;Mandatory           ;Boolean       ;CaptionML=ENU=Mandatory }
    { 110 ;   ;Belongs to Base Insp. List;Code20  ;TableRelation="Base Service Inspection List";
                                                   CaptionML=ENU=Belongs to Base Inspection List }
    { 120 ;   ;Inspection Group Code;Code10       ;TableRelation="Service Inspection Group";
                                                   CaptionML=ENU=Inspection Group Code;
                                                   Description=Used as buffer;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Inspection Type,Service Contract No.,Code,Belongs to Scheme,Belongs to Base Insp. List,Index Date,Line No.;
                                                   Clustered=Yes }
    {    ;Inspection Group Code,Line No.           }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CentralDataManagement@1100528600 : Codeunit 11012010;
      MainRec@1100528601 : Record 11071751;
      Text000@1100525000 : TextConst 'ENU=%1 of type Option or Yes/No can only be modified on base level.';
      Text001@1100528603 : TextConst 'ENU=Cancel %1 not allowed for Base Inspection List';
      Text002@1100528602 : TextConst 'ENU=Can not modify line on this level';

    PROCEDURE GetServiceInspectionGroupCode@1100528601() : Code[10];
    VAR
      ServiceInspectionLine@1100528600 : Record 11071751;
    BEGIN
      ServiceInspectionLine := Rec;
      ServiceInspectionLine.SETRECFILTER;
      ServiceInspectionLine.SETFILTER("Line No.", '<%1', "Line No.");
      ServiceInspectionLine.SETRANGE(Type, ServiceInspectionLine.Type::Group);
      IF ServiceInspectionLine.FINDLAST THEN
        EXIT(ServiceInspectionLine."Inspection Code");
    END;

    PROCEDURE SetAsCancelled@1100528606(ICancelled@1100528600 : Boolean;ILevelInspectionType@1100528602 : 'Base Inspection List,Standard Object,Contract Object,Standard Object (Calls),Object (Calls)';ILevelServiceContractNo@1100528606 : Code[20];ILevelCode@1100528603 : Code[20];ILevelBelongstoScheme@1100528607 : Code[20];ILevelBelongstoInspList@1100528608 : Code[20];ILevelIndexDate@1100528604 : Date);
    VAR
      CancelledInspectionLine@1100528601 : Record 11071978;
      ServiceInspectionLine@1100528605 : Record 11071751;
    BEGIN
      IF ICancelled THEN
        IF ILevelInspectionType = ILevelInspectionType::"Base Inspection List" THEN
          ERROR(Text001, ServiceInspectionLine.TABLECAPTION);
      IF NOT ICancelled THEN BEGIN
        CASE ILevelInspectionType OF
          ILevelInspectionType::"Contract Object",
          ILevelInspectionType::"Object (Calls)":
            IF "Inspection Type" <> "Inspection Type"::"Standard Object" THEN
              IF NOT CancelledInspectionLine.GET(
                ILevelInspectionType, ILevelServiceContractNo, ILevelCode, ILevelBelongstoScheme,
                ILevelBelongstoInspList, ILevelIndexDate,
                "Inspection Type", "Service Contract No.", Code, "Line No.", "Belongs to Scheme",
                "Belongs to Base Insp. List")
              THEN
                ERROR(Text002);
          ILevelInspectionType::"Standard Object",
          ILevelInspectionType::"Standard Object (Calls)":
            IF "Inspection Type" <> "Inspection Type"::"Base Inspection List" THEN
              ERROR(Text002);
        END;
      END;
      IF ICancelled THEN BEGIN
        CancelledInspectionLine."Inspection Type" := ILevelInspectionType;
        CancelledInspectionLine."Service Contract No." := ILevelServiceContractNo;
        CancelledInspectionLine.Code := ILevelCode;
        CancelledInspectionLine."Belongs to Scheme" := ILevelBelongstoScheme;
        CancelledInspectionLine."Belongs to Base Insp. List" := ILevelBelongstoInspList;
        CancelledInspectionLine."Index Date" := ILevelIndexDate;
        CancelledInspectionLine."Inspection Type (Cancelled)" := "Inspection Type";
        CancelledInspectionLine."Serv. Contract No. (Cancelled)" := "Service Contract No.";
        CancelledInspectionLine."Code (Cancelled)" := Code;
        CancelledInspectionLine."Line No. (Cancelled)" := "Line No.";
        CancelledInspectionLine."Belongs to Scheme (Cancelled)" := "Belongs to Scheme";
        CancelledInspectionLine."Belongs to Base Insp. List (Ca" := "Belongs to Base Insp. List";
        CancelledInspectionLine.INSERT(TRUE);
      END ELSE BEGIN
        IF CancelledInspectionLine.GET(
          ILevelInspectionType, ILevelServiceContractNo, ILevelCode, ILevelBelongstoScheme, ILevelBelongstoInspList, ILevelIndexDate,
          "Inspection Type", "Service Contract No.", Code, "Line No.", "Belongs to Scheme", "Belongs to Base Insp. List")
        THEN
          CancelledInspectionLine.DELETE(TRUE);
      END;
    END;

    PROCEDURE IsCancelled@1100528605(ILevelInspectionType@1100528604 : 'Base Inspection List,Standard Object,Contract Object,Standard Object (Calls),Object (Calls)';ILevelServiceContractNo@1100528602 : Code[20];ILevelCode@1100528603 : Code[20];ILevelBelongstoScheme@1100528609 : Code[20];ILevelBelongstoInspList@1100528610 : Code[20];ILevelIndexDate@1100528608 : Date;ILowerLevelSeekDate@1100528601 : Date;VAR OCancellationLevel@1100528607 : ' ,Base Inspection List,Standard Object,Contract Object,Standard Object (Calls),Object (Calls)') : Boolean;
    VAR
      CancelledInspectionLine@1100528600 : Record 11071978;
      ServiceObject@1100528606 : Record 11071691;
      ServiceInspectionVersion@1100528605 : Record 11071750;
    BEGIN
      OCancellationLevel := OCancellationLevel::" ";
      CASE ILevelInspectionType OF
        ILevelInspectionType::"Contract Object":
          BEGIN
            ServiceInspectionVersion.SETRANGE("Inspection Type", ILevelInspectionType);
            ServiceInspectionVersion.SETRANGE("Service Contract No.", ILevelServiceContractNo);
            ServiceInspectionVersion.SETRANGE(Code, ILevelCode);
            ServiceInspectionVersion.SETRANGE("Belongs to Scheme", ILevelBelongstoScheme);
            ServiceInspectionVersion.SETRANGE("Belongs to Base Insp. List", ILevelBelongstoInspList);
            ServiceInspectionVersion.SETFILTER("Index Date", '<=%1', ILevelIndexDate);
      //      ServiceInspectionVersion.SETRANGE(Expired, FALSE);
            IF ServiceInspectionVersion.FINDLAST THEN BEGIN
              IF CancelledInspectionLine.GET(
                ServiceInspectionVersion."Inspection Type", ServiceInspectionVersion."Service Contract No.",
                ServiceInspectionVersion.Code, ServiceInspectionVersion."Belongs to Scheme",
                ServiceInspectionVersion."Belongs to Base Insp. List", ServiceInspectionVersion."Index Date",
                "Inspection Type", "Service Contract No.", Code, "Line No.", "Belongs to Scheme", "Belongs to Base Insp. List")
              THEN BEGIN
                OCancellationLevel := ILevelInspectionType +1;
                EXIT(TRUE);
              END;
            END;

            IF ServiceObject.GET(ILevelCode) THEN BEGIN
              ServiceInspectionVersion.SETRANGE("Inspection Type", ServiceInspectionVersion."Inspection Type"::"Standard Object");
              ServiceInspectionVersion.SETRANGE("Service Contract No.", '');
              ServiceInspectionVersion.SETRANGE(Code, ServiceObject."Standard Object No.");
              ServiceInspectionVersion.SETRANGE("Belongs to Scheme", ILevelBelongstoScheme);
              ServiceInspectionVersion.SETRANGE("Belongs to Base Insp. List", ILevelBelongstoInspList);
              ServiceInspectionVersion.SETFILTER("Index Date", '<=%1', ILowerLevelSeekDate);
              IF ServiceInspectionVersion.FINDLAST THEN BEGIN
                IF CancelledInspectionLine.GET(
                  ServiceInspectionVersion."Inspection Type", ServiceInspectionVersion."Service Contract No.",
                  ServiceInspectionVersion.Code, ServiceInspectionVersion."Belongs to Scheme",
                  ServiceInspectionVersion."Belongs to Base Insp. List", ServiceInspectionVersion."Index Date",
                  "Inspection Type", "Service Contract No.", Code, "Line No.", "Belongs to Scheme", "Belongs to Base Insp. List")
                THEN BEGIN
                  OCancellationLevel := ServiceInspectionVersion."Inspection Type" +1;
                  EXIT(TRUE);
                END;
              END;
            END;
          END;
        ILevelInspectionType::"Standard Object":
          BEGIN
            ServiceInspectionVersion.SETRANGE("Inspection Type", ILevelInspectionType);
            ServiceInspectionVersion.SETRANGE("Service Contract No.", '');
            ServiceInspectionVersion.SETRANGE(Code, ILevelCode);
            ServiceInspectionVersion.SETRANGE("Belongs to Scheme", ILevelBelongstoScheme);
            ServiceInspectionVersion.SETRANGE("Belongs to Base Insp. List", ILevelBelongstoInspList);
            ServiceInspectionVersion.SETFILTER("Index Date", '<=%1', ILevelIndexDate);
            IF ServiceInspectionVersion.FINDLAST THEN BEGIN
              IF CancelledInspectionLine.GET(
                ServiceInspectionVersion."Inspection Type", ServiceInspectionVersion."Service Contract No.",
                ServiceInspectionVersion.Code, ServiceInspectionVersion."Belongs to Scheme",
                ServiceInspectionVersion."Belongs to Base Insp. List", ServiceInspectionVersion."Index Date",
                "Inspection Type", "Service Contract No.", Code, "Line No.", "Belongs to Scheme", "Belongs to Base Insp. List")
              THEN BEGIN
                OCancellationLevel := ILevelInspectionType +1;
                EXIT(TRUE);
              END;
            END;
          END;
        ILevelInspectionType::"Object (Calls)":
          BEGIN
            ServiceInspectionVersion.SETRANGE("Inspection Type", ILevelInspectionType);
            ServiceInspectionVersion.SETRANGE("Service Contract No.", '');
            ServiceInspectionVersion.SETRANGE(Code, ILevelCode);
            ServiceInspectionVersion.SETRANGE("Belongs to Scheme", '');
            ServiceInspectionVersion.SETRANGE("Belongs to Base Insp. List", '');
            ServiceInspectionVersion.SETFILTER("Index Date", '<=%1', ILevelIndexDate);
            IF ServiceInspectionVersion.FINDLAST THEN BEGIN
              IF CancelledInspectionLine.GET(
                ServiceInspectionVersion."Inspection Type", ServiceInspectionVersion."Service Contract No.",
                ServiceInspectionVersion.Code, '', '', ServiceInspectionVersion."Index Date",
                "Inspection Type", "Service Contract No.", Code, "Line No.", "Belongs to Scheme", '')
              THEN BEGIN
                OCancellationLevel := ILevelInspectionType +1;
                EXIT(TRUE);
              END;
            END;
          END;
      END;
    END;

    BEGIN
    END.
  }
}

