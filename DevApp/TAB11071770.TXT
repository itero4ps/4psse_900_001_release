OBJECT Table 11071770 SUP Internal Budget Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnRename=BEGIN
               ERROR(Text006);
             END;

    CaptionML=ENU=SUP Internal Budget Line;
    LookupPageID=Page11125289;
    DrillDownPageID=Page11125289;
  }
  FIELDS
  {
    { 10  ;   ;Price Book Type     ;Option        ;CaptionML=ENU=Price Book Type;
                                                   OptionCaptionML=ENU=,Internal,Customer;
                                                   OptionString=,Internal,Customer;
                                                   NotBlank=Yes }
    { 20  ;   ;Price Book Code     ;Code20        ;TableRelation="Service Price Book".Code;
                                                   OnValidate=VAR
                                                                ServicePriceBook@1100528600 : Record 11071768;
                                                              BEGIN
                                                                IF "Price Book Code" <> '' THEN
                                                                  IF ServicePriceBook.GET("Price Book Code", "Index Date") THEN
                                                                    "Price Book Type" := ServicePriceBook.Type;
                                                              END;

                                                   OnLookup=VAR
                                                              ServicePriceBook@1100528600 : Record 11071768;
                                                              ServicePriceBookList@1100528601 : Page 11125269;
                                                            BEGIN
                                                              ServicePriceBookList.LOOKUPMODE(TRUE);
                                                              ServicePriceBookList.SETTABLEVIEW(ServicePriceBook);
                                                              IF ServicePriceBookList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                ServicePriceBookList.GETRECORD(ServicePriceBook);
                                                                "Price Book Code" := ServicePriceBook.Code;
                                                                "Index Date" := ServicePriceBook."Index Date";
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Price Book Code;
                                                   NotBlank=Yes }
    { 30  ;   ;Index Date          ;Date          ;OnValidate=BEGIN
                                                                CASE "Cost Type" OF
                                                                  "Cost Type"::Labor:
                                                                    VALIDATE("Rate Code");
                                                                  "Cost Type"::Material:
                                                                    BEGIN
                                                                      IF "Trade Item" <> '' THEN
                                                                        UpdateItemPrice(ItemTypeOpt::"Trade Item")
                                                                      ELSE
                                                                        IF "Basic Item" <> '' THEN
                                                                          UpdateItemPrice(ItemTypeOpt::"Basic Item")
                                                                        ELSE
                                                                          IF "Item No." <> '' THEN
                                                                            UpdateItemPrice(ItemTypeOpt::Item);
                                                                    END;
                                                                END;

                                                                CalcTotals;
                                                              END;

                                                   CaptionML=ENU=Index Date;
                                                   NotBlank=Yes }
    { 40  ;   ;Unit Price Code     ;Code20        ;TableRelation="Service Unit Price".Code WHERE (Price Book Type=FIELD(Price Book Type),
                                                                                                  Price Book Code=FIELD(Price Book Code),
                                                                                                  Index Date=FIELD(Index Date));
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Unit Price Code;
                                                   NotBlank=Yes }
    { 50  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No.;
                                                   Editable=No }
    { 60  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 70  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 80  ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure".Code;
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO("Unit of Measure") THEN BEGIN
                                                                  IF ("Cost Type" = "Cost Type"::Material) THEN
                                                                    IF "Unit of Measure" <>  xRec."Unit of Measure" THEN
                                                                      CheckItemUnitConversion(Rec, xRec);
                                                                  CalcTotals;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Unit of Measure }
    { 90  ;   ;Norm                ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Cost Type" = "Cost Type"::Labor) OR ("Cost Type" = "Cost Type"::Subcontracting) THEN
                                                                  CalcTotals
                                                                ELSE BEGIN
                                                                  MESSAGE(Text002, FIELDCAPTION("Cost Type"), "Cost Type", FIELDCAPTION(Norm));
                                                                  Norm := 0;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Norm;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 100 ;   ;Rate Code           ;Code10        ;TableRelation="Budget Rate";
                                                   OnValidate=VAR
                                                                BudgetRate@1100485003 : Record 11012000;
                                                                lvDate@1100528600 : Date;
                                                              BEGIN
                                                                IF ("Cost Type" = "Cost Type"::Labor) OR ("Cost Type" = "Cost Type"::Subcontracting) THEN BEGIN
                                                                  IF "Index Date" = 0D THEN
                                                                    lvDate := TODAY
                                                                  ELSE
                                                                    lvDate := "Index Date";
                                                                  Rate := 0;
                                                                  BudgetRate.SETRANGE(Code,"Rate Code");
                                                                  BudgetRate.SETRANGE("Starting Date", 0D, lvDate);
                                                                  IF BudgetRate.FINDLAST THEN
                                                                    Rate := BudgetRate.Rate;
                                                                  IF ("Cost Type" = "Cost Type"::Subcontracting) THEN BEGIN
                                                                    "Cost Price" := Norm * Rate;
                                                                    Rate := 0;
                                                                  END;
                                                                  CalcTotals;
                                                                END ELSE BEGIN
                                                                  MESSAGE(Text002, FIELDCAPTION("Cost Type"), "Cost Type", FIELDCAPTION("Rate Code"));
                                                                  "Rate Code" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Rate Code }
    { 110 ;   ;Rate                ;Decimal       ;OnValidate=BEGIN
                                                                //kzwerver, 140212, c, #C011301
                                                                IF ("Cost Type" = "Cost Type"::Labor) OR ("Cost Type" = "Cost Type"::Subcontracting) THEN BEGIN
                                                                  CalcTotals;
                                                                END ELSE BEGIN
                                                                  MESSAGE(Text002, FIELDCAPTION("Cost Type"), "Cost Type", FIELDCAPTION(Rate));
                                                                  Rate := 0;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Rate;
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 120 ;   ;Cost Price          ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Cost Type" = "Cost Type"::Labor) THEN BEGIN
                                                                  MESSAGE(Text002, FIELDCAPTION("Cost Type"), "Cost Type", FIELDCAPTION("Cost Price"));
                                                                  "Cost Price" := 0;
                                                                END ELSE BEGIN
                                                                  CalcDiscount;
                                                                  CalcTotals;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Price;
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 130 ;   ;Gross Price         ;Decimal       ;OnValidate=BEGIN
                                                                CalculateNettPrice;
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=ENU=Gross Price;
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 140 ;   ;Purchase Discount % ;Decimal       ;OnValidate=BEGIN
                                                                CalculateNettPrice;
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=ENU=Purchase Discount %;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 150 ;   ;Amount              ;Decimal       ;CaptionML=ENU=Amount;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 160 ;   ;Hours               ;Decimal       ;CaptionML=ENU=Hours;
                                                   Editable=No }
    { 170 ;   ;Cost Type           ;Option        ;OnValidate=BEGIN
                                                                IF "Cost Object" <> '' THEN BEGIN
                                                                  IF "Cost Type" <> xRec."Cost Type" THEN
                                                                    IF CONFIRM(Text004,TRUE) THEN BEGIN
                                                                      "Cost Object" := '';
                                                                      "Item No." := '';
                                                                      "Basic Item" := '';
                                                                      "Trade Item" := '';
                                                                      Manufacturer := '';
                                                                      "Vendor (Trade Item)" := '';
                                                                    END ELSE BEGIN
                                                                      "Cost Type" := xRec."Cost Type";
                                                                      EXIT;
                                                                    END;
                                                                END;
                                                                IF ("Cost Type" = "Cost Type"::Labor) THEN BEGIN
                                                                  "Cost Price" := 0;
                                                                END ELSE BEGIN
                                                                  "Rate Code" := '';
                                                                  Rate := 0;
                                                                  Norm := 0;
                                                                END;
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=ENU=Cost Type;
                                                   OptionCaptionML=ENU=Labor,Material,Subcontracting,Plant,Sundry;
                                                   OptionString=Labor,Material,Subcontracting,Plant,Sundry }
    { 180 ;   ;Cost Object         ;Code20        ;TableRelation=IF (Cost Type=CONST(Labor)) "Dimension Value".Code WHERE (Cost Type=FILTER(Labor),
                                                                                                                           Global Dimension No.=CONST(2))
                                                                                                                           ELSE IF (Cost Type=CONST(Material)) "Dimension Value".Code WHERE (Cost Type=FILTER(Material),
                                                                                                                                                                                             Global Dimension No.=CONST(2))
                                                                                                                                                                                             ELSE IF (Cost Type=CONST(Plant)) "Dimension Value".Code WHERE (Cost Type=FILTER(Plant),
                                                                                                                                                                                                                                                            Global Dimension No.=CONST(2))
                                                                                                                                                                                                                                                            ELSE IF (Cost Type=CONST(Subcontracting)) "Dimension Value".Code WHERE (Cost Type=FILTER(Subcontracting),
                                                                                                                                                                                                                                                                                                                                    Global Dimension No.=CONST(2))
                                                                                                                                                                                                                                                                                                                                    ELSE IF (Cost Type=CONST(Sundry)) "Dimension Value".Code WHERE (Cost Type=FILTER(Sundry),
                                                                                                                                                                                                                                                                                                                                                                                                    Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                IF ("Cost Object" <> '') AND ("Item No." + "Trade Item" + "Basic Item" = '') THEN  //db, 17-04-08
                                                                  IF xRec."Cost Object" = '' THEN
                                                                    GetDefaultsCostObject()
                                                                  ELSE
                                                                    IF "Cost Object" <> xRec."Cost Object" THEN
                                                                      IF CONFIRM(
                                                                        Text000 +
                                                                        Text001)
                                                                      THEN
                                                                        GetDefaultsCostObject();
                                                              END;

                                                   CaptionML=ENU=Cost Object }
    { 190 ;   ;Cost Component      ;Code20        ;TableRelation="Cost Component".Code;
                                                   CaptionML=ENU=Cost Component }
    { 200 ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                IF ("Item No." <> xRec."Item No.") AND ("Item No." <> '') THEN
                                                                  ValidateItem(ItemTypeOpt::Item);
                                                              END;

                                                   CaptionML=ENU=Item No. }
    { 210 ;   ;Basic Item          ;Code20        ;TableRelation="Basic Item"."Product Code" WHERE (Manufacturer=FIELD(Manufacturer));
                                                   OnValidate=BEGIN
                                                                IF ("Basic Item" <> xRec."Basic Item") AND ("Basic Item" <> '') THEN
                                                                  ValidateItem(ItemTypeOpt::"Basic Item");
                                                              END;

                                                   CaptionML=ENU=Basic Item }
    { 220 ;   ;Trade Item          ;Code20        ;TableRelation="Trade Item"."Item Code" WHERE (Vendor=FIELD("Vendor (Trade Item)"));
                                                   OnValidate=BEGIN
                                                                IF ("Trade Item" <> xRec."Trade Item") AND ("Trade Item" <> '') THEN
                                                                  ValidateItem(ItemTypeOpt::"Trade Item");
                                                              END;

                                                   CaptionML=ENU=Trade Item }
    { 230 ;   ;Vendor (Trade Item) ;Code15        ;TableRelation="ETIM Vendor (Central Mgt)";
                                                   OnValidate=VAR
                                                                TradeItemRec@1100525000 : Record 11012317;
                                                                lvExecValidate@1100485000 : Boolean;
                                                              BEGIN
                                                                IF ("Vendor (Trade Item)" <> xRec."Vendor (Trade Item)") AND ("Vendor (Trade Item)" <> '') THEN BEGIN
                                                                  IF "Basic Item" <> '' THEN BEGIN
                                                                    "Trade Item" := '';
                                                                    lvExecValidate := TRUE;
                                                                  END;
                                                                  IF "Trade Item" <> '' THEN BEGIN
                                                                    VALIDATE("Trade Item");
                                                                    lvExecValidate := TRUE;
                                                                  END;
                                                                  IF lvExecValidate THEN BEGIN
                                                                    IF TradeItemRec.CheckReplaceVendor(
                                                                      xRec."Vendor (Trade Item)", xRec."Trade Item",
                                                                      "Vendor (Trade Item)", "Trade Item") THEN
                                                                      ValidateItem(ItemTypeOpt::"Trade Item")
                                                                    ELSE
                                                                      ValidateItem(ItemTypeOpt::"Trade Vendor");
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Vendor (Trade Item) }
    { 240 ;   ;Manufacturer        ;Code15        ;TableRelation="ETIM Vendor (Central Mgt)";
                                                   CaptionML=ENU=Manufacturer }
    { 250 ;   ;Labor               ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("SUP Internal Budget Line".Amount WHERE (Cost Type=CONST(Labor),
                                                                                                            Price Book Code=FIELD(Price Book Code),
                                                                                                            Index Date=FIELD(Index Date),
                                                                                                            Unit Price Code=FIELD(Unit Price Code)));
                                                   CaptionML=ENU=Labor;
                                                   Editable=No }
    { 260 ;   ;Material            ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("SUP Internal Budget Line".Amount WHERE (Cost Type=CONST(Material),
                                                                                                            Price Book Code=FIELD(Price Book Code),
                                                                                                            Index Date=FIELD(Index Date),
                                                                                                            Unit Price Code=FIELD(Unit Price Code)));
                                                   CaptionML=ENU=Material;
                                                   Editable=No }
    { 270 ;   ;Subcontracting      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("SUP Internal Budget Line".Amount WHERE (Cost Type=CONST(Subcontracting),
                                                                                                            Price Book Code=FIELD(Price Book Code),
                                                                                                            Index Date=FIELD(Index Date),
                                                                                                            Unit Price Code=FIELD(Unit Price Code)));
                                                   CaptionML=ENU=Subcontracting;
                                                   Editable=No }
    { 280 ;   ;Plant               ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("SUP Internal Budget Line".Amount WHERE (Cost Type=CONST(Plant),
                                                                                                            Price Book Code=FIELD(Price Book Code),
                                                                                                            Index Date=FIELD(Index Date),
                                                                                                            Unit Price Code=FIELD(Unit Price Code)));
                                                   CaptionML=ENU=Plant;
                                                   Editable=No }
    { 290 ;   ;Sundry              ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("SUP Internal Budget Line".Amount WHERE (Cost Type=CONST(Sundry),
                                                                                                            Price Book Code=FIELD(Price Book Code),
                                                                                                            Index Date=FIELD(Index Date),
                                                                                                            Unit Price Code=FIELD(Unit Price Code)));
                                                   CaptionML=ENU=Sundry;
                                                   Editable=No }
    { 300 ;   ;Total               ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("SUP Internal Budget Line".Amount WHERE (Price Book Code=FIELD(Price Book Code),
                                                                                                            Index Date=FIELD(Index Date),
                                                                                                            Unit Price Code=FIELD(Unit Price Code)));
                                                   CaptionML=ENU=Total;
                                                   Editable=No }
    { 310 ;   ;Total Hours         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("SUP Internal Budget Line".Hours WHERE (Cost Type=CONST(Labor),
                                                                                                           Price Book Code=FIELD(Price Book Code),
                                                                                                           Index Date=FIELD(Index Date),
                                                                                                           Unit Price Code=FIELD(Unit Price Code)));
                                                   CaptionML=ENU=Total Hours;
                                                   Editable=No }
    { 320 ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group".Code;
                                                   CaptionML=ENU=VAT Prod. Posting Group }
  }
  KEYS
  {
    {    ;Price Book Code,Index Date,Unit Price Code,Line No.;
                                                   SumIndexFields=Amount;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Cost Type                               ;SumIndexFields=Amount,Hours }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ItemTypeOpt@1100528600 : 'Item,Basic Item,Trade Item,Trade Vendor';
      Text000@1100528606 : TextConst 'ENU=Copy Data from new Cost Object?\\';
      Text001@1100528605 : TextConst 'ENU=Empty fields only will be updated. Existing data will not be overruled.';
      Text002@1100528604 : TextConst 'ENU=%1 of Line is %2, input of %3 not allowed';
      Text004@1100528602 : TextConst 'ENU=Change Cost Type ?';
      Text006@1100528607 : TextConst 'ENU=Rename is not allowed.';

    PROCEDURE ValidateItem@31(LTypeArtOpt@11012000 : 'Item,Basic Item,Trade Item');
    VAR
      DummyDat@11012001 : Date;
      lvRefDate@1100485003 : Date;
      lvDiscRef1@1100485002 : Code[20];
      lvDiscRef2@1100485001 : Code[20];
      Description2@1100528600 : Text[50];
      ValidateCu@1100528601 : Codeunit 11012033;
    BEGIN
      ValidateCu.ValidateItem(
        LTypeArtOpt,"Trade Item","Item No.",Manufacturer,"Vendor (Trade Item)",
        "Basic Item","Cost Object",Description,"Unit of Measure","Cost Price",
        "Purchase Discount %",DummyDat,"Gross Price",Description2,"Cost Component",
        lvDiscRef1, lvDiscRef2, lvRefDate, '');

      VALIDATE("Cost Component");
    END;

    PROCEDURE UnitPriceLineLookup@1100528602();
    VAR
      ServiceUnitPrice@1100528600 : Record 11071769;
    BEGIN
      IF "Price Book Code" <> '' THEN
        ServiceUnitPrice.SETRANGE("Price Book Code", "Price Book Code");
      IF "Index Date" <> 0D THEN
        ServiceUnitPrice.SETRANGE("Index Date", "Index Date");
      PAGE.RUNMODAL(0, ServiceUnitPrice);
    END;

    PROCEDURE CalcTotals@1();
    BEGIN
      Hours := ROUND(Quantity * Norm);

      IF "Cost Type" = "Cost Type"::Labor THEN BEGIN
        IF Rate = 0 THEN BEGIN
          Amount := ROUND(Quantity * "Cost Price");
        END ELSE BEGIN
          Amount := ROUND(Quantity * Norm * Rate);
        END;
      END ELSE BEGIN
        Amount := ROUND(Quantity * "Cost Price");
      END;

      CALCFIELDS(Labor, Material, Subcontracting, Plant, Sundry, Total, "Total Hours");
    END;

    PROCEDURE CalcDiscount@1100485004();
    BEGIN
      IF "Gross Price" <> 0 THEN BEGIN
        "Purchase Discount %" := (("Gross Price" - "Cost Price") / "Gross Price") * 100;
      END;
    END;

    PROCEDURE GetDefaultsCostObject@3();
    VAR
      DimValRec@1100525000 : Record 349;
      DimMgt@1100525001 : Codeunit 408;
    BEGIN
      DimMgt.GetDimValueRec(2, "Cost Object", DimValRec, TRUE,'');

      IF Description = '' THEN
        Description := DimValRec.Name;
      IF "Unit of Measure" = '' THEN
        "Unit of Measure" := DimValRec."Unit of Measure";
      IF "Cost Component" = '' THEN
        "Cost Component" := DimValRec."Cost Component";

      "Cost Type" := DimValRec."Cost Type";
      CASE "Cost Type" OF
        "Cost Type"::Labor:
          BEGIN
            IF Norm = 0 THEN
              Norm := DimValRec.Norm;
            IF ("Rate Code" = '') AND (Rate = 0) THEN
              VALIDATE("Rate Code", DimValRec."Rate Code");
          END;
        ELSE
          IF "Cost Price" = 0 THEN
            "Cost Price" := DimValRec.Price;
      END;
      CalcTotals;
    END;

    PROCEDURE CheckItemUnitConversion@1210190010(VAR MainNewRec@1210190006 : Record 11071770;MainOldRec@1210190007 : Record 11071770);
    VAR
      ItemRec@1210190004 : Record 27;
      UnitFactor@1210190005 : Decimal;
      UnitFactorOld@1210190003 : Decimal;
      UnitFactorNew@1210190002 : Decimal;
      UnitControl@1210190001 : Codeunit 5402;
      ValidateCu@1100528600 : Codeunit 11012033;
    BEGIN
      WITH MainNewRec DO BEGIN
        UnitFactorOld := 1;
        UnitFactorNew := 1;
        IF "Trade Item" <> '' THEN BEGIN
          ValidateCu.ValidateUnit(ItemTypeOpt::"Trade Item",
            "Item No.","Basic Item","Trade Item",Manufacturer,"Vendor (Trade Item)",
            Quantity,"Unit of Measure",UnitFactorNew);
        END ELSE BEGIN
          IF "Basic Item" <> '' THEN BEGIN
            ValidateCu.ValidateUnit(ItemTypeOpt::"Basic Item",
              "Item No.","Basic Item","Trade Item",Manufacturer,"Vendor (Trade Item)",
              Quantity,"Unit of Measure",UnitFactorNew);
          END ELSE BEGIN  //db, 07-04-08: M10070
            IF "Item No." <> '' THEN BEGIN
              ItemRec.GET("Item No.");
              UnitFactorOld := UnitControl.GetQtyPerUnitOfMeasure(ItemRec, MainOldRec."Unit of Measure");
              UnitFactorNew := UnitControl.GetQtyPerUnitOfMeasure(ItemRec, "Unit of Measure");
              UnitFactor := UnitFactorOld;
              ValidateCu.ValidateUnit(ItemTypeOpt::Item,
                "Item No.","Basic Item","Trade Item",Manufacturer,"Vendor (Trade Item)",
                Quantity,"Unit of Measure",UnitFactor);
            END;
          END;
        END;
        IF (UnitFactorNew * UnitFactorOld) <> 0 THEN BEGIN
          IF "Gross Price" <> 0 THEN
            VALIDATE("Gross Price", ("Gross Price" * UnitFactorNew / UnitFactorOld))
          ELSE
            VALIDATE("Cost Price", ("Cost Price" * UnitFactorNew / UnitFactorOld));
        END;
      END;
    END;

    PROCEDURE CalculateNettPrice@1210190005();
    BEGIN
      IF "Gross Price" <> 0 THEN BEGIN
        "Cost Price" := "Gross Price" - (("Gross Price"/100) * "Purchase Discount %");
      END;
    END;

    PROCEDURE CalculateGrossPrice@1100485007();
    BEGIN
      IF "Purchase Discount %" <> 100 THEN
        "Gross Price" := "Cost Price" * 100 / (100 - "Purchase Discount %");
    END;

    PROCEDURE UpdateItemPrice@1100525006(LTypeArtOpt@1100525000 : 'Item,Basic Item,Trade Item');
    VAR
      ValidateItems@1100528600 : Codeunit 11012033;
      DummyDat@1100525003 : Date;
      Desc1Txt@1100525002 : Text[50];
      Desc2Txt@1100525001 : Text[50];
      lvDiscRef1@1100525005 : Code[20];
      lvDiscRef2@1100525004 : Code[20];
    BEGIN
      //db, 12-10-10
      ValidateItems.ValidateItem(
        LTypeArtOpt,"Trade Item","Item No.",Manufacturer,"Vendor (Trade Item)",
        "Basic Item","Cost Object",Desc1Txt,"Unit of Measure","Cost Price",
        "Purchase Discount %",DummyDat,"Gross Price",Desc2Txt,"Cost Component",
        lvDiscRef1,lvDiscRef2,"Index Date",'');
    END;

    BEGIN
    END.
  }
}

