OBJECT Table 11071771 SUP Customer Budget Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               ValidatePriceBookCode;
               ValidateUnitPriceCode;
             END;

    OnModify=BEGIN
               ValidatePriceBookCode;
               ValidateUnitPriceCode;
             END;

    OnRename=BEGIN
               ERROR(Text001);
             END;

    CaptionML=ENU=SUP Customer Budget Line;
    LookupPageID=Page11125290;
    DrillDownPageID=Page11125290;
  }
  FIELDS
  {
    { 10  ;   ;Price Book Code     ;Code20        ;TableRelation="Service Price Book".Code WHERE (Type=CONST(Customer));
                                                   OnLookup=VAR
                                                              ServicePriceBook@1100528600 : Record 11071768;
                                                              ServicePriceBookList@1100528601 : Page 11125269;
                                                            BEGIN
                                                              ServicePriceBook.SETRANGE(Type, ServicePriceBook.Type::Customer);
                                                              ServicePriceBookList.LOOKUPMODE(TRUE);
                                                              ServicePriceBookList.SETTABLEVIEW(ServicePriceBook);
                                                              IF ServicePriceBookList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                ServicePriceBookList.GETRECORD(ServicePriceBook);
                                                                "Price Book Code" := ServicePriceBook.Code;
                                                                "Index Date" := ServicePriceBook."Index Date";
                                                              END;
                                                            END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Price Book Code;
                                                   NotBlank=Yes }
    { 20  ;   ;Index Date          ;Date          ;CaptionML=ENU=Index Date;
                                                   NotBlank=Yes }
    { 30  ;   ;Unit Price Code     ;Code20        ;TableRelation="Service Unit Price".Code WHERE (Price Book Type=CONST(Customer),
                                                                                                  Price Book Code=FIELD(Price Book Code),
                                                                                                  Index Date=FIELD(Index Date));
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Unit Price Code;
                                                   NotBlank=Yes }
    { 40  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No.;
                                                   Editable=No }
    { 50  ;   ;STABU Code          ;Code20        ;CaptionML=ENU=STABU Code }
    { 60  ;   ;Record Code         ;Code1         ;CaptionML=ENU=Record Code;
                                                   Editable=No }
    { 70  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 80  ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
    { 90  ;   ;Description 3       ;Text50        ;CaptionML=ENU=Description 3 }
    { 100 ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5 }
    { 110 ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure";
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Unit of Measure }
    { 120 ;   ;Norm                ;Decimal       ;OnValidate=BEGIN
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=ENU=Norm }
    { 140 ;   ;VAT Code Men Hours  ;Code10        ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT Code Men Hours }
    { 141 ;   ;VAT Code Men Hours Customer;Code10 ;CaptionML=ENU=VAT Code Men Hours Customer }
    { 150 ;   ;Hour Rate           ;Decimal       ;OnValidate=BEGIN
                                                                CalcTotals;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Hour Rate;
                                                   AutoFormatType=2 }
    { 160 ;   ;VAT Code Material   ;Code10        ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT Code Material }
    { 161 ;   ;VAT Code Material Customer;Code10  ;CaptionML=ENU=VAT Code Material Customer }
    { 170 ;   ;Gross Price         ;Decimal       ;OnValidate=BEGIN
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=ENU=Gross Price;
                                                   AutoFormatType=2 }
    { 180 ;   ;Men Hours           ;Decimal       ;OnValidate=BEGIN
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=ENU=Men Hours;
                                                   DecimalPlaces=0:2;
                                                   Editable=No }
    { 190 ;   ;Price               ;Decimal       ;CaptionML=ENU=Price;
                                                   Editable=No }
    { 200 ;   ;Labor               ;Decimal       ;CaptionML=ENU=Labor;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 210 ;   ;Total               ;Decimal       ;CaptionML=ENU=Total;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Price Book Code,Index Date,Unit Price Code,Line No.;
                                                   SumIndexFields=Men Hours,Labor,Total;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528600 : TextConst 'ENU=There is no %1 within the Filters.\\Filter: %2.';
      Text001@1100528601 : TextConst 'ENU=Rename is not allowed.';

    PROCEDURE CalcTotals@1100528600();
    BEGIN
      "Men Hours" := ROUND(Quantity * Norm);
      Price := ROUND(Quantity * "Gross Price");
      Labor := ROUND(Quantity * Norm * "Hour Rate");
      Total := ROUND(Quantity * Norm * "Hour Rate") + Price;
    END;

    PROCEDURE ValidatePriceBookCode@1100528604();
    VAR
      ServicePriceBook@1100528600 : Record 11071768;
    BEGIN
      ServicePriceBook.SETRANGE(Type, ServicePriceBook.Type::Customer);
      ServicePriceBook.SETRANGE(Code, "Price Book Code");
      IF NOT ServicePriceBook.FINDFIRST THEN
        ERROR(Text000, ServicePriceBook.TABLECAPTION, ServicePriceBook.GETFILTERS);
    END;

    PROCEDURE ValidateUnitPriceCode@1100528605();
    VAR
      ServiceUnitPrice@1100528600 : Record 11071769;
    BEGIN
      ServiceUnitPrice.SETRANGE("Price Book Type", ServiceUnitPrice."Price Book Type"::Customer);
      ServiceUnitPrice.SETRANGE(Code, "Price Book Code");
      ServiceUnitPrice.SETRANGE("Index Date", "Index Date");
      ServiceUnitPrice.SETRANGE(Code, "Unit Price Code");
      IF NOT ServiceUnitPrice.FINDFIRST THEN
        ERROR(Text000, ServiceUnitPrice.TABLECAPTION, ServiceUnitPrice.GETFILTERS);
    END;

    BEGIN
    END.
  }
}

