OBJECT Table 11071772 SUP Recording Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               SUPRecordingLine@1100525000 : Record 11071772;
             BEGIN
               SUPRecordingLine.SETRANGE("Service Order No.", "Service Order No.");
               SUPRecordingLine.SETRANGE("Price Book Type", "Price Book Type");
               SUPRecordingLine.SETRANGE("Price Book Code", "Price Book Code");
               SUPRecordingLine.SETRANGE("Index Date", "Index Date");
               SUPRecordingLine.SETRANGE(Room, Room);
               SUPRecordingLine.SETRANGE("Unit Price Code", "Unit Price Code");
               IF NOT SUPRecordingLine.ISEMPTY THEN
                 MESSAGE(Text002, FIELDCAPTION("Unit Price Code"), "Unit Price Code", Room);
             END;

    OnModify=BEGIN
               CalculateRealizationAmount;
             END;

    OnRename=BEGIN
               IF ("Service Order No." <> xRec."Service Order No.") OR
                  ("Price Book Type" <> xRec."Price Book Type") OR
                  ("Price Book Code" <> xRec."Price Book Code") OR
                  ("Index Date" <> xRec."Index Date") OR
                  ("Unit Price Code" <> xRec."Unit Price Code")
               THEN
                 ERROR(Text001);
             END;

    CaptionML=ENU=SUP Recording Line;
    LookupPageID=Page11125295;
    DrillDownPageID=Page11125295;
  }
  FIELDS
  {
    { 10  ;   ;Service Order No.   ;Code20        ;TableRelation="Service Order";
                                                   OnLookup=VAR
                                                              ServiceOrder@1100528600 : Record 11012823;
                                                              ServiceOrderExtension@1100528602 : Record 11071727;
                                                              ServiceOrderList@1100528601 : Page 11012830;
                                                            BEGIN
                                                              ServiceOrderList.LOOKUPMODE(TRUE);
                                                              ServiceOrderList.SETTABLEVIEW(ServiceOrder);
                                                              IF ServiceOrderList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                ServiceOrderList.GETRECORD(ServiceOrder);
                                                                ServiceOrderExtension.GetServOrderExtension(ServiceOrder."No.");
                                                                "Service Order No." := ServiceOrder."No.";
                                                                "Price Book Type" := ServiceOrder."Price Book Type";
                                                                "Price Book Code" := ServiceOrderExtension."Price Book Code";
                                                                "Index Date" := ServiceOrderExtension."Price Book Index Date";
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Service Order No.;
                                                   NotBlank=Yes }
    { 15  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No.;
                                                   Editable=No }
    { 20  ;   ;Price Book Type     ;Option        ;CaptionML=ENU=Price Book Type;
                                                   OptionCaptionML=ENU=" ,Internal,Customer";
                                                   OptionString=[ ,Internal,Customer];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 30  ;   ;Price Book Code     ;Code20        ;TableRelation="Service Price Book".Code WHERE (Type=FIELD(Price Book Type));
                                                   OnLookup=VAR
                                                              ServiceUnitPrice@1100528600 : Record 11071768;
                                                              ServiceUnitPriceList@1100528601 : Page 11125269;
                                                            BEGIN
                                                              ServiceUnitPrice.SETRANGE(Type, "Price Book Type");
                                                              ServiceUnitPriceList.LOOKUPMODE(TRUE);
                                                              ServiceUnitPriceList.SETTABLEVIEW(ServiceUnitPrice);
                                                              IF ServiceUnitPriceList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                ServiceUnitPriceList.GETRECORD(ServiceUnitPrice);
                                                                "Price Book Code" := ServiceUnitPrice.Code;
                                                                "Index Date" := ServiceUnitPrice."Index Date";
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Price Book Code;
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 40  ;   ;Index Date          ;Date          ;CaptionML=ENU=Index Date;
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 45  ;   ;Room                ;Code20        ;TableRelation="SUP Room".Code;
                                                   OnLookup=VAR
                                                              ServiceUnitPriceManagement@1100528600 : Codeunit 11012846;
                                                              CustomerNo@1100528601 : Code[20];
                                                              ServiceLocationType@1100528602 : Code[20];
                                                            BEGIN
                                                              CustomerNo := ServiceUnitPriceManagement.DetermineCustomerNo("Price Book Type", "Price Book Code");
                                                              ServiceLocationType := ServiceUnitPriceManagement.GetServiceLocationTypeFromServiceOrder("Service Order No.");
                                                              IF ServiceUnitPriceManagement.LookupRoom(CustomerNo, ServiceLocationType, Room) THEN
                                                                VALIDATE(Room);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Room }
    { 50  ;   ;Unit Price Code     ;Code20        ;TableRelation="Service Unit Price".Code WHERE (Price Book Type=FIELD(Price Book Type),
                                                                                                  Price Book Code=FIELD(Price Book Code),
                                                                                                  Index Date=FIELD(Index Date),
                                                                                                  Code=FIELD(Unit Price Code));
                                                   OnValidate=VAR
                                                                ServiceUnitPriceLine@1100528600 : Record 11071769;
                                                              BEGIN
                                                                IF ServiceUnitPriceLine.GET("Price Book Code", "Index Date", "Unit Price Code") THEN BEGIN
                                                                  VALIDATE(Discipline, ServiceUnitPriceLine.Discipline);
                                                                  VALIDATE("Trade Speciality", ServiceUnitPriceLine."Trade Speciality");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Unit Price Code;
                                                   NotBlank=Yes }
    { 60  ;   ;Description         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Unit Price".Description WHERE (Price Book Type=FIELD(Price Book Type),
                                                                                                              Price Book Code=FIELD(Price Book Code),
                                                                                                              Index Date=FIELD(Index Date),
                                                                                                              Code=FIELD(Unit Price Code)));
                                                   CaptionML=ENU=Description;
                                                   Editable=No }
    { 70  ;   ;Unit of Measure     ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Unit Price"."Unit of Measure" WHERE (Price Book Type=FIELD(Price Book Type),
                                                                                                                    Price Book Code=FIELD(Price Book Code),
                                                                                                                    Index Date=FIELD(Index Date),
                                                                                                                    Code=FIELD(Unit Price Code)));
                                                   CaptionML=ENU=Unit of Measure;
                                                   Editable=No }
    { 80  ;   ;Unit Price          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Unit Price"."Unit Price" WHERE (Price Book Type=FIELD(Price Book Type),
                                                                                                               Price Book Code=FIELD(Price Book Code),
                                                                                                               Index Date=FIELD(Index Date),
                                                                                                               Code=FIELD(Unit Price Code)));
                                                   CaptionML=ENU=Unit Price;
                                                   DecimalPlaces=2:5;
                                                   Editable=No }
    { 90  ;   ;Pre-Recording Quantity;Decimal     ;OnValidate=BEGIN
                                                                CalculateAmountFields;
                                                              END;

                                                   CaptionML=ENU=Pre-Recording Quantity;
                                                   DecimalPlaces=0:2 }
    { 100 ;   ;Pre-Recording Amount;Decimal       ;CaptionML=ENU=Pre-Recording Amount;
                                                   DecimalPlaces=2:5 }
    { 110 ;   ;Recording Quantity  ;Decimal       ;OnValidate=BEGIN
                                                                CalculateAmountFields;
                                                              END;

                                                   CaptionML=ENU=Recording Quantity;
                                                   DecimalPlaces=0:2 }
    { 120 ;   ;Recording Amount    ;Decimal       ;CaptionML=ENU=Recording Amount;
                                                   DecimalPlaces=2:5 }
    { 130 ;   ;Production Recording Quantity;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("SUP Production Line".Production WHERE (Service Order No.=FIELD(Service Order No.),
                                                                                                           Price Book Type=FIELD(Price Book Type),
                                                                                                           Price Book Code=FIELD(Price Book Code),
                                                                                                           Index Date=FIELD(Index Date),
                                                                                                           Room=FIELD(Room),
                                                                                                           Unit Price Code=FIELD(Unit Price Code)));
                                                   CaptionML=ENU=Production Recording Quantity;
                                                   DecimalPlaces=0:2;
                                                   Editable=No }
    { 140 ;   ;Production Recording Amount;Decimal;CaptionML=ENU=Production Recording Amount;
                                                   DecimalPlaces=2:5;
                                                   Editable=No }
    { 150 ;   ;Object No.          ;Code20        ;TableRelation="Service Order Object"."Object No." WHERE (Service Order No.=FIELD(Service Order No.));
                                                   OnValidate=VAR
                                                                ServiceOrder@1100528600 : Record 11012823;
                                                                ServiceObject@1100528601 : Record 11071691;
                                                              BEGIN
                                                                IF "Object No." = '' THEN
                                                                  EXIT;

                                                                ServiceOrder.GET("Service Order No.");
                                                                ServiceObject.GET("Object No.");
                                                                IF GUIALLOWED AND (ServiceOrder."Service Location No." <> ServiceObject."Service Location No.") THEN
                                                                  MESSAGE(Text000,
                                                                    ServiceOrder.TABLECAPTION,
                                                                    ServiceOrder.FIELDCAPTION("Service Location No."),
                                                                    ServiceOrder."Service Location No.",
                                                                    ServiceObject.TABLECAPTION,
                                                                    ServiceObject.FIELDCAPTION("Service Location No."));
                                                              END;

                                                   OnLookup=VAR
                                                              ServiceOrderObject@1100528601 : Record 11071724;
                                                              ServiceOrder@1100528600 : Record 11012823;
                                                            BEGIN
                                                              ServiceOrder.GET("Service Order No.");
                                                              ServiceOrderObject.FILTERGROUP(9);
                                                              ServiceOrderObject.SETRANGE("Service Order No.", "Service Order No.");
                                                              ServiceOrderObject.FILTERGROUP(0);
                                                              IF PAGE.RUNMODAL(0, ServiceOrderObject) = ACTION::LookupOK THEN
                                                                VALIDATE("Object No.", ServiceOrderObject."Object No.");
                                                            END;

                                                   CaptionML=ENU=Object No. }
    { 160 ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Bill-to Customer No. }
    { 170 ;   ;Unit Price Status   ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Order"."Unit Price Status" WHERE (No.=FIELD(Service Order No.)));
                                                   CaptionML=ENU=Unit Price Status;
                                                   OptionCaptionML=ENU=" ,Pre-Recording,Recording,Realization";
                                                   OptionString=[ ,Pre-Recording,Recording,Realization];
                                                   Editable=No }
    { 180 ;   ;Comment             ;Text50        ;CaptionML=ENU=Comment }
    { 190 ;   ;Part                ;Code20        ;TableRelation="SUP Part".Code;
                                                   OnValidate=VAR
                                                                ServiceUnitPriceManagement@1100528600 : Codeunit 11012846;
                                                                CustomerNo@1100528601 : Code[20];
                                                              BEGIN
                                                                CustomerNo := ServiceUnitPriceManagement.DetermineCustomerNo("Price Book Type", "Price Book Code");
                                                                ServiceUnitPriceManagement.ValidatePart(CustomerNo, Part);
                                                              END;

                                                   OnLookup=VAR
                                                              ServiceUnitPriceManagement@1100528601 : Codeunit 11012846;
                                                              CustomerNo@1100528600 : Code[20];
                                                            BEGIN
                                                              CustomerNo := ServiceUnitPriceManagement.DetermineCustomerNo("Price Book Type", "Price Book Code");
                                                              IF ServiceUnitPriceManagement.LookupPart(CustomerNo, Room, Part) THEN
                                                                VALIDATE(Part);
                                                            END;

                                                   CaptionML=ENU=Part }
    { 200 ;   ;Quantity Recording  ;Decimal       ;OnValidate=BEGIN
                                                                CalculateRecording;
                                                              END;

                                                   CaptionML=ENU=Quantity Recording;
                                                   DecimalPlaces=0:2 }
    { 210 ;   ;Length Recording    ;Decimal       ;OnValidate=BEGIN
                                                                CalculateRecording;
                                                              END;

                                                   CaptionML=ENU=Length Recording;
                                                   DecimalPlaces=0:2 }
    { 220 ;   ;Width Recording     ;Decimal       ;OnValidate=BEGIN
                                                                CalculateRecording;
                                                              END;

                                                   CaptionML=ENU=Width Recording;
                                                   DecimalPlaces=0:2 }
    { 230 ;   ;Height Recording    ;Decimal       ;OnValidate=BEGIN
                                                                CalculateRecording;
                                                              END;

                                                   CaptionML=ENU=Height Recording;
                                                   DecimalPlaces=0:2 }
    { 240 ;   ;Discipline          ;Code10        ;TableRelation=Discipline;
                                                   OnValidate=BEGIN
                                                                IF Discipline <> xRec.Discipline THEN
                                                                  VALIDATE("Trade Speciality", '');
                                                              END;

                                                   CaptionML=ENU=Discipline }
    { 250 ;   ;Trade Speciality    ;Code10        ;TableRelation="Trade Speciality".Code WHERE (Discipline=FIELD(Discipline));
                                                   CaptionML=ENU=Trade Speciality }
    { 260 ;   ;Work Order No.      ;Code20        ;OnValidate=VAR
                                                                WorkOrder@1100528600 : Record 11229279;
                                                              BEGIN
                                                                IF "Work Order No." <> '' THEN BEGIN
                                                                  WorkOrder.SETCURRENTKEY("Source Company");
                                                                  WorkOrder.SETRANGE("Source Company", COMPANYNAME);
                                                                  WorkOrder.SETRANGE("Source Type", WorkOrder."Source Type"::ServiceOrder);
                                                                  WorkOrder.SETRANGE("Source No.", "Service Order No.");
                                                                  WorkOrder.SETRANGE("No.", "Work Order No.");
                                                                  WorkOrder.FINDFIRST;
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              WorkOrder@1100528600 : Record 11229279;
                                                              WorkOrdersPAGE@1100525000 : Page 11229284;
                                                            BEGIN
                                                              WorkOrder.SETCURRENTKEY("Source Company");
                                                              WorkOrder.SETRANGE("Source Company", COMPANYNAME);
                                                              WorkOrder.SETRANGE("Source Type", WorkOrder."Source Type"::ServiceOrder);
                                                              WorkOrder.SETRANGE("Source No.", "Service Order No.");
                                                              IF "Work Order No." <> '' THEN
                                                                IF WorkOrder.GET("Work Order No.") THEN;
                                                              WorkOrdersPAGE.SetSelections(WorkOrder."Source Type"::ServiceOrder, "Service Order No.");
                                                              WorkOrdersPAGE.SETTABLEVIEW(WorkOrder);
                                                              WorkOrdersPAGE.LOOKUPMODE(TRUE);
                                                              IF WorkOrdersPAGE.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                WorkOrdersPAGE.GETRECORD(WorkOrder);
                                                                VALIDATE("Work Order No.", WorkOrder."No.");
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Work Order No. }
  }
  KEYS
  {
    {    ;Service Order No.,Line No.              ;SumIndexFields=Recording Quantity;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528600 : TextConst 'ENU=NOTE: %1 %2 ''%3'' differs from %4 %5.';
      Text001@1100528601 : TextConst 'ENU=Rename is not allowed.';
      Text002@1100525000 : TextConst 'ENU=NOTE: %1 %2 for Room %3 already exists';

    PROCEDURE CalculateAmountFields@1100528600();
    BEGIN
      CALCFIELDS("Unit Price");
      "Pre-Recording Amount" := ROUND("Pre-Recording Quantity" * "Unit Price", 0.00001);
      "Recording Amount" := ROUND("Recording Quantity" * "Unit Price", 0.00001);
    END;

    PROCEDURE CalculateRealizationAmount@1210190000();
    BEGIN
      CALCFIELDS("Unit Price", "Production Recording Quantity");
      "Production Recording Amount" := ROUND("Production Recording Quantity" * "Unit Price", 0.00001);
    END;

    PROCEDURE LookupUnitPriceLineCode@1100528700(CopyAllowed@1100528702 : Boolean;VAR OCopyUsed@1100528601 : Boolean);
    VAR
      ServiceUnitPriceLine@1100528701 : Record 11071769;
      UnitPriceLinesperRoom@1100528600 : Record 11071983;
      ServiceUnitPriceLineList@1100528700 : Page 11125271;
    BEGIN
      ServiceUnitPriceLine.SETRANGE("Price Book Type", "Price Book Type");
      ServiceUnitPriceLine.SETRANGE("Price Book Code", "Price Book Code");
      ServiceUnitPriceLine.SETRANGE("Index Date", "Index Date");
      ServiceUnitPriceLine.SETFILTER(Part, '%1', '');
      IF (Part <> '') THEN
        ServiceUnitPriceLine.SETFILTER(Part, '%1|%2', '', Part);
      IF (Room <> '') AND ("Price Book Type" = "Price Book Type"::Customer) THEN BEGIN
        UnitPriceLinesperRoom.SETRANGE("Customer No.", "Price Book Code");
        UnitPriceLinesperRoom.SETRANGE("Room Code", Room);
        UnitPriceLinesperRoom.SETRANGE("Index Date", "Index Date");
        IF UnitPriceLinesperRoom.FINDSET THEN BEGIN
          REPEAT
            IF ServiceUnitPriceLine.GET(
              UnitPriceLinesperRoom."Price Book Code",
              UnitPriceLinesperRoom."Index Date", UnitPriceLinesperRoom."Unit Price Code")
            THEN
              ServiceUnitPriceLine.MARK(TRUE);
          UNTIL UnitPriceLinesperRoom.NEXT = 0;
          ServiceUnitPriceLine.MARKEDONLY(TRUE);
        END;
      END;
      ServiceUnitPriceLineList.LOOKUPMODE(TRUE);
      ServiceUnitPriceLineList.SETTABLEVIEW(ServiceUnitPriceLine);
      ServiceUnitPriceLine.SETRANGE(Code, "Unit Price Code");
      IF ServiceUnitPriceLine.FINDFIRST THEN
        ServiceUnitPriceLineList.SETRECORD(ServiceUnitPriceLine);
      ServiceUnitPriceLine.SETRANGE(Code);
      IF CopyAllowed THEN
        ServiceUnitPriceLineList.SetCopyFilter("Service Order No.", "Price Book Type",
          "Price Book Code", "Index Date", "Unit Price Code", Part, Room);
      IF ServiceUnitPriceLineList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        ServiceUnitPriceLineList.GETRECORD(ServiceUnitPriceLine);
        VALIDATE("Unit Price Code", ServiceUnitPriceLine.Code);
      END;
      OCopyUsed := ServiceUnitPriceLineList.GetCopyUsed;
    END;

    PROCEDURE CalculateRecording@1100528701();
    BEGIN
      IF "Quantity Recording" <> 0 THEN BEGIN
        "Recording Quantity" := "Quantity Recording";
        IF "Length Recording" <> 0 THEN
          "Recording Quantity" := "Recording Quantity" * "Length Recording";
        IF "Width Recording" <> 0 THEN
          "Recording Quantity" := "Recording Quantity" * "Width Recording";
        IF "Height Recording" <> 0 THEN
          "Recording Quantity" := "Recording Quantity" * "Height Recording";
        VALIDATE("Recording Quantity");
      END;
    END;

    PROCEDURE InitRecord@1100528601();
    VAR
      ServiceOrder@1100528600 : Record 11012823;
      ServiceOrderExtension@1100528601 : Record 11071727;
    BEGIN
      IF "Service Order No." = '' THEN
        EXIT;
      IF NOT ServiceOrder.GET("Service Order No.") THEN
        EXIT;
      ServiceOrderExtension.GetServOrderExtension("Service Order No.");
      "Price Book Type" := ServiceOrder."Price Book Type";
      "Price Book Code" := ServiceOrderExtension."Price Book Code";
      "Index Date" := ServiceOrderExtension."Price Book Index Date";
    END;

    PROCEDURE ShowDocuments@1100528602();
    VAR
      DocumentFilters@1100528601 : Codeunit 11012432;
      RecRef@1100528600 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec);
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, '', FALSE, FALSE);
    END;

    BEGIN
    END.
  }
}

