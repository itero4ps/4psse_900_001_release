OBJECT Table 11071773 SUP Production
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ServiceOrder@1100525000 : Record 11012823;
               SUPProduction@1100528600 : Record 11071773;
             BEGIN
               IF ServiceOrder.GET("Service Order No.") THEN BEGIN
                 ServiceOrder.CheckStatus(1);
                 ServiceOrder.TESTFIELD("Unit Price Status", ServiceOrder."Unit Price Status"::"Production Recording");
               END;

               IF "Seq. No." = 0 THEN BEGIN
                 SUPProduction.SETRANGE("Service Order No.", "Service Order No.");
                 IF SUPProduction.FINDLAST THEN
                   "Seq. No." := SUPProduction."Seq. No.";
                 "Seq. No." += 1;
               END;
               IF "Production Date" = 0D THEN
                 VALIDATE("Production Date", TODAY);
               IF "Production Time" = 0T THEN
                 VALIDATE("Production Time", TIME);
             END;

    OnModify=VAR
               ServiceOrder@1100525000 : Record 11012823;
             BEGIN
               IF ServiceOrder.GET("Service Order No.") THEN
                 ServiceOrder.CheckStatus(1);
             END;

    OnDelete=VAR
               SUPProductionLine@1100528600 : Record 11071774;
             BEGIN
               SUPProductionLine.SETRANGE("Service Order No.", "Service Order No.");
               SUPProductionLine.SETRANGE("Production Seq. No.", "Seq. No.");
               SUPProductionLine.DELETEALL(TRUE);

               RecalcNextProdLineFields;
             END;

    OnRename=BEGIN
               ERROR(Text000);
             END;

    CaptionML=ENU=SUP Production;
    LookupPageID=Page11125302;
    DrillDownPageID=Page11125302;
  }
  FIELDS
  {
    { 10  ;   ;Service Order No.   ;Code20        ;TableRelation="Service Order";
                                                   CaptionML=ENU=Service Order No.;
                                                   NotBlank=Yes }
    { 15  ;   ;Seq. No.            ;Integer       ;CaptionML=ENU=Seq. No.;
                                                   Editable=No }
    { 20  ;   ;Production Date     ;Date          ;OnValidate=VAR
                                                                SUPProductionLine@1100409000 : Record 11071774;
                                                              BEGIN
                                                                SUPProductionLine.SETRANGE("Service Order No.", "Service Order No.");
                                                                SUPProductionLine.SETRANGE("Production Seq. No.", "Seq. No.");
                                                                SUPProductionLine.MODIFYALL("Production Date", "Production Date", TRUE);
                                                                IF xRec."Production Date" <> "Production Date" THEN
                                                                  UpdateProductionDateTime;
                                                              END;

                                                   CaptionML=ENU=Production Date;
                                                   NotBlank=Yes }
    { 22  ;   ;Production Time     ;Time          ;OnValidate=VAR
                                                                SUPProductionLine@1100528600 : Record 11071774;
                                                              BEGIN
                                                                SUPProductionLine.SETRANGE("Service Order No.", "Service Order No.");
                                                                SUPProductionLine.SETRANGE("Production Seq. No.", "Seq. No.");
                                                                SUPProductionLine.MODIFYALL("Production Time", "Production Time", TRUE);
                                                                IF xRec."Production Time" <> "Production Time" THEN
                                                                  UpdateProductionDateTime;
                                                              END;

                                                   CaptionML=ENU=Production Time }
    { 25  ;   ;Production Date/Time;DateTime      ;OnValidate=VAR
                                                                SUPProductionLine@1100528600 : Record 11071774;
                                                              BEGIN
                                                                SUPProductionLine.SETRANGE("Service Order No.", "Service Order No.");
                                                                SUPProductionLine.SETRANGE("Production Seq. No.", "Seq. No.");
                                                                SUPProductionLine.MODIFYALL("Production Date/Time", "Production Date/Time", TRUE);
                                                                IF xRec."Production Date/Time" <> "Production Date/Time" THEN
                                                                  IF MODIFY THEN
                                                                    RecalcAllProdLineFields;
                                                              END;

                                                   CaptionML=ENU=Production Date/Time;
                                                   Editable=No }
    { 30  ;   ;Remarks             ;Text50        ;CaptionML=ENU=Remarks }
    { 40  ;   ;Status              ;Option        ;OnValidate=BEGIN
                                                                IF (Status <> xRec.Status) AND
                                                                   (xRec.Status = xRec.Status::Approved)
                                                                THEN
                                                                  CheckCostPlusEntriesCreated;
                                                              END;

                                                   CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=Proposal,Offered,Approved,Expired;
                                                   OptionString=Proposal,Offered,Approved,Expired }
    { 50  ;   ;Total Production Value;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("SUP Production Line"."Production Value" WHERE (Service Order No.=FIELD(Service Order No.),
                                                                                                                   Production Date/Time=FIELD(Production Date/Time)));
                                                   CaptionML=ENU=Total Production Value;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Service Order No.,Seq. No.              ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528600 : TextConst 'ENU=Rename is not allowed.';
      Text001@1100528602 : TextConst 'ENU=There are already %1s present, %2 can''t be changed.';
      Text002@1100528601 : TextConst 'ENU=Cost Plus Entries could be incorrect and needs to be changed for the following date(s):\%1';

    PROCEDURE CreateProdRecordingLines@1100528600();
    VAR
      ServiceOrder@1100528600 : Record 11012823;
      ServiceOrderExtension@1100528601 : Record 11071727;
      SUPProductionLine@1100528603 : Record 11071774;
      SUPRecordingLine@1100528602 : Record 11071772;
      LineNo@1100528604 : Integer;
    BEGIN
      ServiceOrder.GET("Service Order No.");
      ServiceOrderExtension.GetServOrderExtension("Service Order No.");

      SUPRecordingLine.SETRANGE("Service Order No.", "Service Order No.");
      SUPRecordingLine.SETRANGE("Price Book Type", ServiceOrder."Price Book Type");
      SUPRecordingLine.SETRANGE("Price Book Code", ServiceOrderExtension."Price Book Code");
      SUPRecordingLine.SETRANGE("Index Date", ServiceOrderExtension."Price Book Index Date");
      IF NOT SUPRecordingLine.FINDSET THEN
        EXIT;

      REPEAT
        SUPProductionLine.SETRANGE("Service Order No.", "Service Order No.");
        SUPProductionLine.SETRANGE("Production Seq. No.", "Seq. No.");
        SUPProductionLine.SETRANGE("Production Date", "Production Date");
        SUPProductionLine.SETRANGE("Price Book Type", ServiceOrder."Price Book Type");
        SUPProductionLine.SETRANGE("Price Book Code", ServiceOrderExtension."Price Book Code");
        SUPProductionLine.SETRANGE("Index Date", ServiceOrderExtension."Price Book Index Date");
        SUPProductionLine.SETRANGE(Room, SUPRecordingLine.Room);
        SUPProductionLine.SETRANGE("Unit Price Code", SUPRecordingLine."Unit Price Code");

        IF SUPProductionLine.ISEMPTY THEN BEGIN
          SUPProductionLine.INIT;
          SUPProductionLine."Service Order No." := "Service Order No.";
          SUPProductionLine."Production Seq. No." := "Seq. No.";
          SUPProductionLine."Production Date" := "Production Date";
          SUPProductionLine."Production Time" := "Production Time";
          SUPProductionLine."Production Date/Time" := "Production Date/Time";
          SUPProductionLine."Price Book Type" := ServiceOrder."Price Book Type";
          SUPProductionLine."Price Book Code" := ServiceOrderExtension."Price Book Code";
          SUPProductionLine."Index Date" := ServiceOrderExtension."Price Book Index Date";
          SUPProductionLine.Room := SUPRecordingLine.Room;
          LineNo += 10000;
          SUPProductionLine."Line No." := LineNo;
          SUPProductionLine."Unit Price Code" := SUPRecordingLine."Unit Price Code";
          IF SUPProductionLine.INSERT(TRUE) THEN BEGIN
            SUPProductionLine.SETFILTER("Prev. Prod. Date/Time Filter", '<%1', "Production Date/Time");
            SUPProductionLine.CALCFIELDS("Previous Prod. Cumulative");
            SUPProductionLine.VALIDATE("Production Cumulative", SUPProductionLine."Previous Prod. Cumulative");
            //GetPreviousProdRecordingLine(SUPProductionLine));
            SUPProductionLine.Comment := SUPRecordingLine.Comment;
            SUPProductionLine.Part := SUPRecordingLine.Part;
            SUPProductionLine.MODIFY(TRUE);
          END;
        END;
      UNTIL SUPRecordingLine.NEXT = 0;
    END;

    PROCEDURE CreateCostPlusEntries@1100528601();
    VAR
      ServiceUnitPriceManagement@1100528602 : Codeunit 11012846;
    BEGIN
      ServiceUnitPriceManagement.GenerateCostPlusEntries(Rec);
    END;

    PROCEDURE GetPreviousProdRecordingLineOLD@1100528604(ISUPProductionLine@1100528600 : Record 11071774) : Decimal;
    VAR
      SUPProductionLine@1100528601 : Record 11071774;
      ProdCumulative@1100528100 : Decimal;
    BEGIN
      EXIT;
      SUPProductionLine.SETRANGE("Service Order No.", ISUPProductionLine."Service Order No.");
      SUPProductionLine.SETFILTER("Production Date/Time", '<%1', ISUPProductionLine."Production Date/Time");
      SUPProductionLine.SETRANGE("Price Book Code", ISUPProductionLine."Price Book Code");
      SUPProductionLine.SETRANGE("Index Date", ISUPProductionLine."Index Date");
      SUPProductionLine.SETRANGE(Room, ISUPProductionLine.Room);
      SUPProductionLine.SETRANGE("Unit Price Code", ISUPProductionLine."Unit Price Code");
      IF SUPProductionLine.FINDLAST THEN BEGIN
        SUPProductionLine.SETRANGE("Production Date/Time", SUPProductionLine."Production Date/Time");
        EXIT(SUPProductionLine."Production Cumulative");
      END;
    END;

    PROCEDURE CheckCostPlusEntriesCreated@1100528603();
    VAR
      SUPProductionLine@1100528600 : Record 11071774;
      ServiceOrderCostPlusEntry@1100528601 : Record 11012825;
    BEGIN
      SUPProductionLine.SETRANGE("Service Order No.", "Service Order No.");
      SUPProductionLine.SETRANGE("Production Seq. No.", "Seq. No.");
      SUPProductionLine.SETRANGE("Cost Plus Entries Created", TRUE);
      IF NOT SUPProductionLine.ISEMPTY THEN
        ERROR(Text001, ServiceOrderCostPlusEntry.TABLECAPTION, FIELDCAPTION(Status));
    END;

    PROCEDURE GetPrevUnitPriceProdRecording@1100528701(VAR IOSUPProduction@1100528700 : Record 11071773) : Boolean;
    BEGIN
      IOSUPProduction.SETRANGE("Service Order No.", "Service Order No.");
      IOSUPProduction.SETFILTER("Production Date/Time", '<%1', "Production Date/Time");
      EXIT(IOSUPProduction.FINDLAST);
    END;

    PROCEDURE GetNextUnitPriceProdRecording@1100528702(VAR IOSUPProduction@1100528700 : Record 11071773) : Boolean;
    BEGIN
      IOSUPProduction.SETRANGE("Service Order No.", "Service Order No.");
      IOSUPProduction.SETFILTER("Production Date/Time", '>%1', "Production Date/Time");
      EXIT(IOSUPProduction.FINDFIRST);
    END;

    PROCEDURE CopyRecordingToProduction@1100528704();
    VAR
      SUPProductionLine@1100528700 : Record 11071774;
      Prod@1100528701 : Decimal;
    BEGIN
      SUPProductionLine.SETRANGE("Service Order No.", "Service Order No.");
      SUPProductionLine.SETRANGE("Production Date/Time", "Production Date/Time");
      IF SUPProductionLine.FINDSET(TRUE) THEN
        REPEAT
          SUPProductionLine.CALCFIELDS("Recording Quantity");
          Prod := SUPProductionLine."Recording Quantity" - SUPProductionLine.GetPreviousProdCumulative;
          IF Prod < 0 THEN
            Prod := 0;
          SUPProductionLine.VALIDATE(Production, Prod);
          SUPProductionLine.MODIFY(TRUE);
        UNTIL SUPProductionLine.NEXT = 0;
    END;

    PROCEDURE RecalcAllProdLineFields@1100528605();
    VAR
      SUPProductionLine@1100528301 : Record 11071774;
      NextProdDateTime@1100528303 : DateTime;
      MessageStr@1100528600 : Text;
    BEGIN
      SUPProductionLine.SETCURRENTKEY("Service Order No.", "Production Date/Time");
      SUPProductionLine.SETRANGE("Service Order No.", "Service Order No.");
      IF SUPProductionLine.FINDSET(TRUE) THEN BEGIN
        SUPProductionLine.SETFILTER("Prev. Prod. Date/Time Filter", '<%1', SUPProductionLine."Production Date/Time");
      //  SUPProductionLine.CALCFIELDS("Previous Production Date");
        REPEAT
          SUPProductionLine.VALIDATE(Production);
          IF NOT SUPProductionLine.CalculateFields THEN BEGIN
            IF SUPProductionLine."Cost Plus Entries Created" THEN BEGIN
              IF MessageStr <> '' THEN
                MessageStr += ', ';
              MessageStr := FORMAT(SUPProductionLine."Production Date/Time")
            END;
          END;
          SUPProductionLine.MODIFY(TRUE);
        UNTIL SUPProductionLine.NEXT = 0;
      END;
      IF (MessageStr <> '') AND GUIALLOWED THEN
        MESSAGE(Text002, MessageStr);
    END;

    PROCEDURE RecalcNextProdLineFields@1100528300();
    VAR
      SUPProductionLine@1100528301 : Record 11071774;
      NextProdDateTime@1100528303 : DateTime;
    BEGIN
      NextProdDateTime := GetNextUnitPriceProdRecDateTime;

      IF NextProdDateTime <> 0DT THEN BEGIN
        SUPProductionLine.SETRANGE("Service Order No.", "Service Order No.");
        SUPProductionLine.SETRANGE("Production Date/Time", NextProdDateTime);
        IF SUPProductionLine.FINDSET(TRUE) THEN BEGIN
          SUPProductionLine.SETFILTER("Prev. Prod. Date/Time Filter", '<%1', SUPProductionLine."Production Date/Time");
          SUPProductionLine.CALCFIELDS("Previous Production Date");
          REPEAT
            SUPProductionLine.VALIDATE(Production);
            SUPProductionLine.MODIFY(TRUE);
          UNTIL SUPProductionLine.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE RecalcPrevProdLineFields@1100528606();
    VAR
      SUPProductionLine@1100528301 : Record 11071774;
      NextProdDateTime@1100528303 : DateTime;
    BEGIN
      NextProdDateTime := GetPrevUnitPriceProdRecDateTime;

      IF NextProdDateTime <> 0DT THEN BEGIN
        SUPProductionLine.SETRANGE("Service Order No.", "Service Order No.");
        SUPProductionLine.SETRANGE("Production Date/Time", NextProdDateTime);
        IF SUPProductionLine.FINDSET(TRUE) THEN BEGIN
          SUPProductionLine.SETFILTER("Prev. Prod. Date/Time Filter", '<%1', SUPProductionLine."Production Date/Time");
          SUPProductionLine.CALCFIELDS("Previous Production Date");
          REPEAT
            SUPProductionLine.VALIDATE(Production);
            SUPProductionLine.MODIFY(TRUE);
          UNTIL SUPProductionLine.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE GetPrevUnitPriceProdRecDateTime@1100528301() : DateTime;
    VAR
      SUPProduction@1100528300 : Record 11071773;
    BEGIN
      SUPProduction.SETRANGE("Service Order No.", "Service Order No.");
      SUPProduction.SETFILTER("Production Date/Time", '<%1', "Production Date/Time");
      IF SUPProduction.FINDLAST THEN
        EXIT(SUPProduction."Production Date/Time");
    END;

    PROCEDURE GetNextUnitPriceProdRecDateTime@1100528302() : DateTime;
    VAR
      SUPProduction@1100528300 : Record 11071773;
    BEGIN
      SUPProduction.SETRANGE("Service Order No.", "Service Order No.");
      SUPProduction.SETFILTER("Production Date/Time", '>%1', "Production Date/Time");
      IF SUPProduction.FINDFIRST THEN
        EXIT(SUPProduction."Production Date/Time");
    END;

    PROCEDURE UpdateProductionDateTime@1100528602();
    BEGIN
      IF "Production Date" <> 0D THEN
        VALIDATE("Production Date/Time", CREATEDATETIME("Production Date", "Production Time"))
      ELSE
        VALIDATE("Production Date/Time", 0DT);
    END;

    BEGIN
    END.
  }
}

