OBJECT Table 11071774 SUP Production Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ServiceOrder@1100528301 : Record 11012823;
               ServiceOrderExtension@1100528302 : Record 11071727;
               SUPProduction@1100528600 : Record 11071773;
             BEGIN
               ServiceOrder.GET("Service Order No.");
               ServiceOrder.CheckStatus(1);

               IF SUPProduction.GET("Service Order No.", "Production Seq. No.") THEN BEGIN
                 VALIDATE("Production Date", SUPProduction."Production Date");
                 VALIDATE("Production Time", SUPProduction."Production Time");
                 VALIDATE("Production Date/Time", SUPProduction."Production Date/Time");
               END;
             END;

    OnModify=VAR
               ServiceOrder@1100525000 : Record 11012823;
             BEGIN
               IF ServiceOrder.GET("Service Order No.") THEN
                 ServiceOrder.CheckStatus(1);
               CalculateFields;
               IF MODIFY THEN
                 RecalcNextRecordingFields;
             END;

    OnDelete=BEGIN
               TESTFIELD("Cost Plus Entries Created", FALSE);
             END;

    OnRename=BEGIN
               IF (NOT RenameIsAllowed) THEN
                 ERROR(Text000);
             END;

    CaptionML=ENU=SUP Production Line;
    LookupPageID=Page11125301;
    DrillDownPageID=Page11125301;
  }
  FIELDS
  {
    { 10  ;   ;Service Order No.   ;Code20        ;TableRelation="Service Order";
                                                   OnValidate=VAR
                                                                ServiceOrder@1100525000 : Record 11012823;
                                                                ServiceOrderExtension@1100525001 : Record 11071727;
                                                              BEGIN
                                                                ServiceOrder.GET("Service Order No.");
                                                                ServiceOrderExtension.GET("Service Order No.");
                                                                "Price Book Type" := ServiceOrder."Price Book Type";
                                                                "Price Book Code" := ServiceOrderExtension."Price Book Code";
                                                                "Index Date" := ServiceOrderExtension."Price Book Index Date";
                                                              END;

                                                   CaptionML=ENU=Service Order No.;
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 15  ;   ;Production Seq. No. ;Integer       ;TableRelation="SUP Production"."Seq. No." WHERE (Service Order No.=FIELD(Service Order No.));
                                                   CaptionML=ENU=Production Seq. No.;
                                                   Editable=No }
    { 17  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No.;
                                                   Editable=No }
    { 20  ;   ;Production Date     ;Date          ;TableRelation="SUP Production"."Production Date" WHERE (Service Order No.=FIELD(Service Order No.));
                                                   CaptionML=ENU=Production Date;
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 22  ;   ;Production Time     ;Time          ;CaptionML=ENU=Production Time }
    { 25  ;   ;Production Date/Time;DateTime      ;CaptionML=ENU=Production Date/Time;
                                                   Editable=No }
    { 30  ;   ;Price Book Type     ;Option        ;CaptionML=ENU=Price Book Type;
                                                   OptionCaptionML=ENU=" ,Internal,Customer";
                                                   OptionString=[ ,Internal,Customer];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 40  ;   ;Price Book Code     ;Code20        ;TableRelation="Service Price Book".Code WHERE (Type=FIELD(Price Book Type));
                                                   OnLookup=VAR
                                                              ServiceUnitPrice@1100528600 : Record 11071768;
                                                              ServiceUnitPriceList@1100528601 : Page 11125269;
                                                            BEGIN
                                                              ServiceUnitPrice.SETRANGE(Type, "Price Book Type");
                                                              ServiceUnitPriceList.LOOKUPMODE(TRUE);
                                                              ServiceUnitPriceList.SETTABLEVIEW(ServiceUnitPrice);
                                                              IF (ServiceUnitPriceList.RUNMODAL = ACTION::LookupOK) THEN BEGIN
                                                                ServiceUnitPriceList.GETRECORD(ServiceUnitPrice);
                                                                "Price Book Code" := ServiceUnitPrice.Code;
                                                                "Index Date" := ServiceUnitPrice."Index Date";
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Price Book Code;
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 50  ;   ;Index Date          ;Date          ;CaptionML=ENU=Index Date;
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 55  ;   ;Room                ;Code20        ;TableRelation="SUP Room".Code;
                                                   OnLookup=VAR
                                                              ServiceUnitPriceManagement@1100528600 : Codeunit 11012846;
                                                              CustomerNo@1100528601 : Code[20];
                                                              ServiceLocationType@1100528602 : Code[20];
                                                            BEGIN
                                                              CustomerNo := ServiceUnitPriceManagement.DetermineCustomerNo("Price Book Type", "Price Book Code");
                                                              ServiceLocationType := ServiceUnitPriceManagement.GetServiceLocationTypeFromServiceOrder("Service Order No.");
                                                              IF ServiceUnitPriceManagement.LookupRoom(CustomerNo, ServiceLocationType, Room) THEN
                                                                VALIDATE(Room);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Room }
    { 60  ;   ;Unit Price Code     ;Code20        ;TableRelation="Service Unit Price".Code WHERE (Price Book Type=FIELD(Price Book Type),
                                                                                                  Price Book Code=FIELD(Price Book Code),
                                                                                                  Index Date=FIELD(Index Date),
                                                                                                  Code=FIELD(Unit Price Code));
                                                   OnLookup=VAR
                                                              ServiceOrder@1100528301 : Record 11012823;
                                                              ServiceOrderExtension@1100528300 : Record 11071727;
                                                              ServiceUnitPriceLine@1100528303 : Record 11071769;
                                                              ServiceUnitPriceLineList@1100528304 : Page 11125271;
                                                            BEGIN
                                                              ServiceOrder.GET("Service Order No.");
                                                              ServiceOrderExtension.GET("Service Order No.");

                                                              ServiceUnitPriceLine.SETRANGE("Price Book Type", ServiceOrder."Price Book Type");
                                                              ServiceUnitPriceLine.SETRANGE("Price Book Code", ServiceOrderExtension."Price Book Code");
                                                              ServiceUnitPriceLine.SETRANGE("Index Date", ServiceOrderExtension."Price Book Index Date");

                                                              ServiceUnitPriceLineList.LOOKUPMODE(TRUE);
                                                              ServiceUnitPriceLineList.SETTABLEVIEW(ServiceUnitPriceLine);
                                                              IF (ServiceUnitPriceLineList.RUNMODAL = ACTION::LookupOK) THEN BEGIN
                                                                ServiceUnitPriceLineList.GETRECORD(ServiceUnitPriceLine);
                                                                "Unit Price Code" := ServiceUnitPriceLine.Code;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Unit Price Code }
    { 70  ;   ;Description         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Unit Price".Description WHERE (Price Book Type=FIELD(Price Book Type),
                                                                                                              Price Book Code=FIELD(Price Book Code),
                                                                                                              Index Date=FIELD(Index Date),
                                                                                                              Code=FIELD(Unit Price Code)));
                                                   CaptionML=ENU=Description;
                                                   Editable=No }
    { 80  ;   ;Unit of Measure     ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Unit Price"."Unit of Measure" WHERE (Price Book Type=FIELD(Price Book Type),
                                                                                                                    Price Book Code=FIELD(Price Book Code),
                                                                                                                    Index Date=FIELD(Index Date),
                                                                                                                    Code=FIELD(Unit Price Code)));
                                                   CaptionML=ENU=Unit of Measure;
                                                   Editable=No }
    { 90  ;   ;Unit Price          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Unit Price"."Unit Price" WHERE (Price Book Type=FIELD(Price Book Type),
                                                                                                               Price Book Code=FIELD(Price Book Code),
                                                                                                               Index Date=FIELD(Index Date),
                                                                                                               Code=FIELD(Unit Price Code)));
                                                   CaptionML=ENU=Unit Price;
                                                   DecimalPlaces=2:5;
                                                   Editable=No }
    { 100 ;   ;Recording Quantity  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("SUP Recording Line"."Recording Quantity" WHERE (Service Order No.=FIELD(Service Order No.),
                                                                                                                       Price Book Type=FIELD(Price Book Type),
                                                                                                                       Price Book Code=FIELD(Price Book Code),
                                                                                                                       Index Date=FIELD(Index Date),
                                                                                                                       Room=FIELD(Room),
                                                                                                                       Unit Price Code=FIELD(Unit Price Code)));
                                                   CaptionML=ENU=Recording Quantity;
                                                   DecimalPlaces=0:2;
                                                   Editable=No }
    { 110 ;   ;Production Cumulative;Decimal      ;OnValidate=BEGIN
                                                                Production := "Production Cumulative" - GetPreviousProdCumulative;
                                                                CalculateFields;
                                                              END;

                                                   CaptionML=ENU=Production Cumulative;
                                                   DecimalPlaces=0:2 }
    { 120 ;   ;Production          ;Decimal       ;OnValidate=BEGIN
                                                                "Production Cumulative" := GetPreviousProdCumulative + Production;
                                                                CalculateFields;
                                                              END;

                                                   CaptionML=ENU=Production;
                                                   DecimalPlaces=0:2 }
    { 130 ;   ;Production Value    ;Decimal       ;CaptionML=ENU=Production Value;
                                                   DecimalPlaces=2:5;
                                                   Editable=No }
    { 140 ;   ;Extension Value     ;Decimal       ;CaptionML=ENU=Extension Value;
                                                   DecimalPlaces=2:5;
                                                   Editable=No }
    { 150 ;   ;Extension Production;Decimal       ;CaptionML=ENU=Extension Production;
                                                   DecimalPlaces=0:2;
                                                   Editable=No }
    { 155 ;   ;Previous Prod. Cumulative;Decimal  ;FieldClass=FlowField;
                                                   CalcFormula=Sum("SUP Production Line".Production WHERE (Service Order No.=FIELD(Service Order No.),
                                                                                                           Production Date/Time=FIELD(Prev. Prod. Date/Time Filter),
                                                                                                           Price Book Type=FIELD(Price Book Type),
                                                                                                           Price Book Code=FIELD(Price Book Code),
                                                                                                           Index Date=FIELD(Index Date),
                                                                                                           Room=FIELD(Room),
                                                                                                           Unit Price Code=FIELD(Unit Price Code)));
                                                   CaptionML=ENU=Previous Production Cumulative;
                                                   DecimalPlaces=0:2;
                                                   Editable=No }
    { 160 ;   ;Previous Prod Value Cumulative;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("SUP Production Line"."Production Value" WHERE (Service Order No.=FIELD(Service Order No.),
                                                                                                                   Production Date/Time=FIELD(Prev. Prod. Date/Time Filter),
                                                                                                                   Price Book Type=FIELD(Price Book Type),
                                                                                                                   Price Book Code=FIELD(Price Book Code),
                                                                                                                   Index Date=FIELD(Index Date),
                                                                                                                   Room=FIELD(Room),
                                                                                                                   Unit Price Code=FIELD(Unit Price Code)));
                                                   CaptionML=ENU=Previous Prod Value Cumulative;
                                                   DecimalPlaces=2:5;
                                                   Editable=No }
    { 170 ;   ;Previous Production Date;Date      ;FieldClass=FlowField;
                                                   CalcFormula=Max("SUP Production Line"."Production Date" WHERE (Service Order No.=FIELD(Service Order No.),
                                                                                                                  Production Date/Time=FIELD(FILTER(Prev. Prod. Date/Time Filter)),
                                                                                                                  Price Book Type=FIELD(Price Book Type),
                                                                                                                  Price Book Code=FIELD(Price Book Code),
                                                                                                                  Index Date=FIELD(Index Date),
                                                                                                                  Room=FIELD(Room),
                                                                                                                  Unit Price Code=FIELD(Unit Price Code)));
                                                   CaptionML=ENU=Previous Production Date;
                                                   Editable=No }
    { 180 ;   ;Previous Prod Date Filter OLD;Text30;
                                                   CaptionML=ENU=Previous Prod Date Filter OLD;
                                                   Description=OBSOLETE;
                                                   Editable=No }
    { 185 ;   ;Prev. Prod. Date/Time Filter;DateTime;
                                                   FieldClass=FlowFilter;
                                                   CaptionML=ENU=Previous Production Date/Time Filter;
                                                   Editable=No }
    { 190 ;   ;Total Production Value;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("SUP Production Line"."Production Value" WHERE (Service Order No.=FIELD(Service Order No.),
                                                                                                                   Price Book Type=FIELD(Price Book Type),
                                                                                                                   Price Book Code=FIELD(Price Book Code),
                                                                                                                   Index Date=FIELD(Index Date),
                                                                                                                   Room=FIELD(Room),
                                                                                                                   Unit Price Code=FIELD(Unit Price Code)));
                                                   CaptionML=ENU=Total Production Value;
                                                   DecimalPlaces=2:5;
                                                   Editable=No }
    { 200 ;   ;Additional Info     ;Text50        ;CaptionML=ENU=Additional Info }
    { 210 ;   ;Bill-to Customer No.;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("SUP Recording Line"."Bill-to Customer No." WHERE (Service Order No.=FIELD(Service Order No.),
                                                                                                                         Price Book Type=FIELD(Price Book Type),
                                                                                                                         Price Book Code=FIELD(Price Book Code),
                                                                                                                         Index Date=FIELD(Index Date),
                                                                                                                         Unit Price Code=FIELD(Unit Price Code)));
                                                   CaptionML=ENU=Bill-to Customer No.;
                                                   Editable=No }
    { 220 ;   ;Cost Plus Entries Created;Boolean  ;CaptionML=ENU=Cost Plus Entries Created;
                                                   Editable=No }
    { 230 ;   ;Creation Date Cost Plus Entry;Date ;CaptionML=ENU=Creation Date Cost Plus Entry;
                                                   Editable=No }
    { 240 ;   ;Cost Plus Line No.  ;Integer       ;CaptionML=ENU=Cost Plus Line No.;
                                                   Editable=No }
    { 250 ;   ;Comment             ;Text50        ;CaptionML=ENU=Comment }
    { 260 ;   ;Part                ;Code20        ;TableRelation="SUP Part".Code;
                                                   OnValidate=VAR
                                                                ServiceUnitPriceManagement@1100528600 : Codeunit 11012846;
                                                                CustomerNo@1100528601 : Code[20];
                                                              BEGIN
                                                                CustomerNo := ServiceUnitPriceManagement.DetermineCustomerNo("Price Book Type", "Price Book Code");
                                                                ServiceUnitPriceManagement.ValidatePart(CustomerNo, Part);
                                                              END;

                                                   OnLookup=VAR
                                                              ServiceUnitPriceManagement@1100528601 : Codeunit 11012846;
                                                              CustomerNo@1100528600 : Code[20];
                                                            BEGIN
                                                              CustomerNo := ServiceUnitPriceManagement.DetermineCustomerNo("Price Book Type", "Price Book Code");
                                                              IF ServiceUnitPriceManagement.LookupPart(CustomerNo, Room, Part) THEN
                                                                VALIDATE(Part);
                                                            END;

                                                   CaptionML=ENU=Part }
    { 270 ;   ;SUP Production Status;Option       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("SUP Production".Status WHERE (Service Order No.=FIELD(Service Order No.),
                                                                                                     Seq. No.=FIELD(Production Seq. No.)));
                                                   CaptionML=ENU=SUP Production Status;
                                                   OptionCaptionML=ENU=Proposal,Offered,Approved,Expired;
                                                   OptionString=Proposal,Offered,Approved,Expired;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Service Order No.,Production Seq. No.,Line No.;
                                                   SumIndexFields=Production Value,Production Cumulative;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Service Order No.,Price Book Type,Price Book Code,Index Date,Room,Unit Price Code;
                                                   SumIndexFields=Production }
    {    ;Service Order No.,Production Date/Time  ;SumIndexFields=Production Value }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528600 : TextConst 'ENU=Rename is not allowed.';
      Text001@1100528301 : TextConst 'ENU=Insert is not allowed.';
      RenameIsAllowed@1100528300 : Boolean;
      Text002@1100528302 : TextConst 'ENU=Cost Plus Entries could be incorrect and needs to be changed for the following date(s):\%1';

    PROCEDURE CalculateFields@1100528600() : Boolean;
    VAR
      PrevExtensionProduction@1100528300 : Decimal;
    BEGIN
      PrevExtensionProduction := "Extension Production";
      CALCFIELDS("Unit Price");
      "Production Value" := Production * "Unit Price";

      SETFILTER("Prev. Prod. Date/Time Filter", '<%1', "Production Date/Time");
      CALCFIELDS("Recording Quantity", "Previous Prod Value Cumulative",
        "Previous Production Date", "Total Production Value");

      IF "Production Cumulative" > "Recording Quantity" THEN BEGIN
        "Extension Production" := "Production Cumulative" - "Recording Quantity";
        IF "Extension Production" > Production THEN
          "Extension Production" := Production;
      END ELSE
        "Extension Production" := 0;

      IF ("Extension Production" < 0 ) THEN
        "Extension Production" := 0;
      "Extension Value" := "Extension Production" * "Unit Price";
      IF ("Extension Value" < 0) THEN
        "Extension Value" := 0;

      IF ("Cost Plus Entries Created") AND ("Extension Production" <> PrevExtensionProduction) THEN
        EXIT(FALSE);
      EXIT(TRUE);
    END;

    PROCEDURE RecalcNextRecordingFields@1100528303();
    VAR
      UnitPriceProdRecordingLine@1100528300 : Record 11071774;
      MessageStr@1100528302 : Text[250];
    BEGIN
      MessageStr := '';

      UnitPriceProdRecordingLine.SETRANGE("Service Order No.", "Service Order No.");
      UnitPriceProdRecordingLine.SETFILTER("Production Date/Time", '>%1', "Production Date/Time");
      UnitPriceProdRecordingLine.SETRANGE("Price Book Type", "Price Book Type");
      UnitPriceProdRecordingLine.SETRANGE("Price Book Code", "Price Book Code");
      UnitPriceProdRecordingLine.SETRANGE("Index Date", "Index Date");
      UnitPriceProdRecordingLine.SETRANGE(Room, Room);
      UnitPriceProdRecordingLine.SETRANGE("Unit Price Code", "Unit Price Code");
      IF NOT UnitPriceProdRecordingLine.FINDSET(TRUE) THEN
        EXIT;

      REPEAT
        UnitPriceProdRecordingLine.SETFILTER("Prev. Prod. Date/Time Filter", '<%1', UnitPriceProdRecordingLine."Production Date/Time");
        UnitPriceProdRecordingLine.CALCFIELDS("Previous Prod. Cumulative");
        UnitPriceProdRecordingLine.VALIDATE(Production);
        IF (NOT UnitPriceProdRecordingLine.CalculateFields) THEN BEGIN
          IF (UnitPriceProdRecordingLine."Cost Plus Entries Created") THEN BEGIN
            IF MessageStr <> '' THEN
              MessageStr += ', ';
            MessageStr := FORMAT(UnitPriceProdRecordingLine."Production Date/Time")
          END;
        END;
        UnitPriceProdRecordingLine.MODIFY;
      UNTIL (UnitPriceProdRecordingLine.NEXT = 0);

      IF (MessageStr <> '') AND (GUIALLOWED) THEN
        MESSAGE(Text002, MessageStr)
    END;

    PROCEDURE GetPreviousProdCumulative@1100528602() : Decimal;
    BEGIN
      SETFILTER("Prev. Prod. Date/Time Filter", '<%1', "Production Date/Time");
      CALCFIELDS("Previous Prod. Cumulative");
      EXIT("Previous Prod. Cumulative");
    END;

    PROCEDURE LookupUnitPriceLineCode@1100528700(CopyAllowed@1100528702 : Boolean);
    VAR
      ServiceUnitPriceLine@1100528701 : Record 11071769;
      ServiceUnitPriceLineList@1100528700 : Page 11125271;
    BEGIN
      ServiceUnitPriceLine.SETRANGE("Price Book Type", "Price Book Type");
      ServiceUnitPriceLine.SETRANGE("Price Book Code", "Price Book Code");
      ServiceUnitPriceLine.SETRANGE("Index Date", "Index Date");
      ServiceUnitPriceLine.SETFILTER(Part, '%1|%2', '', Part);
      ServiceUnitPriceLineList.LOOKUPMODE(TRUE);
      ServiceUnitPriceLineList.SETTABLEVIEW(ServiceUnitPriceLine);
      ServiceUnitPriceLine.SETRANGE(Code, "Unit Price Code");
      IF ServiceUnitPriceLine.FINDFIRST THEN
        ServiceUnitPriceLineList.SETRECORD(ServiceUnitPriceLine);
      ServiceUnitPriceLine.SETRANGE(Code);
      IF CopyAllowed THEN
        ServiceUnitPriceLineList.SetCopyFilter("Service Order No.", "Price Book Type",
          "Price Book Code", "Index Date", "Unit Price Code", Part, Room);
      IF (ServiceUnitPriceLineList.RUNMODAL = ACTION::LookupOK) THEN BEGIN
        ServiceUnitPriceLineList.GETRECORD(ServiceUnitPriceLine);
        "Unit Price Code" := ServiceUnitPriceLine.Code;
      END;
    END;

    PROCEDURE SetRenameIsAllowed@1100528300(NewRenameIsAllowed@1100528300 : Boolean);
    BEGIN
      RenameIsAllowed := NewRenameIsAllowed;
    END;

    PROCEDURE FillKeyFields@1100528301();
    VAR
      ServiceOrder@1100528300 : Record 11012823;
      ServiceOrderExtension@1100528301 : Record 11071727;
    BEGIN
      IF ("Service Order No." = '') THEN
        EXIT;

      ServiceOrder.GET("Service Order No.");
      ServiceOrderExtension.GET("Service Order No.");

      IF ("Price Book Type" = 0) THEN
        "Price Book Type" := ServiceOrder."Price Book Type";
      IF ("Price Book Code" = '') THEN
        "Price Book Code" := ServiceOrderExtension."Price Book Code";
      IF ("Index Date" = 0D) THEN
        "Index Date" := ServiceOrderExtension."Price Book Index Date";
    END;

    BEGIN
    END.
  }
}

