OBJECT Table 11071803 Service Survey
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ServiceSetup@1100528600 : Record 11012800;
               NoSeriesManagement@1100528601 : Codeunit 396;
             BEGIN
               ServiceSetup.GET;

               IF "Reference Date" = 0D THEN
                 "Reference Date" := TODAY;
               IF "No." = '' THEN BEGIN
                 ServiceSetup.TESTFIELD("Survey Nos.");
                 NoSeriesManagement.InitSeries(ServiceSetup."Survey Nos.", xRec."No. Series", 0D, "No.", "No. Series");
               END;

               UpdateSurchargesFromStd;
               UpdateSalesSurchargesFromStd;
               CopySummarySheet;
             END;

    OnDelete=VAR
               ServiceSurveyLocation@1100528600 : Record 11071804;
               ServiceSurveySurcharge@1100528601 : Record 11071808;
               ServSurvSummarySheet@1100528603 : Record 11072241;
               CommentLine@1100528602 : Record 97;
             BEGIN
               ServiceSurveyLocation.SETRANGE("Survey No.", "No.");
               ServiceSurveyLocation.DELETEALL(TRUE);

               ServiceSurveySurcharge.SETRANGE("Survey No.", "No.");
               ServiceSurveySurcharge.DELETEALL(TRUE);

               CommentLine.SETRANGE("Table Name", CommentLine."Table Name"::"Service Survey");
               CommentLine.SETRANGE("No.", "No.");
               CommentLine.DELETEALL(TRUE);

               ServSurvSummarySheet.SETRANGE("Survey No.", "No.");
               ServSurvSummarySheet.DELETEALL(TRUE);
             END;

    CaptionML=ENU=Service Survey;
    LookupPageID=Page11126108;
    DrillDownPageID=Page11126108;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;OnValidate=VAR
                                                                ServiceSetup@1100528601 : Record 11012800;
                                                                NoSeriesManagement@1100528600 : Codeunit 396;
                                                              BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  ServiceSetup.GET;
                                                                  NoSeriesManagement.TestManual(ServiceSetup."Survey Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 20  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 25  ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
    { 30  ;   ;Service Package     ;Code10        ;TableRelation="Service Package" WHERE (Select for Maint. Sales Rate=CONST(Yes));
                                                   CaptionML=ENU=Service Package }
    { 40  ;   ;Input Method        ;Option        ;OnValidate=VAR
                                                                ServSurveyLocStructure@1100528600 : Record 11071805;
                                                              BEGIN
                                                                IF "Input Method" = "Input Method"::Object THEN BEGIN
                                                                  ServSurveyLocStructure.SETRANGE("Survey No.", "No.");
                                                                  ServSurveyLocStructure.SETRANGE("Base Structure", TRUE);
                                                                  IF NOT ServSurveyLocStructure.ISEMPTY THEN
                                                                    ERROR(Text000);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Input Method;
                                                   OptionCaptionML=ENU=Object,Structure;
                                                   OptionString=Object,Structure }
    { 50  ;   ;Reference Date      ;Date          ;OnValidate=BEGIN
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=ENU=Reference Date }
    { 60  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 70  ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   OnValidate=VAR
                                                                ContactBusinessRelation@1100528600 : Record 5054;
                                                                Contact@1100528601 : Record 5050;
                                                              BEGIN
                                                                ContactBusinessRelation.SETCURRENTKEY("Link to Table", "No.");
                                                                ContactBusinessRelation.SETRANGE("Link to Table", ContactBusinessRelation."Link to Table"::Customer);
                                                                ContactBusinessRelation.SETRANGE("No.", "Customer No.");
                                                                IF ContactBusinessRelation.FINDFIRST THEN
                                                                  IF Contact.GET(ContactBusinessRelation."Contact No.") THEN BEGIN
                                                                    Contact.TESTFIELD(Blocked, FALSE);
                                                                    "Contact No. (Company)" := ContactBusinessRelation."Contact No.";
                                                                  END;

                                                                UpdateSalesSurchargesFromStd;
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=ENU=Customer No. }
    { 80  ;   ;Customer Name       ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Name WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=ENU=Customer Name;
                                                   Editable=No }
    { 90  ;   ;Total Cost          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Location Object"."Cost Amount" WHERE (Survey No.=FIELD(No.)));
                                                   CaptionML=ENU=Total Cost;
                                                   Editable=No }
    { 91  ;   ;Total Cost (Material);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Location Object"."Total Cost (Material)" WHERE (Survey No.=FIELD(No.)));
                                                   CaptionML=ENU=Total Cost (Material);
                                                   Editable=No }
    { 92  ;   ;Total Cost (Labor)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Location Object"."Total Cost (Labor)" WHERE (Survey No.=FIELD(No.)));
                                                   CaptionML=ENU=Total Cost (Labor);
                                                   Editable=No }
    { 93  ;   ;Total Cost (Subcontr.);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Location Object"."Total Cost (Subcontr.)" WHERE (Survey No.=FIELD(No.)));
                                                   CaptionML=ENU=Total Cost (Subcontracting);
                                                   Editable=No }
    { 94  ;   ;Total Cost (Plant)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Location Object"."Total Cost (Plant)" WHERE (Survey No.=FIELD(No.)));
                                                   CaptionML=ENU=Total Cost (Plant);
                                                   Editable=No }
    { 95  ;   ;Total Cost (Sundry) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Location Object"."Total Cost (Sundry)" WHERE (Survey No.=FIELD(No.)));
                                                   CaptionML=ENU=Total Cost (Sundry);
                                                   Editable=No }
    { 96  ;   ;Total Surcharge     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Location Object"."Total Surcharge Amount" WHERE (Survey No.=FIELD(No.)));
                                                   CaptionML=ENU=Total Surcharge;
                                                   Editable=No }
    { 97  ;   ;Total Sales Surcharge;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Location Object"."Total Sales Surch. Amount" WHERE (Survey No.=FIELD(No.)));
                                                   CaptionML=ENU=Total Sales Surcharge;
                                                   Editable=No }
    { 110 ;   ;Total Sales Amount  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Location Object"."Sales Amount" WHERE (Survey No.=FIELD(No.)));
                                                   CaptionML=ENU=Total Sales Amount;
                                                   Editable=No }
    { 120 ;   ;Total Service Amount;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Location Object"."Service Amount" WHERE (Survey No.=FIELD(No.)));
                                                   CaptionML=ENU=Total Service Amount;
                                                   Editable=No }
    { 125 ;   ;Total Hours         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Location Object"."Total Hours" WHERE (Survey No.=FIELD(No.)));
                                                   CaptionML=ENU=Total Hours;
                                                   Editable=No }
    { 130 ;   ;Contract Template Code;Code10      ;TableRelation="Service-Contract Template";
                                                   OnValidate=VAR
                                                                ServiceContractTemplate@1100528400 : Record 11071754;
                                                              BEGIN
                                                                IF ServiceContractTemplate.GET("Contract Template Code") THEN BEGIN
                                                                  VALIDATE("Invoice Type", ServiceContractTemplate."Invoice Type");
                                                                  VALIDATE("Service Type", ServiceContractTemplate."Service Type");
                                                                  VALIDATE("Global Dimension 1 Code", ServiceContractTemplate."Global Dimension 1 Code");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Contract Template Code }
    { 150 ;   ;Invoice Type        ;Option        ;OnValidate=BEGIN
                                                                IF xRec."Invoice Type" <> "Invoice Type" THEN
                                                                  IF "Invoice Type" = "Invoice Type"::Dynamic THEN BEGIN
                                                                    "Installment Description" := '';
                                                                    CLEAR("Installment Invoice Interval");
                                                                  END;
                                                              END;

                                                   CaptionML=ENU=Invoice Type;
                                                   OptionCaptionML=ENU=Dynamic,Installments;
                                                   OptionString=Dynamic,Installments }
    { 170 ;   ;Starting Date       ;Date          ;CaptionML=ENU=Starting Date }
    { 180 ;   ;Sales Price Based On;Option        ;OnValidate=BEGIN
                                                                TESTFIELD("Summary Sheet", '');
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=ENU=Sales Price Based On;
                                                   OptionCaptionML=ENU=Service Rate,Cost Price + Sales Surcharge;
                                                   OptionString=Service Rate,Cost Price + Sales Surcharge }
    { 190 ;   ;Contact No. (Company);Code20       ;TableRelation=Contact;
                                                   OnValidate=VAR
                                                                ContactBusinessRelation@1100528601 : Record 5054;
                                                                Contact@1100528600 : Record 5050;
                                                              BEGIN
                                                                IF "Contact No. (Company)" <> xRec."Contact No. (Company)" THEN
                                                                  "Contact No. (Person)" := '';

                                                                IF "Contact No. (Company)" <> '' THEN BEGIN
                                                                  Contact.GET("Contact No. (Company)");
                                                                  Contact.TESTFIELD(Blocked, FALSE);
                                                                  IF (Contact.Type = Contact.Type::Person) AND
                                                                     (Contact."Company No." <> '') THEN
                                                                    ERROR(Text001);

                                                                  ContactBusinessRelation.RESET;
                                                                  ContactBusinessRelation.SETCURRENTKEY("Contact No.", "Business Relation Code");
                                                                  ContactBusinessRelation.SETRANGE("Contact No.", "Contact No. (Company)");
                                                                  ContactBusinessRelation.SETRANGE("Link to Table", ContactBusinessRelation."Link to Table"::Customer);
                                                                  IF ContactBusinessRelation.FINDFIRST THEN
                                                                    VALIDATE("Customer No.", ContactBusinessRelation."No.")
                                                                  ELSE
                                                                    VALIDATE("Customer No.", '');
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Contact No. (Company) }
    { 200 ;   ;Contact Name (Company);Text50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD("Contact No. (Company)")));
                                                   CaptionML=ENU=Contact Name (Company);
                                                   Editable=No }
    { 210 ;   ;Contact No. (Person);Code20        ;TableRelation=Contact WHERE (Company No.=FIELD("Contact No. (Company)"),
                                                                                Type=CONST(Person),
                                                                                Blocked=CONST(No));
                                                   CaptionML=ENU=Contact Person }
    { 220 ;   ;Contact Name (Person);Text50       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD("Contact No. (Person)")));
                                                   CaptionML=ENU=Name Contact Person;
                                                   Editable=No }
    { 230 ;   ;Service Type        ;Code20        ;TableRelation="Service Type";
                                                   OnValidate=VAR
                                                                ServiceType@1100409000 : Record 11012814;
                                                              BEGIN
                                                                IF "Service Type" <> xRec."Service Type" THEN BEGIN
                                                                  UpdateSurchargesFromStd;
                                                                  CalcTotals;

                                                                  IF ServiceType.GET("Service Type") THEN
                                                                    IF ServiceType."Department Code" <> '' THEN
                                                                      VALIDATE("Global Dimension 1 Code", ServiceType."Department Code");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Service Type }
    { 240 ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1, "Global Dimension 1 Code");

                                                                UpdateSurchargesFromStd;
                                                                UpdateSalesSurchargesFromStd;
                                                              END;

                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   CaptionClass='1,1,1' }
    { 250 ;   ;Offered Amount      ;Decimal       ;CaptionML=ENU=Offered Amount }
    { 260 ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Comment Line" WHERE (Table Name=CONST(Service Survey),
                                                                                           No.=FIELD(No.)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 270 ;   ;Installment Description;Text50     ;OnValidate=BEGIN
                                                                IF "Installment Description" <> '' THEN
                                                                  TESTFIELD("Invoice Type", "Invoice Type"::Installments);
                                                              END;

                                                   CaptionML=ENU=Installment Description }
    { 280 ;   ;Installment Invoice Interval;DateFormula;
                                                   OnValidate=BEGIN
                                                                IF FORMAT("Installment Invoice Interval") <> '' THEN BEGIN
                                                                  TESTFIELD("Invoice Type", "Invoice Type"::Installments);
                                                                  IF CALCDATE("Installment Invoice Interval", TODAY) <= TODAY THEN
                                                                    FIELDERROR("Installment Invoice Interval");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Installment Invoice Interval }
    { 290 ;   ;Summary Sheet       ;Code10        ;TableRelation="Serv. Surv. Summary Sheet".Code WHERE (Summary Type=CONST(Survey),
                                                                                                         Survey No.=FIELD(No.));
                                                   OnValidate=BEGIN
                                                                IF "Summary Sheet" <> '' THEN
                                                                  TESTFIELD("Sales Price Based On", "Sales Price Based On"::"Cost Price + Sales Surcharge");
                                                                IF xRec."Summary Sheet" <> "Summary Sheet" THEN
                                                                  VALIDATE("Summary Sheet Seq. No.", 0);
                                                              END;

                                                   CaptionML=ENU=Summary Sheet }
    { 300 ;   ;Summary Sheet Seq. No.;Integer     ;TableRelation="Serv. Surv. Summary Sheet"."Seq. No." WHERE (Summary Type=CONST(Survey),
                                                                                                               Survey No.=FIELD(No.),
                                                                                                               Code=FIELD(Summary Sheet));
                                                   CaptionML=ENU=Summary Sheet Seq. No.;
                                                   BlankZero=Yes }
    { 310 ;   ;Total Surcharge (Material);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Location Object"."Total Surch. Amount (Material)" WHERE (Survey No.=FIELD(No.)));
                                                   CaptionML=ENU=Total Surcharge (Material);
                                                   Editable=No }
    { 320 ;   ;Total Surcharge (Labor);Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Location Object"."Total Surch. Amount (Labor)" WHERE (Survey No.=FIELD(No.)));
                                                   CaptionML=ENU=Total Surcharge (Labor);
                                                   Editable=No }
    { 330 ;   ;Total Surcharge (Subcontr.);Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Location Object"."Total Surch. Amount (Subc.)" WHERE (Survey No.=FIELD(No.)));
                                                   CaptionML=ENU=Total Surcharge (Subcontracting);
                                                   Editable=No }
    { 340 ;   ;Total Surcharge (Plant);Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Location Object"."Total Surch. Amount (Plant)" WHERE (Survey No.=FIELD(No.)));
                                                   CaptionML=ENU=Total Surcharge (Plant);
                                                   Editable=No }
    { 350 ;   ;Total Surcharge (Sundry);Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Location Object"."Total Surch. Amount (Sundry)" WHERE (Survey No.=FIELD(No.)));
                                                   CaptionML=ENU=Total Surcharge (Sundry);
                                                   Editable=No }
    { 360 ;   ;Total Sales Surcharge (Mat.);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Location Object"."Total Sales Surch. Amt. (Mat.)" WHERE (Survey No.=FIELD(No.)));
                                                   CaptionML=ENU=Total Sales Surcharge (Material);
                                                   Editable=No }
    { 370 ;   ;Total Sales Surcharge (Labor);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Location Object"."Total Sales Surch. Amt. (Lab.)" WHERE (Survey No.=FIELD(No.)));
                                                   CaptionML=ENU=Total Sales Surcharge (Labor);
                                                   Editable=No }
    { 380 ;   ;Total Sales Surcharge (Subc.);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Location Object"."Total Sales Surch. Amt. (Sub.)" WHERE (Survey No.=FIELD(No.)));
                                                   CaptionML=ENU=Total Sales Surcharge (Subcontracting);
                                                   Editable=No }
    { 390 ;   ;Total Sales Surcharge (Plant);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Location Object"."Total Sales Surch. Amt. (Plt.)" WHERE (Survey No.=FIELD(No.)));
                                                   CaptionML=ENU=Total Sales Surcharge (Plant);
                                                   Editable=No }
    { 400 ;   ;Total Sales Surcharge (Sundry);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Location Object"."Total Sales Surch. Amt. (Sun.)" WHERE (Survey No.=FIELD(No.)));
                                                   CaptionML=ENU=Total Sales Surcharge (Sundry);
                                                   Editable=No }
    { 500 ;   ;Register Date       ;Date          ;CaptionML=ENU=Register Date;
                                                   Description=DP00978 }
    { 510 ;   ;Estimator           ;Code20        ;TableRelation=Employee.No.;
                                                   CaptionML=ENU=Estimator;
                                                   Description=DP00978 }
    { 511 ;   ;Name Estimator      ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Full Name" WHERE (No.=FIELD(Estimator)));
                                                   CaptionML=ENU=Name Estimator;
                                                   Description=DP00978;
                                                   Editable=No }
    { 520 ;   ;Status              ;Code10        ;TableRelation="Estimate Status";
                                                   CaptionML=ENU=Status;
                                                   Description=DP00978 }
    { 530 ;   ;Template Code       ;Code20        ;CaptionML=ENU=Template Code;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528600 : TextConst 'ENU=Base Location Structures already exist';
      Text001@1100528601 : TextConst 'ENU=Only Relations of Type Company or Person without Company allowed';
      Text002@1100528602 : TextConst 'ENU=Update Objects #1##### of #2#####';
      Text003@1100528603 : TextConst 'ENU=Survey %1 contains Sales Surcharge Lines, which is not permitted in conjunction with Summery Sheets';
      Text004@1100528604 : TextConst 'ENU=Do you want to create a Service Survey using a Service Survey Template?';

    PROCEDURE AssistEdit@2(OldServiceSurvey@1000 : Record 11071803) : Boolean;
    VAR
      ServiceSurvey@1001 : Record 11071803;
      ServiceSetup@1100528600 : Record 11012800;
      NoSeriesManagement@1100528601 : Codeunit 396;
    BEGIN
      WITH ServiceSurvey DO BEGIN
        ServiceSurvey := Rec;
        ServiceSetup.GET;
        ServiceSetup.TESTFIELD("Survey Nos.");
        IF NoSeriesManagement.SelectSeries(
          ServiceSetup."Survey Nos.", OldServiceSurvey."No. Series", "No. Series")
        THEN BEGIN
          NoSeriesManagement.SetSeries("No.");
          Rec := ServiceSurvey;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE CalcTotals@1100528600();
    VAR
      ServSurvLocationObject@1100528600 : Record 11071813;
      ServSurvLocObjDetail@1100528601 : Record 11071807;
      ServSurvSummarySheet@1100528604 : Record 11072241;
      ProgressDialog@1100528602 : Dialog;
      RecordCounter@1100528603 : Integer;
    BEGIN
      MODIFY;
      ProgressDialog.OPEN(Text002);
      ServSurvLocationObject.SETRANGE("Survey No.", "No.");
      ServSurvLocationObject.SETRANGE("Objects Created", FALSE);
      IF ServSurvLocationObject.FINDSET(TRUE) THEN BEGIN
        ProgressDialog.UPDATE(2, ServSurvLocationObject.COUNT);
        REPEAT
          RecordCounter += 1;
          ProgressDialog.UPDATE(1, ServSurvLocationObject.COUNT);
          ServSurvLocObjDetail.SETRANGE("Survey No.", ServSurvLocationObject."Survey No.");
          ServSurvLocObjDetail.SETRANGE("Location Code", ServSurvLocationObject."Location Code");
          ServSurvLocObjDetail.SETRANGE("Seq. No.", ServSurvLocationObject."Seq. No.");
          IF ServSurvLocObjDetail.FINDSET(TRUE) THEN
            REPEAT
              ServSurvLocObjDetail.UpdateTotals;
              ServSurvLocObjDetail.MODIFY(TRUE);
            UNTIL ServSurvLocObjDetail.NEXT = 0;
          ServSurvLocationObject.UpdateTotals;
          ServSurvLocationObject.MODIFY(TRUE);
        UNTIL ServSurvLocationObject.NEXT = 0;
      END;
      ProgressDialog.CLOSE;

      UpdateCurrentSummarySheet;
    END;

    PROCEDURE GetTryOut@1210190000(IAction@1210190000 : Integer) Result : Text[30];
    VAR
      TryoutSuccessor@1210190001 : Record 11012761;
    BEGIN
      IF TryoutSuccessor.READPERMISSION THEN
        Result := TryoutSuccessor.GetTryOut('', '', '', '', '', "No.", '', IAction);

      EXIT(Result);
    END;

    PROCEDURE ShowTryOut@1210190001(iAction@1210190000 : Integer);
    VAR
      TryoutSuccessor@1210190001 : Record 11012761;
    BEGIN
      TryoutSuccessor.ShowTryOut('', '', '', '', '', "No.", '', iAction);
    END;

    PROCEDURE UpdateSurchargesFromStd@1100528601();
    VAR
      ServiceSurchargeVersion@1100528600 : Record 11071783;
      ServiceSurchargeLine@1100528601 : Record 11071784;
      ServiceSurveySurcharge@1100528602 : Record 11071808;
      LineNo@1100528603 : Integer;
    BEGIN
      ServiceSurveySurcharge.SETRANGE("Survey No.", "No.");
      ServiceSurveySurcharge.SETRANGE("Surcharge Type", ServiceSurveySurcharge."Surcharge Type"::Cost);
      ServiceSurveySurcharge.DELETEALL(TRUE);

      ServiceSurchargeVersion.SETRANGE(Type, ServiceSurchargeVersion.Type::Company);
      ServiceSurchargeVersion.SETRANGE(Code, '');
      ServiceSurchargeVersion.SETRANGE("Source Type", ServiceSurchargeVersion."Source Type"::Contract);
      ServiceSurchargeVersion.SETRANGE("Service Type", "Service Type");
      ServiceSurchargeVersion.SETRANGE("Department Code", "Global Dimension 1 Code");
      ServiceSurchargeVersion.SETFILTER("Index Date", '<=%1', "Reference Date");
      ServiceSurchargeVersion.SETRANGE(Expired, FALSE);
      IF "Global Dimension 1 Code" <> '' THEN
        IF ServiceSurchargeVersion.ISEMPTY THEN
          ServiceSurchargeVersion.SETRANGE("Department Code", '');
      IF "Service Type" <> '' THEN
        IF ServiceSurchargeVersion.ISEMPTY THEN
          ServiceSurchargeVersion.SETRANGE("Service Type", '');
      IF ServiceSurchargeVersion.FINDLAST THEN BEGIN
        ServiceSurchargeLine.SETRANGE(Type, ServiceSurchargeVersion.Type);
        ServiceSurchargeLine.SETRANGE(Code, ServiceSurchargeVersion.Code);
        ServiceSurchargeLine.SETRANGE("Source Type", ServiceSurchargeVersion."Source Type");
        ServiceSurchargeLine.SETRANGE("Service Type", ServiceSurchargeVersion."Service Type");
        ServiceSurchargeLine.SETRANGE("Department Code", ServiceSurchargeVersion."Department Code");
        ServiceSurchargeLine.SETRANGE("Index Date", ServiceSurchargeVersion."Index Date");
        IF ServiceSurchargeLine.FINDSET THEN
          REPEAT
            LineNo += 10000;
            ServiceSurveySurcharge.INIT;
            ServiceSurveySurcharge."Survey No." := "No.";
            ServiceSurveySurcharge."Surcharge Type" := ServiceSurveySurcharge."Surcharge Type"::Cost;
            ServiceSurveySurcharge."Service Type" := ServiceSurchargeLine."Service Type";
            ServiceSurveySurcharge."Line No." := LineNo;
            ServiceSurveySurcharge.VALIDATE("Cost Type Filter", ServiceSurchargeLine."Cost Type Filter");
            ServiceSurveySurcharge.VALIDATE("Cost Object", ServiceSurchargeLine."Cost Object");
            ServiceSurveySurcharge.VALIDATE(Description, ServiceSurchargeLine.Description);
            ServiceSurveySurcharge.VALIDATE("Surcharge Percentage", ServiceSurchargeLine."Surcharge %");
            ServiceSurveySurcharge.INSERT(TRUE);
          UNTIL ServiceSurchargeLine.NEXT = 0;
      END;
    END;

    PROCEDURE UpdateSalesSurchargesFromStd@1100528602();
    VAR
      StdSurvSalesSurchVers@1100528600 : Record 11071916;
      StdSurvSalesSurchLine@1100528601 : Record 11071917;
      ServiceSurveySurcharge@1100528602 : Record 11071808;
    BEGIN
      ServiceSurveySurcharge.SETRANGE("Survey No.", "No.");
      ServiceSurveySurcharge.SETRANGE("Surcharge Type", ServiceSurveySurcharge."Surcharge Type"::Sales);
      ServiceSurveySurcharge.DELETEALL(TRUE);

      StdSurvSalesSurchVers.SETRANGE(Type, StdSurvSalesSurchVers.Type::Customer);
      StdSurvSalesSurchVers.SETRANGE(Code, "Customer No.");
      StdSurvSalesSurchVers.SETRANGE("Department Code", "Global Dimension 1 Code");
      StdSurvSalesSurchVers.SETRANGE(Expired, FALSE);
      StdSurvSalesSurchVers.SETFILTER("Index Date", '<=%1', "Reference Date");
      IF "Global Dimension 1 Code" <> '' THEN
        IF StdSurvSalesSurchVers.ISEMPTY THEN
          StdSurvSalesSurchVers.SETRANGE("Department Code", '');
      IF StdSurvSalesSurchVers.ISEMPTY THEN BEGIN
        StdSurvSalesSurchVers.SETRANGE(Type, StdSurvSalesSurchVers.Type::Company);
        StdSurvSalesSurchVers.SETRANGE(Code, '');
        StdSurvSalesSurchVers.SETRANGE("Department Code", "Global Dimension 1 Code");
        IF "Global Dimension 1 Code" <> '' THEN
          IF StdSurvSalesSurchVers.ISEMPTY THEN
            StdSurvSalesSurchVers.SETRANGE("Department Code", '');
      END;
      IF StdSurvSalesSurchVers.FINDLAST THEN BEGIN
        StdSurvSalesSurchLine.SETRANGE(Type, StdSurvSalesSurchVers.Type);
        StdSurvSalesSurchLine.SETRANGE(Code, StdSurvSalesSurchVers.Code);
        StdSurvSalesSurchLine.SETRANGE("Department Code", StdSurvSalesSurchVers."Department Code");
        StdSurvSalesSurchLine.SETRANGE("Index Date", StdSurvSalesSurchVers."Index Date");
        IF StdSurvSalesSurchLine.FINDSET THEN
          REPEAT
            ServiceSurveySurcharge."Survey No." := "No.";
            ServiceSurveySurcharge."Surcharge Type" := ServiceSurveySurcharge."Surcharge Type"::Sales;
            ServiceSurveySurcharge."Line No." := StdSurvSalesSurchLine."Line No.";
            ServiceSurveySurcharge.Description := StdSurvSalesSurchLine.Description;
            ServiceSurveySurcharge."Surcharge Percentage" := StdSurvSalesSurchLine."Surcharge Percentage";
            ServiceSurveySurcharge."Cost Type Filter" := StdSurvSalesSurchLine."Cost Type Filter";
            ServiceSurveySurcharge.INSERT(TRUE);
          UNTIL StdSurvSalesSurchLine.NEXT = 0;
      END;
    END;

    PROCEDURE GetMarginPerc@1100528603() MarginPerc : Decimal;
    BEGIN
      CALCFIELDS("Total Cost", "Total Sales Amount");
      IF "Total Cost" <> 0 THEN
        MarginPerc := ("Total Sales Amount" - "Total Cost") / "Total Cost" * 100
      ELSE
        MarginPerc := 0;
    END;

    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    VAR
      DimMgt@1100525000 : Codeunit 408;
      DimValRec@1100525001 : Record 349;
    BEGIN
      IF ShortcutDimCode = '' THEN EXIT;
      DimMgt.ValidateDimValueCode(FieldNumber, ShortcutDimCode);
      DimMgt.GetDimValueRec(FieldNumber, ShortcutDimCode, DimValRec, TRUE,'');
      IF NOT DimMgt.CheckDimValue(DimValRec."Dimension Code", ShortcutDimCode) THEN
        ERROR(DimMgt.GetDimErr);
    END;

    PROCEDURE ShowDetails@1100528616();
    VAR
      ServSurvLocObjDetail@1100528600 : Record 11071807;
    BEGIN
      ServSurvLocObjDetail.SETRANGE("Survey No.", "No.");
      PAGE.RUNMODAL(PAGE::"Service Survey Line Details", ServSurvLocObjDetail);
    END;

    PROCEDURE GetSummaryTotal@1100528605(ISummarySheetCode@1100528603 : Code[10];ISummarySheetSeqnNo@1100528604 : Integer) : Decimal;
    VAR
      ServSurvSummarySheet@1100528600 : Record 11072241;
    BEGIN
      IF ISummarySheetSeqnNo = 0 THEN
        ServSurvSummarySheet.SETCURRENTKEY("Summary Type", "Survey No.", Code, "Index Date");
      ServSurvSummarySheet.SETRANGE("Summary Type", ServSurvSummarySheet."Summary Type"::Survey);
      ServSurvSummarySheet.SETRANGE("Survey No.", "No.");
      ServSurvSummarySheet.SETRANGE(Code, ISummarySheetCode);
      ServSurvSummarySheet.SETRANGE("Seq. No.", ISummarySheetSeqnNo);
      IF ServSurvSummarySheet.FINDLAST THEN
        EXIT(ServSurvSummarySheet.GetSummaryTotal);
    END;

    LOCAL PROCEDURE GetCurrentSummarySheet@1100528608(VAR OServSurvSummarySheet@1100528600 : Record 11072241) : Boolean;
    VAR
      ServSurvSummarySheet@1100528601 : Record 11072241;
    BEGIN
      ServSurvSummarySheet.SETCURRENTKEY("Summary Type", "Survey No.", Code, "Index Date");
      ServSurvSummarySheet.SETRANGE("Summary Type", ServSurvSummarySheet."Summary Type"::Survey);
      ServSurvSummarySheet.SETRANGE("Survey No.", "No.");
      ServSurvSummarySheet.SETRANGE(Code, "Summary Sheet");
      OServSurvSummarySheet.SETRANGE("Seq. No.", "Summary Sheet Seq. No.");
      IF ServSurvSummarySheet.FINDLAST THEN BEGIN
        OServSurvSummarySheet := ServSurvSummarySheet;
        EXIT(TRUE);
      END ELSE
        CLEAR(OServSurvSummarySheet);
    END;

    PROCEDURE GetCurrentSummaryTotal@1100528604() : Decimal;
    VAR
      ServSurvSummarySheet@1100528600 : Record 11072241;
    BEGIN
      IF GetCurrentSummarySheet(ServSurvSummarySheet) THEN
        EXIT(ServSurvSummarySheet.GetSummaryTotal);
    END;

    LOCAL PROCEDURE UpdateCurrentSummarySheet@1100528609();
    VAR
      ServSurvSummarySheet@1100528600 : Record 11072241;
    BEGIN
      IF GetCurrentSummarySheet(ServSurvSummarySheet) THEN
        ServSurvSummarySheet.ReCalcSummaryLines;
    END;

    PROCEDURE UseServiceSurveyTemplate@1100528606();
    VAR
      ServiceSurveyTemplate@1100528600 : Record 11072289;
    BEGIN
      IF NOT ServiceSurveyTemplate.ISEMPTY THEN
        IF CONFIRM(Text004, TRUE) THEN
          IF PAGE.RUNMODAL(0, ServiceSurveyTemplate) = ACTION::LookupOK THEN BEGIN
            "Template Code" := ServiceSurveyTemplate.Code;
            TRANSFERFIELDS(ServiceSurveyTemplate, FALSE);
          END;
    END;

    LOCAL PROCEDURE CopySummarySheet@1100528607();
    VAR
      ServiceSurveyTemplate@1100528600 : Record 11072289;
      FromServSurvSummarySheet@1100528601 : Record 11072241;
      ServSurvSummarySheet@1100528602 : Record 11072241;
    BEGIN
      IF "Template Code" <> '' THEN BEGIN
        ServiceSurveyTemplate.GET("Template Code");
        IF ServiceSurveyTemplate."Summary Sheet" <> '' THEN BEGIN
          IF FromServSurvSummarySheet.GET(
            FromServSurvSummarySheet."Summary Type"::Standard, '', ServiceSurveyTemplate."Summary Sheet", ServiceSurveyTemplate."Summary Sheet Seq. No.")
          THEN BEGIN
            ServSurvSummarySheet."Summary Type" := ServSurvSummarySheet."Summary Type"::Survey;
            ServSurvSummarySheet.Code := ServiceSurveyTemplate."Summary Sheet";
            ServSurvSummarySheet."Survey No." := "No.";
            ServSurvSummarySheet."Seq. No." := ServiceSurveyTemplate."Summary Sheet Seq. No.";
            ServSurvSummarySheet.INSERT(TRUE);
            ServSurvSummarySheet.CopyFrom(FromServSurvSummarySheet);
          END;
        END;
      END;
    END;

    BEGIN
    END.
  }
}

