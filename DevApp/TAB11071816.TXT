OBJECT Table 11071816 Complex
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ServiceSetup@1100528600 : Record 11012800;
               NoSeriesManagement@1100528601 : Codeunit 396;
             BEGIN
               "Creation Date" := TODAY;
               "Created By" := USERID;

               IF Code = '' THEN BEGIN
                 ServiceSetup.GET;
                 ServiceSetup.TESTFIELD("Complex Nos.");
                 NoSeriesManagement.InitSeries(ServiceSetup."Complex Nos.", xRec."No. Series", 0D, Code, "No. Series")
               END;
             END;

    OnModify=BEGIN
               "Modification Date" := TODAY;
               "Modification Time" := TIME;
               "Modified By" := USERID;
             END;

    OnDelete=VAR
               ComplexBuildingSpecification@1100528300 : Record 11071920;
               Building@1100528600 : Record 11071819;
             BEGIN
               ComplexBuildingSpecification.SETRANGE("Specification Type",
                 ComplexBuildingSpecification."Specification Type"::Complex);
               ComplexBuildingSpecification.SETRANGE(Code, Code);
               ComplexBuildingSpecification.DELETEALL;

               Building.SETCURRENTKEY("Complex Code");
               Building.SETRANGE("Complex Code", Code);
               IF NOT Building.ISEMPTY THEN
                 ERROR(Text000);
             END;

    CaptionML=ENU=Complex;
    LookupPageID=Page11126257;
    DrillDownPageID=Page11126257;
  }
  FIELDS
  {
    { 10  ;   ;Code                ;Code20        ;OnValidate=VAR
                                                                ServiceSetup@1210190000 : Record 11012800;
                                                                NoSeriesManagement@1210190001 : Codeunit 396;
                                                              BEGIN
                                                                IF Code <> xRec.Code THEN BEGIN
                                                                  ServiceSetup.GET;
                                                                  NoSeriesManagement.TestManual(ServiceSetup."Complex Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Code }
    { 20  ;   ;Description         ;Text50        ;OnValidate=BEGIN
                                                                "Search Description" := Description;
                                                              END;

                                                   CaptionML=ENU=Description }
    { 30  ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
    { 40  ;   ;Search Description  ;Code50        ;CaptionML=ENU=Search Description }
    { 50  ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   OnValidate=VAR
                                                                Contact@1100528601 : Record 5050;
                                                              BEGIN
                                                                CALCFIELDS("Customer Name");
                                                              END;

                                                   CaptionML=ENU=Customer No. }
    { 51  ;   ;Customer Name       ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Name WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=ENU=Customer Name;
                                                   Editable=No }
    { 60  ;No ;Contact             ;Code20        ;TableRelation=Contact;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Contact Name");
                                                              END;

                                                   CaptionML=ENU=Contact }
    { 61  ;   ;Contact Name        ;Text50        ;OnLookup=BEGIN
                                                              ShowContact;
                                                            END;

                                                   CaptionML=ENU=Contact Name }
    { 70  ;   ;Creation Date       ;Date          ;CaptionML=ENU=Creation Date;
                                                   Editable=No }
    { 71  ;   ;Created By          ;Text50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Created By;
                                                   Editable=No }
    { 80  ;   ;Modification Date   ;Date          ;CaptionML=ENU=Modification Date;
                                                   Editable=No }
    { 81  ;   ;Modification Time   ;Time          ;CaptionML=ENU=Modification Time;
                                                   Editable=No }
    { 82  ;   ;Modified By         ;Text50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Modified By;
                                                   Editable=No }
    { 90  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 100 ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Comment Line" WHERE (Table Name=CONST(Complex),
                                                                                           No.=FIELD(Code)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 110 ;   ;Preferred Service Location No.;Code20;
                                                   TableRelation="Service Location";
                                                   OnLookup=VAR
                                                              ServiceLocation@1100528300 : Record 11012801;
                                                            BEGIN
                                                              ServiceLocation.SETCURRENTKEY("Complex Code");
                                                              ServiceLocation.SETRANGE("Complex Code", Code);
                                                              IF "Preferred Service Location No." <> '' THEN
                                                                ServiceLocation.GET("Preferred Service Location No.");
                                                              IF PAGE.RUNMODAL(0, ServiceLocation) = ACTION::LookupOK THEN
                                                                VALIDATE("Preferred Service Location No.", ServiceLocation."No.");
                                                            END;

                                                   CaptionML=ENU=Preferred Service Location No. }
    { 130 ;   ;Location Manager    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=ENU=Location Manager }
    { 140 ;   ;Location Manager Name;Text50       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Salesperson/Purchaser.Name WHERE (Code=FIELD(Location Manager)));
                                                   CaptionML=ENU=Location Manager Name;
                                                   Editable=No }
    { 150 ;   ;Preferred Employee OBS;Code20      ;TableRelation="Resource (WOP)" WHERE (Type=CONST(Employee));
                                                   CaptionML=ENU=Preferred Employee OBSOLETE;
                                                   Description=OBSOLETE;
                                                   Editable=No }
    { 170 ;   ;Contact No. (Company);Code20       ;TableRelation=Contact;
                                                   OnValidate=VAR
                                                                Contact@1100528600 : Record 5050;
                                                              BEGIN
                                                                IF "Contact No. (Company)" <> xRec."Contact No. (Company)" THEN
                                                                  "Contact No. (Person)" := '';

                                                                IF "Contact No. (Company)" <> '' THEN BEGIN
                                                                  Contact.GET("Contact No. (Company)");
                                                                  Contact.TESTFIELD(Blocked, FALSE);
                                                                  IF (Contact.Type = Contact.Type::Person) AND
                                                                     (Contact."Company No." <> '') THEN
                                                                    ERROR(Text001);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Contact No. (Company) }
    { 180 ;   ;Contact Name (Company);Text50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD("Contact No. (Company)")));
                                                   CaptionML=ENU=Contact Name (Company);
                                                   Editable=No }
    { 190 ;   ;Contact No. (Person);Code20        ;TableRelation=Contact WHERE (Company No.=FIELD("Contact No. (Company)"),
                                                                                Type=CONST(Person),
                                                                                Blocked=CONST(No));
                                                   CaptionML=ENU=Contact Person }
    { 200 ;   ;Contact Name (Person);Text50       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD("Contact No. (Person)")));
                                                   CaptionML=ENU=Name Contact Person;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528601 : TextConst 'ENU=Related Service Location exist. Deleting not allowed.';
      Text001@1100528600 : TextConst 'ENU=Only Relations of Type Company or Person without Company allowed';

    PROCEDURE AssistEdit@2(OldComplex@1000 : Record 11071816) : Boolean;
    VAR
      Complex@1001 : Record 11071816;
      ServiceSetup@1100528600 : Record 11012800;
      NoSeriesManagement@1100528601 : Codeunit 396;
    BEGIN
      WITH Complex DO BEGIN
        Complex := Rec;
        ServiceSetup.GET;
        ServiceSetup.TESTFIELD("Complex Nos.");
        IF NoSeriesManagement.SelectSeries(
          ServiceSetup."Complex Nos.", OldComplex."No. Series", "No. Series")
        THEN BEGIN
          NoSeriesManagement.SetSeries(Code);
          Rec := Complex;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE ShowContact@1210190000();
    VAR
      Customer@1210190000 : Record 18;
      Contact@1210190006 : Record 5050;
    BEGIN
      Customer.ShowContactName("Customer No.", Contact);
      IF Contact.Name <> '' THEN
        VALIDATE("Contact Name", Contact.Name);
    END;

    BEGIN
    END.
  }
}

