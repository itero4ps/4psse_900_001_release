OBJECT Table 11071819 Building
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ServiceSetup@1100528600 : Record 11012800;
               NoSeriesManagement@1100528601 : Codeunit 396;
             BEGIN
               "Creation Date" := TODAY;
               "Created By" := USERID;

               IF Code = '' THEN BEGIN
                 ServiceSetup.GET;
                 ServiceSetup.TESTFIELD("Building Nos.");
                 NoSeriesManagement.InitSeries(ServiceSetup."Building Nos.", xRec."No. Series", 0D, Code, "No. Series");
               END;
             END;

    OnModify=BEGIN
               "Modification Date" := TODAY;
               "Modification Time" := TIME;
               "Modified By" := USERID;
             END;

    OnDelete=VAR
               ServiceLocation@1100528600 : Record 11012801;
               BuildingObjectRelation@1100528300 : Record 11071820;
               ComplexBuildingSpecification@1100528601 : Record 11071920;
             BEGIN
               ServiceLocation.SETCURRENTKEY("Building Code");
               ServiceLocation.SETRANGE("Building Code", Code);
               IF NOT ServiceLocation.ISEMPTY THEN
                 ERROR(Text002);

               BuildingObjectRelation.SETRANGE("Building Code", Code);
               BuildingObjectRelation.DELETEALL(TRUE);

               ComplexBuildingSpecification.SETRANGE("Specification Type", ComplexBuildingSpecification."Specification Type"::Building);
               ComplexBuildingSpecification.SETRANGE(Code, Code);
               ComplexBuildingSpecification.DELETEALL(TRUE);
             END;

    CaptionML=ENU=Building;
    LookupPageID=Page11126263;
    DrillDownPageID=Page11126263;
  }
  FIELDS
  {
    { 10  ;   ;Code                ;Code20        ;OnValidate=VAR
                                                                ServiceSetup@1210190001 : Record 11012800;
                                                                NoSeriesManagement@1210190000 : Codeunit 396;
                                                              BEGIN
                                                                IF Code <> xRec.Code THEN BEGIN
                                                                  ServiceSetup.GET;
                                                                  NoSeriesManagement.TestManual(ServiceSetup."Building Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Code }
    { 20  ;   ;Description         ;Text50        ;OnValidate=BEGIN
                                                                "Search Description" := Description;
                                                              END;

                                                   CaptionML=ENU=Description }
    { 30  ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
    { 40  ;   ;Search Description  ;Code50        ;CaptionML=ENU=Search Description }
    { 50  ;   ;Address             ;Text50        ;OnValidate=BEGIN
                                                                CheckPostCodeHouseNo;
                                                              END;

                                                   CaptionML=ENU=Address }
    { 60  ;   ;Address 2           ;Text50        ;CaptionML=ENU=Address 2 }
    { 70  ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=VAR
                                                                PostCode@1100528300 : Record 225;
                                                              BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=City }
    { 80  ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=VAR
                                                                PostCode@1100528300 : Record 225;
                                                              BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                                CheckPostCodeHouseNo;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Post Code }
    { 90  ;   ;County              ;Text30        ;CaptionML=ENU=County;
                                                   Editable=Yes }
    { 100 ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Country/Region Code }
    { 110 ;   ;Phone No.           ;Text30        ;OnValidate=VAR
                                                                PhoneNumberFormatting@1100528300 : Codeunit 11012276;
                                                              BEGIN
                                                                PhoneNumberFormatting.ValidatePhoneNumber("Country/Region Code", "Phone No.");
                                                              END;

                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Phone No. }
    { 120 ;   ;Phone No. 2         ;Text30        ;OnValidate=VAR
                                                                PhoneNumberFormatting@1100528300 : Codeunit 11012276;
                                                              BEGIN
                                                                PhoneNumberFormatting.ValidatePhoneNumber("Country/Region Code", "Phone No. 2");
                                                              END;

                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Phone No. 2 }
    { 130 ;   ;E-Mail              ;Text80        ;OnValidate=VAR
                                                                ContactDataValidation@1100528300 : Codeunit 11012275;
                                                                RecRef@1100528700 : RecordRef;
                                                                FldRef@1100528701 : FieldRef;
                                                              BEGIN
                                                                RecRef.GETTABLE(Rec);
                                                                FldRef := RecRef.FIELD(FIELDNO("E-Mail"));
                                                                ContactDataValidation.ValidateEmail(FldRef, "E-Mail");
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=ENU=E-Mail }
    { 140 ;   ;BAG Id              ;Code20        ;CaptionML=ENU=BAG Id }
    { 150 ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Customer Name");
                                                              END;

                                                   CaptionML=ENU=Customer No. }
    { 151 ;   ;Customer Name       ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Name WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=ENU=Customer Name;
                                                   Editable=No }
    { 160 ;No ;Contact             ;Code20        ;TableRelation=Contact;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Contact Name");
                                                              END;

                                                   CaptionML=ENU=Contact }
    { 161 ;   ;Contact Name        ;Text50        ;OnLookup=BEGIN
                                                              ShowContact;
                                                            END;

                                                   CaptionML=ENU=Contact Name }
    { 170 ;   ;Complex Code        ;Code20        ;TableRelation=Complex;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Complex Description");
                                                              END;

                                                   CaptionML=ENU=Complex Code }
    { 171 ;   ;Complex Description ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Complex.Description WHERE (Code=FIELD(Complex Code)));
                                                   CaptionML=ENU=Complex Description;
                                                   Editable=No }
    { 180 ;   ;Year of Construction;Integer       ;CaptionML=ENU=Year of Construction;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 190 ;   ;End Year of Exploitation;Integer   ;OnValidate=BEGIN
                                                                IF ("Year of Construction" > 0) AND ("End Year of Exploitation" > 0)  THEN
                                                                  IF ("End Year of Exploitation" <= "Year of Construction") THEN
                                                                    ERROR(Text001, FIELDCAPTION("End Year of Exploitation"), FIELDCAPTION("Year of Construction"));
                                                              END;

                                                   CaptionML=ENU=End Year of Exploitation;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 200 ;   ;Condition (Current) ;Code10        ;TableRelation=Condition;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Condition Description (Curr)");
                                                              END;

                                                   CaptionML=ENU=Condition (Current) }
    { 201 ;   ;Condition Description (Curr);Text30;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Condition.Description WHERE (Code=FIELD("Condition (Current)")));
                                                   CaptionML=ENU=Condition Description (Curr);
                                                   Editable=No }
    { 210 ;   ;Condition (Expected);Code10        ;TableRelation=Condition;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Condition Description (Exp)");
                                                              END;

                                                   CaptionML=ENU=Condition (Expected) }
    { 211 ;   ;Condition Description (Exp);Text30 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Condition.Description WHERE (Code=FIELD("Condition (Expected)")));
                                                   CaptionML=ENU=Condition Description (Exp);
                                                   Editable=No }
    { 220 ;   ;Creation Date       ;Date          ;CaptionML=ENU=Creation Date;
                                                   Editable=No }
    { 230 ;   ;Created By          ;Text50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Created By;
                                                   Editable=No }
    { 240 ;   ;Modification Date   ;Date          ;CaptionML=ENU=Modification Date;
                                                   Editable=No }
    { 250 ;   ;Modification Time   ;Time          ;CaptionML=ENU=Modification Time;
                                                   Editable=No }
    { 260 ;   ;Modified By         ;Text50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Modified By;
                                                   Editable=No }
    { 270 ;   ;Preferred Service Location No.;Code20;
                                                   TableRelation="Service Location";
                                                   OnLookup=VAR
                                                              ServiceLocation@1100528300 : Record 11012801;
                                                            BEGIN
                                                              ServiceLocation.SETCURRENTKEY("Building Code");
                                                              ServiceLocation.SETRANGE("Building Code", Code);
                                                              IF "Preferred Service Location No." <> '' THEN
                                                                ServiceLocation.GET("Preferred Service Location No.");
                                                              IF PAGE.RUNMODAL(0, ServiceLocation) = ACTION::LookupOK THEN
                                                                VALIDATE("Preferred Service Location No.", ServiceLocation."No.");
                                                            END;

                                                   CaptionML=ENU=Preferred Service Location No. }
    { 280 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 290 ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Comment Line" WHERE (Table Name=CONST(Building),
                                                                                           No.=FIELD(Code)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Complex Code                             }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528300 : TextConst 'ENU=The combination of %1 %2 and House No. %3 is already used at %4 %5';
      Text001@1100528301 : TextConst 'ENU=%1 must be greater than %2.';
      Text002@1100528600 : TextConst 'ENU=Related Service Location exist. Deleting not allowed.';

    PROCEDURE CheckPostCodeHouseNo@1210190000();
    VAR
      Building@1210190000 : Record 11071819;
      PostCode@1100528301 : Code[20];
      HousNo@1210190001 : Text[50];
      FormatAddress@1210190002 : Codeunit 365;
      ObjectImpWorkSheetMgt@1100528300 : Codeunit 11012839;
    BEGIN
      IF (Address = '') OR ("Post Code" ='') THEN
        EXIT;

      HousNo := FormatAddress.HouseNo(Address);
      IF (HousNo = '') THEN
        EXIT;

      IF ObjectImpWorkSheetMgt.NormalizePostCode("Post Code", "Country/Region Code", PostCode) THEN
        "Post Code" := PostCode;

      //"House No." := ObjectImpWorkSheetMgt.DetermineHouseNo(Address, "House No. Ext.");

      Building.SETFILTER(Code, '<>%1', Code);
      Building.SETRANGE("Post Code", "Post Code");
      IF (Building.FINDSET) THEN
        REPEAT
          IF (FormatAddress.HouseNo(Building.Address) = HousNo) THEN
            MESSAGE(Text000, FIELDCAPTION("Post Code"), "Post Code", HousNo, TABLECAPTION, Building.Code);
        UNTIL (Building.NEXT = 0);
    END;

    PROCEDURE GetTryOut@1210190005(iAction@1210190000 : Integer) Result : Text[30];
    VAR
      TryOutRelationRec@1210190001 : Record 11012761;
    BEGIN
      IF Code = '' THEN EXIT('');  //C026680

      IF TryOutRelationRec.READPERMISSION THEN
        Result := TryOutRelationRec.GetTryOut('', '', '', '', '', '', Code, iAction);
    END;

    PROCEDURE ShowTryOut@1210190004(iAction@1210190000 : Integer);
    VAR
      TryOutRelationRec@1210190001 : Record 11012761;
    BEGIN
      TryOutRelationRec.ShowTryOut('', '', '', '', '', '', Code, iAction);
    END;

    PROCEDURE ShowTodos@1100485006();
    VAR
      Todo@1100528700 : Record 5080;
    BEGIN
      Todo.SETCURRENTKEY("Building Code", Date, Closed);
      Todo.SETRANGE("Building Code", Code);
      Todo.SETRANGE("System To-do Type", Todo."System To-do Type"::Organizer);
      PAGE.RUNMODAL(PAGE::"To-do List", Todo);
    END;

    PROCEDURE AssistEdit@2(OldBuilding@1000 : Record 11071819) : Boolean;
    VAR
      Building@1001 : Record 11071819;
      ServiceSetup@1100528600 : Record 11012800;
      NoSeriesManagement@1100528601 : Codeunit 396;
    BEGIN
      WITH Building DO BEGIN
        Building := Rec;
        ServiceSetup.GET;
        ServiceSetup.TESTFIELD("Building Nos.");
        IF NoSeriesManagement.SelectSeries(
          ServiceSetup."Building Nos.", OldBuilding."No. Series", "No. Series")
        THEN BEGIN
          NoSeriesManagement.SetSeries(Code);
          Rec := Building;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE ShowContact@1100528600();
    VAR
      Customer@1210190000 : Record 18;
      Contact@1210190006 : Record 5050;
    BEGIN
      Customer.ShowContactName("Customer No.", Contact);
      IF Contact.Name <> '' THEN
        VALIDATE("Contact Name", Contact.Name);
    END;

    BEGIN
    END.
  }
}

