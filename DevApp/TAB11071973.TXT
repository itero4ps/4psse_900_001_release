OBJECT Table 11071973 Service/Maint. Agreement
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD(Code);
             END;

    OnDelete=VAR
               SMAgreementAmount@1100528600 : Record 11071974;
               SMAgreementMaintScheme@1100528601 : Record 11071975;
               ServiceContract@1100528602 : Record 11012812;
             BEGIN
               SMAgreementAmount.SETRANGE(Type, Type);
               SMAgreementAmount.SETRANGE(Code, Code);
               SMAgreementAmount.SETRANGE("Line No.", "Line No.");
               SMAgreementAmount.DELETEALL(TRUE);

               SMAgreementMaintScheme.SETRANGE(Type, Type);
               SMAgreementMaintScheme.SETRANGE(Code, Code);
               SMAgreementMaintScheme.SETRANGE("Agreement Line No.", "Line No.");
               SMAgreementMaintScheme.DELETEALL(TRUE);

               IF Type = Type::Contract THEN BEGIN
                 ServiceContract.GET(Code);
                 ServiceContract.RemoveUnusedContractDiscountTerms('', "Line No.", 2);
               END;
             END;

    CaptionML=ENU=Service/Maint. Agreement;
    LookupPageID=Page11126460;
    DrillDownPageID=Page11126460;
  }
  FIELDS
  {
    { 10  ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Customer Price Group,Customer,,Contract;
                                                   OptionString=Customer Price Group,Customer,,Contract }
    { 20  ;   ;Code                ;Code20        ;TableRelation=IF (Type=CONST(Customer Price Group)) "Customer Price Group"
                                                                 ELSE IF (Type=CONST(Customer)) Customer
                                                                 ELSE IF (Type=CONST(Contract)) Service-Contract;
                                                   CaptionML=ENU=Code }
    { 30  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 35  ;   ;Contract Group      ;Code20        ;TableRelation="Service Contract Group";
                                                   CaptionML=ENU=Contract Group }
    { 40  ;   ;Object Group        ;Code10        ;TableRelation="Service Group".No. WHERE (Customer No.=CONST());
                                                   CaptionML=ENU=Object Group }
    { 45  ;   ;Object Group Description;Text50    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Group".Description WHERE (No.=FIELD(Object Group)));
                                                   CaptionML=ENU=Object Group Description;
                                                   Editable=No }
    { 50  ;   ;Object Type Filter  ;Text100       ;OnValidate=VAR
                                                                StandardObject@1100528600 : Record 11020334;
                                                              BEGIN
                                                                IF "Object Type Filter" <> '' THEN BEGIN
                                                                  StandardObject.SETFILTER("Type Description", "Object Type Filter");
                                                                  "Object Type Filter" := StandardObject.GETFILTER("Type Description");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Object Type Filter }
    { 60  ;   ;Discipline          ;Code10        ;TableRelation=Discipline;
                                                   OnValidate=BEGIN
                                                                IF xRec.Discipline <> Discipline THEN
                                                                  VALIDATE("Trade Speciality", '');
                                                              END;

                                                   CaptionML=ENU=Discipline }
    { 70  ;   ;Trade Speciality    ;Code10        ;TableRelation="Trade Speciality".Code WHERE (Discipline=FIELD(Discipline));
                                                   CaptionML=ENU=Trade Speciality }
    { 80  ;   ;Age Period          ;DateFormula   ;CaptionML=ENU=Age Period }
    { 90  ;   ;Service Package     ;Code10        ;TableRelation="Service Package".Code WHERE (Source Type=CONST(None),
                                                                                               Select for Maint. Sales Rate=CONST(Yes));
                                                   OnValidate=VAR
                                                                ServicePackage@1100528600 : Record 11012806;
                                                                ServiceContract@1100528601 : Record 11012812;
                                                              BEGIN
                                                                IF Type = Type::Contract THEN BEGIN
                                                                  IF "Service Package" <> '' THEN BEGIN
                                                                    IF ServicePackage.GET("Service Package") THEN BEGIN
                                                                      IF NOT ContractDiscountExists(ServicePackage."Service Package Contract") THEN
                                                                        AddContractDiscount(ServicePackage."Service Package Contract");
                                                                      IF NOT ContractDiscountExists(ServicePackage."Service Package Call") THEN
                                                                        AddContractDiscount(ServicePackage."Service Package Call");
                                                                      IF NOT ContractDiscountExists(ServicePackage."Service Package Direct") THEN
                                                                        AddContractDiscount(ServicePackage."Service Package Direct");
                                                                      IF NOT ContractDiscountExists(ServicePackage."Service Package Estimate") THEN
                                                                        AddContractDiscount(ServicePackage."Service Package Estimate");
                                                                    END;
                                                                    IF NOT ContractDiscountExists("Service Package") THEN
                                                                      AddContractDiscount("Service Package");
                                                                  END;
                                                                  IF MODIFY THEN
                                                                    IF ServiceContract.GET(Code) THEN
                                                                      ServiceContract.RemoveUnusedContractDiscountTerms('', "Line No.", 1);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Service Package }
    { 100 ;   ;Standard Object Filter;Text100     ;OnValidate=VAR
                                                                StandardObject@1100528600 : Record 11020334;
                                                              BEGIN
                                                                IF "Standard Object Filter" <> '' THEN BEGIN
                                                                  StandardObject.SETFILTER("No.", "Standard Object Filter");
                                                                  "Standard Object Filter" := StandardObject.GETFILTER("No.");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Standard Object Filter }
    { 110 ;   ;Object Brand Code Filter;Text100   ;OnValidate=VAR
                                                                StandardObject@1100409000 : Record 11020334;
                                                              BEGIN
                                                                IF "Object Brand Code Filter" <> '' THEN BEGIN
                                                                  StandardObject.SETFILTER("Brand Code", "Object Brand Code Filter");
                                                                  "Object Brand Code Filter" := StandardObject.GETFILTER("Brand Code");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Object Brand Code Filter }
    { 120 ;   ;Object Model Code Filter;Text100   ;OnValidate=VAR
                                                                StandardObject@1100409000 : Record 11020334;
                                                              BEGIN
                                                                IF "Object Model Code Filter" <> '' THEN BEGIN
                                                                  StandardObject.SETFILTER("Model Code", "Object Model Code Filter");
                                                                  "Object Model Code Filter" := StandardObject.GETFILTER("Model Code");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Object Model Code Filter }
  }
  KEYS
  {
    {    ;Type,Code,Line No.                      ;Clustered=Yes }
    { No ;Type,Code,Contract Group,Object Group,Discipline,Trade Speciality,Object Type Filter,Standard Object Filter }
    {    ;Type,Code,Standard Object Filter,Object Type Filter,Trade Speciality,Discipline,Object Group,Contract Group }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE GetServiceRate@1100528600(ISeekDate@1100528600 : Date;VAR OPriceFound@1100528602 : Boolean) : Decimal;
    VAR
      SMAgreementAmount@1100528601 : Record 11071974;
    BEGIN
      SMAgreementAmount.SETRANGE(Type, Type);
      SMAgreementAmount.SETRANGE(Code, Code);
      SMAgreementAmount.SETRANGE("Line No.", "Line No.");
      SMAgreementAmount.SETFILTER("Index Date", '<=%1', ISeekDate);
      SMAgreementAmount.SETFILTER("Ending Date", '%1|>=%2', 0D, ISeekDate);
      IF SMAgreementAmount.FINDLAST THEN BEGIN
        OPriceFound := TRUE;
        EXIT(SMAgreementAmount."Service Rate (LCY)");
      END;
    END;

    PROCEDURE HandleLookupAgreementAmounts@1100528603();
    VAR
      SMAgreementAmount@1100528600 : Record 11071974;
    BEGIN
      SMAgreementAmount.SETRANGE(Type, Type);
      SMAgreementAmount.SETRANGE(Code, Code);
      SMAgreementAmount.SETRANGE("Line No.", "Line No.");
      PAGE.RUNMODAL(0, SMAgreementAmount);
    END;

    PROCEDURE GetMaintenanceSchemeText@1100528601(ISeekDate@1100528601 : Date) : Code[20];
    VAR
      SMAgreementMaintScheme@1100528600 : Record 11071975;
    BEGIN
      SMAgreementMaintScheme.SETRANGE(Type, Type);
      SMAgreementMaintScheme.SETRANGE(Code, Code);
      SMAgreementMaintScheme.SETRANGE("Agreement Line No.", "Line No.");
      SMAgreementMaintScheme.SETFILTER("Index Date", '<=%1', ISeekDate);
      SMAgreementMaintScheme.SETFILTER("Ending Date", '%1|>=%2', 0D, ISeekDate);
      CASE SMAgreementMaintScheme.COUNT OF
        0:
          EXIT('');
        1:
          BEGIN
            SMAgreementMaintScheme.FINDFIRST;
            EXIT(SMAgreementMaintScheme."Maintenance Scheme");
          END;
      ELSE
        EXIT(STRSUBSTNO('[%1]', SMAgreementMaintScheme.COUNT));
      END;
    END;

    PROCEDURE HandleLookupMaintenanceSchemes@1100528602();
    VAR
      SMAgreementMaintScheme@1100528600 : Record 11071975;
    BEGIN
      SMAgreementMaintScheme.SETRANGE(Type, Type);
      SMAgreementMaintScheme.SETRANGE(Code, Code);
      SMAgreementMaintScheme.SETRANGE("Agreement Line No.", "Line No.");
      PAGE.RUNMODAL(0, SMAgreementMaintScheme);
    END;

    PROCEDURE ApplyChanges@1100528604();
    VAR
      ApplySMAgreementsREP@1100528600 : Report 11012787;
    BEGIN
      CASE Type OF
        Type::"Customer Price Group":
          ApplySMAgreementsREP.SetUpdateByCustomerPriceGroup(Code);
        Type::Customer:
          ApplySMAgreementsREP.SetUpdateByCustomerNo(Code);
        Type::Contract:
          ApplySMAgreementsREP.SetUpdateByContractNo(Code);
      END;
      ApplySMAgreementsREP.RUNMODAL;
    END;

    LOCAL PROCEDURE ContractDiscountExists@1100409000(IServicePackage@1100409000 : Code[10]) : Boolean;
    VAR
      ServiceContractDiscountTerm@1100409001 : Record 11012828;
    BEGIN
      IF Type <> Type::Contract THEN
        EXIT;
      ServiceContractDiscountTerm.SETRANGE("Service Contract No.", Code);
      ServiceContractDiscountTerm.SETRANGE("Service Package", IServicePackage);
      EXIT(NOT ServiceContractDiscountTerm.ISEMPTY);
    END;

    LOCAL PROCEDURE AddContractDiscount@1100409003(IServicePackage@1100409000 : Code[10]);
    VAR
      ServiceContractDiscountTerm@1100409002 : Record 11012828;
      ServiceContractDiscountTerm2@1100409001 : Record 11012828;
      ServiceContract@1100409003 : Record 11012812;
    BEGIN
      IF Type <> Type::Contract THEN
        EXIT;
      IF NOT ServiceContract.GET(Code) THEN
        ServiceContract.INIT;

      ServiceContractDiscountTerm.SETRANGE("Service Contract No.", '');
      ServiceContractDiscountTerm.SETRANGE("Service Package", IServicePackage);
      IF ServiceContractDiscountTerm.FINDSET THEN
        REPEAT
          ServiceContractDiscountTerm2.COPY(ServiceContractDiscountTerm);
          ServiceContractDiscountTerm2."Service Contract No." := Code;
          ServiceContractDiscountTerm2."Starting Date Discount" := ServiceContract."Starting Date";
          IF ServiceContractDiscountTerm2.INSERT THEN;
        UNTIL ServiceContractDiscountTerm.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

