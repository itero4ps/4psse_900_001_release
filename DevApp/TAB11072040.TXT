OBJECT Table 11072040 Segment Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,4PS9.00 (5077);
  }
  PROPERTIES
  {
    OnDelete=VAR
               SegLine@1001 : Record 11072040;
               SegmentCriteriaLine@1002 : Record 11072048;
               SegmentHistory@1003 : Record 11072041;
               SegInteractLanguage@1005 : Record 5104;
             BEGIN
               CampaignTargetGrMgt.DeleteSegfromTargetGr(Rec);

               SegInteractLanguage.RESET;
               SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
               SegInteractLanguage.SETRANGE("Segment Line No.","Line No.");
               SegInteractLanguage.DELETEALL(TRUE);
               GET("Segment No.","Line No.");

               SegLine.SETRANGE("Segment No.","Segment No.");
               SegLine.SETFILTER("Line No.",'<>%1',"Line No.");
               IF SegLine.ISEMPTY THEN BEGIN
                 IF SegHeader.GET("Segment No.") THEN
                   SegHeader.CALCFIELDS("No. of Criteria Actions");
                 IF SegHeader."No. of Criteria Actions" > 1 THEN
                   IF CONFIRM(Text006,TRUE) THEN BEGIN
                     SegmentCriteriaLine.SETRANGE("Segment No.","Segment No.");
                     SegmentCriteriaLine.DELETEALL;
                     SegmentHistory.SETRANGE("Segment No.","Segment No.");
                     // SegmentHistory.DELETEALL;  //**4PS.o
                     SegmentHistory.DELETEALL(TRUE);  //**4PS.n
                   END;
               END;
               IF "Contact No." <> '' THEN BEGIN
                 SegLine.SETRANGE("Contact No.","Contact No.");
                 IF SegLine.ISEMPTY THEN BEGIN
                   Todo.SETRANGE("Segment No.","Segment No.");
                   Todo.SETRANGE("Contact No.","Contact No.");
                   Todo.MODIFYALL("Segment No.",'');
                 END;
               END;
             END;

    CaptionML=ENU=Segment Line;
  }
  FIELDS
  {
    { 1   ;   ;Segment No.         ;Code20        ;TableRelation="Segment Header";
                                                   CaptionML=ENU=Segment No. }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 3   ;   ;Contact No.         ;Code20        ;TableRelation=Contact WHERE (Blocked=CONST(No));
                                                   OnValidate=VAR
                                                                SegInteractLanguage@1000 : Record 5104;
                                                                Attachment@1001 : Record 11072030;
                                                                InteractTmpl@1002 : Record 11072032;
                                                              BEGIN
                                                                InitLine;

                                                                IF Cont.GET("Contact No.") THEN BEGIN
                                                                  "Language Code" := FindLanguage("Interaction Template Code",Cont."Language Code");
                                                                  "Contact Company No." := Cont."Company No.";
                                                                  "Contact Alt. Address Code" := Cont.ActiveAltAddress(Date);
                                                                  IF SegHeader.GET("Segment No.") THEN BEGIN
                                                                    IF SegHeader."Salesperson Code" = '' THEN
                                                                      "Salesperson Code" := Cont."Salesperson Code"
                                                                    ELSE
                                                                      "Salesperson Code" := SegHeader."Salesperson Code";
                                                                    IF SegHeader."Ignore Contact Corres. Type" AND
                                                                       (SegHeader."Correspondence Type (Default)" <> SegHeader."Correspondence Type (Default)"::" ")
                                                                    THEN
                                                                      "Correspondence Type" := SegHeader."Correspondence Type (Default)"
                                                                    ELSE
                                                                      IF InteractTmpl.GET(SegHeader."Interaction Template Code") AND
                                                                         (InteractTmpl."Ignore Contact Corres. Type" OR
                                                                          ((InteractTmpl."Ignore Contact Corres. Type" = FALSE) AND
                                                                           (Cont."Correspondence Type" = Cont."Correspondence Type"::" ")))
                                                                      THEN
                                                                        "Correspondence Type" := InteractTmpl."Correspondence Type (Default)"
                                                                      ELSE
                                                                        "Correspondence Type" := Cont."Correspondence Type";
                                                                  END ELSE
                                                                    IF NOT Salesperson.GET(GETFILTER("Salesperson Code")) THEN
                                                                      "Salesperson Code" := Cont."Salesperson Code";
                                                                END ELSE BEGIN
                                                                  "Contact Company No." := '';
                                                                  "Contact Alt. Address Code" := '';
                                                                  IF SegHeader.GET("Segment No.") THEN
                                                                    "Salesperson Code" := SegHeader."Salesperson Code"
                                                                  ELSE BEGIN
                                                                    "Salesperson Code" := '';
                                                                    "Language Code" := '';
                                                                  END;
                                                                END;
                                                                CALCFIELDS("Contact Name","Contact Company Name");

                                                                IF "Segment No." <> '' THEN BEGIN
                                                                  IF UniqueAttachmentExists THEN BEGIN
                                                                    MODIFY;
                                                                    SegInteractLanguage.RESET;
                                                                    SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
                                                                    SegInteractLanguage.SETRANGE("Segment Line No.","Line No.");
                                                                    SegInteractLanguage.DELETEALL(TRUE);
                                                                    GET("Segment No.","Line No.");
                                                                  END;

                                                                  "Language Code" := FindLanguage("Interaction Template Code","Language Code");
                                                                  IF SegInteractLanguage.GET("Segment No.",0,"Language Code") THEN BEGIN
                                                                    IF Attachment.GET(SegInteractLanguage."Attachment No.") THEN
                                                                      "Attachment No." := SegInteractLanguage."Attachment No.";
                                                                    Subject := SegInteractLanguage.Subject;
                                                                  END;
                                                                END;

                                                                IF xRec."Contact No." <> "Contact No." THEN
                                                                BEGIN //**4PS.n
                                                                  SetCampaignTargetGroup;
                                                                //**4PS.sn
                                                                  FillContactaltAddresscode;
                                                                END;
                                                                //**4PS.en
                                                              END;

                                                   CaptionML=ENU=Contact No. }
    { 4   ;   ;Campaign No.        ;Code20        ;TableRelation=Campaign;
                                                   OnValidate=BEGIN
                                                                IF xRec."Campaign No." <> "Campaign No." THEN
                                                                  SetCampaignTargetGroup;
                                                              END;

                                                   CaptionML=ENU=Campaign No. }
    { 5   ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=ENU=Salesperson Code }
    { 6   ;   ;Correspondence Type ;Option        ;OnValidate=VAR
                                                                Attachment@1000 : Record 11072030;
                                                                ErrorText@1001 : Text[80];
                                                              BEGIN
                                                                IF NOT Attachment.GET("Attachment No.") THEN
                                                                  EXIT;

                                                                ErrorText := Attachment.CheckCorrespondenceType("Correspondence Type");
                                                                IF ErrorText <> '' THEN
                                                                  ERROR(
                                                                    STRSUBSTNO('%1%2',
                                                                      STRSUBSTNO(Text000,FIELDCAPTION("Correspondence Type"),"Correspondence Type",TABLECAPTION,"Line No."),
                                                                      ErrorText));
                                                              END;

                                                   CaptionML=ENU=Correspondence Type;
                                                   OptionCaptionML=ENU=" ,Hard Copy,E-Mail,Fax";
                                                   OptionString=[ ,Hard Copy,E-Mail,Fax] }
    { 7   ;   ;Interaction Template Code;Code10   ;TableRelation="Interaction Template";
                                                   OnValidate=VAR
                                                                SegInteractLanguage@1001 : Record 5104;
                                                                InteractTemplLanguage@1002 : Record 5103;
                                                                InteractTmpl@1003 : Record 11072032;
                                                              BEGIN
                                                                TESTFIELD("Contact No.");
                                                                Cont.GET("Contact No.");
                                                                "Attachment No." := 0;
                                                                "Language Code" := '';
                                                                Subject := '';
                                                                "Correspondence Type" := "Correspondence Type"::" ";
                                                                "Interaction Group Code" := '';
                                                                "Cost (LCY)" := 0;
                                                                "Duration (Min.)" := 0;
                                                                "Information Flow" := "Information Flow"::" ";
                                                                "Initiated By" := "Initiated By"::" ";
                                                                "Campaign Target" := FALSE;
                                                                "Campaign Response" := FALSE;
                                                                "Correspondence Type" := "Correspondence Type"::" ";
                                                                IF (GETFILTER("Campaign No.") = '') AND (InteractTmpl."Campaign No." <> '') THEN
                                                                  "Campaign No." := '';
                                                                MODIFY;

                                                                IF "Segment No." <> '' THEN BEGIN
                                                                  SegInteractLanguage.RESET;
                                                                  SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
                                                                  SegInteractLanguage.SETRANGE("Segment Line No.","Line No.");
                                                                  SegInteractLanguage.DELETEALL(TRUE);
                                                                  GET("Segment No.","Line No.");
                                                                  IF "Interaction Template Code" <> '' THEN BEGIN
                                                                    SegHeader.GET("Segment No.");
                                                                    IF "Interaction Template Code" <> SegHeader."Interaction Template Code" THEN BEGIN
                                                                      CreateSegInteractLanguages("Interaction Template Code");
                                                                      "Language Code" := FindLanguage("Interaction Template Code",Cont."Language Code");
                                                                      IF SegInteractLanguage.GET("Segment No.","Line No.","Language Code") THEN
                                                                        "Attachment No." := SegInteractLanguage."Attachment No.";
                                                                    END ELSE BEGIN
                                                                      "Language Code" := FindLanguage("Interaction Template Code",Cont."Language Code");
                                                                      IF SegInteractLanguage.GET("Segment No.",0,"Language Code") THEN
                                                                        "Attachment No." := SegInteractLanguage."Attachment No.";
                                                                    END;
                                                                  END;
                                                                END ELSE BEGIN
                                                                  "Language Code" := FindLanguage("Interaction Template Code",Cont."Language Code");
                                                                  IF InteractTemplLanguage.GET("Interaction Template Code","Language Code") THEN
                                                                    "Attachment No." := InteractTemplLanguage."Attachment No.";
                                                                END;

                                                                IF InteractTmpl.GET("Interaction Template Code") THEN BEGIN
                                                                  "Interaction Group Code" := InteractTmpl."Interaction Group Code";
                                                                  "Cost (LCY)" := InteractTmpl."Unit Cost (LCY)";
                                                                  "Duration (Min.)" := InteractTmpl."Unit Duration (Min.)";
                                                                  "Information Flow" := InteractTmpl."Information Flow";
                                                                  "Initiated By" := InteractTmpl."Initiated By";
                                                                  "Campaign Target" := InteractTmpl."Campaign Target";
                                                                  "Campaign Response" := InteractTmpl."Campaign Response";

                                                                  CASE TRUE OF
                                                                    SegHeader."Ignore Contact Corres. Type" AND
                                                                    (SegHeader."Correspondence Type (Default)" <> SegHeader."Correspondence Type (Default)"::" "):
                                                                      "Correspondence Type" := SegHeader."Correspondence Type (Default)";
                                                                    InteractTmpl."Ignore Contact Corres. Type" OR
                                                                    ((InteractTmpl."Ignore Contact Corres. Type" = FALSE) AND
                                                                     (Cont."Correspondence Type" = Cont."Correspondence Type"::" ") AND
                                                                     (InteractTmpl."Correspondence Type (Default)" <> InteractTmpl."Correspondence Type (Default)"::" ")):
                                                                      "Correspondence Type" := InteractTmpl."Correspondence Type (Default)";
                                                                    ELSE
                                                                      IF Cont."Correspondence Type" <> Cont."Correspondence Type"::" " THEN
                                                                        "Correspondence Type" := Cont."Correspondence Type"
                                                                      ELSE
                                                                        "Correspondence Type" := xRec."Correspondence Type";
                                                                  END;
                                                                  IF SegHeader."Campaign No." <> '' THEN
                                                                    "Campaign No." := SegHeader."Campaign No."
                                                                  ELSE
                                                                    IF (GETFILTER("Campaign No.") = '') AND (InteractTmpl."Campaign No." <> '') THEN
                                                                      "Campaign No." := InteractTmpl."Campaign No.";
                                                                END;
                                                                IF Campaign.GET("Campaign No.") THEN
                                                                  "Campaign Description" := Campaign.Description;

                                                                MODIFY;
                                                              END;

                                                   CaptionML=ENU=Interaction Template Code }
    { 8   ;   ;Cost (LCY)          ;Decimal       ;CaptionML=ENU=Cost (LCY);
                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 9   ;   ;Duration (Min.)     ;Decimal       ;CaptionML=ENU=Duration (Min.);
                                                   DecimalPlaces=0:0;
                                                   MinValue=0 }
    { 10  ;   ;Attachment No.      ;Integer       ;TableRelation=Attachment;
                                                   CaptionML=ENU=Attachment No. }
    { 11  ;   ;Campaign Response   ;Boolean       ;CaptionML=ENU=Campaign Response }
    { 12  ;   ;Contact Name        ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD(Contact No.),
                                                                                          Type=CONST(Person)));
                                                   CaptionML=ENU=Contact Name;
                                                   Editable=No }
    { 13  ;   ;Information Flow    ;Option        ;CaptionML=ENU=Information Flow;
                                                   OptionCaptionML=ENU=" ,Outbound,Inbound";
                                                   OptionString=[ ,Outbound,Inbound];
                                                   BlankZero=Yes }
    { 14  ;   ;Initiated By        ;Option        ;CaptionML=ENU=Initiated By;
                                                   OptionCaptionML=ENU=" ,Us,Them";
                                                   OptionString=[ ,Us,Them];
                                                   BlankZero=Yes }
    { 15  ;   ;Contact Alt. Address Code;Code10   ;TableRelation="Contact Alt. Address".Code WHERE (Contact No.=FIELD(Contact No.));
                                                   CaptionML=ENU=Contact Alt. Address Code }
    { 16  ;   ;Evaluation          ;Option        ;CaptionML=ENU=Evaluation;
                                                   OptionCaptionML=ENU=" ,Very Positive,Positive,Neutral,Negative,Very Negative";
                                                   OptionString=[ ,Very Positive,Positive,Neutral,Negative,Very Negative] }
    { 17  ;   ;Campaign Target     ;Boolean       ;OnValidate=BEGIN
                                                                IF xRec."Campaign Target" <> "Campaign Target" THEN
                                                                  SetCampaignTargetGroup;
                                                              END;

                                                   CaptionML=ENU=Campaign Target }
    { 18  ;   ;Contact Company Name;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD(Contact Company No.),
                                                                                          Type=CONST(Company)));
                                                   CaptionML=ENU=Contact Company Name;
                                                   Editable=No }
    { 19  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   OnValidate=VAR
                                                                SegInteractLanguage@1002 : Record 5104;
                                                                InteractTemplLanguage@1001 : Record 5103;
                                                              BEGIN
                                                                TESTFIELD("Interaction Template Code");

                                                                IF "Language Code" = xRec."Language Code" THEN
                                                                  EXIT;

                                                                IF SegHeader.GET("Segment No.") THEN BEGIN
                                                                  IF NOT UniqueAttachmentExists THEN BEGIN
                                                                    IF SegInteractLanguage.GET("Segment No.",0,"Language Code") THEN BEGIN
                                                                      "Attachment No." := SegInteractLanguage."Attachment No.";
                                                                      Subject := SegInteractLanguage.Subject;
                                                                    END ELSE BEGIN
                                                                      "Attachment No." := 0;
                                                                      Subject := '';
                                                                    END;
                                                                  END ELSE
                                                                    IF SegInteractLanguage.GET("Segment No.","Line No.","Language Code") THEN BEGIN
                                                                      "Attachment No." := SegInteractLanguage."Attachment No.";
                                                                      Subject := SegInteractLanguage.Subject;
                                                                    END ELSE BEGIN
                                                                      "Attachment No." := 0;
                                                                      Subject := '';
                                                                    END;
                                                                  MODIFY;
                                                                END ELSE BEGIN
                                                                  InteractTemplLanguage.GET("Interaction Template Code","Language Code");
                                                                  SetInteractionAttachment;
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              SegInteractLanguage@1004 : Record 5104;
                                                              InteractTemplLanguage@1002 : Record 5103;
                                                            BEGIN
                                                              TESTFIELD("Interaction Template Code");

                                                              IF SegHeader.GET("Segment No.") THEN BEGIN
                                                                SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
                                                                IF UniqueAttachmentExists OR
                                                                   ("Interaction Template Code" <> SegHeader."Interaction Template Code")
                                                                THEN
                                                                  SegInteractLanguage.SETRANGE("Segment Line No.","Line No.")
                                                                ELSE
                                                                  SegInteractLanguage.SETRANGE("Segment Line No.",0);

                                                                IF PAGE.RUNMODAL(0,SegInteractLanguage) = ACTION::LookupOK THEN BEGIN
                                                                  GET("Segment No.","Line No.");
                                                                  "Language Code" := SegInteractLanguage."Language Code";
                                                                  "Attachment No." := SegInteractLanguage."Attachment No.";
                                                                  Subject := SegInteractLanguage.Subject;
                                                                  MODIFY;
                                                                END ELSE
                                                                  GET("Segment No.","Line No.");
                                                              END ELSE BEGIN  // Create Interaction
                                                                InteractTemplLanguage.SETRANGE("Interaction Template Code","Interaction Template Code");
                                                                IF PAGE.RUNMODAL(0,InteractTemplLanguage) = ACTION::LookupOK THEN BEGIN
                                                                  "Language Code" := InteractTemplLanguage."Language Code";
                                                                  MODIFY;
                                                                END;
                                                                SetInteractionAttachment;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Language Code }
    { 22  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 23  ;   ;Date                ;Date          ;OnValidate=BEGIN
                                                                IF Cont.GET("Contact No.") THEN
                                                                  IF "Contact Alt. Address Code" = Cont.ActiveAltAddress(xRec.Date) THEN
                                                                    "Contact Alt. Address Code" := Cont.ActiveAltAddress(Date);
                                                              END;

                                                   CaptionML=ENU=Date }
    { 24  ;   ;Time of Interaction ;Time          ;CaptionML=ENU=Time of Interaction }
    { 25  ;   ;Attempt Failed      ;Boolean       ;CaptionML=ENU=Attempt Failed }
    { 26  ;   ;To-do No.           ;Code20        ;TableRelation=To-do;
                                                   CaptionML=ENU=To-do No. }
    { 27  ;   ;Contact Company No. ;Code20        ;TableRelation=Contact WHERE (Type=CONST(Company),
                                                                                Blocked=CONST(No));
                                                   CaptionML=ENU=Contact Company No. }
    { 28  ;   ;Campaign Entry No.  ;Integer       ;TableRelation="Campaign Entry";
                                                   CaptionML=ENU=Campaign Entry No.;
                                                   Editable=No }
    { 29  ;   ;Interaction Group Code;Code10      ;TableRelation="Interaction Group";
                                                   CaptionML=ENU=Interaction Group Code }
    { 31  ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=" ,Sales Qte.,Sales Blnkt. Ord,Sales Ord. Cnfrmn.,Sales Inv.,Sales Shpt. Note,Sales Cr. Memo,Sales Stmnt.,Sales Rmdr.,Serv. Ord. Create,Serv. Ord. Post,Purch.Qte.,Purch. Blnkt. Ord.,Purch. Ord.,Purch. Inv.,Purch. Rcpt.,Purch. Cr. Memo,Cover Sheet";
                                                   OptionString=[ ,Sales Qte.,Sales Blnkt. Ord,Sales Ord. Cnfrmn.,Sales Inv.,Sales Shpt. Note,Sales Cr. Memo,Sales Stmnt.,Sales Rmdr.,Serv. Ord. Create,Serv. Ord. Post,Purch.Qte.,Purch. Blnkt. Ord.,Purch. Ord.,Purch. Inv.,Purch. Rcpt.,Purch. Cr. Memo,Cover Sheet];
                                                   Description=4PS: Raam  -> Afroep }
    { 32  ;   ;Document No.        ;Code20        ;TestTableRelation=No;
                                                   CaptionML=ENU=Document No. }
    { 33  ;   ;Send Word Doc. As Attmt.;Boolean   ;CaptionML=ENU=Send Word Doc. As Attmt. }
    { 34  ;   ;Contact Via         ;Text80        ;CaptionML=ENU=Contact Via }
    { 35  ;   ;Version No.         ;Integer       ;CaptionML=ENU=Version No. }
    { 36  ;   ;Doc. No. Occurrence ;Integer       ;CaptionML=ENU=Doc. No. Occurrence }
    { 37  ;   ;Subject             ;Text50        ;CaptionML=ENU=Subject }
    { 44  ;   ;Opportunity No.     ;Code20        ;TableRelation=Opportunity;
                                                   CaptionML=ENU=Opportunity No. }
    { 9501;   ;Wizard Step         ;Option        ;CaptionML=ENU=Wizard Step;
                                                   OptionCaptionML=ENU=" ,1,2,3,4,5,6";
                                                   OptionString=[ ,1,2,3,4,5,6];
                                                   Editable=No }
    { 9502;   ;Wizard Contact Name ;Text50        ;CaptionML=ENU=Wizard Contact Name }
    { 9503;   ;Opportunity Description;Text50     ;CaptionML=ENU=Opportunity Description }
    { 9504;   ;Campaign Description;Text50        ;CaptionML=ENU=Campaign Description }
    { 9505;   ;Interaction Successful;Boolean     ;CaptionML=ENU=Interaction Successful }
    { 9506;   ;Dial Contact        ;Boolean       ;CaptionML=ENU=Dial Contact }
    { 9507;   ;Mail Contact        ;Boolean       ;CaptionML=ENU=Mail Contact }
    { 11012000;;Optional Mergefield 1;Text80      ;CaptionML=ENU=Optional Mergefield 1 }
    { 11012001;;Optional Mergefield 2;Text80      ;CaptionML=ENU=Optional Mergefield 2 }
    { 11012002;;Optional Mergefield 3;Text80      ;CaptionML=ENU=Optional Mergefield 3 }
    { 11012003;;Optional Mergefield 4;Text80      ;CaptionML=ENU=Optional Mergefield 4 }
    { 11012004;;Optional Mergefield 5;Text80      ;CaptionML=ENU=Optional Mergefield 5 }
    { 11012010;;Phone Call Result Code;Code20     ;TableRelation="Phonecall Result";
                                                   CaptionML=ENU=Phone Call Result Code }
    { 11012020;;Customer No.       ;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Customer No. }
    { 11012917;;Project No.        ;Code20        ;TableRelation=Job;
                                                   CaptionML=ENU=Project No.;
                                                   Editable=No }
    { 11012918;;Plot No.           ;Code10        ;TableRelation=Plot."Plot No." WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=ENU=Plot No.;
                                                   Editable=No }
    { 11012919;;Project Description;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=ENU=Project Description;
                                                   Editable=No }
    { 11012920;;House Model        ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Plot."House Model" WHERE (Project No.=FIELD(Project No.),
                                                                                                Plot No.=FIELD(Plot No.)));
                                                   CaptionML=ENU=House Model;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Segment No.,Line No.                    ;SumIndexFields=Cost (LCY),Duration (Min.);
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Segment No.,Campaign No.,Date            }
    {    ;Contact No.,Segment No.                  }
    {    ;Campaign No.                             }
    {    ;Campaign No.,Contact Company No.,Campaign Target }
    {    ;Segment No.,Contact Company No.          }
    {    ;Segment No.,Project No.,Plot No.         }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU="%1 = %2 can not be specified for %3 %4.\"';
      Text001@1001 : TextConst 'ENU=Inherited';
      Text002@1002 : TextConst 'ENU=Unique';
      SegHeader@1006 : Record 11072039;
      Cont@1007 : Record 5050;
      Salesperson@1008 : Record 13;
      Campaign@1013 : Record 11072034;
      InteractTmpl@1003 : Record 11072032;
      Attachment@1005 : Record 11072030;
      AttachmentTemp@1004 : TEMPORARY Record 11072030;
      InterLogEntryCommentLine@1017 : Record 11072067;
      InterLogEntryCommentLineTmp@1018 : TEMPORARY Record 11072067;
      ContactThrough@1021 : TEMPORARY Record 11072051;
      OptionalMergeFieldRec@1210190001 : Record 11012145;
      ContactAltAdressRec@1100485000 : Record 5051;
      AttachmentManagement@1010 : Codeunit 11072021;
      Text005@1023 : TextConst 'ENU=You must fill in the %1 field.';
      Text004@1012 : TextConst 'ENU=The program has stopped importing the attachment at your request.';
      Text006@1011 : TextConst 'ENU=Your Segment is now empty.\Do you want to reset number of criteria actions?';
      CampaignTargetGrMgt@1014 : Codeunit 7030;
      TAPIManagement@1019 : Codeunit 11072022;
      Mail@1020 : Codeunit 397;
      ResumedAttachmentNo@1015 : Integer;
      Text007@1016 : TextConst 'ENU=Do you want to finish this interaction later?';
      Text008@1022 : TextConst 'ENU=You must select an interaction template with an attachment.';
      Text009@1025 : TextConst 'ENU=You must select a contact to interact with.';
      Text010@1027 : TextConst 'ENU=Call was not logged.';
      Text013@1024 : TextConst 'ENU=You must fill in the phone number.';
      Text023@1028 : TextConst 'ENU=''%1'' is not found among e-mail addresses of %2.';
      Text024@1032 : TextConst '@@@="%1=Correspondence Type";ENU="%1 = %2 cannot be specified."';
      Text025@1033 : TextConst 'ENU=The email could not be sent because of the following error: %1.\Note: if you run Microsoft Dynamics NAV as administrator, you must run Outlook as administrator as well.';
      Todo@1102601000 : Record 5080;
      Text11012000@1210190003 : TextConst 'ENU=Merge Field';
      Text029@1100525000 : TextConst 'ENU=The %1 field must be filled in for to-dos assigned to a team.';

    PROCEDURE InitLine@1();
    BEGIN
      IF SegHeader.GET("Segment No.") THEN BEGIN
        Description := SegHeader.Description;
        "Campaign No." := SegHeader."Campaign No.";
        "Salesperson Code" := SegHeader."Salesperson Code";
        "Correspondence Type" := SegHeader."Correspondence Type (Default)";
        "Interaction Template Code" := SegHeader."Interaction Template Code";
        "Interaction Group Code" := SegHeader."Interaction Group Code";
        "Cost (LCY)" := SegHeader."Unit Cost (LCY)";
        "Duration (Min.)" := SegHeader."Unit Duration (Min.)";
        "Attachment No." := SegHeader."Attachment No.";
        Date := SegHeader.Date;
        "Campaign Target" := SegHeader."Campaign Target";
        "Information Flow" := SegHeader."Information Flow";
        "Initiated By" := SegHeader."Initiated By";
        "Campaign Response" := SegHeader."Campaign Response";
        "Send Word Doc. As Attmt." := SegHeader."Send Word Docs. as Attmt.";
        //**4PS.sn
        "Optional Mergefield 1" := SegHeader."Optional Mergefield 1";
        "Optional Mergefield 2" := SegHeader."Optional Mergefield 2";
        "Optional Mergefield 3" := SegHeader."Optional Mergefield 3";
        "Optional Mergefield 4" := SegHeader."Optional Mergefield 4";
        "Optional Mergefield 5" := SegHeader."Optional Mergefield 5";
        //**4PS.en
        CLEAR(Evaluation);
      END;
    END;

    PROCEDURE AttachmentText@5() : Text[30];
    BEGIN
      IF AttachmentInherited THEN
        EXIT(Text001);

      IF "Attachment No." <> 0 THEN
        EXIT(Text002);

      EXIT('');
    END;

    PROCEDURE MaintainAttachment@9();
    VAR
      Cont@1000 : Record 5050;
      SalutationFormula@1001 : Record 5069;
    BEGIN
      TESTFIELD("Interaction Template Code");

      Cont.GET("Contact No.");
      SalutationFormula.GET(Cont."Salutation Code","Language Code",0);
      SalutationFormula.GET(Cont."Salutation Code","Language Code",1);

      IF "Attachment No." <> 0 THEN
        OpenAttachment
      ELSE
        CreateAttachment;
    END;

    PROCEDURE CreateAttachment@8();
    VAR
      SegInteractLanguage@1003 : Record 5104;
    BEGIN
      IF NOT SegInteractLanguage.GET("Segment No.","Line No.","Language Code") THEN BEGIN
        SegInteractLanguage.INIT;
        SegInteractLanguage."Segment No." := "Segment No.";
        SegInteractLanguage."Segment Line No." := "Line No.";
        SegInteractLanguage."Language Code" := "Language Code";
        SegInteractLanguage.Description := Description;
        SegInteractLanguage.Subject := Subject;
      END;

      SegInteractLanguage.CreateAttachment;
    END;

    PROCEDURE OpenAttachment@2();
    VAR
      Attachment@1004 : Record 11072030;
      Attachment2@1003 : Record 11072030;
      SegInteractLanguage@1002 : Record 5104;
      NewAttachmentNo@1000 : Integer;
    BEGIN
      IF "Attachment No." = 0 THEN
        EXIT;

      Attachment.GET("Attachment No.");
      Attachment2 := Attachment;
      Attachment2."Interaction Template Code" := "Interaction Template Code";  //**4PS.n
      Attachment2.SetTemplateCode("Interaction Template Code"); //**4PS.n
      Attachment2.ShowAttachment(Rec,"Segment No." + ' ' + Description,FALSE);

      IF AttachmentInherited THEN BEGIN
        NewAttachmentNo := Attachment2."No.";
        IF (Attachment."Last Date Modified" <> Attachment2."Last Date Modified") OR
           (Attachment."Last Time Modified" <> Attachment2."Last Time Modified")
        THEN BEGIN
          SegInteractLanguage.INIT;
          SegInteractLanguage."Segment No." := "Segment No.";
          SegInteractLanguage."Segment Line No." := "Line No.";
          SegInteractLanguage."Language Code" := "Language Code";
          SegInteractLanguage.Description := Description;
          SegInteractLanguage.Subject := Subject;
          SegInteractLanguage."Attachment No." := NewAttachmentNo;
          SegInteractLanguage.INSERT(TRUE);
          GET("Segment No.","Line No.");
          "Attachment No." := NewAttachmentNo;
          MODIFY;
        END;
      END
    END;

    PROCEDURE ImportAttachment@3();
    VAR
      SegInteractLanguage@1003 : Record 5104;
    BEGIN
      IF NOT SegInteractLanguage.GET("Segment No.","Line No.","Language Code") THEN BEGIN
        SegInteractLanguage.INIT;
        SegInteractLanguage."Segment No." := "Segment No.";
        SegInteractLanguage."Segment Line No." := "Line No.";
        SegInteractLanguage."Language Code" := "Language Code";
        SegInteractLanguage.Description := Description;
        SegInteractLanguage.INSERT(TRUE);
      END;
      SegInteractLanguage.ImportAttachment;
    END;

    PROCEDURE ExportAttachment@4();
    VAR
      SegInteractLanguage@1000 : Record 5104;
    BEGIN
      IF UniqueAttachmentExists THEN BEGIN
        IF SegInteractLanguage.GET("Segment No.","Line No.","Language Code") THEN
          IF SegInteractLanguage."Attachment No." <> 0 THEN
            SegInteractLanguage.ExportAttachment;
      END ELSE
        IF SegInteractLanguage.GET("Segment No.",0,"Language Code") THEN
          IF SegInteractLanguage."Attachment No." <> 0 THEN
            SegInteractLanguage.ExportAttachment;
    END;

    PROCEDURE RemoveAttachment@7(Prompt@1000 : Boolean);
    VAR
      SegInteractLanguage@1002 : Record 5104;
    BEGIN
      IF SegInteractLanguage.GET("Segment No.","Line No.","Language Code") THEN BEGIN
        SegInteractLanguage.DELETE(TRUE);
        GET("Segment No.","Line No.");
      END;
      "Attachment No." := 0;
    END;

    PROCEDURE CreateCall@21();
    VAR
      TempSegmentLine@1000 : TEMPORARY Record 11072040;
    BEGIN
      Cont.GET("Contact No.");
      TempSegmentLine."Contact No." := Cont."No.";
      TempSegmentLine."Contact Via" := Cont."Phone No.";
      TempSegmentLine."Contact Company No." := Cont."Company No.";
      TempSegmentLine."Salesperson Code" := "Salesperson Code"; //**4PS.n
      TempSegmentLine."To-do No." := "To-do No.";
      IF "Contact Alt. Address Code" <> '' THEN
        TempSegmentLine."Contact Alt. Address Code" := "Contact Alt. Address Code";
      IF "Campaign No." <> '' THEN
        TempSegmentLine."Campaign No." := "Campaign No.";

      TempSegmentLine."Campaign Target" := "Campaign Target";
      TempSegmentLine."Campaign Response" := "Campaign Response";
      TempSegmentLine.SETRANGE("Contact No.",TempSegmentLine."Contact No.");
      TempSegmentLine.SETRANGE("Campaign No.",TempSegmentLine."Campaign No.");

      TempSegmentLine.StartWizard2;
    END;

    LOCAL PROCEDURE FindLanguage@10(InteractTmplCode@1001 : Code[10];ContactLanguageCode@1000 : Code[10]) Language@1005 : Code[10];
    VAR
      SegInteractLanguage@1004 : Record 5104;
      InteractTemplLanguage@1003 : Record 5103;
      InteractTmpl@1002 : Record 11072032;
    BEGIN
      IF SegHeader.GET("Segment No.") THEN BEGIN
        IF NOT UniqueAttachmentExists AND
           ("Interaction Template Code" = SegHeader."Interaction Template Code")
        THEN BEGIN
          IF SegInteractLanguage.GET("Segment No.",0,ContactLanguageCode) THEN
            Language := ContactLanguageCode
          ELSE
            Language := SegHeader."Language Code (Default)";
        END ELSE
          IF SegInteractLanguage.GET("Segment No.","Line No.",ContactLanguageCode) THEN
            Language := ContactLanguageCode
          ELSE BEGIN
            InteractTmpl.GET(InteractTmplCode);
            IF SegInteractLanguage.GET("Segment No.","Line No.",InteractTmpl."Language Code (Default)") THEN
              Language := InteractTmpl."Language Code (Default)"
            ELSE BEGIN
              SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
              SegInteractLanguage.SETRANGE("Segment Line No.","Line No.");
              IF SegInteractLanguage.FINDFIRST THEN
                Language := SegInteractLanguage."Language Code";
            END;
          END;
      END ELSE BEGIN  // Create Interaction:
        IF InteractTemplLanguage.GET(InteractTmplCode,ContactLanguageCode) THEN
          Language := ContactLanguageCode
        ELSE
          IF InteractTmpl.GET(InteractTmplCode) THEN
            Language := InteractTmpl."Language Code (Default)";
      END;
    END;

    LOCAL PROCEDURE CreateSegInteractLanguages@11(InteractTemplCode@1000 : Code[10]);
    VAR
      SegInteractLanguage@1003 : Record 5104;
      InteractTemplLanguage@1002 : Record 5103;
      Attachment@1001 : Record 11072030;
    BEGIN
      SegInteractLanguage.RESET;
      SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
      SegInteractLanguage.SETRANGE("Segment Line No.","Line No.");
      SegInteractLanguage.DELETEALL(TRUE);

      IF SegHeader.GET("Segment No.") THEN
        IF "Interaction Template Code" <> SegHeader."Interaction Template Code" THEN BEGIN
          InteractTemplLanguage.RESET;
          InteractTemplLanguage.SETRANGE("Interaction Template Code",InteractTemplCode);
          IF InteractTemplLanguage.FIND('-') THEN
            REPEAT
              SegInteractLanguage.INIT;
              SegInteractLanguage."Segment No." := "Segment No.";
              SegInteractLanguage."Segment Line No." := "Line No.";
              SegInteractLanguage."Language Code" := InteractTemplLanguage."Language Code";
              SegInteractLanguage.Description := Description;
              IF Attachment.GET(InteractTemplLanguage."Attachment No.") THEN
                SegInteractLanguage."Attachment No." :=
                  AttachmentManagement.InsertAttachment(InteractTemplLanguage."Attachment No.");
              SegInteractLanguage.INSERT(TRUE);
            UNTIL InteractTemplLanguage.NEXT = 0;
        END;
    END;

    PROCEDURE AttachmentInherited@12() : Boolean;
    VAR
      SegInteractLanguage@1000 : Record 5104;
    BEGIN
      IF "Attachment No." = 0 THEN
        EXIT(FALSE);
      IF NOT SegHeader.GET("Segment No.") THEN
        EXIT(FALSE);
      IF "Interaction Template Code" = '' THEN
        EXIT(FALSE);

      SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
      SegInteractLanguage.SETRANGE("Segment Line No.","Line No.");
      SegInteractLanguage.SETRANGE("Language Code","Language Code");
      SegInteractLanguage.SETRANGE("Attachment No.","Attachment No.");
      IF SegInteractLanguage.FINDFIRST THEN
        EXIT(FALSE);

      SegInteractLanguage.SETRANGE("Segment Line No.",0);
      IF SegInteractLanguage.FINDFIRST THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE SetInteractionAttachment@13();
    VAR
      Attachment@1001 : Record 11072030;
      InteractTemplLanguage@1000 : Record 5103;
    BEGIN
      IF InteractTemplLanguage.GET("Interaction Template Code","Language Code") THEN BEGIN
        IF Attachment.GET(InteractTemplLanguage."Attachment No.") THEN
          "Attachment No." := InteractTemplLanguage."Attachment No."
        ELSE
          "Attachment No." := 0;
      END;
      MODIFY;
    END;

    LOCAL PROCEDURE UniqueAttachmentExists@14() : Boolean;
    VAR
      SegInteractLanguage@1000 : Record 5104;
    BEGIN
      IF "Line No." <> 0 THEN BEGIN
        SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
        SegInteractLanguage.SETRANGE("Segment Line No.","Line No.");
        IF SegInteractLanguage.FINDFIRST THEN
          EXIT(TRUE);

        EXIT(FALSE);
      END;
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE SetCampaignTargetGroup@15();
    BEGIN
      IF Campaign.GET(xRec."Campaign No.") THEN BEGIN
        Campaign.CALCFIELDS(Activated);
        IF Campaign.Activated THEN
          CampaignTargetGrMgt.DeleteSegfromTargetGr(xRec);
      END;

      IF Campaign.GET("Campaign No.") THEN BEGIN
        Campaign.CALCFIELDS(Activated);
        IF Campaign.Activated THEN
          CampaignTargetGrMgt.AddSegLinetoTargetGr(Rec);
      END;
    END;

    PROCEDURE CreateInteractionFromContact@38(VAR Contact@1000 : Record 5050);
    BEGIN
      DELETEALL;
      INIT;
      IF Contact.Type = Contact.Type::Person THEN
        SETRANGE("Contact Company No.",Contact."Company No.");
      SETRANGE("Contact No.",Contact."No.");
      VALIDATE("Contact No.",Contact."No.");
      "Salesperson Code" := Contact."Salesperson Code";
      StartWizard;
    END;

    PROCEDURE CreateInteractionFromSalesPurc@39(VAR Salesperson@1000 : Record 13);
    BEGIN
      DELETEALL;
      INIT;
      VALIDATE("Salesperson Code",Salesperson.Code);
      SETRANGE("Salesperson Code",Salesperson.Code);
      StartWizard;
    END;

    PROCEDURE CreateInteractionFromIntLogEnt@42(VAR InteractionLogEntry@1000 : Record 11072027);
    VAR
      Cont@1005 : Record 5050;
      SalesPurchPerson@1004 : Record 13;
      Campaign@1003 : Record 11072034;
      Todo@1002 : Record 5080;
      Opportunity@1001 : Record 5092;
    BEGIN
      IF Todo.GET(InteractionLogEntry.GETFILTER("To-do No.")) THEN BEGIN
        "To-do No." := Todo."No.";
        SETRANGE("To-do No.","To-do No.");
        IF Cont.GET(Todo."Contact No.") THEN
          VALIDATE("Contact No.",Todo."Contact No.");
        IF SalesPurchPerson.GET(Todo."Salesperson Code") THEN
          "Salesperson Code" := SalesPurchPerson.Code;
        IF Campaign.GET(Todo."Campaign No.") THEN
          "Campaign No." := Campaign."No.";
        IF Opportunity.GET(Todo."Opportunity No.") THEN
          "Opportunity No." := Todo."Opportunity No.";
      END ELSE BEGIN
        IF Cont.GET(InteractionLogEntry.GETFILTER("Contact Company No.")) THEN BEGIN
          VALIDATE("Contact No.",Cont."Company No.");
          SETRANGE("Contact No.","Contact No.");
        END;
        IF Cont.GET(InteractionLogEntry.GETFILTER("Contact No.")) THEN BEGIN
          VALIDATE("Contact No.",Cont."No.");
          SETRANGE("Contact No.","Contact No.");
        END;
        IF SalesPurchPerson.GET(InteractionLogEntry.GETFILTER("Salesperson Code")) THEN BEGIN
          "Salesperson Code" := SalesPurchPerson.Code;
          SETRANGE("Salesperson Code","Salesperson Code");
        END;
        IF Campaign.GET(InteractionLogEntry.GETFILTER("Campaign No.")) THEN BEGIN
          "Campaign No." := Campaign."No.";
          SETRANGE("Campaign No.","Campaign No.");
        END;
        IF Opportunity.GET(InteractionLogEntry.GETFILTER("Opportunity No.")) THEN BEGIN
          "Opportunity No." := Opportunity."No.";
          SETRANGE("Opportunity No.","Opportunity No.");
        END;
      END;
      StartWizard;
    END;

    PROCEDURE CreateInteractionFromToDo@43(VAR ToDo@1000 : Record 5080);
    VAR
      Cont@1003 : Record 5050;
      SalesPurchPerson@1002 : Record 13;
      Campaign@1001 : Record 11072034;
    BEGIN
      INIT;
      //"To-do No." := ToDo."No."; //**4PS.o
      "To-do No." := ToDo."Organizer To-do No."; //**4PS.n
      SETRANGE("To-do No.","To-do No.");
      IF Cont.GET(ToDo."Contact No.") THEN
        VALIDATE("Contact No.",Cont."No.");
      IF SalesPurchPerson.GET(ToDo."Salesperson Code") THEN
        "Salesperson Code" := SalesPurchPerson.Code;
      IF Campaign.GET(ToDo."Campaign No.") THEN
        "Campaign No." := Campaign."No.";
      StartWizard;
    END;

    LOCAL PROCEDURE GetContactName@41() : Text[50];
    VAR
      Cont@1000 : Record 5050;
    BEGIN
      IF Cont.GET("Contact No.") THEN
        EXIT(Cont.Name);
      IF Cont.GET("Contact Company No.") THEN
        EXIT(Cont.Name);
    END;

    PROCEDURE StartWizard@33();
    VAR
      Opp@1000 : Record 5092;
    BEGIN
      IF Campaign.GET("Campaign No.") THEN
        "Campaign Description" := Campaign.Description;
      IF Opp.GET("Opportunity No.") THEN
        "Opportunity Description" := Opp.Description;
      "Wizard Contact Name" := GetContactName;
      "Wizard Step" := "Wizard Step"::"1";
      "Interaction Successful" := TRUE;
      VALIDATE(Date,WORKDATE);
      INSERT;
      PAGE.RUNMODAL(PAGE::"Create Interaction",Rec,"Interaction Template Code");
    END;

    PROCEDURE PerformNextWizardStatus@6(VAR AttachmentTmp@1001 : Record 11072030);
    VAR
      InteractTmpl@1000 : Record 11072032;
    BEGIN
      CASE "Wizard Step" OF
        "Wizard Step"::"1":
          BEGIN
            InteractTmpl.GET("Interaction Template Code");
            IF InteractTmpl."Wizard Action" <> InteractTmpl."Wizard Action"::" " THEN
              "Wizard Step" := "Wizard Step"::"2"
            ELSE
              "Wizard Step" := "Wizard Step"::"3";
          END;
        "Wizard Step"::"2":
          BEGIN
            HandleTrigger(AttachmentTmp);
            "Wizard Step" := "Wizard Step" + 1;
          END;
        "Wizard Step"::"3".."Wizard Step"::"4":
          "Wizard Step" := "Wizard Step" + 1;
      END;

      IF "Wizard Step" = "Wizard Step"::"4" THEN
    END;

    PROCEDURE PerformPrevWizardStatus@32();
    BEGIN
      CASE "Wizard Step" OF
        "Wizard Step"::"2".."Wizard Step"::"3":
          "Wizard Step" := "Wizard Step"::"1";
        ELSE
          "Wizard Step" := "Wizard Step" - 1;
      END;
    END;

    PROCEDURE CheckStatus@16();
    VAR
      InteractTmpl@1000 : Record 11072032;
      Attachment@1001 : Record 11072030;
      SalutationFormula@1002 : Record 5069;
    BEGIN
      CASE "Wizard Step" OF
        "Wizard Step"::"1":
          BEGIN
            IF "Contact No." = '' THEN
              //ERROR(Text009); //**4PS.o
              ErrorMessage(FIELDCAPTION("Contact No.")); //**4PS.n
            IF "Interaction Template Code" = '' THEN
              ErrorMessage(FIELDCAPTION("Interaction Template Code"));
            IF "Salesperson Code" = '' THEN
              ErrorMessage(FIELDCAPTION("Salesperson Code"));
            IF Date = 0D THEN
              ErrorMessage(FIELDCAPTION(Date));
            IF Description = '' THEN
              ErrorMessage(FIELDCAPTION(Description));

            InteractTmpl.GET("Interaction Template Code");
            IF InteractTmpl."Wizard Action" = InteractTmpl."Wizard Action"::Open THEN
              IF "Attachment No." = 0 THEN
                ErrorMessage(Attachment.TABLECAPTION);

            Cont.GET("Contact No.");
            SalutationFormula.GET(Cont."Salutation Code","Language Code",0);
            SalutationFormula.GET(Cont."Salutation Code","Language Code",1);
          END;
        "Wizard Step"::"2":
          ;
        "Wizard Step"::"3":
          BEGIN
            IF AttachmentTemp.FINDFIRST THEN
              AttachmentTemp.CALCFIELDS(Attachment);
            IF ("Correspondence Type" = "Correspondence Type"::"E-Mail") AND
               NOT AttachmentTemp.Attachment.HASVALUE
            THEN
              ERROR(Text008);
          END;
        "Wizard Step"::"4":
          ;
      END;
    END;

    PROCEDURE FinishWizard@18(IsFinish@1000 : Boolean;VAR AttachmentTmp@1004 : Record 11072030) : Boolean;
    VAR
      InteractLogEntry@1003 : Record 11072027;
      SegManagement@1002 : Codeunit 5051;
      send@1001 : Boolean;
      Flag@1102601000 : Boolean;
    BEGIN
      Flag := FALSE;
      IF IsFinish THEN
        Flag := TRUE
      ELSE
        Flag := CONFIRM(Text007);

      IF Flag THEN BEGIN
        AttachmentTemp.COPY(AttachmentTmp);
        "Attempt Failed" := NOT "Interaction Successful";
        Subject := Description;
        ProcessPostponedAttachment;
        send := (IsFinish AND ("Correspondence Type" <> "Correspondence Type"::" "));
        SegManagement.LogInteraction(Rec,AttachmentTemp,InterLogEntryCommentLineTmp,send,NOT IsFinish);
        InteractLogEntry.FINDLAST;
        IF InteractLogEntry."Delivery Status" = InteractLogEntry."Delivery Status"::Error THEN
          ERROR(Text025,Mail.GetErrorDesc);
      END;
      DELETE
    END;

    LOCAL PROCEDURE ErrorMessage@17(FieldName@1000 : Text[1024]);
    BEGIN
      ERROR(Text005,FieldName);
    END;

    PROCEDURE ValidateCorrespondenceType@47();
    VAR
      ErrorText@1000 : Text[80];
    BEGIN
      IF "Correspondence Type" <> "Correspondence Type"::" " THEN
        IF AttachmentTemp.FINDFIRST THEN BEGIN
          ErrorText := AttachmentTemp.CheckCorrespondenceType("Correspondence Type");
          IF ErrorText <> '' THEN
            ERROR(
              Text024 + ErrorText,
              FIELDCAPTION("Correspondence Type"),"Correspondence Type");
        END;
    END;

    LOCAL PROCEDURE HandleTrigger@20(VAR AttachmentTmp@1002 : Record 11072030);
    VAR
      TempBlob@1005 : Record 99008535;
      FileMgt@1003 : Codeunit 419;
      ImportedFileName@1000 : Text;
    BEGIN
      InteractTmpl.GET("Interaction Template Code");
      IF NOT AttachmentTemp.Attachment.HASVALUE THEN
        AttachmentTemp.COPY(AttachmentTmp);

      CASE InteractTmpl."Wizard Action" OF
        InteractTmpl."Wizard Action"::Open:
          BEGIN
            TESTFIELD("Attachment No.");
            LoadTempAttachment;
            Subject := Description;
            AttachmentTemp.ShowAttachment(Rec,Description,TRUE);
            AttachmentTmp.COPY(AttachmentTemp);
          END;
        InteractTmpl."Wizard Action"::Import:
          BEGIN
            ImportedFileName := FileMgt.BLOBImport(TempBlob,ImportedFileName);
            IF ImportedFileName = '' THEN
              MESSAGE(Text004)
            ELSE BEGIN
              AttachmentTemp.DELETEALL;
              AttachmentTemp.Attachment := TempBlob.Blob;
              AttachmentTemp."File Extension" := COPYSTR(FileMgt.GetExtension(ImportedFileName),1,250);
              AttachmentTemp.INSERT;
              AttachmentTmp.COPY(AttachmentTemp);
            END;
          END;
      END;
    END;

    LOCAL PROCEDURE LoadTempAttachment@22();
    BEGIN
      IF AttachmentTemp.Attachment.HASVALUE THEN
        EXIT;
      Attachment.GET("Attachment No.");
      Attachment.CALCFIELDS(Attachment);
      AttachmentTemp.DELETEALL;
      AttachmentTemp.WizEmbeddAttachment(Attachment);
      AttachmentTemp."No." := 0;
      AttachmentTemp."Read Only" := FALSE;
      AttachmentTemp.INSERT;
    END;

    LOCAL PROCEDURE ProcessPostponedAttachment@19();
    BEGIN
      IF "Attachment No." <> 0 THEN BEGIN
        LoadTempAttachment;
        IF "Line No." <> 0 THEN
          "Attachment No." := ResumedAttachmentNo;
      END ELSE
        IF Attachment.GET(ResumedAttachmentNo) THEN
          Attachment.RemoveAttachment(FALSE);
    END;

    PROCEDURE LoadAttachment@24();
    BEGIN
      IF "Line No." <> 0 THEN BEGIN
        InterLogEntryCommentLine.SETRANGE("Entry No.","Line No.");
        IF InterLogEntryCommentLine.FIND('-') THEN
          REPEAT
            InterLogEntryCommentLineTmp.INIT;
            InterLogEntryCommentLineTmp.TRANSFERFIELDS(InterLogEntryCommentLine,FALSE);
            InterLogEntryCommentLineTmp."Line No." := InterLogEntryCommentLine."Line No.";
            InterLogEntryCommentLineTmp.INSERT;
          UNTIL InterLogEntryCommentLine.NEXT = 0;
        ResumedAttachmentNo := "Attachment No.";
      END;
      IF "Attachment No." <> 0 THEN
        LoadTempAttachment;
    END;

    PROCEDURE MakePhoneCallFromContact@45(VAR Cont@1000 : Record 5050;ToDo@1001 : Record 5080;TableNo@1005 : Integer;PhoneNo@1003 : Text[30];ContAltAddrCode@1002 : Code[10]);
    BEGIN
      INIT;
      IF Cont.Type = Cont.Type::Person THEN
        SETRANGE("Contact No.",Cont."No.")
      ELSE
        SETRANGE("Contact Company No.",Cont."Company No.");
      IF PhoneNo <> '' THEN
        "Contact Via" := PhoneNo
      ELSE
        "Contact Via" := Cont."Phone No.";
      VALIDATE("Contact No.",Cont."No.");
      "Contact Name" := Cont.Name;
      VALIDATE(Date,TODAY);
      IF ContAltAddrCode <> '' THEN
        "Contact Alt. Address Code" := ContAltAddrCode;
      IF TableNo = DATABASE::"To-do" THEN
        "To-do No." := ToDo."No.";
      StartWizard2;
    END;

    PROCEDURE StartWizard2@34();
    VAR
      InteractionTmplSetup@1000 : Record 5122;
      Campaign@1001 : Record 11072034;
    BEGIN
      InteractionTmplSetup.GET;
      InteractionTmplSetup.TESTFIELD("Outg. Calls");

      "Wizard Step" := "Wizard Step"::"1";
      IF Date = 0D THEN
        Date := TODAY;
      "Time of Interaction" := TIME;
      "Interaction Successful" := TRUE;
      //"Dial Contact" := TRUE; //**4PS.o

      IF Campaign.GET(GETFILTER("Campaign No.")) THEN
        "Campaign Description" := Campaign.Description;
      "Wizard Contact Name" := GetContactName;

      INSERT;
      VALIDATE("Interaction Template Code",InteractionTmplSetup."Outg. Calls");
      PAGE.RUNMODAL(PAGE::"Make Phone Call",Rec,"Contact Via");
    END;

    PROCEDURE PerformNextWizardStatus2@26();
    BEGIN
      "Wizard Step" := "Wizard Step" + 1;
    END;

    PROCEDURE PerformPrevWizardStatus2@35();
    BEGIN
      "Wizard Step" := "Wizard Step" - 1;
    END;

    PROCEDURE PerformPostStep2@46();
    BEGIN
      CASE "Wizard Step" OF
        "Wizard Step"::"2":
          IF "Dial Contact" THEN BEGIN
            IF TAPIManagement.Dial("Contact Via") THEN
              "Dial Contact" := FALSE;
          END; // **4PS.n
      //**4PS.os
      //    END ELSE
      //      ERROR(Text010);
      //**4PS.oe
      END;
    END;

    PROCEDURE CheckStatus2@25();
    BEGIN
      IF "Wizard Step" = "Wizard Step"::"1" THEN BEGIN
        IF "Dial Contact" AND ("Contact Via" = '') THEN
          ERROR(Text013);
        IF Date = 0D THEN
          ErrorMessage(FIELDCAPTION(Date));
        IF Description = '' THEN
          ErrorMessage(FIELDCAPTION(Description));
        IF "Salesperson Code" = '' THEN
          ErrorMessage(FIELDCAPTION("Salesperson Code"));
      END;
    END;

    PROCEDURE FinishWizard2@23() : Boolean;
    VAR
      SegManagement@1002 : Codeunit 5051;
      TempAttachment@1000 : TEMPORARY Record 11072030;
      SegLine@1001 : Record 11072040;
    BEGIN
      "Attempt Failed" := NOT "Interaction Successful";

      SegManagement.LogInteraction(Rec,TempAttachment,InterLogEntryCommentLineTmp,FALSE,FALSE);

      IF SegLine.GET("Segment No.","Line No.") THEN BEGIN
        SegLine.LOCKTABLE;
        SegLine."Contact Via" := "Contact Via";
        SegLine."Wizard Step" := SegLine."Wizard Step"::" ";
        SegLine.MODIFY;
      END;
    END;

    PROCEDURE ShowComment@27();
    BEGIN
      PAGE.RUNMODAL(PAGE::"Inter. Log Entry Comment Sheet",InterLogEntryCommentLineTmp);
    END;

    LOCAL PROCEDURE CommentExists@28() : Boolean;
    BEGIN
      EXIT(NOT InterLogEntryCommentLineTmp.ISEMPTY);
    END;

    PROCEDURE GetComments@64(VAR InterLogEntryCommentLine@1001 : Record 11072067);
    BEGIN
      //**4PS function changed to global
      InterLogEntryCommentLine.DELETEALL;
      IF InterLogEntryCommentLineTmp.FIND('-') THEN
        REPEAT
          InterLogEntryCommentLine := InterLogEntryCommentLineTmp;
          InterLogEntryCommentLine.INSERT;
        UNTIL InterLogEntryCommentLineTmp.NEXT = 0;
    END;

    PROCEDURE SetComments@53(VAR InterLogEntryCommentLine@1001 : Record 11072067);
    BEGIN
      InterLogEntryCommentLineTmp.DELETEALL;

      IF InterLogEntryCommentLine.FINDSET THEN
        REPEAT
          InterLogEntryCommentLineTmp := InterLogEntryCommentLine;
          InterLogEntryCommentLineTmp.INSERT;
        UNTIL InterLogEntryCommentLine.NEXT = 0;
    END;

    LOCAL PROCEDURE StartWizard3@37();
    VAR
      InteractionTmplSetup@1000 : Record 5122;
    BEGIN
      "Wizard Step" := "Wizard Step"::"1";
      "Interaction Successful" := TRUE;
      "Mail Contact" := TRUE;
      IF "Contact No." = '' THEN
        "Contact No." := "Contact Company No.";
      "Wizard Contact Name" := GetContactName;
      INSERT;
      InteractionTmplSetup.GET;
      VALIDATE("Interaction Template Code",InteractionTmplSetup."E-Mails");
      "Correspondence Type" := "Correspondence Type"::"E-Mail";
      MODIFY;

      PAGE.RUNMODAL(PAGE::"Create Mail",Rec);
    END;

    PROCEDURE PerformNextWizardStatus3@31();
    BEGIN
      "Wizard Step" := "Wizard Step" + 1;
    END;

    PROCEDURE PerformPrevWizardStatus3@36();
    BEGIN
      "Wizard Step" := "Wizard Step" - 1;
    END;

    PROCEDURE PerformPostStep3@44();
    BEGIN
      CASE "Wizard Step" OF
        "Wizard Step"::"2":
          IF "Mail Contact" THEN BEGIN
            IF Mail.NewMessage("Contact Via",'','',Subject,'','',TRUE) THEN BEGIN
              "Mail Contact" := FALSE;
              "Time of Interaction" := TIME;
              MODIFY;
            END ELSE
              ERROR(Text025,Mail.GetErrorDesc);
          END;
      END;
    END;

    PROCEDURE CheckStatus3@30();
    BEGIN
      IF "Wizard Step" = "Wizard Step"::"1" THEN BEGIN
        IF Date = 0D THEN
          ErrorMessage(FIELDCAPTION(Date));
        IF "Mail Contact" AND ("Contact Via" = '') THEN
          ErrorMessage(FIELDCAPTION("Contact Via"));
        IF "Mail Contact" AND ("Contact Via" <> '') THEN BEGIN
          IF NOT ContactThrough.FINDFIRST THEN
            Mail.CollectAddresses("Contact No.",ContactThrough,FALSE);
          IF NOT Mail.ValidateEmail(ContactThrough,"Contact Via") THEN
            ERROR(Text023,"Contact Via",Cont.TABLECAPTION);
        END;
        IF Subject = '' THEN
          ErrorMessage(FIELDCAPTION(Subject));
        IF "Salesperson Code" = '' THEN
          ErrorMessage(FIELDCAPTION("Salesperson Code"));
      END;
    END;

    PROCEDURE FinishWizard3@29() : Boolean;
    VAR
      SegLine@1002 : Record 11072040;
      TempAttachment@1001 : Record 11072030;
      SegManagement@1000 : Codeunit 5051;
    BEGIN
      "Attempt Failed" := NOT "Interaction Successful";
      Description := Subject;

      "Wizard Contact Name" := '';
      "Opportunity Description" := '';
      "Campaign Description" := '';
      "Wizard Step" := "Wizard Step"::" ";
      "Interaction Successful" := FALSE;
      "Dial Contact" := FALSE;
      "Mail Contact" := FALSE;

      SegManagement.LogInteraction(Rec,TempAttachment,InterLogEntryCommentLineTmp,FALSE,FALSE);

      IF SegLine.GET("Segment No.","Line No.") THEN BEGIN
        SegLine.LOCKTABLE;
        SegLine."Contact Via" := "Contact Via";
        SegLine.MODIFY;
      END;
    END;

    PROCEDURE GetCaptionClass@1210190000(FieldNumber@1210190009 : Integer;MergeFieldNumber@1210190002 : Integer) : Text[80];
    VAR
      lOptionalMergeFieldRec@1210190008 : Record 11012145;
      lField@1210190006 : Record 2000000041;
      SegmentHeader@1100528401 : Record 11072039;
      CaptionTxt@1210190007 : Text[78];
      InteractionTemplateCode@1100528400 : Code[10];
    BEGIN
      //**4PS
      lField.GET(DATABASE::"Segment Line",FieldNumber);

      CaptionTxt := lField."Field Caption";
      IF "Segment No." <> '' THEN
        IF SegmentHeader.GET("Segment No.") THEN
          InteractionTemplateCode := SegmentHeader."Interaction Template Code";

      IF lOptionalMergeFieldRec.GET(InteractionTemplateCode, MergeFieldNumber) THEN
        IF lOptionalMergeFieldRec."Merge Field Name" <> '' THEN
          CaptionTxt := STRSUBSTNO(
            Text11012000  + ' ' + lOptionalMergeFieldRec."Merge Field Name", 1, MAXSTRLEN(CaptionTxt));

      EXIT('11012000,' + CaptionTxt);
    END;

    PROCEDURE OptionalMergeFieldEditable@1210190004(MergeFieldNo@1210190001 : Integer) : Boolean;
    BEGIN
      //**4PS
      IF "Interaction Template Code" = '' THEN
        EXIT(FALSE);

      IF NOT OptionalMergeFieldRec.GET("Interaction Template Code", MergeFieldNo) THEN
        EXIT(FALSE);

      IF OptionalMergeFieldRec."Merge Field Name" = '' THEN
        EXIT(FALSE);

      EXIT(OptionalMergeFieldRec.Table = OptionalMergeFieldRec.Table::" ");
    END;

    PROCEDURE ShowMergeFieldValue@1210190005(FieldValue@1210190001 : Text[80];MergeFieldNo@1210190002 : Integer) : Text[80];
    BEGIN
      //**4PS
      IF "Interaction Template Code" = '' THEN
        EXIT('');

      IF NOT OptionalMergeFieldRec.GET("Interaction Template Code", MergeFieldNo) THEN
        EXIT('');

      IF OptionalMergeFieldRec."Merge Field Name" = '' THEN
        EXIT('');

      IF OptionalMergeFieldRec.Table = OptionalMergeFieldRec.Table::" " THEN
        EXIT(FieldValue);

      EXIT(OptionalMergeFieldRec.GetFixedMergeFieldValue(Rec));
    END;

    PROCEDURE FillContactaltAddresscode@1100485000();
    BEGIN
      //**4PS
      ContactAltAdressRec.RESET;
      ContactAltAdressRec.SETRANGE("Contact No.","Contact No.");
      ContactAltAdressRec.SETRANGE(ContactAltAdressRec."Segment Default",TRUE);
      IF ContactAltAdressRec.FINDFIRST THEN
        "Contact Alt. Address Code" := ContactAltAdressRec.Code;
    END;

    PROCEDURE CreateCallUsingCallCenterPage@1100525000();
    VAR
      TempSegmentLine@1000 : TEMPORARY Record 11072040;
    BEGIN
      //**4PS
      Cont.GET("Contact No.");
      TempSegmentLine."Contact No." := Cont."No.";
      TempSegmentLine."Contact Via" := Cont."Phone No.";
      TempSegmentLine."Contact Company No." := Cont."Company No.";
      TempSegmentLine."Salesperson Code" := "Salesperson Code";
      TempSegmentLine."To-do No." := "To-do No.";
      IF "Contact Alt. Address Code" <> '' THEN
        TempSegmentLine."Contact Alt. Address Code" := "Contact Alt. Address Code";
      IF "Campaign No." <> '' THEN
        TempSegmentLine."Campaign No." := "Campaign No.";

      TempSegmentLine."Campaign Target" := "Campaign Target";
      TempSegmentLine."Campaign Response" := "Campaign Response";
      TempSegmentLine.SETRANGE("Contact No.",TempSegmentLine."Contact No.");
      TempSegmentLine.SETRANGE("Campaign No.",TempSegmentLine."Campaign No.");

      TempSegmentLine.StartWizardCallCenterPage;
    END;

    PROCEDURE StartWizardCallCenterPage@1100525003();
    VAR
      InteractionTmplSetup@1000 : Record 5122;
      Campaign@1001 : Record 11072034;
      UserSetup@1100525000 : Record 91;
      Customer@1100525001 : Record 18;
      ContactBusinessRelation@1100525002 : Record 5054;
    BEGIN
      //**4PS
      InteractionTmplSetup.GET;
      InteractionTmplSetup.TESTFIELD(InteractionTmplSetup."Outg. Calls");

      "Wizard Step" := "Wizard Step"::"1";
      IF Date = 0D THEN
        Date := TODAY;
      "Time of Interaction" := TIME;
      "Interaction Successful" := TRUE;

      IF Campaign.GET(GETFILTER("Campaign No.")) THEN
        "Campaign Description" := Campaign.Description;
      "Wizard Contact Name" := GetContactName;

      IF UserSetup.GET(USERID) THEN BEGIN;
        IF UserSetup.Salesperson <> '' THEN BEGIN;
          "Salesperson Code" := UserSetup.Salesperson;
        END;
      END;

      ContactBusinessRelation.SETCURRENTKEY("Link to Table", "Contact No.");
      ContactBusinessRelation.SETRANGE("Link to Table",ContactBusinessRelation."Link to Table"::Customer);
      ContactBusinessRelation.SETRANGE("Contact No.","Contact Company No.");
      IF ContactBusinessRelation.FIND('-') THEN BEGIN;
        IF Customer.GET(ContactBusinessRelation."No.") THEN BEGIN;
          "Customer No." := Customer."No.";
        END;
      END;

      INSERT;
      VALIDATE("Interaction Template Code",InteractionTmplSetup."Outg. Calls");
      PAGE.RUNMODAL(PAGE::"Call Center Page",Rec,"Contact Via");
    END;

    PROCEDURE CheckStatusCallCenterPage@1100525002();
    BEGIN
      //**4PS
      IF "Dial Contact" AND ("Contact Via" = '') THEN
        ERROR(Text013);
      IF Date = 0D THEN
        ErrorMessage(FIELDCAPTION(Date));
      IF "Salesperson Code" = '' THEN
        ErrorMessage(FIELDCAPTION("Salesperson Code"));
    END;

    PROCEDURE FinishWizardCallCenterPage@1100525001() : Boolean;
    VAR
      SegManagement@1002 : Codeunit 5051;
      TempAttachment@1000 : TEMPORARY Record 11072030;
      SegLine@1001 : Record 11072040;
    BEGIN
      //**4PS
      "Attempt Failed" := NOT "Interaction Successful";

      IF Description = '' THEN BEGIN;
        IF InterLogEntryCommentLineTmp.FINDFIRST THEN BEGIN;
          Description := COPYSTR(InterLogEntryCommentLineTmp.Comment, 1, MAXSTRLEN(Description));
        END ELSE BEGIN;
          ErrorMessage(FIELDCAPTION(Description));
        END;
      END;

      SegManagement.LogInteraction(Rec,TempAttachment,InterLogEntryCommentLineTmp,FALSE,FALSE);

      IF SegLine.GET("Segment No.","Line No.") THEN BEGIN
        SegLine.LOCKTABLE;
        SegLine."Contact Via" := "Contact Via";
        SegLine."Wizard Step" := SegLine."Wizard Step"::" ";
        SegLine.MODIFY;
      END;
    END;

    PROCEDURE CloseToDo@1100525004();
    VAR
      ToDo@1100525000 : Record 5080;
    BEGIN
      //**4PS
      IF NOT ToDo.GET("To-do No.") THEN EXIT;
      ToDo.Closed := TRUE;
      ToDo."Date Closed" := TODAY;
      ToDo.Status := ToDo.Status::Completed;
      IF NOT ToDo.Canceled THEN BEGIN;
        IF (ToDo."Team Code" <> '') AND (ToDo."Completed By" = '') THEN
          ERROR(STRSUBSTNO(Text029, ToDo.FIELDCAPTION("Completed By")));
      END;
      IF ToDo.Recurring THEN ToDo.CreateRecurringTodo;
      ToDo.MODIFY(TRUE);
    END;

    PROCEDURE ShowTodos@1100485006();
    VAR
      Todo@1100528700 : Record 5080;
    BEGIN
      //**4PS
      Todo.SETRANGE("Segment No.", "Segment No.");
      Todo.SETRANGE("Contact No.", "Contact No.");
      Todo.SETRANGE("System To-do Type", Todo."System To-do Type"::Organizer);
      PAGE.RUNMODAL(PAGE::"To-do List", Todo);
    END;

    PROCEDURE UpdateOptionalMergefieldValues@1100528400(VAR OptionalMergefieldValue@1100528400 : ARRAY [5] OF Text[80]);
    BEGIN
      //**4PS
      OptionalMergefieldValue[1] := ShowMergeFieldValue("Optional Mergefield 1", 1);
      OptionalMergefieldValue[2] := ShowMergeFieldValue("Optional Mergefield 2", 2);
      OptionalMergefieldValue[3] := ShowMergeFieldValue("Optional Mergefield 3", 3);
      OptionalMergefieldValue[4] := ShowMergeFieldValue("Optional Mergefield 4", 4);
      OptionalMergefieldValue[5] := ShowMergeFieldValue("Optional Mergefield 5", 5);
    END;

    BEGIN
    END.
  }
}

