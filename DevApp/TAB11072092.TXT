OBJECT Table 11072092 Insurance Journal Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,4PS9.00 (5635);
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               LOCKTABLE;
               InsuranceJnlTempl.GET("Journal Template Name");
               "Source Code" := InsuranceJnlTempl."Source Code";
               InsuranceJnlBatch.GET("Journal Template Name","Journal Batch Name");
               "Reason Code" := InsuranceJnlBatch."Reason Code";

               ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
               ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
             END;

    CaptionML=ENU=Insurance Journal Line;
  }
  FIELDS
  {
    { 1   ;   ;Journal Template Name;Code10       ;TableRelation="Insurance Journal Template";
                                                   CaptionML=ENU=Journal Template Name }
    { 2   ;   ;Journal Batch Name  ;Code10        ;TableRelation="Insurance Journal Batch".Name WHERE (Journal Template Name=FIELD(Journal Template Name));
                                                   CaptionML=ENU=Journal Batch Name }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 4   ;   ;Insurance No.       ;Code20        ;TableRelation=Insurance;
                                                   OnValidate=BEGIN
                                                                IF "Insurance No." = '' THEN BEGIN
                                                                  CreateDim(DATABASE::Insurance,"Insurance No.");
                                                                  EXIT;
                                                                END;

                                                                Insurance.GET("Insurance No.");
                                                                Insurance.TESTFIELD(Blocked,FALSE);
                                                                Description := Insurance.Description;

                                                                CreateDim(DATABASE::Insurance,"Insurance No.");
                                                              END;

                                                   CaptionML=ENU=Insurance No. }
    { 6   ;   ;FA No.              ;Code20        ;TableRelation="Fixed Asset";
                                                   OnValidate=BEGIN
                                                                IF "FA No." = '' THEN BEGIN
                                                                  "FA Description" := '';
                                                                  EXIT;
                                                                END;
                                                                FA.GET("FA No.");
                                                                "FA Description" := FA.Description;
                                                                FA.TESTFIELD(Blocked,FALSE);
                                                                FA.TESTFIELD(Inactive,FALSE);
                                                              END;

                                                   CaptionML=ENU=FA No. }
    { 7   ;   ;FA Description      ;Text50        ;CaptionML=ENU=FA Description }
    { 8   ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 9   ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=" ,,Invoice,Credit Memo";
                                                   OptionString=[ ,,Invoice,Credit Memo] }
    { 10  ;   ;Document Date       ;Date          ;CaptionML=ENU=Document Date }
    { 11  ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No. }
    { 12  ;   ;External Document No.;Code35       ;CaptionML=ENU=External Document No. }
    { 13  ;   ;Amount              ;Decimal       ;CaptionML=ENU=Amount;
                                                   AutoFormatType=1 }
    { 14  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 15  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=ENU=Shortcut Dimension 1 Code;
                                                   CaptionClass='1,2,1' }
    { 16  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=ENU=Shortcut Dimension 2 Code;
                                                   CaptionClass='1,2,2' }
    { 17  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=ENU=Reason Code }
    { 18  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=ENU=Source Code }
    { 20  ;   ;Index Entry         ;Boolean       ;CaptionML=ENU=Index Entry }
    { 21  ;   ;Posting No. Series  ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Posting No. Series }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Journal Template Name,Journal Batch Name,Line No.;
                                                   Clustered=Yes }
    {    ;Journal Template Name,Journal Batch Name,Posting Date;
                                                   MaintainSQLIndex=No }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Insurance@1000 : Record 11072087;
      FA@1001 : Record 5600;
      InsuranceJnlTempl@1002 : Record 11072090;
      InsuranceJnlBatch@1003 : Record 11072091;
      InsuranceJnlLine@1004 : Record 11072092;
      NoSeriesMgt@1005 : Codeunit 396;
      DimMgt@1006 : Codeunit 408;
      DPA_Management@1100000999 : Codeunit 11012783;

    PROCEDURE SetUpNewLine@8(LastInsuranceJnlLine@1000 : Record 11072092);
    BEGIN
      InsuranceJnlTempl.GET("Journal Template Name");
      InsuranceJnlBatch.GET("Journal Template Name","Journal Batch Name");
      InsuranceJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
      InsuranceJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
      IF InsuranceJnlLine.FINDFIRST THEN BEGIN
        "Posting Date" := LastInsuranceJnlLine."Posting Date";
        "Document No." := LastInsuranceJnlLine."Document No.";
      END ELSE BEGIN
        "Posting Date" := WORKDATE;
        IF InsuranceJnlBatch."No. Series" <> '' THEN BEGIN
          CLEAR(NoSeriesMgt);
          "Document No." := NoSeriesMgt.TryGetNextNo(InsuranceJnlBatch."No. Series","Posting Date");
        END;
      END;
      "Source Code" := InsuranceJnlTempl."Source Code";
      "Reason Code" := InsuranceJnlBatch."Reason Code";
      "Posting No. Series" := InsuranceJnlBatch."Posting No. Series";
    END;

    PROCEDURE CreateDim@13(Type1@1000 : Integer;No1@1001 : Code[20]);
    VAR
      TableID@1002 : ARRAY [10] OF Integer;
      No@1003 : ARRAY [10] OF Code[20];
    BEGIN
      TableID[1] := Type1;
      No[1] := No1;
      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      "Dimension Set ID" :=
        DimMgt.GetDefaultDimID(
          TableID,No,"Source Code",
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code",0,0);
    END;

    PROCEDURE ValidateShortcutDimCode@14(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    PROCEDURE LookupShortcutDimCode@18(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    PROCEDURE ShowShortcutDimCode@15(VAR ShortcutDimCode@1000 : ARRAY [8] OF Code[20]);
    BEGIN
      DimMgt.GetShortcutDimensions("Dimension Set ID",ShortcutDimCode);
    END;

    PROCEDURE ShowDimensions@2();
    BEGIN
      DimMgt.SetTableID(DATABASE::"Insurance Journal Line"); //**4PS.n
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet2(
          "Dimension Set ID",STRSUBSTNO('%1 %2 %3',"Journal Template Name","Journal Batch Name","Line No."),
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    PROCEDURE IsOpenedFromBatch@42() : Boolean;
    VAR
      InsuranceJournalBatch@1002 : Record 11072091;
      TemplateFilter@1001 : Text;
      BatchFilter@1000 : Text;
    BEGIN
      BatchFilter := GETFILTER("Journal Batch Name");
      IF BatchFilter <> '' THEN BEGIN
        TemplateFilter := GETFILTER("Journal Template Name");
        IF TemplateFilter <> '' THEN
          InsuranceJournalBatch.SETFILTER("Journal Template Name",TemplateFilter);
        InsuranceJournalBatch.SETFILTER(Name,BatchFilter);
        InsuranceJournalBatch.FINDFIRST;
      END;

      EXIT((("Journal Batch Name" <> '') AND ("Journal Template Name" = '')) OR (BatchFilter <> ''));
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11072092) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11072092');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Insurance Journal Line", "Shortcut Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Shortcut Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Shortcut Dimension 1 Code");
    END;

    BEGIN
    END.
  }
}

