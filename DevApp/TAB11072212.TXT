OBJECT Table 11072212 SO Plant Maint Inspection Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "Line No." = 0 THEN
                 "Line No." := GetLastLineNo + 10000;
             END;

    CaptionML=ENU=Service Order Plant Inspection Line;
    LookupPageID=Page11229375;
    DrillDownPageID=Page11229375;
  }
  FIELDS
  {
    { 10  ;   ;Service Order No.   ;Code20        ;TableRelation="Service Order";
                                                   CaptionML=ENU=Service Order No.;
                                                   Editable=No }
    { 15  ;   ;Plant Type          ;Code20        ;CaptionML=ENU=Plant Type }
    { 20  ;   ;Plant Number        ;Code10        ;TableRelation="Plant Number";
                                                   CaptionML=ENU=Plant Number;
                                                   Editable=No }
    { 30  ;   ;Maintenance Scheme Code;Code20     ;CaptionML=ENU=Maintenance Scheme Code;
                                                   Editable=No }
    { 40  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No.;
                                                   Editable=No }
    { 50  ;   ;Inspection Type     ;Option        ;CaptionML=ENU=Inspection Type;
                                                   OptionCaptionML=ENU=Base Inspection List,Standard Object,Contract Object,Standard Object (Calls),Object (Calls),,,,,,,Service Order Object;
                                                   OptionString=Base Inspection List,Standard Object,Contract Object,Standard Object (Calls),Object (Calls),,,,,,,Service Order Object;
                                                   Editable=No }
    { 60  ;   ;Service Contract No.;Code20        ;TableRelation=Service-Contract;
                                                   CaptionML=ENU=Service Contract No.;
                                                   Editable=No }
    { 70  ;   ;Code                ;Code20        ;TableRelation=IF (Inspection Type=CONST(Base Inspection List)) "Base Service Inspection List"
                                                                 ELSE IF (Inspection Type=CONST(Standard Object)) "Standard Object"
                                                                 ELSE IF (Inspection Type=CONST(Contract Object)) "Contract Object"."Service Object No." WHERE (Service Contract No.=FIELD(Service Contract No.))
                                                                 ELSE IF (Inspection Type=CONST("Standard Object (Calls)")) "Standard Object"
                                                                 ELSE IF (Inspection Type=CONST("Object (Calls)")) Service-Object;
                                                   CaptionML=ENU=Code;
                                                   Editable=No }
    { 75  ;   ;Maintenance Scheme  ;Code20        ;TableRelation="Plant Maintenance Scheme";
                                                   CaptionML=ENU=Belongs to Scheme;
                                                   Editable=No }
    { 80  ;   ;Index Date          ;Date          ;CaptionML=ENU=Index Date;
                                                   Editable=No }
    { 85  ;   ;Inspection Line No. ;Integer       ;CaptionML=ENU=Inspection Line No.;
                                                   Editable=No }
    { 90  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF (xRec.Type <> Type) AND (Type = Type::Group) THEN BEGIN
                                                                  "Field Type" := "Field Type"::" ";
                                                                  "Unit Of Measure" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Group,Line;
                                                   OptionString=Group,Line;
                                                   Editable=No }
    { 100 ;   ;Inspection Code     ;Code10        ;TableRelation=IF (Type=CONST(Group)) "Service Inspection Group"
                                                                 ELSE IF (Type=CONST(Line)) "Base Service Inspection Line";
                                                   CaptionML=ENU=Inspection Code;
                                                   Editable=No }
    { 110 ;   ;Description         ;Text50        ;CaptionML=ENU=Description;
                                                   Editable=No }
    { 120 ;   ;Field Type          ;Option        ;OnValidate=BEGIN
                                                                IF "Field Type" = "Field Type"::" " THEN
                                                                  TESTFIELD(Type, Type::Group);

                                                                IF xRec."Field Type" <> "Field Type" THEN
                                                                  Value := '';
                                                              END;

                                                   CaptionML=ENU=Field Type;
                                                   OptionCaptionML=ENU="Date,Value,Text,Option,Yes/No,,,,, ";
                                                   OptionString=[Date,Value,Text,Option,Yes/No,,,,, ];
                                                   Editable=No }
    { 130 ;   ;Value               ;Text80        ;OnValidate=BEGIN
                                                                EvaluateValue;
                                                              END;

                                                   OnLookup=VAR
                                                              BaseServiceInspectionOption@1100528600 : Record 11071749;
                                                              BaseServiceInspectionOptionPAGE@1100525000 : Page 11125256;
                                                            BEGIN
                                                              IF "Field Type" IN ["Field Type"::Option, "Field Type"::"Yes/No"] THEN BEGIN
                                                                BaseServiceInspectionOption.SETRANGE("Base Inspection Line Code", "Inspection Code");
                                                                BaseServiceInspectionOptionPAGE.SETTABLEVIEW(BaseServiceInspectionOption);
                                                                BaseServiceInspectionOptionPAGE.EDITABLE := FALSE;
                                                                BaseServiceInspectionOptionPAGE.LOOKUPMODE := TRUE;
                                                                IF BaseServiceInspectionOptionPAGE.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                  BaseServiceInspectionOptionPAGE.GETRECORD(BaseServiceInspectionOption);
                                                                  Value := BaseServiceInspectionOption.Description;
                                                                END;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Value }
    { 140 ;   ;Unit Of Measure     ;Code10        ;TableRelation="Unit of Measure";
                                                   CaptionML=ENU=Unit Of Measure;
                                                   Editable=No }
    { 150 ;   ;Inspection Group Code;Code10       ;TableRelation="Service Inspection Group";
                                                   CaptionML=ENU=Inspection Group Code;
                                                   Editable=No }
    { 160 ;   ;Mandatory           ;Boolean       ;CaptionML=ENU=Mandatory;
                                                   Editable=No }
    { 250 ;   ;Comment             ;Text50        ;CaptionML=ENU=Comment }
    { 260 ;   ;Base Inspection List;Code20        ;TableRelation="Base Service Inspection List";
                                                   CaptionML=ENU=Belongs to Base Inspection List }
  }
  KEYS
  {
    {    ;Service Order No.,Plant Number,Maintenance Scheme Code,Line No.;
                                                   Clustered=Yes }
    {    ;Service Order No.,Plant Number,Maintenance Scheme Code,Inspection Group Code,Line No. }
    {    ;Plant Number,Service Order No.,Line No.  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100528600 : TextConst 'ENU=Option Value %1 not found';
      Text002@1100528601 : TextConst 'ENU=t';

    PROCEDURE EvaluateValue@1100528600();
    VAR
      DummyDate@1100528600 : Date;
      DummyDecimal@1100528601 : Decimal;
    BEGIN
      IF Value = '' THEN EXIT;
      CASE "Field Type" OF
        "Field Type"::Date:
          BEGIN
            IF LOWERCASE(Value) = Text002 THEN
              Value := FORMAT(TODAY)
            ELSE BEGIN
              EVALUATE(DummyDate, Value);
              Value := FORMAT(DummyDate);
            END;
          END;
        "Field Type"::Value:
          BEGIN
            EVALUATE(DummyDecimal, Value);
            Value := FORMAT(DummyDecimal);
          END;
        "Field Type"::Text:;
        "Field Type"::Option,
        "Field Type"::"Yes/No":
          Value := CheckOptionValue;
      END;
    END;

    PROCEDURE CheckOptionValue@1100528603() : Text[80];
    VAR
      BaseServiceInspectionOption@1100528600 : Record 11071749;
    BEGIN
      BaseServiceInspectionOption.SETRANGE("Base Inspection Line Code", "Inspection Code");
      BaseServiceInspectionOption.SETRANGE(Description, Value);
      IF BaseServiceInspectionOption.FINDFIRST THEN BEGIN
        EXIT(BaseServiceInspectionOption.Description);
      END;
      BaseServiceInspectionOption.SETFILTER(Description, '@' + Value + '*');
      IF BaseServiceInspectionOption.COUNT = 1 THEN BEGIN
        BaseServiceInspectionOption.FINDFIRST;
        EXIT(BaseServiceInspectionOption.Description);
      END;
      ERROR(Text001, Value);
    END;

    PROCEDURE GetOptionDescriptionFromCode@1210190000(OptionCode@1210190000 : Code[10]) : Text[80];
    VAR
      BaseServiceInspectionOption@1100528600 : Record 11071749;
    BEGIN
      BaseServiceInspectionOption.SETRANGE("Base Inspection Line Code", "Inspection Code");
      BaseServiceInspectionOption.SETRANGE(Code, OptionCode);
      IF BaseServiceInspectionOption.FINDFIRST THEN
        EXIT(BaseServiceInspectionOption.Description)
      ELSE
        EXIT(OptionCode);
    END;

    PROCEDURE GetLastLineNo@1100528601() : Integer;
    VAR
      SOPlantMaintInspectionLine@1100528600 : Record 11072212;
    BEGIN
      SOPlantMaintInspectionLine := Rec;
      SOPlantMaintInspectionLine.SETRECFILTER;
      SOPlantMaintInspectionLine.SETRANGE("Line No.");
      IF SOPlantMaintInspectionLine.FINDLAST THEN
        EXIT(SOPlantMaintInspectionLine."Line No.");
    END;

    PROCEDURE ShowDocuments@1100528602();
    VAR
      DocumentFilters@1100528601 : Codeunit 11012432;
      RecRef@1100528600 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec);
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, '', FALSE, FALSE);
    END;

    PROCEDURE GetNoOfDocuments@1100525000() : Integer;
    VAR
      DocumentLinkManagement@1100525001 : Codeunit 11012401;
      RecRef@1100525000 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec);
      EXIT(DocumentLinkManagement.GetInfo(RecRef))
    END;

    PROCEDURE GetNoOfDocumentsText@1100528604() : Text[30];
    VAR
      NoOfDocuments@1100528600 : Integer;
    BEGIN
      IF Type = Type::Line THEN
        NoOfDocuments := GetNoOfDocuments
      ELSE
        NoOfDocuments := 0;
      IF NoOfDocuments > 0 THEN
        EXIT(STRSUBSTNO('[%1]', NoOfDocuments));
    END;

    PROCEDURE DocumentsExists@1100525001() : Boolean;
    BEGIN
      EXIT(GetNoOfDocuments() > 0);
    END;

    BEGIN
    END.
  }
}

