OBJECT Table 11072219 Job Service Location
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    OnInsert=BEGIN
               InitNewRecord;
             END;

    OnDelete=VAR
               JobServiceLocation@1100528800 : Record 11072219;
             BEGIN
               IF "Plot No." = '' THEN BEGIN
                 JobServiceLocation.SETRANGE("Generated in Company", "Generated in Company");
                 JobServiceLocation.SETRANGE(Company, Company);
                 JobServiceLocation.SETRANGE("Project No.", "Project No.");
                 JobServiceLocation.SETFILTER("Service Location No.", '<>%1', '');
                 IF JobServiceLocation.FINDSET THEN
                   ERROR(Text000);

                 JobServiceLocation.DELETEALL;

               END;

               JobServiceLocation.RESET;

               IF "Plot No." <> '' THEN BEGIN
                 JobServiceLocation.GET("Generated in Company", Company, "Project No.", "Plot No.");
                 IF JobServiceLocation."Service Location No." <> '' THEN
                   ERROR(Text000);
               END;
             END;

    OnRename=VAR
               JobServiceLocation@1100528800 : Record 11072219;
             BEGIN
               JobServiceLocation.SETRANGE("Generated in Company", "Generated in Company");
               JobServiceLocation.SETRANGE(Company, xRec.Company);
               JobServiceLocation.SETRANGE("Project No.", xRec."Project No.");
               JobServiceLocation.SETFILTER("Service Location No.", '<>%1', '');
               IF JobServiceLocation.FINDSET THEN
                 ERROR(Text000, xRec."Project No.", xRec.Company);
             END;

    CaptionML=ENU=Job Service Location;
  }
  FIELDS
  {
    { 10  ;   ;Generated in Company;Text30        ;TableRelation=Company;
                                                   CaptionML=ENU=Generated in Company;
                                                   NotBlank=Yes }
    { 20  ;   ;Company             ;Text30        ;TableRelation=Company;
                                                   CaptionML=ENU=Company }
    { 30  ;   ;Project No.         ;Code20        ;OnValidate=VAR
                                                                Job@1100528800 : Record 11072003;
                                                              BEGIN
                                                                IF Company = '' THEN
                                                                  Job.CHANGECOMPANY(COMPANYNAME)
                                                                ELSE
                                                                  Job.CHANGECOMPANY(Company);
                                                                Job.GET("Project No.");
                                                              END;

                                                   OnLookup=VAR
                                                              Job@1100528800 : Record 11072003;
                                                            BEGIN
                                                              IF Company = '' THEN
                                                                Job.CHANGECOMPANY(COMPANYNAME)
                                                              ELSE
                                                                Job.CHANGECOMPANY(Company);
                                                              IF Job.GET("Project No.") THEN;
                                                              IF PAGE.RUNMODAL(PAGE::"Job List", Job) = ACTION::LookupOK THEN
                                                                "Project No." := Job."No.";
                                                            END;

                                                   CaptionML=ENU=Project No.;
                                                   NotBlank=Yes }
    { 40  ;   ;Plot No.            ;Code10        ;OnValidate=VAR
                                                                Plot@1100528800 : Record 11012500;
                                                              BEGIN
                                                                IF "Plot No." = '' THEN
                                                                  EXIT;

                                                                IF Company = '' THEN
                                                                  Plot.CHANGECOMPANY(COMPANYNAME)
                                                                ELSE
                                                                  Plot.CHANGECOMPANY(Company);
                                                                Plot.GET("Project No.", "Plot No.");
                                                              END;

                                                   OnLookup=VAR
                                                              Plot@1100528800 : Record 11012500;
                                                            BEGIN
                                                              IF Company = '' THEN
                                                                Plot.CHANGECOMPANY(COMPANYNAME)
                                                              ELSE
                                                                Plot.CHANGECOMPANY(Company);

                                                              Plot.SETRANGE("Project No.", "Project No.");
                                                              IF PAGE.RUNMODAL(PAGE::"Plot Number List", Plot) = ACTION::LookupOK THEN
                                                                "Plot No." := Plot."Plot No.";
                                                            END;

                                                   CaptionML=ENU=Plot No. }
    { 50  ;   ;Service Location No.;Code20        ;TableRelation="Service Location".No.;
                                                   CaptionML=ENU=Service Location No.;
                                                   Editable=No }
    { 60  ;   ;Create Location for Project;Boolean;OnValidate=BEGIN
                                                                IF "Plot No." <> '' THEN
                                                                  ERROR(Text001);
                                                                IF NOT "Create Location for Project" THEN
                                                                  "Use Proj. No. as Serv. Loc. No" := FALSE;
                                                              END;

                                                   CaptionML=ENU=Create Service Location for Project }
    { 70  ;   ;Use Proj. No. as Serv. Loc. No;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Use Proj. No. as Serv. Loc. No" THEN
                                                                  TESTFIELD("Create Location for Project");
                                                              END;

                                                   CaptionML=ENU=Use Project No. as Service Location No. }
  }
  KEYS
  {
    {    ;Generated in Company,Company,Project No.,Plot No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528800 : TextConst 'ENU=Service Locations already created. Deleting not allowed.';
      Text001@1100528801 : TextConst 'ENU=Not allowed on Plot Number.';

    PROCEDURE InitNewRecord@1100528802();
    BEGIN
      IF "Generated in Company" = '' THEN
        "Generated in Company" := COMPANYNAME;

      IF Company = '' THEN
        Company := COMPANYNAME;
    END;

    PROCEDURE CopyPlotNumbers@1100528804();
    VAR
      Plot@1100528803 : Record 11012500;
      JobServiceLocation@1100528802 : Record 11072219;
    BEGIN
      Plot.CHANGECOMPANY(Company);
      Plot.SETRANGE("Project No.", "Project No.");
      Plot.SETFILTER("Plot No.", '<>%1', '');

      IF Plot.FINDSET THEN
        REPEAT
          IF NOT JobServiceLocation.GET("Generated in Company", Company, "Project No.", Plot."Plot No.") THEN BEGIN
            JobServiceLocation.INIT;
            JobServiceLocation.Company := Company;
            JobServiceLocation."Project No." := "Project No.";
            JobServiceLocation."Plot No." := Plot."Plot No.";
            JobServiceLocation.INSERT(TRUE);
          END;
        UNTIL Plot.NEXT = 0;
    END;

    PROCEDURE DeletePlotNumbers@1100528803();
    VAR
      JobServiceLocation@1100528800 : Record 11072219;
    BEGIN
      JobServiceLocation.SETRANGE("Generated in Company", "Generated in Company");
      JobServiceLocation.SETRANGE(Company, Company);
      JobServiceLocation.SETRANGE("Project No.", "Project No.");
      JobServiceLocation.SETRANGE("Service Location No.", '');
      JobServiceLocation.SETFILTER("Plot No.", '<>%1', '');
      JobServiceLocation.DELETEALL;
    END;

    PROCEDURE GenerateServiceLocations@1100528800();
    VAR
      ServiceLocation@1100528800 : Record 11012801;
      JobServiceLocation@1100528801 : Record 11072219;
      Job@1100528802 : Record 11072003;
      Plot@1100528803 : Record 11012500;
      Contact@1100528600 : Record 5050;
      Customer@1100528601 : Record 18;
      RecordRef@1100528804 : RecordRef;
      Loop@1100528605 : Integer;
    BEGIN
      Job.CHANGECOMPANY(Company);
      Plot.CHANGECOMPANY(Company);
      Job.GET("Project No.");

      JobServiceLocation.SETRANGE("Generated in Company", "Generated in Company");
      JobServiceLocation.SETRANGE(Company, Company);
      JobServiceLocation.SETRANGE("Project No.", "Project No.");
      JobServiceLocation.SETRANGE("Service Location No.", '');
      IF NOT "Create Location for Project" THEN
        JobServiceLocation.SETFILTER("Plot No.", '<>%1', '');
      IF JobServiceLocation.FINDSET THEN
        REPEAT
          ServiceLocation.INIT;
          ServiceLocation."No." := '';

          IF JobServiceLocation."Plot No." <> '' THEN
            Plot.GET("Project No.", JobServiceLocation."Plot No.")
          ELSE
            IF "Use Proj. No. as Serv. Loc. No" THEN
              ServiceLocation."No." := "Project No.";

          IF Company <> COMPANYNAME THEN
            ServiceLocation."Supplying Company" := Company;
          ServiceLocation."Project No." := "Project No.";
          IF JobServiceLocation."Plot No." <> '' THEN
            ServiceLocation."Plot No." := JobServiceLocation."Plot No.";
          ServiceLocation.INSERT(TRUE);

          FillLocationRecord(ServiceLocation, JobServiceLocation, Job, Plot);
          ServiceLocation.MODIFY;

          JobServiceLocation."Service Location No." := ServiceLocation."No.";
          JobServiceLocation.MODIFY;

          CreateSubcontractorServiceByProjectAuthority(JobServiceLocation);

          IF JobServiceLocation."Plot No." <> '' THEN
            RecordRef.GETTABLE(Plot)
          ELSE
          RecordRef.GETTABLE(Job);

          CreateDocumentLink(ServiceLocation, RecordRef, Company);

        UNTIL JobServiceLocation.NEXT = 0;
    END;

    PROCEDURE CreateDocumentLink@1100525005(ServiceLocation@1100525007 : Record 11012801;RecRef@1100525006 : RecordRef;CompName@1100525008 : Text[50]);
    VAR
      DocumentProperties@1100525005 : Record 11012746;
      DocumentLink@1100525004 : Record 11012747;
      DocumentLinkMgt@1100525002 : Codeunit 11012401;
      DocLinkRID@1100525000 : ARRAY [5] OF RecordID;
    BEGIN
      DocumentLink.RESET;
      DocumentLink.SETCURRENTKEY("Record ID"); //mg, 05-07-11: M27801
      DocumentLink.SETRANGE("Table No.", RecRef.NUMBER);
      DocumentLink.SETFILTER("Record ID", STRSUBSTNO('''%1''', RecRef.RECORDID()));
      DocumentLink.SETRANGE("Internal Company", CompName);
      IF DocumentLink.FINDSET THEN BEGIN
        REPEAT
          DocumentProperties.SETRANGE("No.", DocumentLink."Document No.");
          IF DocumentProperties.FINDFIRST THEN BEGIN
            RecRef.GETTABLE(ServiceLocation);
            DocLinkRID[2] := RecRef.RECORDID();

            DocumentLinkMgt.CreateDocumentLink(DocumentProperties, DocLinkRID);
            DocumentProperties.MODIFY(TRUE);
          END;
        UNTIL DocumentLink.NEXT = 0;
      END;
    END;

    PROCEDURE UpdateLocations@1100528801();
    VAR
      ServiceLocation@1100528804 : Record 11012801;
      JobServiceLocation@1100528803 : Record 11072219;
      Job@1100528802 : Record 11072003;
      Plot@1100528801 : Record 11012500;
      RecordRef@1100528800 : RecordRef;
    BEGIN
      Job.CHANGECOMPANY(Company);
      Plot.CHANGECOMPANY(Company);
      Job.GET("Project No.");

      JobServiceLocation.SETRANGE("Generated in Company", "Generated in Company");
      JobServiceLocation.SETRANGE(Company, Company);
      JobServiceLocation.SETRANGE("Project No.", "Project No.");
      JobServiceLocation.SETFILTER("Service Location No.", '<>%1', '');
      IF JobServiceLocation.FINDSET THEN
        REPEAT
          IF JobServiceLocation."Plot No." <> '' THEN
            Plot.GET("Project No.", JobServiceLocation."Plot No.");
          IF ServiceLocation.GET(JobServiceLocation."Service Location No.") THEN BEGIN
            FillLocationRecord(ServiceLocation, JobServiceLocation, Job, Plot);
            ServiceLocation.MODIFY;

            IF JobServiceLocation."Plot No." <> '' THEN
              RecordRef.GETTABLE(Plot)
            ELSE
              RecordRef.GETTABLE(Job);

            CreateDocumentLink(ServiceLocation, RecordRef, Company);
          END;
        UNTIL JobServiceLocation.NEXT = 0;
    END;

    LOCAL PROCEDURE FillLocationRecord@1100528600(VAR IOServiceLocation@1100528602 : Record 11012801;IJobServiceLocation@1100528600 : Record 11072219;IJob@1100528601 : Record 11072003;IPlot@1100528603 : Record 11012500);
    VAR
      Contact@1100528604 : Record 5050;
      Customer@1100528605 : Record 18;
    BEGIN
      IOServiceLocation.VALIDATE(Description, IJob.Description);
      IOServiceLocation.Type := IJob.Type;
      CASE IPlot."Buy/Rent" OF
        IPlot."Buy/Rent"::Sale:
          BEGIN
            IF IJobServiceLocation."Plot No." <> '' THEN BEGIN
              IF Contact.GET(IPlot.Buyer) THEN
                IF Contact.GetCustomerByContact(Contact, Customer) THEN
                  IF Customer."No." <> '' THEN
                     IOServiceLocation.VALIDATE("Customer No.", Customer."No.");
            END ELSE
              IOServiceLocation.VALIDATE("Customer No.", IJob."Bill-to Customer No.");
          END;
        IPlot."Buy/Rent"::Rent:
          IOServiceLocation.VALIDATE("Customer No.", IJob."Bill-to Customer No.");
      END;
      IF (IJobServiceLocation."Plot No." <> '') AND (IOServiceLocation.Address + IOServiceLocation.City + IOServiceLocation."Post Code" <> '') THEN BEGIN
        IOServiceLocation.Address := IPlot.Address;
        IOServiceLocation.City := IPlot.City;
        IOServiceLocation."Post Code" := IPlot."Post Code";
      END ELSE BEGIN
        IOServiceLocation.Address := IJob.Address;
        IOServiceLocation."Address 2" := IJob."Address 2";
        IOServiceLocation.City := IJob.City;
        IOServiceLocation."Post Code" := IJob."Post Code";
      END;
      IF IJobServiceLocation."Plot No." <> '' THEN BEGIN
        IPlot.CALCFIELDS("Buyer Phone", "Buyer Phone 2", "Buyer Mobile Phone", "Buyer E-Mail");
        IOServiceLocation."Phone No." := IPlot."Buyer Phone";
        IOServiceLocation."Phone No. 2" := IPlot."Buyer Phone 2";
        IOServiceLocation."Mobile Phone No." := IPlot."Buyer Mobile Phone";
        IOServiceLocation."E-Mail" := IPlot."Buyer E-Mail";
      END;
      IOServiceLocation.County := IJob.County;
      IOServiceLocation."Country/Region Code":= IJob."Country/Region Code";
      IOServiceLocation."Territory Code" := IJob."Territory Code";
    END;

    LOCAL PROCEDURE CreateSubcontractorServiceByProjectAuthority@1100528601(IJobServiceLocation@1100528600 : Record 11072219);
    VAR
      ProjectAuthority@1100528602 : Record 11020216;
      AuthorityType@1100528603 : Record 11020215;
      SubcontractorService@1100528604 : Record 11071789;
      Contact@1100528605 : Record 5050;
      Vendor@1100528606 : Record 23;
    BEGIN
      ProjectAuthority.CHANGECOMPANY(IJobServiceLocation.Company);
      AuthorityType.CHANGECOMPANY(IJobServiceLocation.Company);
      Contact.CHANGECOMPANY(IJobServiceLocation.Company);

      ProjectAuthority.SETRANGE("Project No.", IJobServiceLocation."Project No.");
      ProjectAuthority.SETRANGE("Use as Subc. on Serv. Location", TRUE);
      ProjectAuthority.SETFILTER("Contact No.", '<>%1', '');
      IF ProjectAuthority.FINDSET THEN
        REPEAT
          AuthorityType.GET(ProjectAuthority."Authority Type");
          CLEAR(SubcontractorService);
          SubcontractorService."Service Location No." := IJobServiceLocation."Service Location No.";
          SubcontractorService.Discipline := AuthorityType.Discipline;
          SubcontractorService."Trade Speciality" := AuthorityType."Trade Speciality";
          SubcontractorService."Apply To" := SubcontractorService."Apply To"::Call;
          Contact.GET(ProjectAuthority."Contact No.");
          Contact.GetVendorByContact(Contact, Vendor);
          SubcontractorService.Subcontractor := Vendor."No.";
          SubcontractorService.INSERT(TRUE);
        UNTIL ProjectAuthority.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

