OBJECT Table 11072235 Maintenance Plan Buffer
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Maintenance Plan Buffer;
  }
  FIELDS
  {
    { 10  ;   ;Service Contract No.;Code20        ;TableRelation=Service-Contract;
                                                   CaptionML=ENU=Service Contract }
    { 20  ;   ;Service Contract Description;Text50;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Service-Contract.Description WHERE (No.=FIELD(Service Contract No.)));
                                                   CaptionML=ENU=Service Contract Description }
    { 30  ;   ;Service Location No.;Code20        ;TableRelation="Service Location";
                                                   CaptionML=ENU=Service Location Code }
    { 40  ;   ;Service Location Description;Text50;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Location".Description WHERE (No.=FIELD(Service Location No.)));
                                                   CaptionML=ENU=Service Location Description }
    { 50  ;   ;Object No.          ;Code20        ;TableRelation=Service-Object;
                                                   CaptionML=ENU=Object No. }
    { 60  ;   ;Service Object Description;Text50  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Service-Object.Description WHERE (No.=FIELD(Object No.)));
                                                   CaptionML=ENU=Service Object Description }
    { 70  ;   ;Maintenance Scheme Code;Code20     ;TableRelation="Maintenance Scheme";
                                                   CaptionML=ENU=Maintenance Scheme Code }
    { 80  ;   ;Maintenance Scheme Description;Text50;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Maintenance Scheme".Description WHERE (Code=FIELD(Maintenance Scheme Code)));
                                                   CaptionML=ENU=Maintenance Scheme Description }
  }
  KEYS
  {
    {    ;Service Contract No.,Service Location No.,Object No.,Maintenance Scheme Code;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE GetMaintProgressIndicator@1100525000(IFromDate@1100528800 : Date;IUntilDate@1100528801 : Date) : Text[30];
    VAR
      ServiceContractArrangement@1100525000 : Record 11071705;
      ServiceOrderBudgetLine@1100525001 : Record 11012875;
      ReferenceDate@1100528802 : Date;
      NoOfArrangements@1100528803 : Integer;
      TotalAmount@1100528804 : Decimal;
      FinishedAmount@1100528805 : Decimal;
    BEGIN
      ServiceContractArrangement.SETRANGE("Service Contract No.", "Service Contract No.");
      IF "Service Location No." <> '' THEN
        ServiceContractArrangement.SETRANGE("Service Location No.", "Service Location No.");
      IF "Object No." <> '' THEN
        ServiceContractArrangement.SETRANGE("Object No.", "Object No.");
      IF "Maintenance Scheme Code" <> '' THEN
        ServiceContractArrangement.SETRANGE("Maintenance Scheme", "Maintenance Scheme Code");
      IF ServiceContractArrangement.FINDSET THEN
        REPEAT
          ServiceContractArrangement.CALCFIELDS("Maintenance Proposal No.", "Planned Maintenance Date", "Service Order No.");
          IF ServiceContractArrangement."Service Order No." <> '' THEN
            ServiceContractArrangement.CALCFIELDS("Service Order Status", "Service Order Starting Date");
          ReferenceDate := ServiceContractArrangement."Theoretical Maintenance Date";
          IF ServiceContractArrangement."Maintenance Proposal No." <> '' THEN
            ReferenceDate := ServiceContractArrangement."Planned Maintenance Date";
          IF ServiceContractArrangement."Service Order No." <> '' THEN
            ReferenceDate := ServiceContractArrangement."Service Order Starting Date";
          IF (ReferenceDate >= IFromDate) AND (ReferenceDate <= IUntilDate) THEN BEGIN
            NoOfArrangements += 1;
            IF ServiceContractArrangement."Service Order No." <> '' THEN BEGIN
              ServiceOrderBudgetLine.SETCURRENTKEY("Budget Type", "Service Order No.", "Object No.", "Maintenance Scheme", Finished);
              ServiceOrderBudgetLine.SETRANGE("Budget Type", ServiceOrderBudgetLine."Budget Type"::Order);
              ServiceOrderBudgetLine.SETRANGE("Service Order No.", ServiceContractArrangement."Service Order No.");
              ServiceOrderBudgetLine.SETRANGE("Object No.", ServiceContractArrangement."Object No.");
              ServiceOrderBudgetLine.SETRANGE("Maintenance Scheme", ServiceContractArrangement."Maintenance Scheme");
              ServiceOrderBudgetLine.SETRANGE(Finished);
              ServiceOrderBudgetLine.CALCSUMS(Amount);
              TotalAmount += ServiceOrderBudgetLine.Amount;
              ServiceOrderBudgetLine.SETRANGE(Finished, TRUE);
              ServiceOrderBudgetLine.CALCSUMS(Amount);
              FinishedAmount += ServiceOrderBudgetLine.Amount;
            END;
          END;
        UNTIL ServiceContractArrangement.NEXT = 0;

      IF NoOfArrangements = 0 THEN
        EXIT('');
      IF (TotalAmount > 0) AND (FinishedAmount > 0) THEN
        IF TotalAmount = FinishedAmount THEN
          EXIT('O')
        ELSE
          EXIT(STRSUBSTNO('%1%', ROUND(FinishedAmount / TotalAmount * 100, 1)));
      EXIT('X');
    END;

    BEGIN
    END.
  }
}

