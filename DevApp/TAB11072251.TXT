OBJECT Table 11072251 Plot SQ Recording
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               Plot@1100525000 : Record 11012500;
               PlotSQRecording@1100528600 : Record 11072251;
             BEGIN
               IF Plot.GET("Project No.", "Plot No.") THEN BEGIN
                 //Plot.CheckStatus(1);
                 //Plot.TESTFIELD("Unit Price Status", ServiceOrder."Unit Price Status"::"Production Recording");
               END;

               IF "Seq. No." = 0 THEN BEGIN
                 PlotSQRecording.SETCURRENTKEY("Project No.", "Plot No.", "Seq. No.");
                 PlotSQRecording.SETRANGE("Project No.", "Project No.");
                 PlotSQRecording.SETRANGE("Plot No.", "Plot No.");
                 IF PlotSQRecording.FINDLAST THEN
                   "Seq. No." := PlotSQRecording."Seq. No.";
                 "Seq. No." += 1;
               END;

               IF "Recording Date" = 0D THEN
                 VALIDATE("Recording Date", TODAY);
             END;

    OnModify=VAR
               Plot@1100525000 : Record 11012500;
             BEGIN
               IF Plot.GET("Project No.", "Plot No.") THEN; //  ServiceOrder.CheckStatus(1);
             END;

    OnDelete=VAR
               PlotSQRecordingLine@1100528600 : Record 11072252;
             BEGIN
               {
               PlotSQRecordingLine.SETRANGE("Project No.", "Project No.");
               PlotSQRecordingLine.SETRANGE("Plot No.", "Plot No.");
               PlotSQRecordingLine.SETRANGE("Seq. No.", "Seq. No.");
               PlotSQRecordingLine.DELETEALL(TRUE);
               }
             END;

    OnRename=BEGIN
               ERROR(Text000, TABLECAPTION);
             END;

    CaptionML=ENU=SQ Recording;
  }
  FIELDS
  {
    { 1   ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   CaptionML=ENU=Project No.;
                                                   NotBlank=Yes }
    { 10  ;   ;Plot No.            ;Code20        ;TableRelation=Plot."Plot No." WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=ENU=Plot No. }
    { 15  ;   ;Seq. No.            ;Integer       ;CaptionML=ENU=Seq. No.;
                                                   Editable=No }
    { 20  ;   ;Recording Date      ;Date          ;CaptionML=ENU=Recording Date }
    { 30  ;   ;Remarks             ;Text50        ;CaptionML=ENU=Remarks }
    { 40  ;   ;Phase               ;Option        ;CaptionML=ENU=Fase;
                                                   OptionCaptionML=ENU=Cold Recording,Warm Recording,Production;
                                                   OptionString=Cold Recording,Warm Recording,Production }
    { 50  ;   ;Status              ;Option        ;CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=Proposal,Offered,Approved,Expired;
                                                   OptionString=Proposal,Offered,Approved,Expired }
  }
  KEYS
  {
    {    ;Project No.,Plot No.,Phase,Recording Date,Seq. No.;
                                                   Clustered=Yes }
    {    ;Project No.,Plot No.,Seq. No.            }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528600 : TextConst 'ENU=Rename %1 is not allowed.';
      Text001@1100528602 : TextConst 'ENU=There are already %1s present, %2 can''t be changed.';
      Text002@1100528601 : TextConst 'ENU=Cost Plus Entries could be incorrect and needs to be changed for the following date(s):\%1';

    PROCEDURE CopyPreviousRecording@1100528704();
    VAR
      PlotSQRecordingLine@1100528200 : Record 11072252;
    BEGIN
      { TODO --> Delta aanpassen ipv totaal
      PlotSQRecordingLine.SETRANGE("Project No.", "Project No.");
      PlotSQRecordingLine.SETRANGE("Plot No.", "Plot No.");
      PlotSQRecordingLine.SETRANGE("Recording Seq. No.", "Seq. No.");
      PlotSQRecordingLine.SETFILTER("Prev. Rec. Date Filter", '<%1', "Recording Date");
      IF PlotSQRecordingLine.FINDSET(TRUE) THEN
        REPEAT
          PlotSQRecordingLine.CALCFIELDS("Previous Recording Quantity");
          PlotSQRecordingLine.VALIDATE("Recording Quantity", PlotSQRecordingLine."Previous Recording Quantity");
          PlotSQRecordingLine.MODIFY(TRUE);
        UNTIL PlotSQRecordingLine.NEXT = 0;
       }
    END;

    PROCEDURE CopyPreviousRecordingLineInPhase@1100528200(VAR PlotSQRecordingLine@1100528201 : Record 11072252);
    VAR
      lPlotSQRecordingLine@1100528200 : Record 11072252;
    BEGIN
      { TODO --> Delta aanpassen ipv totaal
      lPlotSQRecordingLine.COPY(PlotSQRecordingLine);
      lPlotSQRecordingLine.SETCURRENTKEY("Project No.","Plot No.",Type);
      lPlotSQRecordingLine.SETRANGE(Phase, lPlotSQRecordingLine.Phase);
      lPlotSQRecordingLine.SETFILTER(Type, '<%1', lPlotSQRecordingLine.Type);
      IF lPlotSQRecordingLine.FINDLAST THEN BEGIN
        PlotSQRecordingLine.VALIDATE("Recording Quantity", lPlotSQRecordingLine."Recording Quantity");
        PlotSQRecordingLine.MODIFY(TRUE);
      END;
      }
    END;

    BEGIN
    END.
  }
}

