OBJECT Table 11072253 Plot Recording Cross List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               StandDeliveryRec@1210190000 : Record 11012507;
               PlotDeliveryRec@1210190001 : Record 11012507;
               lJobRec@1210190002 : Record 11072003;
               PlotRecordingListBaseLine@1100525000 : Record 11072254;
               Plot@1100525001 : Record 11012500;
             BEGIN
               Source := Source::Mutation;
               IF "Line No." = 0 THEN
                 "Line No." := GetFreeLineNo;

               Plot.RESET;
               Plot.SETRANGE("Project No.", "Project No.");
               IF Plot.FINDSET THEN BEGIN
                 REPEAT
                   PlotRecordingListBaseLine.RESET;
                   PlotRecordingListBaseLine.SETRANGE("Project No.", "Project No.");
                   PlotRecordingListBaseLine.SETRANGE("Plot No.", Plot."Plot No.");
                   PlotRecordingListBaseLine.SETRANGE("House Model", "House Model");
                   PlotRecordingListBaseLine.SETRANGE(Unit, Unit);
                   PlotRecordingListBaseLine.SETRANGE("Line No.", "Line No.");
                   IF PlotRecordingListBaseLine.ISEMPTY THEN BEGIN
                     PlotRecordingListBaseLine.INIT;
                     PlotRecordingListBaseLine.VALIDATE("Project No.", "Project No.");
                     PlotRecordingListBaseLine.VALIDATE("Plot No.", Plot."Plot No.");
                     PlotRecordingListBaseLine.VALIDATE("House Model", "House Model");
                     PlotRecordingListBaseLine.VALIDATE(Unit, Unit);
                     PlotRecordingListBaseLine.VALIDATE("Line No.", "Line No.");
                     PlotRecordingListBaseLine.INSERT(TRUE);
                   END;
                 UNTIL Plot.NEXT = 0;
               END;
             END;

    OnDelete=VAR
               lJobRec@1100485000 : Record 11072003;
               OptionRec@11012000 : Record 11012502;
               ProjDeliveryRec@1210190000 : Record 11012507;
               ProjInstalmRec@1100525000 : Record 11012018;
               PlotRecordingListBaseLine@1100525002 : Record 11072254;
               Plot@1100525001 : Record 11012500;
             BEGIN
               Plot.RESET;
               Plot.SETRANGE("Project No.", "Project No.");
               IF Plot.FINDSET THEN BEGIN
                 REPEAT
                   PlotRecordingListBaseLine.RESET;
                   PlotRecordingListBaseLine.SETRANGE("Project No.", Rec."Project No.");
                   PlotRecordingListBaseLine.SETRANGE("Plot No.", Plot."Plot No.");
                   PlotRecordingListBaseLine.SETRANGE("House Model", Rec."House Model");
                   PlotRecordingListBaseLine.SETRANGE(Unit, Rec.Unit);
                   PlotRecordingListBaseLine.SETRANGE("Line No.", Rec."Line No.");
                   IF NOT PlotRecordingListBaseLine.ISEMPTY THEN BEGIN
                     PlotRecordingListBaseLine.DELETEALL;
                   END;
                 UNTIL Plot.NEXT = 0;
               END;
             END;

    OnRename=VAR
               DocumentLinkMgt@1100525003 : Codeunit 11012401;
               RecRef@1100525000 : RecordRef;
               OldRID@1100525001 : RecordID;
               NewRID@1100525002 : RecordID;
               PlotRecordingListBaseLine@1100525005 : Record 11072254;
               PlotRecordingListBaseLine2@1100525006 : Record 11072254;
               Plot@1100525004 : Record 11012500;
             BEGIN
               Plot.RESET;
               Plot.SETRANGE("Project No.", "Project No.");
               IF Plot.FINDSET THEN BEGIN
                 REPEAT
                   PlotRecordingListBaseLine.RESET;
                   PlotRecordingListBaseLine.SETRANGE("Project No.", xRec."Project No.");
                   PlotRecordingListBaseLine.SETRANGE("Plot No.", Plot."Plot No.");
                   PlotRecordingListBaseLine.SETRANGE("House Model", xRec."House Model");
                   PlotRecordingListBaseLine.SETRANGE(Unit, xRec.Unit);
                   PlotRecordingListBaseLine.SETRANGE("Line No.", xRec."Line No.");
                   IF PlotRecordingListBaseLine.FINDFIRST THEN BEGIN
                     PlotRecordingListBaseLine2.RESET;
                     PlotRecordingListBaseLine2.SETRANGE("Project No.", "Project No.");
                     PlotRecordingListBaseLine2.SETRANGE("Plot No.", Plot."Plot No.");
                     PlotRecordingListBaseLine2.SETRANGE("House Model", "House Model");
                     PlotRecordingListBaseLine2.SETRANGE(Unit, Unit);
                     PlotRecordingListBaseLine2.SETRANGE("Line No.", "Line No.");
                     IF NOT PlotRecordingListBaseLine2.FINDFIRST THEN
                       PlotRecordingListBaseLine.RENAME("Project No.", Plot."Plot No.", "House Model", Unit, "Line No.")
                     ELSE
                       PlotRecordingListBaseLine.DELETE;
                   END;
                 UNTIL Plot.NEXT = 0;
               END;
             END;

    CaptionML=ENU=Plot Recording Cross List;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=ENU=Project No.;
                                                   NotBlank=Yes }
    { 20  ;   ;House Model         ;Code20        ;TableRelation="House Model".Model WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=ENU=House Model }
    { 30  ;   ;Unit                ;Code20        ;TableRelation="Units per House Model".Unit WHERE (Project No.=FIELD(Project No.),
                                                                                                     Model=FIELD(House Model));
                                                   CaptionML=ENU=Unit }
    { 35  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 40  ;   ;Type                ;Option        ;OnValidate=VAR
                                                                Plot@1100528203 : Record 11012500;
                                                                OptionRec@1100528202 : Record 11012502;
                                                                OptionMainGroup@1100528201 : Record 11012509;
                                                                FoundOccurences@1100528200 : Integer;
                                                              BEGIN
                                                                IF Type <> xRec.Type THEN BEGIN
                                                                  CheckModifyAllowed();
                                                                  "Main Group" := '';
                                                                  Group := '';
                                                                  "Sub Group" := '';
                                                                  Code := '';
                                                                  InitData();

                                                                  CASE Type OF
                                                                    Type::Option:
                                                                    BEGIN

                                                                      IF "House Model" <> '' THEN BEGIN
                                                                        OptionMainGroup.SETRANGE("Project No.", "Project No.");
                                                                        CASE OptionMainGroup.COUNT OF
                                                                          0:
                                                                          BEGIN
                                                                          END;
                                                                          1:
                                                                          BEGIN
                                                                            OptionMainGroup.FINDFIRST;
                                                                            VALIDATE("Main Group", OptionMainGroup.Code);
                                                                          END;
                                                                        ELSE
                                                                          BEGIN
                                                                            FoundOccurences := 0;
                                                                            OptionMainGroup.FINDSET(FALSE,FALSE);
                                                                            REPEAT
                                                                              OptionRec.SETRANGE("Project No.", "Project No.");
                                                                              OptionRec.SETFILTER("Plot No.", '=%1', '');
                                                                              OptionRec.SETRANGE("House Model", "House Model");
                                                                              OptionRec.SETRANGE("Main Group", OptionMainGroup.Code);
                                                                              IF NOT OptionRec.ISEMPTY THEN BEGIN
                                                                                FoundOccurences += 1;
                                                                                IF FoundOccurences = 1 THEN
                                                                                  "Main Group" := OptionMainGroup.Code;
                                                                                IF FoundOccurences = 2 THEN
                                                                                  "Main Group" := '';
                                                                              END;
                                                                            UNTIL (OptionMainGroup.NEXT = 0) OR (FoundOccurences = 2);
                                                                            IF "Main Group" <> '' THEN
                                                                              VALIDATE("Main Group");
                                                                          END;
                                                                        END;
                                                                      END;

                                                                    END;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Settlement,Option,Other;
                                                   OptionString=Settlement,Option,Other }
    { 50  ;   ;Main Group          ;Code20        ;TableRelation="Option Main Group".Code WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=VAR
                                                                OptionGroup@1100528202 : Record 11012504;
                                                                OptionRec@1100528201 : Record 11012502;
                                                                FoundOccurences@1100528200 : Integer;
                                                              BEGIN
                                                                IF "Main Group" <> xRec."Main Group" THEN BEGIN
                                                                  CheckModifyAllowed();
                                                                  Group := '';
                                                                  "Sub Group" := '';
                                                                  Code := '';
                                                                  InitData();

                                                                  IF "Main Group" <> '' THEN BEGIN
                                                                    OptionGroup.SETRANGE("Project No.", "Project No.");
                                                                    CASE OptionGroup.COUNT OF
                                                                      0:
                                                                      BEGIN
                                                                      END;
                                                                      1:
                                                                      BEGIN
                                                                        OptionGroup.FINDFIRST;
                                                                        VALIDATE(Group, OptionGroup.Code);
                                                                      END;
                                                                    ELSE
                                                                      BEGIN
                                                                        FoundOccurences := 0;
                                                                        OptionGroup.FINDSET(FALSE,FALSE);
                                                                        REPEAT
                                                                          OptionRec.SETRANGE("Project No.", "Project No.");
                                                                          OptionRec.SETFILTER("Plot No.", '=%1', '');
                                                                          OptionRec.SETRANGE("House Model", "House Model");
                                                                          OptionRec.SETRANGE("Main Group", "Main Group" );
                                                                          OptionRec.SETRANGE(Group, OptionGroup.Code);
                                                                          IF NOT OptionRec.ISEMPTY THEN BEGIN
                                                                            FoundOccurences += 1;
                                                                            IF FoundOccurences = 1 THEN
                                                                              Group := OptionGroup.Code;
                                                                            IF FoundOccurences = 2 THEN
                                                                              Group := '';
                                                                          END;
                                                                        UNTIL (OptionGroup.NEXT = 0) OR (FoundOccurences = 2);
                                                                        IF Group <> '' THEN
                                                                          VALIDATE(Group);
                                                                      END;
                                                                    END;
                                                                  END;

                                                                END;
                                                              END;

                                                   CaptionML=ENU=Main Group }
    { 60  ;   ;Group               ;Code20        ;TableRelation="Option Group".Code WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=VAR
                                                                OptionSubGroup@1100528202 : Record 11012505;
                                                                OptionRec@1100528201 : Record 11012502;
                                                                FoundOccurences@1100528200 : Integer;
                                                              BEGIN
                                                                IF Group <> xRec.Group THEN BEGIN
                                                                  CheckModifyAllowed();
                                                                  "Sub Group" := '';
                                                                  Code := '';
                                                                  InitData();

                                                                  IF Group <> '' THEN BEGIN
                                                                    OptionSubGroup.SETRANGE("Project No.", "Project No.");

                                                                    CASE OptionSubGroup.COUNT OF
                                                                      0:
                                                                      BEGIN
                                                                      END;
                                                                      1:
                                                                      BEGIN
                                                                        OptionSubGroup.FINDFIRST;
                                                                        VALIDATE("Sub Group", OptionSubGroup.Code);
                                                                      END;
                                                                    ELSE
                                                                      BEGIN
                                                                        FoundOccurences := 0;
                                                                        OptionSubGroup.FINDSET(FALSE,FALSE);
                                                                        REPEAT
                                                                          OptionRec.SETRANGE("Project No.", "Project No.");
                                                                          OptionRec.SETFILTER("Plot No.", '=%1', '');
                                                                          OptionRec.SETRANGE("House Model", "House Model");
                                                                          OptionRec.SETRANGE("Main Group", "Main Group" );
                                                                          OptionRec.SETRANGE(Group, Group );
                                                                          OptionRec.SETRANGE("Sub Group", OptionSubGroup.Code);
                                                                          IF NOT OptionRec.ISEMPTY THEN BEGIN
                                                                            FoundOccurences += 1;
                                                                            IF FoundOccurences = 1 THEN
                                                                              "Sub Group" := OptionSubGroup.Code;
                                                                            IF FoundOccurences = 2 THEN
                                                                              "Sub Group" := '';
                                                                          END;
                                                                        UNTIL (OptionSubGroup.NEXT = 0) OR (FoundOccurences = 2);
                                                                        IF "Sub Group" <> '' THEN
                                                                          VALIDATE("Sub Group");

                                                                      END;
                                                                    END;
                                                                  END;

                                                                END;
                                                              END;

                                                   CaptionML=ENU=Group }
    { 70  ;   ;Sub Group           ;Code20        ;TableRelation="Option Sub Group".Code WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=BEGIN
                                                                IF "Sub Group" <> xRec."Sub Group" THEN BEGIN
                                                                  CheckModifyAllowed();
                                                                  Code := '';
                                                                  InitData();
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Sub Group }
    { 80  ;   ;Code                ;Code20        ;TableRelation=IF (Type=CONST(Settlement)) "Settlement Quantity".Code WHERE (Project No.=FIELD(Project No.))
                                                                 ELSE IF (Type=CONST(Option)) Option.Option WHERE (Project No.=FIELD(Project No.),
                                                                                                                   Main Group=FIELD(Main Group),
                                                                                                                   Group=FIELD(Group),
                                                                                                                   Sub Group=FIELD(Sub Group),
                                                                                                                   Plot No.=FILTER(''));
                                                   OnValidate=BEGIN
                                                                CheckModifyAllowed();
                                                                InitData();
                                                                IF Type = Type::Settlement THEN
                                                                  CALCFIELDS("Settlement Type");
                                                              END;

                                                   OnLookup=VAR
                                                              lvCode@1100528200 : Code[20];
                                                            BEGIN
                                                              lvCode := Code;
                                                              IF Type = Type::Option THEN
                                                                LookupOption("Project No.","House Model","Main Group",Group,"Sub Group",lvCode)
                                                              ELSE
                                                                LookupSettlQuanCode("Project No.", "House Model", lvCode);

                                                              IF lvCode <> Code THEN
                                                                VALIDATE(Code, lvCode);
                                                            END;

                                                   CaptionML=ENU=Code }
    { 100 ;   ;Description         ;Text100       ;CaptionML=ENU=Description;
                                                   Editable=No }
    { 110 ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure".Code;
                                                   CaptionML=ENU=Unit of Measure;
                                                   Editable=No }
    { 120 ;   ;Settlement Price    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Settlement Quantity"."Settlement Price" WHERE (Project No.=FIELD(Project No.),
                                                                                                                      House Model=FIELD(House Model),
                                                                                                                      Code=FIELD(Code)));
                                                   CaptionML=ENU=Settlement Price;
                                                   Editable=No }
    { 130 ;   ;Settlement Type     ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Settlement Quantity".Type WHERE (Project No.=FIELD(Project No.),
                                                                                                        House Model=FIELD(House Model),
                                                                                                        Code=FIELD(Code)));
                                                   TableRelation="Settlement Quantity Type";
                                                   CaptionML=ENU=Settlement Type;
                                                   Editable=No }
    { 140 ;   ;Option Price        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Option."Offered Amount" WHERE (Project No.=FIELD(Project No.),
                                                                                                     Plot No.=FILTER(''),
                                                                                                     House Model=FIELD(House Model),
                                                                                                     Main Group=FIELD(Main Group),
                                                                                                     Group=FIELD(Group),
                                                                                                     Sub Group=FIELD(Sub Group),
                                                                                                     Option=FIELD(Code)));
                                                   CaptionML=ENU=Option Price;
                                                   Editable=No }
    { 150 ;   ;Price               ;Decimal        }
    { 200 ;   ;Quantity            ;Decimal       ;FieldClass=Normal;
                                                   OnValidate=VAR
                                                                OptionRec@1100528200 : Record 11012502;
                                                                SettlementQuantity@1100528201 : Record 11072243;
                                                              BEGIN
                                                              END;

                                                   CaptionML=ENU=Quantity Cold Recording }
    { 210 ;   ;Total Quantity 1    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plot SQ Recording Line"."Delta Recording Quantity" WHERE (Project No.=FIELD(Project No.),
                                                                                                                              House Model=FIELD(House Model),
                                                                                                                              Unit=FIELD(Unit),
                                                                                                                              Line No.=FIELD(Line No.),
                                                                                                                              Phase=FILTER(Cold Recording),
                                                                                                                              Recording Date=FIELD(Date Filter),
                                                                                                                              Plot No.=FIELD(Plot Filter)));
                                                   CaptionML=ENU=Quantity }
    { 220 ;   ;Total Quantity 2    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plot SQ Recording Line"."Delta Recording Quantity" WHERE (Project No.=FIELD(Project No.),
                                                                                                                              House Model=FIELD(House Model),
                                                                                                                              Unit=FIELD(Unit),
                                                                                                                              Line No.=FIELD(Line No.),
                                                                                                                              Phase=FILTER(Warm Recording|Cold Recording),
                                                                                                                              Recording Date=FIELD(Date Filter),
                                                                                                                              Plot No.=FIELD(Plot Filter)));
                                                   CaptionML=ENU=Quantity }
    { 230 ;   ;Total Quantity 3    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plot SQ Recording Line"."Delta Recording Quantity" WHERE (Project No.=FIELD(Project No.),
                                                                                                                              House Model=FIELD(House Model),
                                                                                                                              Unit=FIELD(Unit),
                                                                                                                              Line No.=FIELD(Line No.),
                                                                                                                              Phase=FILTER(Cold Recording|Warm Recording|Production),
                                                                                                                              Prev. Date Filter=FIELD(Date Filter),
                                                                                                                              Plot No.=FIELD(Plot Filter)));
                                                   CaptionML=ENU=Quantity }
    { 410 ;   ;Source              ;Option        ;CaptionML=ENU=Source;
                                                   OptionCaptionML=ENU=" ,Template,Mutation";
                                                   OptionString=[ ,Template,Mutation] }
    { 500 ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Date Filter;
                                                   Editable=No }
    { 510 ;   ;Line In Use         ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Plot SQ Recording Line" WHERE (Project No.=FIELD(Project No.),
                                                                                                     House Model=FIELD(House Model),
                                                                                                     Unit=FIELD(Unit),
                                                                                                     Line No.=FIELD(Line No.)));
                                                   OnValidate=VAR
                                                                OptionRec@1100528200 : Record 11012502;
                                                                SettlementQuantity@1100528201 : Record 11072243;
                                                              BEGIN
                                                              END;

                                                   CaptionML=ENU=Line In Use }
    { 520 ;   ;Plot Filter         ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Plot;
                                                   CaptionML=ENU=Plot Filter }
  }
  KEYS
  {
    {    ;Project No.,House Model,Unit,Line No.    }
    {    ;Project No.,House Model,Unit,Type,Main Group,Group,Sub Group,Code,Line No.;
                                                   Clustered=Yes }
    {    ;Project No.,House Model,Type,Main Group,Group,Sub Group,Code,Unit,Line No. }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ProjSetup@1100485001 : Record 315;
      ModelRec@11012000 : Record 11012501;
      PostCode@11012001 : Record 225;
      ProjRec@1100485000 : Record 11072003;
      DeleteCompleteProject@1100525001 : Boolean;

    PROCEDURE CheckModifyAllowed@1100528202();
    BEGIN
      //TESTFIELD("Quantity 3",0);
      //TESTFIELD(Status, Status::"Not Started");
    END;

    PROCEDURE InitData@1100528203();
    BEGIN
      //Description := '';
      //Status := Status::"Not Started";
      //"Total Amount 1" := 0;
      //"Total Amount 2" := 0;
      //"Total Amount 3" := 0;
      IF Code <> '' THEN
        GetDataFromCode();
    END;

    PROCEDURE GetDataFromCode@1100528204();
    VAR
      OptionRec@1100528200 : Record 11012502;
      SettlementQuantity@1100528201 : Record 11072243;
    BEGIN
      CASE Type OF
        Type::Option:
        BEGIN
          OptionRec.GET("Project No.", '', "House Model", "Main Group", Group, "Sub Group", Code);
          Description := OptionRec.Description;
        END;
        Type::Settlement:
        BEGIN
          SettlementQuantity.GET("Project No.", "House Model", Code);
          Description := SettlementQuantity.Description;
          "Unit of Measure" := SettlementQuantity."Unit of Measure";
        END;
      END;
    END;

    PROCEDURE LookupOption@1210190005(IProjectNo@1210190000 : Code[20];IHouseModelFilter@1210190001 : Code[20];IMainGroupFilter@1210190002 : Code[20];IGroupFilter@1210190003 : Code[20];ISubGroupFilter@1210190004 : Code[20];VAR IOOptionFilter@1210190005 : Code[20]);
    VAR
      OptionRec@1100528200 : Record 11012502;
    BEGIN
      WITH OptionRec DO BEGIN
        RESET;
        IF IProjectNo <> '' THEN
          SETRANGE("Project No.", IProjectNo)
         ELSE
          EXIT;
        SETRANGE("Plot No.", '');
        IF IHouseModelFilter <> '' THEN
          SETRANGE("House Model", IHouseModelFilter);
        IF IMainGroupFilter <> '' THEN
          SETRANGE("Main Group", IMainGroupFilter);
        IF IGroupFilter <> '' THEN
          SETRANGE(Group, IGroupFilter);
        IF ISubGroupFilter <> '' THEN
          SETRANGE("Sub Group", ISubGroupFilter);
        IF IOOptionFilter <> '' THEN BEGIN
          SETRANGE(Option, IOOptionFilter);
          IF FINDSET(FALSE, FALSE) THEN;
          SETRANGE(Option);
        END;
        IF PAGE.RUNMODAL(PAGE::"Project Option List",OptionRec) = ACTION::LookupOK THEN
          IOOptionFilter := OptionRec.Option;
      END;
    END;

    PROCEDURE LookupSettlQuanCode@1100528206(IProjectNo@1210190000 : Code[20];IHouseModelFilter@1100528201 : Code[20];VAR IOSettlQuanCodeFilter@1210190005 : Code[20]);
    VAR
      SettlementQuantity@1100528200 : Record 11072243;
    BEGIN
      WITH SettlementQuantity DO BEGIN
        RESET;
        IF IProjectNo <> '' THEN
          SETRANGE("Project No.", IProjectNo)
         ELSE
          EXIT;

        IF IHouseModelFilter <> '' THEN
          SETRANGE("House Model", IHouseModelFilter);

        IF IOSettlQuanCodeFilter <> '' THEN BEGIN
          SETRANGE(Code, IOSettlQuanCodeFilter);
          IF FINDSET(FALSE, FALSE) THEN;
          SETRANGE(Code);
        END;
        IF PAGE.RUNMODAL(PAGE::"Settlement Quantity List",SettlementQuantity) = ACTION::LookupOK THEN
          IOSettlQuanCodeFilter := SettlementQuantity.Code;
      END;
    END;

    PROCEDURE UpdateColdRecordingQuantity@1100528205(DateFilter@1100528203 : Date);
    VAR
      Plot@1100528200 : Record 11012500;
      PlotSQRecording@1100528201 : Record 11072251;
      PlotSQRecordingLine@1100528202 : Record 11072252;
    BEGIN
      Plot.SETRANGE("Project No.", "Project No.");
      Plot.SETRANGE("House Model", "House Model");
      IF Plot.FINDSET THEN
        REPEAT
          PlotSQRecording.SETRANGE("Project No.", Plot."Project No.");
          PlotSQRecording.SETRANGE("Plot No.", Plot."Plot No.");
          PlotSQRecording.SETRANGE(Phase, PlotSQRecording.Phase::"Cold Recording");
          PlotSQRecording.SETRANGE("Recording Date", 0D, DateFilter);
          IF PlotSQRecording.FINDLAST THEN BEGIN
            PlotSQRecordingLine.SETRANGE("Project No.", PlotSQRecording."Project No.");
            PlotSQRecordingLine.SETRANGE("Plot No.", PlotSQRecording."Plot No.");
            PlotSQRecordingLine.SETRANGE("Recording Seq. No.", PlotSQRecording."Seq. No.");
            PlotSQRecordingLine.SETRANGE("House Model", "House Model");
            PlotSQRecordingLine.SETRANGE(Unit, Unit);
            PlotSQRecordingLine.SETRANGE("Line No.", "Line No.");

            //PlotSQRecordingLine.SETRANGE(Type, Type);
            //PlotSQRecordingLine.SETRANGE("Main Group", "Main Group");
            //PlotSQRecordingLine.SETRANGE(Group, Group);
            //PlotSQRecordingLine.SETRANGE("Sub Group", "Sub Group");
            //PlotSQRecordingLine.SETRANGE(Code, Code);
            //PlotSQRecordingLine.SETRANGE("Recording Date",PlotSQRecording."Recording Date");

            IF PlotSQRecordingLine.FINDSET(TRUE,FALSE) THEN BEGIN    //Is one line only
              PlotSQRecordingLine.CALCFIELDS("Cold Recording Quantity");
              IF PlotSQRecordingLine."Cold Recording Quantity" <> Rec.Quantity THEN
                PlotSQRecordingLine.VALIDATE("Delta Recording Quantity", PlotSQRecordingLine."Delta Recording Quantity" + Rec.Quantity - PlotSQRecordingLine."Cold Recording Quantity");
              PlotSQRecordingLine.MODIFY(TRUE);
            END ELSE BEGIN
              PlotSQRecordingLine.INIT;
              PlotSQRecordingLine."Project No." := Plot."Project No.";
              PlotSQRecordingLine."Plot No." := Plot."Plot No.";
              PlotSQRecordingLine."Recording Seq. No." := PlotSQRecording."Seq. No.";
              PlotSQRecordingLine."House Model" := "House Model";
              PlotSQRecordingLine.Unit := Unit;
              PlotSQRecordingLine."Line No." := "Line No.";
              PlotSQRecordingLine.Type := Type;
              PlotSQRecordingLine."Main Group" := "Main Group";
              PlotSQRecordingLine.Group := Group;
              PlotSQRecordingLine."Sub Group" := "Sub Group";
              PlotSQRecordingLine.Code := Code;
              PlotSQRecordingLine."Recording Date" := PlotSQRecording."Recording Date";
              //PlotSQRecordingLine.VALIDATE("Delta Recording Quantity", Quantity);
              PlotSQRecordingLine.INSERT(TRUE);
              PlotSQRecordingLine.CALCFIELDS("Cold Recording Quantity");
              IF PlotSQRecordingLine."Cold Recording Quantity" <> Quantity THEN
                PlotSQRecordingLine.VALIDATE("Delta Recording Quantity", PlotSQRecordingLine."Delta Recording Quantity" + Quantity - PlotSQRecordingLine."Cold Recording Quantity");
              PlotSQRecordingLine.MODIFY(TRUE);
            END;
          END ELSE BEGIN;
            PlotSQRecording.INIT;
            PlotSQRecording.VALIDATE("Project No.", Plot."Project No.");
            PlotSQRecording.VALIDATE("Plot No.", Plot."Plot No.");
            PlotSQRecording."Seq. No." := 0; //numbering will be handled in OnInsert
            PlotSQRecording.VALIDATE("Recording Date", DateFilter);
            PlotSQRecording.TESTFIELD("Recording Date");
            PlotSQRecording.VALIDATE(Phase, PlotSQRecording.Phase::"Cold Recording");
            PlotSQRecording.INSERT(TRUE);

            PlotSQRecordingLine.INIT;
            PlotSQRecordingLine."Project No." := Plot."Project No.";
            PlotSQRecordingLine."Plot No." := Plot."Plot No.";
            PlotSQRecordingLine."Recording Seq. No." := PlotSQRecording."Seq. No.";
            PlotSQRecordingLine."House Model" := "House Model";
            PlotSQRecordingLine.Unit := Unit;
            PlotSQRecordingLine."Line No." := "Line No.";
            PlotSQRecordingLine.Type := Type;
            PlotSQRecordingLine."Main Group" := "Main Group";
            PlotSQRecordingLine.Group := Group;
            PlotSQRecordingLine."Sub Group" := "Sub Group";
            PlotSQRecordingLine.Code := Code;
            PlotSQRecordingLine."Recording Date" := PlotSQRecording."Recording Date";
            PlotSQRecordingLine.VALIDATE("Delta Recording Quantity", Quantity);
            PlotSQRecordingLine.INSERT(TRUE);
            //PlotSQRecordingLine.CALCFIELDS("Cold Recording Quantity");
            IF PlotSQRecordingLine."Cold Recording Quantity" <> Quantity THEN
              PlotSQRecordingLine.VALIDATE("Delta Recording Quantity", PlotSQRecordingLine."Delta Recording Quantity" + Quantity - PlotSQRecordingLine."Cold Recording Quantity");
            PlotSQRecordingLine.MODIFY(TRUE);

          END;
        UNTIL Plot.NEXT = 0;
    END;

    PROCEDURE UpdateColdRecordingQuantity2@1100528200(TotalQuantity@1100528203 : Decimal;DateFilter@1100528206 : Date);
    VAR
      Plot@1100528200 : Record 11012500;
      PlotSQRecording@1100528201 : Record 11072251;
      PlotSQRecordingLine@1100528202 : Record 11072252;
      Occurrences@1100528204 : Integer;
      LineQuantity@1100528205 : Decimal;
    BEGIN
      Plot.SETRANGE("Project No.", "Project No.");
      Plot.SETRANGE("House Model", "House Model" );
      Occurrences := Plot.COUNT;
      IF Occurrences = 0 THEN
        EXIT;

      LineQuantity := ROUND(TotalQuantity/Occurrences);

      IF Plot.FINDSET THEN
        REPEAT
          PlotSQRecording.SETRANGE("Project No.", Plot."Project No.");
          PlotSQRecording.SETRANGE("Plot No.", Plot."Plot No.");
          PlotSQRecording.SETRANGE(Phase, PlotSQRecording.Phase::"Cold Recording");
          PlotSQRecording.SETRANGE("Recording Date", 0D, DateFilter);
          IF PlotSQRecording.FINDLAST THEN BEGIN
            PlotSQRecordingLine.SETRANGE("Project No.", PlotSQRecording."Project No.");
            PlotSQRecordingLine.SETRANGE("Plot No.", PlotSQRecording."Plot No.");
            PlotSQRecordingLine.SETRANGE("Recording Seq. No.", PlotSQRecording."Seq. No.");
            PlotSQRecordingLine.SETRANGE("House Model", "House Model");
            PlotSQRecordingLine.SETRANGE(Unit, Unit);
            PlotSQRecordingLine.SETRANGE("Line No.", "Line No.");
            //PlotSQRecordingLine.SETRANGE(Type, Type);
            //PlotSQRecordingLine.SETRANGE("Main Group", "Main Group");
            //PlotSQRecordingLine.SETRANGE(Group, Group);
            //PlotSQRecordingLine.SETRANGE("Sub Group", "Sub Group");
            //PlotSQRecordingLine.SETRANGE(Code, Code);
            //PlotSQRecordingLine.SETRANGE("Recording Date",PlotSQRecording."Recording Date");
            IF PlotSQRecordingLine.FINDSET(TRUE,FALSE) THEN BEGIN    //Is one line only
              //PlotSQRecordingLine.VALIDATE("Delta Recording Quantity", Quantity);
              PlotSQRecordingLine.CALCFIELDS("Cold Recording Quantity");
              IF PlotSQRecordingLine."Cold Recording Quantity" <> LineQuantity THEN
                PlotSQRecordingLine.VALIDATE("Delta Recording Quantity", PlotSQRecordingLine."Delta Recording Quantity" +LineQuantity - PlotSQRecordingLine."Cold Recording Quantity");
              PlotSQRecordingLine.MODIFY(TRUE);
            END ELSE BEGIN
              PlotSQRecordingLine.INIT;
              PlotSQRecordingLine."Project No." := Plot."Project No.";
              PlotSQRecordingLine."Plot No." := Plot."Plot No.";
              PlotSQRecordingLine."Recording Seq. No." := PlotSQRecording."Seq. No.";
              PlotSQRecordingLine."House Model" := "House Model";
              PlotSQRecordingLine.Unit := Unit;
              PlotSQRecordingLine."Line No." := "Line No.";
              PlotSQRecordingLine.Type := Type;
              PlotSQRecordingLine."Main Group" := "Main Group";
              PlotSQRecordingLine.Group := Group;
              PlotSQRecordingLine."Sub Group" := "Sub Group";
              PlotSQRecordingLine.Code := Code;
              PlotSQRecordingLine."Recording Date" := PlotSQRecording."Recording Date";
      //        PlotSQRecordingLine.VALIDATE("Delta Recording Quantity", LineQuantity);
              PlotSQRecordingLine.INSERT(TRUE);
              PlotSQRecordingLine.CALCFIELDS("Cold Recording Quantity");
              IF PlotSQRecordingLine."Cold Recording Quantity" <> LineQuantity THEN
                PlotSQRecordingLine.VALIDATE("Delta Recording Quantity", PlotSQRecordingLine."Delta Recording Quantity" +LineQuantity - PlotSQRecordingLine."Cold Recording Quantity");
              PlotSQRecordingLine.MODIFY(TRUE);

            END;
          END ELSE BEGIN;
            PlotSQRecording.INIT;
            PlotSQRecording.VALIDATE("Project No.", Plot."Project No.");
            PlotSQRecording.VALIDATE("Plot No.", Plot."Plot No.");
            PlotSQRecording."Seq. No." := 0; //numbering will be handled in OnInsert
            PlotSQRecording.VALIDATE("Recording Date", DateFilter);
            PlotSQRecording.TESTFIELD("Recording Date");
            PlotSQRecording.VALIDATE(Phase, PlotSQRecording.Phase::"Cold Recording");
            PlotSQRecording.INSERT(TRUE);

            PlotSQRecordingLine.INIT;
            PlotSQRecordingLine."Project No." := Plot."Project No.";
            PlotSQRecordingLine."Plot No." := Plot."Plot No.";
            PlotSQRecordingLine."Recording Seq. No." := PlotSQRecording."Seq. No.";
            PlotSQRecordingLine."House Model" := "House Model";
            PlotSQRecordingLine.Unit := Unit;
            PlotSQRecordingLine."Line No." := "Line No.";
            PlotSQRecordingLine.Type := Type;
            PlotSQRecordingLine."Main Group" := "Main Group";
            PlotSQRecordingLine.Group := Group;
            PlotSQRecordingLine."Sub Group" := "Sub Group";
            PlotSQRecordingLine.Code := Code;
            PlotSQRecordingLine."Recording Date" := PlotSQRecording."Recording Date";
      //      PlotSQRecordingLine.VALIDATE("Delta Recording Quantity", LineQuantity);
            PlotSQRecordingLine.INSERT(TRUE);
            PlotSQRecordingLine.CALCFIELDS("Cold Recording Quantity");
            IF PlotSQRecordingLine."Cold Recording Quantity" <> LineQuantity THEN
              PlotSQRecordingLine.VALIDATE("Delta Recording Quantity", PlotSQRecordingLine."Delta Recording Quantity" +LineQuantity - PlotSQRecordingLine."Cold Recording Quantity");
            PlotSQRecordingLine.MODIFY(TRUE);

          END;
        UNTIL Plot.NEXT = 0;
    END;

    PROCEDURE GetFreeLineNo@1100525000() NewLine : Integer;
    VAR
      PlotRecordingCrossList@1100525000 : Record 11072253;
    BEGIN
      NewLine := 0;

      PlotRecordingCrossList.RESET;
      PlotRecordingCrossList.SETCURRENTKEY("Project No.","House Model",Unit,"Line No.");
      PlotRecordingCrossList.SETRANGE("Project No.", "Project No.");
      PlotRecordingCrossList.SETRANGE("House Model", "House Model");
      PlotRecordingCrossList.SETFILTER(Unit,Unit);
      IF PlotRecordingCrossList.FINDLAST THEN
        NewLine := PlotRecordingCrossList."Line No." + 10000
      ELSE
        NewLine := 10000;
    END;

    BEGIN
    END.
  }
}

