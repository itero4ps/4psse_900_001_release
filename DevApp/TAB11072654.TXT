OBJECT Table 11072654 Invoice Line SiB
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnDelete=VAR
               lvInvMessRec@1100525000 : Record 11072655;
             BEGIN
               lvInvMessRec.SETRANGE("Invoice No.", "Invoice No.");
               lvInvMessRec.SETRANGE("Invoice Line No.", "Line No.");
               lvInvMessRec.DELETEALL;
             END;

    CaptionML=ENU=External Invoice Line;
  }
  FIELDS
  {
    { 10  ;   ;Invoice No.         ;Code20        ;TableRelation="Invoice SiB";
                                                   CaptionML=ENU=Invoice No.;
                                                   Editable=No }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No.;
                                                   Editable=No }
    { 25  ;   ;External Line No.   ;Integer       ;CaptionML=ENU=External Line No.;
                                                   Editable=No }
    { 30  ;   ;Reference Buyer     ;Text30        ;CaptionML=ENU=Reference Buyer;
                                                   Editable=No }
    { 40  ;   ;Order No. Buyer     ;Text30        ;CaptionML=ENU=Order No. Buyer;
                                                   Editable=No }
    { 41  ;   ;Order Line No. Buyer;Integer       ;CaptionML=ENU=Order Line No. Buyer.;
                                                   Editable=No }
    { 50  ;   ;Project No.         ;Code20        ;TableRelation=Job.No.;
                                                   OnValidate=VAR
                                                                ProjRec@1210190000 : Record 11072003;
                                                              BEGIN
                                                                IF "Project No." <> '' THEN BEGIN
                                                                  TESTFIELD("Service Order No.", '');
                                                                  TESTFIELD("Plant Type", '');  //db, 04-02-14: T004213
                                                                  TESTFIELD("G/L Account", '');
                                                                  ProjRec.GET("Project No.");
                                                                  ProjRec.CheckProjectStatus(2);
                                                                  Department := ProjRec."Global Dimension 1 Code";
                                                                END ELSE BEGIN
                                                                  Element := '';
                                                                END;
                                                                CALCFIELDS("Project Description");
                                                              END;

                                                   CaptionML=ENU=Project No. }
    { 51  ;   ;Project Description ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=ENU=Project Description;
                                                   Editable=No }
    { 60  ;   ;Correction on Invoice;Code20       ;CaptionML=ENU=Correction on Invoice;
                                                   Editable=No }
    { 61  ;   ;Corr. on Invoice Line No.;Integer  ;CaptionML=ENU=Corr. on Invoice Line No.;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 70  ;   ;Dispatch Note No.   ;Code20        ;TableRelation="Dispatch Note SiB";
                                                   CaptionML=ENU=Dispatch Note No.;
                                                   Editable=No }
    { 71  ;   ;Dispatch Note Line No.;Integer     ;TableRelation="Dispatch Note Line SiB"."Line No." WHERE (Dispatch Note No.=FIELD(Dispatch Note No.),
                                                                                                            Item No. Vendor=FIELD(Item No. Vendor),
                                                                                                            GTIN Item=FIELD(GTIN Item));
                                                   OnValidate=VAR
                                                                lvDispatchNoteLineRec@1100525000 : Record 11072652;
                                                              BEGIN
                                                                IF "Dispatch Note Line No." <> 0 THEN BEGIN
                                                                  lvDispatchNoteLineRec.GET("Dispatch Note No.", "Dispatch Note Line No.");
                                                                  IF (lvDispatchNoteLineRec."Delivered Quantity" <> "Delivered Quantity") OR
                                                                     (lvDispatchNoteLineRec."Unit of Measure Code" <> "Unit Code Delivered Quantity")
                                                                  THEN BEGIN
                                                                    IF NOT CONFIRM(Text002, FALSE,
                                                                      "Delivered Quantity", "Unit Code Delivered Quantity",
                                                                      lvDispatchNoteLineRec."Delivered Quantity", lvDispatchNoteLineRec."Unit of Measure Code")
                                                                    THEN
                                                                      ERROR('');
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Dispatch Note Line No.;
                                                   BlankZero=Yes }
    { 80  ;   ;Delivery Date       ;Date          ;CaptionML=ENU=Delivery Date;
                                                   Editable=No }
    { 82  ;   ;Delivered Quantity  ;Decimal       ;CaptionML=ENU=Delivered Quantity;
                                                   Editable=No }
    { 83  ;   ;Unit Code Delivered Quantity;Code10;CaptionML=ENU=Unit Code Delivered Quantity;
                                                   Editable=No }
    { 85  ;   ;Approved Quantity   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Dispatch Note Line SiB"."Approved Quantity" WHERE (Dispatch Note No.=FIELD(Dispatch Note No.),
                                                                                                                          Line No.=FIELD(Dispatch Note Line No.)));
                                                   CaptionML=ENU=Approved Quantity;
                                                   Editable=No }
    { 86  ;   ;Unit Code Approved Quantity;Code10 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Dispatch Note Line SiB"."Unit of Measure Code" WHERE (Dispatch Note No.=FIELD(Dispatch Note No.),
                                                                                                                             Line No.=FIELD(Dispatch Note Line No.)));
                                                   CaptionML=ENU=Unit Code Approved Quantity;
                                                   Editable=No }
    { 100 ;   ;Item No. Vendor     ;Code20        ;CaptionML=ENU=Item No. Vendor;
                                                   Editable=No }
    { 110 ;   ;GTIN Item           ;Code20        ;CaptionML=ENU=GTIN Item;
                                                   Editable=No }
    { 120 ;   ;Description         ;Text100       ;CaptionML=ENU=Description;
                                                   Editable=No }
    { 130 ;   ;Invoiced Quantity   ;Decimal       ;CaptionML=ENU=Invoiced Quantity;
                                                   Editable=No }
    { 135 ;   ;Unit of Measure Code;Code10        ;CaptionML=ENU=Unit of Measure Code;
                                                   Editable=No }
    { 140 ;   ;Price Base Quantity ;Decimal       ;CaptionML=ENU=Price Base Quantity;
                                                   Editable=No }
    { 145 ;   ;Price Base Unit Code;Code10        ;CaptionML=ENU=Price Base Unit Code;
                                                   Editable=No }
    { 150 ;   ;Price               ;Decimal       ;CaptionML=ENU=Price;
                                                   Description=format type 2;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 160 ;   ;Discount/Surcharge %;Decimal       ;CaptionML=ENU=Discount/Surcharge %;
                                                   Editable=No }
    { 165 ;   ;Discount/Surcharge Amount;Decimal  ;CaptionML=ENU=Discount/Surcharge Amount;
                                                   Editable=No }
    { 167 ;   ;Discount/Surcharge Type;Option     ;CaptionML=ENU=Discount/Surcharge Type;
                                                   OptionCaptionML=ENU=Discount,Surcharge;
                                                   OptionString=Discount,Surcharge;
                                                   Editable=No }
    { 168 ;   ;Discount/Surcharge Code;Code20     ;CaptionML=ENU=Discount/Surcharge Code;
                                                   Editable=No }
    { 170 ;   ;Nett Line Amount    ;Decimal       ;CaptionML=ENU=Nett Line Amount;
                                                   Description=[Amt. excl. VAT; format type 1];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 180 ;   ;VAT Rate Type       ;Code20        ;CaptionML=ENU=VAT Rate Type;
                                                   Editable=No }
    { 185 ;   ;VAT %               ;Decimal       ;CaptionML=ENU=VAT %;
                                                   Editable=No }
    { 900 ;   ;Cost Object         ;Code20        ;TableRelation=IF (Item No. Vendor=FILTER(<>'')) "Dimension Value".Code WHERE (Cost Type=FILTER(Material),
                                                                                                                                 Global Dimension No.=CONST(2))
                                                                                                                                 ELSE IF (GTIN Item=FILTER(<>'')) "Dimension Value".Code WHERE (Cost Type=FILTER(Material),
                                                                                                                                                                                                Global Dimension No.=CONST(2))
                                                                                                                                                                                                ELSE "Dimension Value".Code WHERE (Cost Type=FILTER(<Revenue));
                                                   CaptionML=ENU=Cost Object }
    { 910 ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   OnValidate=BEGIN
                                                                IF "VAT Bus. Posting Group" = '' THEN
                                                                  "VAT Prod. Posting Group" := ''
                                                                ELSE
                                                                  VALIDATE("VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=ENU=VAT Bus. Posting Group }
    { 915 ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   OnValidate=VAR
                                                                lvInvoiceRec@1100525000 : Record 11072653;
                                                                lvVATPostingSetupRec@1100525001 : Record 325;
                                                              BEGIN
                                                                IF "VAT Prod. Posting Group" <> '' THEN BEGIN
                                                                  IF "VAT Bus. Posting Group" = '' THEN BEGIN
                                                                    IF lvInvoiceRec.GET("Invoice No.") THEN
                                                                      "VAT Bus. Posting Group" := lvInvoiceRec."VAT Bus. Posting Group";
                                                                  END;
                                                                  lvVATPostingSetupRec.GET("VAT Bus. Posting Group", "VAT Prod. Posting Group");
                                                                  IF lvVATPostingSetupRec."VAT %" <> "VAT %" THEN BEGIN
                                                                    IF NOT CONFIRM(Text001, FALSE, FIELDCAPTION("VAT %"), lvVATPostingSetupRec."VAT %", "VAT %", '%') THEN
                                                                      ERROR('');
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=VAT Prod. Posting Group }
    { 920 ;   ;Element             ;Code20        ;TableRelation="Project Element".Element WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=VAR
                                                                ElementFormat@1210190000 : Codeunit 11012022;
                                                              BEGIN
                                                                IF Element <> '' THEN BEGIN
                                                                  ElementFormat.FormatElem(Element,2,'');
                                                                  TESTFIELD("Project No.");
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Element }
    { 930 ;   ;Service Order No.   ;Code20        ;TableRelation="Service Order";
                                                   OnValidate=VAR
                                                                ServOrderRec@1210190000 : Record 11012823;
                                                              BEGIN
                                                                IF "Service Order No." <> '' THEN BEGIN
                                                                  TESTFIELD("Project No.", '');
                                                                  TESTFIELD("Plant Type", '');  //db, 04-02-14: T004213
                                                                  TESTFIELD("G/L Account", '');
                                                                  ServOrderRec.GET("Service Order No.");
                                                                  ServOrderRec.CheckStatus(2);
                                                                  Department := ServOrderRec."Global Dimension 1 Code";
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Service Order No. }
    { 940 ;   ;G/L Account         ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "G/L Account" <> '' THEN BEGIN
                                                                  TESTFIELD("Project No.", '');
                                                                  TESTFIELD("Service Order No.", '');
                                                                  TESTFIELD("Plant Type", '');  //db, 04-02-14: T004213
                                                                END;
                                                              END;

                                                   CaptionML=ENU=G/L Account }
    { 950 ;   ;Department          ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Department }
    { 960 ;   ;Vendor (Trade Item) ;Code15        ;TableRelation="ETIM Vendor (Central Mgt)";
                                                   CaptionML=ENU=Vendor (Trade Item) }
    { 970 ;   ;Trade Item          ;Code20        ;TableRelation="Trade Item"."Item Code" WHERE (Vendor=FIELD("Vendor (Trade Item)"));
                                                   OnValidate=BEGIN
                                                                IF ("Trade Item" <> xRec."Trade Item") AND ("Trade Item" <> '') THEN  //db, 17-10-14
                                                                  ValidateItem(ItemTypeOpt::"Trade Item");
                                                              END;

                                                   CaptionML=ENU=Trade Item }
    { 980 ;   ;Basic Item          ;Code20        ;TableRelation="Basic Item"."Product Code" WHERE (Manufacturer=FIELD(Manufacturer));
                                                   CaptionML=ENU=Basic Item }
    { 990 ;   ;Manufacturer        ;Code15        ;TableRelation="ETIM Vendor (Central Mgt)";
                                                   CaptionML=ENU=Manufacturer }
    { 1000;   ;No Dispatch Required;Text10        ;CaptionML=ENU=No Dispatch Required }
    { 1010;   ;Item No.            ;Code20        ;TableRelation=Item.No.;
                                                   OnValidate=BEGIN
                                                                IF ("Item No." <> xRec."Item No.") AND ("Item No." <> '') THEN  //db, 17-10-14
                                                                  ValidateItem(ItemTypeOpt::Item);
                                                              END;

                                                   CaptionML=ENU=Item No.;
                                                   Description=DP00065 (table relation added) }
    { 1020;   ;Comment             ;Text50        ;CaptionML=ENU=Comment;
                                                   Description=DP00065 }
    { 1030;   ;Comment Dispatch Note Line;Text50  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Dispatch Note Line SiB".Comment WHERE (Dispatch Note No.=FIELD(Dispatch Note No.),
                                                                                                              Line No.=FIELD(Dispatch Note Line No.)));
                                                   OnValidate=VAR
                                                                lvDispatchNoteLineRec@1100525000 : Record 11072652;
                                                              BEGIN
                                                                IF "Dispatch Note Line No." <> 0 THEN BEGIN
                                                                  lvDispatchNoteLineRec.GET("Dispatch Note No.", "Dispatch Note Line No.");
                                                                  IF (lvDispatchNoteLineRec."Delivered Quantity" <> "Delivered Quantity") OR
                                                                     (lvDispatchNoteLineRec."Unit of Measure Code" <> "Unit Code Delivered Quantity")
                                                                  THEN BEGIN
                                                                    IF NOT CONFIRM(Text002, FALSE,
                                                                      "Delivered Quantity", "Unit Code Delivered Quantity",
                                                                      lvDispatchNoteLineRec."Delivered Quantity", lvDispatchNoteLineRec."Unit of Measure Code")
                                                                    THEN
                                                                      ERROR('');
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Comment Dispatch Note Line;
                                                   Description=DP00065;
                                                   Editable=No }
    { 1040;   ;Approved            ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Invoice SiB".Approved WHERE (No.=FIELD(Invoice No.)));
                                                   CaptionML=ENU=Approved;
                                                   Description=DP00065;
                                                   Editable=No }
    { 1050;   ;Plant Type          ;Code20        ;TableRelation="Plant Type";
                                                   OnValidate=VAR
                                                                PlantTypeRec@1100525000 : Record 11012551;
                                                                PlantSetup@1100525001 : Record 11012550;
                                                              BEGIN
                                                                //db, 04-02-14: T004213
                                                                IF "Plant Type" <> '' THEN BEGIN
                                                                  TESTFIELD("Project No.", '');
                                                                  TESTFIELD("Service Order No.", '');
                                                                  TESTFIELD("G/L Account", '');
                                                                  PlantTypeRec.GET("Plant Type");
                                                                  Department := PlantTypeRec."Department Code";
                                                                  //db.sn, 14-10-14
                                                                  "Cost Object" := PlantTypeRec."Cost Object";
                                                                  PlantSetup.GET;
                                                                  "Cost Component Plant" := PlantSetup."Cost Component Acquisition";
                                                                  //db.en, 14-10-14
                                                                  VALIDATE("Plant No.");
                                                                END ELSE BEGIN
                                                                  "Plant No." := '';
                                                                  "Cost Component Plant" := '';
                                                                  GetCostObjectItem;  //db, 14-04-14
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Plant Type;
                                                   Description=DP00065 }
    { 1051;   ;Plant No.           ;Code10        ;TableRelation="Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   CaptionML=ENU=Plant No.;
                                                   Description=DP00065 }
    { 1052;   ;Cost Component Plant;Code10        ;TableRelation="Cost Component Plant";
                                                   OnValidate=VAR
                                                                lvTypeNo@1100485000 : Integer;
                                                                lvFARel@1100485001 : Boolean;
                                                                lvModeInEx@1100485003 : Code[1];
                                                                lvVendorRec@1100525000 : Record 23;
                                                              BEGIN
                                                              END;

                                                   CaptionML=ENU=Cost Component Plant;
                                                   Description=DP00065 }
    { 1060;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   OnValidate=BEGIN
                                                                //db, 07-10-14
                                                                IF "Location Code" <> '' THEN BEGIN  //db, 14-10-14: provisionally only allowed for managing type=item (table purchaseline)
                                                                  TESTFIELD("Item No.");
                                                                  TESTFIELD("Project No.", '');
                                                                  TESTFIELD("Service Order No.", '');
                                                                  TESTFIELD("G/L Account", '');
                                                                END;
                                                                IF "Location Code" <> xRec."Location Code" THEN BEGIN
                                                                  "Bin Code" := '';
                                                                  IF ("Location Code" <> '') AND ("Item No." <> '') THEN BEGIN
                                                                    GetLocation("Location Code");
                                                                    IF Location."Bin Mandatory" AND NOT Location."Directed Put-away and Pick" THEN
                                                                      WMSManagement.GetDefaultBin("Item No.",'',"Location Code","Bin Code");
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Location Code;
                                                   Description=DP00065 }
    { 1065;   ;Bin Code            ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Location Code));
                                                   OnValidate=BEGIN
                                                                //db, 07-10-14
                                                                IF "Bin Code" <> '' THEN BEGIN  //db, 14-10-14: provisionally only allowed for managing type=item (table purchaseline)
                                                                  TESTFIELD("Item No.");
                                                                  TESTFIELD("Project No.", '');
                                                                  TESTFIELD("Service Order No.", '');
                                                                  TESTFIELD("G/L Account", '');
                                                                END;
                                                                IF ("Bin Code" <> xRec."Bin Code") AND ("Bin Code" <> '') THEN BEGIN
                                                                  GetLocation("Location Code");
                                                                  Location.TESTFIELD("Bin Mandatory");
                                                                  Location.TESTFIELD("Directed Put-away and Pick",FALSE);
                                                                  GetBin("Location Code","Bin Code");
                                                                  TESTFIELD("Location Code",Bin."Location Code");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Bin Code;
                                                   Description=DP00065 }
    { 1070;   ;Line Matched        ;Boolean       ;OnValidate=VAR
                                                                PurchaseLine@1100525000 : Record 39;
                                                              BEGIN
                                                                IF "Line Matched" THEN
                                                                  PurchaseLine.GET(PurchaseLine."Document Type"::Order, "Order No. Buyer", "Order Line No. Buyer");  //db, 04-06-15
                                                              END;

                                                   CaptionML=ENU=Line Matched;
                                                   Description=GS1 }
    { 1080;   ;Related Purch.Line Description;Text50;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Purchase Line".Description WHERE (Document Type=CONST(Order),
                                                                                                         Document No.=FIELD(Order No. Buyer),
                                                                                                         Line No.=FIELD(Order Line No. Buyer)));
                                                   CaptionML=ENU=Related Purchase Line Description;
                                                   Description=GS1;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Invoice No.,Line No.                    ;Clustered=Yes }
    {    ;Dispatch Note No.                        }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100525000 : TextConst 'ENU=%1 is %2%4, this is unequal to %1 (%3%4) of the invoice line. Are you sure?';
      Text002@1100525001 : TextConst 'ENU=Delivered quantity/unit of the invoice line ''%1 %'' is unequal to those of the dispatch not line ''%3 %4''. Are you sure?';
      DPA_Management@1100000999 : Codeunit 11012783;
      Location@1100525003 : Record 14;
      Bin@1100525002 : Record 7354;
      WMSManagement@1100525004 : Codeunit 7302;
      ItemTypeOpt@1100525005 : 'Item,Basic Item,Trade Item';

    PROCEDURE IsInvoiceTextLine@1100525000() : Boolean;
    BEGIN
      IF ("Delivered Quantity" = 0) AND ("Invoiced Quantity" = 0) AND
         ("Item No. Vendor" = '') AND  ("GTIN Item" = '') AND
         (Price = 0) AND ("Nett Line Amount" = 0) AND ("VAT %" = 0)
      THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE FillProjectNoWithDispNoteProj@1100525001();
    VAR
      lvDispatchNoteRec@1100525000 : Record 11072651;
      lvProjRec@1100525001 : Record 11072003;
    BEGIN
      IF "Dispatch Note No." = '' THEN
        EXIT;
      IF NOT lvDispatchNoteRec.GET("Dispatch Note No.") THEN
        EXIT;
      IF (lvDispatchNoteRec."Project No." <> '') AND lvProjRec.GET(lvDispatchNoteRec."Project No.") THEN
        "Project No." := lvDispatchNoteRec."Project No.";
    END;

    PROCEDURE SearchForDispatchNoteLineNo@1100525002() : Integer;
    VAR
      lvDispatchNoteLineRec@1100525000 : Record 11072652;
    BEGIN
      //* Some vendors can not fill/determine the 'Dispatch Note Line No.' on an invoice line. So we try to
      //* determine this lino no, but this will only be filled when dispactch note no., items, delivered quantity
      //* and unit are the same. Otherwise the user can manually link invoice lines to a dispatch note line by
      //* filling the 'Dispatch Note Line No.' in the invoice lines (not approved).
      IF "Dispatch Note No." = '' THEN
        EXIT(0);
      IF IsInvoiceTextLine THEN
        EXIT(0);

      lvDispatchNoteLineRec.SETRANGE("Dispatch Note No.", "Dispatch Note No.");
      lvDispatchNoteLineRec.SETRANGE("Item No. Vendor", "Item No. Vendor");
      lvDispatchNoteLineRec.SETRANGE("GTIN Item", "GTIN Item");
      lvDispatchNoteLineRec.SETRANGE("Delivered Quantity", "Delivered Quantity");
      lvDispatchNoteLineRec.SETRANGE("Unit of Measure Code", "Unit Code Delivered Quantity");
      IF lvDispatchNoteLineRec.FINDFIRST THEN
        EXIT(lvDispatchNoteLineRec."Line No.");
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11072654) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11072654');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Invoice Line SiB", Department, IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO(Department));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, Department);
    END;

    LOCAL PROCEDURE GetLocation@7300(LocationCode@1000 : Code[10]);
    BEGIN
      //db, 07-10-14
      IF LocationCode = '' THEN
        CLEAR(Location)
      ELSE
        IF Location.Code <> LocationCode THEN
          Location.GET(LocationCode);
    END;

    LOCAL PROCEDURE GetBin@7301(LocationCode@1000 : Code[10];BinCode@1001 : Code[20]);
    BEGIN
      //db, 07-10-14
      IF BinCode = '' THEN
        CLEAR(Bin)
      ELSE
        IF Bin.Code <> BinCode THEN
          Bin.GET(LocationCode,BinCode);
    END;

    PROCEDURE GetCostObjectItem@1100525003();
    VAR
      ItemRec@1100525001 : Record 27;
      TradeItemRec@1100525000 : Record 11012317;
    BEGIN
      //db, 17-10-14
      IF "Trade Item" <> '' THEN BEGIN
        TradeItemRec.GET("Vendor (Trade Item)", "Trade Item");
        "Cost Object" := TradeItemRec."Cost Object";
      END ELSE BEGIN
        ItemRec.GET("Item No.");
        "Cost Object" := ItemRec."Global Dimension 2 Code";
      END;
    END;

    PROCEDURE ValidateItem@1210190000(LTypeArtOpt@11012000 : 'Item,Basic Item,Trade Item');
    VAR
      ValidateCu@1100525000 : Codeunit 11012033;
      DummyCode@1100525003 : Code[250];
      DummyTxt@1100525001 : Text[250];
      DummyDec@1100525002 : Decimal;
      DummyDate@1100525004 : Date;
      lvRefDate@1100485004 : Date;
      lvDiscRef1@1100485003 : Code[20];
      lvDiscRef2@1100485002 : Code[20];
    BEGIN
      //db, 17-10-14
      lvRefDate := TODAY;
      ValidateCu.ValidateItem(LTypeArtOpt,"Trade Item","Item No.",Manufacturer,"Vendor (Trade Item)",
        "Basic Item","Cost Object",DummyTxt,DummyCode,
        DummyDec,DummyDec,DummyDate,DummyDec,DummyTxt,DummyCode,
        lvDiscRef1,lvDiscRef2,lvRefDate,'');
    END;

    BEGIN
    END.
  }
}

