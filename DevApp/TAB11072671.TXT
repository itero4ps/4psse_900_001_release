OBJECT Table 11072671 Plant Meter Reading
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Plant Type");
               TESTFIELD("Plant No.");
               TESTFIELD("Meter Reading Type");
               TESTFIELD(Date);
             END;

    OnRename=BEGIN
               ERROR(Text000); //T005361
             END;

    CaptionML=ENU=Plant Meter Reading;
  }
  FIELDS
  {
    { 10  ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type";
                                                   OnValidate=VAR
                                                                PlantType@1100529000 : Record 11012551;
                                                              BEGIN
                                                                IF "Plant Type" <> '' THEN BEGIN
                                                                  PlantType.GET("Plant Type");
                                                                  PlantType.TESTFIELD("Meter Reading", TRUE);
                                                                  PlantType.TESTFIELD(Bulk, FALSE);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Plant Type;
                                                   NotBlank=Yes }
    { 20  ;   ;Plant No.           ;Code10        ;TableRelation="Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Plant Description", "Inspection No.");
                                                              END;

                                                   CaptionML=ENU=Plant No.;
                                                   NotBlank=Yes }
    { 21  ;   ;Plant Description   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number".Description WHERE (Plant Type=FIELD(Plant Type),
                                                                                                        No.=FIELD(Plant No.)));
                                                   CaptionML=ENU=Plant Description;
                                                   Editable=No }
    { 22  ;   ;Inspection No.      ;Code30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number"."Inspection No." WHERE (Plant Type=FIELD(Plant Type),
                                                                                                             No.=FIELD(Plant No.)));
                                                   CaptionML=ENU=Inspection No.;
                                                   Editable=No }
    { 30  ;   ;Meter Reading Type  ;Code10        ;TableRelation="Plant Meter Reading Type";
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Unit of Measure");
                                                              END;

                                                   CaptionML=ENU=Meter Reading Type;
                                                   NotBlank=Yes }
    { 31  ;   ;Unit of Measure     ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Meter Reading Type"."Unit of Measure" WHERE (Code=FIELD(Meter Reading Type)));
                                                   CaptionML=ENU=Unit of Measure;
                                                   Editable=No }
    { 40  ;   ;Date                ;Date          ;CaptionML=ENU=Date;
                                                   NotBlank=Yes }
    { 50  ;   ;Meter Reading       ;Decimal       ;OnValidate=BEGIN
                                                                IF "Meter Reading" <> 0 THEN BEGIN
                                                                  TESTFIELD("Plant Type");
                                                                  TESTFIELD("Plant No.");
                                                                  TESTFIELD("Meter Reading Type");
                                                                  TESTFIELD(Date);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Meter Reading;
                                                   DecimalPlaces=0:0;
                                                   MinValue=0 }
    { 60  ;   ;Service Order       ;Code20        ;TableRelation="Service Order";
                                                   CaptionML=ENU=Service Order }
  }
  KEYS
  {
    {    ;Plant Type,Plant No.,Meter Reading Type,Date,Service Order;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100409000 : TextConst 'ENU=Rename not allowed';

    PROCEDURE DefaultMeterReadingType@1100529003(PlantType@1100529001 : Code[20];PlantNo@1100529000 : Code[10]) DefMeterreadingType : Code[10];
    VAR
      PlantTypes@1100529002 : Record 11012551;
      MeterReadingType@1100529003 : Record 11072670;
      MeterReading@1100529004 : Record 11072671;
    BEGIN
      IF (PlantType = '') OR (PlantNo = '') THEN
        EXIT('');
      IF NOT PlantTypes.GET(PlantType) THEN
        PlantTypes."Meter Reading Type" := '';

      MeterReading.SETRANGE("Plant Type", PlantType);
      MeterReading.SETRANGE("Plant No.", PlantNo);
      IF NOT MeterReading.FINDFIRST THEN
        DefMeterreadingType := PlantTypes."Meter Reading Type"
      ELSE BEGIN
        MeterReading.SETFILTER("Meter Reading Type", '<>%1', MeterReading."Meter Reading Type");
        IF MeterReading.ISEMPTY THEN
          DefMeterreadingType := MeterReading."Meter Reading Type";
        IF DefMeterreadingType = '' THEN BEGIN
          DefMeterreadingType := MeterReading."Meter Reading Type";
          IF PlantTypes."Meter Reading Type" <> '' THEN BEGIN
            MeterReading.SETRANGE("Meter Reading Type", PlantTypes."Meter Reading Type");
            IF MeterReading.FINDFIRST THEN
              DefMeterreadingType := PlantTypes."Meter Reading Type"
          END;
        END;
      END;
      IF DefMeterreadingType <> '' THEN BEGIN
        IF NOT MeterReadingType.GET(DefMeterreadingType) THEN
          DefMeterreadingType := ''
      END;
    END;

    PROCEDURE GetPreviousMeterReadingRecord@1100529000(CurrMeterReading@1100529002 : Record 11072671;VAR PrevMeterReading@1100529000 : Record 11072671);
    BEGIN
      WITH CurrMeterReading DO BEGIN
        IF ("Plant Type" = '') OR ("Plant No." = '') OR ("Meter Reading Type" = '') OR (Date = 0D) THEN
          CLEAR(PrevMeterReading)
        ELSE BEGIN
          PrevMeterReading.SETRANGE("Plant Type", "Plant Type");
          PrevMeterReading.SETRANGE("Plant No.", "Plant No.");
          PrevMeterReading.SETRANGE("Meter Reading Type", "Meter Reading Type");
          PrevMeterReading.SETRANGE(Date, 0D, Date - 1);
          IF NOT PrevMeterReading.FINDLAST THEN
            CLEAR(PrevMeterReading);
        END;
      END;
    END;

    PROCEDURE GetActualMeterReading@1100529002(PlantType@1100529002 : Code[20];PlantNo@1100529001 : Code[10];MeterReadingType@1100529000 : Code[10];VAR OnServiceOrder@1100528800 : Code[20]) : Decimal;
    VAR
      MeterReading@1100529003 : Record 11072671;
    BEGIN
      IF (PlantType = '') OR (PlantNo = '') OR (MeterReadingType = '') THEN
        EXIT(0);

      MeterReading.SETRANGE("Plant Type", PlantType);
      MeterReading.SETRANGE("Plant No.", PlantNo);
      MeterReading.SETRANGE("Meter Reading Type", MeterReadingType);
      IF NOT MeterReading.FINDLAST THEN
        MeterReading."Meter Reading" := 0;
      OnServiceOrder := MeterReading."Service Order";
      EXIT(MeterReading."Meter Reading");
    END;

    PROCEDURE GetActualMeterReadingDate@1100528800(PlantType@1100529002 : Code[20];PlantNo@1100529001 : Code[10];MeterReadingType@1100529000 : Code[10]) : Date;
    VAR
      MeterReading@1100529003 : Record 11072671;
    BEGIN
      IF (PlantType = '') OR (PlantNo = '') OR (MeterReadingType = '') THEN
        EXIT(0D);

      MeterReading.SETRANGE("Plant Type", PlantType);
      MeterReading.SETRANGE("Plant No.", PlantNo);
      MeterReading.SETRANGE("Meter Reading Type", MeterReadingType);
      IF MeterReading.FINDLAST THEN
        EXIT(MeterReading.Date);
    END;

    PROCEDURE NextMeterReadingForInspections@1100529001(PlantType@1100529003 : Code[20];PlantNo@1100529001 : Code[10];MeterReadingType@1100529006 : Code[10]) : Decimal;
    VAR
      InspectionType@1100529002 : Record 11012562;
      PlantInspectionType@1100529000 : Record 11012563;
      NextMeterReading@1100529008 : Decimal;
      NextInspectMeterReading@1100529005 : Decimal;
    BEGIN
      IF (PlantType = '') OR (PlantNo = '') OR (MeterReadingType = '') THEN
        EXIT(0);

      NextInspectMeterReading := 0;
      PlantInspectionType.SETRANGE("Plant Type", PlantType);
      PlantInspectionType.SETFILTER("Inspection Type", '<>%1', '');
      IF PlantInspectionType.FINDSET THEN BEGIN
        REPEAT
          NextMeterReading := NextMeterReadingForInspectType(
            PlantType, PlantNo, PlantInspectionType."Inspection Type", MeterReadingType);
          IF (NextInspectMeterReading = 0) OR ((NextMeterReading <> 0) AND (NextMeterReading < NextInspectMeterReading)) THEN
            NextInspectMeterReading := NextMeterReading;
        UNTIL PlantInspectionType.NEXT = 0;
      END;
      EXIT(NextInspectMeterReading);
    END;

    PROCEDURE NextMeterReadingForInspectType@1100529006(PlantType@1100529000 : Code[20];PlantNo@1100529001 : Code[10];InspectionTypeCode@1100529002 : Code[20];MeterReadingType@1100529009 : Code[10]) : Decimal;
    VAR
      InspectionType@1100529003 : Record 11012562;
      Inspection@1100529004 : Record 11012564;
      PlantNumber@1100529005 : Record 11012552;
      MeterReading@1100529008 : Record 11072671;
      LastInspectionDate@1100529007 : Date;
    BEGIN
      IF (PlantType = '') OR (PlantNo = '') OR (InspectionTypeCode = '') THEN
        EXIT(0);
      IF NOT InspectionType.GET(InspectionTypeCode) THEN
        EXIT(0);
      IF (InspectionType."Inspection Based on" = InspectionType."Inspection Based on"::Time) OR
         ((MeterReadingType <> '') AND (InspectionType."Meter Reading Type" <> MeterReadingType))
      THEN
        EXIT(0);

      Inspection.SETRANGE("Plant Type", PlantType);
      Inspection.SETRANGE("Plant No.", PlantNo);
      Inspection.SETRANGE("Inspection Type", InspectionType.Code);
      Inspection.SETRANGE("Inspection Result", Inspection."Inspection Result"::" ");
      IF Inspection.FINDLAST THEN BEGIN
        Inspection.SETRANGE("Inspection Result", Inspection."Inspection Result"::Approved);
        LastInspectionDate := 0D;
        IF Inspection.FINDLAST THEN
          LastInspectionDate := Inspection."Inspected on"
        ELSE BEGIN
          IF PlantNumber.GET(PlantType,PlantNo) THEN
            LastInspectionDate := PlantNumber."Receipt Date";
        END;
        MeterReading.SETRANGE("Plant Type", PlantType);
        MeterReading.SETRANGE("Plant No.", PlantNo);
        MeterReading.SETRANGE("Meter Reading Type", InspectionType."Meter Reading Type");
        IF LastInspectionDate = 0D THEN
          MeterReading.SETRANGE(Date, 0D)
        ELSE
          MeterReading.SETRANGE(Date, 0D, LastInspectionDate);
        IF NOT MeterReading.FINDLAST THEN
          MeterReading."Meter Reading" := 0;
        EXIT(MeterReading."Meter Reading" + InspectionType."Inspection Interval");
      END;
      EXIT(0);
    END;

    BEGIN
    END.
  }
}

