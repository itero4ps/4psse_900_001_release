OBJECT Table 11125530 Plant Request Line (SMF)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               GetHeader();
               ReqRec.TESTFIELD("Plant Company");
               "Location Copied Need" := '';
               "Line No. Copied Need" := 0;
             END;

    CaptionML=ENU=Plant Request Line (Site Manager Form);
  }
  FIELDS
  {
    { 10  ;   ;Request No.         ;Code20        ;TableRelation="Plant Request (SMF)";
                                                   CaptionML=ENU=Request No. }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 30  ;   ;Type                ;Option        ;OnValidate=VAR
                                                                lvReqLineRec@1100485000 : Record 11125530;
                                                                LicensePlantExtendedCU@1100409000 : Codeunit 11012579;
                                                              BEGIN
                                                                IF Type = Type::Item THEN BEGIN
                                                                  LicensePlantExtendedCU.LicenseTablePlantItem(TRUE,11020521);  //DP00267
                                                                  GetHeader();
                                                                  IF (ReqRec.Type = ReqRec.Type::OtherTransfers) THEN
                                                                    FIELDERROR(Type);
                                                                END;

                                                                IF Type <> xRec.Type THEN BEGIN
                                                                  TESTFIELD("Plant/Item", '');
                                                                  lvReqLineRec := Rec;
                                                                  INIT;
                                                                  Type := lvReqLineRec.Type;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Plant,Set,Item,Text;
                                                   OptionString=Plant,Set,Item,Text }
    { 40  ;   ;Plant/Item          ;Code20        ;OnValidate=BEGIN
                                                                GetHeader();
                                                                IF "Plant/Item" <> '' THEN
                                                                  ReqRec.TESTFIELD("Plant Company");
                                                                CASE Type OF
                                                                  Type::Plant:
                                                                    BEGIN
                                                                      IF "Plant/Item" = '' THEN BEGIN
                                                                        "Plant No." := '';
                                                                        Bulk := FALSE;
                                                                        Description := '';
                                                                      END ELSE BEGIN
                                                                        PlantTypeRec.CHANGECOMPANY(ReqRec."Plant Company");
                                                                        PlantTypeRec.GET("Plant/Item");
                                                                        PlantTypeRec.TESTFIELD("Order via Plant Request", TRUE);
                                                                        Bulk := PlantTypeRec.Bulk;
                                                                        IF "Plant/Item" <> xRec."Plant/Item" THEN
                                                                          "Plant No." := '';
                                                                        IF ("Plant/Item" <> xRec."Plant/Item") OR (Description = '') THEN
                                                                          FillPlantDescription();
                                                                      END;
                                                                    END;
                                                                  Type::Set:
                                                                    BEGIN
                                                                      IF "Plant/Item" = '' THEN BEGIN
                                                                        Bulk := FALSE;
                                                                        Description := '';
                                                                      END ELSE BEGIN
                                                                        PlantSetRec.CHANGECOMPANY(ReqRec."Plant Company");
                                                                        PlantSetRec.GET("Plant/Item");
                                                                        PlantSetRec.TESTFIELD("Order via Plant Request", TRUE);
                                                                        Bulk := TRUE;
                                                                        PlantSetLineRec.CHANGECOMPANY(ReqRec."Plant Company");
                                                                        PlantSetLineRec.SETRANGE("Set Code", "Plant/Item");
                                                                        PlantSetLineRec.SETRANGE(Type, PlantSetLineRec.Type::Plant);
                                                                        PlantSetLineRec.SETFILTER("Plant Type", '<>%1', '');
                                                                        PlantSetLineRec.SETFILTER("Plant No.", '<>%1', '');
                                                                        IF PlantSetLineRec.FINDSET(FALSE,FALSE) THEN BEGIN
                                                                          PlantTypeRec.CHANGECOMPANY(ReqRec."Plant Company");
                                                                          REPEAT
                                                                            IF PlantTypeRec.GET(PlantSetLineRec."Plant Type") THEN BEGIN
                                                                              IF NOT PlantTypeRec.Bulk THEN
                                                                                Bulk := FALSE;  //* If unique plant with 'Plant No." filled in set then unique set (quantity must be 1)
                                                                            END;
                                                                          UNTIL (PlantSetLineRec.NEXT = 0) OR (NOT Bulk);
                                                                        END;
                                                                        IF ("Plant/Item" <> xRec."Plant/Item") OR (Description = '') THEN
                                                                          Description := PlantSetRec.Description;
                                                                      END;

                                                                    END;
                                                                  Type::Item:
                                                                    BEGIN
                                                                      IF "Plant/Item" = '' THEN
                                                                        Description := ''
                                                                      ELSE BEGIN
                                                                        ItemRec.CHANGECOMPANY(ReqRec."Plant Company");
                                                                        ItemRec.GET("Plant/Item");
                                                                        ItemRec.TESTFIELD("Order via Plant Request", TRUE);
                                                                        IF ("Plant/Item" <> xRec."Plant/Item") OR (Description = '') THEN
                                                                          Description := ItemRec.Description;
                                                                      END;
                                                                    END;
                                                                  ELSE
                                                                    BEGIN
                                                                      IF "Plant/Item" <> '' THEN
                                                                        "Plant/Item" := '';
                                                                    END;
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              CASE Type OF
                                                                Type::Plant:
                                                                  LookupPlantType();
                                                                Type::Set:
                                                                  LookupPlantSet();
                                                                Type::Item:
                                                                  LookupItem();
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Plant / Item }
    { 45  ;   ;Plant No.           ;Code10        ;OnValidate=BEGIN
                                                                IF "Plant No." = '' THEN
                                                                  EXIT;

                                                                TESTFIELD(Type, Type::Plant);
                                                                TESTFIELD("Plant/Item");

                                                                GetHeader();
                                                                PlantNoRec.CHANGECOMPANY(ReqRec."Plant Company");
                                                                PlantNoRec.GET("Plant/Item", "Plant No.");

                                                                IF NOT Bulk THEN BEGIN
                                                                  IF Quantity <> 1 THEN
                                                                    Quantity := 1;
                                                                END ELSE BEGIN
                                                                  //* If bulk then the PlantNo is only allowed for external plant with PlantNo in the inventory
                                                                  IF (NOT PlantNoRec.External) OR ("Plant No." <> PlantNoRec."Stock No.") THEN
                                                                    "Plant No." := '';
                                                                END;

                                                                IF ("Plant No." <> xRec."Plant No.") OR (Description = '') THEN
                                                                  FillPlantDescription();
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupPlantNo();
                                                            END;

                                                   CaptionML=ENU=Plant No. }
    { 60  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 70  ;   ;Bulk                ;Boolean       ;FieldClass=Normal;
                                                   CaptionML=ENU=Bulk;
                                                   Editable=No }
    { 90  ;   ;Expected return on  ;Date          ;OnValidate=BEGIN
                                                                IF "Expected return on" <> 0D THEN BEGIN
                                                                  IF NOT (Type IN [Type::Plant, Type::Set]) THEN
                                                                    FIELDERROR(Type);
                                                                  GetHeader();
                                                                  IF ("Expected return on" < ReqRec."Transfer Date") THEN
                                                                    "Expected return on" := ReqRec."Transfer Date";
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Expected return on }
    { 100 ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                IF Quantity = 0 THEN
                                                                  EXIT;

                                                                CASE Type OF
                                                                  Type::Text:
                                                                    FIELDERROR(Type);
                                                                  Type::Plant:
                                                                    IF ("Plant/Item" <> '') AND ("Plant No." <> '') AND (NOT Bulk) THEN
                                                                      TESTFIELD(Quantity, 1);
                                                                  Type::Set:
                                                                    IF ("Plant/Item" <> '') AND (NOT Bulk) THEN
                                                                      TESTFIELD(Quantity, 1);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 200 ;   ;Element             ;Code20        ;OnValidate=VAR
                                                                lvElementFormatCU@1100525000 : Codeunit 11012022;
                                                              BEGIN
                                                                IF Element = '' THEN
                                                                  EXIT;
                                                                IF (Type = Type::Text) THEN
                                                                  FIELDERROR(Type);
                                                                GetHeader();
                                                                IF NOT (ReqRec.Type IN [ReqRec.Type::Arrival, ReqRec.Type::OtherTransfers]) THEN
                                                                  ReqRec.FIELDERROR(Type);
                                                                ReqRec.TESTFIELD("To Location");
                                                                ReqRec.TESTFIELD("Project No.");
                                                                lvElementFormatCU.FormatElem(Element, 2, '');
                                                                ProjElemRec.GET(ReqRec."Project No.", Element);
                                                              END;

                                                   OnLookup=VAR
                                                              lvEditable@1100525001 : Boolean;
                                                            BEGIN
                                                              GetHeader();
                                                              IF (ReqRec.Type IN [ReqRec.Type::Arrival, ReqRec.Type::OtherTransfers]) AND
                                                                 (ReqRec.Status = ReqRec.Status::Open) AND (Type <> Type::Text) AND (ReqRec."Project No." <> '')
                                                              THEN
                                                                lvEditable := TRUE;
                                                              ProjElemRec.RESET;
                                                              ProjElemRec.FILTERGROUP(9);
                                                              ProjElemRec.SETRANGE("Project No.", ReqRec."Project No.");
                                                              ProjElemRec.FILTERGROUP(0);
                                                              ProjElemRec."Project No." := ReqRec."Project No.";
                                                              ProjElemRec.Element := Element;
                                                              IF NOT lvEditable THEN
                                                                PAGE.RUNMODAL(0, ProjElemRec)
                                                              ELSE BEGIN
                                                                IF PAGE.RUNMODAL(0, ProjElemRec) = ACTION::LookupOK THEN BEGIN
                                                                  IF (ProjElemRec.Element <> '') AND (ProjElemRec.Element <> Element) THEN
                                                                    VALIDATE(Element, ProjElemRec.Element);
                                                                END;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Element }
    { 210 ;   ;Location Copied Need;Code20        ;TableRelation="Plant Location".Code;
                                                   CaptionML=ENU=Location Copied Need;
                                                   Editable=No }
    { 215 ;   ;Line No. Copied Need;Integer       ;CaptionML=ENU=Line No. Copied Need;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Request No.,Line No.                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PlantTypeRec@1100525000 : Record 11012551;
      PlantNoRec@1100485001 : Record 11012552;
      PlantSetRec@1100525002 : Record 11012587;
      PlantSetLineRec@1100525003 : Record 11012588;
      ItemRec@1100485002 : Record 27;
      ReqRec@1100485003 : Record 11125529;
      ProjElemRec@1100525001 : Record 11012010;

    PROCEDURE GetHeader@1100525001();
    BEGIN
      IF "Request No." <> '' THEN
        ReqRec.GET("Request No.");
    END;

    PROCEDURE FillPlantDescription@4();
    BEGIN
      IF (Type <> Type::Plant) OR ("Plant/Item" = '') THEN
        EXIT;

      GetHeader();
      PlantTypeRec.CHANGECOMPANY(ReqRec."Plant Company");
      PlantNoRec.CHANGECOMPANY(ReqRec."Plant Company");
      IF ("Plant No." <> '') THEN BEGIN
        IF PlantNoRec.GET("Plant/Item", "Plant No.") THEN BEGIN
          IF (PlantNoRec.Description <> '') THEN BEGIN
            Description := PlantNoRec.Description;
            EXIT;
          END;
        END;
      END;
      IF PlantTypeRec.GET("Plant/Item") THEN BEGIN
        IF (PlantTypeRec.Description <> '') THEN
          Description := PlantTypeRec.Description;
      END;
    END;

    PROCEDURE LookupPlantType@1100525000();
    VAR
      lvPlantTypeRec@1100525000 : Record 11012551;
    BEGIN
      IF Type <> Type::Plant THEN
        EXIT;
      GetHeader();
      lvPlantTypeRec.CHANGECOMPANY(ReqRec."Plant Company");
      lvPlantTypeRec.FILTERGROUP(9);
      lvPlantTypeRec.SETRANGE("Order via Plant Request", TRUE);
      lvPlantTypeRec.FILTERGROUP(0);
      lvPlantTypeRec.Code := "Plant/Item";
      IF PAGE.RUNMODAL(0, lvPlantTypeRec) = ACTION::LookupOK THEN BEGIN
        IF ReqRec.Status = ReqRec.Status::Open THEN
          VALIDATE("Plant/Item", lvPlantTypeRec.Code);
      END;
    END;

    PROCEDURE LookupPlantNo@1100525003();
    VAR
      lvPlantNoRec@1100525000 : Record 11012552;
    BEGIN
      IF Type <> Type::Plant THEN
        EXIT;
      GetHeader();
      lvPlantNoRec.CHANGECOMPANY(ReqRec."Plant Company");
      lvPlantNoRec.SETRANGE("Plant Type", "Plant/Item");
      lvPlantNoRec."Plant Type" := "Plant/Item";
      lvPlantNoRec."No." := "Plant No.";
      IF PAGE.RUNMODAL(0, lvPlantNoRec) = ACTION::LookupOK THEN BEGIN
        IF ReqRec.Status = ReqRec.Status::Open THEN
          VALIDATE("Plant No.", lvPlantNoRec."No.");
      END;
    END;

    PROCEDURE LookupPlantSet@1100525006();
    VAR
      lvPlantSetRec@1100525000 : Record 11012587;
      PlantSetList@1210190000 : Page 11012622;
    BEGIN
      IF Type <> Type::Set THEN
        EXIT;
      GetHeader();
      //lvPlantSetRec.CHANGECOMPANY(ReqRec."Plant Company");
      lvPlantSetRec.FILTERGROUP(9);
      lvPlantSetRec.SETRANGE("Order via Plant Request", TRUE);
      lvPlantSetRec.FILTERGROUP(0);
      PlantSetList.SETTABLEVIEW(lvPlantSetRec);
      lvPlantSetRec.Code := "Plant/Item";
      //IF PAGE.RUNMODAL(0, lvPlantSetRec) = ACTION::LookupOK THEN BEGIN
      PlantSetList.SETRECORD(lvPlantSetRec);
      IF (ReqRec."Plant Company" <> '') AND (ReqRec."Plant Company" <> COMPANYNAME) THEN
        PlantSetList.SetPlantCompany(ReqRec."Plant Company");
      PlantSetList.LOOKUPMODE(TRUE);
      IF PlantSetList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        PlantSetList.GETRECORD(lvPlantSetRec);
        IF ReqRec.Status = ReqRec.Status::Open THEN
          VALIDATE("Plant/Item", lvPlantSetRec.Code);
      END;
    END;

    PROCEDURE LookupItem@1100525005();
    VAR
      lvItemRec@1100525000 : Record 27;
    BEGIN
      IF Type <> Type::Item THEN
        EXIT;
      GetHeader();
      lvItemRec.CHANGECOMPANY(ReqRec."Plant Company");
      lvItemRec.FILTERGROUP(9);
      lvItemRec.SETRANGE("Order via Plant Request", TRUE);
      lvItemRec.FILTERGROUP(0);
      lvItemRec."No." := "Plant/Item";
      IF PAGE.RUNMODAL(0, lvItemRec) = ACTION::LookupOK THEN BEGIN
        IF ReqRec.Status = ReqRec.Status::Open THEN
          VALIDATE("Plant/Item", lvItemRec."No.");
      END;
    END;

    PROCEDURE FieldIsEditable@1100525002(lFieldNo@1100525000 : Integer) : Boolean;
    BEGIN
      //Future USE? Doesn't work yet.
      //The purpose of this was to add this to the editable property of a field in a page
      //but that doesn't work.

      CASE Type OF
        Type::Plant:
          EXIT(TRUE);
        Type::Item:
          EXIT(NOT (lFieldNo IN [FIELDNO("Plant No."),
                                 FIELDNO("Expected return on")]));
        Type::Set:
          EXIT(NOT (lFieldNo IN [FIELDNO("Plant No.")]));
        Type::Text:
          EXIT(NOT (lFieldNo IN [FIELDNO("Plant/Item"),
                                 FIELDNO(Element),
                                 FIELDNO("Plant No."),
                                 FIELDNO("Expected return on"),
                                 FIELDNO(Quantity)]));
      END;
    END;

    PROCEDURE GetRentalRate@1100525004() : Decimal;
    VAR
      PlantRequestSMF@1100525002 : Record 11125529;
      PlantType@1100525003 : Record 11012551;
      PlantLoc@1100525001 : Record 11012554;
      Loc@1100525000 : Code[20];
    BEGIN
      //DP00898 (Function copied from T11020521, but plant in other company so codeunit SearchRate can not be used. Also no RateCode here)
      IF ("Plant/Item" = '') OR (Type <> Type::Plant) THEN
        EXIT(0);
      IF NOT PlantRequestSMF.GET("Request No.") THEN
        EXIT(0);
      IF PlantRequestSMF."Plant Company" = '' THEN
        EXIT(0);
      PlantType.CHANGECOMPANY(PlantRequestSMF."Plant Company");
      IF NOT PlantType.GET("Plant/Item") THEN
        EXIT(0);
      IF PlantType."Rental Type" <> PlantType."Rental Type"::Rental THEN
        EXIT(0);

      CASE PlantRequestSMF.Type OF
        PlantRequestSMF.Type::Arrival:
          Loc := PlantRequestSMF."To Location";
        PlantRequestSMF.Type::Removal:
          Loc := PlantRequestSMF."From Location";
        PlantRequestSMF.Type::OtherTransfers:
          BEGIN
            PlantLoc.CHANGECOMPANY(PlantRequestSMF."Plant Company");
            IF PlantLoc.GET(PlantRequestSMF."To Location") THEN BEGIN
              IF NOT PlantLoc.Depot THEN
                Loc := PlantRequestSMF."To Location";
            END;
            IF Loc = '' THEN BEGIN
              IF PlantLoc.GET(PlantRequestSMF."From Location") THEN BEGIN
                IF NOT PlantLoc.Depot THEN BEGIN
                  Loc := PlantRequestSMF."From Location";
                END;
              END;
            END;
            IF Loc = '' THEN
              EXIT(0);
          END;
        ELSE
          EXIT(0);
      END;

      EXIT(SearchRentalRate(Loc,"Plant/Item","Plant No.",PlantRequestSMF."Transfer Date",PlantRequestSMF."Plant Company"));
    END;

    LOCAL PROCEDURE SearchRentalRate@1100485004(PlantLocation@1210190000 : Code[20];PlantType@11012000 : Code[20];PlantNo@1210190002 : Code[10];ReferenceDate@11012001 : Date;PlantCompany@1100525000 : Text[30]) : Decimal;
    VAR
      PlantLoc@1210190001 : Record 11012554;
      PlantRate@1100525001 : Record 11012567;
      LocationRate@1210190003 : Record 11012583;
      RateFound@1100485000 : Boolean;
      RentalRate@1100485008 : Decimal;
    BEGIN
      //Copied parts from Codeunit SearchRate (keep it simple for SMF)
      PlantLoc.CHANGECOMPANY(PlantCompany);
      IF (NOT PlantLoc.GET(PlantLocation)) OR (PlantLocation = '') THEN BEGIN
        PlantLoc."Rate Type" := PlantLoc."Rate Type"::Day;
        PlantLoc."Kind of Rate" := PlantLoc."Kind of Rate"::Extern;
      END;

      WITH LocationRate DO BEGIN
        IF (PlantLocation <> '') THEN BEGIN
          LocationRate.CHANGECOMPANY(PlantCompany);
          SETRANGE(Location,PlantLocation);
          SETRANGE("Rental Type","Rental Type"::Rental);
          SETRANGE("Plant Type",PlantType);
          SETRANGE("Starting Date",0D,ReferenceDate);
          SETFILTER("Ending Date",'%1|>=%2',0D, ReferenceDate);
          IF (PlantNo <> '') THEN BEGIN
            SETRANGE("Plant No.",PlantNo);
            RateFound := FINDLAST;
          END;
          IF NOT RateFound THEN BEGIN
            SETRANGE("Plant No.",'');
            RateFound := FINDLAST;
          END;
          IF RateFound THEN BEGIN
            CASE PlantLoc."Rate Type" OF
              PlantLoc."Rate Type"::Day: RentalRate := "Rental Rate (Days)";
              PlantLoc."Rate Type"::Week: RentalRate := "Rental Rate (Week)";
              PlantLoc."Rate Type"::Month: RentalRate := "Rental Rate (Month)";
            END;
            EXIT(RentalRate);
          END;
        END;
      END;

      WITH PlantRate DO BEGIN
        PlantRate.CHANGECOMPANY(PlantCompany);
        SETRANGE("Rental Type","Rental Type"::Rental);
        SETRANGE("Plant Type",PlantType);
        SETRANGE("Starting Date",0D,ReferenceDate);
        SETFILTER("Ending Date",'%1|>=%2',0D, ReferenceDate);
        IF (PlantNo <> '') THEN BEGIN
          SETRANGE("Plant No.",PlantNo);
          RateFound := FINDLAST;
        END;
        IF NOT RateFound THEN BEGIN
          SETRANGE("Plant No.",'');
          RateFound := FINDLAST;
        END;
        IF RateFound THEN BEGIN
          IF (PlantLoc."Kind of Rate" = PlantLoc."Kind of Rate"::Extern) THEN BEGIN
            CASE PlantLoc."Rate Type" OF
              PlantLoc."Rate Type"::Day: RentalRate := "Rental Rate External (Days)";
              PlantLoc."Rate Type"::Week: RentalRate := "Rental Rate External (Week)";
              PlantLoc."Rate Type"::Month: RentalRate := "Rental Rate External (Month)";
            END;
          END ELSE BEGIN
            CASE PlantLoc."Rate Type" OF
              PlantLoc."Rate Type"::Day: RentalRate := "Rental Rate (Days)";
              PlantLoc."Rate Type"::Week: RentalRate := "Rental Rate (Week)";
              PlantLoc."Rate Type"::Month: RentalRate := "Rental Rate (Month)";
            END;
          END;
          EXIT(RentalRate);
        END;
      END;
      EXIT(0);
    END;

    PROCEDURE GetPlantCategoryCode@1100525007() : Code[20];
    VAR
      PlantType@1100525000 : Record 11012551;
    BEGIN
      IF (Type = Type::Plant) AND ("Plant/Item" <> '') THEN BEGIN
        GetHeader();
        PlantType.CHANGECOMPANY(ReqRec."Plant Company");
        IF PlantType.GET("Plant/Item") THEN
          EXIT(PlantType."Plant Category");
      END;
      EXIT('');
    END;

    PROCEDURE GetPlantCategoryDescription@1100525008() : Text;
    VAR
      PlantCategory@1100525000 : Record 11072663;
      PlantCategoryCode@1100525001 : Code[20];
    BEGIN
      IF (Type = Type::Plant) AND ("Plant/Item" <> '') THEN BEGIN
        PlantCategoryCode := GetPlantCategoryCode;
        IF PlantCategoryCode <> '' THEN BEGIN
          PlantCategory.CHANGECOMPANY(ReqRec."Plant Company");
          IF PlantCategory.GET(PlantCategoryCode) THEN
            EXIT(PlantCategory.Description);
        END;
      END;
      EXIT('');
    END;

    BEGIN
    END.
  }
}

