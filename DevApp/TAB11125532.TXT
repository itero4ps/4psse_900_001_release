OBJECT Table 11125532 Get Order Line (SMF)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "Project No." = '' THEN
                 InitRecord();
               TESTFIELD("Project No.");
               ProjectSiteMgt.LogGetOrderLine(1, Rec); //**4PS.n
             END;

    OnModify=BEGIN
               ProjectSiteMgt.LogGetOrderLine(2, Rec); //**4PS.n
             END;

    OnDelete=BEGIN
               ProjectSiteMgt.LogGetOrderLine(3, Rec); //**4PS.n
             END;

    CaptionML=ENU=Get Order Line (Site Manager Form);
  }
  FIELDS
  {
    { 10  ;   ;Get Order No.       ;Code20        ;TableRelation="Get Order (SMF)";
                                                   CaptionML=ENU=Get Order No. }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 30  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   CaptionML=ENU=Project No.;
                                                   Editable=No }
    { 40  ;   ;Extension Contract  ;Code10        ;TableRelation="Extension Contract"."Contract No." WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Extension Contract Description");
                                                              END;

                                                   CaptionML=ENU=Extension Contract }
    { 41  ;   ;Extension Contract Description;Text50;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Extension Contract".Description WHERE (Project No.=FIELD(Project No.),
                                                                                                              Contract No.=FIELD(Extension Contract)));
                                                   CaptionML=ENU=Extension Contract Description;
                                                   Editable=No }
    { 50  ;   ;Plot No.            ;Code10        ;TableRelation=Plot."Plot No." WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=ENU=Plot No. }
    { 60  ;   ;Element             ;Code20        ;TableRelation="Project Element".Element WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=BEGIN
                                                                IF Element <> '' THEN BEGIN
                                                                  ElementFormat.FormatElem(Element,2,'');
                                                                  ProjElemRec.GET("Project No.",Element);
                                                                  ProjElemRec.CheckProjectElementBlocked;
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Element }
    { 61  ;   ;Element Description ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Element".Description WHERE (Project No.=FIELD(Project No.),
                                                                                                           Element=FIELD(Element)));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Element Description");
                                                              END;

                                                   CaptionML=ENU=Element Description;
                                                   Editable=No }
    { 70  ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                IF ("Item No." <> xRec."Item No.") AND ("Item No." <> '') THEN BEGIN
                                                                  ValidateItem(ItemTypeOpt::Item);
                                                                  IF CurrFieldNo = FIELDNO("Item No.") THEN
                                                                    ValidateVendor;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Item No. }
    { 80  ;   ;Manufacturer        ;Code15        ;TableRelation="ETIM Vendor (Central Mgt)";
                                                   CaptionML=ENU=Manufacturer }
    { 81  ;   ;Manufacturer Name   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ETIM Vendor (Central Mgt)".Name WHERE (Code=FIELD(Manufacturer)));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Manufacturer Name");
                                                              END;

                                                   CaptionML=ENU=Manufacturer Name;
                                                   Editable=No }
    { 85  ;   ;Basic Item          ;Code20        ;TableRelation="Basic Item"."Product Code" WHERE (Manufacturer=FIELD(Manufacturer));
                                                   OnValidate=BEGIN
                                                                IF ("Basic Item" <> xRec."Basic Item") AND ("Basic Item" <> '') THEN BEGIN
                                                                  ValidateItem(ItemTypeOpt::"Basic Item");
                                                                  IF CurrFieldNo = FIELDNO("Basic Item") THEN
                                                                    ValidateVendor;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Basic Item }
    { 90  ;   ;Vendor (Trade Item) ;Code15        ;TableRelation="ETIM Vendor (Central Mgt)";
                                                   OnValidate=VAR
                                                                lvExecValidate@1100485000 : Boolean;
                                                              BEGIN
                                                                IF ("Vendor (Trade Item)" <> xRec."Vendor (Trade Item)") AND ("Vendor (Trade Item)" <> '') THEN BEGIN
                                                                  IF "Basic Item" <> '' THEN BEGIN
                                                                    "Trade Item" := '';
                                                                    lvExecValidate := TRUE;
                                                                  END;
                                                                  IF "Trade Item" <> '' THEN BEGIN
                                                                    VALIDATE("Trade Item");
                                                                    lvExecValidate := TRUE;
                                                                  END;
                                                                  //db.sn, 17-12-10: M18021
                                                                  IF lvExecValidate THEN BEGIN
                                                                    IF TradeItemRec.CheckReplaceVendor(
                                                                      xRec."Vendor (Trade Item)", xRec."Trade Item",
                                                                      "Vendor (Trade Item)", "Trade Item") THEN
                                                                      ValidateItem(ItemTypeOpt::"Trade Item")
                                                                    ELSE
                                                                      ValidateItem(ItemTypeOpt::"Trade Vendor");
                                                                  END;
                                                                  //db.en, 17-12-10: M18021
                                                                END;
                                                                CALCFIELDS("Vendor Name (Trade Item)");
                                                              END;

                                                   CaptionML=ENU=Vendor (Trade Item) }
    { 91  ;   ;Vendor Name (Trade Item);Text50    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ETIM Vendor (Central Mgt)".Name WHERE (Code=FIELD("Vendor (Trade Item)")));
                                                   CaptionML=ENU=Vendor Name (Trade Item);
                                                   Editable=No }
    { 95  ;   ;Trade Item          ;Code20        ;TableRelation="Trade Item"."Item Code" WHERE (Vendor=FIELD("Vendor (Trade Item)"));
                                                   OnValidate=BEGIN
                                                                IF ("Trade Item" <> xRec."Trade Item") AND ("Trade Item" <> '') THEN
                                                                  ValidateItem(ItemTypeOpt::"Trade Item");
                                                              END;

                                                   CaptionML=ENU=Trade Item }
    { 110 ;   ;Cost Type           ;Option        ;InitValue=Material;
                                                   CaptionML=ENU=Cost Type;
                                                   OptionCaptionML=ENU=,,Material,Subcontracting,Plant,Sundry;
                                                   OptionString=,,Material,Subcontracting,Plant,Sundry }
    { 115 ;   ;Cost Object         ;Code20        ;TableRelation=IF (Cost Type=CONST(Material)) "Dimension Value".Code WHERE (Cost Type=FILTER(Material),
                                                                                                                              Global Dimension No.=CONST(2),
                                                                                                                              Project Filter=FIELD(Project No.))
                                                                                                                              ELSE IF (Cost Type=CONST(Subcontracting)) "Dimension Value".Code WHERE (Cost Type=FILTER(Subcontracting),
                                                                                                                                                                                                      Global Dimension No.=CONST(2),
                                                                                                                                                                                                      Project Filter=FIELD(Project No.))
                                                                                                                                                                                                      ELSE IF (Cost Type=CONST(Plant)) "Dimension Value".Code WHERE (Cost Type=FILTER(Plant),
                                                                                                                                                                                                                                                                     Global Dimension No.=CONST(2),
                                                                                                                                                                                                                                                                     Project Filter=FIELD(Project No.))
                                                                                                                                                                                                                                                                     ELSE IF (Cost Type=CONST(Sundry)) "Dimension Value".Code WHERE (Cost Type=FILTER(Sundry),
                                                                                                                                                                                                                                                                                                                                     Global Dimension No.=CONST(2),
                                                                                                                                                                                                                                                                                                                                     Project Filter=FIELD(Project No.));
                                                   OnValidate=BEGIN
                                                                IF ("Cost Object" <> '') AND ("Cost Object" <> xRec."Cost Object") AND ("Item No." + "Trade Item" + "Basic Item" = '') THEN
                                                                  GetDefaultsCostObject();
                                                              END;

                                                   CaptionML=ENU=Cost Object }
    { 120 ;   ;Cost Component      ;Code20        ;TableRelation="Cost Component";
                                                   CaptionML=ENU=Cost Component }
    { 130 ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 131 ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
    { 140 ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE(Amount);
                                                              END;

                                                   CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5 }
    { 150 ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure";
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO("Unit of Measure") THEN
                                                                  IF "Unit of Measure" <>  xRec."Unit of Measure" THEN
                                                                    CheckItemUnitConversion(Rec, xRec);
                                                              END;

                                                   OnLookup=BEGIN
                                                              HandleLookupUnit;
                                                            END;

                                                   CaptionML=ENU=Unit of Measure }
    { 160 ;   ;Price               ;Decimal       ;OnValidate=BEGIN
                                                                IF "Gross Price" <> 0 THEN BEGIN
                                                                  IF ("Item No." + "Basic Item" + "Trade Item" = '') AND ("Discount %" = 0) THEN
                                                                    "Gross Price" := Price
                                                                  ELSE
                                                                    "Discount %" := (("Gross Price" - Price) / "Gross Price") * 100;
                                                                END ELSE BEGIN
                                                                  IF "Discount %" <> 100 THEN BEGIN
                                                                    "Gross Price" := Price / ((100 - "Discount %") / 100);
                                                                  END ELSE BEGIN
                                                                    "Gross Price" := Price;
                                                                  END;
                                                                END;
                                                                VALIDATE(Amount);
                                                              END;

                                                   CaptionML=ENU=Price;
                                                   AutoFormatType=2 }
    { 170 ;   ;Gross Price         ;Decimal       ;OnValidate=BEGIN
                                                                CalculateNettPrice;
                                                              END;

                                                   CaptionML=ENU=Gross Price;
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 180 ;   ;Discount %          ;Decimal       ;OnValidate=BEGIN
                                                                CalculateNettPrice;
                                                              END;

                                                   CaptionML=ENU=Discount %;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 190 ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                Amount := ROUND(Quantity * Price);
                                                              END;

                                                   CaptionML=ENU=Amount;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 200 ;   ;Price Agreement     ;Boolean       ;OnValidate=BEGIN
                                                                CheckPriceAgreement(TRUE);
                                                              END;

                                                   CaptionML=ENU=Price Agreement }
    { 210 ;   ;Purchase Action     ;Code10        ;TableRelation="Project Purchase Action".Code WHERE (Project No.=FIELD(Project No.),
                                                                                                       Status=FILTER(>=Approved));
                                                   CaptionML=ENU=Purchase Action }
    { 230 ;   ;External Text       ;Text250       ;OnValidate=BEGIN
                                                                "External Text Block" := "External Text" <> '';
                                                              END;

                                                   CaptionML=ENU=External Text }
    { 231 ;   ;External Text Block ;Boolean       ;CaptionML=ENU=External Text Block;
                                                   Editable=No }
    { 240 ;   ;Comments for Logistics;Text50      ;CaptionML=ENU=Comments for Logistics }
  }
  KEYS
  {
    {    ;Get Order No.,Line No.                  ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ProjRec@1100525027 : Record 11072003;
      ItemRec@1100525026 : Record 27;
      BasicItemRec@1100525025 : Record 11012316;
      TradeItemRec@1100525024 : Record 11012317;
      ProjElemRec@1100525022 : Record 11012010;
      OrderHeadRec@1100525000 : Record 11125531;
      DimValRec@1100525019 : Record 349;
      PurchSetup@1100525018 : Record 312;
      DimMgt@1100525016 : Codeunit 408;
      ElementFormat@1100525015 : Codeunit 11012022;
      ValidateCu@1100525014 : Codeunit 11012033;
      ItemTypeOpt@1100525011 : 'Item,Basic Item,Trade Item,Trade Vendor';
      ProjectSiteMgt@1100528300 : Codeunit 11012282;

    PROCEDURE InitRecord@1100525000();
    BEGIN
      GetHeader();
      "Project No." := OrderHeadRec."Project No.";

      "Price Agreement" := FALSE;
      CheckPriceAgreement(FALSE);
    END;

    PROCEDURE GetHeader@1100525001();
    BEGIN
      IF "Get Order No."  <> '' THEN
        OrderHeadRec.GET("Get Order No.");
    END;

    PROCEDURE CheckPriceAgreement@1100525002(IErrorMode@1100525000 : Boolean);
    BEGIN
      PurchSetup.GET;
      CASE PurchSetup."Price Agreement" OF
        PurchSetup."Price Agreement"::" ":
          BEGIN
            IF IErrorMode THEN
              TESTFIELD("Price Agreement", FALSE)
            ELSE
              "Price Agreement" := FALSE;
          END;
        PurchSetup."Price Agreement"::Company:
          BEGIN
            IF IErrorMode THEN
              TESTFIELD("Price Agreement", TRUE)
            ELSE
              "Price Agreement" := TRUE;
          END;
      END;
    END;

    PROCEDURE ValidateItem@31(LTypeArtOpt@11012000 : 'Item,Basic Item,Trade Item');
    VAR
      DummyDat@11012001 : Date;
      lvText000@1100485000 : TextConst 'ENU=Trade Item %1 is expired: Vendor %2 suggested %3 as alternative Item.';
      lvRefDate@1100485004 : Date;
      lvDiscRef1@1100485003 : Code[20];
      lvDiscRef2@1100485002 : Code[20];
    BEGIN
      GetReferenceData(lvRefDate, lvDiscRef1, lvDiscRef2);

      ValidateCu.ValidateItem(LTypeArtOpt,"Trade Item","Item No.",Manufacturer,"Vendor (Trade Item)",
                              "Basic Item","Cost Object",Description,"Unit of Measure",Price,
                              "Discount %",DummyDat,"Gross Price","Description 2","Cost Component",
                              lvDiscRef1,lvDiscRef2,lvRefDate,'');

      IF ("Item No." + "Trade Item" + "Basic Item" <> '') AND ("Cost Type" <> "Cost Type"::Material) THEN
        "Cost Type" := "Cost Type"::Material;

      VALIDATE("Cost Component");

      IF "Trade Item" <> '' THEN BEGIN
        TradeItemRec.GET("Vendor (Trade Item)", "Trade Item");
        IF TradeItemRec.Expired THEN BEGIN
          IF TradeItemRec."Item Code (Successor)" = '' THEN BEGIN
            TradeItemRec.TESTFIELD(Expired,FALSE);
          END ELSE BEGIN
            TradeItemRec.CALCFIELDS("Vendor Name");
            ERROR(lvText000, "Trade Item", TradeItemRec."Vendor Name", TradeItemRec."Item Code (Successor)");
          END;
        END;
      END ELSE BEGIN
        IF "Basic Item" <> '' THEN BEGIN
          BasicItemRec.GET(Manufacturer, "Basic Item");
          BasicItemRec.TESTFIELD(Expired,FALSE);
        END ELSE BEGIN
          IF "Item No." <> '' THEN BEGIN
            ItemRec.GET("Item No.");
            ItemRec.TESTFIELD("Purchase Blocked",FALSE);
            ItemRec.TESTFIELD(Blocked,FALSE);
            VALIDATE("External Text", ItemRec.Text);
          END;
        END;
      END;
    END;

    PROCEDURE ValidateVendor@6506();
    VAR
      VendorRec@1210190000 : Record 23;
      lvVendor@1100485000 : Code[20];
      SaveItem@1100525004 : Code[20];
      SaveManufacturer@1100525003 : Code[20];
      SaveBasicItem@1100525002 : Code[20];
      SaveVendor@1100525001 : Code[20];
      SaveTradeItem@1100525000 : Code[20];
      SaveDesc@1100525005 : Text[100];
    BEGIN
      lvVendor := '';
      IF ItemRec.GET("Item No.") THEN
        lvVendor := ItemRec."Vendor No.";

      ProjRec.GET("Project No.");
      IF ProjRec."Project Supplier" <> '' THEN
        lvVendor := ProjRec."Project Supplier";

      IF NOT VendorRec.GET(lvVendor) THEN VendorRec.INIT;
      lvVendor := VendorRec."Vendor (Trade Item)";

      SaveItem := "Item No.";
      SaveManufacturer := Manufacturer;
      SaveBasicItem := "Basic Item";
      SaveVendor := "Vendor (Trade Item)";
      SaveTradeItem := "Trade Item";
      SaveDesc := Description;

      IF (lvVendor = '') OR (lvVendor = SaveVendor) THEN EXIT;

      xRec."Vendor (Trade Item)" := '';
      VALIDATE("Vendor (Trade Item)", lvVendor);

      IF (SaveItem <> "Item No.") THEN BEGIN
        "Item No." := SaveItem;
        Description := SaveDesc;
        IF "Item No." <> '' THEN
          ValidateItem(ItemTypeOpt::Item);
      END;

      IF (SaveManufacturer <> Manufacturer) OR (SaveBasicItem <> "Basic Item") THEN BEGIN
        Manufacturer := SaveManufacturer;
        "Basic Item" := SaveBasicItem;
        Description := SaveDesc;
        IF "Basic Item" <> '' THEN
          ValidateItem(ItemTypeOpt::"Basic Item");
      END;

      IF NOT TradeItemRec.GET("Vendor (Trade Item)", "Trade Item") THEN BEGIN
        "Vendor (Trade Item)" := SaveVendor;
        "Trade Item" := SaveTradeItem;
        Description := SaveDesc;
        IF "Trade Item" <> '' THEN
          ValidateItem(ItemTypeOpt::"Trade Item");
      END;
    END;

    PROCEDURE CheckItemUnitConversion@1210190008(VAR MainNewRec@1210190006 : Record 11125532;MainOldRec@1210190007 : Record 11125532);
    VAR
      ItemRec@1210190004 : Record 27;
      UnitFactor@1210190005 : Decimal;
      UnitFactorOld@1210190003 : Decimal;
      UnitFactorNew@1210190002 : Decimal;
      UnitControl@1210190001 : Codeunit 5402;
    BEGIN
      WITH MainNewRec DO BEGIN
        UnitFactorOld := 1;
        UnitFactorNew := 1;
        IF "Trade Item" <> '' THEN BEGIN
          ValidateCu.ValidateUnit(ItemTypeOpt::"Trade Item",
            "Item No.","Basic Item","Trade Item",Manufacturer,"Vendor (Trade Item)",
            Quantity,"Unit of Measure",UnitFactorNew);
        END ELSE BEGIN
          IF "Basic Item" <> '' THEN BEGIN
            ValidateCu.ValidateUnit(ItemTypeOpt::"Basic Item",
              "Item No.","Basic Item","Trade Item",Manufacturer,"Vendor (Trade Item)",
              Quantity,"Unit of Measure",UnitFactorNew);
          END ELSE BEGIN
            IF "Item No." <> '' THEN BEGIN
              ItemRec.GET("Item No.");
              UnitFactorOld := UnitControl.GetQtyPerUnitOfMeasure(ItemRec, MainOldRec."Unit of Measure");
              UnitFactorNew := UnitControl.GetQtyPerUnitOfMeasure(ItemRec, "Unit of Measure");
              UnitFactor := UnitFactorOld;
              ValidateCu.ValidateUnit(ItemTypeOpt::Item,
                "Item No.","Basic Item","Trade Item",Manufacturer,"Vendor (Trade Item)",
                Quantity,"Unit of Measure",UnitFactor);
            END;
          END;
        END;
        IF (UnitFactorNew * UnitFactorOld) <> 0 THEN BEGIN
          IF "Gross Price" <> 0 THEN
            VALIDATE("Gross Price", ("Gross Price" * UnitFactorNew / UnitFactorOld))
          ELSE
            VALIDATE(Price, (Price * UnitFactorNew / UnitFactorOld));
        END;
      END;
    END;

    PROCEDURE HandleLookupUnit@1210190004();
    VAR
      ItemUnitRec@1210190000 : Record 5404;
      lvUnit@1210190001 : Code[10];
    BEGIN
      lvUnit := ItemUnitRec.HandleLookupUnit("Item No.", "Basic Item", "Trade Item", Manufacturer, "Vendor (Trade Item)");
      IF (lvUnit <> '') AND (lvUnit <> "Unit of Measure") THEN BEGIN
        xRec."Unit of Measure" := "Unit of Measure";
        VALIDATE("Unit of Measure", lvUnit);
      END;
    END;

    PROCEDURE CalculateNettPrice@1210190005();
    BEGIN
      IF "Gross Price" <> 0 THEN BEGIN
        Price := "Gross Price" - (("Gross Price"/100) * "Discount %");
        VALIDATE(Amount);
      END;
    END;

    PROCEDURE GetDefaultsCostObject@3();
    BEGIN
      DimMgt.GetDimValueRec(2, "Cost Object", DimValRec, TRUE, "Project No.");
      Description := DimValRec.Name;
      "Description 2" := '';
      "Unit of Measure" := DimValRec."Unit of Measure";
      "Cost Component" := DimValRec."Cost Component";
      Price := DimValRec.Price; // C-026158.n
    END;

    PROCEDURE GetReferenceData@1100485008(VAR lvRefDate@1100485002 : Date;VAR lvDiscRef1@1100485001 : Code[20];VAR lvDiscRef2@1100485000 : Code[20]);
    BEGIN
      ProjRec.GET("Project No.");
      lvRefDate := ValidateCu.GetRefDateProject(ProjRec);
      lvDiscRef1 := ProjRec."Purch Discount Term Group 1";
      lvDiscRef2 := ProjRec."Purch Discount Term Group 2";
    END;

    BEGIN
    {
      //* 30-06-2009: Most field and functions are copied from table 11012055 (Advice Order Line).
    }
    END.
  }
}

