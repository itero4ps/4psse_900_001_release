OBJECT Table 11125679 Estimate Element (RAW)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               Estimate@1100525001 : Record 11012151;
               EstimateElementRAW@1100525000 : Record 11125679;
             BEGIN
               IF "Construction Spec. Line No." = '00' THEN BEGIN
                 EstimateElementRAW.SETRANGE("Estimate No.", "Estimate No.");
                 EstimateElementRAW.SETRANGE("Element No.", "Element No.");
                 IF NOT EstimateElementRAW.ISEMPTY THEN
                   ERROR(Text000, FIELDCAPTION("Element No."), "Element No.", Estimate.TABLECAPTION, "Estimate No.");
               END ELSE BEGIN
                 IF "Construction Spec. Line No." = '' THEN
                   VALIDATE("Construction Spec. Line No.", '09');
                 IF Activity = '' THEN
                   Activity := GetActivityFrom00; //no validate
               END;
             END;

    OnDelete=VAR
               EstimateRAWSetup@1100525004 : Record 11125673;
               Estimate@1100525002 : Record 11012151;
               EstimateElementRAW@1100525001 : Record 11125679;
               EstimateLineRAW@1100525000 : Record 11125680;
               EstElemVATSpecRAW@1100525003 : Record 11125678;
               CommentLineRAW@1100525005 : Record 11125684;
             BEGIN
               IF Type = Type::"Commitment (Main Line)" THEN BEGIN
                 EstimateElementRAW.SETCURRENTKEY("Estimate No.", "Element No.");
                 EstimateElementRAW.SETRANGE("Estimate No.", "Estimate No.");
                 //EstimateElementRAW.SETFILTER("Element No.", '%1..%2', COPYSTR("Element No.",1,5)+'1', COPYSTR("Element No.",1,5)+'9'); //C026972.o
                 EstimateElementRAW.SETRANGE("Element No.", COPYSTR("Element No.",1,5)+'1', GetMaxSubElementNo("Estimate No.","Element No.")); //C026972.n
                 EstimateElementRAW.DELETEALL(TRUE);
               END;

               EstimateRAWSetup.GET;
               IF ("Element No." = EstimateRAWSetup."Element No.(Surcharge)") AND (EstimateRAWSetup."Element No.(Surcharge)" <> '') THEN BEGIN
                 Estimate.GET("Estimate No.");
                 Estimate."Percentage (Surcharge)" := 0;
                 Estimate.MODIFY(TRUE);
               END;
               IF ("Element No." = EstimateRAWSetup."Element No.(Profit/Risc)") AND (EstimateRAWSetup."Element No.(Profit/Risc)" <> '') THEN BEGIN
                 Estimate.GET("Estimate No.");
                 Estimate."Percentage (Profit/Risk)" := 0;
                 Estimate.MODIFY(TRUE);
               END;

               IF "Construction Spec. Line No." = '00' THEN BEGIN
                 // Delete other lines belonging to same element
                 EstimateElementRAW.RESET;
                 EstimateElementRAW.SETCURRENTKEY("Estimate No.", "Element No.", "Construction Spec. Line No.");
                 EstimateElementRAW.SETRANGE("Estimate No.", "Estimate No.");
                 EstimateElementRAW.SETRANGE("Element No.", "Element No.");
                 EstimateElementRAW.SETFILTER("Construction Spec. Line No.", '<>%1', '00');  //db, 14-04-16 (field not properly filled for element with defi-codes)
                 EstimateElementRAW.DELETEALL;

                 //db, 10-05-16: deleting element for defi-codes should not remove estimate details
                 EstimateLineRAW.SETRANGE("Estimate No.", "Estimate No.");
                 EstimateLineRAW.SETRANGE("Element No.", "Element No.");
                 EstimateLineRAW.DELETEALL;

                 CommentLineRAW.SETRANGE("Table No.", DATABASE::"Estimate Line (RAW)");  //DP01086 Delete comment estimate line
                 CommentLineRAW.SETRANGE("Estimate No.", "Estimate No.");
                 CommentLineRAW.SETRANGE("Element No.", "Element No.");
                 CommentLineRAW.DELETEALL;

                 EstElemVATSpecRAW.SETRANGE("Estimate No.", "Estimate No.");
                 EstElemVATSpecRAW.SETRANGE("Element No.", "Element No.");
                 EstElemVATSpecRAW.DELETEALL;

                 CommentLineRAW.DeleteEstElemLineComment("Estimate No.", "Element No.", "Line No.");  //DP01086.n
               END;
             END;

    CaptionML=ENU=Estimate Element (RAW);
    LookupPageID=Page11125683;
    DrillDownPageID=Page11125683;
  }
  FIELDS
  {
    { 1   ;   ;Estimate No.        ;Code20        ;TableRelation=Estimate;
                                                   OnValidate=VAR
                                                                Estimate@1100525000 : Record 11012151;
                                                              BEGIN
                                                                IF NOT Estimate.GET("Estimate No.") THEN
                                                                  Estimate.INIT;

                                                                "Surcharge % Labor" := Estimate."Surcharge % Labor";
                                                                "Surcharge % Material" := Estimate."Surcharge % Material";
                                                                "Surcharge % Subcontracting" := Estimate."Surcharge % Subcontracting";
                                                                "Surcharge % Plant" := Estimate."Surcharge % Plant";
                                                              END;

                                                   CaptionML=ENU=Estimate No. }
    { 2   ;   ;Element No.         ;Text6         ;OnValidate=VAR
                                                                EstimateElementRAW@1100525000 : Record 11125679;
                                                                CommitmentNo@1100525001 : Text[6];
                                                              BEGIN
                                                                IF STRLEN("Element No.") = 6 THEN BEGIN
                                                                  IF COPYSTR("Element No.", 6, 1) <> '0' THEN BEGIN
                                                                    CommitmentNo := COPYSTR("Element No.", 1, 5) + '0';
                                                                    EstimateElementRAW.SETRANGE("Estimate No.", "Estimate No.");
                                                                    EstimateElementRAW.SETRANGE("Element No.", CommitmentNo);
                                                                    //IF EstimateElementRAW.ISEMPTY THEN BEGIN  //C026972.o
                                                                    //  ERROR(Text002, CommitmentNo);
                                                                    IF EstimateElementRAW.ISEMPTY THEN BEGIN  //C026972.n
                                                                      IF COPYSTR("Element No.", 1, 1) = '9' THEN
                                                                        ERROR(Text002, CommitmentNo)
                                                                      ELSE BEGIN
                                                                        EstimateElementRAW.SETRANGE("Element No.", COPYSTR(CommitmentNo,1,4)+'00', CommitmentNo);
                                                                        EstimateElementRAW.FILTERGROUP(9);
                                                                        EstimateElementRAW.SETFILTER("Element No.", COPYSTR(CommitmentNo,1,4)+'?0');
                                                                        EstimateElementRAW.FILTERGROUP(0);
                                                                        IF EstimateElementRAW.ISEMPTY THEN
                                                                          ERROR(Text002, CommitmentNo);
                                                                      END;
                                                                    END;
                                                                  END;
                                                                END;
                                                                UpdateIndentation;
                                                                UpdateCommitment;
                                                                UpdateType;

                                                                IF (STRLEN(xRec."Element No.") = 6) AND (STRLEN("Element No.") < 6) THEN BEGIN
                                                                  Activity := '';
                                                                  "Internal Unit of Measure Code" := '';
                                                                  "External Unit of Measure Code" := '';
                                                                  Quantity := 0;
                                                                  "Quantity Type" := "Quantity Type"::" ";
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Element No.;
                                                   NotBlank=Yes }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 10  ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,,,,,Chapter,,,,,Paragraph,,,,,Subparagraph,,,,,Subsubparagraph,,,,,Commitment (Main Line),,,,,Commitment (Sub Line),,,,,Commitment Description (Main Line),,,,,Commitment Description (Sub Line)";
                                                   OptionString=[ ,,,,,Chapter,,,,,Paragraph,,,,,Subparagraph,,,,,Subsubparagraph,,,,,Commitment (Main Line),,,,,Commitment (Sub Line),,,,,Commitment Description (Main Line),,,,,Commitment Description (Sub Line)];
                                                   Editable=No }
    { 15  ;   ;Source              ;Option        ;CaptionML=ENU=Source;
                                                   OptionCaptionML=ENU=" ,,,,,Construction Specification";
                                                   OptionString=[ ,,,,,Construction Specification];
                                                   Editable=No }
    { 17  ;   ;Status Code         ;Code10        ;TableRelation="Estimate Element Status (RAW)";
                                                   CaptionML=ENU=Status Code }
    { 20  ;   ;Defi Code Position 1;Code1         ;OnValidate=BEGIN
                                                                UpdateCommitment;
                                                                UpdateType;
                                                              END;

                                                   CaptionML=ENU=Defi Code Position 1 }
    { 21  ;   ;Defi Code Position 2;Code1         ;OnValidate=BEGIN
                                                                UpdateCommitment;
                                                                UpdateType;
                                                              END;

                                                   CaptionML=ENU=Defi Code Position 2 }
    { 22  ;   ;Defi Code Position 3;Code1         ;OnValidate=BEGIN
                                                                UpdateCommitment;
                                                                UpdateType;
                                                              END;

                                                   CaptionML=ENU=Defi Code Position 3 }
    { 23  ;   ;Defi Code Position 4;Code1         ;OnValidate=BEGIN
                                                                UpdateCommitment;
                                                                UpdateType;
                                                              END;

                                                   CaptionML=ENU=Defi Code Position 4 }
    { 24  ;   ;Defi Code Position 5;Code1         ;OnValidate=BEGIN
                                                                UpdateCommitment;
                                                                UpdateType;
                                                              END;

                                                   CaptionML=ENU=Defi Code Position 5 }
    { 25  ;   ;Defi Code Position 6;Code1         ;OnValidate=BEGIN
                                                                UpdateCommitment;
                                                                UpdateType;
                                                              END;

                                                   CaptionML=ENU=Defi Code Position 6 }
    { 30  ;   ;Construction Spec. Line No.;Code2  ;OnValidate=BEGIN
                                                                UpdateCommitment;
                                                                UpdateType;
                                                              END;

                                                   CaptionML=ENU=Construction Spec. Line No. }
    { 40  ;   ;Comments            ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Comment Line RAW" WHERE (Table No.=CONST(11125679),
                                                                                               Part Group=CONST(),
                                                                                               Activity=CONST(),
                                                                                               Estimate No.=FIELD(Estimate No.),
                                                                                               Element No.=FIELD(Element No.),
                                                                                               Estimate Element Line=FIELD(Line No.),
                                                                                               Estimate Line No.=CONST(0)));
                                                   CaptionML=ENU=Comments;
                                                   BlankZero=Yes;
                                                   Description=Number of Comment Lines;
                                                   Editable=No }
    { 55  ;   ;Activity            ;Code6         ;TableRelation="Constr. Spec. Activity (RAW)".Activity;
                                                   OnValidate=VAR
                                                                EstimateGroup@1100525000 : Record 11012157;
                                                                EstimateLineRAW@1100525001 : Record 11125680;
                                                                ConstrSpecActivityRAW@1100525002 : Record 11125682;
                                                              BEGIN
                                                                //db, 29-03-16: skip relation with recipegroup; use new table relation
                                                                IF EstimateGroup.GET(Activity, EstimateGroup.Type::Recipe) THEN BEGIN
                                                                  Text := EstimateGroup.Description;
                                                                  "External Unit of Measure Code" := EstimateGroup."External UOM Code (RAW)";
                                                                  "Internal Unit of Measure Code" := EstimateGroup."Internal UOM Code (RAW)";
                                                                  "Units Inherited from Activity" :=
                                                                    (EstimateGroup."External UOM Code (RAW)" <> '') AND
                                                                    (EstimateGroup."Internal UOM Code (RAW)" <> '')
                                                                END;

                                                                EstimateRAW.GET("Estimate No.");
                                                                IF ConstrSpecActivityRAW.GET(EstimateRAW."Part Group", Activity) THEN BEGIN
                                                                  Text := ConstrSpecActivityRAW.Description;  //db, 01-04-16
                                                                END;

                                                                VALIDATE("Recipe No.", '');

                                                                EstimateLineRAW.SETRANGE("Estimate No.", "Estimate No.");
                                                                EstimateLineRAW.SETRANGE("Element No.", "Element No.");
                                                                EstimateLineRAW.SETRANGE(Source, EstimateLineRAW.Source::User);

                                                                IF NOT EstimateLineRAW.ISEMPTY THEN
                                                                  IF CONFIRM(Text001, FALSE, FIELDCAPTION(Activity), FIELDCAPTION("Recipe No."), TABLECAPTION, "Element No.") THEN
                                                                    EstimateLineRAW.DELETEALL(TRUE);

                                                                CopyActivityCommentRAW(xRec.Activity, Activity, FALSE, '');  //DP01086.n
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupActivity;  //db, 18-03-16
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Activity }
    { 57  ;   ;Commitment          ;Boolean       ;OnValidate=BEGIN
                                                                UpdateType;
                                                              END;

                                                   CaptionML=ENU=Commitment }
    { 60  ;   ;Text                ;Text50        ;CaptionML=ENU=Text }
    { 65  ;   ;Title               ;Boolean       ;CaptionML=ENU=Title }
    { 67  ;   ;Indentation         ;Integer       ;CaptionML=ENU=Indentation;
                                                   Editable=No }
    { 70  ;   ;Quantity            ;Decimal       ;OnValidate=VAR
                                                                EstimateLineRAW@1100525000 : Record 11125680;
                                                              BEGIN
                                                                "Calculated Amount" := Quantity * "Calculated Unit Price";

                                                                IF "Construction Spec. Line No." = '00' THEN BEGIN
                                                                  EstimateLineRAW.SETRANGE("Estimate No.", "Estimate No.");
                                                                  EstimateLineRAW.SETRANGE("Element No.", "Element No.");

                                                                  IF EstimateLineRAW.FINDSET(TRUE, FALSE) THEN
                                                                    REPEAT
                                                                      EstimateLineRAW.VALIDATE("Part Quantity", Quantity);
                                                                      EstimateLineRAW.MODIFY(TRUE);
                                                                    UNTIL EstimateLineRAW.NEXT = 0;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 75  ;   ;Actual Quantity     ;Decimal       ;CaptionML=ENU=Actual Quantity;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 80  ;   ;External Unit of Measure Code;Code4;TableRelation="Estimate (RAW) Unit Mapping";
                                                   OnValidate=VAR
                                                                EstimateRAWUnitMapping@1100525000 : Record 11125675;
                                                              BEGIN
                                                                IF NOT EstimateRAWUnitMapping.GET("External Unit of Measure Code") THEN
                                                                  EstimateRAWUnitMapping.INIT;

                                                                "Internal Unit of Measure Code" := EstimateRAWUnitMapping."Internal Unit of Measure Code";
                                                              END;

                                                   CaptionML=ENU=External Unit of Measure Code }
    { 81  ;   ;Internal Unit of Measure Code;Code10;
                                                   TableRelation="Unit of Measure";
                                                   OnValidate=VAR
                                                                EstimateRAWUnitMapping@1100525000 : Record 11125675;
                                                              BEGIN
                                                                "External Unit of Measure Code" := '';

                                                                IF "Internal Unit of Measure Code" <> '' THEN BEGIN
                                                                  EstimateRAWUnitMapping.SETCURRENTKEY("Internal Unit of Measure Code");
                                                                  EstimateRAWUnitMapping.SETRANGE("Internal Unit of Measure Code", "Internal Unit of Measure Code");
                                                                  EstimateRAWUnitMapping.FINDFIRST; // crash & burn if mapping not found

                                                                  IF EstimateRAWUnitMapping.COUNT > 1 THEN
                                                                    IF PAGE.RUNMODAL(0, EstimateRAWUnitMapping) <> ACTION::LookupOK THEN
                                                                      ERROR('');

                                                                  "External Unit of Measure Code" := EstimateRAWUnitMapping."External Unit of Measure Code";
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Internal Unit of Measure Code }
    { 82  ;   ;Units Inherited from Activity;Boolean;
                                                   CaptionML=ENU=Units Inherited from Activity;
                                                   Editable=No }
    { 90  ;   ;Quantity Type       ;Option        ;CaptionML=ENU=Quantity Type;
                                                   OptionCaptionML=ENU=" ,V,N,M,O,A,L,T,I";
                                                   OptionString=[ ,V,N,M,O,A,L,T,I] }
    { 100 ;   ;Calculated Amount   ;Decimal       ;OnValidate=VAR
                                                                EstimateLineRAW@1100525000 : Record 11125680;
                                                              BEGIN
                                                                "Calculated Unit Price" := SafeDivision("Calculated Amount", Quantity);

                                                                IF IsEuroElement THEN BEGIN
                                                                  Quantity := "Calculated Amount";
                                                                  "Actual Quantity" := "Actual Amount";
                                                                  "Calculated Unit Price" := 1;
                                                                  "Actual Unit Price" := 1;

                                                                  IF "Construction Spec. Line No." = '00' THEN BEGIN
                                                                    EstimateLineRAW.SETRANGE("Estimate No.", "Estimate No.");
                                                                    EstimateLineRAW.SETRANGE("Element No.", "Element No.");

                                                                    IF EstimateLineRAW.FINDSET(TRUE, FALSE) THEN
                                                                      REPEAT
                                                                        EstimateLineRAW.VALIDATE("Part Quantity", Quantity);
                                                                        EstimateLineRAW.MODIFY;
                                                                      UNTIL EstimateLineRAW.NEXT = 0;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Calculated Amount;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 110 ;   ;Calculated Unit Price;Decimal      ;CaptionML=ENU=Calculated Unit Price;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 120 ;   ;Actual Unit Price   ;Decimal       ;OnValidate=BEGIN
                                                                "Actual Unit Price" := ROUND("Actual Unit Price");
                                                                VALIDATE("Actual Amount", "Actual Unit Price" * Quantity);
                                                              END;

                                                   CaptionML=ENU=Actual Unit Price;
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 130 ;   ;Actual Amount       ;Decimal       ;OnValidate=VAR
                                                                OldSkipValidateActualAmount@1100525000 : Boolean;
                                                              BEGIN
                                                                CASE IsEuroElement OF
                                                                  FALSE:
                                                                    BEGIN
                                                                      "Actual Quantity" := Quantity;
                                                                      "Actual Unit Price" := ROUND(SafeDivision("Actual Amount", "Actual Quantity"));
                                                                    END;
                                                                  TRUE:
                                                                    BEGIN
                                                                      "Actual Unit Price" := 1;
                                                                      "Actual Quantity" := ROUND(SafeDivision("Actual Amount", "Actual Unit Price"));
                                                                    END;
                                                                END;

                                                                OldSkipValidateActualAmount := SkipValidateActualAmount;
                                                                SkipValidateActualAmount := TRUE;
                                                                VALIDATE("Total Surcharge Amount", "Actual Amount" - "Calculated Amount");
                                                                SkipValidateActualAmount := OldSkipValidateActualAmount;
                                                              END;

                                                   CaptionML=ENU=Actual Amount;
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 140 ;   ;Lock Actual Amount for Updates;Boolean;
                                                   OnValidate=VAR
                                                                EstimateElementRAW@1100525000 : Record 11125679;
                                                              BEGIN
                                                                IF "Lock Actual Amount for Updates" THEN
                                                                  TESTFIELD(Type, Type::"Commitment (Main Line)");

                                                                EstimateElementRAW.SETCURRENTKEY("Estimate No.", "Element No.");
                                                                EstimateElementRAW.SETRANGE("Estimate No.", "Estimate No.");
                                                                //EstimateElementRAW.SETFILTER("Element No.", '%1..%2', COPYSTR("Element No.",1,5)+'1', COPYSTR("Element No.",1,5)+'9'); //C026972.o
                                                                EstimateElementRAW.SETRANGE("Element No.", COPYSTR("Element No.",1,5)+'1', GetMaxSubElementNo("Estimate No.","Element No.")); //C026972.n

                                                                IF EstimateElementRAW.FINDSET THEN
                                                                  REPEAT
                                                                    EstimateElementRAW."Lock Actual Amount for Updates" := "Lock Actual Amount for Updates";
                                                                    EstimateElementRAW.UpdateSurcharge;
                                                                    EstimateElementRAW.MODIFY;
                                                                  UNTIL EstimateElementRAW.NEXT = 0;

                                                                UpdateSurcharge;
                                                              END;

                                                   CaptionML=ENU=Lock Actual Amount for Updates }
    { 150 ;   ;Information Notice  ;Boolean       ;CaptionML=ENU=Information Notice }
    { 160 ;   ;Dest. Element No.   ;Text6         ;CaptionML=ENU=Dest. Element No.;
                                                   Description=May only be used in Temporary table/record, used for copy elements }
    { 200 ;   ;Recipe No.          ;Code20        ;TableRelation="Base Recipe".No. WHERE (Recipe Group=FIELD(Activity));
                                                   OnValidate=VAR
                                                                Recipe@1100525004 : Record 11020581;
                                                                EstimateLineRAW@1100525000 : Record 11125680;
                                                                NextLineNo@1100525003 : Integer;
                                                              BEGIN
                                                                // Delete old recipe lines
                                                                EstimateLineRAW.SETCURRENTKEY("Estimate No.", "Element No.", Source);
                                                                EstimateLineRAW.SETRANGE("Estimate No.", "Estimate No.");
                                                                EstimateLineRAW.SETRANGE("Element No.", "Element No.");
                                                                EstimateLineRAW.SETRANGE(Source, EstimateLineRAW.Source::Recipe);
                                                                EstimateLineRAW.DELETEALL(TRUE);

                                                                //EstimateLineRAW.SetShowMessageOnce(TRUE);  //X001

                                                                // Insert new recipe lines
                                                                IF "Recipe No." <> '' THEN BEGIN
                                                                  Recipe.GET(Activity, "Recipe No.");

                                                                  EstimateLineRAW.RESET;
                                                                  EstimateLineRAW.SETRANGE("Estimate No.", "Estimate No.");
                                                                  EstimateLineRAW.SETRANGE("Element No.", "Element No.");
                                                                  IF EstimateLineRAW.FINDLAST THEN
                                                                    NextLineNo := EstimateLineRAW."Line No.";

                                                                  EstimateLineRAW.INIT;
                                                                  EstimateLineRAW."Estimate No." := "Estimate No.";
                                                                  EstimateLineRAW."Element No." := "Element No.";
                                                                  EstimateLineRAW."Line No." := NextLineNo + 10000;
                                                                  EstimateLineRAW.INSERT(TRUE);
                                                                  EstimateLineRAW.Source := EstimateLineRAW.Source::Recipe;
                                                                  EstimateLineRAW."Recipe Type" := EstimateLineRAW."Recipe Type"::"Recipe Header";
                                                                  EstimateLineRAW."Recipe Group" := Recipe."Recipe Group";
                                                                  EstimateLineRAW."Recipe No." := Recipe."No.";
                                                                  EstimateLineRAW.Description := Recipe.Description;
                                                                  EstimateLineRAW."Unit of Measure" := Recipe."Unit of Measure";
                                                                  EstimateLineRAW.Quantity := 1;
                                                                  EstimateLineRAW.VALIDATE("Part Quantity", Quantity);
                                                                  EstimateLineRAW.MODIFY;

                                                                  EstimateLineRAW.AddLineFromStandardRecipe(
                                                                    EstimateLineRAW."Estimate No.", EstimateLineRAW."Element No.",
                                                                    EstimateLineRAW."Recipe Group", EstimateLineRAW."Recipe No.",
                                                                    EstimateLineRAW."Line No.",
                                                                    EstimateLineRAW."Recipe Type"::"Recipe Line",
                                                                    EstimateLineRAW."Part Quantity",
                                                                    EstimateLineRAW.Source);
                                                                END;

                                                                UpdateSurcharge;
                                                              END;

                                                   CaptionML=ENU=Recipe No. }
    { 210 ;   ;Estimate Line Amount;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Estimate Line (RAW)"."Cumulative Total" WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                                   Element No.=FIELD(Element No.)));
                                                   CaptionML=ENU=Estimate Line Amount;
                                                   Editable=No }
    { 300 ;   ;Calculated Amount Labor;Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Estimate Line (RAW)"."Cumulative Labor" WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                                   Element No.=FIELD(Element No.)));
                                                   CaptionML=ENU=Calculated Amount Labor;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 301 ;   ;Calculated Amount Material;Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Estimate Line (RAW)"."Cumulative Material" WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                                      Element No.=FIELD(Element No.)));
                                                   CaptionML=ENU=Calculated Amount Material;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 302 ;   ;Calculated Amount Subcontr.;Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Estimate Line (RAW)"."Cumulative Subcontracting" WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                                            Element No.=FIELD(Element No.)));
                                                   CaptionML=ENU=Calculated Amount Subcontr.;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 303 ;   ;Calculated Amount Plant;Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Estimate Line (RAW)"."Cumulative Plant" WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                                   Element No.=FIELD(Element No.)));
                                                   CaptionML=ENU=Calculated Amount Plant;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 700 ;   ;Surcharge % Labor   ;Decimal       ;OnValidate=BEGIN
                                                                UpdateEstimateLineSurchargePct(FIELDNO("Surcharge % Labor"), "Surcharge % Labor");
                                                                UpdateSurcharge;
                                                              END;

                                                   CaptionML=ENU=Surcharge % Labor;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 701 ;   ;Surcharge % Material;Decimal       ;OnValidate=BEGIN
                                                                UpdateEstimateLineSurchargePct(FIELDNO("Surcharge % Material"), "Surcharge % Material");
                                                                UpdateSurcharge;
                                                              END;

                                                   CaptionML=ENU=Surcharge % Material;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 702 ;   ;Surcharge % Subcontracting;Decimal ;OnValidate=BEGIN
                                                                UpdateEstimateLineSurchargePct(FIELDNO("Surcharge % Subcontracting"), "Surcharge % Subcontracting");
                                                                UpdateSurcharge;
                                                              END;

                                                   CaptionML=ENU=Surcharge % Subcontracting;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 703 ;   ;Surcharge % Plant   ;Decimal       ;OnValidate=BEGIN
                                                                UpdateEstimateLineSurchargePct(FIELDNO("Surcharge % Plant"), "Surcharge % Plant");
                                                                UpdateSurcharge;
                                                              END;

                                                   CaptionML=ENU=Surcharge % Plant;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 1400;   ;Surcharge Amount Labor;Decimal     ;OnValidate=BEGIN
                                                                UpdateSurchargePct;
                                                                UpdateEstimateLineSurchargePct(FIELDNO("Surcharge % Labor"), "Surcharge % Labor");
                                                              END;

                                                   CaptionML=ENU=Surcharge Amount Labor;
                                                   BlankZero=Yes }
    { 1401;   ;Surcharge Amount Material;Decimal  ;OnValidate=BEGIN
                                                                UpdateSurchargePct;
                                                                UpdateEstimateLineSurchargePct(FIELDNO("Surcharge % Material"), "Surcharge % Material");
                                                              END;

                                                   CaptionML=ENU=Surcharge Amount Material;
                                                   BlankZero=Yes }
    { 1402;   ;Surcharge Amount Subcontr.;Decimal ;OnValidate=BEGIN
                                                                UpdateSurchargePct;
                                                                UpdateEstimateLineSurchargePct(FIELDNO("Surcharge % Subcontracting"), "Surcharge % Subcontracting");
                                                              END;

                                                   CaptionML=ENU=Surcharge Amount Subcontr.;
                                                   BlankZero=Yes }
    { 1403;   ;Surcharge Amount Plant;Decimal     ;OnValidate=BEGIN
                                                                UpdateSurchargePct;
                                                                UpdateEstimateLineSurchargePct(FIELDNO("Surcharge % Plant"), "Surcharge % Plant");
                                                              END;

                                                   CaptionML=ENU=Surcharge Amount Plant;
                                                   BlankZero=Yes }
    { 1410;   ;Total Surcharge Amount;Decimal     ;OnValidate=VAR
                                                                EstimateElementRAW@1100525005 : Record 11125679;
                                                                OldSurcharge@1100525000 : Decimal;
                                                                NewSurcharge@1100525001 : Decimal;
                                                                Ratio@1100525002 : Decimal;
                                                                OldSurchargePct@1100525006 : Decimal;
                                                                NewSurchargePct@1100525007 : Decimal;
                                                                Delta@1100525008 : Decimal;
                                                                IsMainElement@1100525003 : Boolean;
                                                                HasSubElements@1100525004 : Boolean;
                                                              BEGIN
                                                                IsMainElement := COPYSTR("Element No.", 6, 1) = '0';

                                                                IF IsMainElement THEN BEGIN
                                                                  EstimateElementRAW.SETRANGE("Estimate No.", "Estimate No.");
                                                                  //EstimateElementRAW.SETRANGE("Element No.", COPYSTR("Element No.", 1, 5) + '1', COPYSTR("Element No.", 1, 5) + '9'); //C026972.o
                                                                  EstimateElementRAW.SETRANGE("Element No.", COPYSTR("Element No.",1,5)+'1', GetMaxSubElementNo("Estimate No.","Element No.")); //C026972.n
                                                                  EstimateElementRAW.SETRANGE("Construction Spec. Line No.", '00');
                                                                  HasSubElements := NOT EstimateElementRAW.ISEMPTY;
                                                                END;

                                                                EstimateElementRAW.SetSkipUpdateLogBook(SkipUpdateLogBook);

                                                                CASE (IsMainElement AND HasSubElements) OF
                                                                  TRUE:
                                                                    BEGIN
                                                                      IF "Calculated Amount" <> 0 THEN BEGIN
                                                                        OldSurchargePct := (xRec."Total Surcharge Amount" / "Calculated Amount") * 100;
                                                                        NewSurchargePct := ("Total Surcharge Amount" / "Calculated Amount") * 100;
                                                                        Delta := NewSurchargePct - OldSurchargePct;
                                                                        IF Delta <> 0 THEN BEGIN //call 23956
                                                                          EstimateElementRAW.FINDSET(TRUE, FALSE);
                                                                          REPEAT
                                                                            EstimateElementRAW.VALIDATE("Surcharge % Labor", EstimateElementRAW."Surcharge % Labor" + Delta);
                                                                            EstimateElementRAW.VALIDATE("Surcharge % Material", EstimateElementRAW."Surcharge % Material" + Delta);
                                                                            EstimateElementRAW.VALIDATE("Surcharge % Subcontracting", EstimateElementRAW."Surcharge % Subcontracting" + Delta);
                                                                            EstimateElementRAW.VALIDATE("Surcharge % Plant", EstimateElementRAW."Surcharge % Plant" + Delta);
                                                                            EstimateElementRAW.MODIFY;
                                                                          UNTIL EstimateElementRAW.NEXT = 0;
                                                                        END; //call 23956
                                                                      END;
                                                                    END;
                                                                  FALSE:
                                                                    BEGIN
                                                                      OldSurcharge :=
                                                                        "Surcharge Amount Labor" +
                                                                        "Surcharge Amount Material" +
                                                                        "Surcharge Amount Subcontr." +
                                                                        "Surcharge Amount Plant";
                                                                      NewSurcharge := "Total Surcharge Amount";

                                                                      IF OldSurcharge <> NewSurcharge THEN BEGIN //DP00433
                                                                        CASE (OldSurcharge = 0) OF
                                                                          FALSE:
                                                                            BEGIN
                                                                              Ratio := ROUND(SafeDivision(NewSurcharge, OldSurcharge),0.00001);//DP00433
                                                                              IF Ratio <> 1 THEN BEGIN //call 23956
                                                                                VALIDATE("Surcharge Amount Labor", Ratio * "Surcharge Amount Labor");
                                                                                VALIDATE("Surcharge Amount Material", Ratio * "Surcharge Amount Material");
                                                                                VALIDATE("Surcharge Amount Subcontr.", Ratio * "Surcharge Amount Subcontr.");
                                                                                VALIDATE("Surcharge Amount Plant", Ratio * "Surcharge Amount Plant");
                                                                              END; //call 23956
                                                                            END;
                                                                          TRUE:
                                                                            BEGIN
                                                                              NewSurcharge := "Total Surcharge Amount";
                                                                              CALCFIELDS(
                                                                                "Calculated Amount Labor",
                                                                                "Calculated Amount Material",
                                                                                "Calculated Amount Subcontr.",
                                                                                "Calculated Amount Plant");
                                                                              VALIDATE("Surcharge Amount Labor",
                                                                                NewSurcharge * SafeDivision("Calculated Amount Labor", "Calculated Amount"));
                                                                              VALIDATE("Surcharge Amount Material",
                                                                                NewSurcharge * SafeDivision("Calculated Amount Material", "Calculated Amount"));
                                                                              VALIDATE("Surcharge Amount Subcontr.",
                                                                                NewSurcharge * SafeDivision("Calculated Amount Subcontr.", "Calculated Amount"));
                                                                              VALIDATE("Surcharge Amount Plant",
                                                                                NewSurcharge * SafeDivision("Calculated Amount Plant", "Calculated Amount"));
                                                                            END;
                                                                        END;
                                                                      END;
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Total Surcharge Amount;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 1500;   ;Surcharge Amount Labor (Calc.);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Estimate Line (RAW)"."Surcharge Amount Labor" WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                                         Element No.=FIELD(Element No.)));
                                                   CaptionML=ENU=Surcharge Amount Labor (Calc.);
                                                   Editable=No }
    { 1501;   ;Surchrg. Amt. Material (Calc.);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Estimate Line (RAW)"."Surcharge Amount Material" WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                                            Element No.=FIELD(Element No.)));
                                                   CaptionML=ENU=Surchrg. Amt. Material (Calc.);
                                                   Editable=No }
    { 1502;   ;Surchrg. Amt. Subcntr. (Calc.);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Estimate Line (RAW)"."Surcharge Amount Subcontr." WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                                             Element No.=FIELD(Element No.)));
                                                   CaptionML=ENU=Surchrg. Amt. Subcntr. (Calc.);
                                                   Editable=No }
    { 1503;   ;Surcharge Amount Plant (Calc.);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Estimate Line (RAW)"."Surcharge Amount Plant" WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                                         Element No.=FIELD(Element No.)));
                                                   CaptionML=ENU=Surcharge Amount Plant (Calc.);
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Estimate No.,Element No.,Line No.       ;SumIndexFields=Calculated Amount,Actual Amount;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Estimate No.,Construction Spec. Line No. }
    {    ;Estimate No.,Type,Construction Spec. Line No.;
                                                   SumIndexFields=Actual Amount,Calculated Amount }
    {    ;Estimate No.,Element No.,Indentation    ;SumIndexFields=Calculated Amount }
    {    ;Estimate No.,Element No.,Construction Spec. Line No.;
                                                   SumIndexFields=Actual Amount,Calculated Amount }
    {    ;Status Code                              }
    {    ;Estimate No.,Lock Actual Amount for Updates }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      EstimateRAW@1100525000 : Record 11012151;
      Text000@1100525001 : TextConst 'ENU=%1 %2 already exists in %3 %4.';
      Text001@1100525002 : TextConst 'ENU=Changing the %1 has reset the %2 of %3 %4. Any estimate lines associated with the recipe have been deleted. Manually added estimate lines have not been deleted.\\Do you also want to delete the estimate lines for this element that were added manually?';
      SkipValidateActualAmount@1100525006 : Boolean;
      SkipUpdateLogBook@1100525003 : Boolean;
      Text002@1100525004 : TextConst 'ENU=Commitment %1 does not exist yet. Please create the commitment element first.';

    PROCEDURE CombineDefiCodes@1100525009(VAR Result@1100525001 : ARRAY [6] OF Code[1]);
    VAR
      EstimateElementRAW@1100525000 : Record 11125679;
    BEGIN
      IF "Construction Spec. Line No." = '00' THEN BEGIN
        CLEAR(Result);

        EstimateElementRAW.SETRANGE("Estimate No.", "Estimate No.");
        EstimateElementRAW.SETRANGE("Element No.", "Element No.");
        EstimateElementRAW.SETFILTER("Construction Spec. Line No.", '<>%1', '00');

        IF EstimateElementRAW.FINDSET THEN
          REPEAT
            IF EstimateElementRAW."Defi Code Position 1" <> '' THEN
              Result[1] := EstimateElementRAW."Defi Code Position 1";
            IF EstimateElementRAW."Defi Code Position 2" <> '' THEN
              Result[2] := EstimateElementRAW."Defi Code Position 2";
            IF EstimateElementRAW."Defi Code Position 3" <> '' THEN
              Result[3] := EstimateElementRAW."Defi Code Position 3";
            IF EstimateElementRAW."Defi Code Position 4" <> '' THEN
              Result[4] := EstimateElementRAW."Defi Code Position 4";
            IF EstimateElementRAW."Defi Code Position 5" <> '' THEN
              Result[5] := EstimateElementRAW."Defi Code Position 5";
            IF EstimateElementRAW."Defi Code Position 6" <> '' THEN
              Result[6] := EstimateElementRAW."Defi Code Position 6";
          UNTIL EstimateElementRAW.NEXT = 0;
      END;
    END;

    PROCEDURE HasConditions@1100525002() : Boolean;
    VAR
      ConstrSpecCondLineRAW@1100525000 : Record 11125671;
    BEGIN
      IF Activity = '' THEN
        EXIT(FALSE);

      IF EstimateRAW."No." <> "Estimate No." THEN
        IF NOT EstimateRAW.GET("Estimate No.") THEN
          EXIT(FALSE);

      IF EstimateRAW."Construction Spec. No." = '' THEN
        EXIT(FALSE);

      ConstrSpecCondLineRAW.SETCURRENTKEY("Specification No.", "Chapter No.");
      ConstrSpecCondLineRAW.SETRANGE("Specification No.", EstimateRAW."Construction Spec. No.");
      ConstrSpecCondLineRAW.SETRANGE("Chapter No.", COPYSTR(Activity, 1, 2));

      EXIT(NOT ConstrSpecCondLineRAW.ISEMPTY);
    END;

    PROCEDURE ShowConditions@1100525001();
    VAR
      EstimateRAW@1100525000 : Record 11012151;
      ConstrSpecCondLineRAW@1100525001 : Record 11125671;
    BEGIN
      IF Activity <> '' THEN
        IF EstimateRAW.GET("Estimate No.") THEN
          IF EstimateRAW."Construction Spec. No." <> '' THEN BEGIN
            ConstrSpecCondLineRAW.SETCURRENTKEY("Specification No.", "Chapter No.");
            ConstrSpecCondLineRAW.SETRANGE("Specification No.", EstimateRAW."Construction Spec. No.");
            ConstrSpecCondLineRAW.SETRANGE("Chapter No.", COPYSTR(Activity, 1, 2));
            IF NOT ConstrSpecCondLineRAW.ISEMPTY THEN
              PAGE.RUN(0, ConstrSpecCondLineRAW);
          END;
    END;

    PROCEDURE RecipeNoAssistEdit@1100525000();
    VAR
      EstimateRAWRecipeSel@1100525000 : Record 11125674;
    BEGIN
      IF Activity <> '' THEN BEGIN
        EstimateRAWRecipeSel.SETRANGE("Recipe Group No.", Activity);
        PAGE.RUN(0, EstimateRAWRecipeSel);
      END;
    END;

    PROCEDURE SafeDivision@1100525004(Numerator@1100525000 : Decimal;Denominator@1100525001 : Decimal) : Decimal;
    BEGIN
      IF Denominator = 0 THEN
        EXIT(0);
      EXIT(Numerator / Denominator);
    END;

    PROCEDURE AreDefiCodesBlank@1100525008() : Boolean;
    BEGIN
      EXIT(
        ("Defi Code Position 1" = '') AND
        ("Defi Code Position 2" = '') AND
        ("Defi Code Position 3" = '') AND
        ("Defi Code Position 4" = '') AND
        ("Defi Code Position 5" = '') AND
        ("Defi Code Position 6" = ''));
    END;

    PROCEDURE UpdateIndentation@1100525003();
    BEGIN
      CASE STRLEN("Element No.") = 6 OF
        TRUE: Indentation := 4;
        FALSE: Indentation := STRLEN("Element No.") - 1;
      END;
    END;

    PROCEDURE UpdateCommitment@1100525007();
    BEGIN
      Commitment := FALSE;

      IF AreDefiCodesBlank THEN
        IF ("Construction Spec. Line No." IN ['00', '01']) THEN
          IF STRLEN("Element No.") = 6 THEN
             IF COPYSTR("Element No.", STRLEN("Element No.")) = '0' THEN
               Commitment := TRUE;
    END;

    PROCEDURE UpdateType@1100525005();
    BEGIN
      CASE TRUE OF
        STRLEN("Element No.") = 1:
          Type := Type::Chapter;
        STRLEN("Element No.") = 2:
          Type := Type::Paragraph;
        STRLEN("Element No.") = 3:
          Type := Type::Subparagraph;
        STRLEN("Element No.") = 4:
          Type := Type::Subsubparagraph;
        STRLEN("Element No.") <> 6:
          Type := Type::" ";
        (Commitment) AND ("Construction Spec. Line No." IN ['00', '01']):
          Type := Type::"Commitment (Main Line)";
        Commitment:
          Type := Type::"Commitment (Sub Line)";
        (NOT Commitment) AND ("Construction Spec. Line No." IN ['00', '01']):
          Type := Type::"Commitment Description (Main Line)";
        NOT Commitment:
          Type := Type::"Commitment Description (Sub Line)";
      END;
    END;

    PROCEDURE IsEuroElement@1100525010() : Boolean;
    BEGIN
      EXIT("External Unit of Measure Code" = 'EUR');
    END;

    PROCEDURE UpdateEstimateLineSurchargePct@1100525011(FieldNo@1100525000 : Integer;NewValue@1100525002 : Decimal);
    VAR
      EstimateLineRAW@1100525001 : Record 11125680;
      LineChanged@1210190000 : Boolean;
      NewAmount@1100529300 : Decimal;
      NewSurchargeAmount@1100529301 : Decimal;
      NewSurchargePct@1100529302 : Decimal;
    BEGIN
      EstimateLineRAW.SetSkipUpdateLogBook(SkipUpdateLogBook);

      EstimateLineRAW.SETCURRENTKEY("Estimate No.", "Summary Line");
      EstimateLineRAW.SETRANGE("Estimate No.", "Estimate No.");
      EstimateLineRAW.SETRANGE("Element No.", "Element No.");
      EstimateLineRAW.SETRANGE("Summary Line", FALSE);

      IF EstimateLineRAW.FINDSET(TRUE, FALSE) THEN
        REPEAT
          LineChanged := FALSE; //call 23956
          CASE FieldNo OF
            Rec.FIELDNO("Surcharge % Labor"):
            //DP00433 sn.
              BEGIN
                CALCFIELDS("Calculated Amount Labor");
                IF ("Calculated Amount Labor" <> 0) AND (EstimateLineRAW."Cumulative Labor" <> 0) THEN BEGIN //call 23956
                  NewAmount := ("Calculated Amount Labor" + ("Calculated Amount Labor" / 100 * "Surcharge % Labor")) / ("Calculated Amount Labor" + xRec."Surcharge Amount Labor") *
                    (EstimateLineRAW."Cumulative Labor" + EstimateLineRAW."Surcharge Amount Labor");
                  NewSurchargeAmount := NewAmount - EstimateLineRAW."Cumulative Labor";
                  NewSurchargePct := NewSurchargeAmount * 100 / EstimateLineRAW."Cumulative Labor";
                  EstimateLineRAW.VALIDATE("Surcharge % Labor", NewSurchargePct);
                  LineChanged := TRUE; //call 23956
                END; //call 23956
              END;
            Rec.FIELDNO("Surcharge % Material"):
              BEGIN
                CALCFIELDS("Calculated Amount Material");
                IF ("Calculated Amount Material" <> 0) AND (EstimateLineRAW."Cumulative Material" <> 0) THEN BEGIN //call 23956
                  NewAmount := ("Calculated Amount Material" + ("Calculated Amount Material" / 100 * "Surcharge % Material")) / ("Calculated Amount Material" + xRec."Surcharge Amount Material") *
                    (EstimateLineRAW."Cumulative Material" + EstimateLineRAW."Surcharge Amount Material");
                  NewSurchargeAmount := NewAmount - EstimateLineRAW."Cumulative Material";
                  NewSurchargePct := NewSurchargeAmount * 100 / EstimateLineRAW."Cumulative Material";
                  EstimateLineRAW.VALIDATE("Surcharge % Material", NewSurchargePct);
                  LineChanged := TRUE; //call 23956
                END; //call 23956
              END;
            Rec.FIELDNO("Surcharge % Subcontracting"):
              BEGIN
                CALCFIELDS("Calculated Amount Subcontr.");
                IF ("Calculated Amount Subcontr." <> 0) AND (EstimateLineRAW."Cumulative Subcontracting" <> 0) THEN BEGIN //call 23956
                  NewAmount := ("Calculated Amount Subcontr." + ("Calculated Amount Subcontr." / 100 * "Surcharge % Subcontracting")) / ("Calculated Amount Subcontr." + xRec."Surcharge Amount Subcontr.") *
                    (EstimateLineRAW."Cumulative Subcontracting" + EstimateLineRAW."Surcharge Amount Subcontr.");
                  NewSurchargeAmount := NewAmount - EstimateLineRAW."Cumulative Subcontracting";
                  NewSurchargePct := NewSurchargeAmount * 100 / EstimateLineRAW."Cumulative Subcontracting";
                  EstimateLineRAW.VALIDATE("Surcharge % Subcontracting", NewSurchargePct);
                  LineChanged := TRUE; //call 23956
                END; //call 23956
              END;
            Rec.FIELDNO("Surcharge % Plant"):
              BEGIN
                CALCFIELDS("Calculated Amount Plant");
                IF ("Calculated Amount Plant" <> 0) AND (EstimateLineRAW."Cumulative Plant" <> 0) THEN BEGIN //call 23956
                  NewAmount := ("Calculated Amount Plant" + ("Calculated Amount Plant" / 100 * "Surcharge % Plant")) / ("Calculated Amount Plant" + xRec."Surcharge Amount Plant") *
                    (EstimateLineRAW."Cumulative Plant" + EstimateLineRAW."Surcharge Amount Plant");
                  NewSurchargeAmount := NewAmount - EstimateLineRAW."Cumulative Plant";
                  NewSurchargePct := NewSurchargeAmount * 100 / EstimateLineRAW."Cumulative Plant";
                  EstimateLineRAW.VALIDATE("Surcharge % Plant", NewSurchargePct);
                  LineChanged := TRUE; //call 23956
                END; //call 23956
              END;
          END;
          //DP00433 en.
          IF LineChanged THEN//call 23956
            EstimateLineRAW.MODIFY(TRUE);
        UNTIL EstimateLineRAW.NEXT = 0;
    END;

    PROCEDURE UpdateSurcharge@1100525012();
    BEGIN
      IF "Construction Spec. Line No." <> '00' THEN BEGIN
        "Surcharge % Labor" := 0;
        "Surcharge % Material" := 0;
        "Surcharge % Subcontracting" := 0;
        "Surcharge % Plant" := 0;
      END;

      CALCFIELDS("Calculated Amount Labor", "Calculated Amount Material", "Calculated Amount Subcontr.", "Calculated Amount Plant");

      "Surcharge Amount Labor" := "Calculated Amount Labor" * ("Surcharge % Labor" / 100);
      "Surcharge Amount Material" := "Calculated Amount Material" * ("Surcharge % Material" / 100);
      "Surcharge Amount Subcontr." := "Calculated Amount Subcontr." * ("Surcharge % Subcontracting" / 100);
      "Surcharge Amount Plant" := "Calculated Amount Plant" * ("Surcharge % Plant" / 100);

      "Total Surcharge Amount" :=
        "Surcharge Amount Labor" + "Surcharge Amount Material" + "Surcharge Amount Subcontr." + "Surcharge Amount Plant";

      IF NOT SkipValidateActualAmount THEN
        IF NOT "Lock Actual Amount for Updates" THEN
          VALIDATE("Actual Amount", "Calculated Amount" + "Total Surcharge Amount");
    END;

    PROCEDURE UpdateSurchargePct@1100525014();
    BEGIN

      CALCFIELDS("Calculated Amount Labor", "Calculated Amount Material", "Calculated Amount Subcontr.", "Calculated Amount Plant");

      //IF "Surcharge Amount Labor" <> 0 THEN
        "Surcharge % Labor" := SafeDivision("Surcharge Amount Labor", "Calculated Amount Labor") * 100;

      //IF "Surcharge Amount Material" <> 0 THEN
        "Surcharge % Material" := SafeDivision("Surcharge Amount Material", "Calculated Amount Material") * 100;

      //IF "Surcharge Amount Subcontr." <> 0 THEN
        "Surcharge % Subcontracting" := SafeDivision("Surcharge Amount Subcontr.", "Calculated Amount Subcontr.") * 100;

      //IF "Surcharge Amount Plant" <> 0 THEN
        "Surcharge % Plant" := SafeDivision("Surcharge Amount Plant", "Calculated Amount Plant") * 100;

      "Total Surcharge Amount" :=
        "Surcharge Amount Labor" + "Surcharge Amount Material" + "Surcharge Amount Subcontr." + "Surcharge Amount Plant";

      IF NOT SkipValidateActualAmount THEN
        IF NOT "Lock Actual Amount for Updates" THEN
          VALIDATE("Actual Amount", "Calculated Amount" + "Total Surcharge Amount");
    END;

    PROCEDURE SetSkipUpdateLogBook@1100525013(SkipUpdateLogBook2@1100525000 : Boolean);
    BEGIN
      SkipUpdateLogBook := SkipUpdateLogBook2;
    END;

    PROCEDURE GetActivityFrom00@1210190000() : Code[6];
    VAR
      EstimateElementRAW@1210190000 : Record 11125679;
    BEGIN
      EstimateElementRAW.SETCURRENTKEY("Estimate No.", "Element No.", "Construction Spec. Line No.");
      EstimateElementRAW.SETRANGE("Estimate No.", "Estimate No.");
      EstimateElementRAW.SETRANGE("Element No.", "Element No.");
      EstimateElementRAW.SETRANGE("Construction Spec. Line No.", '00');
      IF EstimateElementRAW.FINDFIRST THEN
        EXIT(EstimateElementRAW.Activity);
    END;

    PROCEDURE GetEstimateDescription@1100529006(EstNo@1100529001 : Code[20]) : Text[100];
    VAR
      Est@1100529000 : Record 11012151;
    BEGIN
      IF Est.GET(EstNo) THEN
        EXIT(Est.Description);
    END;

    PROCEDURE GetMaxSubElementNo@1100529000(EstimateNo@1100529001 : Code[20];MainElementNo@1100529002 : Text[6]) MaxElementNo : Text[6];
    VAR
      EstimateElementRAW@1100529000 : Record 11125679;
    BEGIN
      //C026972
      MaxElementNo := COPYSTR(MainElementNo, 1, 5) + '9';
      IF COPYSTR(MainElementNo, 1, 1) = '9' THEN
        EXIT;

      EstimateElementRAW.SETCURRENTKEY("Estimate No.", "Element No.");
      EstimateElementRAW.SETRANGE("Estimate No.", EstimateNo);
      EstimateElementRAW.FILTERGROUP(9);
      EstimateElementRAW.SETFILTER("Element No.", '>%1', MaxElementNo);
      EstimateElementRAW.FILTERGROUP(0);
      EstimateElementRAW.SETFILTER("Element No.", COPYSTR(MainElementNo,1,4)+'?0');
      IF EstimateElementRAW.FINDFIRST THEN BEGIN
        EstimateElementRAW.SETFILTER("Element No.", '<%1', EstimateElementRAW."Element No.");
        IF EstimateElementRAW.FINDLAST THEN
          MaxElementNo := EstimateElementRAW."Element No.";
      END ELSE BEGIN
        EstimateElementRAW.SETFILTER("Element No.", COPYSTR(MainElementNo,1,4)+'??');
        IF EstimateElementRAW.FINDLAST THEN
          MaxElementNo := EstimateElementRAW."Element No.";
      END;
    END;

    PROCEDURE LookupActivity@1100525006();
    VAR
      ConstrSpecActivityRAW@1100525000 : Record 11125682;
      ActivityPage@1100525001 : Page 11125761;
      ActivityEditable@1100525002 : Boolean;
    BEGIN
      //db, 18-03-16
      ActivityEditable := (STRLEN("Element No.") = 6) AND "Information Notice";  //db, 12-04-16
      EstimateRAW.GET("Estimate No.");
      ConstrSpecActivityRAW."Part Group" := EstimateRAW."Part Group";
      ConstrSpecActivityRAW.Activity := Activity;
      ActivityPage.LOOKUPMODE(TRUE);
      ActivityPage.SetSelection(EstimateRAW."Part Group");
      ActivityPage.SETRECORD(ConstrSpecActivityRAW);
      IF ActivityPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
        IF ActivityEditable THEN BEGIN  //db, 12-04-16
          ActivityPage.GETRECORD(ConstrSpecActivityRAW);
          VALIDATE(Activity, ConstrSpecActivityRAW.Activity);  //db, 01-04-16
        END;
      END;
    END;

    PROCEDURE CopyActivityCommentRAW@1100519001(ActivityOld@1100525002 : Code[10];ActivityNew@1100525001 : Code[10];UsePartGroup@1100525003 : Boolean;PartGroup@1100525004 : Code[10]);
    VAR
      CommentLineRAW@1100525000 : Record 11125684;
    BEGIN
      //DP01086
      IF (ActivityNew = '') OR (ActivityNew = ActivityOld) OR ("Construction Spec. Line No." <> '00') THEN
        EXIT;
      IF UsePartGroup THEN
        EstimateRAW."Part Group" := PartGroup
      ELSE BEGIN
        IF NOT EstimateRAW.GET("Estimate No.") THEN
          EXIT;
      END;
      IF NOT CommentLineRAW.HasActivityComment(EstimateRAW."Part Group", ActivityNew) THEN
        EXIT;
      CommentLineRAW.DeleteEstElemLineComment("Estimate No.", "Element No.", "Line No.");
      CommentLineRAW.CopyComment(
        DATABASE::"Constr. Spec. Activity (RAW)", EstimateRAW."Part Group", ActivityNew, '', '', 0, 0,
        DATABASE::"Estimate Element (RAW)", '', '', "Estimate No.", "Element No.", "Line No.", 0);
      CALCFIELDS(Comments);
    END;

    BEGIN
    END.
  }
}

