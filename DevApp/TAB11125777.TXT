OBJECT Table 11125777 Glazing Service Call
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Description;
    OnInsert=VAR
               GlazingCallMgtSetup@1100525000 : Record 11125762;
               NoSeriesMgt@1100525001 : Codeunit 396;
             BEGIN
               GlazingCallMgtSetup.GET;

               IF "No." = '' THEN BEGIN
                 GlazingCallMgtSetup.TESTFIELD("Glazing Call Nos.");
                 NoSeriesMgt.InitSeries(GlazingCallMgtSetup."Glazing Call Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               IF Date = 0D THEN
                 Date := WORKDATE;

               IF Region = Region::" " THEN
                 Region := GlazingCallMgtSetup."Default Region";

               IF "Building Status" = "Building Status"::" " THEN
                 "Building Status" := GlazingCallMgtSetup."Default Building Status";

               // jhoek.080910.begin
               IF "Default Rate Code" = '' THEN
                 "Default Rate Code" := GlazingCallMgtSetup."Default Rate Code";
               // jhoek.080910.end

               //mg.sn, 13-01-12: M31731
               IF "Schedule Method" = "Schedule Method"::" " THEN
                 "Schedule Method" := GlazingCallMgtSetup."Default Schedule Method";
               //mg.en, 13-01-12: M31731

               "Created by" := USERID;
               "Created on" := CURRENTDATETIME;
               Status := Status::Open;

               IF "Order Manager" = '' THEN
                 GetOrderManager;  //DP01072
             END;

    OnModify=BEGIN
               Touch;
             END;

    OnDelete=VAR
               ServiceText@1210190000 : Record 11012882;
               GlazingServiceCallLine@1100525000 : Record 11125778;
               GlazingServiceCallAnswer@1100525001 : Record 11125780;
               GlazingServiceCommentLine@1100525002 : Record 11125782;
             BEGIN
               IF Status = Status::"In Progress" THEN
                 ERROR(Text000, TABLECAPTION, FIELDCAPTION(Status), Status);

               GlazingServiceCallLine.SETRANGE("Glazing Service Call No.", "No.");
               GlazingServiceCallLine.DELETEALL(TRUE);

               GlazingServiceCallAnswer.SETRANGE("Glazing Service Call No.", "No.");
               GlazingServiceCallAnswer.DELETEALL;

               // jhoek.261110.begin
               GlazingServiceCommentLine.SETRANGE("Table Name", GlazingServiceCommentLine."Table Name"::"Glazing Service Call");
               GlazingServiceCommentLine.SETRANGE("No.", "No.");
               GlazingServiceCommentLine.DELETEALL;
               // jhoek.261110.end

               // jhoek.190511.begin
               ServiceText.SETRANGE("Table Name", ServiceText."Table Name"::"Glazing Service Call");
               ServiceText.SETRANGE("No.", "No.");
               ServiceText.DELETEALL;
               // jhoek.190511.end
             END;

    CaptionML=ENU=Glazing Service Call;
    LookupPageID=Page11125786;
    DrillDownPageID=Page11125786;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=VAR
                                                                GlazingCallMgtSetup@1100525000 : Record 11125762;
                                                                NoSeriesMgt@1100525001 : Codeunit 396;
                                                              BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  GlazingCallMgtSetup.GET;
                                                                  NoSeriesMgt.TestManual(GlazingCallMgtSetup."Glazing Call Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 10  ;   ;Service Location No.;Code20        ;TableRelation="Service Location";
                                                   OnValidate=VAR
                                                                ServiceLocation@1100525000 : Record 11012801;
                                                              BEGIN
                                                                IF NOT ServiceLocation.GET("Service Location No.") THEN
                                                                  ServiceLocation.INIT;

                                                                VALIDATE("Customer No.", ServiceLocation."Customer No.");
                                                                Name := ServiceLocation.Description;
                                                                Address := ServiceLocation.Address;
                                                                "Address 2" := ServiceLocation."Address 2";
                                                                "Post Code" := ServiceLocation."Post Code";
                                                                City := ServiceLocation.City;
                                                                County := ServiceLocation.County;
                                                                "Country/Region Code" := ServiceLocation."Country/Region Code";
                                                                "Territory Code" := ServiceLocation."Territory Code";
                                                                "Service Contract No." := '';
                                                                IF (CurrFieldNo <> 0) AND (CurrFieldNo <> FIELDNO("Service Contract No.")) THEN
                                                                  IF "Service Contract No." = '' THEN
                                                                    DetermineContractNo;  //db, 24-08-15: C024484
                                                                GetOrderManager;  //DP01072
                                                              END;

                                                   CaptionML=ENU=Service Location No. }
    { 15  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 20  ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   OnValidate=VAR
                                                                Customer@1100525002 : Record 18;
                                                                MarketingSetup@1100525000 : Record 5079;
                                                                ContactBusinessRelation@1100525001 : Record 5054;
                                                              BEGIN
                                                                //kzwerver, 130902, sn, #C003349
                                                                IF NOT Customer.GET("Customer No.") THEN Customer.INIT;
                                                                IF Customer.Blocked IN [Customer.Blocked::Invoice, Customer.Blocked::All] THEN
                                                                  ERROR(Text003, Customer."No.");
                                                                //kzwerver, 130902, sn, #C003349

                                                                IF "Customer No." <> xRec."Customer No." THEN
                                                                  TestNoSOsCreated;

                                                                "Customer Posting Group" := '';
                                                                "Contact Company No." := '';
                                                                "Service Contact Person No." := '';
                                                                "Fixed Price Contract" := FALSE;

                                                                IF Customer.GET("Customer No.") THEN BEGIN
                                                                  Customer.TESTFIELD("Customer Posting Group");
                                                                  "Customer Posting Group" := Customer."Customer Posting Group";
                                                                  "Fixed Price Contract" := Customer."Fixed Price Contract (Glazing)";
                                                                  "VAT Bus. Posting Group" := Customer."VAT Bus. Posting Group";   //RFC 547
                                                                END;

                                                                MarketingSetup.GET;
                                                                MarketingSetup.TESTFIELD("Bus. Rel. Code for Customers");

                                                                ContactBusinessRelation.SETCURRENTKEY("Link to Table", "No.");
                                                                ContactBusinessRelation.SETRANGE("Link to Table", ContactBusinessRelation."Link to Table"::Customer);
                                                                ContactBusinessRelation.SETRANGE("No.", "Customer No.");
                                                                ContactBusinessRelation.SETRANGE("Business Relation Code", MarketingSetup."Bus. Rel. Code for Customers");

                                                                IF ContactBusinessRelation.FINDFIRST THEN
                                                                  "Contact Company No." := ContactBusinessRelation."Contact No.";

                                                                CopyQuestions;

                                                                CALCFIELDS("Customer Name");
                                                              END;

                                                   CaptionML=ENU=Customer No. }
    { 21  ;   ;Contact Company No. ;Code20        ;TableRelation=Contact WHERE (Type=CONST(Company));
                                                   CaptionML=ENU=Contact Company No.;
                                                   Editable=No }
    { 22  ;   ;Customer Posting Group;Code10      ;TableRelation="Customer Posting Group";
                                                   CaptionML=ENU=Customer Posting Group }
    { 25  ;   ;Service Contract No.;Code20        ;TableRelation=Service-Contract.No.;
                                                   OnValidate=BEGIN
                                                                GetOrderManager;  //DP01072
                                                              END;

                                                   CaptionML=ENU=Service Contract No. }
    { 28  ;   ;Customer Name       ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Name WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=ENU=Customer Name;
                                                   Editable=No }
    { 30  ;   ;Date                ;Date          ;OnValidate=BEGIN
                                                                UpdateCallActivityLines(FIELDNO(Date));
                                                              END;

                                                   CaptionML=ENU=Date }
    { 40  ;   ;Status              ;Option        ;CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=" ,,,,,Open,,,,,Released,,,,,,,,,,In Progress,,,,,Finished,,,,,Cancelled";
                                                   OptionString=[ ,,,,,Open,,,,,Released,,,,,,,,,,In Progress,,,,,Finished,,,,,Cancelled];
                                                   Editable=No }
    { 45  ;   ;No. Printed         ;Integer       ;CaptionML=ENU=No. Printed;
                                                   Editable=No }
    { 50  ;   ;Questions           ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Glazing Service Call Answer" WHERE (Glazing Service Call No.=FIELD(No.)));
                                                   CaptionML=ENU=Questions;
                                                   Editable=No }
    { 51  ;   ;Unanswered Questions;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Glazing Service Call Answer" WHERE (Glazing Service Call No.=FIELD(No.),
                                                                                                          Answer Code=FILTER('')));
                                                   CaptionML=ENU=Unanswered Questions;
                                                   Editable=No }
    { 90  ;   ;Name                ;Text50        ;CaptionML=ENU=Name }
    { 100 ;   ;Address             ;Text50        ;CaptionML=ENU=Address }
    { 110 ;   ;Address 2           ;Text50        ;CaptionML=ENU=Address 2 }
    { 120 ;   ;Post Code           ;Code20        ;TableRelation="Post Code";
                                                   OnValidate=VAR
                                                                PostCode@1100525000 : Record 225;
                                                              BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   OnLookup=VAR
                                                              PostCode@1100525000 : Record 225;
                                                            BEGIN
                                                            END;

                                                   CaptionML=ENU=Post Code }
    { 130 ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=VAR
                                                                PostCode@1100525000 : Record 225;
                                                              BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   OnLookup=VAR
                                                              PostCode@1100525000 : Record 225;
                                                            BEGIN
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=City }
    { 140 ;   ;County              ;Text30        ;CaptionML=ENU=County }
    { 141 ;   ;Territory Code      ;Code10        ;TableRelation=Territory;
                                                   CaptionML=ENU=Territory Code }
    { 145 ;   ;Region              ;Option        ;OnValidate=BEGIN
                                                                UpdateCallLines(FIELDNO(Region));
                                                              END;

                                                   CaptionML=ENU=Region;
                                                   OptionCaptionML=ENU=" ,,,,,I,,,,,II,,,,,III";
                                                   OptionString=[ ,,,,,I,,,,,II,,,,,III];
                                                   NotBlank=Yes }
    { 146 ;   ;Building Status     ;Option        ;OnValidate=BEGIN
                                                                UpdateCallLines(FIELDNO("Building Status"));
                                                              END;

                                                   CaptionML=ENU=Building Status;
                                                   OptionCaptionML=ENU=" ,,,,,Built-On,,,,,Vacant";
                                                   OptionString=[ ,,,,,Built-On,,,,,Vacant];
                                                   NotBlank=Yes }
    { 150 ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Country/Region Code }
    { 190 ;   ;Contact No. Business Relation;Code20;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Contact Business Relation"."Contact No." WHERE (Link to Table=CONST(Customer),
                                                                                                                       No.=FIELD(Customer No.)));
                                                   CaptionML=ENU=Contact No. Business Relation;
                                                   Editable=No }
    { 200 ;   ;Service Contact Person No.;Code20  ;TableRelation=Contact.No. WHERE (Type=CONST(Person),
                                                                                    Company No.=FIELD(Contact No. Business Relation),
                                                                                    Blocked=CONST(No));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Service Contact Person Name");
                                                              END;

                                                   CaptionML=ENU=Service Contact Person No. }
    { 210 ;   ;Order Kind Code     ;Code10        ;TableRelation="Service Order Indication".Code WHERE (Indication=CONST(Kind));
                                                   CaptionML=ENU=Order Kind Code;
                                                   Description=Misnomer merely for consistency reasons }
    { 220 ;   ;Order Type Code     ;Code10        ;TableRelation="Service Order Indication".Code WHERE (Indication=CONST(Type));
                                                   CaptionML=ENU=Order Type Code;
                                                   Description=Misnomer merely for consistency reasons }
    { 230 ;   ;Priority Code       ;Code10        ;TableRelation="Service Priority";
                                                   CaptionML=ENU=Priority Code }
    { 250 ;   ;Calling Contact     ;Text50        ;CaptionML=ENU=Calling Contact }
    { 260 ;   ;Calling Phone No.   ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Calling Phone No. }
    { 300 ;   ;Appointment 1 Date  ;Date          ;OnValidate=BEGIN
                                                                TestNextAppointmentEmpty(1);
                                                                TestOrderExists("Appointment 1 Service Order");
                                                              END;

                                                   CaptionML=ENU=Appointment 1 Date }
    { 310 ;   ;Appointment 1 Time Slot Code;Code10;TableRelation="Time Slot (Glazing Service)";
                                                   OnValidate=BEGIN
                                                                TestOrderExists("Appointment 1 Service Order");
                                                                CALCFIELDS("Appointment 1 Starting Time");
                                                              END;

                                                   CaptionML=ENU=Appointment 1 Time Slot Code }
    { 311 ;   ;Appointment 1 Starting Time;Time   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Time Slot (Glazing Service)"."Starting Time" WHERE (Code=FIELD(Appointment 1 Time Slot Code)));
                                                   CaptionML=ENU=Appointment 1 Starting Time;
                                                   Editable=No }
    { 312 ;   ;Appointment 1 Ending Time;Time     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Time Slot (Glazing Service)"."Ending Time" WHERE (Code=FIELD(Appointment 1 Time Slot Code)));
                                                   CaptionML=ENU=Appointment 1 Ending Time;
                                                   Editable=No }
    { 313 ;   ;Appointment 1 Service Order;Code20 ;TableRelation="Service Order";
                                                   CaptionML=ENU=Appointment 1 Service Order;
                                                   Editable=No }
    { 320 ;   ;Appointment 2 Date  ;Date          ;OnValidate=BEGIN
                                                                TestPreviousAppointment(2);
                                                                TestNextAppointmentEmpty(2);
                                                                TestOrderExists("Appointment 2 Service Order");
                                                              END;

                                                   CaptionML=ENU=Appointment 2 Date }
    { 330 ;   ;Appointment 2 Time Slot Code;Code10;TableRelation="Time Slot (Glazing Service)";
                                                   OnValidate=BEGIN
                                                                TestOrderExists("Appointment 2 Service Order");
                                                                CALCFIELDS("Appointment 2 Starting Time");
                                                              END;

                                                   CaptionML=ENU=Appointment 2 Time Slot Code }
    { 331 ;   ;Appointment 2 Starting Time;Time   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Time Slot (Glazing Service)"."Starting Time" WHERE (Code=FIELD(Appointment 2 Time Slot Code)));
                                                   CaptionML=ENU=Appointment 2 Starting Time;
                                                   Editable=No }
    { 332 ;   ;Appointment 2 Ending Time;Time     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Time Slot (Glazing Service)"."Ending Time" WHERE (Code=FIELD(Appointment 2 Time Slot Code)));
                                                   CaptionML=ENU=Appointment 2 Ending Time;
                                                   Editable=No }
    { 333 ;   ;Appointment 2 Service Order;Code20 ;TableRelation="Service Order";
                                                   CaptionML=ENU=Appointment 2 Service Order;
                                                   Editable=No }
    { 340 ;   ;Appointment 3 Date  ;Date          ;OnValidate=BEGIN
                                                                TestPreviousAppointment(3);
                                                                TestNextAppointmentEmpty(3);
                                                                TestOrderExists("Appointment 3 Service Order");
                                                              END;

                                                   CaptionML=ENU=Appointment 3 Date }
    { 350 ;   ;Appointment 3 Time Slot Code;Code10;TableRelation="Time Slot (Glazing Service)";
                                                   OnValidate=BEGIN
                                                                TestOrderExists("Appointment 3 Service Order");
                                                                CALCFIELDS("Appointment 3 Starting Time");
                                                              END;

                                                   CaptionML=ENU=Appointment 3 Time Slot Code }
    { 351 ;   ;Appointment 3 Starting Time;Time   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Time Slot (Glazing Service)"."Starting Time" WHERE (Code=FIELD(Appointment 3 Time Slot Code)));
                                                   CaptionML=ENU=Appointment 3 Starting Time;
                                                   Editable=No }
    { 352 ;   ;Appointment 3 Ending Time;Time     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Time Slot (Glazing Service)"."Ending Time" WHERE (Code=FIELD(Appointment 3 Time Slot Code)));
                                                   CaptionML=ENU=Appointment 3 Ending Time;
                                                   Editable=No }
    { 353 ;   ;Appointment 3 Service Order;Code20 ;TableRelation="Service Order";
                                                   CaptionML=ENU=Appointment 3 Service Order;
                                                   Editable=No }
    { 360 ;   ;Appointment 4 Date  ;Date          ;OnValidate=BEGIN
                                                                TestPreviousAppointment(4);
                                                                TestNextAppointmentEmpty(4);
                                                                TestOrderExists("Appointment 4 Service Order");
                                                              END;

                                                   CaptionML=ENU=Appointment 4 Date }
    { 361 ;   ;Appointment 4 Time Slot Code;Code10;TableRelation="Time Slot (Glazing Service)";
                                                   OnValidate=BEGIN
                                                                TestOrderExists("Appointment 4 Service Order");
                                                                CALCFIELDS("Appointment 4 Starting Time");
                                                              END;

                                                   CaptionML=ENU=Appointment 4 Time Slot Code }
    { 362 ;   ;Appointment 4 Starting Time;Time   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Time Slot (Glazing Service)"."Starting Time" WHERE (Code=FIELD(Appointment 4 Time Slot Code)));
                                                   CaptionML=ENU=Appointment 4 Starting Time;
                                                   Editable=No }
    { 363 ;   ;Appointment 4 Ending Time;Time     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Time Slot (Glazing Service)"."Ending Time" WHERE (Code=FIELD(Appointment 4 Time Slot Code)));
                                                   CaptionML=ENU=Appointment 4 Ending Time;
                                                   Editable=No }
    { 364 ;   ;Appointment 4 Service Order;Code20 ;TableRelation="Service Order";
                                                   CaptionML=ENU=Appointment 4 Service Order;
                                                   Editable=No }
    { 370 ;   ;Appointment 5 Date  ;Date          ;OnValidate=BEGIN
                                                                TestPreviousAppointment(5);
                                                                TestNextAppointmentEmpty(5);
                                                                TestOrderExists("Appointment 5 Service Order");
                                                              END;

                                                   CaptionML=ENU=Appointment 5 Date }
    { 371 ;   ;Appointment 5 Time Slot Code;Code10;TableRelation="Time Slot (Glazing Service)";
                                                   OnValidate=BEGIN
                                                                TestOrderExists("Appointment 5 Service Order");
                                                                CALCFIELDS("Appointment 5 Starting Time");
                                                              END;

                                                   CaptionML=ENU=Appointment 5 Time Slot Code }
    { 372 ;   ;Appointment 5 Starting Time;Time   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Time Slot (Glazing Service)"."Starting Time" WHERE (Code=FIELD(Appointment 5 Time Slot Code)));
                                                   CaptionML=ENU=Appointment 5 Starting Time;
                                                   Editable=No }
    { 373 ;   ;Appointment 5 Ending Time;Time     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Time Slot (Glazing Service)"."Ending Time" WHERE (Code=FIELD(Appointment 5 Time Slot Code)));
                                                   CaptionML=ENU=Appointment 5 Ending Time;
                                                   Editable=No }
    { 374 ;   ;Appointment 5 Service Order;Code20 ;TableRelation="Service Order";
                                                   CaptionML=ENU=Appointment 5 Service Order;
                                                   Editable=No }
    { 380 ;   ;Appointment 6 Date  ;Date          ;OnValidate=BEGIN
                                                                TestPreviousAppointment(6);
                                                                TestNextAppointmentEmpty(6);
                                                                TestOrderExists("Appointment 6 Service Order");
                                                              END;

                                                   CaptionML=ENU=Appointment 6 Date }
    { 381 ;   ;Appointment 6 Time Slot Code;Code10;TableRelation="Time Slot (Glazing Service)";
                                                   OnValidate=BEGIN
                                                                TestOrderExists("Appointment 6 Service Order");
                                                                CALCFIELDS("Appointment 6 Starting Time");
                                                              END;

                                                   CaptionML=ENU=Appointment 6 Time Slot Code }
    { 382 ;   ;Appointment 6 Starting Time;Time   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Time Slot (Glazing Service)"."Starting Time" WHERE (Code=FIELD(Appointment 6 Time Slot Code)));
                                                   CaptionML=ENU=Appointment 6 Starting Time;
                                                   Editable=No }
    { 383 ;   ;Appointment 6 Ending Time;Time     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Time Slot (Glazing Service)"."Ending Time" WHERE (Code=FIELD(Appointment 6 Time Slot Code)));
                                                   CaptionML=ENU=Appointment 6 Ending Time;
                                                   Editable=No }
    { 384 ;   ;Appointment 6 Service Order;Code20 ;TableRelation="Service Order";
                                                   CaptionML=ENU=Appointment 6 Service Order;
                                                   Editable=No }
    { 390 ;   ;Default Rate Code   ;Code10        ;TableRelation="Budget Rate".Code;
                                                   CaptionML=ENU=Default Rate Code }
    { 400 ;   ;Planned Hours (Calculated);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Glazing Service Call Activity"."Total Hours" WHERE (Glazing Service Call No.=FIELD(No.)));
                                                   CaptionML=ENU=Planned Hours (Calculated);
                                                   Editable=No }
    { 410 ;   ;Planned Hours (Actual) OLD;Decimal ;CaptionML=ENU=Planned Hours (Actual) }
    { 430 ;   ;Total Sales Price   ;Decimal       ;CaptionML=ENU=Total Sales Price;
                                                   Editable=No }
    { 440 ;   ;Contract Amount     ;Decimal       ;CaptionML=ENU=Contract Amount }
    { 450 ;   ;Fixed Price Contract;Boolean       ;CaptionML=ENU=Fixed Price Contract;
                                                   Editable=No }
    { 460 ;   ;Schedule Method     ;Option        ;CaptionML=ENU=Schedule Method;
                                                   OptionCaptionML=ENU=" ,Date Fixed,Period Bound";
                                                   OptionString=[ ,Date,Period] }
    { 500 ;   ;Service Order No.   ;Code20        ;TableRelation="Service Order";
                                                   CaptionML=ENU=Service Order No.;
                                                   Editable=No }
    { 600 ;   ;Total Cost Removal  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Glazing Service Call Activity"."Total Cost Amount" WHERE (Glazing Service Call No.=FIELD(No.),
                                                                                                                              Type=CONST(Removal)));
                                                   CaptionML=ENU=Total Cost Removal;
                                                   Editable=No }
    { 601 ;   ;Sales Price Removal ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Glazing Service Call Activity"."Total Sales Amount" WHERE (Glazing Service Call No.=FIELD(No.),
                                                                                                                               Type=CONST(Removal)));
                                                   CaptionML=ENU=Sales Price Removal;
                                                   Editable=No }
    { 610 ;   ;Total Cost Mounting ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Glazing Service Call Activity"."Total Cost Amount" WHERE (Glazing Service Call No.=FIELD(No.),
                                                                                                                              Type=CONST(Mounting)));
                                                   CaptionML=ENU=Total Cost Mounting;
                                                   Editable=No }
    { 611 ;   ;Sales Price Mounting;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Glazing Service Call Activity"."Total Sales Amount" WHERE (Glazing Service Call No.=FIELD(No.),
                                                                                                                               Type=CONST(Mounting)));
                                                   CaptionML=ENU=Sales Price Mounting;
                                                   Editable=No }
    { 620 ;   ;Sales Amount Assembly;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Glazing Service Call Assembly"."Total Sales Amount" WHERE (Glazing Service Call No.=FIELD(No.)));
                                                   CaptionML=ENU=Sales Amount Assembly;
                                                   Editable=No }
    { 630 ;   ;Standard Cost Amount Assembly;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Glazing Service Call Assembly"."Total Cost Amount" WHERE (Glazing Service Call No.=FIELD(No.)));
                                                   CaptionML=ENU=Standard Cost Amount Assembly;
                                                   Editable=No }
    { 640 ;   ;Item Standard Cost Amount;Decimal  ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Glazing Service Call Line"."Item Standard Cost Amount" WHERE (Glazing Service Call No.=FIELD(No.)));
                                                   CaptionML=ENU=Item Standard Cost Amount;
                                                   Editable=No }
    { 641 ;   ;Item Sales Amount   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Glazing Service Call Line"."Item Sales Amount" WHERE (Glazing Service Call No.=FIELD(No.)));
                                                   CaptionML=ENU=Item Sales Amount;
                                                   Editable=No }
    { 642 ;   ;Item Sales VAT Amount;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Glazing Service Call Line"."Item Sales VAT Amount" WHERE (Glazing Service Call No.=FIELD(No.)));
                                                   CaptionML=ENU=Item Sales VAT Amount;
                                                   Editable=No }
    { 643 ;   ;Item Sales Amount incl. VAT;Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Glazing Service Call Line"."Item Sales Amount incl. VAT" WHERE (Glazing Service Call No.=FIELD(No.)));
                                                   CaptionML=ENU=Item Sales Amount incl. VAT;
                                                   Editable=No }
    { 650 ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);    // RFC 547
                                                                IF xRec."VAT Bus. Posting Group" <> "VAT Bus. Posting Group" THEN BEGIN
                                                                  UpdateCallLines(FIELDNO("VAT Bus. Posting Group"));
                                                                  UpdateCallActivityLines(FIELDNO("VAT Bus. Posting Group"));
                                                                  UpdateCallAssemblyLines(FIELDNO("VAT Bus. Posting Group"));
                                                                END;
                                                              END;

                                                   CaptionML=ENU=VAT Bus. Posting Group;
                                                   Editable=Yes }
    { 660 ;   ;Order No. Customer  ;Text50        ;OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO("Order No. Customer") THEN
                                                                  CheckOrderNoCustomer;  //db, 16-11-09: M13354
                                                              END;

                                                   CaptionML=ENU=Order No. Customer }
    { 670 ;   ;E-Mail              ;Text80        ;CaptionML=ENU=E-Mail }
    { 680 ;   ;Your Reference      ;Text50        ;CaptionML=ENU=Your Reference }
    { 690 ;   ;Order Manager       ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=ENU=Order Manager }
    { 691 ;   ;Order Manager Name  ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Salesperson/Purchaser.Name WHERE (Code=FIELD(Order Manager)));
                                                   CaptionML=ENU=Order Manager Name;
                                                   Editable=No }
    { 1000;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 1010;   ;Created by          ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              LoginMgt@1100525000 : Codeunit 418;
                                                              CreatedBy@1100525001 : Code[20];
                                                            BEGIN
                                                              CreatedBy := "Created by";
                                                              LoginMgt.LookupUserID(CreatedBy);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Created by;
                                                   Editable=No }
    { 1020;   ;Created on          ;DateTime      ;CaptionML=ENU=Created on;
                                                   Editable=No }
    { 1030;   ;Modified by         ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              ModifiedBy@1100525001 : Code[20];
                                                              LoginMgt@1100525000 : Codeunit 418;
                                                            BEGIN
                                                              ModifiedBy := "Modified by";
                                                              LoginMgt.LookupUserID(ModifiedBy);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Modified by;
                                                   Editable=No }
    { 1040;   ;Modified on         ;DateTime      ;CaptionML=ENU=Modified on;
                                                   Editable=No }
    { 1050;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Glazing Service Comment Line" WHERE (Table Name=CONST(Glazing Service Call),
                                                                                                           No.=FIELD(No.)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 1100;   ;Sales VAT Amount Removal;Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Glazing Service Call Activity"."Total Sales VAT Amt" WHERE (Glazing Service Call No.=FIELD(No.),
                                                                                                                                Type=CONST(Removal)));
                                                   CaptionML=ENU=Sales VAT Amount Removal;
                                                   Editable=No }
    { 1110;   ;Sales VAT  Amount Mounting;Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Glazing Service Call Activity"."Total Sales VAT Amt" WHERE (Glazing Service Call No.=FIELD(No.),
                                                                                                                                Type=CONST(Mounting)));
                                                   CaptionML=ENU=Sales VAT Amount Mounting;
                                                   Editable=No }
    { 1120;   ;Sales VAT Amount Assembly;Decimal  ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Glazing Service Call Assembly"."Total Sales VAT Amount" WHERE (Glazing Service Call No.=FIELD(No.)));
                                                   CaptionML=ENU=Sales VAT Amount Assembly;
                                                   Editable=No }
    { 1150;   ;Sales Amt Removal incl. VAT;Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Glazing Service Call Activity"."Tot Sls Amt incl. VAT" WHERE (Glazing Service Call No.=FIELD(No.),
                                                                                                                                  Type=CONST(Removal)));
                                                   CaptionML=ENU=Sales Amount Removal incl. VAT;
                                                   Editable=No }
    { 1160;   ;Sales Amt Mounting incl. VAT;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Glazing Service Call Activity"."Tot Sls Amt incl. VAT" WHERE (Glazing Service Call No.=FIELD(No.),
                                                                                                                                  Type=CONST(Mounting)));
                                                   CaptionML=ENU=Sales Amount Mounting incl. VAT;
                                                   Editable=No }
    { 1170;   ;Sales Amt Assembly incl. VAT;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Glazing Service Call Assembly"."Total Sales Amount incl. VAT" WHERE (Glazing Service Call No.=FIELD(No.)));
                                                   CaptionML=ENU=Sales Amount Assembly incl. VAT;
                                                   Editable=No }
    { 2000;   ;Internal Text Code  ;Code10        ;TableRelation="Standard Service Text".Code WHERE (Type=CONST(Internal));
                                                   OnValidate=VAR
                                                                lvStandardTextRec@1100525000 : Record 11020338;
                                                                ServiceText@1100529100 : Record 11012882;
                                                                TextEditor@1100529101 : Codeunit 11012001;
                                                                StandardServiceText@1100529106 : Record 11020338;
                                                                TextArray@1100529105 : ARRAY [10] OF Text[80];
                                                                NoOfLines@1100529104 : Integer;
                                                                LineNo@1100529103 : Integer;
                                                                CurrLineNo@1100529102 : Integer;
                                                              BEGIN
                                                                IF "Internal Text Code" <> '' THEN BEGIN
                                                                  lvStandardTextRec.GET(lvStandardTextRec.Type::Internal, "Internal Text Code");

                                                                  ServiceText.SETRANGE("Table Name", ServiceText."Table Name"::"Glazing Service Call");
                                                                  ServiceText.SETRANGE("No.", "No.");
                                                                  ServiceText.SETRANGE("Table Field", 2010);
                                                                  IF ServiceText.ISEMPTY THEN BEGIN
                                                                    NoOfLines := TextEditor.BreakDescription(lvStandardTextRec.Text, MAXSTRLEN(ServiceText.Comment), TRUE, TextArray);
                                                                    IF ServiceText.FINDLAST THEN
                                                                      CurrLineNo := ServiceText."Line No.";
                                                                    FOR LineNo := 1 TO NoOfLines DO BEGIN
                                                                      ServiceText.INIT;
                                                                      ServiceText.SetUpNewLine;
                                                                      ServiceText."Table Name" := ServiceText."Table Name"::"Glazing Service Call";
                                                                      ServiceText."No." := "No.";
                                                                      ServiceText."Table Field" := 2010;
                                                                      ServiceText."Created by" := USERID;
                                                                      ServiceText.Comment := TextArray[LineNo];
                                                                      CurrLineNo += 10000;
                                                                      ServiceText."Line No." := CurrLineNo;
                                                                      ServiceText.INSERT(TRUE);
                                                                    END;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Internal Text Code }
    { 2020;   ;Comment (Internal Text);Boolean    ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Service Text" WHERE (Table Name=CONST(Glazing Service Call),
                                                                                           No.=FIELD(No.),
                                                                                           Table Field=CONST(2010)));
                                                   CaptionML=ENU=Comment Comment (Internal Text);
                                                   Editable=No }
    { 2030;   ;Service Contact Person Name;Text50 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD(Service Contact Person No.)));
                                                   CaptionML=ENU=Service Contact Person Name;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Service Location No.                     }
    {    ;Customer No.                             }
    {    ;Service Contract No.                     }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100525000 : TextConst 'ENU=%1s with %2 "%3" cannot be deleted.';
      Text001@1100525001 : TextConst 'ENU=No %1s were found for the address you entered.\\Do you want to create a new %1?';
      Text003@1100525003 : TextConst 'ENU=Customer %1 is blocked.';
      Text010@1100525002 : TextConst 'ENU=No standard contracts were found.\\Please create a %1 with a blank %2 and try again.';
      Text019@1210190000 : TextConst 'ENU=%1 is already filled. Do you want to overwrite it with standard text %2?';
      Text020@1210190002 : TextConst 'ENU=Service Order is already created for this appointment.\Changes to the Appointment date have to take place on the Service Order Card.';
      Text021@1210190001 : TextConst 'ENU=Appointment %1 Date must be filled';
      Text022@1210190003 : TextConst 'ENU=%1 %2 of %3 %4 also assigned to %5 %6';
      Text023@1210190004 : TextConst 'ENU=%1 cannot be modified when service orders are created.';

    PROCEDURE AssistEdit@1100525001(OldGlazingServiceCall@1100525000 : Record 11125777) : Boolean;
    VAR
      GlazingServiceCall@1100525001 : Record 11125777;
      GlazingCallMgtSetup@1100525002 : Record 11125762;
      NoSeriesMgt@1100525003 : Codeunit 396;
    BEGIN
      WITH GlazingServiceCall DO BEGIN
        GlazingServiceCall := Rec;
        GlazingCallMgtSetup.GET;
        GlazingCallMgtSetup.TESTFIELD("Glazing Call Nos.");
        IF NoSeriesMgt.SelectSeries(GlazingCallMgtSetup."Glazing Call Nos.", OldGlazingServiceCall."No. Series", "No. Series") THEN
      BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := GlazingServiceCall;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE CopyQuestions@1100525000();
    VAR
      GlazingServiceCallAnswer@1100525001 : Record 11125780;
      QuestionGlazingService@1100525000 : Record 11125773;
    BEGIN
      GlazingServiceCallAnswer.SETRANGE("Glazing Service Call No.", "No.");
      GlazingServiceCallAnswer.DELETEALL;

      QuestionGlazingService.SETRANGE("Target Type", QuestionGlazingService."Target Type"::Customer);
      QuestionGlazingService.SETRANGE("Target No.", "Customer No.");

      IF QuestionGlazingService.ISEMPTY THEN BEGIN
        QuestionGlazingService.SETRANGE("Target Type", QuestionGlazingService."Target Type"::"Customer Posting Group");
        QuestionGlazingService.SETRANGE("Target No.", "Customer Posting Group");
      END;

      IF QuestionGlazingService.FINDSET THEN
        REPEAT
          GlazingServiceCallAnswer."Glazing Service Call No." := "No.";
          GlazingServiceCallAnswer."Question Code" := QuestionGlazingService.Code;
          GlazingServiceCallAnswer."Question Text" := QuestionGlazingService.Question;
          GlazingServiceCallAnswer."Target Type" := QuestionGlazingService."Target Type";
          GlazingServiceCallAnswer."Target No." := QuestionGlazingService."Target No.";
          GlazingServiceCallAnswer.INSERT;
        UNTIL QuestionGlazingService.NEXT = 0;
    END;

    PROCEDURE Touch@1100525003();
    BEGIN
      "Modified by" := USERID;
      "Modified on" := CURRENTDATETIME;
    END;

    PROCEDURE UpdateCallLines@1100525002(FieldNo@1100525000 : Integer);
    VAR
      GlazingServiceCallLine@1100525001 : Record 11125778;
    BEGIN
      GlazingServiceCallLine.SETRANGE("Glazing Service Call No.", "No.");

      IF GlazingServiceCallLine.FINDSET(TRUE, FALSE) THEN
        REPEAT
          CASE FieldNo OF
            Rec.FIELDNO(Region): GlazingServiceCallLine.VALIDATE(Region, Region);
            Rec.FIELDNO("Building Status"): GlazingServiceCallLine.VALIDATE("Building Status", "Building Status");
            Rec.FIELDNO("VAT Bus. Posting Group"): GlazingServiceCallLine.CalcVATAmount2(Rec);
          END;
          GlazingServiceCallLine.MODIFY;
        UNTIL GlazingServiceCallLine.NEXT = 0;
    END;

    PROCEDURE UpdateCallActivityLines@1100525006(FieldNo@1100525001 : Integer);
    VAR
      GlazingServiceCallActivity@1100525000 : Record 11125781;
    BEGIN
      GlazingServiceCallActivity.SETRANGE("Glazing Service Call No.", "No.");

      IF GlazingServiceCallActivity.FINDSET(TRUE, FALSE) THEN
        REPEAT
          CASE FieldNo OF
            Rec.FIELDNO(Date): GlazingServiceCallActivity.VALIDATE("Price Reference Date", Date);
            Rec.FIELDNO("VAT Bus. Posting Group"): GlazingServiceCallActivity.CalcVATAmount2(Rec);
          END;
          GlazingServiceCallActivity.MODIFY;
        UNTIL GlazingServiceCallActivity.NEXT = 0;
    END;

    PROCEDURE UpdateCallAssemblyLines@1100525011(FieldNo@1100525001 : Integer);
    VAR
      GlazingServiceCallAssembly@1100525000 : Record 11125779;
    BEGIN
      GlazingServiceCallAssembly.SETRANGE("Glazing Service Call No.", "No.");

      IF GlazingServiceCallAssembly.FINDSET(TRUE, FALSE) THEN
        REPEAT
          CASE FieldNo OF
            Rec.FIELDNO("VAT Bus. Posting Group"): GlazingServiceCallAssembly.CalcVATAmount2(Rec);
          END;
          GlazingServiceCallAssembly.MODIFY;
        UNTIL GlazingServiceCallAssembly.NEXT = 0;
    END;

    PROCEDURE InitRecord@1100525004();
    BEGIN
      Date := WORKDATE;
    END;

    PROCEDURE TotalCost@1100525012() : Decimal;
    BEGIN
      CALCFIELDS("Total Cost Mounting", "Total Cost Removal", "Standard Cost Amount Assembly", "Item Standard Cost Amount");
      EXIT("Total Cost Mounting" + "Total Cost Removal" + "Item Standard Cost Amount" + "Standard Cost Amount Assembly");
    END;

    PROCEDURE TotalSalesAmount@1100525013() Value : Decimal;
    VAR
      GlazingServiceCall@1100525000 : Record 11125777;
      GlazingServiceCallLine@1210190000 : Record 11125778;
    BEGIN
      GlazingServiceCallLine.SETRANGE("Glazing Service Call No.", "No.");
      IF GlazingServiceCallLine.FINDSET THEN
        REPEAT
          Value += GlazingServiceCallLine.TotalSalesAmount;
        UNTIL GlazingServiceCallLine.NEXT = 0;
      EXIT;

      //CASE "Fixed Price Contract" OF
      //  TRUE:
      //    BEGIN
      //      // jhoek.100910.begin
      //      // CALCFIELDS("Sales Amount Assembly");
      //      // EXIT("Sales Amount Assembly");
      //      CALCFIELDS("Sales Amount Assembly", "Item Sales Amount");
      //      EXIT(ROUND("Sales Amount Assembly" + "Item Sales Amount", Currency."Amount Rounding Precision"));
      //      // jhoek.100910.end
      //    END;
      //  FALSE:
      //    BEGIN
      //      CALCFIELDS("Sales Price Mounting", "Sales Price Removal", "Sales Amount Assembly", "Item Sales Amount");
      //      EXIT(ROUND("Sales Price Mounting" + "Sales Price Removal" + "Item Sales Amount" + "Sales Amount Assembly",
      //        Currency."Amount Rounding Precision"));
      //    END;
      //END;
    END;

    PROCEDURE TotalSalesAmountVAT@1100525010() Value : Decimal;
    VAR
      GlazingServiceCall@1100525000 : Record 11125777;
      GlazingServiceCallLine@1210190000 : Record 11125778;
    BEGIN
      // RFC 547
      GlazingServiceCallLine.SETRANGE("Glazing Service Call No.", "No.");
      IF GlazingServiceCallLine.FINDSET THEN
        REPEAT
          Value += GlazingServiceCallLine.TotalSalesAmountVAT;
        UNTIL GlazingServiceCallLine.NEXT = 0;
      EXIT;

      //CASE "Fixed Price Contract" OF
      //  TRUE:
      //    BEGIN
      //      CALCFIELDS("Sales VAT Amount Assembly", "Item Sales VAT Amount");
      //      EXIT(ROUND("Sales VAT Amount Assembly" + "Item Sales VAT Amount", Currency."Amount Rounding Precision"));
      //    END;
      //  FALSE:
      //    BEGIN
      //      CALCFIELDS("Sales VAT  Amount Mounting", "Sales VAT Amount Removal",
      //                 "Sales VAT Amount Assembly", "Item Sales VAT Amount");
      //      EXIT(ROUND("Sales VAT  Amount Mounting" + "Sales VAT Amount Removal" +
      //           "Item Sales VAT Amount" + "Sales VAT Amount Assembly", Currency."Amount Rounding Precision"));
      //    END;
      //END;
    END;

    PROCEDURE TotalSalesAmountInclVAT@1100525009() Value : Decimal;
    VAR
      GlazingServiceCall@1100525000 : Record 11125777;
      GlazingServiceCallLine@1210190000 : Record 11125778;
    BEGIN
      // RFC 547
      GlazingServiceCallLine.SETRANGE("Glazing Service Call No.", "No.");
      IF GlazingServiceCallLine.FINDSET THEN
        REPEAT
          Value += GlazingServiceCallLine.TotalSalesAmountInclVAT;
        UNTIL GlazingServiceCallLine.NEXT = 0;
      EXIT;

      //CASE "Fixed Price Contract" OF
      //  TRUE:
      //    BEGIN
      //      CALCFIELDS("Sales Amt Assembly incl. VAT", "Item Sales Amount incl. VAT");
      //      EXIT("Sales Amt Assembly incl. VAT" + "Item Sales Amount incl. VAT");
      //    END;
      //  FALSE:
      //    BEGIN
      //      CALCFIELDS("Sales Amt Mounting incl. VAT", "Sales Amt Removal incl. VAT",
      //                  "Sales Amt Assembly incl. VAT", "Item Sales Amount incl. VAT");
      //      EXIT("Sales Amt Mounting incl. VAT" + "Sales Amt Removal incl. VAT" +
      //            "Item Sales Amount incl. VAT" + "Sales Amt Assembly incl. VAT");
      //    END;
      //END;
    END;

    PROCEDURE SelectServiceLocation@1100525005() : Code[20];
    VAR
      ServiceLocation@1100525005 : Record 11012801;
      FindGlazingServiceLocation@1100525004 : Page 11125800;
      HouseNo@1100525003 : Text[50];
      StreetName@1100525002 : Text[50];
      City@1100525001 : Text[50];
      PostCode@1100525000 : Code[20];
    BEGIN
      IF FindGlazingServiceLocation.RUNMODAL = ACTION::OK THEN BEGIN
        FindGlazingServiceLocation.GetValues(PostCode, HouseNo, StreetName, City);

        ServiceLocation.FILTERGROUP(10);
        ServiceLocation.SETFILTER(Address, '* ' + HouseNo);
        ServiceLocation.SETRANGE("Post Code", PostCode);
        ServiceLocation.FILTERGROUP(0);

        CASE ServiceLocation.COUNT OF
          0:
            BEGIN
              IF CONFIRM(Text001, TRUE, ServiceLocation.TABLECAPTION) THEN BEGIN
                ServiceLocation.RESET;

                ServiceLocation.Address := STRSUBSTNO('%1 %2', StreetName, HouseNo);
                ServiceLocation."Post Code" := PostCode;
                ServiceLocation.City := City;
                ServiceLocation.INSERT(TRUE);
                COMMIT;

                ServiceLocation.FILTERGROUP(10);
                ServiceLocation.SETRANGE("No.", ServiceLocation."No.");
                ServiceLocation.FILTERGROUP(0);

                PAGE.RUNMODAL(PAGE::"Service Location", ServiceLocation);
                IF ServiceLocation.FINDFIRST THEN
                  EXIT(ServiceLocation."No.");
              END;
            END;
          1:
            BEGIN
              ServiceLocation.FINDFIRST;
              EXIT(ServiceLocation."No.");
            END;
        ELSE
          IF PAGE.RUNMODAL(0, ServiceLocation) = ACTION::LookupOK THEN
            EXIT(ServiceLocation."No.");
        END;
      END;
    END;

    PROCEDURE CurrentAppointment@1100525008() : Integer;
    BEGIN
      CASE TRUE OF
        "Appointment 6 Date" <> 0D: EXIT(6);
        "Appointment 5 Date" <> 0D: EXIT(5);
        "Appointment 4 Date" <> 0D: EXIT(4);
        "Appointment 3 Date" <> 0D: EXIT(3);
        "Appointment 2 Date" <> 0D: EXIT(2);
        "Appointment 1 Date" <> 0D: EXIT(1);
      END;
    END;

    PROCEDURE CurrentAppointmentDate@1100525015() : Date;
    BEGIN
      CASE CurrentAppointment OF
        0: TESTFIELD("Appointment 1 Date");
        1: EXIT("Appointment 1 Date");
        2: EXIT("Appointment 2 Date");
        3: EXIT("Appointment 3 Date");
        4: EXIT("Appointment 4 Date");
        5: EXIT("Appointment 5 Date");
        6: EXIT("Appointment 6 Date");
      END;
    END;

    PROCEDURE CurrentAppointmentStartingTime@1100525020() : Time;
    BEGIN
      CALCFIELDS("Appointment 1 Starting Time", "Appointment 2 Starting Time", "Appointment 3 Starting Time");
      CALCFIELDS("Appointment 4 Starting Time", "Appointment 5 Starting Time", "Appointment 6 Starting Time");

      CASE CurrentAppointment OF
        1: EXIT("Appointment 1 Starting Time");
        2: EXIT("Appointment 2 Starting Time");
        3: EXIT("Appointment 3 Starting Time");
        4: EXIT("Appointment 4 Starting Time");
        5: EXIT("Appointment 5 Starting Time");
        6: EXIT("Appointment 6 Starting Time");
      END;
    END;

    PROCEDURE GetAppointmentStartingTime@1210190007(AppointmentNo@1210190000 : Integer) : Time;
    BEGIN
      CALCFIELDS("Appointment 1 Starting Time", "Appointment 2 Starting Time", "Appointment 3 Starting Time");
      CALCFIELDS("Appointment 4 Starting Time", "Appointment 5 Starting Time", "Appointment 6 Starting Time");

      CASE AppointmentNo OF
        1: EXIT("Appointment 1 Starting Time");
        2: EXIT("Appointment 2 Starting Time");
        3: EXIT("Appointment 3 Starting Time");
        4: EXIT("Appointment 4 Starting Time");
        5: EXIT("Appointment 5 Starting Time");
        6: EXIT("Appointment 6 Starting Time");
      END;
    END;

    PROCEDURE CurrentAppointmentEndingTime@1100525021() : Time;
    BEGIN
      CALCFIELDS("Appointment 1 Ending Time", "Appointment 2 Ending Time", "Appointment 3 Ending Time");
      CALCFIELDS("Appointment 4 Ending Time", "Appointment 5 Ending Time", "Appointment 6 Ending Time");

      CASE CurrentAppointment OF
        1: EXIT("Appointment 1 Ending Time");
        2: EXIT("Appointment 2 Ending Time");
        3: EXIT("Appointment 3 Ending Time");
        4: EXIT("Appointment 4 Ending Time");
        5: EXIT("Appointment 5 Ending Time");
        6: EXIT("Appointment 6 Ending Time");
      END;
    END;

    PROCEDURE GetAppointmentEndingTime@1210190008(AppointmentNo@1210190000 : Integer) : Time;
    BEGIN
      CALCFIELDS("Appointment 1 Ending Time", "Appointment 2 Ending Time", "Appointment 3 Ending Time");
      CALCFIELDS("Appointment 4 Ending Time", "Appointment 5 Ending Time", "Appointment 6 Ending Time");

      CASE AppointmentNo OF
        1: EXIT("Appointment 1 Ending Time");
        2: EXIT("Appointment 2 Ending Time");
        3: EXIT("Appointment 3 Ending Time");
        4: EXIT("Appointment 4 Ending Time");
        5: EXIT("Appointment 5 Ending Time");
        6: EXIT("Appointment 6 Ending Time");
      END;
    END;

    PROCEDURE LinkToStandardContract@1100525007();
    VAR
      ServiceContract@1100525000 : Record 11012812;
    BEGIN
      //db, 03-07-15: C024468
      TESTFIELD(Status, Status::Open);
      TESTFIELD("Service Location No.");
      TESTFIELD("Service Contract No.", '');

      ServiceContract.SETCURRENTKEY("Customer No.");
      ServiceContract.SETRANGE("Customer No.", '');

      CASE ServiceContract.COUNT OF
        0:
          BEGIN
            ERROR(Text010, ServiceContract.TABLECAPTION, ServiceContract.FIELDCAPTION("Customer No."));
          END;
        1:
          BEGIN
            ServiceContract.FINDFIRST;
          END;
      ELSE
        IF PAGE.RUNMODAL(0, ServiceContract) <> ACTION::LookupOK THEN
          EXIT;
      END;

      "Service Contract No." := ServiceContract."No.";
      MODIFY(TRUE);
    END;

    PROCEDURE TestOrderExists@1210190000(ServiceOrderNo@1210190000 : Code[20]);
    BEGIN
      IF ServiceOrderNo <> '' THEN
        ERROR(Text020);
    END;

    PROCEDURE GetTotalHoursByAppointmentNo@1210190001(AppointmentNo@1210190000 : Integer) TotalHours : Decimal;
    VAR
      GlazingServiceCallLine@1210190002 : Record 11125778;
    BEGIN
      GlazingServiceCallLine.SETRANGE("Glazing Service Call No.", "No.");
      GlazingServiceCallLine.SETRANGE("Appointment No.", AppointmentNo);
      IF NOT GlazingServiceCallLine.FINDSET THEN
        EXIT;
      REPEAT
        GlazingServiceCallLine.CALCFIELDS("Total Hours");
        TotalHours += GlazingServiceCallLine."Total Hours";
      UNTIL GlazingServiceCallLine.NEXT = 0;
    END;

    PROCEDURE TestPreviousAppointment@1210190002(CurrAppointmentNo@1210190000 : Integer);
    BEGIN
      CASE CurrAppointmentNo OF
        2:
          IF "Appointment 1 Date" = 0D THEN
            ERROR(Text021, CurrAppointmentNo -1);
        3:
          IF "Appointment 2 Date" = 0D THEN
            ERROR(Text021, CurrAppointmentNo -1);
        4:
          IF "Appointment 3 Date" = 0D THEN
            ERROR(Text021, CurrAppointmentNo -1);
        5:
          IF "Appointment 4 Date" = 0D THEN
            ERROR(Text021, CurrAppointmentNo -1);
        6:
          IF "Appointment 5 Date" = 0D THEN
            ERROR(Text021, CurrAppointmentNo -1);
      END;
    END;

    PROCEDURE TestNextAppointmentEmpty@1210190003(CurrAppointmentNo@1210190000 : Integer);
    BEGIN
      CASE CurrAppointmentNo OF
        1: TESTFIELD("Appointment 2 Date", 0D);
        2: TESTFIELD("Appointment 3 Date", 0D);
        3: TESTFIELD("Appointment 4 Date", 0D);
        4: TESTFIELD("Appointment 5 Date", 0D);
        5: TESTFIELD("Appointment 6 Date", 0D);
      END;
    END;

    PROCEDURE GetAppointmentServiceOrderNo@1210190004(AppointmentNo@1210190000 : Integer) : Code[20];
    BEGIN
      CASE AppointmentNo OF
        1: EXIT("Appointment 1 Service Order");
        2: EXIT("Appointment 2 Service Order");
        3: EXIT("Appointment 3 Service Order");
        4: EXIT("Appointment 4 Service Order");
        5: EXIT("Appointment 5 Service Order");
        6: EXIT("Appointment 6 Service Order");
      END;
    END;

    PROCEDURE SetAppointmentServiceOrderNo@1210190005(AppointmentNo@1210190000 : Integer;ServiceOrderNo@1210190001 : Code[20]);
    BEGIN
      CASE AppointmentNo OF
        1: "Appointment 1 Service Order" := ServiceOrderNo;
        2: "Appointment 2 Service Order" := ServiceOrderNo;
        3: "Appointment 3 Service Order" := ServiceOrderNo;
        4: "Appointment 4 Service Order" := ServiceOrderNo;
        5: "Appointment 5 Service Order" := ServiceOrderNo;
        6: "Appointment 6 Service Order" := ServiceOrderNo;
      END;
    END;

    PROCEDURE GetAppointmentDate@1210190006(AppointmentNo@1210190000 : Integer) : Date;
    BEGIN
      CASE AppointmentNo OF
        1: EXIT("Appointment 1 Date");
        2: EXIT("Appointment 2 Date");
        3: EXIT("Appointment 3 Date");
        4: EXIT("Appointment 4 Date");
        5: EXIT("Appointment 5 Date");
        6: EXIT("Appointment 6 Date");
      END;
    END;

    PROCEDURE DrillDownAppointmentTotalHours@1210190009(AppointmentNo@1210190002 : Integer);
    VAR
      GlazingServiceCallLine@1210190001 : Record 11125778;
      GlazingServiceCallActivity@1210190000 : Record 11125781;
      MarkGlazingServiceCallActivity@1210190003 : Record 11125781;
    BEGIN
      GlazingServiceCallLine.SETRANGE("Glazing Service Call No.", "No.");
      GlazingServiceCallLine.SETRANGE("Appointment No.", AppointmentNo);
      IF GlazingServiceCallLine.FINDSET THEN
        REPEAT
          GlazingServiceCallActivity.SETRANGE("Glazing Service Call No.", GlazingServiceCallLine."Glazing Service Call No.");
          GlazingServiceCallActivity.SETRANGE("Glazing Service Call Line No.", GlazingServiceCallLine."Line No.");
          IF GlazingServiceCallActivity.FINDSET THEN
            REPEAT
              MarkGlazingServiceCallActivity := GlazingServiceCallActivity;
              MarkGlazingServiceCallActivity.MARK(TRUE);
            UNTIL GlazingServiceCallActivity.NEXT = 0;
        UNTIL GlazingServiceCallLine.NEXT = 0;
      MarkGlazingServiceCallActivity.MARKEDONLY(TRUE);
      PAGE.RUNMODAL(0, MarkGlazingServiceCallActivity);
    END;

    PROCEDURE CheckOrderNoCustomer@1210190010();
    VAR
      GlazingServiceCall@1100525000 : Record 11125777;
      lvText000@1100525001 : TextConst 'ENU=%1 %2 of %3 %4 also assigned to %5 %6';
    BEGIN
      IF ("Order No. Customer" = '') OR ("Customer No." = '') THEN EXIT;

      GlazingServiceCall.SETCURRENTKEY("Customer No.");
      GlazingServiceCall.SETRANGE("Customer No.", "Customer No.");
      GlazingServiceCall.SETRANGE("Order No. Customer", "Order No. Customer");
      GlazingServiceCall.SETFILTER("No.", '<>%1', "No.");
      IF GlazingServiceCall.FINDFIRST THEN BEGIN
      //  IF "Previous Call No." = '' THEN
          MESSAGE(Text022,
            FIELDCAPTION("Order No. Customer"), "Order No. Customer",
            FIELDCAPTION("Customer No."), "Customer No.",
            GlazingServiceCall.TABLECAPTION, GlazingServiceCall."No.");
      END;
    END;

    PROCEDURE TestNoSOsCreated@1210190011();
    BEGIN
      IF "Appointment 1 Service Order" + "Appointment 2 Service Order" + "Appointment 3 Service Order" +
         "Appointment 4 Service Order" + "Appointment 5 Service Order" + "Appointment 6 Service Order" <> ''
      THEN
        ERROR(Text023, FIELDCAPTION("Customer No."));
    END;

    PROCEDURE StartServCalls@1100409000(lvAction@1100485000 : Integer;lvCount@1100485001 : Boolean) : Integer;
    VAR
      lvServCallRec@1100485002 : Record 11125777;
      lvServOrderRec@1100525000 : Record 11012823;
    BEGIN
      //db, 21-12-12: 30184
      IF lvCount AND ("No." = '') THEN EXIT(0);  //C026680

      lvServCallRec.SETFILTER("No.", '<>%1', "No.");
      CASE lvAction OF
        0:
          BEGIN
            lvServCallRec.SETCURRENTKEY("Service Contract No.");
            lvServCallRec.SETRANGE("Service Contract No.", "Service Contract No.");
            IF (lvCount = TRUE) AND ("Service Contract No." = '') THEN EXIT(0);
          END;
        1:
          BEGIN
            lvServCallRec.SETCURRENTKEY("Service Location No.");
            lvServCallRec.SETRANGE("Service Location No.", "Service Location No.");
            IF (lvCount = TRUE) AND ("Service Location No." = '') THEN EXIT(0);
          END;
        2:
          BEGIN
            lvServOrderRec.SETCURRENTKEY("Glazing Service Call No.");
            lvServOrderRec.SETRANGE("Glazing Service Call No.", "No.");
            IF lvCount = FALSE THEN BEGIN
              PAGE.RUNMODAL(0, lvServOrderRec);
              EXIT;
            END ELSE BEGIN
              //IF "Service Order No." = '' THEN  //db, 20-03-13: T001508
              //  EXIT(0)
              //ELSE
                EXIT(lvServOrderRec.COUNT);
            END;
          END;
      END;

      IF lvCount = FALSE THEN BEGIN
        PAGE.RUNMODAL(0, lvServCallRec);
      END ELSE BEGIN
        EXIT(lvServCallRec.COUNT);
      END;
    END;

    PROCEDURE DetermineContractNo@1100528646();
    VAR
      ServiceLocationInfoMgt@1100528600 : Codeunit 11012856;
      ActualServiceContractNo@1100528601 : Code[20];
    BEGIN
      //db, 24-08-15: C024484
      IF "Service Location No." <> '' THEN BEGIN
        ActualServiceContractNo := ServiceLocationInfoMgt.GetActualContractFromLocation("Service Location No.", '', TODAY);
        IF ActualServiceContractNo <> '' THEN
          VALIDATE("Service Contract No.", ActualServiceContractNo);
      END;
    END;

    PROCEDURE ActivateServCallCard@1210190014();
    VAR
      ServiceSetup@1100525000 : Record 11012800;
      GlazingCall@1100409000 : Record 11125777;
    BEGIN
      //C028730
      ServiceSetup.GET;
      GlazingCall := Rec;
      IF ServiceSetup."Page ID Glazing Call" <> 0 THEN
        PAGE.RUN(ServiceSetup."Page ID Glazing Call", GlazingCall)
      ELSE
        PAGE.RUN(PAGE::"Glazing Service Call Card", GlazingCall);
    END;

    PROCEDURE ActivateServOrderCard@1100525014(OrderNo@1100525000 : Code[20]);
    VAR
      ServiceOrder@1100409000 : Record 11012823;
    BEGIN
      //C028891
      ServiceOrder.SETRANGE("Glazing Service Call No.", "No.");
      IF NOT ServiceOrder.GET(OrderNo) THEN
        PAGE.RUN(0, ServiceOrder)
      ELSE
        ServiceOrder.ActivateServOrderCard;
    END;

    LOCAL PROCEDURE GetOrderManager@1100525016();
    VAR
      ServSetup@1100525001 : Record 11012800;
      UserSetup@1100525000 : Record 91;
      ServLocRec@1100525002 : Record 11012801;
      ServContrRec@1100525003 : Record 11012812;
    BEGIN
      //DP01072
      ServSetup.GET;
      IF ServSetup."Order Manager based on" = ServSetup."Order Manager based on"::LocationMgt THEN BEGIN
        IF NOT ServLocRec.GET("Service Location No.") THEN ServLocRec.INIT;
        IF ServLocRec."Location Manager" <> '' THEN
          "Order Manager" := ServLocRec."Location Manager";
      END;

      IF ServSetup."Order Manager based on" = ServSetup."Order Manager based on"::ContractMgt THEN BEGIN
        IF NOT ServContrRec.GET("Service Contract No.") THEN ServContrRec.INIT;
        IF ServContrRec."Contract Manager" <> '' THEN
          "Order Manager" := ServContrRec."Contract Manager";
      END;

      IF ServSetup."Order Manager based on" = ServSetup."Order Manager based on"::User THEN
        IF UserSetup.GET(USERID) THEN
          VALIDATE("Order Manager", UserSetup.Salesperson);
    END;

    BEGIN
    END.
  }
}

