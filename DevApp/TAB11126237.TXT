OBJECT Table 11126237 Raw Material Handling Plan
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               UpdatePlanLines;
             END;

    OnDelete=VAR
               RawMaterialHandlingPlanLine@1100528500 : Record 11126238;
             BEGIN
               RawMaterialHandlingPlanLine.SETRANGE("Project No.", "Project No.");
               RawMaterialHandlingPlanLine.DELETEALL;
             END;

    CaptionML=ENU=Raw Material Handling Plan;
    LookupPageID=Page11126240;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation="Project Raw Material Header";
                                                   OnValidate=VAR
                                                                Project@1100528500 : Record 11072003;
                                                              BEGIN
                                                                Project.GET("Project No.");

                                                                VALIDATE("Starting Date", Project."Starting Date");
                                                                VALIDATE("Ending Date", Project."Ending Date");
                                                              END;

                                                   CaptionML=ENU=Project No.;
                                                   NotBlank=Yes }
    { 20  ;   ;Flow of Skips       ;Option        ;OnValidate=BEGIN
                                                                CalcExpectedSkipQuantityPeriod;
                                                              END;

                                                   CaptionML=ENU=Flow of Skips;
                                                   OptionCaptionML=ENU=Day,Week,Month,Quarter,Year;
                                                   OptionString=Day,Week,Month,Quarter,Year }
    { 30  ;   ;Financial Reporting ;Option        ;OnValidate=BEGIN
                                                                CalcExpectedtoInvoicePerPeriod;
                                                              END;

                                                   CaptionML=ENU=Financial Reporting;
                                                   OptionCaptionML=ENU=Day,Week,Month,Quarter,Year;
                                                   OptionString=Day,Week,Month,Quarter,Year }
    { 40  ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                UpdateRawMaterialPlan;
                                                              END;

                                                   CaptionML=ENU=Starting Date }
    { 50  ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                UpdateRawMaterialPlan;
                                                              END;

                                                   CaptionML=ENU=Ending Date }
    { 60  ;   ;Duration (in Month) ;Integer       ;CaptionML=ENU=Duration (in Month);
                                                   Editable=No }
    { 70  ;   ;Expected Skip Quantity Period;Decimal;
                                                   CaptionML=ENU=Expected Skip Quantity per Period;
                                                   Editable=No }
    { 80  ;   ;Expected to Invoice per Period;Decimal;
                                                   CaptionML=ENU=Expected Amount to Invoice per Period;
                                                   Editable=No;
                                                   AutoFormatType=1 }
  }
  KEYS
  {
    {    ;Project No.                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE CalcDuration@1100528504();
    VAR
      Date@1100528500 : Record 2000000007;
    BEGIN
      IF ("Starting Date" > 0D) AND ("Ending Date" >= "Starting Date") THEN BEGIN
        Date.SETRANGE("Period Type",Date."Period Type"::Month);
        Date.SETRANGE("Period Start", "Starting Date", "Ending Date");
        "Duration (in Month)" := Date.COUNT;
      END ELSE
        "Duration (in Month)" := 0;
    END;

    PROCEDURE DurationInDays@1100528506() : Integer;
    BEGIN
      IF ("Starting Date" > 0D) AND ("Ending Date" >= "Starting Date") THEN
        EXIT("Ending Date" - "Starting Date" + 1);
    END;

    PROCEDURE CalcExpectedSkipQuantityPeriod@1100528500();
    BEGIN
      "Expected Skip Quantity Period" := TotalSkipQuantity / NumberOfPeriodsSkipTransport;
    END;

    PROCEDURE CalcExpectedtoInvoicePerPeriod@1100528502();
    VAR
      ProjectRawMaterialLine@1100528500 : Record 11126236;
    BEGIN
      ProjectRawMaterialLine.SETRANGE("Project No.", "Project No.");
      IF ProjectRawMaterialLine.FINDFIRST THEN
        ProjectRawMaterialLine.CALCFIELDS("Total Amount");
      "Expected to Invoice per Period" := ProjectRawMaterialLine."Total Amount" / NumberOfPeriodsToInvoice;
    END;

    PROCEDURE TotalSkipQuantity@1100528507() : Decimal;
    VAR
      ProjectRawMaterialLine@1100528500 : Record 11126236;
    BEGIN
      ProjectRawMaterialLine.SETRANGE("Project No.", "Project No.");
      IF ProjectRawMaterialLine.FINDFIRST THEN
        ProjectRawMaterialLine.CALCFIELDS("Total Skip Quantity");
      EXIT(ProjectRawMaterialLine."Total Skip Quantity");
    END;

    PROCEDURE NumberOfPeriodsSkipTransport@1100528501() Periods : Integer;
    VAR
      Date@1100528500 : Record 2000000007;
    BEGIN
      IF DurationInDays > 0 THEN BEGIN
        Date.SETRANGE("Period Type", "Flow of Skips");
        Date.SETRANGE("Period Start", "Starting Date", "Ending Date");
        Periods := Date.COUNT;
      END;
      IF Periods = 0 THEN
        Periods := 1
    END;

    PROCEDURE NumberOfPeriodsToInvoice@1100528503() Periods : Integer;
    VAR
      Date@1100528500 : Record 2000000007;
    BEGIN
      IF DurationInDays > 0 THEN BEGIN
        Date.SETRANGE("Period Type", "Financial Reporting");
        Date.SETRANGE("Period Start", "Starting Date", "Ending Date");
        Periods := Date.COUNT;
      END;
      IF Periods = 0 THEN
        Periods := 1
    END;

    PROCEDURE UpdatePlanLines@1100528505();
    VAR
      BuildingPhase@1100528500 : Record 11126230;
      RawMaterialHandlingPlanLine@1100528501 : Record 11126238;
      PrevRawMatHandlingPlanLine@1100528503 : Record 11126238;
      Counter@1100528502 : Integer;
      WrittenDurationDays@1100528504 : Integer;
      TotalPercentage@1100528505 : Decimal;
      RoundingDifferenceInDays@1100528506 : Integer;
    BEGIN
      IF "Project No." = '' THEN
        EXIT;

      IF BuildingPhase.FINDSET THEN BEGIN
        REPEAT
          Counter := Counter + 1;

          RawMaterialHandlingPlanLine."Project No." := "Project No.";
          RawMaterialHandlingPlanLine."Building Phase" := BuildingPhase.Code;
          RawMaterialHandlingPlanLine."Duration Phase (Days)" := ROUND(BuildingPhase.Percentage/100 * DurationInDays, 1);

          //Correct rounding
          TotalPercentage := TotalPercentage + BuildingPhase.Percentage;
          WrittenDurationDays := WrittenDurationDays + RawMaterialHandlingPlanLine."Duration Phase (Days)";
          RoundingDifferenceInDays :=
            ROUND(TotalPercentage/100 * DurationInDays, 1) - WrittenDurationDays;

          IF RoundingDifferenceInDays <> 0 THEN BEGIN
            RawMaterialHandlingPlanLine."Duration Phase (Days)" :=
              RawMaterialHandlingPlanLine."Duration Phase (Days)" + RoundingDifferenceInDays;
            WrittenDurationDays := WrittenDurationDays + RoundingDifferenceInDays;
          END;
          //

          IF "Starting Date" <> 0D THEN
            IF Counter = 1 THEN
              RawMaterialHandlingPlanLine."Starting Date Phase" := "Starting Date"
            ELSE
              RawMaterialHandlingPlanLine."Starting Date Phase" := PrevRawMatHandlingPlanLine."Starting Date Phase" +
                PrevRawMatHandlingPlanLine."Duration Phase (Days)";

          RawMaterialHandlingPlanLine."Quantity Skips Phase" := BuildingPhase.Percentage/100 * TotalSkipQuantity;
          IF NOT RawMaterialHandlingPlanLine.INSERT THEN
            RawMaterialHandlingPlanLine.MODIFY;

          PrevRawMatHandlingPlanLine := RawMaterialHandlingPlanLine;
        UNTIL BuildingPhase.NEXT = 0;
      END;
    END;

    PROCEDURE UpdateRawMaterialPlan@1100528509();
    BEGIN
      CalcDuration;
      CalcExpectedSkipQuantityPeriod;
      CalcExpectedtoInvoicePerPeriod;
      IF MODIFY THEN;
      UpdatePlanLines;
    END;

    BEGIN
    END.
  }
}

