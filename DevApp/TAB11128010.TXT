OBJECT Table 11128010 Inward Reg. Header
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVSE7.00 (11200),4PSSE;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               PurchSetup.GET;

               IF "No." = '' THEN BEGIN
                 TestNoSeries;
                 NoSeriesMgt.InitSeries(PurchSetup."Inward Reg. Nos.",xRec."No. Series","Posting Date","No.","No. Series");
               END;

               PurchHeader.GET("Document Type","Document No.");

               Responsible := PurchHeader."Purchaser Code";
               "VAT Bus. Posting Group" := PurchHeader."VAT Bus. Posting Group";
               "Vendor Posting Group" := PurchHeader."Vendor Posting Group";
               "Gen. Bus. Posting Group" := PurchHeader."Gen. Bus. Posting Group";
               "Posting Date" := PurchHeader."Posting Date";
               "Latest Return" := CALCDATE(PurchSetup."Latest Return Date Calc.",TODAY);
               "Currency Code" := PurchHeader."Currency Code";
               "Currency Factor" := PurchHeader."Currency Factor";
               "Dimension Set ID" := PurchHeader."Dimension Set ID";
               VALIDATE("Vendor Invoice No.",PurchHeader."Vendor Invoice No.");

               TESTFIELD("VAT Bus. Posting Group");
             END;

    OnDelete=BEGIN
               IF Status <> Status::Posted THEN BEGIN
                 InwRegLines.SETRANGE("Document No.","No.");
                 InwRegLines.DELETEALL(TRUE);
               END ELSE
                 ERROR(Text002);
             END;

    CaptionML=ENU=Inward Reg. Header;
    LookupPageID=Page11128014;
    DrillDownPageID=Page11128014;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  PurchSetup.GET;
                                                                  NoSeriesMgt.TestManual(PurchSetup."Inward Reg. Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 2   ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=Quote,Order,Invoice,Credit Memo,Blanket Order;
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order }
    { 3   ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No.;
                                                   Editable=No }
    { 5   ;   ;Posting Date        ;Date          ;OnValidate=BEGIN
                                                                IF "Currency Code" <> '' THEN BEGIN
                                                                  UpdateCurrencyFactor;
                                                                  IF "Currency Factor" <> xRec."Currency Factor" THEN BEGIN
                                                                    IF CONFIRM(Text003,FALSE) THEN
                                                                      VALIDATE("Currency Factor")
                                                                    ELSE
                                                                      "Currency Factor" := xRec."Currency Factor";
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Posting Date }
    { 8   ;   ;Status              ;Option        ;CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=New,Posted,Reversed;
                                                   OptionString=New,Posted,Reversed;
                                                   Editable=No }
    { 10  ;   ;Responsible         ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=ENU=Responsible }
    { 11  ;   ;Latest Return       ;Date          ;CaptionML=ENU=Latest Return }
    { 20  ;   ;Vendor No.          ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Purchase Header"."Buy-from Vendor No." WHERE (Document Type=FIELD(Document Type),
                                                                                                                     No.=FIELD(Document No.)));
                                                   CaptionML=ENU=Vendor No.;
                                                   Editable=No }
    { 21  ;   ;Vendor Name         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Purchase Header"."Buy-from Vendor Name" WHERE (Document Type=FIELD(Document Type),
                                                                                                                      No.=FIELD(Document No.)));
                                                   CaptionML=ENU=Vendor Name;
                                                   Editable=No }
    { 22  ;   ;Vendor Invoice No.  ;Code30        ;OnValidate=BEGIN
                                                                IF Status = Status::Posted THEN
                                                                  ERROR(Text005);

                                                                InwRegHead.SETCURRENTKEY("Document Type","Document No.");
                                                                InwRegHead.SETRANGE("Document Type","Document Type");
                                                                InwRegHead.SETRANGE("Document No.","Document No.");

                                                                InwRegHead.SETRANGE("Vendor Invoice No.","Vendor Invoice No.");
                                                                InwRegHead.SETFILTER(Status,'<> %1' ,Status::Reversed);
                                                                IF InwRegHead.FIND('-') THEN
                                                                  MESSAGE(Text004,"Vendor Invoice No.");
                                                              END;

                                                   CaptionML=ENU=Vendor Invoice No. }
    { 25  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=ENU=VAT Bus. Posting Group }
    { 26  ;   ;Vendor Posting Group;Code10        ;TableRelation="Vendor Posting Group";
                                                   CaptionML=ENU=Vendor Posting Group;
                                                   Editable=No }
    { 27  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=ENU=Gen. Bus. Posting Group }
    { 30  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 40  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                UpdateCurrencyFactor;
                                                                VALIDATE("Currency Factor")
                                                              END;

                                                   CaptionML=ENU=Currency Code }
    { 41  ;   ;Currency Factor     ;Decimal       ;OnValidate=BEGIN
                                                                UpdateInwLines;
                                                              END;

                                                   CaptionML=ENU=Currency Factor }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Document Type,Document No.,No.           }
    {    ;Responsible,Latest Return                }
    {    ;Vendor Invoice No.                       }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PurchSetup@1070000 : Record 312;
      NoSeriesMgt@1070001 : Codeunit 396;
      PurchHeader@1070002 : Record 38;
      InwRegLines@1070003 : Record 11128011;
      CurrExchRate@1070006 : Record 330;
      Text002@1070008 : TextConst 'ENU=A posted inward registration can not be deleted. You have to reverse it first.';
      Text003@1070009 : TextConst 'ENU=Do you want to update the exchange rate?';
      InwRegHead@1070010 : Record 11128010;
      Text004@1070011 : TextConst 'ENU=Vendor invoice %1 is already registered. \\Only one of them can be posted.';
      Text005@1070012 : TextConst 'ENU=Already posted. Reverse, and then it is possible to change vendor invoice number.';

    PROCEDURE AssistEdit@1070002(OldInwRegHeader@1070000 : Record 11128010) : Boolean;
    BEGIN
      PurchSetup.GET;
      TestNoSeries;
      IF NoSeriesMgt.SelectSeries(PurchSetup."Inward Reg. Nos.",OldInwRegHeader."No. Series","No. Series") THEN BEGIN
        PurchSetup.GET;
        TestNoSeries;
        NoSeriesMgt.SetSeries("No.");
        EXIT(TRUE);
      END;
    END;

    PROCEDURE ShowDimensions@4();
    VAR
      DimMgt@1070000 : Codeunit 408;
    BEGIN
      "Dimension Set ID" := DimMgt.EditDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"No."));
    END;

    PROCEDURE TestNoSeries@1070003();
    BEGIN
      PurchSetup.TESTFIELD("Inward Reg. Nos.");
    END;

    PROCEDURE UpdateCurrencyFactor@1070000();
    BEGIN
      IF "Currency Code" <> '' THEN BEGIN
      //**4PSSE
      //  "Currency Factor" := CurrExchRate.ExchangeRate("Posting Date","Currency Code");
        "Currency Factor" := CurrExchRate.ExchangeRate(0,'',"Posting Date","Currency Code",TRUE);
      //**4PSSE
      END ELSE
        "Currency Factor" := 0;
    END;

    PROCEDURE UpdateInwLines@1070001();
    BEGIN
      MODIFY;
      InwRegLines.LOCKTABLE;
      InwRegLines.SETRANGE("Document No.","No.");
      IF InwRegLines.FIND('-') THEN
        REPEAT BEGIN
            IF InwRegLines."VAT Calculation Type" = InwRegLines."VAT Calculation Type"::"Full VAT" THEN
              InwRegLines.Amount := InwRegLines."VAT Amount";
            InwRegLines.VALIDATE(Amount,InwRegLines.Amount);
            InwRegLines.MODIFY;
          END;
        UNTIL InwRegLines.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

