OBJECT Table 11128011 Inward Reg. Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVSE8.00 (11201);
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               GetFromHeader;
               "Dimension Set ID" := InwRegHeader."Dimension Set ID";
             END;

    CaptionML=ENU=Inward Reg. Line;
    LookupPageID=Page11128011;
    DrillDownPageID=Page11128011;
  }
  FIELDS
  {
    { 1   ;   ;Document No.        ;Code20        ;TableRelation="Inward Reg. Header";
                                                   CaptionML=ENU=Document No. }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 5   ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=ENU=Gen. Prod. Posting Group }
    { 6   ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   OnValidate=BEGIN
                                                                GetFromHeader;
                                                                "VAT Bus. Posting Group" := InwRegHeader."VAT Bus. Posting Group" ;

                                                                TESTFIELD("VAT Bus. Posting Group");

                                                                IF VATPostingSetup.GET("VAT Bus. Posting Group","VAT Prod. Posting Group") THEN BEGIN
                                                                  "VAT %" := VATPostingSetup."VAT %";
                                                                  "VAT Calculation Type" := VATPostingSetup."VAT Calculation Type";
                                                                END ELSE
                                                                  ERROR(Text001,"VAT Bus. Posting Group","VAT Prod. Posting Group")
                                                                  ;

                                                                IF "Gen. Prod. Posting Group" = '' THEN BEGIN
                                                                  PurchSetup.GET;
                                                                  "Gen. Prod. Posting Group" := PurchSetup."Def. Inward Reg. Prod. Post Gr";
                                                                END;

                                                                VALIDATE(Amount);
                                                              END;

                                                   CaptionML=ENU=VAT Prod. Posting Group }
    { 7   ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=ENU=VAT Bus. Posting Group }
    { 8   ;   ;VAT Calculation Type;Option        ;CaptionML=ENU=VAT Calculation Type;
                                                   OptionCaptionML=ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                   OptionString=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax }
    { 14  ;   ;Amount              ;Decimal       ;OnValidate=VAR
                                                                CurrencyLCY@1070000 : Record 4;
                                                              BEGIN
                                                                GetFromHeader;
                                                                CurrencyLCY.InitRoundingPrecision;

                                                                VALIDATE("VAT Amount");
                                                                "Amount Including VAT" := Amount + "VAT Amount";

                                                                IF InwRegHeader."Currency Code" <> '' THEN BEGIN
                                                                  "Amount (LCY)" := ROUND(Amount / InwRegHeader."Currency Factor",CurrencyLCY."Amount Rounding Precision" );
                                                                  "VAT Amount (LCY)" := ROUND("VAT Amount" / InwRegHeader."Currency Factor",CurrencyLCY."Amount Rounding Precision" );
                                                                END ELSE BEGIN
                                                                  "Amount (LCY)" := ROUND(Amount,Currency."Amount Rounding Precision");
                                                                  "VAT Amount (LCY)" := ROUND("VAT Amount",Currency."Amount Rounding Precision");
                                                                END;

                                                                "Amount Including VAT (LCY)" := "Amount (LCY)" + "VAT Amount (LCY)";
                                                              END;

                                                   CaptionML=ENU=Amount }
    { 15  ;   ;Amount (LCY)        ;Decimal       ;CaptionML=ENU=Amount (LCY);
                                                   AutoFormatType=1 }
    { 16  ;   ;VAT Amount (LCY)    ;Decimal       ;CaptionML=ENU=VAT Amount (LCY);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 17  ;   ;Amount Including VAT (LCY);Decimal ;CaptionML=ENU=Amount Including VAT (LCY);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 18  ;   ;VAT %               ;Decimal       ;CaptionML=ENU=VAT %;
                                                   Editable=No }
    { 19  ;   ;VAT Amount          ;Decimal       ;OnValidate=BEGIN
                                                                CASE "VAT Calculation Type" OF
                                                                  "VAT Calculation Type"::"Normal VAT":
                                                                    "VAT Amount" := Amount * "VAT %" / 100;
                                                                  "VAT Calculation Type"::"Reverse Charge VAT":
                                                                    "VAT Amount" := 0;
                                                                  "VAT Calculation Type"::"Full VAT":
                                                                    BEGIN
                                                                      "VAT Amount" := Amount;
                                                                      Amount := 0;
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=VAT Amount }
    { 20  ;   ;Amount Including VAT;Decimal       ;CaptionML=ENU=Amount Including VAT }
    { 40  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=ENU=Shortcut Dimension 1 Code;
                                                   Editable=No;
                                                   CaptionClass='1,2,1' }
    { 41  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=ENU=Shortcut Dimension 2 Code;
                                                   Editable=No;
                                                   CaptionClass='1,2,2' }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Document No.,Line No.                   ;Clustered=Yes }
    {    ;Document No.,VAT Prod. Posting Group,Gen. Prod. Posting Group }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      InwRegHeader@1070000 : Record 11128010;
      VATPostingSetup@1070001 : Record 325;
      PurchSetup@1070002 : Record 312;
      Text001@1070003 : TextConst 'ENU=VAT Posting Setup for %1 and %2 does not exist.';
      Text002@1070004 : TextConst 'ENU=You cannot change the inward registration as it has already been posted.';
      Currency@1070005 : Record 4;
      DimMgt@1070006 : Codeunit 408;

    PROCEDURE GetFromHeader@1070001();
    BEGIN
      InwRegHeader.SETCURRENTKEY("No.");
      InwRegHeader.SETRANGE("No.","Document No.");
      InwRegHeader.FIND('-');

      IF InwRegHeader.Status = InwRegHeader.Status::Posted THEN
        ERROR(Text002);

      IF InwRegHeader."Currency Code" = '' THEN
        Currency.InitRoundingPrecision
      ELSE
        Currency.GET(InwRegHeader."Currency Code");
    END;

    PROCEDURE ShowDimensions@25();
    BEGIN
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2 %3',TABLECAPTION,"Document No.","Line No."));
      DimMgt.UpdateGlobalDimFromDimSetID("Dimension Set ID","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    PROCEDURE LookupShortcutDimCode@28(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    PROCEDURE ShowShortcutDimCode@27(VAR ShortcutDimCode@1000 : ARRAY [8] OF Code[20]);
    BEGIN
      DimMgt.GetShortcutDimensions("Dimension Set ID",ShortcutDimCode);
    END;

    BEGIN
    END.
  }
}

