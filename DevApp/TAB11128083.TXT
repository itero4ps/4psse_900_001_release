OBJECT Table 11128083 Project Detail
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    OnModify=VAR
               ProjDetail@1100285002 : Record 11128083;
               ProjDetail2@1100285001 : Record 11128083;
               PSum@1100285000 : Decimal;
             BEGIN
               {
               ProjDetail.SETRANGE(UserID,UserID);
               ProjDetail.SETRANGE("Project No.","Project No.");
               ProjDetail.SETRANGE("Sum Line",TRUE);
               IF ProjDetail.FIND('-') THEN BEGIN
                 REPEAT
                   CLEAR(ProjDetail2);
                   PSum := 0;
                   ProjDetail2.SETRANGE(UserID,UserID);
                   ProjDetail2.SETRANGE("Project No.","Project No.");
                   ProjDetail2.SETRANGE("Code line",FALSE);
                   ProjDetail2.SETRANGE("Sum Line",FALSE);
                   ProjDetail2.SETFILTER("Line No.",'%1..%2',ProjDetail."Total Line No. From",ProjDetail."Total Line No. To");
                   IF ProjDetail2.FIND('-') THEN BEGIN
                     REPEAT
                       PSum := PSum + ProjDetail2."New Prognosis Amount";
                     UNTIL ProjDetail2.NEXT = 0;
                     ProjDetail."New Prognosis Amount":=PSum;
                     ProjDetail.MODIFY;
                   END;
                 UNTIL ProjDetail.NEXT = 0;
               END;
               }
             END;

  }
  FIELDS
  {
    { 1   ;   ;UserID              ;Code50         }
    { 2   ;   ;Project No.         ;Code20         }
    { 3   ;   ;Line No.            ;Integer        }
    { 4   ;   ;Caption             ;Text50         }
    { 5   ;   ;Budget Amount       ;Decimal        }
    { 6   ;   ;GL Amount           ;Decimal        }
    { 7   ;   ;Prognosis Amount    ;Decimal        }
    { 13  ;   ;Budget Line Cost Object;Code10     ;TableRelation="Dimension Value".Code WHERE (Dimension Code=CONST(KOSTNADSOBJEKT)) }
    { 14  ;   ;Budget Line Filter 2;Code10         }
    { 15  ;   ;GL Entry Cost Object;Code10        ;TableRelation="Dimension Value".Code WHERE (Dimension Code=CONST(KOSTNADSOBJEKT)) }
    { 16  ;   ;Exclude Account     ;Text50         }
    { 17  ;   ;Prognosis Cost Object;Code10       ;TableRelation="Dimension Value".Code WHERE (Dimension Code=CONST(KOSTNADSOBJEKT)) }
    { 18  ;   ;Prognosis Line Filter 2;Code10      }
    { 19  ;   ;Budget Contractamount;Boolean       }
    { 20  ;   ;Total Line No. From ;Integer        }
    { 21  ;   ;Total Line No. To   ;Integer        }
    { 22  ;   ;Code line           ;Boolean        }
    { 23  ;   ;Sum Line            ;Boolean        }
    { 24  ;   ;Hide                ;Boolean        }
    { 25  ;   ;Description         ;Text150        }
    { 26  ;   ;Sum Amount          ;Boolean        }
    { 27  ;   ;Sum Quantity        ;Boolean        }
    { 28  ;   ;Calcualation        ;Text30         }
    { 30  ;   ;Cost Type           ;Option        ;CaptionML=ENU=Cost Type;
                                                   OptionCaptionML=ENU=" ,Labor,Material,Subcontracting,Plant,Sundry,Revenue";
                                                   OptionString=[ ,Labor,Material,Subcontracting,Plant,Sundry,Revenue];
                                                   Editable=No }
    { 31  ;   ;Ovearhead Level     ;Integer        }
    { 32  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   CaptionClass='1,1,1' }
    { 33  ;   ;Switch Sign         ;Boolean        }
    { 34  ;   ;New Prognosis Amount;Decimal       ;OnValidate=VAR
                                                                ProjDetail@1100285002 : Record 11128083;
                                                                ProjDetail2@1100285001 : Record 11128083;
                                                                PSum@1100285000 : Decimal;
                                                                Rev@1100285003 : Decimal;
                                                                Cost@1100285004 : Decimal;
                                                                OH1@1000000000 : Decimal;
                                                                OH2@1000000001 : Decimal;
                                                                Tim@1000000002 : Decimal;
                                                              BEGIN
                                                                ProjDetail.SETRANGE(UserID,UserID);
                                                                ProjDetail.SETRANGE("Project No.","Project No.");
                                                                ProjDetail.SETRANGE("Sum Line",TRUE);
                                                                IF ProjDetail.FIND('-') THEN BEGIN
                                                                  REPEAT
                                                                    CLEAR(ProjDetail2);
                                                                    PSum := 0;
                                                                    ProjDetail2.SETRANGE(UserID,UserID);
                                                                    ProjDetail2.SETRANGE("Project No.","Project No.");
                                                                    ProjDetail2.SETRANGE("Code line",FALSE);
                                                                    ProjDetail2.SETRANGE("Sum Line",FALSE);
                                                                    ProjDetail2.SETRANGE("Sum Quantity",FALSE);
                                                                    ProjDetail2.SETFILTER("Line No.",'%1..%2',ProjDetail."Total Line No. From",ProjDetail."Total Line No. To");
                                                                    IF ProjDetail2.FIND('-') THEN BEGIN
                                                                      REPEAT
                                                                        IF (ProjDetail2.UserID=UserID) AND(ProjDetail2."Project No."="Project No.") AND (ProjDetail2."Line No."="Line No.") THEN
                                                                          PSum := PSum + "New Prognosis Amount"
                                                                        ELSE
                                                                          PSum := PSum + ProjDetail2."New Prognosis Amount";

                                                                      UNTIL ProjDetail2.NEXT = 0;
                                                                      ProjDetail."New Prognosis Amount":=PSum;
                                                                      ProjDetail.MODIFY(TRUE);
                                                                    END;
                                                                  UNTIL ProjDetail.NEXT = 0;
                                                                END;

                                                                CLEAR(ProjDetail);

                                                                IF ProjDetail.GET(UserID,"Project No.",40) THEN
                                                                  Rev:=ProjDetail."New Prognosis Amount";
                                                                IF ProjDetail.GET(UserID,"Project No.",290) THEN
                                                                  Cost:=ProjDetail."New Prognosis Amount";

                                                                IF ProjDetail.GET(UserID,"Project No.",189) THEN BEGIN
                                                                  IF (ProjDetail.UserID=UserID) AND(ProjDetail."Project No."="Project No.") AND (ProjDetail."Line No."="Line No.") THEN
                                                                    Tim := "New Prognosis Amount"
                                                                  ELSE
                                                                    Tim:=ProjDetail."New Prognosis Amount";
                                                                END;

                                                                IF ProjDetail.GET(UserID,"Project No.",308) THEN
                                                                  OH1:=ProjDetail."Prognosis Amount";
                                                                IF ProjDetail.GET(UserID,"Project No.",318) THEN
                                                                  OH2:=ProjDetail."Prognosis Amount";

                                                                IF ProjDetail.GET(UserID,"Project No.",300) THEN BEGIN
                                                                  ProjDetail."New Prognosis Amount":=Rev-Cost;
                                                                  ProjDetail.MODIFY(TRUE);
                                                                END;
                                                                IF ProjDetail.GET(UserID,"Project No.",301) THEN BEGIN
                                                                  IF Tim <> 0 THEN
                                                                    ProjDetail."New Prognosis Amount":=((Rev-Cost)/Tim)
                                                                  ELSE
                                                                    ProjDetail."New Prognosis Amount":=0;
                                                                  ProjDetail.MODIFY(TRUE);
                                                                END;
                                                                IF ProjDetail.GET(UserID,"Project No.",302) THEN BEGIN
                                                                  IF Rev<>0 THEN
                                                                    ProjDetail."New Prognosis Amount":=((Rev-Cost)/Rev)*100
                                                                  ELSE
                                                                    ProjDetail."New Prognosis Amount":=0;
                                                                  ProjDetail.MODIFY(TRUE);
                                                                END;
                                                                IF ProjDetail.GET(UserID,"Project No.",310) THEN BEGIN
                                                                  ProjDetail."New Prognosis Amount":=Tim*OH1;
                                                                  ProjDetail.MODIFY(TRUE);
                                                                END;
                                                                IF ProjDetail.GET(UserID,"Project No.",320) THEN BEGIN
                                                                  ProjDetail."New Prognosis Amount":=Tim*OH2;
                                                                  ProjDetail.MODIFY(TRUE);
                                                                END;
                                                                IF ProjDetail.GET(UserID,"Project No.",330) THEN BEGIN
                                                                  ProjDetail."New Prognosis Amount":=(Rev-Cost)-((Tim*OH1)+(Tim*OH2));
                                                                  ProjDetail.MODIFY(TRUE);
                                                                END;
                                                                IF ProjDetail.GET(UserID,"Project No.",500) THEN BEGIN
                                                                  IF Rev<>0 THEN
                                                                    ProjDetail."New Prognosis Amount":=(((Rev-Cost)-((Tim*OH1)+(Tim*OH2)))/Rev)*100
                                                                  ELSE
                                                                    ProjDetail."New Prognosis Amount":=0;
                                                                  ProjDetail.MODIFY(TRUE);
                                                                END;
                                                              END;
                                                               }
    { 35  ;   ;Procent             ;Boolean        }
    { 36  ;   ;InOverview          ;Boolean        }
    { 250 ;   ;Comment             ;Text100       ;CaptionML=ENU=Comment }
    { 251 ;   ;Prognosis comment   ;Text100        }
    { 252 ;   ;Original Budget     ;Decimal        }
    { 253 ;   ;Budget adjustment   ;Decimal        }
  }
  KEYS
  {
    {    ;UserID,Project No.,Line No.             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE LaunchPrognosisList@1100525020();
    VAR
      Prognosis@1100525000 : Record 11012034;
      Job@1100285000 : Record 11072003;
      ProgLine@1100285001 : Record 11012035;
      Text001@1100285002 : TextConst;
    BEGIN
      IF Job.GET("Project No.") THEN BEGIN
        Prognosis.SETRANGE("Project No.","Project No.");
        Prognosis.SETRANGE("Prognosis Level", Job."Prognosis Level");
        IF Prognosis.FIND('+') THEN BEGIN
          ProgLine.SETRANGE("Project No.",Prognosis."Project No.");
          ProgLine.SETRANGE(Level,Prognosis."Prognosis Level");
          IF "Cost Type" = "Cost Type"::Labor THEN BEGIN
            ProgLine.SETRANGE("Cost Type",ProgLine."Cost Type"::Labor);
            PAGE.RUN(PAGE::"Project Detail Prognosis Labor",ProgLine);
          END;
          IF "Cost Type" = "Cost Type"::Material THEN BEGIN
            ProgLine.SETRANGE("Cost Type",ProgLine."Cost Type"::Material);
            PAGE.RUN(PAGE::"Project Detail Prognosis Other",ProgLine);
          END;
          IF "Cost Type" = "Cost Type"::Subcontracting THEN BEGIN
            ProgLine.SETRANGE("Cost Type",ProgLine."Cost Type"::Subcontracting);
            PAGE.RUN(PAGE::"Project Detail Prognosis Other",ProgLine);
          END;
          IF "Cost Type" = "Cost Type"::Plant THEN BEGIN
            ProgLine.SETRANGE("Cost Type",ProgLine."Cost Type"::Plant);
            PAGE.RUN(PAGE::"Project Detail Prognosis Other",ProgLine);
          END;
          IF "Cost Type" = "Cost Type"::Sundry THEN BEGIN
            ProgLine.SETRANGE("Cost Type",ProgLine."Cost Type"::Sundry);
            PAGE.RUN(PAGE::"Project Detail Prognosis Other",ProgLine);
          END;
          IF "Cost Type" = "Cost Type"::Revenue THEN BEGIN
            ProgLine.SETRANGE("Cost Type",ProgLine."Cost Type"::Revenue);
            PAGE.RUN(PAGE::"Project Detail Prognosis Rev.",ProgLine);
          END;
        END ELSE BEGIN
          MESSAGE('%1',Text001);
        END;
      END;
      {
        //>>IME077, OpenPrognosisCardList
        IF (Job."Forecast Level" = Job."Forecast Level"::"Cost Component") AND (Job."Prognosis Level" = Job."Prognosis Level"::Detailed) THEN
          PAGE.RUN(PAGE::"Prognosis CC List",Prognosis)
        ELSE
        //<<IME077

        IF Job."Prognosis Level" = Job."Prognosis Level"::Rough THEN
          PAGE.RUN(PAGE::"Prognosis List Rough Level", Prognosis)
        ELSE
          IF Job."Prognosis Level" = Job."Prognosis Level"::Element THEN
            PAGE.RUN(PAGE::"Prognosis List Element Level", Prognosis)
          ELSE
            PAGE.RUN(PAGE::"Prognosis List Detailed Level", Prognosis);
      END;
      }
    END;

    BEGIN
    END.
  }
}

