OBJECT Table 11128101 ROT Information
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    OnInsert=VAR
               CompanyInformation@1100285000 : Record 79;
             BEGIN
               TESTFIELD("Personal No.");

               IF ("VAT Registration No." = '') THEN BEGIN
                  CompanyInformation.GET();
                  VALIDATE("VAT Registration No.", CompanyInformation."VAT Registration No.");
               END;
               VALIDATE("Quote of ROT Amount");
             END;

    OnDelete=VAR
               ExtendedROTInformation@1100285500 : Record 11128102;
             BEGIN
               // 150320 <<
               ExtendedROTInformation.SETRANGE(Type, Type);
               ExtendedROTInformation.SETRANGE("Invoice No.","Invoice No.");
               ExtendedROTInformation.SETRANGE("Document No.", "Document No.");
               ExtendedROTInformation.SETRANGE("Personal No.", "Document No.");
               ExtendedROTInformation.DELETEALL;
               // 150320 >>
             END;

    CaptionML=ENU=ROT Information;
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Try-Out Quote,Quick Estimate,Project,Invoice,Posted Invoice,Service Order;
                                                   OptionString=Try-Out Quote,Quick Estimate,Project,Invoice,Posted Invoice,Service Order }
    { 2   ;   ;Document No.        ;Code30        ;TableRelation=IF (Type=FILTER(Project)) Job.No.
                                                                 ELSE IF (Type=FILTER(Service Order)) "Service Order".No.
                                                                 ELSE IF (Type=CONST(Quick Estimate)) Estimate.No.
                                                                 ELSE IF (Type=CONST(Try-Out Quote)) "Try-out Quote".Code;
                                                   OnValidate=VAR
                                                                lvJob@1100285500 : Record 11072003;
                                                                lvServiceOrder@1100285501 : Record 11012823;
                                                              BEGIN
                                                                IF (Type = Type::Project) AND (lvJob.GET("Document No.")) THEN BEGIN
                                                                   IF ("Description of Work" = '') THEN "Description of Work" := lvJob.Description;
                                                                   IF ("Starting Date" = 0D) THEN "Starting Date" := lvJob."Starting Date";
                                                                   IF ("Ending Date" = 0D) THEN "Ending Date" := lvJob."Ending Date";
                                                                   IF ("Project Principle" = '') THEN "Project Principle" := lvJob."Bill-to Customer No.";
                                                                   "Invoice Relation" := "Invoice Relation"::Project;
                                                                END ELSE IF (Type = Type::"Service Order") AND (lvServiceOrder.GET("Document No.")) THEN BEGIN
                                                                   IF ("Description of Work" = '') THEN "Description of Work" := lvServiceOrder.Description;
                                                                   IF ("Starting Date" = 0D) THEN "Starting Date" := lvServiceOrder."Starting Date";
                                                                   IF ("Ending Date" = 0D) THEN "Ending Date" := lvServiceOrder."Ending Date";
                                                                   "Invoice Relation" := "Invoice Relation"::"Service Order";
                                                                END;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 3   ;   ;Invoice No.         ;Code30        ;TableRelation=IF (Type=CONST(Invoice)) "Sales Header".No. WHERE (Document Type=CONST(Invoice))
                                                                 ELSE IF (Type=CONST(Posted Invoice)) "Sales Invoice Header".No.;
                                                   CaptionML=ENU=Invoice No. }
    { 4   ;   ;Personal No.        ;Code12        ;CaptionML=ENU=Social Security No. }
    { 5   ;   ;VAT Registration No.;Code20        ;CaptionML=ENU=VAT Registration No.;
                                                   Description=10->20 IME-026 }
    { 6   ;   ;Building/Apartment  ;Option        ;CaptionML=ENU=Building/Apartment;
                                                   OptionCaptionML=ENU=Building,Apartment;
                                                   OptionString=Building,Apartment }
    { 7   ;   ;Building No.        ;Code100       ;CaptionML=ENU=Building No./Apartment No. }
    { 8   ;   ;Apartment Organisation No.;Code10  ;CaptionML=ENU=Apartment Organisation No. (if Appartment) }
    { 9   ;   ;Name                ;Text100       ;CaptionML=ENU=Name }
    { 10  ;   ;Amount              ;Decimal       ;CaptionML=ENU=ROT Reduction;
                                                   Editable=No }
    { 11  ;   ;Description of Work ;Text250       ;CaptionML=ENU=Description of Work }
    { 12  ;   ;Starting Date       ;Date          ;CaptionML=ENU=Starting Date }
    { 13  ;   ;Ending Date         ;Date          ;CaptionML=ENU=Ending Date }
    { 14  ;   ;Quote of ROT Amount ;Decimal       ;OnValidate=VAR
                                                                lvRotInfo@1100285500 : Record 11128101;
                                                                lvRotQuote@1100285501 : Decimal;
                                                                lvCount@1100285502 : Integer;
                                                              BEGIN
                                                                //140206 <<<
                                                                IF ("Quote of ROT Amount" > 100) THEN "Quote of ROT Amount" := 100; // Max 100
                                                                IF ("Quote of ROT Amount" < 0) THEN "Quote of ROT Amount" := 0;     // Min 0

                                                                lvRotInfo.SETRANGE(Type, Type);
                                                                lvRotInfo.SETRANGE("Document No.", "Document No.");
                                                                IF (Type = Type::Project) THEN lvRotInfo.SETRANGE("Project Principle", "Project Principle");
                                                                lvRotInfo.SETFILTER("Personal No.", '<>%1', "Personal No.");
                                                                lvCount := lvRotInfo.COUNT;

                                                                IF (lvCount = 0) THEN BEGIN
                                                                   "Quote of ROT Amount" := 100; // If only one person, set default 100%
                                                                END ELSE BEGIN
                                                                   lvRotQuote := ROUND((100 - "Quote of ROT Amount") / lvCount, 0.001, '<');

                                                                   IF (lvRotInfo.FINDSET(TRUE)) THEN REPEAT   // If more than 1 person, change the other ones to adjust for present value.
                                                                      lvRotInfo."Quote of ROT Amount" := lvRotQuote;
                                                                      lvRotInfo.MODIFY(FALSE);
                                                                   UNTIL lvRotInfo.NEXT = 0;
                                                                END;
                                                                //140206 >>>

                                                                // 140410
                                                                VALIDATE("Labour Cost");
                                                              END;

                                                   CaptionML=ENU=Quote of ROT Amount (%);
                                                   DecimalPlaces=0:3 }
    { 15  ;   ;Labour Cost         ;Decimal       ;OnValidate=VAR
                                                                lvRotInfo@1100285502 : Record 11128101;
                                                                lvRotAmount@1100285501 : Decimal;
                                                                lvCount@1100285500 : Integer;
                                                                lvJob@1100285503 : Record 11072003;
                                                                lvServiceOrder@1100285506 : Record 11012823;
                                                                lvSalesLine@1100285504 : Record 37;
                                                                SumOfSales@1100285505 : Decimal;
                                                                SalesReceivablesSetup@1100285100 : Record 311;
                                                                ROTAmountMax@1100285101 : Decimal;
                                                                ROTPercentage@1100285102 : Integer;
                                                              BEGIN

                                                                //IF (AllowValidation) THEN  // Removed Itero.AC 151215
                                                                GetAndTestROTMax(ROTAmountMax, ROTPercentage); // RFC065

                                                                lvRotInfo.SETRANGE(Type, Type);
                                                                lvRotInfo.SETRANGE("Document No.", "Document No.");
                                                                IF (Type = Type::Project) THEN BEGIN
                                                                   lvJob.GET("Document No.");
                                                                   IF ("Labour Cost" <> 0) THEN IF NOT (AllowValidation) THEN lvJob.TESTFIELD("Settlement Method", lvJob."Settlement Method"::"Fixed Price");
                                                                   lvRotInfo.SETRANGE("Project Principle", "Project Principle");
                                                                END;
                                                                IF (Type = Type::"Service Order") THEN BEGIN
                                                                   lvServiceOrder.GET("Document No.");
                                                                   IF ("Labour Cost" <> 0) THEN IF NOT (AllowValidation) THEN lvServiceOrder.TESTFIELD("Settlement Method", lvServiceOrder."Settlement Method"::"Fixed Price");
                                                                END;
                                                                IF (Type = Type::Invoice) THEN BEGIN
                                                                   lvSalesLine.SETRANGE("Document Type", lvSalesLine."Document Type"::Invoice);
                                                                   lvSalesLine.SETRANGE("Document No.", "Invoice No.");
                                                                   SumOfSales := 0;
                                                                   IF (lvSalesLine.FINDSET(FALSE)) THEN REPEAT
                                                                      SumOfSales += lvSalesLine."Amount Including VAT";
                                                                   UNTIL lvSalesLine.NEXT = 0;
                                                                   IF ("Labour Cost" > SumOfSales) THEN "Labour Cost" := SumOfSales;
                                                                END;
                                                                lvRotInfo.SETFILTER("Personal No.", '<>%1', "Personal No.");
                                                                lvCount := lvRotInfo.COUNT;

                                                                IF (lvCount = 0) THEN BEGIN
                                                                   Amount := (ROTPercentage / 100) * "Labour Cost"; // RFC065
                                                                   IF (Amount > ROTAmountMax) THEN Amount := ROTAmountMax; // RFC065
                                                                   "ROT Percentage" := ROTPercentage;   // ITERO.AC 151215 RFC-065 Bugfix
                                                                END ELSE BEGIN
                                                                   // Divide ROT Amount according to the Rot-Quote
                                                                   // RFC-065: Added Maxamount and percentage calculation from variables instead of fixed values.

                                                                   lvRotAmount := (ROTPercentage / 100) * "Labour Cost"; // RFC-065
                                                                   Amount :=ROUND(lvRotAmount * "Quote of ROT Amount" / 100, 1, '<');
                                                                   IF (Amount > ROTAmountMax) THEN Amount := ROTAmountMax;

                                                                   IF (lvRotInfo.FINDSET(TRUE)) THEN REPEAT   // If more than 1 person, change the other ones to adjust for present value.
                                                                      lvRotInfo."Labour Cost" := "Labour Cost";
                                                                      lvRotInfo.Amount := ROUND(lvRotAmount * lvRotInfo."Quote of ROT Amount" / 100, 1, '<');
                                                                      IF (lvRotInfo.Amount > ROTAmountMax) THEN lvRotInfo.Amount := ROTAmountMax;
                                                                      lvRotInfo."ROT Percentage" := ROTPercentage;   // ITERO.AC 151215 RFC-065 Bugfix
                                                                      lvRotInfo.MODIFY(FALSE);
                                                                   UNTIL lvRotInfo.NEXT = 0;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Labour Cost (fixed price inc. VAT) }
    { 16  ;   ;Project Principle   ;Code20        ;TableRelation="Project Principal".Principal WHERE (Project No.=FIELD(Document No.));
                                                   CaptionML=ENU=Project Principal }
    { 17  ;   ;Invoice Relation    ;Option        ;CaptionML=ENU=Invoice Relation Type;
                                                   OptionCaptionML=ENU=Project,Service Order;
                                                   OptionString=Project,Service Order }
    { 18  ;   ;Extension Lines     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Extended ROT Information" WHERE (Type=FIELD(Type),
                                                                                                       Document No.=FIELD(Document No.),
                                                                                                       Invoice No.=FIELD(Invoice No.),
                                                                                                       Personal No.=FIELD(Personal No.))) }
    { 11128578;;ROT Percentage     ;Decimal       ;Description=RFC065 }
  }
  KEYS
  {
    {    ;Type,Document No.,Invoice No.,Personal No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      AllowValidation@1100285500 : Boolean;

    PROCEDURE ValidateLaborCost@1100285500();
    BEGIN
      AllowValidation := TRUE;
    END;

    PROCEDURE CopyExtendedROTInformation@1100285501(VAR ROTInformation@1100285500 : Record 11128101);
    VAR
      ExtendedROTInformation@1100285501 : Record 11128102;
      ExtendedROTInformation2@1100285502 : Record 11128102;
    BEGIN
      // 150320 <<
      ExtendedROTInformation.SETRANGE(Type, ROTInformation.Type);
      ExtendedROTInformation.SETRANGE("Invoice No.", ROTInformation."Invoice No.");
      ExtendedROTInformation.SETRANGE("Document No.", ROTInformation."Document No.");
      ExtendedROTInformation.SETRANGE("Personal No.", ROTInformation."Personal No.");
      IF (ExtendedROTInformation.FINDSET(FALSE)) THEN REPEAT
         ExtendedROTInformation2 := ExtendedROTInformation;
         ExtendedROTInformation2.Type := Type;                     // 150525
         ExtendedROTInformation2."Document No." := "Document No."; // 150525
         ExtendedROTInformation2."Invoice No." := "Invoice No.";   // 150525
         ExtendedROTInformation2."Personal No." := "Personal No."; // 150525
         ExtendedROTInformation2.INSERT();
      UNTIL ExtendedROTInformation.NEXT = 0;
      // 150320 >>
    END;

    PROCEDURE GetAndTestROTMax@1100285100(VAR RotMax@1100285100 : Decimal;VAR RotPercentage@1100285101 : Integer);
    VAR
      SalesReceivablesSetup@1100285102 : Record 311;
    BEGIN
      //RFC-065
      SalesReceivablesSetup.GET();

      SalesReceivablesSetup.TESTFIELD("ROT Amount Max");
      SalesReceivablesSetup.TESTFIELD("ROT Percentage");

      RotMax := SalesReceivablesSetup."ROT Amount Max";
      RotPercentage := SalesReceivablesSetup."ROT Percentage";     // ITERO.AC 151215 RFC-065 Bugfix
    END;

    BEGIN
    {
      140206 4PSSE.I012 ITERO.MH New Field "Quote of ROT Amount" with code onValidate
      140410 4PSSE.I012 ITERO.MH New field "Labour Cost" for fixed price ROT handeling
      141210 ITERO.MH Added new field for service order handeling - added code for Service order handeling - changed talble relation of Document No.
      150320 ITERO.MH Extended ROT Information addition
      150323 ITERO.MH Check of Personal No. when inserted
      151215 ITERO.AC Bug fixes regarding RFC065 Added field ROT Percentage in order to save used percentage
    }
    END.
  }
}

