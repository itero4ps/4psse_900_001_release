OBJECT Table 11128777 NEN2767 Condition Meas. Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               NEN2767ConditionMeasHeader@1100528600 : Record 11128776;
             BEGIN
               TESTFIELD("Service Object No.");
               TESTFIELD("Measurement Date");
               TESTFIELD("Defect Code");

               IF NOT NEN2767ConditionMeasHeader.GET("Service Object No.", "Measurement Date") THEN
                 NEN2767ConditionMeasHeader.INIT;
               NEN2767ConditionMeasHeader.TESTFIELD("No Defects", FALSE);
             END;

    CaptionML=ENU=NEN2767 Condition Measurement Line;
  }
  FIELDS
  {
    { 10  ;   ;Service Object No.  ;Code20        ;TableRelation=Service-Object;
                                                   CaptionML=ENU=Object No.;
                                                   Editable=No }
    { 20  ;   ;Measurement Date    ;Date          ;CaptionML=ENU=Measurement Date;
                                                   Editable=No }
    { 30  ;   ;Defect Code         ;Code10        ;TableRelation="NEN2767 Defect".Code;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Defect Description");
                                                                DetermineScore;
                                                              END;

                                                   OnLookup=VAR
                                                              NEN2676ElementDefect@1100528600 : Record 11128774;
                                                              ServiceObject@1100528601 : Record 11071691;
                                                            BEGIN
                                                              IF NOT ServiceObject.GET("Service Object No.") THEN
                                                                ServiceObject.INIT;
                                                              NEN2676ElementDefect.SETRANGE("Element No.", ServiceObject."NEN2767 Element Code");
                                                              IF PAGE.RUNMODAL(0, NEN2676ElementDefect) = ACTION::LookupOK THEN
                                                                VALIDATE("Defect Code", NEN2676ElementDefect."Defect Code");
                                                            END;

                                                   CaptionML=ENU=Defect }
    { 40  ;   ;Defect Description  ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("NEN2767 Defect".Description WHERE (Code=FIELD(Defect Code)));
                                                   CaptionML=ENU=Defect Description;
                                                   Editable=No }
    { 50  ;   ;Intensity           ;Option        ;OnValidate=BEGIN
                                                                DetermineScore;
                                                              END;

                                                   CaptionML=ENU=Intensity;
                                                   OptionCaptionML=ENU=" ,Initial,Advanced,Final";
                                                   OptionString=[ ,Initial,Advanced,Final] }
    { 60  ;   ;Scale               ;Option        ;OnValidate=BEGIN
                                                                DetermineScore;
                                                              END;

                                                   CaptionML=ENU=Scale;
                                                   OptionCaptionML=ENU=" ,<2% (Incidental),2%-10% (Local),10%-30% (Regular),30%-70% (Significant),>70% (General)";
                                                   OptionString=[ ,Incidental,Local,Regular,Significant,General] }
    { 70  ;   ;Score               ;Option        ;OnValidate=BEGIN
                                                                CALCFIELDS("Desired Score");
                                                                Indication := Score > "Desired Score";
                                                              END;

                                                   CaptionML=ENU=Score;
                                                   OptionCaptionML=ENU=,1,2,3,4,5,6;
                                                   OptionString=,1,2,3,4,5,6;
                                                   Editable=No }
    { 75  ;   ;Desired Score       ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Service-Object."Desired Condition Score" WHERE (No.=FIELD(Service Object No.)));
                                                   CaptionML=ENU=Desired Score;
                                                   OptionCaptionML=ENU=,1,2,3,4,5,6;
                                                   OptionString=,1,2,3,4,5,6;
                                                   Editable=No }
    { 80  ;   ;Interest            ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("NEN2767 Defect".Interest WHERE (Code=FIELD(Defect Code)));
                                                   CaptionML=ENU=Interest;
                                                   OptionCaptionML=ENU=Severe,Serious,Minor;
                                                   OptionString=Severe,Serious,Minor;
                                                   Editable=No }
    { 90  ;   ;Standard Object No. ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Service-Object."Standard Object No." WHERE (No.=FIELD(Service Object No.)));
                                                   CaptionML=ENU=Standard Object No.;
                                                   Editable=No }
    { 100 ;   ;Comment             ;Text100       ;CaptionML=ENU=Comment }
    { 110 ;   ;Repair Cost         ;Decimal       ;OnValidate=BEGIN
                                                                DetermineScalePercentage;
                                                                DetermineScale;
                                                              END;

                                                   CaptionML=ENU=Repair Cost }
    { 120 ;   ;Condition Measurement Method;Option;FieldClass=FlowField;
                                                   CalcFormula=Lookup("NEN2767 Condition Meas. Header"."Condition Measurement Method" WHERE (Service Object No.=FIELD(Service Object No.),
                                                                                                                                             Measurement Date=FIELD(Measurement Date)));
                                                   CaptionML=ENU=Condition Mesurement Method;
                                                   OptionCaptionML=ENU=Scale,Repair Cost;
                                                   OptionString=Scale,Repair Cost;
                                                   Editable=No }
    { 130 ;   ;Indication          ;Boolean       ;CaptionML=ENU=Indication }
  }
  KEYS
  {
    {    ;Service Object No.,Measurement Date,Defect Code;
                                                   Clustered=Yes }
    {    ;Service Object No.,Measurement Date,Score }
    {    ;Indication                              ;SumIndexFields=Repair Cost }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528600 : TextConst 'ENU=No Replacement Value found at Object %1';

    PROCEDURE DetermineScore@1100528600();
    VAR
      NEN2767Management@1100528600 : Codeunit 11012863;
    BEGIN
      CALCFIELDS(Interest);
      VALIDATE(Score, NEN2767Management.GetConditionScore(Interest, Intensity, Scale));

      CALCFIELDS("Condition Measurement Method");
      DetermineScalePercentage;
    END;

    PROCEDURE DetermineScale@1100528601();
    VAR
      NEN2767Management@1100528602 : Codeunit 11012863;
      ReplacementValue@1100528600 : Decimal;
    BEGIN
      CALCFIELDS("Condition Measurement Method");
      IF "Condition Measurement Method" <> "Condition Measurement Method"::"Repair Cost" THEN
        EXIT;
      ReplacementValue := NEN2767Management.GetReplacementValue("Service Object No.", "Measurement Date");
      IF ReplacementValue = 0 THEN
        ERROR(Text000, "Service Object No.");

      VALIDATE(Scale, NEN2767Management.GetScaleByPercentage("Repair Cost" / ReplacementValue * 100));
    END;

    PROCEDURE DetermineScalePercentage@1100528603();
    VAR
      NEN2767Management@1100528602 : Codeunit 11012863;
      ReplacementValue@1100528600 : Decimal;
    BEGIN
      CALCFIELDS("Condition Measurement Method");
      IF "Condition Measurement Method" <> "Condition Measurement Method"::"2" THEN
        EXIT;
      ReplacementValue := NEN2767Management.GetReplacementValue("Service Object No.", "Measurement Date");
      IF ReplacementValue = 0 THEN
        ERROR(Text000, "Service Object No.");
    END;

    PROCEDURE ShowDocuments@1100528602();
    VAR
      DocumentFilters@1100528601 : Codeunit 11012432;
      RecRef@1100528600 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec);
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, '', FALSE, FALSE);
    END;

    BEGIN
    END.
  }
}

