OBJECT Table 11129005 Dataset Calculated Field
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Dataset Calculated Field;
  }
  FIELDS
  {
    { 10  ;   ;Table ID            ;Integer       ;CaptionML=ENU=Table ID }
    { 20  ;   ;Key Code 1          ;Code50        ;CaptionML=ENU=Key Code 1 }
    { 30  ;   ;Key Code 2          ;Code50        ;CaptionML=ENU=Key Code 2 }
    { 40  ;   ;Key Code 3          ;Code50        ;CaptionML=ENU=Key Code 3 }
    { 50  ;   ;Key Code 4          ;Code50        ;CaptionML=ENU=Key Code 4 }
    { 60  ;   ;Key Date 1          ;Date          ;CaptionML=ENU=Key Date 1 }
    { 100 ;   ;Project Amount Incl. Extension;Decimal;
                                                   CaptionML=ENU=Project Amount Incl. Extension;
                                                   Description=Job }
    { 110 ;   ;Try-out Quote Margin;Decimal       ;CaptionML=ENU=Try-out Quote Margin;
                                                   Description=Try-Out Quote }
    { 120 ;   ;Invoiced Price (LCY);Decimal       ;CaptionML=ENU=Invoiced Price (LCY);
                                                   Description=Project Installment }
    { 130 ;   ;Invoiced Price      ;Decimal       ;CaptionML=ENU=Invoiced Price;
                                                   Description=Project Installment }
    { 140 ;   ;WIP Position        ;Decimal       ;CaptionML=ENU=WIP Position;
                                                   Description=Job }
    { 150 ;   ;Prognosis Financial Result;Decimal ;CaptionML=ENU=Prognosis Financial Result;
                                                   Description=Prognosis }
    { 160 ;   ;Actual Reference Point;Integer     ;Description=Service Order }
    { 170 ;   ;Actual Reference Point Desc;Text50 ;Description=Service Order }
  }
  KEYS
  {
    {    ;Table ID,Key Code 1,Key Code 2,Key Code 3,Key Code 4,Key Date 1;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    LOCAL PROCEDURE DeleteExistingRecords@1100525003(RecRef@1100525000 : RecordRef);
    VAR
      RecordID@1100525001 : RecordID;
    BEGIN
      RecordID := RecRef.RECORDID;

      SETRANGE("Table ID", RecordID.TABLENO);
      DELETEALL;
    END;

    PROCEDURE CalcJobFields@1100525029(FromDate@1100525000 : Date;ToDate@1100525002 : Date);
    VAR
      RecRef@1100525001 : RecordRef;
      RecordID@1100525003 : RecordID;
      Job@1100525004 : Record 11072003;
    BEGIN
      RecRef.GETTABLE(Job);
      DeleteExistingRecords(RecRef);

      Job.SETRANGE("Starting Date", FromDate, ToDate);
      IF Job.FINDSET THEN
        REPEAT
          RecRef.GETTABLE(Job);
          RecordID := RecRef.RECORDID;
          IF NOT GET(RecordID.TABLENO, Job."No.") THEN BEGIN
            INIT;
            "Table ID" := RecordID.TABLENO;
            "Key Code 1" := Job."No.";
            Job.CALCFIELDS(Job."Contract Amount", Job."Extension Contract Amount",
              Job."Options Contract Amount", Job."Actual Costs", Job.Revenues,
              Job."Closed Costs", Job."Closed Revenues");
            "Project Amount Incl. Extension" := (Job."Contract Amount" + Job."Extension Contract Amount" + Job."Options Contract Amount");
            "WIP Position" := ((Job."Actual Costs" + Job."Closed Costs") - (Job.Revenues - Job."Closed Revenues"));
            INSERT;
          END;
        UNTIL Job.NEXT = 0;
    END;

    PROCEDURE CalcProjectInstallmentFields@1100525002();
    VAR
      RecRef@1100525001 : RecordRef;
      RecordID@1100525003 : RecordID;
      ProjectInstallment@1100525004 : Record 11012018;
    BEGIN
      RecRef.GETTABLE(ProjectInstallment);
      DeleteExistingRecords(RecRef);

      IF ProjectInstallment.FINDSET THEN
        REPEAT
          RecRef.GETTABLE(ProjectInstallment);
          RecordID := RecRef.RECORDID;
          IF NOT GET( RecordID.TABLENO,
                      ProjectInstallment."Project No.",
                      ProjectInstallment.Principal,
                      ProjectInstallment."Plot No.",
                      ProjectInstallment."Installment No." )
          THEN BEGIN
            INIT;
            "Table ID" := RecordID.TABLENO;
            "Key Code 1" := ProjectInstallment."Project No.";
            "Key Code 2" := ProjectInstallment.Principal;
            "Key Code 3" := ProjectInstallment."Plot No.";
            "Key Code 4" := ProjectInstallment."Installment No.";
            ProjectInstallment.CALCFIELDS("Invoiced Price (LCY)", "Invoiced Price");
            "Invoiced Price (LCY)" := ProjectInstallment."Invoiced Price (LCY)";
            "Invoiced Price" := ProjectInstallment."Invoiced Price";
            INSERT;
          END;
        UNTIL ProjectInstallment.NEXT = 0;
    END;

    PROCEDURE CalcTryoutQuoteFields@1100525001(FromDate@1100525001 : Date;ToDate@1100525000 : Date);
    VAR
      RecRef@1100525002 : RecordRef;
      RecordID@1100525004 : RecordID;
      TryoutQuote@1100525003 : Record 11012758;
    BEGIN
      RecRef.GETTABLE(TryoutQuote);
      DeleteExistingRecords(RecRef);

      TryoutQuote.SETRANGE("Expected Starting Date", FromDate, ToDate);
      IF TryoutQuote.FINDSET THEN
        REPEAT
          INIT;
          RecRef.GETTABLE(TryoutQuote);
          RecordID := RecRef.RECORDID;
          IF NOT GET(RecordID.TABLENO, TryoutQuote.Code) THEN BEGIN
            "Table ID" := RecordID.TABLENO;
            "Key Code 1" := TryoutQuote.Code;
            "Try-out Quote Margin" := TryoutQuote.TryOutQuoteMargin;
            INSERT;
          END;
        UNTIL TryoutQuote.NEXT = 0;
    END;

    PROCEDURE CalcServiceOrderFields@1100528800(FromDate@1100525000 : Date;ToDate@1100525002 : Date);
    VAR
      RecRef@1100525001 : RecordRef;
      RecordID@1100525003 : RecordID;
      ServiceOrder@1100528800 : Record 11012823;
    BEGIN
      RecRef.GETTABLE(ServiceOrder);
      DeleteExistingRecords(RecRef);

      ServiceOrder.SETRANGE("Order Date", FromDate, ToDate);
      IF ServiceOrder.FINDSET THEN
        REPEAT
          RecRef.GETTABLE(ServiceOrder);
          RecordID := RecRef.RECORDID;
          IF NOT GET(RecordID.TABLENO, ServiceOrder."No.") THEN BEGIN
            INIT;
            "Table ID" := RecordID.TABLENO;
            "Key Code 1" := ServiceOrder."No.";
            ServiceOrder.CALCFIELDS("Actual Reference Point", "Actual Reference Point Desc");
            "Actual Reference Point" := ServiceOrder."Actual Reference Point";
            "Actual Reference Point Desc" := ServiceOrder."Actual Reference Point Desc";
            INSERT;
          END;
        UNTIL ServiceOrder.NEXT = 0;
    END;

    PROCEDURE CalcPrognosisFields@1100525000(FromDate@1100525003 : Date;ToDate@1100525004 : Date);
    VAR
      RecRef@1100525000 : RecordRef;
      RecordID@1100525001 : RecordID;
      Prognosis@1100525002 : Record 11012034;
    BEGIN
      RecRef.GETTABLE(Prognosis);
      DeleteExistingRecords(RecRef);

      Prognosis.SETRANGE("Prognosis Date", FromDate, ToDate);
      IF Prognosis.FINDSET THEN
        REPEAT
          RecRef.GETTABLE(Prognosis);
          RecordID := RecRef.RECORDID;
          IF NOT GET(RecordID.TABLENO, Prognosis."Project No.", '', '', '', Prognosis."Prognosis Date") THEN BEGIN
            INIT;
            "Table ID" := RecordID.TABLENO;
            "Key Code 1" := Prognosis."Project No.";
            "Key Date 1" := Prognosis."Prognosis Date";
            "Project Amount Incl. Extension" := (Prognosis."Rough Prognosis Total Revenues" - Prognosis."Rough Prognosis Total Cost");
            INSERT;
          END;
        UNTIL Prognosis.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

