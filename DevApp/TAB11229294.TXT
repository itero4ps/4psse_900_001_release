OBJECT Table 11229294 Temp. Email Attachment
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               ID := COUNT + 1;
             END;

    CaptionML=ENU=Temp. Email Attachment;
  }
  FIELDS
  {
    { 10  ;   ;ID                  ;Integer       ;CaptionML=ENU=ID }
    { 20  ;   ;Attachment Server File Path;Text250;CaptionML=ENU=Attachment Server File Path }
    { 25  ;   ;Delete Server File  ;Boolean       ;CaptionML=ENU=Delete Server File }
    { 30  ;   ;Attachment Name     ;Text250       ;CaptionML=ENU=Attachment Name }
    { 40  ;   ;Attachment Client File Path;Text250;CaptionML=ENU=Attachment Client File Path }
    { 45  ;   ;Delete Client File  ;Boolean       ;CaptionML=ENU=Delete Client File }
    { 50  ;   ;Save As External Documents;Boolean ;CaptionML=ENU=Save As External Documents }
  }
  KEYS
  {
    {    ;ID                                      ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE DownloadPdfAttachment@1100528500();
    VAR
      TempEmailItem@1100528500 : TEMPORARY Record 9500;
      MailManagement@1100528501 : Codeunit 9520;
    BEGIN
      TempEmailItem."Attachment File Path" := "Attachment Server File Path";
      TempEmailItem."Attachment Name" := "Attachment Name";
      MailManagement.DownloadPdfAttachment(TempEmailItem);
    END;

    PROCEDURE PrintPdfAttachment@1100528400();
    VAR
      UserSetup@1100528402 : Record 91;
      FileManagement@1100528400 : Codeunit 419;
      OperatingSystemMgt@1100528403 : Codeunit 11012364;
      ClientTempFileName@1100528401 : Text;
    BEGIN
      ClientTempFileName := FileManagement.ClientTempFileName('pdf');
      FileManagement.DownloadToFile("Attachment Server File Path", ClientTempFileName);
      UserSetup.GET(USERID);
      UserSetup.TESTFIELD("PDF Reader Path");
      OperatingSystemMgt.ClientShell(
        UserSetup."PDF Reader Path",
        STRSUBSTNO('/p /h "%1"', ClientTempFileName),
        FALSE);
      // Unfortunately deleting ClientTempFile is not possible, because
      // OperatingSystemMgt.ClientShell cannot be called synchronously in this case.
      // This cannot be done because the PDF reader remains open after printing, and
      // OperatingSystemMgt.ClientShell will not continue until the PDF reader has been closed.
      // ClientTempFile will automatically be deleted after the user has finished his NAV session.
    END;

    PROCEDURE DeleteTempEmailAttachmentFiles@1100528506(VAR TempEmailAttachment@1100528500 : TEMPORARY Record 11229294);
    VAR
      FileManagement@1100528400 : Codeunit 419;
    BEGIN
      IF TempEmailAttachment.FINDSET THEN
        REPEAT
          IF TempEmailAttachment."Delete Server File" THEN
            IF EXISTS(TempEmailAttachment."Attachment Server File Path") THEN
              ERASE(TempEmailAttachment."Attachment Server File Path");
          IF TempEmailAttachment."Delete Client File" THEN
            IF FileManagement.ClientFileExists(TempEmailAttachment."Attachment Client File Path") THEN
              FileManagement.DeleteClientFile(TempEmailAttachment."Attachment Client File Path");
        UNTIL TempEmailAttachment.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

