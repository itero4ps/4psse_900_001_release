OBJECT Table 11229311 Project Object
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ServiceSetup@1100528600 : Record 11012800;
             BEGIN
               IF "No." = '' THEN BEGIN
                 ProjSetup.GET;
                 ProjSetup.TESTFIELD("Project Object Nos.");
                 NoSeriesMgt.InitSeries(ProjSetup."Project Object Nos.", xRec."No. Series", 0D, "No.", "No. Series");
               END;
               "Created by" := USERID;
               "Created on" := CURRENTDATETIME;
             END;

    OnModify=VAR
               BuildingObjectRelation@1100528300 : Record 11071820;
             BEGIN
               "Modified by" := USERID;
               "Modified on" := CURRENTDATETIME;
             END;

    OnDelete=VAR
               ProjectObjectProperty@1100529000 : Record 11229314;
             BEGIN
               ProjectObjectProperty.SETRANGE("Project Object No.", "No.");
               ProjectObjectProperty.DELETEALL;
             END;

    CaptionML=ENU=Project Object;
    LookupPageID=Page11126594;
    DrillDownPageID=Page11126594;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  ProjSetup.GET;
                                                                  NoSeriesMgt.TestManual(ProjSetup."Project Object Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 20  ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=VAR
                                                                Item@1100525000 : Record 27;
                                                                xRecItem@1100525001 : Record 27;
                                                              BEGIN
                                                                IF "Item No." <> '' THEN BEGIN
                                                                  Item.GET("Item No.");
                                                                  IF Description = '' THEN BEGIN
                                                                    VALIDATE(Description, Item.Description);
                                                                    VALIDATE("Description 2", Item."Description 2");
                                                                  END ELSE BEGIN
                                                                    IF ("Item No." <> xRec."Item No.") AND (xRec."Item No." <> '') THEN BEGIN
                                                                      IF xRecItem.GET(xRec."Item No.") THEN BEGIN
                                                                        IF Description = xRecItem.Description THEN BEGIN
                                                                          VALIDATE(Description, Item.Description);
                                                                          VALIDATE("Description 2", Item."Description 2");
                                                                        END;
                                                                      END;
                                                                    END;
                                                                  END;
                                                                  IF ("Cost Object" = '') OR (("Item No." <> xRec."Item No.") AND (Item."Global Dimension 2 Code" <> '')) THEN
                                                                    VALIDATE("Cost Object", Item."Global Dimension 2 Code");
                                                                END;
                                                                CALCFIELDS("Item Description");
                                                              END;

                                                   CaptionML=ENU=Item No. }
    { 21  ;   ;Item Description    ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item.Description WHERE (No.=FIELD(Item No.)));
                                                   CaptionML=ENU=Item Description;
                                                   Editable=No }
    { 30  ;   ;Cost Object         ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=VAR
                                                                DimVal@1100525000 : Record 349;
                                                                xRecDimVal@1100525002 : Record 349;
                                                                DimMgt@1100525001 : Codeunit 408;
                                                              BEGIN
                                                                ValidateShortcutDimCode(2,"Cost Object");
                                                                IF "Cost Object" <> '' THEN BEGIN
                                                                  IF "Item No." = '' THEN BEGIN
                                                                    DimMgt.GetDimValueRec(2, "Cost Object", DimVal, TRUE, '');
                                                                    IF Description = '' THEN
                                                                      VALIDATE(Description, DimVal.Name)
                                                                    ELSE BEGIN
                                                                      IF ("Cost Object" <> xRec."Cost Object") AND (xRec."Cost Object" <> '') THEN BEGIN
                                                                        DimMgt.GetDimValueRec(2, xRec."Cost Object", xRecDimVal, FALSE, '');
                                                                        IF (Description = xRecDimVal.Name) THEN
                                                                          VALIDATE(Description, DimVal.Name);
                                                                      END;
                                                                    END;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Cost Object }
    { 50  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 51  ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
    { 60  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Project Description");
                                                              END;

                                                   CaptionML=ENU=Project No. }
    { 61  ;   ;Project Description ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=ENU=Project Description;
                                                   Editable=No }
    { 70  ;   ;Building            ;Text30        ;CaptionML=ENU=Building }
    { 80  ;   ;Floor               ;Text30        ;CaptionML=ENU=Floor }
    { 90  ;   ;Room                ;Text30        ;CaptionML=ENU=Room }
    { 100 ;   ;Blocked             ;Boolean       ;CaptionML=ENU=Blocked }
    { 110 ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=ENU=Vendor No. }
    { 111 ;   ;Vendor Name         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Vendor No.)));
                                                   CaptionML=ENU=Vendor Name;
                                                   Editable=No }
    { 120 ;   ;Purchase Order No.  ;Code20        ;TableRelation="Purchase Header".No. WHERE (Document Type=CONST(Order));
                                                   OnLookup=VAR
                                                              PurchOrder@1100529000 : Record 38;
                                                            BEGIN
                                                              IF "Purchase Order No." <> '' THEN BEGIN
                                                                IF PurchOrder.GET(PurchOrder."Document Type"::Order, "Purchase Order No.") THEN BEGIN
                                                                  PAGE.RUNMODAL(PAGE::"Purchase Order", PurchOrder);
                                                                  EXIT;
                                                                END;
                                                              END;
                                                              PurchOrder.SETCURRENTKEY("Document Type", "Job No.");
                                                              PurchOrder.SETRANGE("Job No.", "Project No.");
                                                              PAGE.RUNMODAL(PAGE::"Purchase Order List", PurchOrder);
                                                            END;

                                                   CaptionML=ENU=Purchase Order No.;
                                                   Editable=No }
    { 200 ;   ;Modified by         ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Modified by;
                                                   Editable=No }
    { 201 ;   ;Modified on         ;DateTime      ;CaptionML=ENU=Modified on;
                                                   Editable=No }
    { 205 ;   ;Created by          ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Created by;
                                                   Editable=No }
    { 206 ;   ;Created on          ;DateTime      ;CaptionML=ENU=Created on;
                                                   Editable=No }
    { 210 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 230 ;   ;BIM Model No.       ;Code20        ;TableRelation="BIM Model";
                                                   CaptionML=ENU=BIM Model No.;
                                                   Editable=No }
    { 240 ;   ;IFC Object ID       ;Text30        ;CaptionML=ENU=IFC Object ID;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Project No.                              }
    {    ;BIM Model No.,IFC Object ID              }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ProjSetup@1100525000 : Record 315;
      NoSeriesMgt@1100525001 : Codeunit 396;
      Text000@1100528600 : TextConst 'ENU=Replace existing description by %1/%2?';
      Text001@1100528601 : TextConst 'ENU=Object %1 is linked to Service Contract %2, removal not allowed';
      Text002@1100528602 : TextConst 'ENU=The Object Will Be Disabled Within Contracts, Continue?';
      Text003@1100528300 : TextConst 'ENU=Object %1 related to one or more buildings.';
      Text004@1100528301 : TextConst 'ENU=No Preferred Building defined in %1 with object %2';
      Text005@1100528603 : TextConst 'ENU=No Service Location(s) selected with Building 51';
      Text006@1100528604 : TextConst 'ENU=Object %1 is used in table %2. Removal not allowed.';
      Text007@1100529000 : TextConst 'ENU=No %1 selected with %2 filled and %3 empty';
      Text008@1100529001 : TextConst 'ENU=Create purchase order(s)?';
      Text009@1100529002 : TextConst 'ENU=Created order: %1';

    PROCEDURE AssistEdit@2(OldProjectObject@1000 : Record 11229311) : Boolean;
    VAR
      ProjectObject@1001 : Record 11229311;
    BEGIN
      WITH ProjectObject DO BEGIN
        ProjectObject := Rec;
        ProjSetup.GET;
        ProjSetup.TESTFIELD("Project Object Nos.");
        IF NoSeriesMgt.SelectSeries(ProjSetup."Project Object Nos.",OldProjectObject."No. Series", "No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := ProjectObject;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE ValidateShortcutDimCode@8(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    VAR
      DimMgt@1100525000 : Codeunit 408;
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
    END;

    PROCEDURE GetCostObjectDescription@1100529000() : Text;
    VAR
      DimVal@1100529000 : Record 349;
      DimMgt@1100529001 : Codeunit 408;
    BEGIN
      DimMgt.GetDimValueRec(2, "Cost Object", DimVal, FALSE, "Project No.");
      EXIT(DimVal.Name);
    END;

    PROCEDURE CreatePurchaseOrder@1100529001(VAR ProjectObject@1100529000 : Record 11229311);
    VAR
      TmpVendorPurchOrder@1100529001 : TEMPORARY Record 23;
      LastCreatedOrderNo@1100529003 : Code[20];
      CreatedOrdersTxt@1100529002 : Text;
    BEGIN
      WITH ProjectObject DO BEGIN
        FILTERGROUP(11);
        SETFILTER("Vendor No.", '<>%1', '');
        SETRANGE("Purchase Order No.", '');
        FILTERGROUP(0);
        IF NOT FINDFIRST THEN
          ERROR(Text007, TABLECAPTION, FIELDCAPTION("Vendor No."), FIELDCAPTION("Purchase Order No."));
        IF NOT CONFIRM(Text008 , FALSE) THEN
          ERROR('');

        //Check
        REPEAT
          TESTFIELD("Vendor No.");
          TESTFIELD("Project No.");
          TESTFIELD(Blocked, FALSE);
        UNTIL NEXT = 0;

        //Create
        FINDSET(TRUE,FALSE);
        REPEAT
          IF NOT TmpVendorPurchOrder.GET("Vendor No.") THEN BEGIN
            LastCreatedOrderNo := InsertPurchOrderHead(ProjectObject);
            TmpVendorPurchOrder."No." := "Vendor No.";
            TmpVendorPurchOrder."Preference Account No." := LastCreatedOrderNo;  // Preference Account No. used for created OrderNo
            TmpVendorPurchOrder.Priority := 1;                                   // and Priority for NextLineNo (per Vendor)
            TmpVendorPurchOrder.INSERT;
            IF CreatedOrdersTxt = '' THEN
              CreatedOrdersTxt := LastCreatedOrderNo;
          END;
          InsertPurchOrderLine(ProjectObject, TmpVendorPurchOrder."Preference Account No.", TmpVendorPurchOrder.Priority);
          TmpVendorPurchOrder.Priority := TmpVendorPurchOrder.Priority + 1;
          TmpVendorPurchOrder.MODIFY;
          //
          "Purchase Order No." := TmpVendorPurchOrder."Preference Account No.";
          MODIFY;
        UNTIL NEXT = 0;
        IF CreatedOrdersTxt <> LastCreatedOrderNo THEN
          CreatedOrdersTxt := CreatedOrdersTxt + '..' + LastCreatedOrderNo;
        MESSAGE(Text009, CreatedOrdersTxt);
      END;
    END;

    LOCAL PROCEDURE InsertPurchOrderHead@1100529002(ProjectObject@1100529001 : Record 11229311) : Code[20];
    VAR
      PurchHead@1100529000 : Record 38;
    BEGIN
      PurchHead.INIT;
      PurchHead."Document Type" := PurchHead."Document Type"::Order;
      PurchHead."No." := '';
      PurchHead.INSERT(TRUE);
      PurchHead.TESTFIELD("No.");
      PurchHead.VALIDATE("Buy-from Vendor No.", ProjectObject."Vendor No.");
      PurchHead.VALIDATE("Job No.", ProjectObject."Project No.");
      //TOODO More fields needed     CreatePurchase Order now only Demo Versio!
      PurchHead.MODIFY(TRUE);
      EXIT(PurchHead."No.");
    END;

    LOCAL PROCEDURE InsertPurchOrderLine@1100529003(ProjectObject@1100529001 : Record 11229311;PurchOrderNo@1100529002 : Code[20];NextLineNo@1100529003 : Integer);
    VAR
      PurchLine@1100529000 : Record 39;
    BEGIN
      PurchLine.INIT;
      PurchLine."Document Type" := PurchLine."Document Type"::Order;
      PurchLine."Document No." := PurchOrderNo;
      PurchLine."Line No." := NextLineNo;
      PurchLine.InitRecord;
      PurchLine.INSERT(TRUE);
      PurchLine.VALIDATE("Job No.", ProjectObject."Project No.");
      IF ProjectObject."Item No." <> '' THEN
        PurchLine.VALIDATE("Item No.", ProjectObject."Item No.");
      IF ProjectObject."Cost Object" <> '' THEN
        PurchLine.VALIDATE("Shortcut Dimension 2 Code", ProjectObject."Cost Object");
      IF ProjectObject.Description <> '' THEN BEGIN
        Description := ProjectObject.Description;
        "Description 2" := ProjectObject."Description 2";
      END;
      PurchLine.VALIDATE(Quantity, 1);
      //TOODO More fields needed. Now always qty=1 and no unit code etc.
      PurchLine.MODIFY(TRUE);
    END;

    BEGIN
    END.
  }
}

