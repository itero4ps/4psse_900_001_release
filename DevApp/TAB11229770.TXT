OBJECT Table 11229770 Estimate Curr. Exchange Rate
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Currency Code;
    CaptionML=ENU=Estimate Currency Exchange Rate;
    LookupPageID=Page483;
    DrillDownPageID=Page483;
  }
  FIELDS
  {
    { 1   ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF "Currency Code" = "Relational Currency Code" THEN
                                                                  ERROR(
                                                                    Text000,FIELDCAPTION("Currency Code"),FIELDCAPTION("Relational Currency Code"));
                                                              END;

                                                   CaptionML=ENU=Currency Code;
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 2   ;   ;Starting Date       ;Date          ;CaptionML=ENU=Starting Date;
                                                   NotBlank=Yes }
    { 3   ;   ;Exchange Rate Amount Sales;Decimal ;OnValidate=BEGIN
                                                                TESTFIELD("Exchange Rate Amount Sales");
                                                              END;

                                                   CaptionML=ENU=Exchange Rate Amount Sales;
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 4   ;   ;Adjustment Exch. Rate Amount;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Adjustment Exch. Rate Amount");
                                                              END;

                                                   CaptionML=ENU=Adjustment Exch. Rate Amount;
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 5   ;   ;Relational Currency Code;Code10    ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF "Currency Code" = "Relational Currency Code" THEN
                                                                  ERROR(
                                                                    Text000,FIELDCAPTION("Currency Code"),FIELDCAPTION("Relational Currency Code"));
                                                              END;

                                                   CaptionML=ENU=Relational Currency Code }
    { 6   ;   ;Relat. Exch. Rate Amt Sales;Decimal;OnValidate=BEGIN
                                                                TESTFIELD("Relat. Exch. Rate Amt Sales");
                                                              END;

                                                   CaptionML=ENU=Relational Exch. Rate Amount Sales;
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 7   ;   ;Fix Exchange Rate Amount;Option    ;CaptionML=ENU=Fix Exchange Rate Amount;
                                                   OptionCaptionML=ENU=Currency,Relational Currency,Both;
                                                   OptionString=Currency,Relational Currency,Both }
    { 8   ;   ;Relational Adjmt Exch Rate Amt;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Relational Adjmt Exch Rate Amt");
                                                              END;

                                                   CaptionML=ENU=Relational Adjmt Exch Rate Amt;
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 10  ;   ;Estimate No.        ;Code20        ;TableRelation=Estimate WHERE (Converted=CONST(Yes),
                                                                                 RAW Estimate=CONST(No));
                                                   CaptionML=ENU=Estimate No. }
    { 11  ;   ;Description         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Estimate.Description WHERE (No.=FIELD(Estimate No.)));
                                                   CaptionML=ENU=Description;
                                                   Editable=No }
    { 11012000;;Exchange Rate Amount Purchase;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Exchange Rate Amount Purchase");
                                                              END;

                                                   CaptionML=ENU=Exchange Rate Amount Purchase;
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 11012001;;Relat. Exch. Rate Amt Purchase;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Relat. Exch. Rate Amt Purchase");
                                                              END;

                                                   CaptionML=ENU=Relational Exch. Rate Amount Purchase;
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
  }
  KEYS
  {
    {    ;Estimate No.,Currency Code,Starting Date;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The currency code in the %1 field and the %2 field cannot be the same.';
      Estimate@1100528200 : Record 11012151;
      IsReady@1210190000 : Boolean;

    PROCEDURE FindCurrency@7(IEstimateNo@1100525000 : Code[20];IDate@1000 : Date;ICurrencyCode@1001 : Code[10];VAR OCurrencyExchRateRec@1100525001 : Record 330) : Boolean;
    VAR
      EstimateCurrExchangeRate@1100525010 : Record 11229770;
    BEGIN
      IF IDate = 0D THEN
        IDate := WORKDATE;
      EstimateCurrExchangeRate.SETRANGE("Estimate No.", IEstimateNo);
      EstimateCurrExchangeRate.SETRANGE("Currency Code", ICurrencyCode);
      EstimateCurrExchangeRate.SETRANGE("Starting Date", 0D, IDate);
      IF EstimateCurrExchangeRate.FINDLAST THEN BEGIN
        OCurrencyExchRateRec.TRANSFERFIELDS(EstimateCurrExchangeRate);
        EXIT(TRUE);
      END;
    END;

    PROCEDURE FindCurrency2@1100528600(IEstimateNo@1100525000 : Code[20];IDate@1000 : Date;ICurrencyCode@1001 : Code[10]) : Boolean;
    VAR
      EstimateCurrExchangeRate@1100525010 : Record 11229770;
    BEGIN
      IF IDate = 0D THEN
        IDate := WORKDATE;
      EstimateCurrExchangeRate.SETRANGE("Estimate No.", IEstimateNo);
      EstimateCurrExchangeRate.SETRANGE("Currency Code", ICurrencyCode);
      EstimateCurrExchangeRate.SETRANGE("Starting Date", 0D, IDate);
      IF EstimateCurrExchangeRate.FINDLAST THEN BEGIN
        Rec := EstimateCurrExchangeRate;
        EXIT(TRUE);
      END;
    END;

    PROCEDURE CopyExchRates@1100528200(IGeneral@1100528200 : Boolean;IFromEstimateNo@1100528201 : Code[20];IToEstimateNo@1100528202 : Code[20];ICurrencyCode@1100528203 : Code[10]);
    BEGIN
      IF IGeneral THEN
        CopyExchRatesGeneral(IToEstimateNo, ICurrencyCode)
      ELSE
        CopyExchRatesProject(IFromEstimateNo, IToEstimateNo, ICurrencyCode)
    END;

    PROCEDURE CopyExchRatesGeneral@1100528201(IToEstimateNo@1100528202 : Code[20];ICurrencyCode@1100528203 : Code[10]);
    VAR
      CurrencyExchangeRate@1100528200 : Record 330;
      EstimateCurrExchangeRate@1100528201 : Record 11229770;
      EstimateCurrExchangeRate2@1100525000 : Record 11229770;
    BEGIN
      IF IToEstimateNo = '' THEN
        EXIT;
      CurrencyExchangeRate.RESET;
      CurrencyExchangeRate.SETRANGE("Currency Code", ICurrencyCode);
      IF CurrencyExchangeRate.FINDLAST THEN BEGIN
        IsReady := FALSE;
        REPEAT
          EstimateCurrExchangeRate.TRANSFERFIELDS(CurrencyExchangeRate);
          EstimateCurrExchangeRate.VALIDATE("Estimate No.", IToEstimateNo);
          IF EstimateCurrExchangeRate2.GET(
            EstimateCurrExchangeRate."Estimate No.",
            EstimateCurrExchangeRate."Currency Code",
            EstimateCurrExchangeRate."Starting Date") THEN
              EstimateCurrExchangeRate.MODIFY(TRUE)
            ELSE
              EstimateCurrExchangeRate.INSERT(TRUE);

          IF EstimateCurrExchangeRate."Starting Date" <= TODAY THEN
            IsReady := TRUE;
        UNTIL IsReady OR (CurrencyExchangeRate.NEXT(-1) = 0);
      END;
    END;

    PROCEDURE CopyExchRatesProject@1100528202(IFromEstimateNo@1100528200 : Code[20];IToEstimateNo@1100528201 : Code[20];ICurrencyCode@1100528202 : Code[10]);
    VAR
      EstimateCurrExchangeRateFrom@1100528203 : Record 11229770;
      EstimateCurrExchangeRateTo@1100528204 : Record 11229770;
      EstimateCurrExchangeRateTo2@1100525000 : Record 11229770;
    BEGIN
      IF IToEstimateNo = '' THEN
        EXIT;
      EstimateCurrExchangeRateFrom.RESET;
      EstimateCurrExchangeRateFrom.SETRANGE("Estimate No.", IFromEstimateNo);
      EstimateCurrExchangeRateFrom.SETRANGE("Currency Code", ICurrencyCode);
      IF EstimateCurrExchangeRateFrom.FINDLAST THEN BEGIN
        IsReady := FALSE;
        REPEAT
          EstimateCurrExchangeRateTo.TRANSFERFIELDS(EstimateCurrExchangeRateFrom);
          EstimateCurrExchangeRateTo.VALIDATE("Estimate No.", IToEstimateNo);

          IF EstimateCurrExchangeRateTo2.GET(
            EstimateCurrExchangeRateTo."Estimate No.",
            EstimateCurrExchangeRateTo."Currency Code",
            EstimateCurrExchangeRateTo."Starting Date") THEN BEGIN
              EstimateCurrExchangeRateTo.TRANSFERFIELDS(EstimateCurrExchangeRateTo, FALSE);
              EstimateCurrExchangeRateTo2.MODIFY(TRUE)
            END ELSE
              EstimateCurrExchangeRateTo.INSERT(TRUE);

          IF EstimateCurrExchangeRateTo."Starting Date" <= TODAY THEN
            IsReady := TRUE;
        UNTIL IsReady OR (EstimateCurrExchangeRateFrom.NEXT(-1) = 0);
      END;
    END;

    BEGIN
    END.
  }
}

