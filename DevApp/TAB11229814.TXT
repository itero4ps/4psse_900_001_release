OBJECT Table 11229814 Default Resp Pers Perm (PPT)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnModify=BEGIN
               CALCFIELDS("High Security Subsite");
               IF (NOT "High Security Subsite") AND (Type = Type::Access) THEN
                 "Document Type" := '';
               CheckPermissions;
             END;

    CaptionML=ENU=Default Resp Pers Perm (PPT);
  }
  FIELDS
  {
    { 3   ;   ;Subsite Type        ;Option        ;CaptionML=ENU=Subsite Type;
                                                   OptionCaptionML=ENU=Project,Service Location;
                                                   OptionString=Project,ServLoc;
                                                   Editable=No }
    { 5   ;   ;Type                ;Option        ;OptionCaptionML=ENU=,Access,Filter;
                                                   OptionString=,Access,Filter;
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 10  ;   ;Responsibility      ;Code10        ;TableRelation=Responsibility;
                                                   CaptionML=ENU=Responsibility;
                                                   NotBlank=Yes }
    { 11  ;   ;Responsibility Description;Text100 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Responsibility.Description WHERE (Code=FIELD(Responsibility)));
                                                   CaptionML=ENU=Responsibility Description;
                                                   Editable=No }
    { 20  ;   ;Project Portal Subsite;Code20      ;TableRelation=IF (Type=FILTER(<>Access)) "Project Portal Subsite" WHERE (Quote Request Subsite=CONST(No),
                                                                                                                            Type=FIELD(Subsite Type));
                                                   CaptionML=ENU=Document Portal Subsite }
    { 21  ;   ;Project Portal Subsite Descr;Text30;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Portal Subsite".Description WHERE (Code=FIELD(Project Portal Subsite)));
                                                   CaptionML=ENU=Document Portal Subsite Description;
                                                   Editable=No }
    { 22  ;   ;High Security Subsite;Boolean      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Portal Subsite"."High Security Subsite" WHERE (Code=FIELD(Project Portal Subsite)));
                                                   CaptionML=ENU=High Security Subsite;
                                                   Editable=No }
    { 23  ;   ;Quote Request Subsite;Boolean      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Portal Subsite"."Quote Request Subsite" WHERE (Code=FIELD(Project Portal Subsite)));
                                                   CaptionML=ENU=Quote Request Subsite;
                                                   Editable=No }
    { 30  ;   ;Document Type       ;Code20        ;TableRelation=IF (Type=CONST(Access),
                                                                     High Security Subsite=CONST(Yes)) "Subsite-Doc Type (PPT)"."Document Type" WHERE (Project Portal Subsite=FIELD(Project Portal Subsite))
                                                                     ELSE IF (Type=CONST(Filter)) "Subsite-Doc Type (PPT)"."Document Type" WHERE (Project Portal Subsite=FIELD(Project Portal Subsite));
                                                   CaptionML=ENU=Document Type }
    { 31  ;   ;Document Type Description;Text30   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Document Type".Description WHERE (Type=FIELD(Document Type)));
                                                   CaptionML=ENU=Document Type Description;
                                                   Editable=No }
    { 40  ;   ;Permission Level    ;Option        ;OnValidate=BEGIN
                                                                CheckPermissions;
                                                              END;

                                                   CaptionML=ENU=Permission Level;
                                                   OptionCaptionML=ENU=None,Visitor,Member,Owner;
                                                   OptionString=None,Visitor,Member,Owner }
    { 50  ;   ;Show in View        ;Boolean       ;CaptionML=ENU=Show in View }
  }
  KEYS
  {
    {    ;Subsite Type,Type,Responsibility,Project Portal Subsite,Document Type;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE AddProjectPortalPermissions@1100528302();
    VAR
      Responsibility@1100528300 : Record 11012007;
      ProjectPortalSite@1100528301 : Record 11229810;
      SiteDocTypePPT@1100528302 : Record 11229811;
    BEGIN
      IF (NOT Responsibility.FINDSET) THEN
        EXIT;

      REPEAT
        InsertRecord(0, 1, Responsibility.Code, '', '');

        ProjectPortalSite.SETRANGE(Type, ProjectPortalSite.Type::Project);
        ProjectPortalSite.SETRANGE("Quote Request Subsite", FALSE);
        ProjectPortalSite.SETRANGE("High Security Subsite", TRUE);
        IF (ProjectPortalSite.FINDSET) THEN BEGIN
          REPEAT
            SiteDocTypePPT.SETRANGE("Subsite Type", ProjectPortalSite.Type);
            SiteDocTypePPT.SETRANGE("Project Portal Subsite", ProjectPortalSite.Code);
            IF (SiteDocTypePPT.FINDSET) THEN BEGIN
              InsertRecord(ProjectPortalSite.Type, 1, Responsibility.Code, ProjectPortalSite.Code, '');
              REPEAT
                InsertRecord(ProjectPortalSite.Type, 1, Responsibility.Code, ProjectPortalSite.Code, SiteDocTypePPT."Document Type");
              UNTIL (SiteDocTypePPT.NEXT = 0);
            END;
          UNTIL (ProjectPortalSite.NEXT = 0);
        END;

        ProjectPortalSite.SETRANGE("High Security Subsite", FALSE);
        IF (ProjectPortalSite.FINDSET) THEN BEGIN
          REPEAT
            InsertRecord(ProjectPortalSite.Type, 1, Responsibility.Code, ProjectPortalSite.Code, '');
          UNTIL (ProjectPortalSite.NEXT = 0);
        END;

        ProjectPortalSite.SETRANGE("Quote Request Subsite", TRUE);
        ProjectPortalSite.SETRANGE("High Security Subsite");
        IF (ProjectPortalSite.FINDSET) THEN BEGIN
          REPEAT
            InsertRecord(ProjectPortalSite.Type, 1, Responsibility.Code, ProjectPortalSite.Code, '');
          UNTIL (ProjectPortalSite.NEXT = 0);
        END;
      UNTIL (Responsibility.NEXT = 0);
    END;

    PROCEDURE AddProjectPortalViews@1100528300();
    VAR
      Responsibility@1100528300 : Record 11012007;
      ProjectPortalSite@1100528301 : Record 11229810;
      SiteDocTypePPT@1100528303 : Record 11229811;
    BEGIN
      IF (NOT Responsibility.FINDSET) THEN
        EXIT;

      REPEAT
        ProjectPortalSite.SETRANGE(Type, ProjectPortalSite.Type::Project);
        IF (ProjectPortalSite.FINDSET) THEN BEGIN
          REPEAT
            SiteDocTypePPT.SETRANGE("Subsite Type", ProjectPortalSite.Type);
            SiteDocTypePPT.SETRANGE("Project Portal Subsite", ProjectPortalSite.Code);
            IF (SiteDocTypePPT.FINDSET) THEN BEGIN
              REPEAT
                InsertRecord(ProjectPortalSite.Type, 2, Responsibility.Code, ProjectPortalSite.Code, SiteDocTypePPT."Document Type");
              UNTIL (SiteDocTypePPT.NEXT = 0);
            END;
          UNTIL (ProjectPortalSite.NEXT = 0);
        END;
      UNTIL (Responsibility.NEXT = 0);
    END;

    LOCAL PROCEDURE InsertRecord@1100528301(SubsiteType@1100528305 : Option;Type@1100528301 : Option;Responsibility@1100528302 : Code[20];ProjectPortalSite@1100528303 : Code[20];DocumentType@1100528304 : Code[20]);
    VAR
      JobsSetup@1100409000 : Record 315;
      DefaultRespPersPermPPT@1100528300 : Record 11229814;
    BEGIN
      DefaultRespPersPermPPT.INIT;
      DefaultRespPersPermPPT."Subsite Type" := SubsiteType;
      DefaultRespPersPermPPT.Type := Type;
      DefaultRespPersPermPPT.Responsibility := Responsibility;
      DefaultRespPersPermPPT."Project Portal Subsite" := ProjectPortalSite;
      DefaultRespPersPermPPT."Document Type" := DocumentType;
      CASE Type OF
        1: BEGIN
          JobsSetup.GET;
          IF (Responsibility = JobsSetup."Responsibility Project Manager") THEN
            DefaultRespPersPermPPT."Permission Level" := DefaultRespPersPermPPT."Permission Level"::Owner
          ELSE
            DefaultRespPersPermPPT."Permission Level" := DefaultRespPersPermPPT."Permission Level"::Visitor;
        END;
        2: DefaultRespPersPermPPT."Show in View" := TRUE;
      END;

      IF (DefaultRespPersPermPPT.INSERT) THEN;
    END;

    PROCEDURE CheckPermissions@1100409000();
    BEGIN
      CheckQuoteSitePermissionLevel;
      CheckPermissionLevel;
    END;

    LOCAL PROCEDURE CheckPermissionLevel@1100528303();
    VAR
      DefaultRespPersPermPPT@1100528300 : Record 11229814;
    BEGIN
      IF (Type <> Type::Access) THEN
        EXIT;
      CALCFIELDS("High Security Subsite");
      IF (NOT "High Security Subsite") THEN
        EXIT;

      IF ("Document Type" = '') OR ("Permission Level" = "Permission Level"::Owner) THEN BEGIN
        DefaultRespPersPermPPT.SETRANGE("Subsite Type", "Subsite Type");
        DefaultRespPersPermPPT.SETRANGE(Type, Type);
        DefaultRespPersPermPPT.SETRANGE(Responsibility, Responsibility);
        DefaultRespPersPermPPT.SETRANGE("Project Portal Subsite", "Project Portal Subsite");
        DefaultRespPersPermPPT.SETFILTER("Document Type", '<>%1', "Document Type");
        DefaultRespPersPermPPT.MODIFYALL("Permission Level", "Permission Level");
      END ELSE BEGIN
        DefaultRespPersPermPPT.GET("Subsite Type", Type, Responsibility, "Project Portal Subsite", '');
        IF (DefaultRespPersPermPPT."Permission Level" = DefaultRespPersPermPPT."Permission Level"::Owner) THEN BEGIN
          "Permission Level" := "Permission Level"::Owner;
        END;
        IF (DefaultRespPersPermPPT."Permission Level" < "Permission Level") THEN BEGIN
          DefaultRespPersPermPPT."Permission Level" := "Permission Level";
          DefaultRespPersPermPPT.MODIFY;
        END;
      END;
    END;

    LOCAL PROCEDURE CheckQuoteSitePermissionLevel@1100409001();
    BEGIN
      CALCFIELDS("Quote Request Subsite");
      IF (NOT "Quote Request Subsite") THEN
        EXIT;
      IF ("Permission Level" = "Permission Level"::Member) THEN
        FIELDERROR("Permission Level");
    END;

    BEGIN
    END.
  }
}

