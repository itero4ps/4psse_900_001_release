OBJECT Table 11229904 Opportunity Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               Job@1100528800 : Record 11072003;
             BEGIN
               VALIDATE("Line No.");

               VALIDATE("Probability Code", DetermineProbabilityCode("Probability Code"));
               VALIDATE(Impact, DetermineImpactCode(Impact));

               GetRisksOpportunitiesSchedule;
               RiskOpportunitySchedule.TESTFIELD(Fixed,FALSE);

               IF Source = Source::Project THEN
                 IF Job.GET("Source Code") THEN
                   "Main Project No." := Job."Main Project";
             END;

    OnModify=BEGIN
               GetRisksOpportunitiesSchedule;
               RiskOpportunitySchedule.TESTFIELD(Fixed,FALSE);
             END;

    OnDelete=BEGIN
               GetRisksOpportunitiesSchedule;
               RiskOpportunitySchedule.TESTFIELD(Fixed,FALSE);

               IF ("Prev. Total Opp. Cost Amount" <> 0) OR
                 ("Prev. Total Opp. Sales Amt." <> 0) OR
                 ("Prev. Target Opp. Cost Amount" <> 0) OR
                 ("Prev. Target Opp. Sales Amt." <> 0)
               THEN
                 ERROR(Text001,TABLECAPTION);

               DeleteCommentLine;
               DeleteDocumentLinks;
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    CaptionML=ENU=Opportunity Line;
  }
  FIELDS
  {
    { 10  ;   ;Source              ;Option        ;CaptionML=ENU=Source;
                                                   OptionCaptionML=ENU=Project,Try-Out,Service Contract;
                                                   OptionString=Project,Try-Out,Service Contract;
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 20  ;   ;Source Code         ;Code20        ;TableRelation=IF (Source=CONST(Project)) Job.No.
                                                                 ELSE IF (Source=CONST(Try-Out)) Try-out.Code
                                                                 ELSE IF (Source=CONST(Service Contract)) Service-Contract.No.;
                                                   CaptionML=ENU=Source Code;
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 25  ;   ;Schedule Date       ;Date          ;TableRelation="Risk Opportunity Schedule".Date WHERE (Source=FIELD(Source),
                                                                                                         Source Code=FIELD(Source Code));
                                                   CaptionML=ENU=Schedule Date;
                                                   NotBlank=Yes }
    { 26  ;   ;Line No.            ;Integer       ;OnValidate=BEGIN
                                                                IF "Line No." = 0 THEN
                                                                  "Line No." := GetNewLineNo;
                                                              END;

                                                   CaptionML=ENU=Line No.;
                                                   Editable=No }
    { 30  ;   ;Base Risk Code      ;Code20        ;TableRelation=IF (Source=CONST(Project)) "Base Risk Opportunity".Code WHERE (Type=CONST(Opportunity),
                                                                                                                                Apply To=FILTER(All|Project))
                                                                                                                                ELSE IF (Source=CONST(Try-Out)) "Base Risk Opportunity".Code WHERE (Type=CONST(Opportunity),
                                                                                                                                                                                                    Apply To=FILTER(All|Try-Out))
                                                                                                                                                                                                    ELSE IF (Source=CONST(Service Contract)) "Base Risk Opportunity".Code WHERE (Type=CONST(Opportunity),
                                                                                                                                                                                                                                                                                 Apply To=FILTER(All|Service Contract));
                                                   OnValidate=VAR
                                                                BaseRiskOpportunity@1100528800 : Record 11229899;
                                                              BEGIN
                                                                IF BaseRiskOpportunity.GET("Base Risk Code") THEN BEGIN
                                                                  Description := BaseRiskOpportunity.Description;
                                                                  VALIDATE(Impact, BaseRiskOpportunity.Impact);
                                                                  VALIDATE("Probability Code", BaseRiskOpportunity."Probability Code");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Risk Code }
    { 40  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 50  ;   ;Impact              ;Code20        ;TableRelation="Risk Opportunity Impact";
                                                   OnValidate=VAR
                                                                RiskOpportunityImpact@1100528800 : Record 11229901;
                                                              BEGIN
                                                                IF RiskOpportunityImpact.GET(Impact) THEN BEGIN
                                                                  IF RiskOpportunityImpact."Predicted Cost Amount" <> 0 THEN
                                                                    "Predicted Cost Amount" := RiskOpportunityImpact."Predicted Cost Amount";
                                                                  IF RiskOpportunityImpact."Predicted Sales Amount" <> 0 THEN
                                                                    "Predicted Sales Amount" := RiskOpportunityImpact."Predicted Sales Amount";
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Impact }
    { 60  ;   ;Probability Code    ;Code20        ;TableRelation="Risk Opportunity Probability";
                                                   OnValidate=VAR
                                                                RiskOpportunityProbability@1100528800 : Record 11229902;
                                                              BEGIN
                                                                IF "Probability Code" = '' THEN
                                                                  "Probability After Risk Mgt" := '';
                                                                IF RiskOpportunityProbability.GET("Probability Code") THEN BEGIN
                                                                  "Probability After Risk Mgt" := "Probability Code";
                                                                    IF RiskOpportunityProbability.Percentage <> 0 THEN
                                                                      VALIDATE("Probability %", RiskOpportunityProbability.Percentage);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Probability Code }
    { 65  ;   ;Probability %       ;Decimal       ;OnValidate=BEGIN
                                                                IF "Probability %" <> xRec."Probability %" THEN BEGIN
                                                                  VALIDATE("Probability % After Risk Mgt", "Probability %");
                                                                  "Probability Code" := FindProbabilityCodeByPercentage("Probability %");
                                                                END;

                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=ENU=Probability %;
                                                   MaxValue=100 }
    { 70  ;   ;Predicted Cost Amount;Decimal      ;OnValidate=BEGIN
                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=ENU=Predicted Cost Amount }
    { 80  ;   ;Predicted Sales Amount;Decimal     ;OnValidate=BEGIN
                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=ENU=Predicted Sales Amount }
    { 90  ;   ;Anticipated Cost Amount;Decimal    ;CaptionML=ENU=Anticipated Cost Amount }
    { 100 ;   ;Anticipated Sales Amount;Decimal   ;CaptionML=ENU=Anticipated Sales Amount }
    { 110 ;   ;Risk Management Plan;Text250       ;CaptionML=ENU=Risk Management Plan }
    { 120 ;   ;Probability After Risk Mgt;Code20  ;TableRelation="Risk Opportunity Probability";
                                                   OnValidate=VAR
                                                                RiskOpportunityProbability@1100528800 : Record 11229902;
                                                              BEGIN
                                                                IF RiskOpportunityProbability.GET("Probability After Risk Mgt") THEN
                                                                    IF RiskOpportunityProbability.Percentage <> 0 THEN
                                                                      "Probability % After Risk Mgt" := RiskOpportunityProbability.Percentage;
                                                              END;

                                                   CaptionML=ENU=Probability After Risk Management }
    { 125 ;   ;Probability % After Risk Mgt;Decimal;
                                                   OnValidate=BEGIN
                                                                IF "Probability % After Risk Mgt" <> xRec."Probability % After Risk Mgt" THEN
                                                                  "Probability After Risk Mgt" := FindProbabilityCodeByPercentage("Probability % After Risk Mgt");

                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=ENU=Probability % After Risk Management;
                                                   MaxValue=100 }
    { 130 ;   ;Total Opportunity Cost Amt.;Decimal;CaptionML=ENU=Total Opportunity Cost Amount;
                                                   Editable=No }
    { 140 ;   ;Total Opportunity Sales Amt.;Decimal;
                                                   CaptionML=ENU=Total Opportunity Sales Amount;
                                                   Editable=No }
    { 150 ;   ;Target Opportunity Cost Amt.;Decimal;
                                                   OnValidate=BEGIN
                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=ENU=Target Opportunity Cost Amount }
    { 160 ;   ;Target Opportunity Sales Amt.;Decimal;
                                                   OnValidate=BEGIN
                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=ENU=Target Opportunity Sales Amount }
    { 170 ;   ;Owner               ;Code20        ;TableRelation=Employee.No.;
                                                   CaptionML=ENU=Owner }
    { 180 ;   ;Owner Name          ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Full Name" WHERE (No.=FIELD(Owner)));
                                                   CaptionML=ENU=Owner Name }
    { 190 ;   ;Fallback Plan       ;Text250       ;CaptionML=ENU=Fallback Plan }
    { 200 ;   ;Prev. Total Opp. Cost Amount;Decimal;
                                                   CaptionML=ENU=Previous Total Opportunity Cost Amount;
                                                   Editable=No }
    { 210 ;   ;Prev. Total Opp. Sales Amt.;Decimal;CaptionML=ENU=Previous Total Opportunity Sales Amount;
                                                   Editable=No }
    { 220 ;   ;Prev. Target Opp. Cost Amount;Decimal;
                                                   CaptionML=ENU=Previous Target Opportunity Cost Amount }
    { 230 ;   ;Prev. Target Opp. Sales Amt.;Decimal;
                                                   CaptionML=ENU=Previous Target Opportunity Sales Amount }
    { 240 ;   ;Total Opp. Cost Movement;Decimal   ;CaptionML=ENU=Total Opportunity Cost Movement;
                                                   Editable=No }
    { 250 ;   ;Total Opp. Sales Movement;Decimal  ;CaptionML=ENU=Total Opportunity Sales Movement;
                                                   Editable=No }
    { 260 ;   ;Target Opp. Cost Movement;Decimal  ;OnValidate=BEGIN
                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=ENU=Target Opportunity Cost Movement }
    { 270 ;   ;Target Opp. Sales Movement;Decimal ;OnValidate=BEGIN
                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=ENU=Target Opportunity Sales Movement }
    { 280 ;   ;Main Project No.    ;Code20        ;TableRelation=Job;
                                                   CaptionML=ENU=Main Project No. }
    { 290 ;   ;Total Opportunity Cost;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Opportunity Line"."Total Opportunity Cost Amt." WHERE (Source=FIELD(Source),
                                                                                                                           Source Code=FIELD(Source Code),
                                                                                                                           Schedule Date=FIELD(Schedule Date)));
                                                   CaptionML=ENU=Total Opportunity Cost;
                                                   Editable=No }
    { 300 ;   ;Total Opportunity Sales;Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Opportunity Line"."Total Opportunity Sales Amt." WHERE (Source=FIELD(Source),
                                                                                                                            Source Code=FIELD(Source Code),
                                                                                                                            Schedule Date=FIELD(Schedule Date)));
                                                   CaptionML=ENU=Total Opportunity Sales;
                                                   Editable=No }
    { 310 ;   ;Target Opportunity Cost;Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Opportunity Line"."Target Opportunity Cost Amt." WHERE (Source=FIELD(Source),
                                                                                                                            Source Code=FIELD(Source Code),
                                                                                                                            Schedule Date=FIELD(Schedule Date)));
                                                   CaptionML=ENU=Target Opportunity Cost;
                                                   Editable=No }
    { 320 ;   ;Target Opportunity Sales;Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Opportunity Line"."Target Opportunity Sales Amt." WHERE (Source=FIELD(Source),
                                                                                                                             Source Code=FIELD(Source Code),
                                                                                                                             Schedule Date=FIELD(Schedule Date)));
                                                   CaptionML=ENU=Target Opportunity Sales;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Source,Source Code,Schedule Date,Line No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      RiskOpportunitySchedule@1100528800 : Record 11229900;
      Text000@1100528802 : TextConst 'ENU=You cannot rename a %1.';
      Text001@1100528801 : TextConst 'ENU=You cannot delete a %1 when the previous values are not 0.';

    PROCEDURE GetRisksOpportunitiesSchedule@10504003();
    BEGIN
      IF (RiskOpportunitySchedule.Source <> Source) OR (RiskOpportunitySchedule."Source Code" <> "Source Code") OR
        (RiskOpportunitySchedule.Date <> "Schedule Date")
      THEN
        RiskOpportunitySchedule.GET(Source, "Source Code","Schedule Date");
    END;

    PROCEDURE SetRisksOpportunitiesSchedule@10504002(NewRiskOpportunitySchedule@10504001 : Record 11229900);
    BEGIN
      RiskOpportunitySchedule := NewRiskOpportunitySchedule;
    END;

    PROCEDURE UpdateAmounts@10504000();
    BEGIN
      "Total Opportunity Cost Amt." := ROUND("Predicted Cost Amount" * "Probability %"/100);
      "Total Opportunity Sales Amt." := ROUND("Predicted Sales Amount" * "Probability %"/100);

      "Total Opp. Cost Movement" := "Total Opportunity Cost Amt." - "Prev. Total Opp. Cost Amount";
      "Total Opp. Sales Movement" := "Total Opportunity Sales Amt." - "Prev. Total Opp. Sales Amt.";
      "Target Opp. Cost Movement" := "Target Opportunity Cost Amt." - "Prev. Target Opp. Cost Amount";
      "Target Opp. Sales Movement" := "Target Opportunity Sales Amt." - "Prev. Target Opp. Sales Amt.";
    END;

    PROCEDURE CreateNewFromBaseOpportunity@1100528800(BaseRiskOpportunity@1100528804 : Record 11229899;ISource@1100528803 : 'Project,Try-Out,Service Contract';ISourceCode@1100528802 : Code[20];IScheduleDate@1100528801 : Date);
    BEGIN
      INIT;
      Source := ISource;
      "Source Code" := ISourceCode;
      "Schedule Date" := IScheduleDate;
      "Line No." := 0;
      "Base Risk Code" := BaseRiskOpportunity.Code;
      Description := BaseRiskOpportunity.Description;
      VALIDATE(Impact, DetermineImpactCode(BaseRiskOpportunity.Impact));
      VALIDATE("Probability Code", DetermineProbabilityCode(BaseRiskOpportunity."Probability Code"));
      INSERT(TRUE);
    END;

    PROCEDURE GetNewLineNo@1100528801() NewLineNo : Integer;
    VAR
      OpportunityLine@1100528800 : Record 11229904;
    BEGIN
      OpportunityLine.SETRANGE(Source, Source);
      OpportunityLine.SETRANGE("Source Code", "Source Code");
      OpportunityLine.SETRANGE("Schedule Date", "Schedule Date");

      IF OpportunityLine.FINDLAST THEN
        NewLineNo := OpportunityLine."Line No.";
      NewLineNo += 10000;

      EXIT(NewLineNo);
    END;

    PROCEDURE DetermineImpactCode@1100528807(IImpact@1100528800 : Code[20]) : Code[20];
    BEGIN
      IF IImpact = '' THEN
        EXIT(GetDefaultImpact)
      ELSE
        EXIT(IImpact);
    END;

    LOCAL PROCEDURE GetDefaultImpact@1100528803() : Code[20];
    VAR
      RiskOpportunityImpact@1100528800 : Record 11229901;
    BEGIN
      RiskOpportunityImpact.SETRANGE(Default, TRUE);
      IF RiskOpportunityImpact.FINDFIRST THEN
        EXIT(RiskOpportunityImpact.Code);
    END;

    PROCEDURE FindProbabilityCodeByPercentage@1100528804(IProbabilityPercentage@1100528800 : Decimal) : Code[20];
    VAR
      RiskOpportunityProbability@1100528801 : Record 11229902;
    BEGIN
      RiskOpportunityProbability.SETRANGE(Percentage, IProbabilityPercentage);
      IF RiskOpportunityProbability.FINDFIRST THEN
        EXIT(RiskOpportunityProbability.Code)
      ELSE
        EXIT;
    END;

    PROCEDURE DetermineProbabilityCode@1100528805(IProbability@1100528800 : Code[20]) : Code[20];
    BEGIN
      IF IProbability = '' THEN
        EXIT(GetDefaultProbability)
      ELSE
        EXIT(IProbability);
    END;

    LOCAL PROCEDURE GetDefaultProbability@1100528806() : Code[20];
    VAR
      RiskOpportunityProbability@1100528800 : Record 11229902;
    BEGIN
      RiskOpportunityProbability.SETRANGE(Default, TRUE);
      IF RiskOpportunityProbability.FINDFIRST THEN
        EXIT(RiskOpportunityProbability.Code);
    END;

    PROCEDURE DeleteCommentLine@1100529800();
    VAR
      CommentLine@1100529800 : Record 11020634;
      RecRef@1100529801 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec);

      CommentLine.RESET;
      CommentLine.SETRANGE("Table Name", CommentLine."Table Name"::"Opportunity Line");
      CommentLine.SETFILTER("Record ID", FORMAT(RecRef.RECORDID()));
      CommentLine.DELETEALL(TRUE);
    END;

    PROCEDURE CommentLineExist@1210190011() : Boolean;
    VAR
      RecRef@1210190000 : RecordRef;
      CommentLine@1210190001 : Record 11020634;
    BEGIN
      RecRef.GETTABLE(Rec);
      CommentLine.SETRANGE("Table Name", CommentLine."Table Name"::"Opportunity Line");
      CommentLine.SETFILTER("Record ID", FORMAT(RecRef.RECORDID()));
      IF NOT CommentLine.ISEMPTY THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE DocumentsExist@1100528802() : Boolean;
    VAR
      RecRef@1210190000 : RecordRef;
      DocumentLink@1210190001 : Record 11012747;
    BEGIN
      IF NOT DocumentLink.READPERMISSION THEN
        EXIT;

      RecRef.GETTABLE(Rec);

      DocumentLink.SETCURRENTKEY("Record ID");
      DocumentLink.SETFILTER("Record ID", STRSUBSTNO('''%1''', RecRef.RECORDID));
      DocumentLink.SETRANGE("Internal Company", COMPANYNAME);

      IF NOT DocumentLink.ISEMPTY THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    LOCAL PROCEDURE DeleteDocumentLinks@1100528400();
    VAR
      DocumentLink@1100528402 : Record 11012747;
      DocumentLinkMgt@1100528400 : Codeunit 11012401;
      RecRef@1100528401 : RecordRef;
    BEGIN
      IF NOT DocumentLink.READPERMISSION THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DocumentLinkMgt.DeleteDocumentLinksFromObject(RecRef);
    END;

    BEGIN
    END.
  }
}

