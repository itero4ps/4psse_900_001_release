OBJECT Table 11229919 Plant Quote Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Plant Quote Line;
  }
  FIELDS
  {
    { 10  ;   ;Plant Quote No.     ;Code20        ;TableRelation="Plant Quote";
                                                   CaptionML=ENU=Plant Quote No. }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 30  ;   ;Type                ;Option        ;OnValidate=VAR
                                                                PlantQuoteLine@1100485000 : Record 11229919;
                                                                LicensePlantExtendedCU@1100409000 : Codeunit 11012579;
                                                              BEGIN
                                                                CASE Type OF
                                                                  Type::Plant:
                                                                    TESTFIELD("Item No.", '');
                                                                  Type::Item:
                                                                    BEGIN
                                                                      LicensePlantExtendedCU.LicenseTablePlantItem(TRUE,DATABASE::"Plant Quote");
                                                                      GetPlantQuoteHeader();
                                                                      PlantQuote.TESTFIELD(Type, PlantQuote.Type::Rental);
                                                                      TESTFIELD("Plant Type", '');
                                                                    END;
                                                                  Type::Text:
                                                                    BEGIN
                                                                      TESTFIELD("Plant Type", '');
                                                                      TESTFIELD("Item No.", '');
                                                                    END;
                                                                END;

                                                                IF Type <> xRec.Type THEN BEGIN
                                                                  PlantQuoteLine := Rec;
                                                                  INIT;
                                                                  Type := PlantQuoteLine.Type;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Plant,Item,Text;
                                                   OptionString=Plant,Item,Text }
    { 40  ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type";
                                                   OnValidate=VAR
                                                                PlantType@1100525000 : Record 11012551;
                                                                PlantNumber@1100529000 : Record 11012552;
                                                              BEGIN
                                                                IF "Plant Type" = '' THEN BEGIN
                                                                  "Plant No." := '';
                                                                  CALCFIELDS(Bulk);
                                                                  EXIT;
                                                                END;

                                                                TESTFIELD(Type, Type::Plant);
                                                                //**4PS.sn DPA Plant
                                                                PlantType.Code := "Plant Type";
                                                                PlantType.DPA_FindRecWithDPAFilterAppld;
                                                                //**4PS.en DPA Plant
                                                                PlantType.GET("Plant Type");
                                                                PlantType.TESTFIELD(Blocked, FALSE);
                                                                CALCFIELDS(Bulk);
                                                                GetPlantQuoteHeader;
                                                                IF (PlantQuote.Type <> PlantQuote.Type::Rental) AND (PlantType.External) THEN BEGIN
                                                                  IF PlantType.Bulk THEN
                                                                    PlantType.TESTFIELD(External, FALSE)
                                                                  ELSE BEGIN
                                                                    PlantNumber.SETRANGE("Plant Type", "Plant Type");
                                                                    PlantNumber.SETRANGE(External, FALSE);
                                                                    IF PlantNumber.ISEMPTY THEN
                                                                      PlantType.TESTFIELD(External, FALSE);
                                                                  END;
                                                                END;

                                                                VALIDATE("Unit of Measure");
                                                                IF NOT IsRentalLine THEN BEGIN
                                                                  "Time Quantity" := 0;
                                                                  "Rate Code" := '';
                                                                END;
                                                                IF "Plant Type" <> xRec."Plant Type" THEN BEGIN
                                                                  "Plant No." := '';
                                                                  DetermineUnitPriceAndDiscount;
                                                                END;
                                                                IF ("Plant Type" <> xRec."Plant Type") OR (Description = '') THEN
                                                                  GetPlantDescription();
                                                              END;

                                                   CaptionML=ENU=Plant Type }
    { 45  ;   ;Plant No.           ;Code10        ;TableRelation=IF (Type=CONST(Plant)) "Plant Number".No. WHERE (Plant Type=FIELD(Plant Type))
                                                                 ELSE IF (Type=CONST(Text)) "Standard Text";
                                                   OnValidate=VAR
                                                                PlantNumber@1100525000 : Record 11012552;
                                                                StandardText@1100529000 : Record 7;
                                                              BEGIN
                                                                IF "Plant No." = '' THEN
                                                                  EXIT;

                                                                IF Type = Type::Text THEN BEGIN
                                                                  StandardText.GET("Plant No.");
                                                                  Description := StandardText.Description;
                                                                  EXIT;
                                                                END;

                                                                TESTFIELD(Type, Type::Plant);
                                                                TESTFIELD("Plant Type");

                                                                //**4PS.sn DPA Plant
                                                                PlantNumber."Plant Type" := "Plant Type";
                                                                PlantNumber."No." := "Plant No.";
                                                                PlantNumber.DPA_FindRecWithDPAFilterAppld;
                                                                //**4PS.en DPA Plant

                                                                CALCFIELDS(Bulk);
                                                                GetPlantQuoteHeader;
                                                                PlantNumber.GET("Plant Type", "Plant No.");
                                                                IF PlantQuote.Type = PlantQuote.Type::Sales THEN
                                                                  PlantNumber.TESTFIELD(External, FALSE);
                                                                IF NOT Bulk THEN BEGIN
                                                                  IF Quantity <> 1 THEN
                                                                    VALIDATE(Quantity, 1);
                                                                END ELSE BEGIN
                                                                  IF PlantQuote.Type = PlantQuote.Type::Rental THEN BEGIN
                                                                    //* At bulk is plant no. only allowed if it concerns external plant with no. in stock
                                                                    IF (NOT PlantNumber.External) OR ("Plant No." <> PlantNumber."Stock No.") THEN
                                                                      "Plant No." := '';
                                                                  END;
                                                                END;

                                                                IF ("Plant No." <> xRec."Plant No.") AND (PlantQuote.Type = PlantQuote.Type::Rental) THEN
                                                                  DetermineUnitPriceAndDiscount;
                                                                IF ("Plant No." <> xRec."Plant No.") OR (Description = '') THEN
                                                                  GetPlantDescription();
                                                              END;

                                                   CaptionML=ENU=Plant No. }
    { 50  ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=VAR
                                                                Item@1100529000 : Record 27;
                                                              BEGIN
                                                                IF "Item No." = '' THEN
                                                                  EXIT;

                                                                TESTFIELD(Type, Type::Item);
                                                                Item.GET("Item No.");

                                                                VALIDATE("Unit of Measure");
                                                                IF "Item No." <> xRec."Item No." THEN
                                                                  DetermineUnitPriceAndDiscount;
                                                                IF ("Item No." <> xRec."Item No.") OR (Description = '') THEN
                                                                  Description := Item.Description;
                                                              END;

                                                   CaptionML=ENU=Item No. }
    { 60  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 70  ;   ;Bulk                ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type".Bulk WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=ENU=Bulk;
                                                   Editable=No }
    { 80  ;   ;Rate Code           ;Code10        ;OnValidate=VAR
                                                                PlantRateCode@1100529000 : Record 11020502;
                                                              BEGIN
                                                                IF "Rate Code" <> '' THEN BEGIN
                                                                  PlantSetup.GET;
                                                                  PlantSetup.TESTFIELD("Rate Codes");
                                                                  IF NOT IsRentalLine THEN
                                                                    TESTFIELD("Rate Code", '');
                                                                  PlantRateCode.CheckPlantRateCode(PlantQuote."Plant Location", "Rate Code", TRUE, '');
                                                                END;
                                                                IF "Rate Code" <> xRec."Rate Code" THEN
                                                                  DetermineUnitPriceAndDiscount;
                                                              END;

                                                   OnLookup=VAR
                                                              RateCode@1100529000 : Code[10];
                                                            BEGIN
                                                              RateCode := LookupRateCode;
                                                              IF RateCode <> "Rate Code" THEN
                                                                VALIDATE("Rate Code", RateCode);
                                                            END;

                                                   CaptionML=ENU=Rate Code }
    { 100 ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                IF Quantity <> 0 THEN BEGIN
                                                                  CASE Type OF
                                                                    Type::Text:
                                                                      FIELDERROR(Type);
                                                                    Type::Plant:
                                                                      BEGIN
                                                                        IF ("Plant Type" <> '') THEN BEGIN
                                                                          CALCFIELDS(Bulk);
                                                                          IF ("Plant No." <> '') AND (NOT Bulk) THEN
                                                                            TESTFIELD(Quantity, 1);
                                                                        END;
                                                                      END;
                                                                  END;
                                                                END;
                                                                IF Quantity <> xRec.Quantity THEN
                                                                  CalcAmount;
                                                              END;

                                                   CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 101 ;   ;Time Quantity       ;Decimal       ;OnValidate=BEGIN
                                                                IF "Time Quantity" <> 0 THEN BEGIN
                                                                  CASE Type OF
                                                                    Type::Text:
                                                                      FIELDERROR(Type);
                                                                    Type::Plant:
                                                                      IF NOT IsRentalLine THEN
                                                                        TESTFIELD("Time Quantity", 0);
                                                                    Type::Item:
                                                                      FIELDERROR(Type);
                                                                  END;
                                                                END;
                                                                IF "Time Quantity" <> xRec."Time Quantity" THEN
                                                                  CalcAmount;
                                                              END;

                                                   CaptionML=ENU=Time Quantity;
                                                   DecimalPlaces=0:0;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 110 ;   ;Unit Price          ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Unit Price" <> 0) AND (Type = Type::Text) THEN
                                                                  FIELDERROR(Type);
                                                                IF "Unit Price" <> xRec."Unit Price" THEN
                                                                  CalcAmount;
                                                              END;

                                                   CaptionML=ENU=Unit Price;
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 112 ;   ;Discount %          ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Discount %" <> 0) AND (Type = Type::Text) THEN
                                                                  FIELDERROR(Type);
                                                                IF "Discount %" <> xRec."Discount %" THEN
                                                                  CalcAmount;
                                                              END;

                                                   CaptionML=ENU=Discont %.;
                                                   DecimalPlaces=0:5;
                                                   MaxValue=100;
                                                   BlankZero=Yes }
    { 115 ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                IF (Amount <> 0) AND (Type = Type::Text) THEN
                                                                  FIELDERROR(Type);
                                                                IF Amount <> xRec.Amount THEN
                                                                  CalcDiscountPerc;
                                                              END;

                                                   CaptionML=ENU=Amount;
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 120 ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure";
                                                   OnValidate=BEGIN
                                                                "Unit of Measure" := GetUnitOfMeasureCode;
                                                              END;

                                                   CaptionML=ENU=Unit of Measure;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Plant Quote No.,Line No.                ;SumIndexFields=Amount;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PlantSetup@1100525003 : Record 11012550;
      PlantQuote@1100529000 : Record 11229918;
      PlantRec@1100525001 : Record 11012551;

    LOCAL PROCEDURE GetPlantQuoteHeader@1100529002();
    BEGIN
      PlantQuote.GET("Plant Quote No.");
    END;

    LOCAL PROCEDURE GetPlantDescription@4();
    VAR
      PlantNumber@1100529000 : Record 11012552;
    BEGIN
      IF Type <> Type::Plant THEN
        EXIT;
      PlantNumber.GetPlantDescription("Plant Type","Plant No.",Description);
    END;

    PROCEDURE GetUnitOfMeasureCode@1100530000() : Code[10];
    VAR
      PlantType@1100529002 : Record 11012551;
      Item@1100529000 : Record 27;
    BEGIN
      CASE Type OF
        Type::Plant:
          BEGIN
            IF "Plant Type" <> '' THEN BEGIN
              IF PlantType.GET("Plant Type") THEN
                EXIT(PlantType."Unit of Measure");
            END;
          END;
        Type::Item:
          BEGIN
            IF "Item No." <> '' THEN BEGIN
              IF Item.GET("Item No.") THEN
                EXIT(Item."Sales Unit of Measure");  //Sales Unit, see T11012557 (default unit item lines)
            END;
          END;
      END;
      EXIT('');
    END;

    PROCEDURE LookupRateCode@1100529029() : Code[10];
    VAR
      PlantRateCode@1100529000 : Record 11020502;
      EditableMode@1100529001 : Boolean;
    BEGIN
      PlantSetup.GET;
      PlantSetup.TESTFIELD("Rate Codes");
      GetPlantQuoteHeader();
      EditableMode := IsRentalLine;
      IF EditableMode THEN
        EditableMode := PlantQuote.PlantQuoteIsEditable;
      PlantRateCode.Code := PlantRateCode.LookupPlantRateCode(PlantQuote."Plant Location", "Rate Code", EditableMode, '');
      EXIT(PlantRateCode.Code);
    END;

    PROCEDURE DetermineUnitPriceAndDiscount@1100529007();
    VAR
      LineRate@1100529000 : Decimal;
      LineDiscPerc@1100529003 : Decimal;
    BEGIN
      IF ("Plant Quote No." = '') OR (Type = Type::Text) THEN
        EXIT;
      GetPlantQuoteHeader();
      LineRate:= GetRate(PlantQuote, Rec);
      LineDiscPerc:= GetDiscountPerc(PlantQuote, Rec);
      IF LineRate <> "Unit Price" THEN
        VALIDATE("Unit Price", LineRate);
      IF LineDiscPerc <> "Discount %" THEN
        VALIDATE("Discount %", LineDiscPerc);
    END;

    LOCAL PROCEDURE GetRate@1100529000(PlantQuote@1100529006 : Record 11229918;PlantQuoteLine@1100529000 : Record 11229919) : Decimal;
    VAR
      PlantType@1100529001 : Record 11012551;
      Item@1100529004 : Record 27;
      ItemSalesBuyBackRate@1100529005 : Record 11020318;
      SearchRate@1100529002 : Codeunit 11012567;
      RateType@1100529003 : Integer;
    BEGIN
      WITH PlantQuoteLine DO BEGIN
        CASE Type OF
          Type::Plant:
            BEGIN
              IF "Plant Type" = '' THEN
                EXIT(0);
              PlantType.GET("Plant Type");
              IF (PlantQuote.Type = PlantQuote.Type::Sales) THEN BEGIN
                PlantSetup.GET;
                IF PlantType."Settlement Value Exit Order" <> 0 THEN
                  EXIT(ROUND(PlantType."Settlement Value Exit Order" * PlantSetup."Sales Default % of Purch.Price" / 100))
                ELSE
                  EXIT(ROUND(PlantType."Current Price" * PlantSetup."Sales Default % of Purch.Price" / 100));
              END ELSE BEGIN
                IF IsSalesBuyBackPlant THEN
                  RateType := 1;  //0=Rental Rate, 1=Sales Rate(S/BB)
                EXIT(SearchRate.RateWithCust(
                  PlantQuote."Plant Location", PlantQuote."Customer No.", "Plant Type", "Plant No.",
                  "Rate Code", PlantQuote."Delivery Date", RateType, 0, ''));
              END;
            END;
          Type::Item:
            BEGIN
              IF "Item No." = '' THEN
                EXIT(0);
              Item.GET("Item No.");
              IF NOT Item."Sales/Buy-Back Item (Plant)" THEN
                EXIT(Item."Unit Price")
              ELSE BEGIN
                ItemSalesBuyBackRate.SETRANGE("Item No.", "Item No.");
                ItemSalesBuyBackRate.SETFILTER("Starting Date", '..%1', PlantQuote."Delivery Date");
                IF ItemSalesBuyBackRate.FINDLAST THEN
                  EXIT(ItemSalesBuyBackRate."Sales Rate");
              END;
            END;
        END;
      END;
      EXIT(0);
    END;

    LOCAL PROCEDURE GetDiscountPerc@1100529011(PlantQuote@1100529006 : Record 11229918;PlantQuoteLine@1100529000 : Record 11229919) : Decimal;
    VAR
      SearchRate@1100529002 : Codeunit 11012567;
    BEGIN
      WITH PlantQuoteLine DO BEGIN
        CASE Type OF
          Type::Plant:
            BEGIN
              IF ("Plant Type" = '') OR (PlantQuote.Type <> PlantQuote.Type::Rental) THEN
                EXIT(0);
              IF IsSalesBuyBackPlant THEN
                EXIT(0);
              EXIT(SearchRate.RentalDiscount(
                PlantQuote."Plant Location", PlantQuote."Customer No.", "Plant Type", "Plant No.", PlantQuote."Delivery Date"));
            END;
        END;
      END;
      EXIT(0);
    END;

    LOCAL PROCEDURE CalcAmount@1100529001();
    BEGIN
      IF Type = Type::Text THEN
        EXIT;
      Amount := ROUND(LineQuantity() * "Unit Price" * (1-"Discount %"/100));
    END;

    LOCAL PROCEDURE CalcDiscountPerc@1100529003();
    VAR
      LineAmt@1100529000 : Decimal;
    BEGIN
      IF Type = Type::Text THEN
        EXIT;
      LineAmt := ROUND(LineQuantity() * "Unit Price");
      IF LineAmt <> 0 THEN
        "Discount %" := ROUND((LineAmt - Amount) / LineAmt * 100, 0.00001);
    END;

    LOCAL PROCEDURE LineQuantity@1100529006() : Decimal;
    BEGIN
      IF IsRentalLine THEN
        EXIT(Quantity * "Time Quantity");
      EXIT(Quantity);
    END;

    PROCEDURE IsRentalLine@1100529005() : Boolean;
    BEGIN
      GetPlantQuoteHeader;
      IF (PlantQuote.Type <> PlantQuote.Type::Rental) OR (Type <> Type::Plant) THEN
        EXIT(FALSE);
      IF IsSalesBuyBackPlant THEN
        EXIT(FALSE);
      EXIT(TRUE);
    END;

    PROCEDURE IsSalesBuyBackPlant@1100529004() : Boolean;
    VAR
      PlantType@1100529000 : Record 11012551;
    BEGIN
      IF "Plant Type" <> '' THEN BEGIN
        IF PlantType.GET("Plant Type") THEN BEGIN
          IF PlantType."Rental Type" = PlantType."Rental Type"::"Sales/Buy Back" THEN //Same check as for default RentalType PO-Line
            EXIT(TRUE);
        END;
      END;
      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

