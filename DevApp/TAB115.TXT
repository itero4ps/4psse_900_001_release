OBJECT Table 115 Sales Cr.Memo Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00.00.45243,NAVSE9.FI9.DK9.NO9,4PS9.00,4PSSE;
  }
  PROPERTIES
  {
    Permissions=TableData 32=r,
                TableData 5802=r;
    OnDelete=VAR
               SalesDocLineComments@1000 : Record 44;
               PostedDeferralHeader@1001 : Record 1704;
             BEGIN
               SalesDocLineComments.SETRANGE("Document Type",SalesDocLineComments."Document Type"::"Posted Credit Memo");
               SalesDocLineComments.SETRANGE("No.","Document No.");
               SalesDocLineComments.SETRANGE("Document Line No.","Line No.");
               IF NOT SalesDocLineComments.ISEMPTY THEN
                 SalesDocLineComments.DELETEALL;

               PostedDeferralHeader.DeleteHeader(DeferralUtilities.GetSalesDeferralDocType,'','',
                 SalesDocLineComments."Document Type"::"Posted Credit Memo","Document No.","Line No.");
             END;

    CaptionML=ENU=Sales Cr.Memo Line;
    LookupPageID=Page527;
    DrillDownPageID=Page527;
  }
  FIELDS
  {
    { 2   ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Sell-to Customer No.;
                                                   Editable=No }
    { 3   ;   ;Document No.        ;Code20        ;TableRelation="Sales Cr.Memo Header";
                                                   CaptionML=ENU=Document No. }
    { 4   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 5   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)";
                                                   OptionString=[ ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)] }
    { 6   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Resource)) Resource
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Type=CONST("Charge (Item)")) "Item Charge";
                                                   CaptionML=ENU=No. }
    { 7   ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=ENU=Location Code }
    { 8   ;   ;Posting Group       ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Inventory Posting Group"
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "FA Posting Group";
                                                   CaptionML=ENU=Posting Group;
                                                   Editable=No }
    { 10  ;   ;Shipment Date       ;Date          ;CaptionML=ENU=Shipment Date }
    { 11  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 12  ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
    { 13  ;   ;Unit of Measure     ;Text10        ;CaptionML=ENU=Unit of Measure }
    { 15  ;   ;Quantity            ;Decimal       ;CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5 }
    { 22  ;   ;Unit Price          ;Decimal       ;CaptionML=ENU=Unit Price;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrencyCode;
                                                   CaptionClass=GetCaptionClass(FIELDNO("Unit Price")) }
    { 23  ;   ;Unit Cost (LCY)     ;Decimal       ;CaptionML=ENU=Unit Cost (LCY);
                                                   AutoFormatType=2 }
    { 25  ;   ;VAT %               ;Decimal       ;CaptionML=ENU=VAT %;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 27  ;   ;Line Discount %     ;Decimal       ;CaptionML=ENU=Line Discount %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 28  ;   ;Line Discount Amount;Decimal       ;CaptionML=ENU=Line Discount Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 29  ;   ;Amount              ;Decimal       ;CaptionML=ENU=Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 30  ;   ;Amount Including VAT;Decimal       ;CaptionML=ENU=Amount Including VAT;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 32  ;   ;Allow Invoice Disc. ;Boolean       ;InitValue=Yes;
                                                   CaptionML=ENU=Allow Invoice Disc. }
    { 34  ;   ;Gross Weight        ;Decimal       ;CaptionML=ENU=Gross Weight;
                                                   DecimalPlaces=0:5 }
    { 35  ;   ;Net Weight          ;Decimal       ;CaptionML=ENU=Net Weight;
                                                   DecimalPlaces=0:5 }
    { 36  ;   ;Units per Parcel    ;Decimal       ;CaptionML=ENU=Units per Parcel;
                                                   DecimalPlaces=0:5 }
    { 37  ;   ;Unit Volume         ;Decimal       ;CaptionML=ENU=Unit Volume;
                                                   DecimalPlaces=0:5 }
    { 38  ;   ;Appl.-to Item Entry ;Integer       ;AccessByPermission=TableData 27=R;
                                                   CaptionML=ENU=Appl.-to Item Entry }
    { 40  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Shortcut Dimension 1 Code;
                                                   CaptionClass='1,2,1' }
    { 41  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Shortcut Dimension 2 Code;
                                                   CaptionClass='1,2,2' }
    { 42  ;   ;Customer Price Group;Code10        ;TableRelation="Customer Price Group";
                                                   CaptionML=ENU=Customer Price Group }
    { 45  ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                   CaptionML=ENU=Project No. }
    { 52  ;   ;Work Type Code      ;Code10        ;TableRelation="Work Type";
                                                   CaptionML=ENU=Work Type Code }
    { 68  ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Bill-to Customer No.;
                                                   Editable=No }
    { 69  ;   ;Inv. Discount Amount;Decimal       ;CaptionML=ENU=Inv. Discount Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 74  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=ENU=Gen. Bus. Posting Group }
    { 75  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=ENU=Gen. Prod. Posting Group }
    { 77  ;   ;VAT Calculation Type;Option        ;CaptionML=ENU=VAT Calculation Type;
                                                   OptionCaptionML=ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                   OptionString=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax }
    { 78  ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=ENU=Transaction Type }
    { 79  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=ENU=Transport Method }
    { 80  ;   ;Attached to Line No.;Integer       ;TableRelation="Sales Cr.Memo Line"."Line No." WHERE (Document No.=FIELD(Document No.));
                                                   CaptionML=ENU=Attached to Line No. }
    { 81  ;   ;Exit Point          ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=ENU=Exit Point }
    { 82  ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=ENU=Area }
    { 83  ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=ENU=Transaction Specification }
    { 84  ;   ;Tax Category        ;Code10        ;CaptionML=ENU=Tax Category }
    { 85  ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=ENU=Tax Area Code }
    { 86  ;   ;Tax Liable          ;Boolean       ;CaptionML=ENU=Tax Liable }
    { 87  ;   ;Tax Group Code      ;Code10        ;TableRelation="Tax Group";
                                                   CaptionML=ENU=Tax Group Code }
    { 88  ;   ;VAT Clause Code     ;Code10        ;TableRelation="VAT Clause";
                                                   CaptionML=ENU=VAT Clause Code }
    { 89  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=ENU=VAT Bus. Posting Group }
    { 90  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT Prod. Posting Group }
    { 97  ;   ;Blanket Order No.   ;Code20        ;TableRelation="Sales Header".No. WHERE (Document Type=CONST(Blanket Order));
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Blanket Order No.;
                                                   Description=[4PS: Raam  -> Afroep  ] }
    { 98  ;   ;Blanket Order Line No.;Integer     ;TableRelation="Sales Line"."Line No." WHERE (Document Type=CONST(Blanket Order),
                                                                                                Document No.=FIELD(Blanket Order No.));
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Blanket Order Line No.;
                                                   Description=[4PS: Raam  -> Afroep  ] }
    { 99  ;   ;VAT Base Amount     ;Decimal       ;CaptionML=ENU=VAT Base Amount;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 100 ;   ;Unit Cost           ;Decimal       ;CaptionML=ENU=Unit Cost;
                                                   Editable=No;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 101 ;   ;System-Created Entry;Boolean       ;CaptionML=ENU=System-Created Entry;
                                                   Editable=No }
    { 103 ;   ;Line Amount         ;Decimal       ;CaptionML=ENU=Line Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode;
                                                   CaptionClass=GetCaptionClass(FIELDNO("Line Amount")) }
    { 104 ;   ;VAT Difference      ;Decimal       ;CaptionML=ENU=VAT Difference;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 106 ;   ;VAT Identifier      ;Code10        ;CaptionML=ENU=VAT Identifier;
                                                   Editable=No }
    { 107 ;   ;IC Partner Ref. Type;Option        ;CaptionML=ENU=IC Partner Ref. Type;
                                                   OptionCaptionML=ENU=" ,G/L Account,Item,,,Charge (Item),Cross reference,Common Item No.";
                                                   OptionString=[ ,G/L Account,Item,,,Charge (Item),Cross reference,Common Item No.] }
    { 108 ;   ;IC Partner Reference;Code20        ;CaptionML=ENU=IC Partner Reference }
    { 123 ;   ;Prepayment Line     ;Boolean       ;CaptionML=ENU=Prepayment Line;
                                                   Editable=No }
    { 130 ;   ;IC Partner Code     ;Code20        ;TableRelation="IC Partner";
                                                   CaptionML=ENU=IC Partner Code }
    { 131 ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=No }
    { 1001;   ;Job Task No.        ;Code20        ;TableRelation="Job Task"."Job Task No." WHERE (Job No.=FIELD(Job No.));
                                                   CaptionML=ENU=Job Task No.;
                                                   Editable=No }
    { 1002;   ;Job Contract Entry No.;Integer     ;CaptionML=ENU=Job Contract Entry No.;
                                                   Editable=No }
    { 1700;   ;Deferral Code       ;Code10        ;TableRelation="Deferral Template"."Deferral Code";
                                                   CaptionML=ENU=Deferral Code }
    { 5402;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=ENU=Variant Code }
    { 5403;   ;Bin Code            ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Location Code),
                                                                                 Item Filter=FIELD(No.),
                                                                                 Variant Filter=FIELD(Variant Code));
                                                   CaptionML=ENU=Bin Code }
    { 5404;   ;Qty. per Unit of Measure;Decimal   ;CaptionML=ENU=Qty. per Unit of Measure;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5407;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE "Unit of Measure";
                                                   CaptionML=ENU=Unit of Measure Code }
    { 5415;   ;Quantity (Base)     ;Decimal       ;CaptionML=ENU=Quantity (Base);
                                                   DecimalPlaces=0:5 }
    { 5600;   ;FA Posting Date     ;Date          ;CaptionML=ENU=FA Posting Date }
    { 5602;   ;Depreciation Book Code;Code10      ;TableRelation="Depreciation Book";
                                                   CaptionML=ENU=Depreciation Book Code }
    { 5605;   ;Depr. until FA Posting Date;Boolean;CaptionML=ENU=Depr. until FA Posting Date }
    { 5612;   ;Duplicate in Depreciation Book;Code10;
                                                   TableRelation="Depreciation Book";
                                                   CaptionML=ENU=Duplicate in Depreciation Book }
    { 5613;   ;Use Duplication List;Boolean       ;CaptionML=ENU=Use Duplication List }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   CaptionML=ENU=Responsibility Center }
    { 5705;   ;Cross-Reference No. ;Code20        ;AccessByPermission=TableData 5717=R;
                                                   CaptionML=ENU=Cross-Reference No. }
    { 5706;   ;Unit of Measure (Cross Ref.);Code10;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=ENU=Unit of Measure (Cross Ref.) }
    { 5707;   ;Cross-Reference Type;Option        ;CaptionML=ENU=Cross-Reference Type;
                                                   OptionCaptionML=ENU=" ,Customer,Vendor,Bar Code";
                                                   OptionString=[ ,Customer,Vendor,Bar Code] }
    { 5708;   ;Cross-Reference Type No.;Code30    ;CaptionML=ENU=Cross-Reference Type No. }
    { 5709;   ;Item Category Code  ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Category";
                                                   CaptionML=ENU=Item Category Code }
    { 5710;   ;Nonstock            ;Boolean       ;CaptionML=ENU=Nonstock }
    { 5711;   ;Purchasing Code     ;Code10        ;TableRelation=Purchasing;
                                                   CaptionML=ENU=Purchasing Code }
    { 5712;   ;Product Group Code  ;Code10        ;TableRelation="Product Group".Code WHERE (Item Category Code=FIELD(Item Category Code));
                                                   CaptionML=ENU=Product Group Code }
    { 5811;   ;Appl.-from Item Entry;Integer      ;AccessByPermission=TableData 27=R;
                                                   CaptionML=ENU=Appl.-from Item Entry }
    { 6600;   ;Return Receipt No.  ;Code20        ;CaptionML=ENU=Return Receipt No.;
                                                   Editable=No }
    { 6601;   ;Return Receipt Line No.;Integer    ;CaptionML=ENU=Return Receipt Line No.;
                                                   Editable=No }
    { 6608;   ;Return Reason Code  ;Code10        ;TableRelation="Return Reason";
                                                   CaptionML=ENU=Return Reason Code }
    { 7001;   ;Allow Line Disc.    ;Boolean       ;InitValue=Yes;
                                                   CaptionML=ENU=Allow Line Disc. }
    { 7002;   ;Customer Disc. Group;Code20        ;TableRelation="Customer Discount Group";
                                                   CaptionML=ENU=Customer Disc. Group }
    { 11012000;;Project Credit Memo;Boolean       ;CaptionML=ENU=Project Credit Memo;
                                                   Editable=No }
    { 11012010;;Installment Credit Memo;Boolean   ;CaptionML=ENU=Installment Credit Memo;
                                                   Editable=No }
    { 11012015;;Production Motivation Date;Date   ;TableRelation="Unit Price Production Mot."."Production Date" WHERE (Project No.=FIELD(Job No.));
                                                   CaptionML=ENU=Production Motivation Date }
    { 11012016;;Production Motivation Code;Code10 ;CaptionML=ENU=Production Motivation Code }
    { 11012020;;Installment No.    ;Code10        ;TableRelation=IF (Installment Credit Memo=CONST(Yes)) "Project Installment"."Installment No." WHERE (Project No.=FIELD(Job No.),
                                                                                                                                                        Principal=FIELD(Sell-to Customer No.),
                                                                                                                                                        Plot No.=FIELD(Plot No.));
                                                   CaptionML=ENU=Installment No.;
                                                   Editable=No }
    { 11012021;;Installment Motivation;Date       ;TableRelation="Installment Motivation"."Production Date" WHERE (Project No.=FIELD(Job No.),
                                                                                                                   Principal=FIELD(Sell-to Customer No.));
                                                   CaptionML=ENU=Installment Motivation }
    { 11012024;;House Model        ;Code20        ;TableRelation="House Model".Model WHERE (Project No.=FIELD(Job No.));
                                                   CaptionML=ENU=House Model;
                                                   NotBlank=Yes }
    { 11012025;;Plot No.           ;Code10        ;TableRelation=IF (Installment Credit Memo=CONST(Yes)) Plot."Plot No." WHERE (Project No.=FIELD(Job No.));
                                                   CaptionML=ENU=Plot No. }
    { 11012026;;Main Group         ;Code20        ;TableRelation="Option Main Group".Code WHERE (Project No.=FIELD(Job No.));
                                                   CaptionML=ENU=Main Group;
                                                   NotBlank=Yes }
    { 11012027;;Group              ;Code20        ;TableRelation="Option Group".Code WHERE (Project No.=FIELD(Job No.));
                                                   CaptionML=ENU=Group;
                                                   NotBlank=Yes }
    { 11012028;;Sub Group          ;Code20        ;TableRelation="Option Sub Group".Code WHERE (Project No.=FIELD(Job No.));
                                                   CaptionML=ENU=Sub Group;
                                                   NotBlank=Yes }
    { 11012029;;Option             ;Code20        ;TableRelation=Option.Option WHERE (Project No.=FIELD(Job No.),
                                                                                      Plot No.=FIELD(Plot No.),
                                                                                      House Model=FIELD(House Model),
                                                                                      Main Group=FIELD(Main Group),
                                                                                      Group=FIELD(Group),
                                                                                      Sub Group=FIELD(Sub Group));
                                                   CaptionML=ENU=Option;
                                                   NotBlank=Yes }
    { 11012030;;Commission No.     ;Code20        ;TableRelation=IF (Project Credit Memo=CONST(Yes),
                                                                     Installment Credit Memo=CONST(No)) Commission.No. WHERE (Project No.=FIELD(Job No.),
                                                                                                                              Principal=FIELD(Sell-to Customer No.));
                                                   CaptionML=ENU=Commission No.;
                                                   Editable=No }
    { 11012040;;Settl.Sheet No.    ;Code10        ;TableRelation=IF (Project Credit Memo=CONST(Yes),
                                                                     Installment Credit Memo=CONST(No)) "Settlement Sheet".No. WHERE (Project No.=FIELD(Job No.),
                                                                                                                                      Principal=FIELD(Sell-to Customer No.),
                                                                                                                                      Commission No.=FIELD(Commission No.));
                                                   CaptionML=ENU=Settl.Sheet No.;
                                                   Editable=No }
    { 11012050;;Cost Plus Line No. ;Integer       ;TableRelation=IF (Project Credit Memo=CONST(Yes),
                                                                     Installment Credit Memo=CONST(No)) "Project Cost Plus Entry"."Line No." WHERE (Project No.=FIELD(Job No.),
                                                                                                                                                    Principal=FIELD(Sell-to Customer No.),
                                                                                                                                                    Commission No.=FIELD(Commission No.),
                                                                                                                                                    Settl.Sheet No.=FIELD(Settl.Sheet No.));
                                                   CaptionML=ENU=Cost Plus Line No.;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 11012060;;Amount (LCY)       ;Decimal       ;CaptionML=ENU=Amount (LCY);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 11012070;;Element            ;Code20        ;TableRelation="Project Element".Element WHERE (Project No.=FIELD(Job No.));
                                                   OnValidate=VAR
                                                                ElemRec@11012002 : Record 11012010;
                                                                ElementFormat@11012003 : Codeunit 11012022;
                                                              BEGIN
                                                                ElementFormat.FormatElem(Element,2,'');
                                                                IF Element <> '' THEN
                                                                  ElemRec.GET("Job No.",Element);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Element }
    { 11012080;;Extension Contract ;Code10        ;TableRelation="Extension Contract"."Contract No." WHERE (Project No.=FIELD(Job No.));
                                                   CaptionML=ENU=Extension Contract }
    { 11012090;;Failure No.        ;Code20        ;TableRelation=IF (Project Credit Memo=CONST(Yes),
                                                                     Installment Credit Memo=CONST(No)) Commission."Failure No." WHERE (Project No.=FIELD(Job No.),
                                                                                                                                        Principal=FIELD(Sell-to Customer No.),
                                                                                                                                        No.=FIELD(Commission No.));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Failure No.;
                                                   Editable=No }
    { 11012100;;Supervisor Name    ;Text50        ;CaptionML=ENU=Supervisor Name;
                                                   Editable=No }
    { 11012110;;Project Subtotal   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Cr.Memo Line"."Amount Including VAT" WHERE (Document No.=FIELD(Document No.),
                                                                                                                      Job No.=FIELD(Job No.)));
                                                   CaptionML=ENU=Project Subtotal;
                                                   Editable=No }
    { 11012120;;Cost Type Cost Plus Line;Option   ;CaptionML=ENU=Cost Type Cost Plus Line;
                                                   OptionCaptionML=ENU=Labor,Material,Subcontracting,Plant,Sundry,Revenue;
                                                   OptionString=Labor,Material,Subcontracting,Plant,Sundry,Revenue;
                                                   Editable=No }
    { 11012121;;Cost Object Cost Plus Line;Code20 ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Cost Object Cost Plus Line }
    { 11012130;;Item No.           ;Code20        ;TableRelation=Item.No.;
                                                   OnValidate=BEGIN
                                                                //**4PS
                                                                IF ("Item No." <> xRec."Item No.") AND ("Item No." <> '') THEN BEGIN
                                                                  IF "Job No." = '' THEN BEGIN
                                                                    Type := Type::Item;
                                                                    VALIDATE("No.", "Item No.");  //beware of recursion between validate triggers
                                                                  END;
                                                                  ValidateItem(ItemTypeOpt::Item);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Item No. }
    { 11012131;;Basic Item         ;Code20        ;TableRelation="Basic Item"."Product Code" WHERE (Manufacturer=FIELD(Manufacturer));
                                                   OnValidate=BEGIN
                                                                //**4PS
                                                                IF ("Basic Item" <> xRec."Basic Item") AND ("Basic Item" <> '') THEN BEGIN
                                                                  ValidateItem((ItemTypeOpt::"Basic Item"));
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Basic Item }
    { 11012132;;Trade Item         ;Code20        ;TableRelation="Trade Item"."Item Code" WHERE (Vendor=FIELD("Vendor (Trade Item)"));
                                                   OnValidate=BEGIN
                                                                //**4PS
                                                                IF ("Trade Item" <> xRec."Trade Item") AND ("Trade Item" <> '') THEN BEGIN
                                                                  ValidateItem((ItemTypeOpt::"Trade Item"));
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Trade Item }
    { 11012134;;Manufacturer       ;Code15        ;TableRelation="ETIM Vendor (Central Mgt)";
                                                   CaptionML=ENU=Manufacturer }
    { 11012135;;Vendor (Trade Item);Code15        ;TableRelation="ETIM Vendor (Central Mgt)";
                                                   CaptionML=ENU=Vendor (Trade Item) }
    { 11012160;;Points             ;Integer       ;CaptionML=ENU=Points;
                                                   BlankZero=Yes }
    { 11012170;;Employee No.       ;Code20        ;TableRelation=Employee;
                                                   CaptionML=ENU=Employee No. }
    { 11012180;;Sales Surcharge Overtime %;Decimal;CaptionML=ENU=Sales Surcharge Overtime %;
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 11012200;;Text               ;Text250       ;OnValidate=BEGIN
                                                                "Text Block" := Text <> '';
                                                              END;

                                                   CaptionML=ENU=Text }
    { 11012201;;Text Block         ;Boolean       ;CaptionML=ENU=Text Block;
                                                   Editable=No }
    { 11012205;;Shipment No.       ;Code20        ;TableRelation="Sales Shipment Header".No.;
                                                   CaptionML=ENU=Shipment No.;
                                                   Editable=No }
    { 11012206;;Shipment Line No.  ;Integer       ;TableRelation="Sales Shipment Line"."Line No." WHERE (Document No.=FIELD(Shipment No.));
                                                   CaptionML=ENU=Shipment Line No.;
                                                   Editable=No }
    { 11012250;;Cost Component     ;Code20        ;TableRelation="Cost Component".Code;
                                                   CaptionML=ENU=Cost Component }
    { 11012300;;Gross Price        ;Decimal       ;OnValidate=BEGIN
                                                                //**4PS02.n
                                                              END;

                                                   CaptionML=ENU=Gross Price;
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 11012310;;Purchase Discount % (Item);Decimal;OnValidate=BEGIN
                                                                //**4PS02.n
                                                              END;

                                                   CaptionML=ENU=Purchase Discount % (Item);
                                                   MaxValue=100;
                                                   BlankZero=Yes }
    { 11012320;;Execution Date     ;Date          ;CaptionML=ENU=Execution Date }
    { 11012330;;Sales Discount % (Item);Decimal   ;OnValidate=BEGIN
                                                                //**4PS02.n
                                                              END;

                                                   CaptionML=ENU=Sales Discount % (Item);
                                                   MaxValue=100;
                                                   BlankZero=Yes }
    { 11012340;;Basic Price        ;Decimal       ;OnValidate=BEGIN
                                                                //**4PS02.n
                                                              END;

                                                   CaptionML=ENU=Basic Price;
                                                   BlankZero=Yes;
                                                   Description=former field Unit Cost;
                                                   AutoFormatType=2 }
    { 11012350;;Surcharge %        ;Decimal       ;OnValidate=BEGIN
                                                                //**4PS02.n
                                                              END;

                                                   CaptionML=ENU=Surcharge %;
                                                   BlankZero=Yes }
    { 11012355;;Surcharge Amount   ;Decimal       ;OnValidate=BEGIN
                                                                //**4PS02.n
                                                              END;

                                                   CaptionML=ENU=Surcharge Amount;
                                                   BlankZero=Yes }
    { 11012360;;Sales Price        ;Decimal       ;OnValidate=BEGIN
                                                                //**4PS02.n
                                                              END;

                                                   CaptionML=ENU=Sales Price;
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 11012370;;Discount % (Contract);Decimal     ;OnValidate=BEGIN
                                                                //**4PS02.n
                                                              END;

                                                   CaptionML=ENU=Discount % (Contract);
                                                   MaxValue=100;
                                                   BlankZero=Yes }
    { 11012380;;Service Contract No.;Code20       ;TableRelation=Service-Contract;
                                                   CaptionML=ENU=Service Contract No. }
    { 11012390;;Service Order No.  ;Code20        ;TableRelation="Service Order";
                                                   CaptionML=ENU=Service Order No. }
    { 11012400;;Object No.         ;Code20        ;TableRelation=Service-Object;
                                                   CaptionML=ENU=Object No.;
                                                   Description=S&O CONS }
    { 11012420;;Service Control Period Date;Date  ;CaptionML=ENU=Service Control Period Date }
    { 11012430;;Batch Seq. No.     ;Code20        ;TableRelation="Invoice Proposal Batch Seq.";
                                                   CaptionML=ENU=Batch Seq. No.;
                                                   Editable=No }
    { 11012440;;Work Order No.     ;Code20        ;TableRelation="Work Order";
                                                   CaptionML=ENU=Work Order No. }
    { 11012542;;Arrival Order Line ;Integer       ;CaptionML=ENU=Arrival Order Line;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 11012543;;Removal Order Line ;Integer       ;CaptionML=ENU=Removal Order Line;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 11012544;;Plant Rental Split No.;Integer    ;CaptionML=ENU=Plant Rental Split No. }
    { 11012546;;Plant Rental First Invoiced;Boolean;
                                                   CaptionML=ENU=First Invoice of Rental Line (Plant) }
    { 11012547;;Plant Rate Unit of Measure;Code10 ;TableRelation="Unit of Measure";
                                                   CaptionML=ENU=Rate Unit of Measure;
                                                   Editable=No }
    { 11012548;;Plant Qty. per Rate Unit;Decimal  ;InitValue=1;
                                                   CaptionML=ENU=Qty. per Rate Unit;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   Editable=No }
    { 11012549;;Plant Rate Code    ;Code10        ;OnLookup=VAR
                                                              PlantRateCodeRec@1100525000 : Record 11020502;
                                                            BEGIN
                                                              //**4PS
                                                              PlantRateCodeRec.LookupPlantRateCode("Plant Location", "Plant Rate Code", FALSE, '');
                                                            END;

                                                   CaptionML=ENU=Plant Rate Code;
                                                   Editable=No }
    { 11012550;;Plant Credit Memo  ;Boolean       ;CaptionML=ENU=Plant Credit Memo;
                                                   Editable=No }
    { 11012551;;Plant Credit Memo Origin;Option   ;CaptionML=ENU=Plant Credit Memoe Origin;
                                                   OptionCaptionML=ENU=,Plant Inventory,Plant Order,Exit Order,Rental Correction,Plant Hours,Transport Order,Returned Loss,Service Order;
                                                   OptionString=,Plant Inventory,Plant Order,Exit Order,Rental Correction,Plant Hours,Transport Order,Returned Loss,Service Order;
                                                   BlankZero=Yes;
                                                   Description=Options must be the same in the tables 37, 113, 115, 11012572, 11020501 !!!!;
                                                   Editable=No }
    { 11012552;;Relate to          ;Option        ;CaptionML=ENU=Relate to;
                                                   OptionCaptionML=ENU=,Rental,Sales,Missing,Scrap,Buy Back,Hours,Transport,Sundry Costs,Plant Hours,Damage,Job Order,Load/Unload,Item,Item Buy-Back;
                                                   OptionString=,Rental,Sales,Missing,Scrap,Buy Back,Hours,Transport,Sundry Costs,Plant Hours,Damage,Job Order,Load/Unload,Item,ItemBuyBack;
                                                   BlankZero=Yes;
                                                   Description=Options must be the same in the tables 37, 113, 115, 11012572, 11020501 !!!!;
                                                   Editable=No }
    { 11012553;;Plant Location     ;Code20        ;TableRelation="Plant Location";
                                                   CaptionML=ENU=Plant Location;
                                                   Editable=No }
    { 11012554;;Plant Location Description;Text50 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Location".Description WHERE (Code=FIELD(Plant Location)));
                                                   CaptionML=ENU=Plant Location Description;
                                                   Editable=No }
    { 11012555;;Plant Type         ;Code20        ;TableRelation="Plant Type";
                                                   CaptionML=ENU=Plant Type;
                                                   Editable=No }
    { 11012556;;Plant No.          ;Code10        ;TableRelation=IF (Bulk=CONST(No)) "Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   CaptionML=ENU=Plant No.;
                                                   Editable=No }
    { 11012557;;Bulk               ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type".Bulk WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=ENU=Bulk;
                                                   Editable=No }
    { 11012558;;Number of Time Units;Decimal      ;CaptionML=ENU=No. of Time Units;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 11012559;;Arrival Order Type ;Option        ;CaptionML=ENU=Arrival Order Type;
                                                   OptionCaptionML=ENU=,Plant Order,Exit-order,Rental Correction,Transport Order,Returned Loss;
                                                   OptionString=,Plant Order,Exit-order,Rental Correction,Transport Order,Returned Loss;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 11012560;;Arrival Order      ;Code20        ;TableRelation=IF (Arrival Order Type=CONST(Plant Order)) "Plant Order"
                                                                 ELSE IF (Arrival Order Type=CONST(Exit-order)) "Exit Order"
                                                                 ELSE IF (Arrival Order Type=CONST(Returned Loss)) "Returned Loss Order"
                                                                 ELSE IF (Arrival Order Type=CONST(Rental Correction)) "Rental Correction"
                                                                 ELSE IF (Arrival Order Type=CONST(Transport Order)) "Posted Plant Transport Order";
                                                   OnLookup=VAR
                                                              PlantLookupMgt@1100409000 : Codeunit 11012590;
                                                            BEGIN
                                                              //**4PS
                                                              PlantLookupMgt.SalesCrMemoLineArrivalOrder(Rec);
                                                            END;

                                                   CaptionML=ENU=Arrival Order;
                                                   Editable=No }
    { 11012561;;Removal Order Type ;Option        ;CaptionML=ENU=Removal Order Type;
                                                   OptionCaptionML=ENU=,Plant Order,Exit-order,Rental Correction,Transport Order;
                                                   OptionString=,Plant Order,Exit-order,Rental Correction,Transport Order;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 11012562;;Removal Order      ;Code20        ;TableRelation=IF (Removal Order Type=CONST(Plant Order)) "Plant Order"
                                                                 ELSE IF (Removal Order Type=CONST(Exit-order)) "Exit Order"
                                                                 ELSE IF (Removal Order Type=CONST(Rental Correction)) "Rental Correction"
                                                                 ELSE IF (Removal Order Type=CONST(Transport Order)) "Posted Plant Transport Order";
                                                   OnLookup=VAR
                                                              PlantLookupMgt@1100409000 : Codeunit 11012590;
                                                            BEGIN
                                                              //**4PS
                                                              PlantLookupMgt.SalesCrMemoLineRemovalOrder(Rec);
                                                            END;

                                                   CaptionML=ENU=Removal Order;
                                                   Editable=No }
    { 11012563;;Rental Period      ;Text30        ;CaptionML=ENU=Rental Period }
    { 11012564;;Rate Type          ;Option        ;CaptionML=ENU=Rate Type;
                                                   OptionCaptionML=ENU=" ,day,wk,,mth";
                                                   OptionString=[ ,Day,Week,,Month];
                                                   Editable=No }
    { 11012565;;Service Invoice    ;Boolean       ;CaptionML=ENU=Service Invoice }
    { 11012566;;Service Location No.;Code20       ;TableRelation="Service Location".No.;
                                                   CaptionML=ENU=Service Location No.;
                                                   Editable=No }
    { 11012569;;Rental Unit        ;Code20        ;CaptionML=ENU=Rental Unit;
                                                   Editable=No }
    { 11012570;;Rental Unit Invoice;Boolean       ;CaptionML=ENU=Rental Unit Invoice;
                                                   Editable=No }
    { 11012572;;Rental Unit Line Type;Option      ;CaptionML=ENU=Rental Unit Line Type;
                                                   OptionCaptionML=ENU=" ,Rent,Service Cost,Utilities";
                                                   OptionString=[ ,Rent,ServiceCost,Utilities] }
    { 11012573;;Rental Package Date;Date          ;TableRelation="Rental Package"."Starting Date" WHERE (Project No.=FIELD(Job No.),
                                                                                                         Rental Unit=FIELD(Rental Unit));
                                                   CaptionML=ENU=Rental Package Date }
    { 11012580;;Line VAT Amount    ;Decimal       ;CaptionML=ENU=Line VAT Amount;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 11012590;;Source Document    ;Code20        ;CaptionML=ENU=Source Document }
    { 11012600;;Additional Cost (Service);Boolean ;CaptionML=ENU=Additional Cost (Service) }
    { 11012630;;Principal Reference;Text50        ;CaptionML=ENU=Principal Reference }
    { 11012640;;Order No. Customer ;Text50        ;CaptionML=ENU=Order No. Customer }
    { 11012650;;Country/Region of Origin;Code10   ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Country/Region of Origin }
    { 11012660;;Commision Date Customer;Date      ;CaptionML=ENU=Commision Date Principal }
    { 11012705;;Serial No.         ;Code40        ;CaptionML=ENU=Serial No.;
                                                   Description=DP00121 }
    { 11012706;;Lot No.            ;Code20        ;CaptionML=ENU=Lot No.;
                                                   Description=DP00121 }
    { 11012710;;SM Unit Price Code ;Code20        ;CaptionML=ENU=SM Unit Price Code;
                                                   Description=S&O CONS;
                                                   Editable=No }
    { 11012720;;SM Unit Price Index Date;Date     ;CaptionML=ENU=SM Unit Price Index Date;
                                                   Description=S&O CONS;
                                                   Editable=No }
    { 11012730;;SM Unit Price Extention;Boolean   ;CaptionML=ENU=SM Unit Price Extention;
                                                   Description=S&O CONS;
                                                   Editable=No }
    { 11012740;;Production Recording Date;Date    ;CaptionML=ENU=Production Recording Date;
                                                   Description=S&O CONS;
                                                   Editable=No }
    { 11012750;;SM Unit Price Room ;Code20        ;TableRelation="SUP Room";
                                                   CaptionML=ENU=SM Unit Price Room;
                                                   Editable=No }
    { 11012760;;SM Unit Price Line Code;Code20    ;CaptionML=ENU=SM Unit Price Line Code }
    { 11012840;;Service Control Year;Integer      ;CaptionML=ENU=Service Control Year }
    { 11012970;;Tariff No.         ;Code20        ;TableRelation="Tariff Number";
                                                   CaptionML=ENU=Tariff No. }
    { 11012980;;Unit Price Code    ;Code20        ;CaptionML=ENU=Unit Price Code }
    { 11012990;;Last Invoiced Until;Date          ;CaptionML=ENU=Last Invoiced Until;
                                                   Description=S&O CONS;
                                                   Editable=No }
    { 11012995;;Installment Line No.;Integer      ;CaptionML=ENU=Installment Line No.;
                                                   Description=S&O CONS;
                                                   Editable=No }
    { 11012997;;Collective-List Line Type;Option  ;CaptionML=ENU=Collective-List Line Type;
                                                   OptionCaptionML=ENU=" ,Dynamic,Installment,Cost Plus Entry";
                                                   OptionString=[ ,Dynamic,Installment,Cost Plus Entry] }
    { 11012998;;Coll.-List SC Inv. Line No.;Integer;
                                                   CaptionML=ENU=Collective-List Service Contract Invoicng Line No.;
                                                   Editable=No }
    { 11012999;;Collective List No.;Code20        ;TableRelation="Service Collective-List";
                                                   CaptionML=ENU=Collective List No.;
                                                   Editable=No }
    { 11128010;;Auto. Acc. Group   ;Code10        ;TableRelation="Automatic Acc. Header";
                                                   CaptionML=ENU=Auto. Acc. Group;
                                                   Description=NAVSE,NAVFI }
    { 11128011;;Periodic Template Code;Code10     ;TableRelation="Periodic Template".Code;
                                                   CaptionML=ENU=Periodic Template Code }
    { 11128012;;Periodic Starting Date;Date       ;CaptionML=ENU=Periodic Starting Date }
    { 11128020;;Withheld Amount    ;Decimal        }
    { 11128504;;VAT Code           ;Code10        ;TableRelation="VAT Code".Code;
                                                   CaptionML=ENU=VAT Code;
                                                   Description=NAVNO }
    { 11128505;;Account Code NO    ;Text30        ;CaptionML=ENU=Account Code NO;
                                                   Description=NAVNO }
    { 11128570;;Account Code DK    ;Text30        ;CaptionML=ENU=Account Code DK;
                                                   Description=NAVDK }
  }
  KEYS
  {
    {    ;Document No.,Line No.                   ;SumIndexFields=Amount,Amount Including VAT,Line VAT Amount,Inv. Discount Amount;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Blanket Order No.,Blanket Order Line No. }
    {    ;Sell-to Customer No.                     }
    {    ;Return Receipt No.,Return Receipt Line No. }
    {    ;Job Contract Entry No.                   }
    {    ;Bill-to Customer No.                     }
    {    ;Document No.,Job No.                    ;SumIndexFields=Amount Including VAT }
    {    ;Document No.,Service Contract No.,Service Location No.,Service Order No.,Line No.;
                                                   MaintainSIFTIndex=No }
    {    ;Service Contract No.,Service Order No.  ;MaintainSIFTIndex=No }
    {    ;Shipment No.,Shipment Line No.          ;MaintainSIFTIndex=No }
    {    ;Document No.,Cost Type Cost Plus Line    }
    {    ;Job No.                                  }
    {    ;Plant Location,Document No.              }
    {    ;Batch Seq. No.                           }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DimMgt@1001 : Codeunit 408;
      DeferralUtilities@1000 : Codeunit 1720;
      ValidateCu@11012000 : Codeunit 11012033;
      ItemTypeOpt@11012001 : 'Item,Basic Item,Trade Item';
      DPA_Management@1100000999 : Codeunit 11012783;

    PROCEDURE GetCurrencyCode@1() : Code[10];
    VAR
      SalesCrMemoHeader@1000 : Record 114;
    BEGIN
      IF "Document No." = SalesCrMemoHeader."No." THEN
        EXIT(SalesCrMemoHeader."Currency Code");
      IF SalesCrMemoHeader.GET("Document No.") THEN
        EXIT(SalesCrMemoHeader."Currency Code");
      EXIT('');
    END;

    PROCEDURE ShowDimensions@25();
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2 %3',TABLECAPTION,"Document No.","Line No."));
    END;

    PROCEDURE ShowItemTrackingLines@3();
    VAR
      ItemTrackingDocMgt@1000 : Codeunit 6503;
    BEGIN
      ItemTrackingDocMgt.ShowItemTrackingForInvoiceLine(RowID1);
    END;

    PROCEDURE CalcVATAmountLines@2(VAR SalesCrMemoHeader@1000 : Record 114;VAR VATAmountLine@1001 : Record 290);
    BEGIN
      VATAmountLine.DELETEALL;
      SETRANGE("Document No.",SalesCrMemoHeader."No.");
      IF FINDSET THEN
        REPEAT
          VATAmountLine.INIT;
          VATAmountLine."VAT Identifier" := "VAT Identifier";
          VATAmountLine."VAT Calculation Type" := "VAT Calculation Type";
          VATAmountLine."Tax Group Code" := "Tax Group Code";
          VATAmountLine."VAT %" := "VAT %";
          VATAmountLine."VAT Base" := Amount;
          VATAmountLine."VAT Amount" := "Amount Including VAT" - Amount;
          VATAmountLine."Amount Including VAT" := "Amount Including VAT";
          VATAmountLine."Line Amount" := "Line Amount";
          IF "Allow Invoice Disc." THEN
            VATAmountLine."Inv. Disc. Base Amount" := "Line Amount";
          VATAmountLine."Invoice Discount Amount" := "Inv. Discount Amount";
          VATAmountLine.Quantity := "Quantity (Base)";
          VATAmountLine."Calculated VAT Amount" := "Amount Including VAT" - Amount - "VAT Difference";
          VATAmountLine."VAT Difference" := "VAT Difference";
          VATAmountLine.InsertLine;
        UNTIL NEXT = 0;
    END;

    LOCAL PROCEDURE GetFieldCaption@31(FieldNumber@1000 : Integer) : Text[100];
    VAR
      Field@1001 : Record 2000000041;
    BEGIN
      Field.GET(DATABASE::"Sales Cr.Memo Line",FieldNumber);
      EXIT(Field."Field Caption");
    END;

    LOCAL PROCEDURE GetCaptionClass@34(FieldNumber@1000 : Integer) : Text[80];
    VAR
      SalesCrMemoHeader@1001 : Record 114;
    BEGIN
      IF NOT SalesCrMemoHeader.GET("Document No.") THEN
        SalesCrMemoHeader.INIT;
      IF SalesCrMemoHeader."Prices Including VAT" THEN
        EXIT('2,1,' + GetFieldCaption(FieldNumber));

      EXIT('2,0,' + GetFieldCaption(FieldNumber));
    END;

    PROCEDURE RowID1@44() : Text[250];
    VAR
      ItemTrackingMgt@1000 : Codeunit 6500;
    BEGIN
      EXIT(ItemTrackingMgt.ComposeRowID(DATABASE::"Sales Cr.Memo Line",
          0,"Document No.",'',0,"Line No."));
    END;

    LOCAL PROCEDURE GetReturnRcptLines@4(VAR TempReturnRcptLine@1000 : TEMPORARY Record 6661);
    VAR
      ReturnRcptLine@1003 : Record 6661;
      ItemLedgEntry@1002 : Record 32;
      ValueEntry@1001 : Record 5802;
    BEGIN
      TempReturnRcptLine.RESET;
      TempReturnRcptLine.DELETEALL;

      IF Type <> Type::Item THEN
        EXIT;

      FilterPstdDocLineValueEntries(ValueEntry);
      ValueEntry.SETFILTER("Invoiced Quantity",'<>0');
      IF ValueEntry.FINDSET THEN
        REPEAT
          ItemLedgEntry.GET(ValueEntry."Item Ledger Entry No.");
          IF ItemLedgEntry."Document Type" = ItemLedgEntry."Document Type"::"Sales Return Receipt" THEN
            IF ReturnRcptLine.GET(ItemLedgEntry."Document No.",ItemLedgEntry."Document Line No.") THEN BEGIN
              TempReturnRcptLine.INIT;
              TempReturnRcptLine := ReturnRcptLine;
              IF TempReturnRcptLine.INSERT THEN;
            END;
        UNTIL ValueEntry.NEXT = 0;
    END;

    PROCEDURE GetItemLedgEntries@6(VAR TempItemLedgEntry@1000 : Record 32;SetQuantity@1003 : Boolean);
    VAR
      ItemLedgEntry@1002 : Record 32;
      ValueEntry@1001 : Record 5802;
    BEGIN
      IF SetQuantity THEN BEGIN
        TempItemLedgEntry.RESET;
        TempItemLedgEntry.DELETEALL;

        IF Type <> Type::Item THEN
          EXIT;
      END;

      FilterPstdDocLineValueEntries(ValueEntry);
      ValueEntry.SETFILTER("Invoiced Quantity",'<>0');
      IF ValueEntry.FINDSET THEN
        REPEAT
          ItemLedgEntry.GET(ValueEntry."Item Ledger Entry No.");
          TempItemLedgEntry := ItemLedgEntry;
          IF SetQuantity THEN BEGIN
            TempItemLedgEntry.Quantity := ValueEntry."Invoiced Quantity";
            IF ABS(TempItemLedgEntry."Shipped Qty. Not Returned") > ABS(TempItemLedgEntry.Quantity) THEN
              TempItemLedgEntry."Shipped Qty. Not Returned" := TempItemLedgEntry.Quantity;
          END;
          IF TempItemLedgEntry.INSERT THEN;
        UNTIL ValueEntry.NEXT = 0;
    END;

    PROCEDURE FilterPstdDocLineValueEntries@7(VAR ValueEntry@1000 : Record 5802);
    BEGIN
      ValueEntry.RESET;
      ValueEntry.SETCURRENTKEY("Document No.");
      ValueEntry.SETRANGE("Document No.","Document No.");
      ValueEntry.SETRANGE("Document Type",ValueEntry."Document Type"::"Sales Credit Memo");
      ValueEntry.SETRANGE("Document Line No.","Line No.");
    END;

    LOCAL PROCEDURE ShowItemLedgEntries@10();
    VAR
      TempItemLedgEntry@1000 : TEMPORARY Record 32;
    BEGIN
      IF Type = Type::Item THEN BEGIN
        GetItemLedgEntries(TempItemLedgEntry,FALSE);
        PAGE.RUNMODAL(0,TempItemLedgEntry);
      END;
    END;

    PROCEDURE ShowItemReturnRcptLines@9();
    VAR
      TempReturnRcptLine@1000 : TEMPORARY Record 6661;
    BEGIN
      IF Type = Type::Item THEN BEGIN
        GetReturnRcptLines(TempReturnRcptLine);
        PAGE.RUNMODAL(0,TempReturnRcptLine);
      END;
    END;

    PROCEDURE ShowLineComments@5();
    VAR
      SalesDocLineComments@1000 : Record 44;
      SalesDocCommentSheet@1001 : Page 67;
    BEGIN
      SalesDocLineComments.SETRANGE("Document Type",SalesDocLineComments."Document Type"::"Posted Credit Memo");
      SalesDocLineComments.SETRANGE("No.","Document No.");
      SalesDocLineComments.SETRANGE("Document Line No.","Line No.");
      SalesDocCommentSheet.SETTABLEVIEW(SalesDocLineComments);
      SalesDocCommentSheet.RUNMODAL;
    END;

    PROCEDURE InitFromSalesLine@8(SalesCrMemoHeader@1001 : Record 114;SalesLine@1002 : Record 37);
    BEGIN
      INIT;
      TRANSFERFIELDS(SalesLine);
      "Posting Date" := SalesCrMemoHeader."Posting Date";
      "Document No." := SalesCrMemoHeader."No.";
      Quantity := SalesLine."Qty. to Invoice";
      "Quantity (Base)" := SalesLine."Qty. to Invoice (Base)";
    END;

    PROCEDURE ShowDeferrals@12();
    BEGIN
      DeferralUtilities.OpenLineScheduleView(
        "Deferral Code",DeferralUtilities.GetSalesDeferralDocType,'','',
        GetDocumentType,"Document No.","Line No.");
    END;

    PROCEDURE GetDocumentType@13() : Integer;
    VAR
      SalesCommentLine@1000 : Record 44;
    BEGIN
      EXIT(SalesCommentLine."Document Type"::"Posted Credit Memo")
    END;

    PROCEDURE LineCommentPresent@1210190001() : Boolean;
    VAR
      SalesCommentLine@1210190000 : Record 44;
    BEGIN
      //**4PS 22575
      EXIT(SalesCommentLine.CommentPresent(SalesCommentLine."Document Type"::"Posted Credit Memo", "Document No.", "Line No."));
    END;

    PROCEDURE ValidateItem@1101290000(LTypeArtOpt@11012005 : 'Item,Basic Item,Trade Item');
    VAR
      DummyDat@11012006 : Date;
      lvRefDate@1100485002 : Date;
      lvDiscRef1@1100485001 : Code[20];
      lvDiscRef2@1100485000 : Code[20];
      ServOrderRec@1100485003 : Record 11012823;
      ProjRec@1100485004 : Record 11072003;
    BEGIN
      //**4PS
      IF "Service Order No." <>'' THEN BEGIN
        ServOrderRec.GET("Service Order No.");
        lvRefDate := ValidateCu.GetRefDateServOrder(ServOrderRec);
      //  lvDiscRef1 := ServOrderRec."Purch Discount Term Group 1";
      //  lvDiscRef2 := ServOrderRec."Purch Discount Term Group 2";
      END ELSE BEGIN
        IF "Job No." <>'' THEN BEGIN
          ProjRec.GET("Job No.");
          lvRefDate := ValidateCu.GetRefDateProject(ProjRec);
          lvDiscRef1 := ProjRec."Purch Discount Term Group 1";
          lvDiscRef2 := ProjRec."Purch Discount Term Group 2";
        END;
      END;

      ValidateCu.ValidateItem(LTypeArtOpt,"Trade Item","Item No.",Manufacturer,"Vendor (Trade Item)",
                              "Basic Item","Shortcut Dimension 2 Code",Description,"Unit of Measure Code","Unit Cost (LCY)",
                              "Line Discount %",DummyDat,"Unit Price","Description 2","Cost Component",
                              lvDiscRef1,lvDiscRef2,lvRefDate,'');

      VALIDATE("Unit Cost (LCY)");
      VALIDATE("Line Discount %");
      // GL account will be determined via project type after entry of cost object
      // (not for materials because determination of cost object via Item Class
      // in function above)
      VALIDATE("Shortcut Dimension 2 Code");
      VALIDATE("Unit of Measure Code");  //**otherwise field description remains empty
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(115) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 115');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Sales Cr.Memo Line", "Shortcut Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Shortcut Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Shortcut Dimension 1 Code");
    END;

    BEGIN
    {
      4PS02 JD 07-02-08 Melding 9828, How item prices are calculated is not visible on sales line

      160312 ITERO.LP NAVSE New field 11128020 "Withheld Amount".

      Version List=NAVW19.00.00.45834,NAVSE9.00.00.45834;
      Version List=NAVW19.00.00.45834,NAVFI9.00.00.45834;
      Version List=NAVW19.00.00.45834,NAVDK9.00.00.45834;
      Version List=NAVW19.00.00.45834,NAVNO9.00.00.45834;
    }
    END.
  }
}

