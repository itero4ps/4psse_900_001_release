OBJECT Table 12013601 ExFlow Setup
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF410000,EXFFI1.01,4PS;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               //InitRecord;
             END;

    CaptionML=ENU=ExFlow Setup;
  }
  FIELDS
  {
    { 2   ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 10  ;   ;Path to New Invoices;Text128       ;OnValidate=BEGIN
                                                                EndingSlash("Path to New Invoices");
                                                              END;

                                                   CaptionML=ENU=Path to New Invoices }
    { 11  ;   ;Path to Used Invoices;Text128      ;OnValidate=BEGIN
                                                                EndingSlash("Path to Used Invoices");

                                                                RecRef.GETTABLE(Rec);
                                                                WebSetting.TableChange(RecRef);
                                                              END;

                                                   CaptionML=ENU=Path to Processed Invoices }
    { 14  ;   ;Path to New OCR-files;Text128      ;OnValidate=BEGIN
                                                                EndingSlash("Path to New OCR-files");
                                                              END;

                                                   CaptionML=ENU=Path to New OCR files }
    { 15  ;   ;Path to Image Copy  ;Text128       ;OnValidate=BEGIN
                                                                EndingSlash("Path to Image Copy");

                                                                IF CurrFieldNo <> 0 THEN
                                                                  IF "Path to Image Copy" <> '' THEN
                                                                    IF (UPPERCASE("Path to Image Copy") = UPPERCASE("Path to New Invoices")) OR
                                                                       (UPPERCASE("Path to Image Copy") = UPPERCASE("Path to New OCR-files")) THEN
                                                                      ERROR(EXF10);
                                                              END;

                                                   CaptionML=ENU=Path to Image Copy }
    { 19  ;   ;Show Approvers Automatically;Boolean;
                                                   CaptionML=ENU=Show proposed Approvers automatically }
    { 25  ;   ;Invoice Rounding    ;Boolean       ;CaptionML=ENU=Invoice Rounding }
    { 26  ;   ;Automatic Reg. of Inwards;Option   ;CaptionML=ENU=Automatic Reg. of Inwards;
                                                   OptionCaptionML=ENU=" ,Values from Lines,Values from Header";
                                                   OptionString=[ ,Values from Lines,Values from Header] }
    { 27  ;   ;Check Gross Amount  ;Boolean       ;CaptionML=ENU=Check Gross Amount }
    { 28  ;   ;Max. Diff. Gross Amount;Decimal    ;CaptionML=ENU=Max difference for Gross Amount;
                                                   DecimalPlaces=2:2 }
    { 30  ;   ;Always approval for Cust Inv;Boolean;
                                                   CaptionML=ENU=Always approval for customer invoicing records }
    { 31  ;   ;Approval Only on Variation;Boolean ;CaptionML=ENU=Approval only for variations }
    { 32  ;   ;Max. Variation on Net Amount;Decimal;
                                                   CaptionML=ENU=Max. Net Difference Allowed;
                                                   DecimalPlaces=2:2 }
    { 33  ;   ;Check Final Approval;Boolean       ;CaptionML=ENU=Check Final Approval }
    { 34  ;   ;Mandatory Vendor Shipment No.;Boolean;
                                                   CaptionML=ENU=Mandatory vendor shipment no. }
    { 35  ;   ;Auto Approval User  ;Code50        ;TableRelation="EX User Group".Code;
                                                   CaptionML=ENU=User for Automatic Approval }
    { 38  ;   ;VAT Prod. Posting Group 0%;Code10  ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT Prod. Posting Group 0% }
    { 39  ;   ;VAT Prod. Posting Group 100%;Code10;TableRelation="VAT Product Posting Group";
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  IF "VAT Prod. Posting Group 100%" <> '' THEN
                                                                    TESTFIELD("VAT Prod. Grp From VAT Acc",FALSE);
                                                              END;

                                                   CaptionML=ENU=VAT Prod. Posting Group 100% }
    { 40  ;   ;Inward Reg. Prod. Post Gr 0%;Code10;TableRelation="Gen. Product Posting Group";
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TESTFIELD("Automatic Reg. of Inwards","Automatic Reg. of Inwards"::"Values from Header");
                                                              END;

                                                   CaptionML=ENU=Inward Reg. Prod. Post Gr 0% }
    { 41  ;   ;Inward Reg. Prod. Post Gr 100%;Code10;
                                                   TableRelation="Gen. Product Posting Group";
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TESTFIELD("Automatic Reg. of Inwards","Automatic Reg. of Inwards"::"Values from Header");
                                                              END;

                                                   CaptionML=ENU=Inward Reg. Prod. Post Gr 100% }
    { 60  ;   ;Propose always new Approvers;Boolean;
                                                   CaptionML=ENU=Always propose new Approvers }
    { 61  ;   ;Requisition         ;Boolean       ;CaptionML=ENU=Requisition }
    { 62  ;   ;Path to Attached Files;Text128     ;OnValidate=BEGIN
                                                                EndingSlash("Path to Attached Files");

                                                                RecRef.GETTABLE(Rec);
                                                                WebSetting.TableChange(RecRef);
                                                              END;

                                                   CaptionML=ENU=Path to Attached files }
    { 63  ;   ;Path to connected Att. Files;Text128;
                                                   OnValidate=BEGIN
                                                                EndingSlash("Path to connected Att. Files");

                                                                RecRef.GETTABLE(Rec);
                                                                WebSetting.TableChange(RecRef);
                                                              END;

                                                   CaptionML=ENU=Path to connected Attached Files }
    { 64  ;   ;Batch Import Nos.   ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Batch Import Nos. }
    { 70  ;   ;Max. Variation on VAT Amount;Decimal;
                                                   CaptionML=ENU=Max. VAT Difference Allowed;
                                                   DecimalPlaces=2:2 }
    { 71  ;   ;Delete Zero Lines   ;Boolean       ;CaptionML=ENU="Delete lines with Line Amount  = zero" }
    { 90  ;   ;Temp Company Name   ;Text50        ;CaptionML=ENU=Temporary Company Name;
                                                   Description=System used;
                                                   Editable=No }
    { 1000;   ;Company-ID          ;Text50        ;CaptionML=ENU=Company-ID Filter }
    { 1003;   ;Purchase Order      ;Boolean       ;CaptionML=ENU=Purchase Order Approval;
                                                   Description=Allows purchase order approval }
    { 1006;   ;Check Posting Setup ;Boolean       ;CaptionML=ENU=Check Posting Setup }
    { 1007;   ;Check Dimensions    ;Boolean       ;CaptionML=ENU=Check Dimensions }
    { 1008;   ;Check Accounting Periods;Boolean   ;CaptionML=ENU=Check Accounting Periods }
    { 1011;   ;Check if no Approvers;Boolean      ;CaptionML=ENU=Confirm that there are Approvers }
    { 1012;   ;Check Unit Cost     ;Boolean       ;CaptionML=ENU=Check Direct Unit Cost }
    { 1015;   ;Test Amounts        ;Option        ;CaptionML=ENU=Test Amounts;
                                                   OptionCaptionML=ENU=" ,Gross,Net+VAT";
                                                   OptionString=[ ,Gross,Net+VAT] }
    { 1016;   ;Max Misc. Charges (LCY);Decimal    ;CaptionML=ENU=Max Misc. Charges (LCY) }
    { 1050;   ;Approve VAT lines   ;Boolean       ;CaptionML=ENU=Approve VAT lines }
    { 1051;   ;Not Posting Predefined Account;Boolean;
                                                   CaptionML=ENU=Do not post Predefined Account }
    { 1055;   ;Minimum No. of Approvers;Integer   ;CaptionML=ENU=Minimum No. of Approvers }
    { 2005;   ;Order Applies-to    ;Option        ;InitValue=Receipts Lines;
                                                   OnValidate=BEGIN
                                                                IF "Order Applies-to" = "Order Applies-to"::"Purch Order Lines" THEN
                                                                  "Web Receipts" := "Web Receipts"::"Web confirmed";
                                                              END;

                                                   CaptionML=ENU=Purch. Invoice applies to;
                                                   OptionCaptionML=ENU=Purch Order Lines,Receipts Lines,Order not used,First Order then Receipt;
                                                   OptionString=Purch Order Lines,Receipts Lines,Order not used,First Order then Receipt;
                                                   Description=819 }
    { 2006;   ;Retrieve Lines based on;Option     ;CaptionML=ENU=Retrieve Lines based on;
                                                   OptionCaptionML=ENU=Line No,Item No,Item No with Variants;
                                                   OptionString=Line No,Item No,Item No with Variants }
    { 2010;   ;Automatic Item Charge Assignt.;Option;
                                                   CaptionML=ENU=Automatic Item Charge Assignment;
                                                   OptionCaptionML=ENU=None,Equally,Amount;
                                                   OptionString=None,Equally,Amount }
    { 3001;   ;Requisition Report  ;Integer       ;TableRelation=Object.ID WHERE (Type=CONST(Report));
                                                   CaptionML=ENU=Requisition Report }
    { 3002;   ;Order Report        ;Integer       ;TableRelation=Object.ID WHERE (Type=CONST(Report));
                                                   CaptionML=ENU=Order Report }
    { 3003;   ;Requisition Report Name;Text80     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Report),
                                                                                                                Object ID=FIELD(Requisition Report)));
                                                   CaptionML=ENU=Requisition Report Name;
                                                   Editable=No }
    { 3004;   ;Order Report Name   ;Text80        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Report),
                                                                                                                Object ID=FIELD(Order Report)));
                                                   CaptionML=ENU=Order Report Name;
                                                   Editable=No }
    { 3007;   ;Unapproved Order Report;Integer    ;TableRelation=Object.ID WHERE (Type=CONST(Report));
                                                   CaptionML=ENU=Unapproved Order Report }
    { 3008;   ;Unapproved Order Report Name;Text80;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Report),
                                                                                                                Object ID=FIELD(Unapproved Order Report)));
                                                   CaptionML=ENU=Unapproved Order Report Name;
                                                   Editable=No }
    { 4000;   ;Web Receipts        ;Option        ;OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  IF "Web Receipts" = "Web Receipts"::"NAV Receipts" THEN
                                                                    IF ("Order Applies-to" <> "Order Applies-to"::"Receipts Lines") AND
                                                                       ("Order Applies-to" <> "Order Applies-to"::"First Order then Receipt") THEN
                                                                      ERROR(STRSUBSTNO(EXF11,FIELDCAPTION("Order Applies-to"),FORMAT("Order Applies-to"::"Receipts Lines",0,'<Text>'),
                                                                                             FORMAT("Order Applies-to"::"First Order then Receipt",0,'<Text>')));
                                                              END;

                                                   CaptionML=ENU=Web Receipts;
                                                   OptionCaptionML=ENU=" ,NAV Receipts,Web confirmed";
                                                   OptionString=[ ,NAV Receipts,Web confirmed] }
    { 5000;   ;Matching Tolerance Amt %;Decimal   ;CaptionML=ENU=Matching Tolerance Unit Cost % }
    { 5001;   ;Matching Tolerance Qty %;Decimal   ;CaptionML=ENU=Matching Tolerance Quantity % }
    { 60000;  ;In LCY              ;Decimal       ;CaptionML=ENU=In LCY;
                                                   DecimalPlaces=0:0 }
    { 60002;  ;In Discount         ;Decimal       ;CaptionML=ENU=Percent %;
                                                   DecimalPlaces=1:1 }
    { 70000;  ;Use AND In Dimension Search;Boolean;CaptionML=ENU=Use AND In Dimension Search (web);
                                                   Description=WEB }
    { 70001;  ;Use Global Vendor   ;Boolean       ;CaptionML=ENU=Use Global Vendor (web);
                                                   Description=WEB }
    { 70002;  ;Use Global Currency ;Boolean       ;CaptionML=ENU=Use Global Currency (web);
                                                   Description=WEB }
    { 70003;  ;Activate Not Over   ;Boolean       ;CaptionML=ENU=Activate "Not over" Template Rule }
    { 70010;  ;Default Validation Message;Text250 ;CaptionML=ENU=Default Validation Message }
    { 80000;  ;Propose Line        ;Boolean       ;CaptionML=ENU=Propose Line }
    { 80001;  ;Propose VAT Line    ;Boolean       ;CaptionML=ENU=Propose VAT Line }
    { 84004;  ;Automatic Receipt Order;Option     ;CaptionML=ENU=Automatic Receipt Order;
                                                   OptionCaptionML=ENU=" ,All documents,Requisition Orders only,Matched Orders from invoice only";
                                                   OptionString=[ ,All documents,Requisition orders only,Matched Orders from invoice only] }
    { 84011;  ;Predefined Account  ;Text20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "Predefined Account" <> '' THEN BEGIN
                                                                  "Predefined Purch. Code" := '';
                                                                  "Propose Line" := TRUE;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Predefined Account }
    { 84012;  ;Min. Approval Amount (LCY);Decimal ;CaptionML=ENU=Min. Line Approval Amt. (LCY) }
    { 84013;  ;Min. Doc. Approval Amt. (LCY);Decimal;
                                                   CaptionML=ENU=Min. Doc. Approval Amt. (LCY) }
    { 84023;  ;Check Reference     ;Boolean       ;CaptionML=ENU=Check Reference }
    { 84030;  ;Auto Retrieve Receipt Lines;Boolean;CaptionML=ENU=Auto Retrieve Receipt Lines }
    { 84031;  ;Set Status to (Order);Option       ;CaptionML=ENU=Set Status to (Order);
                                                   OptionCaptionML=ENU=Unsubmitted,Submitted to Vendor;
                                                   OptionString=Unsubmitted,Submitted to Vendor }
    { 84035;  ;Keep PO Open after Receipt;Boolean ;CaptionML=ENU=Keep Purchase Order open after fully received }
    { 84041;  ;Suppress Approved Message;Boolean  ;CaptionML=ENU=Suppress message when changing approved line }
    { 84060;  ;Copy RecLink Vendor ;Boolean       ;OnValidate=VAR
                                                                Object@1100285000 : Record 2000000001;
                                                              BEGIN
                                                                IF CurrFieldNo <> 0 THEN BEGIN
                                                                  Object.SETRANGE(Type, Object.Type::Table);
                                                                  Object.SETRANGE(ID, 2000000068);
                                                                  IF NOT Object.FINDFIRST THEN
                                                                    ERROR(EXF08);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Copy RecLink Vendor }
    { 84061;  ;Copy RecLink PurchaseOrder;Boolean ;OnValidate=VAR
                                                                Object@1100285000 : Record 2000000001;
                                                              BEGIN
                                                                IF CurrFieldNo <> 0 THEN BEGIN
                                                                  Object.SETRANGE(Type, Object.Type::Table);
                                                                  Object.SETRANGE(ID, 2000000068);
                                                                  IF NOT Object.FINDFIRST THEN
                                                                    ERROR(EXF08);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Copy RecLink PurchaseOrder }
    { 84062;  ;Copy RecLink SalesOrder (Drop);Boolean;
                                                   OnValidate=VAR
                                                                Object@1100285000 : Record 2000000001;
                                                              BEGIN
                                                                IF CurrFieldNo <> 0 THEN BEGIN
                                                                  Object.SETRANGE(Type, Object.Type::Table);
                                                                  Object.SETRANGE(ID, 2000000068);
                                                                  IF NOT Object.FINDFIRST THEN
                                                                    ERROR(EXF08);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Copy RecLink SalesOrder (Drop) }
    { 84063;  ;Copy RecLink Contract;Boolean      ;OnValidate=VAR
                                                                Object@1100285000 : Record 2000000001;
                                                              BEGIN
                                                                IF CurrFieldNo <> 0 THEN BEGIN
                                                                  Object.SETRANGE(Type, Object.Type::Table);
                                                                  Object.SETRANGE(ID, 2000000068);
                                                                  IF NOT Object.FINDFIRST THEN
                                                                    ERROR(EXF08);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Copy RecLink Contract }
    { 99000;  ;Check FI Reference  ;Option        ;CaptionML=ENU=Check Finnish Reference;
                                                   OptionCaptionML=ENU=No check,No empty,No empty + Reference no. format;
                                                   OptionString=No check,No empty,No empty and ref. format;
                                                   Description=EXFFI 1.01 }
    { 12013588;;Use TIF Converter  ;Boolean       ;OnValidate=VAR
                                                                ExValidatePurch@1100285000 : Codeunit 12013594;
                                                              BEGIN
                                                                IF "Use TIF Converter" THEN
                                                                  ExValidatePurch.FindTIFConverter;
                                                              END;

                                                   CaptionML=ENU=Use TIF Converter }
    { 12013602;;No. Of Days (Due Date Calc);Integer;
                                                   CaptionML=ENU=No. Of Days (Due Date Calc) }
    { 12013603;;Match Vendor Currency Code;Boolean;CaptionML=ENU=Match Vendor Currency Code }
    { 12013604;;Show LCY Curr Web  ;Boolean       ;CaptionML=ENU=Show empty Currency as LCY Code (Web) }
    { 12013605;;Dont check Apps for PO-matched;Boolean;
                                                   CaptionML=ENU=Dont force Approvers for PO-matched Lines }
    { 12013606;;Blank Currency if equal to LCY;Boolean;
                                                   CaptionML=ENU=Blank Currency if equal to LCY }
    { 12013607;;Block Amt change Approved Line;Boolean;
                                                   CaptionML=ENU=Block Amt change Approved Line }
    { 12013609;;Date Format (OCR Import);Option   ;CaptionML=ENU=Date Format (OCR Import);
                                                   OptionCaptionML=ENU=YYYYMMDD,DDMMYYYY,MMDDYYYY;
                                                   OptionString=YYYYMMDD,DDMMYYYY,MMDDYYYY }
    { 12013610;;Default Import Type;Option        ;InitValue=Image;
                                                   CaptionML=ENU=Default Import Type;
                                                   OptionCaptionML=ENU=None,Image,OCR;
                                                   OptionString=None,Image,OCR }
    { 12013611;;VAT Prod. Grp From VAT Acc;Boolean;OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TESTFIELD("Propose VAT Line", TRUE);
                                                              END;

                                                   CaptionML=ENU=VAT Prod. Grp From VAT Acc }
    { 12013612;;Set Document Date To;Option       ;CaptionML=ENU=Set Document Date To;
                                                   OptionCaptionML=ENU=Posting Date,Do Not Update;
                                                   OptionString=Posting Date,Do Not Update }
    { 12013613;;Set Posting Date To (OCR);Option  ;CaptionML=ENU=Set Posting Date To (OCR);
                                                   OptionCaptionML=ENU=Imported Invoice Date,Work Date,Workd Date when OCR date missing;
                                                   OptionString=Imported Invoice Date,Work Date,Work Date when blank }
    { 12013614;;Set VAT to Zero at OCR Import;Boolean;
                                                   CaptionML=ENU=Set VAT to Zero at OCR Import }
    { 12013615;;Do Not Search Blocked Vendors;Boolean;
                                                   CaptionML=ENU=Do Not Search Blocked Vendors }
    { 12013616;;Vendor ID Fields   ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Vendor ID Field");
                                                   CaptionML=ENU=Vendor ID Fields;
                                                   Editable=No }
    { 12013617;;Auto Create OCR Mapping;Option    ;CaptionML=ENU=Auto Create OCR Line Mapping;
                                                   OptionCaptionML=ENU=Never,Ask,Always;
                                                   OptionString=Never,Ask,Always }
    { 12013618;;Copy Approval Flow Matched PO;Option;
                                                   CaptionML=ENU=Copy Approval Flow From Matched PO;
                                                   OptionCaptionML=ENU=Never,Only,Before additional template rules;
                                                   OptionString=Never,Only,Before additional template rules }
    { 12013619;;Activate VendorID sync.;Boolean   ;CaptionML=ENU=Activate Vendor ID sync. }
    { 12013620;;Propose Diff. Line ;Boolean       ;CaptionML=ENU=Propose Diff. Line }
    { 12013621;;Predefined Purch. Code;Code10     ;TableRelation="EX Standard Purchase Code".Code;
                                                   OnValidate=BEGIN
                                                                IF "Predefined Purch. Code" <> '' THEN
                                                                  "Predefined Account" := '';
                                                              END;

                                                   CaptionML=ENU=Predefined ExFlow Purch. Code }
    { 12013622;;Diffline Purch. Code;Code10       ;TableRelation="EX Standard Purchase Code".Code;
                                                   CaptionML=ENU=Diff.Line Purch. Code }
    { 12013623;;Force Imported Order No. Match;Boolean;
                                                   CaptionML=ENU=Force Imported Order No. Match }
    { 12013624;;Max Diff. Amt      ;Decimal       ;CaptionML=ENU=Max Diff. Amount }
    { 12013625;;Max Diff. %        ;Decimal       ;CaptionML=ENU=Max Diff. % }
    { 12013627;;Copy First Approver to Flow;Option;CaptionML=ENU=Copy First Approver to the Approval Flow;
                                                   OptionCaptionML=ENU=Never,All Documents,Invoices Only,Orders & Requisitions Only;
                                                   OptionString=Never,All Documents,Invoices Only,Orders & Requisitions Only }
    { 12013628;;Copy Line Dimensions to Header;Boolean;
                                                   CaptionML=ENU=Copy Line Dimensions to Header }
    { 12013629;;Do Not Upd Dim Purchase Line;Boolean;
                                                   CaptionML=ENU=Do Not Update Dimensions at change of Number (Purchase Line) }
    { 12013630;;Std. VAT Prod. Posting Group;Code10;
                                                   TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=Standard VAT Prod. Posting Group }
    { 12013631;;Std. Prod. Posting Group;Code10   ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=ENU=Standard Prod. Posting Group }
    { 12013632;;ExFlow Picture     ;BLOB          ;CaptionML=ENU=ExFlow Picture;
                                                   SubType=Bitmap }
    { 12013633;;Set Company ID on OCR Import;Boolean;
                                                   CaptionML=ENU=Set Company ID on OCR Import (If empty) }
    { 12013634;;Receipt No. Mand. Item;Boolean    ;InitValue=Yes;
                                                   CaptionML=ENU=Receipt No. Mandatory: Item }
    { 12013635;;Receipt No. Mand. G/L;Boolean     ;InitValue=Yes;
                                                   CaptionML=ENU=Receipt No. Mandatory: G/L }
    { 12013636;;Receipt No. Mand. Fixed Asset;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=Receipt No. Mandatory: Fixed Asset }
    { 12013637;;Receipt No. Mand. Charge Item;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=Receipt No. Mandatory: Charge (Item) }
    { 12013638;;OCR XML Port No.   ;Integer       ;TableRelation=Object.ID WHERE (Type=CONST(XMLport));
                                                   CaptionML=ENU=OCR XML Port No. }
    { 12013639;;Batch No. is Import Date;Boolean  ;CaptionML=ENU=Use import date as Batch No. }
    { 12013640;;Check If Lines Exists;Boolean     ;CaptionML=ENU=Check that Invoices Lines Exists. }
    { 12013641;;Set Posting Date to (Web Rec.);Option;
                                                   CaptionML=ENU=Set Posting Date to (Web Receipts);
                                                   OptionCaptionML=ENU=Do Not Change Date,Today's date;
                                                   OptionString=Do Not Change,Today's date }
    { 12013642;;Escalation Text    ;Text50        ;CaptionML=ENU=Escalation Text }
    { 12013643;;Days before escalation;Integer    ;CaptionML=ENU=Days before escalation }
    { 12013644;;Senior Manager     ;Code50        ;TableRelation="EX User Group".Code;
                                                   CaptionML=ENU=Senior Manager }
    { 12013646;;Base Calendar Code ;Code10        ;TableRelation="Base Calendar";
                                                   CaptionML=ENU=Base Calendar Code }
    { 12013647;;Change Journal Escalate;Boolean   ;CaptionML=ENU=Change Journal Escalate }
    { 12013648;;Max Amt system approval (LCY);Decimal;
                                                   CaptionML=ENU=Max. invoice amount for system approval (LCY) }
    { 12013649;;System Approver    ;Code50        ;TableRelation="EX User Group".Code;
                                                   CaptionML=ENU=System Approver }
    { 12013650;;Set Posting Description to;Option ;CaptionML=ENU=Set Posting Description to;
                                                   OptionCaptionML=ENU=Document Type+No.,Vendor Name,Order No. or Document Type+No.,Order No. or Vendor Name;
                                                   OptionString=Document Type+No.,Vendor Name,Order No. or Document Type+No.,Order No. or Vendor Name }
    { 12013651;;Set Due Date To (OCR);Option      ;CaptionML=ENU=Set Due Date To (OCR);
                                                   OptionCaptionML=ENU=Imported Due Date,From Payment Term;
                                                   OptionString=Imported Due Date,From Payment Term }
    { 12013655;;Auto Approve PO from Blanket;Boolean;
                                                   CaptionML=ENU=Auto Approve PO when Created from BlanketOrder }
    { 12013656;;Auto Approve PI for Appr PO;Boolean;
                                                   CaptionML=ENU=Auto Approve Invoice when connected to Approved Purchase Order }
    { 12013657;;Use Quote No for the PO;Boolean   ;CaptionML=ENU=Use Quote No for the Purchase order }
    { 12013658;;Create One Quote per Req. Line;Boolean;
                                                   CaptionML=ENU=Create One Quote per Requisition Line }
    { 12013660;;Default Job Task No.;Code20       ;CaptionML=ENU=Default Job Task No. }
    { 12013661;;RTC AD Filter      ;Text250       ;CaptionML=ENU=RTC Active Directory Filter }
    { 12013662;;Ignore Imported Currency Code;Boolean;
                                                   CaptionML=ENU=Ignore Imported Currency Code }
    { 12013663;;Max. Gross Difference Allowed;Decimal;
                                                   CaptionML=ENU=Max. Gross Difference Allowed }
    { 12013664;;Update Chng. Jrnl. Post. Grps.;Boolean;
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN
                                                                  TESTFIELD("Propose VAT Line", FALSE);
                                                              END;

                                                   CaptionML=ENU=Update Change Journal Posting Grps. (Changed Lines) }
    { 12013665;;Ignore OCR Lines   ;Option        ;CaptionML=ENU=Ignore OCR Lines;
                                                   OptionCaptionML=ENU=Never,Always,When PO has fewer lines than Invoice;
                                                   OptionString=Never,Always,When PO has fewer lines than Invoice }
    { 12013666;;Set blank Curr to LCY (REQ);Boolean;
                                                   CaptionML=ENU=Set blank Currency to LCY (Requisitions) }
    { 12013667;;Use Vendor No. from Order;Boolean ;CaptionML=ENU=Use Vendor No. from Matched Purchase Order }
    { 12013668;;Requisition Nos.   ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Requisition Nos. }
    { 12013670;;OCR Dimension Code 1;Code20       ;TableRelation=Dimension;
                                                   CaptionML=ENU=OCR Dimension Code 1 }
    { 12013671;;OCR Dimension Code 2;Code20       ;TableRelation=Dimension;
                                                   CaptionML=ENU=OCR Dimension Code 2 }
    { 12057075;;Misc 1 Purch. Code ;Code10        ;TableRelation="EX Standard Purchase Code".Code;
                                                   CaptionML=ENU=Misc 1 Purch. Code }
    { 12057076;;Misc 2 Purch. Code ;Code10        ;TableRelation="EX Standard Purchase Code".Code;
                                                   CaptionML=ENU=Misc 2 Purch. Code }
    { 12057077;;Advanced Verify mode;Boolean      ;CaptionML=ENU=Advanced Verify mode }
    { 12057078;;Require Accept UOM Mismatch;Boolean;
                                                   CaptionML=ENU=Require Accept of Potential unit of measure mismatch }
    { 12057079;;Prepmt. Predefined Account;Text20 ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "Predefined Account" <> '' THEN
                                                                  "Predefined Purch. Code" := '';
                                                              END;

                                                   CaptionML=ENU=Prepayment Predefined Account }
    { 12057080;;Disable Over Invoicing;Boolean    ;OnValidate=BEGIN
                                                                IF "Disable Over Invoicing" THEN
                                                                  IF NOT ("Order Applies-to" IN ["Order Applies-to"::"First Order then Receipt",
                                                                                                  "Order Applies-to"::"Purch Order Lines"]) THEN
                                                                    ERROR(STRSUBSTNO(EXF002,FIELDCAPTION("Order Applies-to"),"Order Applies-to"::"First Order then Receipt",
                                                                                                                             "Order Applies-to"::"Purch Order Lines"));
                                                              END;

                                                   CaptionML=ENU=Disable Over Invoicing (Quantity) }
    { 12057081;;Auto Create Vendor ID;Option      ;CaptionML=ENU=Auto Create Vendor ID;
                                                   OptionCaptionML=ENU=Never,Ask,Always;
                                                   OptionString=Never,Ask,Always }
    { 12057082;;Propose New Approvers Web;Boolean ;CaptionML=ENU=Always propose new Approvers on Web }
    { 12057083;;Check Dimensions Web;Option       ;CaptionML=ENU=Check Dimensions Web;
                                                   OptionCaptionML=ENU=" ,Always,Final Approver Only";
                                                   OptionString=[ ,Always,Final Approver Only] }
    { 12057084;;Due Date Warning when Older;Integer;
                                                   CaptionML=ENU=Due date warning when older than X days }
    { 12057085;;VAT Warning when diff setup;Boolean;
                                                   CaptionML=ENU=Warning when VAT differs from setups }
    { 12057086;;Do not add approver (dynamic);Boolean;
                                                   CaptionML=ENU=Do not add approver when using dynamic approvals (web) }
    { 12057170;;Change Jnl. Dim Priority;Option   ;CaptionML=ENU=Change Jnl. Dim Priority (Conflicts);
                                                   OptionCaptionML=ENU=Web Dim Always,Web Dim. when conflict,Default Dim. always;
                                                   OptionString=Web Dim. Always,Web Dim. when conflict,Default Dim. always }
    { 12057181;;RO Page size for queries;Integer  ;CaptionML=ENU=Page size for queries;
                                                   MinValue=1;
                                                   MaxValue=100;
                                                   Description=ROINT }
    { 12057182;;RO Buyer Name      ;Text100       ;CaptionML=ENU=Buyer Name;
                                                   Description=ROINT }
    { 12057183;;RO XSLT Path       ;Text250       ;Description=ROINT }
    { 12057184;;Readsoft Online integration;Boolean;
                                                   CaptionML=ENU=Integration mot Readsoft Online;
                                                   Description=ROINT }
    { 12057185;;RO XSLT            ;BLOB          ;Description=ROINT }
    { 12057186;;Upload vendors to RO;Boolean      ;CaptionML=ENU=Upload vendors;
                                                   Description=ROINT }
    { 12057187;;Upload references to RO;Boolean   ;CaptionML=ENU=Upload references;
                                                   Description=ROINT }
    { 12057190;;RO Connect User    ;Text100       ;CaptionML=ENU=RO Connect User;
                                                   Description=ROINT }
    { 12057191;;RO Connect Password;Text20        ;ExtendedDatatype=Masked;
                                                   CaptionML=ENU=RO Connect Password;
                                                   Description=ROINT }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      EXF08@1100285001 : TextConst 'ENU=Record Link table does not exist in this version of NAV.';
      EXF09@1100285007 : TextConst 'ENU=To use a watermark, you must use Bullzip as the PDF printer.';
      EXF10@1100285008 : TextConst 'ENU=The import path cannot be the same as the image copy path!';
      EXFConst@1100285006 : TextConst 'ENU=EXF';
      EXF11@1100285000 : TextConst 'ENU=Field %1 must be set to either %2 or %3!';
      EXF002@1100285002 : TextConst 'ENU=Field %1 must be set to either %2 or %3 in ExFlow Setup.';
      RecRef@1100285003 : RecordRef;
      WebSetting@1100285004 : Record 12057071;

    PROCEDURE EndingSlash@1000000000(VAR Path@1000000000 : Text[128]);
    BEGIN
      IF Path <> '' THEN
        IF Path[STRLEN(Path)] <> '\' THEN
          Path := Path + '\';
    END;

    PROCEDURE IsNotOverActive@1100285000() : Boolean;
    BEGIN
      EXIT("Activate Not Over");
    END;

    PROCEDURE ReturnExFlowVersionData@1100285001(VAR BaseVersion@1100285000 : Text[250];VAR HotfixNumbers@1100285001 : Text[250];VAR DateForBaseVersion@1100285002 : Date;VAR ModifiedObjectsExists@1100285003 : Boolean;VAR VersionListForFirstModifiedObj@1100285004 : Text[250];VAR DateForModObj@1100285005 : Date;VAR BaseVersionStd@1100285011 : Text[250];VAR HotfixNumbersStd@1100285010 : Text[250];VAR DateForBaseVersionStd@1100285009 : Date;VAR ModifiedObjectsExistsStd@1100285008 : Boolean;VAR VersionListForFirstModObjStd@1100285007 : Text[250];VAR DateForModObjStd@1100285006 : Date);
    VAR
      Object@1100285012 : Record 2000000001;
      TempObject@1100285013 : TEMPORARY Record 2000000001;
      TempObject2@1100285014 : TEMPORARY Record 2000000001;
      TempBaseVersion@1100285015 : Integer;
      TempHotFix@1100285016 : Integer;
      TempVersionList@1100285017 : Text[250];
      TempPos@1100285018 : Integer;
    BEGIN
      Object.RESET;
      Object.SETFILTER(Type, '>%1', 0);
      Object.SETFILTER(ID, '%1..%2|%3..%4', 12013587, 12013686, 12057070, 12057169);
      Object.SETFILTER("Version List", '%1', '@*'+EXFConst+'*');
      IF Object.FINDSET THEN BEGIN
        REPEAT
          TempBaseVersion := GetBaseVersionID(Object."Version List");
          TempObject.SETRANGE(ID, TempBaseVersion);
          IF NOT TempObject.FIND('-') THEN BEGIN
            TempObject.ID := TempBaseVersion;
            TempObject.Date := Object.Date;
            TempObject."Version List" := Object."Version List";
            TempObject.INSERT;
          END;

          TempVersionList := Object."Version List";
          TempPos := STRPOS(TempVersionList,',');
          IF TempPos <> 0 THEN BEGIN
            TempVersionList := COPYSTR(TempVersionList, TempPos + 1);
            TempHotFix := GetHotfixNumber(TempVersionList);
            WHILE TempHotFix <> 0 DO BEGIN
              TempObject2.RESET;
              TempObject2.SETRANGE(ID, TempHotFix);
              IF NOT TempObject2.FIND('-') THEN BEGIN
                TempObject2.ID := TempHotFix;
                TempObject2.Date := Object.Date;
                TempObject2."Version List" := Object."Version List";
                TempObject2.INSERT;
              END;
              TempHotFix := GetHotfixNumber(TempVersionList);
            END;
          END;
        UNTIL Object.NEXT = 0;

        TempObject.RESET;
        TempObject.FINDLAST;
        BaseVersion := FORMAT(TempObject.ID);
        DateForBaseVersion := TempObject.Date;

        TempObject2.RESET;
        IF TempObject2.FIND('-') THEN BEGIN
          HotfixNumbers := FORMAT(TempObject2.ID);
          IF TempObject2.NEXT <> 0 THEN
            REPEAT
              HotfixNumbers := COPYSTR(HotfixNumbers + ',' + FORMAT(TempObject2.ID),1,MAXSTRLEN(HotfixNumbers));
            UNTIL TempObject2.NEXT = 0;
        END;

        Object.SETRANGE(Modified, TRUE);
        IF Object.FINDFIRST THEN BEGIN
          ModifiedObjectsExists := TRUE;
          VersionListForFirstModifiedObj := Object."Version List";
          DateForModObj := Object.Date;
        END;
      END;

      // Standard Objects
      TempObject.RESET;
      TempObject.DELETEALL;

      TempObject2.RESET;
      TempObject2.DELETEALL;

      Object.RESET;
      Object.SETFILTER(Type, '>%1', 0);
      Object.SETFILTER(ID, '%1..%2', 1, 50000);
      IF Object.FINDSET THEN BEGIN
        REPEAT
          IF STRPOS(Object."Version List", EXFConst) = 0 THEN BEGIN
            TempVersionList := DELSTR(Object."Version List",1,STRPOS(UPPERCASE(Object."Version List"),EXFConst));
            TempBaseVersion := GetBaseVersionID(TempVersionList);
            TempObject.SETRANGE(ID, TempBaseVersion);
            IF NOT TempObject.FIND('-') THEN BEGIN
              TempObject.ID := TempBaseVersion;
              TempObject.Date := Object.Date;
              TempObject."Version List" := Object."Version List";
              TempObject.INSERT;
            END;

            TempVersionList := DELSTR(Object."Version List",1,STRPOS(UPPERCASE(Object."Version List"),EXFConst));
            TempPos := STRPOS(TempVersionList,',');
            IF TempPos <> 0 THEN BEGIN
              TempVersionList := COPYSTR(TempVersionList, TempPos + 1);
              TempHotFix := GetHotfixNumber(TempVersionList);
              WHILE TempHotFix <> 0 DO BEGIN
                TempObject2.RESET;
                TempObject2.SETRANGE(ID, TempHotFix);
                IF NOT TempObject2.FIND('-') THEN BEGIN
                  TempObject2.ID := TempHotFix;
                  TempObject2.Date := Object.Date;
                  TempObject2."Version List" := Object."Version List";
                  TempObject2.INSERT;
                END;
                TempHotFix := GetHotfixNumber(TempVersionList);
              END;
            END;
          END;
        UNTIL Object.NEXT = 0;

        TempObject.RESET;
        TempObject.FINDLAST;
        BaseVersionStd := TempObject."Version List";
        DateForBaseVersionStd := TempObject.Date;

        TempObject2.RESET;
        IF TempObject2.FIND('-') THEN BEGIN
          HotfixNumbersStd := FORMAT(TempObject2.ID);
          IF TempObject2.NEXT <> 0 THEN
            REPEAT
              HotfixNumbersStd := COPYSTR(HotfixNumbersStd + ',' + FORMAT(TempObject2.ID),1,MAXSTRLEN(HotfixNumbers));
            UNTIL TempObject2.NEXT = 0;
        END;

        Object.SETRANGE(Modified, TRUE);
        IF Object.FINDFIRST THEN BEGIN
          ModifiedObjectsExistsStd := TRUE;
          VersionListForFirstModObjStd := Object."Version List";
          DateForModObjStd := Object.Date;
        END;
      END;
    END;

    PROCEDURE GetBaseVersionID@1100285004(InText@1100285000 : Text[1024]) BaseVersion : Integer;
    VAR
      TempStr@1100285001 : Text[1024];
      TempStr2@1100285003 : Text[1024];
      i@1100285002 : Integer;
    BEGIN
      IF InText = '' THEN
        EXIT(0);

      TempStr2 := COPYSTR(InText,1,STRPOS(InText,','));
      IF TempStr2 = '' THEN
        TempStr2 := InText;

      CLEAR(TempStr);
      FOR i := 1 TO STRLEN(TempStr2) DO
        IF TempStr2[i] IN ['1','2','3','4','5','6','7','8','9','0'] THEN
          TempStr := TempStr + FORMAT(TempStr2[i]);

      IF TempStr <> '' THEN
        IF EVALUATE(BaseVersion, TempStr) THEN;
    END;

    PROCEDURE GetHotfixNumber@1100285008(VAR InText@1100285000 : Text[1024]) HotFixNo : Integer;
    VAR
      TempStr@1100285001 : Text[1024];
      TempStr2@1100285003 : Text[1024];
      TempPos@1100285004 : Integer;
      i@1100285002 : Integer;
    BEGIN
      IF InText = '' THEN
        EXIT(0);

      TempPos := STRPOS(InText,'EXF');
      IF TempPos <> 0 THEN
        InText := DELSTR(InText, 1, TempPos+2+7);

      TempPos := STRPOS(InText,',');
      IF TempPos <> 0 THEN
        TempStr := COPYSTR(InText,1,TempPos)
      ELSE
        TempStr := InText;

      InText := DELSTR(InText, 1, STRLEN(TempStr));

      CLEAR(TempStr2);
      FOR i := 1 TO STRLEN(TempStr) DO
        IF TempStr[i] IN ['1','2','3','4','5','6','7','8','9','0'] THEN
          TempStr2 := TempStr2 + FORMAT(TempStr[i]);

      IF TempStr2 <> '' THEN BEGIN
        IF EVALUATE(HotFixNo, TempStr2) THEN;
      END
      ELSE
        HotFixNo := 0;
    END;

    PROCEDURE InitRecord@1100285002();
    BEGIN
      "Check Final Approval" := TRUE;
    END;

    BEGIN
    END.
  }
}

