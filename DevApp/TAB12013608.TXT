OBJECT Table 12013608 EX Document
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF350000;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    OnDelete=BEGIN
               DeleteExDoc;
             END;

    CaptionML=ENU=Document;
    LookupPageID=Page12013633;
    DrillDownPageID=Page12013633;
  }
  FIELDS
  {
    { 1   ;   ;Company Name        ;Text30        ;TableRelation=Company;
                                                   CaptionML=ENU=Company Name }
    { 2   ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Posted Invoice,Posted Credit Memo,Requisition;
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Posted Invoice,Posted Credit Memo,Requisition }
    { 3   ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No. }
    { 10  ;   ;Initiator           ;Code50        ;TableRelation="EX User Group".Code WHERE (Company Name=FIELD(Company Name),
                                                                                             Blocked=CONST(No));
                                                   CaptionML=ENU=Assigned Purchasing Group }
    { 11  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=ENU=Vendor No. }
    { 12  ;   ;Admin Comment       ;Text180       ;CaptionML=ENU=Comments }
    { 13  ;   ;Create Date         ;Date          ;CaptionML=ENU=Create Date }
    { 14  ;   ;Due Date            ;Date          ;CaptionML=ENU=Due Date }
    { 15  ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 16  ;   ;Document Date       ;Date          ;CaptionML=ENU=Document Date }
    { 17  ;   ;Status              ;Option        ;CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=Inactive,Active,Approved,Ready for posting,On hold,Received,Invoiced,Not released;
                                                   OptionString=Inactive,Active,Approved,Ready for posting,On hold,Received,Invoiced,Not released }
    { 18  ;   ;Predefind Posting No.;Code20       ;CaptionML=ENU=Predefind Posting No. }
    { 19  ;   ;Vendor Document No. ;Code50        ;CaptionML=ENU=Vendor Document No. }
    { 20  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=ENU=Currency Code }
    { 21  ;   ;Vendor Name         ;Text50        ;CaptionML=ENU=Vendor Name }
    { 22  ;   ;Image Name          ;Text250       ;CaptionML=ENU=Image Name }
    { 23  ;   ;Rejected            ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("EX Document Line" WHERE (Company Name=FIELD(Company Name),
                                                                                               Document Type=FIELD(Document Type),
                                                                                               Document No.=FIELD(Document No.),
                                                                                               Flowstatus=CONST(Rejected)));
                                                   CaptionML=ENU=Rejected;
                                                   Editable=No }
    { 24  ;   ;Net Amount          ;Decimal       ;CaptionML=ENU=Net Amount;
                                                   Description=Req;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 25  ;   ;VAT Amount          ;Decimal       ;CaptionML=ENU=VAT Amount;
                                                   Description=Req;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 26  ;   ;ID                  ;Integer       ;AutoIncrement=Yes;
                                                   CaptionML=ENU=ID }
    { 27  ;   ;Expected Receipt Date;Date         ;CaptionML=ENU=Expected Receipt Date }
    { 28  ;   ;Hold by Approver    ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("EX Document Line Approver" WHERE (Company Name=FIELD(Company Name),
                                                                                                        Document Type=FIELD(Document Type),
                                                                                                        Document No.=FIELD(Document No.),
                                                                                                        Flowstatus=CONST(On hold)));
                                                   CaptionML=ENU=On Hold;
                                                   Editable=No }
    { 29  ;   ;Batch No.           ;Code20        ;CaptionML=ENU=Batch No.;
                                                   Description=470 editable no;
                                                   Editable=No }
    { 40  ;   ;Gross Amount        ;Decimal       ;CaptionML=ENU=Gross Amount;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 50  ;   ;Assigned Receipt Group;Code50      ;TableRelation="EX User Group".Code WHERE (Company Name=FIELD(Company Name),
                                                                                             Blocked=CONST(No));
                                                   CaptionML=ENU=Assigned Receipt Group;
                                                   Description=533 }
    { 60  ;   ;Ex Location ID      ;Integer       ;OnValidate=VAR
                                                                ExLocation@1100285000 : Record 12013613;
                                                              BEGIN
                                                                IF "Ex Location ID" = 0 THEN
                                                                  "Text Field 10" := ''
                                                                ELSE BEGIN
                                                                  ExLocation.GET("Ex Location ID");
                                                                  "Text Field 10" := ExLocation.Name;
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              ExLocation@1100285000 : Record 12013613;
                                                              ExLocationList@1100285001 : Page 12013630;
                                                            BEGIN
                                                              ExLocation.FILTERGROUP := 2;
                                                              ExLocation.SETRANGE("Company Name", COMPANYNAME);
                                                              ExLocation.FILTERGROUP := 0;

                                                              CLEAR(ExLocationList);
                                                              ExLocationList.SETTABLEVIEW(ExLocation);
                                                              ExLocationList.LOOKUPMODE := TRUE;
                                                              IF ExLocationList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                ExLocationList.GETRECORD(ExLocation);
                                                                VALIDATE("Ex Location ID", ExLocation.ID);
                                                              END;
                                                            END;

                                                   CaptionML=ENU=ExFlow Delivery Address ID;
                                                   Description=535 }
    { 70  ;   ;Requisition Status  ;Option        ;CaptionML=ENU=Requisition Status;
                                                   OptionCaptionML=ENU=Unsubmitted,Submitted to Vendor;
                                                   OptionString=Unsubmitted,Submitted to Vendor;
                                                   Description=738 }
    { 500 ;   ;Project No.         ;Code20        ;CaptionML=ENU=Project No. }
    { 501 ;   ;Error Message       ;Text250       ;CaptionML=ENU=Error Message }
    { 502 ;   ;Text Field 1        ;Text100       ;CaptionML=ENU=Reference No.;
                                                   Description=478 }
    { 503 ;   ;Text Field 2        ;Text100       ;CaptionML=ENU=Text Field 2;
                                                   Description=478 }
    { 504 ;   ;Date Field 1        ;Date          ;CaptionML=ENU=Date Field 1;
                                                   Description=478 }
    { 505 ;   ;Date Field 2        ;Date          ;CaptionML=ENU=Date Field 2;
                                                   Description=478 }
    { 510 ;   ;Text Field 3        ;Text100       ;CaptionML=ENU=Text Field 3;
                                                   Description=478 }
    { 511 ;   ;Text Field 4        ;Text100       ;CaptionML=ENU=Text Field 4;
                                                   Description=478 }
    { 512 ;   ;Text Field 5        ;Text100       ;CaptionML=ENU=Text Field 5;
                                                   Description=478 }
    { 513 ;   ;Text Field 6        ;Text100       ;CaptionML=ENU=Text Field 6;
                                                   Description=478 }
    { 514 ;   ;Text Field 7        ;Text100       ;CaptionML=ENU=Text Field 7;
                                                   Description=478 }
    { 515 ;   ;Text Field 8        ;Text100       ;CaptionML=ENU=Text Field 8;
                                                   Description=478 }
    { 516 ;   ;Text Field 9        ;Text100       ;CaptionML=ENU=Text Field 9;
                                                   Description=478 }
    { 517 ;   ;Text Field 10       ;Text100       ;CaptionML=ENU=Text Field 10;
                                                   Description=478 }
    { 550 ;   ;Date Field 3        ;DateTime      ;CaptionML=ENU=Date Field 3;
                                                   Description=478 }
    { 551 ;   ;Date Field 4        ;DateTime      ;CaptionML=ENU=Date Field 4;
                                                   Description=478 }
    { 560 ;   ;Decimal Field 1     ;Decimal       ;CaptionML=ENU=Decimal Field 1;
                                                   Description=478 }
    { 561 ;   ;Decimal Field 2     ;Decimal       ;CaptionML=ENU=Decimal Field 2;
                                                   Description=478 }
    { 562 ;   ;Decimal Field 3     ;Decimal       ;CaptionML=ENU=Decimal Field 3;
                                                   Description=478 }
    { 563 ;   ;Decimal Field 4     ;Decimal       ;CaptionML=ENU=Decimal Field 4;
                                                   Description=478 }
    { 600 ;   ;Approver Comments   ;BLOB          ;Compressed=No;
                                                   CaptionML=ENU=Approver Header Comments;
                                                   Description=478 }
    { 650 ;   ;Created By          ;Code50        ;CaptionML=ENU=Created By;
                                                   Description=478;
                                                   Editable=No }
    { 651 ;   ;Created Date        ;DateTime      ;CaptionML=ENU=Created Date;
                                                   Description=478;
                                                   Editable=No }
    { 700 ;   ;Change Jnl Processed PO;Boolean    ;CaptionML=ENU=Change Jnl Processed Purchase Order;
                                                   Description=531 }
    { 1500;   ;Has Attachments     ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("EX Attached File" WHERE (Company Name=FIELD(Company Name),
                                                                                               Document Type=FIELD(Document Type),
                                                                                               Document No.=FIELD(Document No.)));
                                                   CaptionML=ENU=Has Attachments;
                                                   Editable=No }
    { 1501;   ;Has Approver Comments;Boolean      ;FieldClass=FlowField;
                                                   CalcFormula=Exist("EX Document Line Approver" WHERE (Company Name=FIELD(Company Name),
                                                                                                        Document Type=FIELD(Document Type),
                                                                                                        Document No.=FIELD(Document No.),
                                                                                                        Comment=FILTER(<>''),
                                                                                                        Auto Approved=CONST(No)));
                                                   CaptionML=ENU=Has Approver Line Comments;
                                                   Description=479;
                                                   Editable=No }
    { 1502;   ;Financial On Hold   ;Code3         ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Purchase Header"."On Hold" WHERE (Document Type=FIELD(Document Type),
                                                                                                         No.=FIELD(Document No.)));
                                                   CaptionML=ENU=Payment/Refund On Hold;
                                                   Description=372;
                                                   Editable=No }
    { 1505;   ;Shortcut Dimension 1 Code;Code20   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Purchase Header"."Shortcut Dimension 1 Code" WHERE (Document Type=FIELD(Document Type),
                                                                                                                           No.=FIELD(Document No.)));
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Shortcut Dimension 1 Code;
                                                   Editable=No;
                                                   CaptionClass='1,2,1' }
    { 1506;   ;Shortcut Dimension 2 Code;Code20   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Purchase Header"."Shortcut Dimension 2 Code" WHERE (Document Type=FIELD(Document Type),
                                                                                                                           No.=FIELD(Document No.)));
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Shortcut Dimension 2 Code;
                                                   Editable=No;
                                                   CaptionClass='1,2,2' }
    { 1510;   ;Line 1 Current Approver;Code50     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("EX Document Line Approver".Approver WHERE (Document ID=FIELD(ID),
                                                                                                                  Flowstatus=CONST(Current)));
                                                   CaptionML=ENU=Current Approver (First line);
                                                   Editable=No }
  }
  KEYS
  {
    {    ;ID                                      ;Clustered=Yes }
    {    ;Document No.                             }
    {    ;Status,Document Type,Company Name        }
    {    ;Company Name,Status,Document Type,Document No. }
    {    ;Company Name,Document Type,Document No.  }
    {    ;Company Name,Due Date                    }
    {    ;Company Name,Posting Date                }
    {    ;Company Name,Vendor Name                 }
    {    ;Initiator                                }
    {    ;Assigned Receipt Group                   }
    {    ;Company Name,Create Date                 }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      EXF100@1100285019 : TextConst 'ENU="The document must belong to the company currently opened. "';
      EXF117@1100285010 : TextConst 'ENU=Detailed Import information does not exist.';
      EXF118@1100285000 : TextConst 'ENU=No lines with the specified filter.';

    PROCEDURE ShowApproverComments@1100285001();
    VAR
      ExFileMgt@1100285001 : Codeunit 12013602;
      ExFlowBlob@1100285003 : Record 12013591;
      TempFileName@1100285000 : Text[1024];
    BEGIN
      CALCFIELDS("Approver Comments");
      IF NOT "Approver Comments".HASVALUE THEN
        EXIT;
      TempFileName := ExFileMgt.ClientTempFileName(CREATEGUID,'.txt');
      ExFlowBlob.BLOB := "Approver Comments";
      ExFileMgt.ShowBLOB(ExFlowBlob,TempFileName);
    END;

    PROCEDURE Navigate@1100285002();
    VAR
      NavigateForm@1100285000 : Page 344;
    BEGIN
      IF COMPANYNAME <> "Company Name" THEN
        ERROR(EXF100);

      NavigateForm.SetDoc("Posting Date", "Document No.");
      NavigateForm.RUN;
    END;

    PROCEDURE ShowCard@1100285003();
    BEGIN
      IF COMPANYNAME <> "Company Name" THEN
        ERROR(EXF100);

      Card;
    END;

    LOCAL PROCEDURE Card@1000000000();
    VAR
      PurchHeader@1100285000 : Record 38;
      PurchInvHeader@1100285001 : Record 122;
      PurchCrMemoHeader@1100285002 : Record 124;
    BEGIN
      PurchHeader.RESET;
      PurchHeader.SETRANGE("No.","Document No.");

      CASE "Document Type" OF
        "Document Type"::Invoice :
          BEGIN
            PurchHeader.SETRANGE("Document Type",PurchHeader."Document Type"::Invoice);
            PurchHeader.FINDFIRST;
            PAGE.RUNMODAL(51,PurchHeader);
          END;
        "Document Type"::"Credit Memo" :
          BEGIN
            PurchHeader.SETRANGE("Document Type",PurchHeader."Document Type"::"Credit Memo");
            PurchHeader.FINDFIRST;
            PAGE.RUNMODAL(52,PurchHeader);
          END;
        "Document Type"::Order :
          BEGIN
            PurchHeader.SETRANGE("Document Type",PurchHeader."Document Type"::Order);
            PurchHeader.FINDFIRST;
            PAGE.RUNMODAL(50,PurchHeader);
          END;
        "Document Type"::Quote :
          BEGIN
            PurchHeader.SETRANGE("Document Type",PurchHeader."Document Type"::Quote);
            PurchHeader.FINDFIRST;
            PAGE.RUNMODAL(49,PurchHeader);
          END;
        "Document Type"::"Posted Invoice" :
          BEGIN
            PurchInvHeader.SETRANGE("No.", "Document No.");
            PurchInvHeader.FINDFIRST;
            PAGE.RUNMODAL(138,PurchInvHeader);
          END;
        "Document Type"::"Posted Credit Memo" :
          BEGIN
            PurchCrMemoHeader.SETRANGE("No.", "Document No.");
            PurchCrMemoHeader.FINDFIRST;
            PAGE.RUNMODAL(140,PurchCrMemoHeader);
          END;
      END;
    END;

    PROCEDURE RetrieveRecord@1100285013(VAR ExDoc@1100285004 : Record 12013608;CompName@1100285000 : Text[30];DocType@1100285001 : Integer;DocNo@1100285002 : Code[20]) : Boolean;
    BEGIN
      WITH ExDoc DO BEGIN
        RESET;
        CLEAR(ExDoc);
        SETCURRENTKEY("Document No.");
        SETRANGE("Company Name", CompName);
        SETRANGE("Document Type", DocType);
        SETRANGE("Document No.", DocNo);
        EXIT(FINDFIRST);
      END;
    END;

    PROCEDURE ShowImportCard@1100285004();
    VAR
      ExfImportedPurchHead@1100285000 : Record 12013650;
      ExDoc2@1100285001 : Record 12013612;
    BEGIN
      ExDoc2.RESET;
      ExDoc2.SETCURRENTKEY("Document No.");
      ExDoc2.SETRANGE("Company Name", "Company Name");
      ExDoc2.SETRANGE("Document Type", "Document Type");
      ExDoc2.SETRANGE("Document No.", "Document No.");
      IF ExDoc2.FINDFIRST THEN BEGIN
        IF ExfImportedPurchHead.GET(ExDoc2."Import Document No.") THEN
          PAGE.RUNMODAL(12013635,ExfImportedPurchHead)
        ELSE
          MESSAGE(EXF117);
      END ELSE
        MESSAGE(EXF117);
    END;

    PROCEDURE DeleteExDoc@1100285005();
    VAR
      ExDeletedDoc@1100285003 : Record 12013622;
      ExDocLine@1100285000 : Record 12013609;
      PurchLine@1100285005 : Record 39;
    BEGIN
      ExDeletedDoc.INIT;
      ExDeletedDoc.TRANSFERFIELDS(Rec);
      ExDeletedDoc.ID := 0;
      ExDeletedDoc."Deleted By" := USERID;
      ExDeletedDoc."Deleted Date" := CREATEDATETIME(TODAY,TIME);
      ExDeletedDoc."Old ID" := ID;
      ExDeletedDoc.INSERT;

      PurchLine.RESET;
      IF PurchLine.SETCURRENTKEY("Document No.") THEN;
      PurchLine.CHANGECOMPANY("Company Name");
      PurchLine.SETRANGE("Document Type", "Document Type");
      PurchLine.SETRANGE("Document No.", "Document No.");
      IF NOT PurchLine.ISEMPTY THEN
        PurchLine.MODIFYALL(Approve, FALSE);

      ExDocLine.RESET;
      ExDocLine.SETCURRENTKEY("Document ID");
      ExDocLine.SETRANGE("Document ID", ID);
      IF ExDocLine.FINDSET(TRUE) THEN BEGIN
        REPEAT
          ExDocLine.DeleteLine(ExDeletedDoc.ID);
        UNTIL ExDocLine.NEXT = 0;

        ExDocLine.DELETEALL;
      END;
    END;

    PROCEDURE FilterOnApprover@1100285000(VAR ExDoc@1100285007 : Record 12013608);
    VAR
      AppSetup@1100285008 : Record 12013601;
      lEXUserGroup@1100285006 : Record 12013606;
      lEXDocumentLineApprover@1100285004 : Record 12013610;
      lSelectApprover@1100285003 : Page 12013647;
      lApprover@1100285002 : Code[50];
      lStatus@1100285001 : Integer;
      TempPos@1100285009 : Integer;
      lMarked@1100285000 : Boolean;
    BEGIN
      AppSetup.GET(COMPANYNAME,0);

      CLEAR(lMarked);
      CLEAR(lSelectApprover);
      lSelectApprover.SetPostedDocs(ExDoc."Document Type" IN [ExDoc."Document Type"::"Posted Invoice",
                                                              ExDoc."Document Type"::"Posted Credit Memo"]);
      IF NOT (lSelectApprover.RUNMODAL = ACTION::OK) THEN
        EXIT;

      lApprover := lSelectApprover.GetApprover;
      lStatus := lSelectApprover.GetStatus;
      IF NOT lEXUserGroup.GET(COMPANYNAME,lApprover) THEN BEGIN
        TempPos := STRPOS(lApprover,'\');
        IF TempPos <> 0 THEN BEGIN
          lApprover := COPYSTR(lApprover,TempPos + 1);
          IF NOT lEXUserGroup.GET(COMPANYNAME,lApprover) THEN
            EXIT;
        END;
      END;

      lEXDocumentLineApprover.RESET;
      lEXDocumentLineApprover.SETCURRENTKEY("Company Name",Approver,"Days to Due Date");
      lEXDocumentLineApprover.SETRANGE("Company Name", COMPANYNAME);
      IF ExDoc."Document Type" IN [ExDoc."Document Type"::"Posted Invoice",ExDoc."Document Type"::"Posted Credit Memo"] THEN
        lEXDocumentLineApprover.SETRANGE("Document Type", 6, 7) // Only posted documents
      ELSE BEGIN
        lEXDocumentLineApprover.SETRANGE("Document Type", 0, 5); // No posted documents

        CASE lStatus OF
          0 : lEXDocumentLineApprover.SETRANGE(Flowstatus,lEXDocumentLineApprover.Flowstatus::Current);
          1 : lEXDocumentLineApprover.SETRANGE(Flowstatus,lEXDocumentLineApprover.Flowstatus::"Not processed");
          2 : ;
        END;
      END;

      lEXDocumentLineApprover.SETRANGE(Approver,lApprover);

      IF lEXDocumentLineApprover.FINDSET THEN
        REPEAT
          IF lEXDocumentLineApprover."Document ID" <> ExDoc.ID THEN BEGIN
            ExDoc.GET(lEXDocumentLineApprover."Document ID");
            IF ExDoc."Document Type" IN [ExDoc."Document Type"::"Posted Invoice",ExDoc."Document Type"::"Posted Credit Memo"] THEN BEGIN
              ExDoc.MARK(TRUE);
              lMarked := TRUE;
            END
            ELSE
              IF NOT ExDoc."Change Jnl Processed PO" THEN
                IF ExDoc.Status = ExDoc.Status::Active THEN BEGIN
                  ExDoc.MARK(TRUE);
                  lMarked := TRUE;
                END;
          END;
        UNTIL lEXDocumentLineApprover.NEXT = 0;

      IF lMarked THEN
        ExDoc.MARKEDONLY(TRUE)
      ELSE
        MESSAGE(EXF118);
    END;

    PROCEDURE GetApproverDocs@1100285007(VAR TempExDoc@1100285007 : TEMPORARY Record 12013608;lApprover@1100285000 : Code[50]);
    VAR
      AppSetup@1100285008 : Record 12013601;
      lEXUserGroup@1100285006 : Record 12013606;
      lEXDocument@1100285005 : Record 12013608;
      lEXDocumentLineApprover@1100285004 : Record 12013610;
      TempPos@1100285009 : Integer;
    BEGIN
      AppSetup.GET(COMPANYNAME,0);

      TempExDoc.RESET;
      TempExDoc.DELETEALL;

      IF NOT lEXUserGroup.GET(COMPANYNAME,lApprover) THEN BEGIN
        TempPos := STRPOS(lApprover,'\');
        IF TempPos <> 0 THEN BEGIN
          lApprover := COPYSTR(lApprover,TempPos + 1);
          IF NOT lEXUserGroup.GET(COMPANYNAME,lApprover) THEN
            EXIT;
        END;
      END;

      lEXDocumentLineApprover.RESET;
      lEXDocumentLineApprover.SETCURRENTKEY("Company Name",Approver,"Days to Due Date");
      lEXDocumentLineApprover.SETRANGE("Company Name", COMPANYNAME);
      lEXDocumentLineApprover.SETRANGE("Document Type", 0, 5); // No posted documents
      lEXDocumentLineApprover.SETRANGE(Approver,lApprover);
      lEXDocumentLineApprover.SETRANGE(Flowstatus,lEXDocumentLineApprover.Flowstatus::Current);
      IF lEXDocumentLineApprover.FINDSET THEN
        REPEAT
          IF NOT TempExDoc.GET(lEXDocumentLineApprover."Document ID") THEN BEGIN
            lEXDocument.GET(lEXDocumentLineApprover."Document ID");
            IF NOT lEXDocument."Change Jnl Processed PO" THEN
              IF lEXDocument.Status = lEXDocument.Status::Active THEN BEGIN
                TempExDoc.INIT;
                TempExDoc.TRANSFERFIELDS(lEXDocument);
                TempExDoc.INSERT;
              END;
          END;
        UNTIL lEXDocumentLineApprover.NEXT = 0;

      TempExDoc.SETCURRENTKEY("Company Name","Document Type","Document No.");
      IF TempExDoc.FINDFIRST THEN;
    END;

    PROCEDURE ApproveDoc@1100285006(VAR TempExDoc@1100285001 : TEMPORARY Record 12013608;lApprover@1100285000 : Code[50]);
    VAR
      ExDocLineApprover@1100285003 : Record 12013610;
      DocLine@1100285002 : Record 12013609;
      ExFlow@1100285004 : Codeunit 12013601;
    BEGIN
      lApprover := ExFlow.GetUserGroup("Company Name", lApprover);
      IF lApprover = '' THEN
        EXIT;

      ExDocLineApprover.RESET;
      ExDocLineApprover.SETCURRENTKEY("Document No.");
      ExDocLineApprover.SETRANGE("Company Name", "Company Name");
      ExDocLineApprover.SETRANGE("Document Type", "Document Type");
      ExDocLineApprover.SETRANGE("Document No.", "Document No.");
      ExDocLineApprover.SETRANGE(Approver,lApprover);
      IF ExDocLineApprover.FINDSET THEN
        REPEAT
          DocLine.GET(ExDocLineApprover."Document Line ID");
          DocLine.FinishOneLine(DocLine,ExDocLineApprover);
        UNTIL ExDocLineApprover.NEXT = 0;

      GetApproverDocs(TempExDoc,USERID);
    END;

    PROCEDURE RejectDoc@1100285009(VAR TempExDoc@1100285001 : TEMPORARY Record 12013608;lApprover@1100285000 : Code[50]);
    VAR
      ExDocLineApprover@1100285003 : Record 12013610;
      DocLine@1100285002 : Record 12013609;
      ExFlow@1100285004 : Codeunit 12013601;
    BEGIN
      lApprover := ExFlow.GetUserGroup("Company Name", lApprover);
      IF lApprover = '' THEN
        EXIT;

      ExDocLineApprover.RESET;
      ExDocLineApprover.SETCURRENTKEY("Document No.");
      ExDocLineApprover.SETRANGE("Company Name", "Company Name");
      ExDocLineApprover.SETRANGE("Document Type", "Document Type");
      ExDocLineApprover.SETRANGE("Document No.", "Document No.");
      ExDocLineApprover.SETRANGE(Approver,lApprover);
      IF ExDocLineApprover.FINDSET THEN
        REPEAT
          DocLine.GET(ExDocLineApprover."Document Line ID");
          DocLine.RejectOneLine(DocLine,ExDocLineApprover);
        UNTIL ExDocLineApprover.NEXT = 0;

      GetApproverDocs(TempExDoc,USERID);
    END;

    PROCEDURE GetFirstOrderNo@1100285010(OpenCard@1100285004 : Boolean) : Code[20];
    VAR
      PurchLine@1100285000 : Record 39;
      PurchCrMemoLine@1100285001 : Record 125;
      PurchInvLine@1100285002 : Record 123;
      PurchHeader@1100285003 : Record 38;
    BEGIN
      CASE "Document Type" OF
        "Document Type"::Invoice :
          BEGIN
            PurchLine.RESET;
            PurchLine.SETCURRENTKEY("Document No.");
            IF COMPANYNAME <> "Company Name" THEN
              PurchLine.CHANGECOMPANY("Company Name");
            PurchLine.SETRANGE("Document No.","Document No.");
            PurchLine.SETRANGE("Document Type",PurchLine."Document Type"::Invoice);
            PurchLine.SETFILTER("ExFlow Order No.",'<>%1','');
            IF PurchLine.FINDFIRST THEN BEGIN
              IF OpenCard THEN BEGIN
                PurchHeader.GET(PurchHeader."Document Type"::Order,PurchLine."ExFlow Order No.");
                PAGE.RUNMODAL(50,PurchHeader);
              END;
              EXIT(PurchLine."ExFlow Order No.");
            END;
          END;
        "Document Type"::"Credit Memo" :
          BEGIN
            PurchLine.RESET;
            PurchLine.SETCURRENTKEY("Document No.");
            IF COMPANYNAME <> "Company Name" THEN
              PurchLine.CHANGECOMPANY("Company Name");
            PurchLine.SETRANGE("Document No.","Document No.");
            PurchLine.SETRANGE("Document Type",PurchLine."Document Type"::"Credit Memo");
            PurchLine.SETFILTER("ExFlow Order No.",'<>%1','');
            IF PurchLine.FINDFIRST THEN BEGIN
              IF OpenCard THEN BEGIN
                PurchHeader.GET(PurchHeader."Document Type"::Order,PurchLine."ExFlow Order No.");
                PAGE.RUNMODAL(6640,PurchHeader);
              END;
              EXIT(PurchLine."ExFlow Order No.");
            END;
          END;
        "Document Type"::"Posted Invoice" :
          BEGIN
            PurchInvLine.RESET;
            IF COMPANYNAME <> "Company Name" THEN
              PurchInvLine.CHANGECOMPANY("Company Name");
            PurchInvLine.SETRANGE("Document No.", "Document No.");
            PurchInvLine.SETFILTER("ExFlow Order No.",'<>%1','');
            IF PurchInvLine.FINDFIRST THEN BEGIN
              IF OpenCard THEN BEGIN
                PurchHeader.GET(PurchHeader."Document Type"::Order,PurchInvLine."ExFlow Order No.");
                PAGE.RUNMODAL(50,PurchHeader);
              END;
              EXIT(PurchInvLine."ExFlow Order No.");
            END;
          END;
        "Document Type"::"Posted Credit Memo" :
          BEGIN
            PurchCrMemoLine.RESET;
            IF COMPANYNAME <> "Company Name" THEN
              PurchCrMemoLine.CHANGECOMPANY("Company Name");
            PurchCrMemoLine.SETRANGE("Document No.", "Document No.");
            PurchCrMemoLine.SETFILTER("ExFlow Order No.",'<>%1','');
            IF PurchCrMemoLine.FINDFIRST THEN BEGIN
              IF OpenCard THEN BEGIN
                PurchHeader.GET(PurchHeader."Document Type"::Order,PurchCrMemoLine."ExFlow Order No.");
                PAGE.RUNMODAL(6640,PurchHeader);
              END;
              EXIT(PurchCrMemoLine."ExFlow Order No.");
            END;
          END;
      END;

      EXIT('');
    END;

    PROCEDURE GetPostingDesc@1100285008() : Text[50];
    VAR
      PurchHeader@1100285000 : Record 38;
      PurchInvHeader@1100285002 : Record 122;
      PurchCrMemoHeader@1100285001 : Record 124;
    BEGIN
      CASE "Document Type" OF
        "Document Type"::Invoice :
          BEGIN
            PurchHeader.RESET;
            PurchHeader.SETCURRENTKEY("No.");
            IF COMPANYNAME <> "Company Name" THEN
              PurchHeader.CHANGECOMPANY("Company Name");
            PurchHeader.SETRANGE("No.","Document No.");
            PurchHeader.SETRANGE("Document Type",PurchHeader."Document Type"::Invoice);
            IF PurchHeader.FINDFIRST THEN
                EXIT(PurchHeader."Posting Description");
          END;
        "Document Type"::"Credit Memo" :
          BEGIN
            PurchHeader.RESET;
            PurchHeader.SETCURRENTKEY("No.");
            IF COMPANYNAME <> "Company Name" THEN
              PurchHeader.CHANGECOMPANY("Company Name");
            PurchHeader.SETRANGE("No.","Document No.");
            PurchHeader.SETRANGE("Document Type",PurchHeader."Document Type"::"Credit Memo");
            IF PurchHeader.FINDFIRST THEN
                EXIT(PurchHeader."Posting Description");
          END;
        "Document Type"::"Posted Invoice" :
          BEGIN
            PurchInvHeader.RESET;
            IF COMPANYNAME <> "Company Name" THEN
              PurchInvHeader.CHANGECOMPANY("Company Name");
            PurchInvHeader.SETRANGE("No.", "Document No.");
            IF PurchInvHeader.FINDFIRST THEN
              EXIT(PurchInvHeader."Posting Description");
          END;
        "Document Type"::"Posted Credit Memo" :
          BEGIN
            PurchCrMemoHeader.RESET;
            IF COMPANYNAME <> "Company Name" THEN
              PurchCrMemoHeader.CHANGECOMPANY("Company Name");
            PurchCrMemoHeader.SETRANGE("No.", "Document No.");
            IF PurchCrMemoHeader.FINDFIRST THEN
              EXIT(PurchCrMemoHeader."Posting Description");
          END;
      END;

      EXIT('');
    END;

    PROCEDURE GetCaption@1100285011() : Text[250];
    BEGIN
      EXIT(STRSUBSTNO('%1 %2',FORMAT("Document Type",0,0),"Document No."));
    END;

    BEGIN
    END.
  }
}

