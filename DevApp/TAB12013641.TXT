OBJECT Table 12013641 EX User Company
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF400006;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ExUser@1100285004 : Record 12013640;
             BEGIN
               IF NOT ExUser.GET("User ID") THEN
                 BEGIN
                   ExUser."User ID" := "User ID";
                   ExUser."User Name" := "User Name";
                   ExUser.INSERT;
                 END;

               CheckForInvalidChars("User ID");

               RecRef.GETTABLE(Rec);
               WebSetting.TableChange(RecRef);
             END;

    OnModify=BEGIN
               RecRef.GETTABLE(Rec);
               WebSetting.TableChange(RecRef);
             END;

    OnDelete=VAR
               ExUserMgt@1100285000 : Codeunit 12013596;
             BEGIN
               ExUserMgt.DeleteUser(Rec);

               RecRef.GETTABLE(Rec);
               WebSetting.TableChange(RecRef);
             END;

    OnRename=BEGIN
               ERROR(EXF02);
             END;

    CaptionML=ENU=ExFlow User Setup;
    LookupPageID=Page12013628;
    DrillDownPageID=Page12013628;
  }
  FIELDS
  {
    { 2   ;   ;User ID             ;Code50        ;TableRelation="EX User Company"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=User ID;
                                                   NotBlank=Yes;
                                                   Description=Tablerelation for lookups in reports }
    { 10  ;   ;E-mail ExFlow       ;Text128       ;OnValidate=VAR
                                                                UserGroup@1100285003 : Record 12013606;
                                                                UserGroupLine@1100285002 : Record 12013607;
                                                                TempLineNo@1100285000 : Integer;
                                                              BEGIN
                                                                IF CurrFieldNo = FIELDNO("E-mail ExFlow") THEN
                                                                  IF NOT UserGroup.GET("User ID") THEN BEGIN
                                                                    UserGroup.INIT;
                                                                    UserGroup.Code := "User ID";
                                                                    UserGroup."Coding Rule" := "Coding Rule ID";
                                                                    UserGroup.VALIDATE(Name, "User Name");
                                                                    UserGroup.INSERT;

                                                                    UserGroupLine.INIT;
                                                                    UserGroupLine.Code := UserGroup.Code;
                                                                    UserGroupLine."Line No." := 10000;
                                                                    UserGroupLine."User ID" := "User ID";
                                                                    UserGroupLine.INSERT;
                                                                  END
                                                                  ELSE BEGIN
                                                                    UserGroupLine.RESET;
                                                                    UserGroupLine.SETRANGE(Code, UserGroup.Code);
                                                                    UserGroupLine.SETRANGE("User ID","User ID");
                                                                    IF NOT UserGroupLine.FINDFIRST THEN BEGIN
                                                                      UserGroupLine.SETRANGE("User ID");
                                                                      IF UserGroupLine.FINDLAST THEN
                                                                        TempLineNo := UserGroupLine."Line No." + 10000
                                                                      ELSE
                                                                        TempLineNo := 10000;

                                                                      UserGroupLine.INIT;
                                                                      UserGroupLine.Code := UserGroup.Code;
                                                                      UserGroupLine."Line No." := TempLineNo;
                                                                      UserGroupLine."User ID" := "User ID";
                                                                      UserGroupLine.INSERT;
                                                                    END;
                                                                  END;
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=ENU=E-mail }
    { 11  ;   ;Mobil Phone No      ;Text80        ;CaptionML=ENU=Mobil Phone No. }
    { 12  ;   ;User Level          ;Option        ;CaptionML=ENU=Web User Rights Level;
                                                   OptionCaptionML=ENU=Super User,Power User,User;
                                                   OptionString=SuperUser,PowerUser,User }
    { 16  ;   ;Coding Rule ID      ;Integer       ;TableRelation="EX Coding Rule".ID;
                                                   OnValidate=VAR
                                                                CodingRule@1100285000 : Record 12013660;
                                                                UserGroup@1100285004 : Record 12013606;
                                                              BEGIN
                                                                IF (CurrFieldNo = FIELDNO("Coding Rule ID")) AND ("Coding Rule ID" <> 0) THEN BEGIN
                                                                  CodingRule.SETRANGE(ID, "Coding Rule ID");
                                                                  CodingRule.SETRANGE("Is Subset", TRUE);
                                                                  CodingRule.FINDFIRST;

                                                                  "Coding Rule Name" := CodingRule.Name;
                                                                END
                                                                ELSE
                                                                  IF CodingRule.GET("Coding Rule ID") THEN
                                                                    "Coding Rule Name" := CodingRule.Name
                                                                  ELSE
                                                                    "Coding Rule Name" := '';

                                                                IF CurrFieldNo = FIELDNO("Coding Rule ID") THEN
                                                                  IF UserGroup.GET("User ID") THEN
                                                                    BEGIN
                                                                      UserGroup."Coding Rule" := "Coding Rule ID";
                                                                      UserGroup.MODIFY;
                                                                    END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Coding Rule ID }
    { 17  ;   ;User Name           ;Text50        ;OnValidate=VAR
                                                                UserGroup@1100285003 : Record 12013606;
                                                                exUser@1100285005 : Record 12013640;
                                                              BEGIN
                                                                IF CurrFieldNo = FIELDNO("User Name") THEN BEGIN
                                                                  IF UserGroup.GET("User ID") THEN BEGIN
                                                                    UserGroup.Name := "User Name";
                                                                    UserGroup.MODIFY;
                                                                  END;

                                                                  IF exUser.GET("User ID") THEN BEGIN
                                                                    exUser."User Name" := "User Name";
                                                                    exUser.MODIFY;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=User Name }
    { 18  ;   ;Blocked             ;Boolean       ;CaptionML=ENU=Blocked }
    { 21  ;   ;Dimension 1         ;Text250       ;CaptionML=ENU=Dimension 1 Filter }
    { 22  ;   ;Superior            ;Boolean       ;CaptionML=ENU=Superior }
    { 23  ;   ;Approve Order       ;Option        ;CaptionML=ENU=Approve Order;
                                                   OptionCaptionML=ENU=" ,Never";
                                                   OptionString=[ ,Never];
                                                   Description=ExFlow Order }
    { 25  ;   ;Coding Rule Name    ;Text50        ;CaptionML=ENU=Coding Rule Name;
                                                   Editable=No }
    { 100 ;   ;Location Code (Requisition);Code10 ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=ENU=Location Code (Requisition) }
    { 500 ;   ;Replace with User   ;Code50        ;TableRelation="EX User Company"."User ID";
                                                   CaptionML=ENU=Replace with User }
    { 550 ;   ;Replaced with User  ;Code50        ;TableRelation="EX User Company"."User ID";
                                                   CaptionML=ENU=Replaced with User;
                                                   Editable=No }
    { 12013600;;All-Company Access to Ex Docs;Boolean;
                                                   CaptionML=ENU=All-Company Access to ExFlow Documents }
  }
  KEYS
  {
    {    ;User ID                                 ;Clustered=Yes }
    {    ;User Name                                }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;User ID,User Name                        }
  }
  CODE
  {
    VAR
      EXF02@1100285006 : TextConst 'ENU=Rename not allowed!';
      EXF04@1100285009 : TextConst 'ENU=Password cannot start with "~" sign';
      EXF05@1100285010 : TextConst 'ENU=Invalid character %1 in the user ID!';
      WebSetting@1100285005 : Record 12057071;
      RecRef@1100285003 : RecordRef;

    PROCEDURE CreateApprovalGroups@1100285000(OneUser@1100285000 : Code[50]);
    VAR
      UserComp@1100285002 : Record 12013641;
      UserGroup@1100285005 : Record 12013606;
      UserGroupLine@1100285004 : Record 12013607;
      TempLineNo@1100285001 : Integer;
    BEGIN
      UserComp.RESET;
      UserComp.SETFILTER("E-mail ExFlow",'<>%1','');

      IF OneUser <> '' THEN
        UserComp.SETRANGE("User ID", OneUser);

      IF UserComp.FINDSET THEN
        REPEAT
          IF NOT UserGroup.GET(UserComp."User ID") THEN BEGIN
            UserGroup.INIT;
            UserGroup.Code := UserComp."User ID";
            UserGroup.INSERT;

            UserGroupLine.INIT;
            UserGroupLine.Code := UserGroup.Code;
            UserGroupLine."Line No." := 10000;
            UserGroupLine."User ID" := UserComp."User ID";
            UserGroupLine.INSERT;
          END
          ELSE BEGIN
            UserGroupLine.RESET;
            UserGroupLine.SETRANGE(Code, UserGroup.Code);
            UserGroupLine.SETRANGE("User ID", UserComp."User ID");
            IF NOT UserGroupLine.FINDFIRST THEN BEGIN
              UserGroupLine.SETRANGE("User ID");
              IF UserGroupLine.FINDLAST THEN
                TempLineNo := UserGroupLine."Line No." + 10000
              ELSE
                TempLineNo := 10000;

              UserGroupLine.INIT;
              UserGroupLine.Code := UserGroup.Code;
              UserGroupLine."Line No." := TempLineNo;
              UserGroupLine."User ID" := UserComp."User ID";
              UserGroupLine.INSERT;
            END;
          END;

          UserGroup.VALIDATE(Name, UserComp."User Name");
          UserGroup."Coding Rule" := UserComp."Coding Rule ID";
          UserGroup.MODIFY(FALSE);
        UNTIL UserComp.NEXT = 0;
    END;

    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    VAR
      DimMgt@1100285000 : Codeunit 408;
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
    END;

    PROCEDURE LookupShortcutDimCode@28(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    VAR
      DimMgt@1100285000 : Codeunit 408;
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
    END;

    PROCEDURE CheckForInvalidChars@1100285001(_UserID@1100285000 : Code[50]);
    VAR
      i@1100285001 : Integer;
    BEGIN
      FOR i := 1 TO STRLEN(_UserID) DO
        IF _UserID[i] IN ['/','[',']',':',';','|','=',',','+','*','?','<','>',''''] THEN
          ERROR(STRSUBSTNO(EXF05,_UserID[i]));
    END;

    BEGIN
    END.
  }
}

