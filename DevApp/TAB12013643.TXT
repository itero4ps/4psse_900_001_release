OBJECT Table 12013643 EX Attached File
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF350000;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    OnInsert=BEGIN
               "Created By" := USERID;
               "Created Date" := CREATEDATETIME(TODAY,TIME);
             END;

    OnDelete=BEGIN
               //342528
               DeleteAttachedFile(Rec);
               //342528
             END;

    CaptionML=ENU=ExFlow Attached File;
  }
  FIELDS
  {
    { 1   ;   ;Company Name        ;Text30        ;TableRelation=Company;
                                                   CaptionML=ENU=Company Name }
    { 2   ;   ;Entry No.           ;Integer       ;CaptionML=ENU=Entry No. }
    { 10  ;   ;Attached File       ;Text200       ;CaptionML=ENU=Attached file }
    { 11  ;   ;Document Type       ;Option        ;OnValidate=BEGIN
                                                                IF "Document Type" <> xRec."Document Type" THEN
                                                                  "Connect to Document" := '';
                                                              END;

                                                   CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=Quote,Order,Invoice,Credit Memo,,,Posted Invoice,Posted Credit Memo,Requisition;
                                                   OptionString=Quote,Order,Invoice,Credit Memo,,,Posted Invoice,Posted Credit Memo,Requisition }
    { 12  ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No. }
    { 13  ;   ;Attached            ;Boolean       ;CaptionML=ENU=Attached }
    { 14  ;   ;Connect to Document ;Code20        ;OnValidate=VAR
                                                                PurchHeader@1100285002 : Record 38;
                                                                PostedPurchHead@1100285001 : Record 122;
                                                                PostedCN@1100285000 : Record 124;
                                                                DocHead@1100285003 : Record 12013608;
                                                              BEGIN
                                                                IF "Connect to Document" <> '' THEN
                                                                  CASE "Document Type" OF
                                                                    "Document Type" :: "Posted Invoice":
                                                                      IF NOT PostedPurchHead.GET("Connect to Document") THEN
                                                                        ERROR(EXF02);

                                                                    "Document Type" :: "Posted Credit Memo":
                                                                      IF NOT PostedCN.GET("Connect to Document") THEN
                                                                        ERROR(EXF02);

                                                                    "Document Type" :: Quote:
                                                                      IF NOT PurchHeader.GET("Document Type","Connect to Document") THEN
                                                                        ERROR(EXF02);

                                                                    "Document Type" :: Invoice:
                                                                      IF NOT PurchHeader.GET("Document Type","Connect to Document") THEN
                                                                        ERROR(EXF02);

                                                                    "Document Type" :: "Credit Memo":
                                                                      IF NOT PurchHeader.GET("Document Type","Connect to Document") THEN
                                                                        ERROR(EXF02);

                                                                    "Document Type" :: Requisition:
                                                                      IF NOT DocHead.RetrieveRecord(DocHead,COMPANYNAME, "Document Type","Connect to Document") THEN
                                                                        ERROR(EXF02);
                                                                    "Document Type" :: Order:
                                                                      IF NOT PurchHeader.GET("Document Type","Connect to Document") THEN
                                                                        ERROR(EXF02);
                                                                  END;
                                                              END;

                                                   OnLookup=VAR
                                                              PurchHeader@1000000000 : Record 38;
                                                              PostedPurchHead@1000000001 : Record 122;
                                                              PostedCN@1000000002 : Record 124;
                                                            BEGIN
                                                              CASE "Document Type" OF
                                                                "Document Type" :: "Posted Invoice":
                                                                  BEGIN
                                                                    PostedPurchHead.INIT;
                                                                    IF PAGE.RUNMODAL(146,PostedPurchHead) = ACTION::LookupOK THEN
                                                                      "Connect to Document" := PostedPurchHead."No.";
                                                                  END;

                                                                "Document Type" :: "Posted Credit Memo":
                                                                  BEGIN
                                                                    PostedCN.INIT;
                                                                    IF PAGE.RUNMODAL(147,PostedCN) = ACTION::LookupOK THEN
                                                                      "Connect to Document" := PostedCN."No.";
                                                                  END;

                                                                "Document Type" :: Quote:
                                                                  BEGIN
                                                                    PurchHeader.INIT;
                                                                    PurchHeader.SETRANGE("Document Type","Document Type"::Quote);
                                                                    IF PAGE.RUNMODAL(53,PurchHeader) = ACTION::LookupOK THEN
                                                                      "Connect to Document" := PurchHeader."No.";
                                                                  END;

                                                                "Document Type" :: Invoice:
                                                                  BEGIN
                                                                    PurchHeader.INIT;
                                                                    PurchHeader.SETRANGE("Document Type","Document Type"::Invoice);
                                                                    IF PAGE.RUNMODAL(53,PurchHeader) = ACTION::LookupOK THEN
                                                                      "Connect to Document" := PurchHeader."No.";
                                                                  END;

                                                                "Document Type" :: "Credit Memo":
                                                                  BEGIN
                                                                    PurchHeader.INIT;
                                                                    PurchHeader.SETRANGE("Document Type","Document Type"::"Credit Memo");
                                                                    IF PAGE.RUNMODAL(53,PurchHeader) = ACTION::LookupOK THEN
                                                                      "Connect to Document" := PurchHeader."No.";
                                                                  END;
                                                                "Document Type" :: Order:
                                                                  BEGIN
                                                                    PurchHeader.INIT;
                                                                    PurchHeader.SETRANGE("Document Type","Document Type"::Order);
                                                                    IF PAGE.RUNMODAL(53,PurchHeader) = ACTION::LookupOK THEN
                                                                      "Connect to Document" := PurchHeader."No.";
                                                                  END;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Connected to Document }
    { 15  ;   ;Path                ;Text250       ;CaptionML=ENU=Path }
    { 16  ;   ;Document ID         ;Integer       ;CaptionML=ENU=Document ID }
    { 650 ;   ;Created By          ;Code50        ;CaptionML=ENU=Created By;
                                                   Editable=No }
    { 651 ;   ;Created Date        ;DateTime      ;CaptionML=ENU=Created Date;
                                                   Editable=No }
    { 652 ;   ;Source              ;Option        ;CaptionML=ENU=Created in;
                                                   OptionCaptionML=ENU=NAV,Web;
                                                   OptionString=NAV,Web;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Company Name,Entry No.                  ;Clustered=Yes }
    {    ;Company Name,Document Type,Document No.,Attached }
    {    ;Attached File                            }
    {    ;Company Name,Document Type,Document No.,Entry No. }
    {    ;Entry No.                                }
    {    ;Document No.                             }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      AppSetup@1100285008 : Record 12013601;
      ExFlow@1100285000 : Codeunit 12013601;
      EXF01@1100285009 : TextConst 'ENU=Get invoice    @1@@@@@@@@@@@@@';
      EXF02@1100285010 : TextConst 'ENU=Document do not exist!';
      EXF03@1100285011 : TextConst 'ENU=Document %1 do not exist!';
      EXF04@1100285014 : TextConst 'ENU=Browse File';
      EXF05@1100285015 : TextConst 'ENU=Warning EX doc does not exist. File will not be visible on the web. Continue anyway?';
      ExFlowFileMgt@1100285013 : Codeunit 12013602;
      EXF06@1100285017 : TextConst 'ENU=Operation aborted.';
      EXF55@1100285016 : TextConst 'ENU=%1';

    PROCEDURE ImporteraBilagor@1000000000();
    VAR
      AttachedFile@1100285005 : Record 12013643;
      AttachmentFile@1100285000 : Record 2000000022;
      TempFileName@1100285004 : Text[250];
      LineNumber@1100285001 : Integer;
      Max@1100285002 : Integer;
      Counter@1100285003 : Integer;
      Window@1100285006 : Dialog;
    BEGIN
      AppSetup.GET(COMPANYNAME,0);

      AttachedFile.RESET;
      AttachedFile.SETCURRENTKEY("Entry No.");
      IF AttachedFile.FIND('+') THEN
        LineNumber := AttachedFile."Entry No." + 10000
      ELSE
        LineNumber := 10000;

      AttachmentFile.SETRANGE(Path,AppSetup."Path to Attached Files");
      Max := AttachmentFile.COUNT;
      IF GUIALLOWED THEN
        Window.OPEN(EXF01);
      Counter := 0;

      IF AttachmentFile.FIND('-') THEN BEGIN
        REPEAT
          TempFileName := AttachmentFile.Name;
          IF AttachmentFile."Is a file" AND (STRLEN(TempFileName) > 3) THEN
            IF (UPPERCASE(COPYSTR(TempFileName,STRLEN(TempFileName)-2,3)) = 'TIF') OR
               (UPPERCASE(COPYSTR(TempFileName,STRLEN(TempFileName)-2,3)) = 'PDF') THEN
              BEGIN
                AttachedFile.RESET;
                AttachedFile.SETCURRENTKEY("Attached File");
                AttachedFile.SETRANGE("Attached File", TempFileName);
                IF NOT AttachedFile.FIND('-') THEN
                  BEGIN
                    INIT;
                    "Company Name" := COMPANYNAME;
                    "Attached File" := AttachmentFile.Name;
                    "Document Type" := "Document Type"::Invoice;
                    "Entry No." := LineNumber;
                    LineNumber := LineNumber + 10000;
                    INSERT(TRUE);

                    Counter := Counter + 1;
                  END;

                IF GUIALLOWED THEN
                  Window.UPDATE(1,ROUND(Counter / Max * 10000,1));
              END;
        UNTIL AttachmentFile.NEXT = 0;
      END;

      IF GUIALLOWED THEN
        Window.CLOSE;
    END;

    PROCEDURE Connect@1000000001();
    VAR
      AttachedFile@1100285001 : Record 12013643;
      PurchHeader@1000000002 : Record 38;
      PostedPurchHead@1000000001 : Record 122;
      PostedCN@1000000000 : Record 124;
      DocHead@1100285000 : Record 12013608;
      DocumentID@1100285002 : Integer;
    BEGIN
      AppSetup.GET(COMPANYNAME,0);

      AttachedFile.RESET;
      AttachedFile.SETRANGE("Company Name",COMPANYNAME);
      AttachedFile.SETFILTER(AttachedFile."Connect to Document",'<>%1','');
      AttachedFile.SETRANGE(Attached,FALSE);
      IF AttachedFile.FIND('-') THEN
        REPEAT
          IF AttachedFile.Path = '' THEN
            AttachedFile.Path := AppSetup."Path to Attached Files";
          IF NOT ExFlowFileMgt.FileExist(AttachedFile.Path,AttachedFile."Attached File") THEN
            ERROR(EXF03,AttachedFile."Attached File");
        UNTIL AttachedFile.NEXT = 0;

      IF AttachedFile.FIND('-') THEN
        REPEAT
          DocumentID := 0;

          IF NOT AttachedFile.Attached THEN
            CASE AttachedFile."Document Type" OF
              AttachedFile."Document Type" :: "Posted Invoice":
                 IF PostedPurchHead.GET(AttachedFile."Connect to Document") THEN
                   BEGIN
                     IF DocHead.RetrieveRecord(DocHead,COMPANYNAME,AttachedFile."Document Type" :: "Posted Invoice",
                                    AttachedFile."Connect to Document") THEN
                       DocumentID := DocHead.ID;

                     Move(AttachedFile,PostedPurchHead."Buy-from Vendor No.",DocumentID);
                   END;

              AttachedFile."Document Type" :: "Posted Credit Memo":
                 IF PostedCN.GET(AttachedFile."Connect to Document") THEN
                   BEGIN
                     IF DocHead.RetrieveRecord(DocHead,COMPANYNAME,AttachedFile."Document Type" :: "Posted Credit Memo",
                                    AttachedFile."Connect to Document") THEN
                       DocumentID := DocHead.ID;

                     Move(AttachedFile,PostedCN."Buy-from Vendor No.",DocumentID);
                   END;

              AttachedFile."Document Type" :: Quote:
                 IF PurchHeader.GET(AttachedFile."Document Type",AttachedFile."Connect to Document") THEN
                   BEGIN
                     IF DocHead.RetrieveRecord(DocHead,COMPANYNAME,AttachedFile."Document Type" :: Quote,
                                    AttachedFile."Connect to Document") THEN
                       DocumentID := DocHead.ID;

                     Move(AttachedFile,PurchHeader."Buy-from Vendor No.",DocumentID);
                   END;

              AttachedFile."Document Type" :: Invoice:
                 IF PurchHeader.GET(AttachedFile."Document Type",AttachedFile."Connect to Document") THEN
                   BEGIN
                     IF DocHead.RetrieveRecord(DocHead,COMPANYNAME,AttachedFile."Document Type" :: Invoice,
                                    AttachedFile."Connect to Document") THEN
                       DocumentID := DocHead.ID;

                     Move(AttachedFile,PurchHeader."Buy-from Vendor No.",DocumentID);
                   END;

              AttachedFile."Document Type" :: "Credit Memo":
                 IF PurchHeader.GET(AttachedFile."Document Type",AttachedFile."Connect to Document") THEN
                   BEGIN
                     IF DocHead.RetrieveRecord(DocHead,COMPANYNAME,AttachedFile."Document Type" :: "Credit Memo",
                                    AttachedFile."Connect to Document") THEN
                        DocumentID := DocHead.ID;

                     Move(AttachedFile,PurchHeader."Buy-from Vendor No.",DocumentID);
                   END;
              AttachedFile."Document Type" :: Order:
                 IF PurchHeader.GET(AttachedFile."Document Type",AttachedFile."Connect to Document") THEN
                   BEGIN
                     IF DocHead.RetrieveRecord(DocHead,COMPANYNAME,AttachedFile."Document Type" :: Order,
                                    AttachedFile."Connect to Document") THEN
                        DocumentID := DocHead.ID;

                     Move(AttachedFile,PurchHeader."Buy-from Vendor No.",DocumentID);
                   END;
            END;
        UNTIL AttachedFile.NEXT = 0;
    END;

    PROCEDURE Move@1000000002(Attached@1000000000 : Record 12013643;"Buy-from Vendor No."@1000000001 : Code[20];DocumentID@1100285002 : Integer);
    VAR
      Vend@1100285000 : Record 23;
      AttachedFile@1100285001 : Record 12013643;
      AttachedFile2@1100285003 : Record 12013643;
      OldDocID@1100285004 : Boolean;
      IntTxt@1100285005 : Text[1024];
    BEGIN
      Vend.GET("Buy-from Vendor No.");
      AttachedFile.GET(COMPANYNAME,Attached."Entry No.");
      AttachedFile."Document No." := AttachedFile."Connect to Document";

      IF DocumentID = 0 THEN BEGIN
        IF NOT CONFIRM(EXF05,FALSE) THEN
          ERROR(EXF06);
        AttachedFile."Document ID" := DATE2DWY(WORKDATE, 3) * 100 + DATE2DWY(WORKDATE, 2)
      END ELSE BEGIN
        AttachedFile."Document ID" := DocumentID;

        //348808
        AttachedFile2.RESET;
        AttachedFile2.SETCURRENTKEY("Document No.");
        AttachedFile2.SETRANGE("Company Name",COMPANYNAME);
        AttachedFile2.SETRANGE("Document Type",AttachedFile."Document Type");
        AttachedFile2.SETRANGE("Document No.",AttachedFile."Document No.");
        AttachedFile2.SETRANGE(Attached,TRUE);
        IF AttachedFile2.FINDFIRST THEN BEGIN
          IntTxt := COPYSTR(AttachedFile2."Attached File",1,STRPOS(AttachedFile2."Attached File", '\')-1);
          IF EVALUATE(AttachedFile."Document ID",IntTxt) THEN
            OldDocID := TRUE;
        END;
        //348808
      END;

      ExFlow.MoveAttachedFile(AttachedFile);

      //348859
      AttachedFile."Attached File" := DELCHR(AttachedFile."Attached File",'=','@%&<>/?');
      //348859

      AttachedFile."Attached File" := FORMAT(AttachedFile."Document ID") + '\' +
                                      FORMAT(AttachedFile."Document ID") + '-' +
                                      AttachedFile."Attached File";
      //348808
      IF OldDocID THEN
        AttachedFile."Document ID" := DocumentID;
      //348808

      AttachedFile.Attached := TRUE;
      AttachedFile.MODIFY;
    END;

    PROCEDURE GetAttatchedFile@1100285000();
    VAR
      AttachedFile@1100285006 : Record 12013643;
      NextEntry@1100285000 : Integer;
      FullPathNameOfImportFile@1100285004 : Text[250];
      Pos@1100285003 : Integer;
      LastPos@1100285002 : Integer;
      TempPath@1100285001 : Text[250];
      ErrorText@1100285005 : Text[1024];
    BEGIN
      AttachedFile.RESET;
      AttachedFile.SETCURRENTKEY("Entry No.");
      IF AttachedFile.FIND('+') THEN
        NextEntry := AttachedFile."Entry No." + 10000
      ELSE
        NextEntry := 10000;

      AttachedFile.INIT;
      AttachedFile."Company Name" := COMPANYNAME;
      AttachedFile."Entry No." := NextEntry;
      AttachedFile."Document Type" := AttachedFile."Document Type"::Invoice;
      AttachedFile.INSERT(TRUE);
      COMMIT;

      ExFlowFileMgt.FileNameFromDialog(FullPathNameOfImportFile, EXF04, 4, '', 1);

      IF FullPathNameOfImportFile <> '' THEN
        BEGIN
          TempPath := FullPathNameOfImportFile;
          Pos := STRPOS(FullPathNameOfImportFile,'\');

          IF Pos = 0 THEN
            AttachedFile."Attached File" := FullPathNameOfImportFile
          ELSE
            BEGIN
              REPEAT
                LastPos := Pos;
                FullPathNameOfImportFile := COPYSTR(FullPathNameOfImportFile, Pos + 1);
                Pos := STRPOS(FullPathNameOfImportFile,'\');
              UNTIL Pos = 0;

              AttachedFile."Attached File" := FullPathNameOfImportFile;
              Pos := STRPOS(TempPath, AttachedFile."Attached File");
              AttachedFile.Path := COPYSTR(TempPath, 1, Pos - 1);
              AttachedFile.MODIFY;
            END;

          IF AttachedFile."Attached File" = '' THEN
            BEGIN
              AttachedFile.GET(COMPANYNAME,AttachedFile."Entry No.");
              AttachedFile.DELETE;
            END
          ELSE
            BEGIN
              AppSetup.GET(COMPANYNAME,0);
              ErrorText := ExFlowFileMgt.Copy(AttachedFile."Attached File",AttachedFile."Attached File",
                                              AttachedFile.Path,AppSetup."Path to Attached Files",AppSetup."Path to Attached Files");
              IF STRLEN(ErrorText) <> 0 THEN
                ERROR(EXF55,ErrorText);

              AttachedFile.Path := '';
              AttachedFile.MODIFY;
            END;
        END
      ELSE
        BEGIN
          AttachedFile.GET(COMPANYNAME,AttachedFile."Entry No.");
          AttachedFile.DELETE;
        END;
    END;

    PROCEDURE DeleteAttachedFile@1100285004(ExAttachedFile@1100285003 : Record 12013643);
    VAR
      ExFileMgt@1100285000 : Codeunit 12013602;
      TempPath@1100285002 : Text[1024];
      TempFileName@1100285001 : Text[1024];
    BEGIN
      //342528
      WITH ExAttachedFile DO BEGIN
        IF "Attached File" <> '' THEN BEGIN
          AppSetup.GET("Company Name", 0);
          TempPath := ExFileMgt.Path("Attached File");
          TempFileName := COPYSTR("Attached File", STRLEN(TempPath) + 1);
          TempPath := AppSetup."Path to connected Att. Files" + TempPath;
          IF ExFileMgt.FileExist(TempPath,TempFileName) THEN
            ExFileMgt.Delete(TempPath,TempFileName);
        END;
      END;
    END;

    BEGIN
    END.
  }
}

