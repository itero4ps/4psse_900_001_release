OBJECT Table 12013650 EX Purch. Imp. Header Archive
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF400007;
  }
  PROPERTIES
  {
    DataPerCompany=Yes;
    OnDelete=VAR
               lrecExImpPurchImpLine@1100285000 : Record 12013651;
             BEGIN
               lrecExImpPurchImpLine.SETRANGE("Import Document No.","Import Document No.");
               lrecExImpPurchImpLine.DELETEALL(FALSE);
             END;

    CaptionML=ENU=Exflow Purch. Import Header Archive;
    LookupPageID=Page12013649;
  }
  FIELDS
  {
    { 20  ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 24  ;   ;Due Date            ;Date          ;CaptionML=ENU=Due Date }
    { 32  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=ENU=Currency Code }
    { 68  ;   ;Vendor Invoice No.  ;Code100       ;CaptionML=ENU=Vendor Invoice No. }
    { 170000; ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order;
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order }
    { 170001; ;Buy-from Vendor No. ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=ENU=Buy-from Vendor No. }
    { 170002; ;No.                 ;Code20        ;CaptionML=ENU=No. }
    { 170003; ;Buy-from Vendor Name;Text50        ;CaptionML=ENU=Buy-from Vendor Name }
    { 190000; ;Credit              ;Text30        ;CaptionML=ENU=Credit;
                                                   Description=565 }
    { 190001; ;DueDays (Text)      ;Text100       ;CaptionML=ENU=DueDays (Text);
                                                   Description=565 }
    { 190002; ;ScanDate            ;Text30        ;CaptionML=ENU=Scanned at Date;
                                                   Description=565 }
    { 190003; ;ScanTime            ;Text30        ;CaptionML=ENU=Scanned at Time;
                                                   Description=565 }
    { 190004; ;Message             ;Text250       ;CaptionML=ENU=Message;
                                                   Description=565 }
    { 190005; ;DueDays             ;Integer       ;CaptionML=ENU=Due Days;
                                                   Description=565 }
    { 190006; ;Vendor ID2          ;Code100       ;CaptionML=ENU=Vendor ID2;
                                                   Description=565 }
    { 190007; ;Vendor ID3          ;Code100       ;CaptionML=ENU=Vendor ID3;
                                                   Description=565 }
    { 190008; ;External Primary Key;Code50        ;CaptionML=ENU=External Primary Key;
                                                   Description=704 }
    { 190010; ;Transfer ExFlow Entry Type;Option  ;CaptionML=ENU=Transfer Entry Type;
                                                   OptionCaptionML=ENU=" ,Manual Entry,Image Import,OCR Import";
                                                   OptionString=[ ,Manual Entry,Image Import,OCR Import];
                                                   Description=346 }
    { 190015; ;Transfer Message    ;Text250       ;CaptionML=ENU=Transfer Message;
                                                   Description=346 }
    { 190020; ;XML File Name       ;Text250       ;CaptionML=ENU=XML File Name }
    { 190021; ;XML File            ;BLOB          ;CaptionML=ENU=XML File }
    { 190022; ;XML File Extension  ;Text30        ;CaptionML=ENU=XML File Extension }
    { 190025; ;Batch No.           ;Code100       ;CaptionML=ENU=Batch No.;
                                                   Description=470 }
    { 190030; ;Company-ID          ;Text100       ;CaptionML=ENU=Company-ID }
    { 190035; ;Imported by User    ;Code50        ;CaptionML=ENU=Imported by User }
    { 190040; ;Imported at DateTime;DateTime      ;CaptionML=ENU=Imported date/time }
    { 190045; ;Scan User ID        ;Code100       ;CaptionML=ENU=Scanned by }
    { 190050; ;Amount Inc. VAT (Text);Text100     ;CaptionML=ENU=Document Amount Including VAT (Text);
                                                   Description=565 }
    { 190055; ;Document Amount VAT (Text);Text100 ;CaptionML=ENU=Document Amount VAT (Text);
                                                   Description=565 }
    { 190060; ;Posting Date (Text) ;Text100       ;CaptionML=ENU=Posting Date (Text) }
    { 190065; ;Due Date (Text)     ;Text100       ;CaptionML=ENU=Due Date (Text) }
    { 190066; ;Import VendorNo     ;Code50        ;CaptionML=ENU=Vendor No. (Import);
                                                   Description=762 }
    { 190067; ;Vendor ID4          ;Code100       ;CaptionML=ENU=Vendor ID4;
                                                   Description=762 }
    { 190068; ;Vendor ID5          ;Code100       ;CaptionML=ENU=Vendor ID5;
                                                   Description=762 }
    { 190070; ;Deleted             ;Boolean       ;CaptionML=ENU=Deleted;
                                                   Description=782 }
    { 190071; ;Deleted by User     ;Code50        ;CaptionML=ENU=Deleted by User;
                                                   Description=782 }
    { 190072; ;Deleted at DateTime ;DateTime      ;CaptionML=ENU=Deleted at DateTime;
                                                   Description=782 }
    { 190085; ;Format Converted    ;Boolean       ;CaptionML=ENU=Format Converted }
    { 190086; ;Misc Amount 1 (Text);Text100       ;CaptionML=ENU=Misc Amount 1 (Text) }
    { 190087; ;Misc Amount 2 (Text);Text100       ;CaptionML=ENU=Misc Amount 2 (Text) }
    { 190088; ;Lines deleted       ;Boolean       ;CaptionML=ENU=Lines deleted }
    { 190090; ;Posting Description ;Text50        ;CaptionML=ENU=Posting Description }
    { 12013590;;Image File Name    ;Text250       ;CaptionML=ENU=Image File Name }
    { 12013591;;Exflow Document Type;Option       ;CaptionML=ENU=Exflow Document Type;
                                                   OptionCaptionML=ENU=" ,Invoice,Credit Memo";
                                                   OptionString=[ ,Invoice,Credit Memo] }
    { 12013593;;Document Amount Including VAT;Decimal;
                                                   CaptionML=ENU=Document Amount Including VAT;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 12013594;;Document Amount VAT;Decimal       ;CaptionML=ENU=Document Amount VAT;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 12013595;;Import Document No.;Integer       ;CaptionML=ENU=Import Document No. }
    { 12013599;;First Approver     ;Code50        ;CaptionML=ENU=First Approver }
    { 12013617;;Image Buffer ID    ;Integer       ;CaptionML=ENU=Image Buffer ID }
    { 12013620;;Reference          ;Code100       ;TableRelation="EX Reference";
                                                   CaptionML=ENU=Reference }
    { 12013621;;Vendor ID          ;Code100       ;CaptionML=ENU=Vendor ID }
    { 12013623;;Order No.          ;Code100       ;ValidateTableRelation=Yes;
                                                   TestTableRelation=Yes;
                                                   CaptionML=ENU=Order No. }
    { 12013624;;Job No.            ;Code100       ;ValidateTableRelation=Yes;
                                                   TestTableRelation=Yes;
                                                   CaptionML=ENU=Job No. }
    { 12013645;;PO Matched Document;Boolean       ;CaptionML=ENU=Matched against Purchase Order }
    { 12013650;;Vendor Document No. 2;Code50      ;CaptionML=ENU=Vendor Document No. 2 }
    { 12013670;;Dimension 1        ;Code50        ;CaptionML=ENU=Dimension 1 }
    { 12013671;;Dimension 2        ;Code50        ;CaptionML=ENU=Dimension 2 }
    { 12013729;;PaytoAccount       ;Text50        ;CaptionML=ENU=Payment Validation Account No }
    { 12057075;;Misc Amount 1      ;Decimal       ;CaptionML=ENU=Misc Amount 1 }
    { 12057076;;Misc Amount 2      ;Decimal       ;CaptionML=ENU=Misc Amount 2 }
  }
  KEYS
  {
    {    ;Import Document No.                     ;MaintainSQLIndex=Yes;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      EXF100@1100285000 : TextConst 'ENU=Export Attachment';

    PROCEDURE ExportBLOB@2(ExportToFile@1000 : Text[260];ExportToServer@1100285000 : Boolean) : Boolean;
    VAR
      ExFlowBlob@1100285002 : Record 12013591;
      ExflowFileMgmt@1100285003 : Codeunit 12013602;
      FileName@1002 : Text[260];
      FileFilter@1003 : Text[260];
      ServerFilePath@1100285001 : Text[1024];
    BEGIN
      CALCFIELDS("XML File");
      IF "XML File".HASVALUE THEN BEGIN
        IF ExportToServer THEN BEGIN
          FileName := ExflowFileMgmt.ClientTempFileName(ExflowFileMgmt.GetFileName(ExportToFile),'');

          CLEAR(ExFlowBlob);
          ExFlowBlob.BLOB := "XML File";
          ExflowFileMgmt.ExportBLOB(ExFlowBlob,FileName);
          ServerFilePath := ExflowFileMgmt.Path(ExportToFile);

          UPLOAD('',ExflowFileMgmt.Path(FileName),'',ExflowFileMgmt.GetFileName(FileName),ServerFilePath);
        END
        ELSE BEGIN
          IF ExportToFile = '' THEN BEGIN
            FileFilter := UPPERCASE("XML File Extension") + ' ';
            FileFilter := FileFilter + '(*.' + "XML File Extension" + ')|*.' + "XML File Extension";
            ExflowFileMgmt.FileNameFromDialog(FileName,EXF100,4,FileFilter,1);
          END
          ELSE
            FileName := ExportToFile;

          IF FileName <> '' THEN BEGIN
            CLEAR(ExFlowBlob);
            ExFlowBlob.BLOB := "XML File";
            ExflowFileMgmt.ExportBLOB(ExFlowBlob,FileName);

            EXIT(TRUE);
          END
          ELSE
            EXIT(FALSE);
        END;
      END
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE ExportAndShowBLOB@1100285001(ExportToFile@1000 : Text[260]) : Boolean;
    VAR
      ExFlowBlob@1100285002 : Record 12013591;
      ExflowFileMgmt@1100285001 : Codeunit 12013602;
      FileName@1002 : Text[260];
      FileFilter@1003 : Text[260];
    BEGIN
      CALCFIELDS("XML File");
      IF "XML File".HASVALUE THEN BEGIN
        IF ExportToFile = '' THEN BEGIN
          FileFilter := UPPERCASE("XML File Extension") + ' ';
          FileFilter := FileFilter + '(*.' + "XML File Extension" + ')|*.' + "XML File Extension";
          ExflowFileMgmt.FileNameFromDialog(FileName,EXF100,4,FileFilter,1);
        END ELSE
          FileName := ExportToFile;

        IF FileName <> '' THEN BEGIN
          CLEAR(ExFlowBlob);
          ExFlowBlob.BLOB := "XML File";
          ExflowFileMgmt.ShowBLOB(ExFlowBlob,FileName);
          EXIT(TRUE);
        END
        ELSE
          EXIT(FALSE);
      END
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE ShowBLOB@6();
    VAR
      FileName@1005 : Text[260];
    BEGIN
      FileName := ConstFilename;
      IF UPPERCASE(COPYSTR(FileName, (STRLEN(FileName)-2))) <> UPPERCASE("XML File Extension") THEN
        FileName := FileName + '.' + "XML File Extension";
      ExportAndShowBLOB(FileName);
    END;

    PROCEDURE ConstFilename@9() FileName@1000 : Text[260];
    VAR
      ExflowFileMgmt@1100285002 : Codeunit 12013602;
      TempFileName@1100285001 : Text[1024];
    BEGIN
      TempFileName := ExflowFileMgmt.GetFileName("XML File Name");
      IF TempFileName <> '' THEN
        FileName := ExflowFileMgmt.ClientTempFileName(TempFileName,'')
      ELSE
        FileName := ExflowFileMgmt.ClientTempFileName(CREATEGUID,"XML File Extension");
    END;

    BEGIN
    END.
  }
}

