OBJECT Table 122 Purch. Inv. Header
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,NAVSE9.FI9.DK9.NO9,4PS9.00,4PSSE;
  }
  PROPERTIES
  {
    Permissions=TableData 25=rm,
                TableData 38=rm,
                TableData 39=rm,
                TableData 120=rm,
                TableData 121=rm,
                TableData 122=rm;
    DataCaptionFields=No.,Buy-from Vendor Name;
    OnInsert=BEGIN
               //**4PS Generated Code. Do Not Change.sn05
               //DPA_OnInsert;  //*26917.o  Do not determine default department for 'Posted' table
               //**4PS Generated Code.en05
             END;

    OnDelete=VAR
               PostedDeferralHeader@1000 : Record 1704;
               DeferralUtilities@1001 : Codeunit 1720;
             BEGIN
               TESTFIELD("Invoice Approved", TRUE); //**4PS.n

               LOCKTABLE;
               PostPurchLinesDelete.DeletePurchInvLines(Rec);

               PurchCommentLine.SETRANGE("Document Type",PurchCommentLine."Document Type"::"Posted Invoice");
               PurchCommentLine.SETRANGE("No.","No.");
               PurchCommentLine.DELETEALL;

               ApprovalsMgmt.DeletePostedApprovalEntries(RECORDID);
               PostedDeferralHeader.DeleteForDoc(DeferralUtilities.GetPurchDeferralDocType,'','',
                 PurchCommentLine."Document Type"::"Posted Invoice","No.");

               //**4PS.sn
               ConsentLineRec.SETRANGE("Document Type",ConsentLineRec."Document Type"::Invoice);
               ConsentLineRec.SETRANGE("Document No.","No.");
               ConsentLineRec.DELETEALL;
               //**4PS.en
             END;

    CaptionML=ENU=Purch. Inv. Header;
    LookupPageID=Page146;
    DrillDownPageID=Page146;
  }
  FIELDS
  {
    { 2   ;   ;Buy-from Vendor No. ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=ENU=Buy-from Vendor No.;
                                                   NotBlank=Yes }
    { 3   ;   ;No.                 ;Code20        ;CaptionML=ENU=No. }
    { 4   ;   ;Pay-to Vendor No.   ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=ENU=Pay-to Vendor No.;
                                                   NotBlank=Yes }
    { 5   ;   ;Pay-to Name         ;Text50        ;CaptionML=ENU=Pay-to Name }
    { 6   ;   ;Pay-to Name 2       ;Text50        ;CaptionML=ENU=Pay-to Name 2 }
    { 7   ;   ;Pay-to Address      ;Text50        ;CaptionML=ENU=Pay-to Address }
    { 8   ;   ;Pay-to Address 2    ;Text50        ;CaptionML=ENU=Pay-to Address 2 }
    { 9   ;   ;Pay-to City         ;Text30        ;TableRelation="Post Code".City;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Pay-to City }
    { 10  ;   ;Pay-to Contact      ;Text50        ;CaptionML=ENU=Pay-to Contact }
    { 11  ;   ;Your Reference      ;Text35        ;CaptionML=ENU=Your Reference }
    { 12  ;   ;Ship-to Code        ;Code10        ;TableRelation="Ship-to Address".Code WHERE (Customer No.=FIELD(Sell-to Customer No.),
                                                                                               Shipping Address=CONST(Yes));
                                                   CaptionML=ENU=Ship-to Code }
    { 13  ;   ;Ship-to Name        ;Text50        ;CaptionML=ENU=Ship-to Name }
    { 14  ;   ;Ship-to Name 2      ;Text50        ;CaptionML=ENU=Ship-to Name 2 }
    { 15  ;   ;Ship-to Address     ;Text50        ;CaptionML=ENU=Ship-to Address }
    { 16  ;   ;Ship-to Address 2   ;Text50        ;CaptionML=ENU=Ship-to Address 2 }
    { 17  ;   ;Ship-to City        ;Text30        ;TableRelation="Post Code".City;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Ship-to City }
    { 18  ;   ;Ship-to Contact     ;Text50        ;CaptionML=ENU=Ship-to Contact }
    { 19  ;   ;Order Date          ;Date          ;CaptionML=ENU=Order Date }
    { 20  ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 21  ;   ;Expected Receipt Date;Date         ;CaptionML=ENU=Expected Receipt Date }
    { 22  ;   ;Posting Description ;Text50        ;CaptionML=ENU=Posting Description }
    { 23  ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   OnValidate=VAR
                                                                GLSetup@1210190004 : Record 98;
                                                                VendLedgEntry@1210190000 : Record 25;
                                                                PaymentTerms@1210190001 : Record 3;
                                                                Vend@1210190003 : Record 23;
                                                                VendEntryEdit@1210190002 : Codeunit 113;
                                                                VendLedgEntryFound@1210190005 : Boolean;
                                                              BEGIN
                                                                //**4PS.sn
                                                                VendLedgEntry.SETCURRENTKEY("Document No.");
                                                                VendLedgEntry.SETRANGE("Vendor No.", "Buy-from Vendor No.");
                                                                VendLedgEntry.SETRANGE("Document Type", VendLedgEntry."Document Type"::Invoice);
                                                                VendLedgEntry.SETRANGE("Document No.", "No.");
                                                                VendLedgEntryFound := VendLedgEntry.FINDFIRST;
                                                                IF VendLedgEntryFound THEN
                                                                  IF NOT VendLedgEntry.Open THEN BEGIN
                                                                    "Payment Terms Code" := xRec."Payment Terms Code"; //call 28400
                                                                    EXIT;
                                                                  END;

                                                                IF ("Payment Terms Code" <> '') AND ("Document Date" <> 0D) THEN BEGIN
                                                                  PaymentTerms.GET("Payment Terms Code");
                                                                  "Due Date" := CALCDATE(PaymentTerms."Due Date Calculation","Document Date");
                                                                  "Pmt. Discount Date" := CALCDATE(PaymentTerms."Discount Date Calculation","Document Date");
                                                                  VALIDATE("Payment Discount %",PaymentTerms."Discount %")
                                                                END ELSE BEGIN
                                                                  VALIDATE("Due Date","Document Date");
                                                                  VALIDATE("Pmt. Discount Date",0D);
                                                                  VALIDATE("Payment Discount %",0);
                                                                END;

                                                                //Update VendLegEntry
                                                                IF VendLedgEntryFound THEN BEGIN
                                                                  VendLedgEntry."Due Date" := "Due Date";
                                                                  VendLedgEntry."Pmt. Discount Date" := "Pmt. Discount Date";
                                                                  IF PaymentTerms.Code <> '' THEN BEGIN
                                                                    VendLedgEntry."Pmt. Discount Date 2" := CALCDATE(PaymentTerms."Discount Date Calculation 2","Document Date");
                                                                    VendLedgEntry."Pmt. Discount Date 3" := CALCDATE(PaymentTerms."Discount Date Calculation 3","Document Date");
                                                                  END ELSE BEGIN
                                                                    VendLedgEntry."Pmt. Discount Date 2" := 0D;
                                                                    VendLedgEntry."Pmt. Discount Date 3" := 0D;
                                                                  END;

                                                                  Vend.GET(VendLedgEntry."Vendor No.");
                                                                  IF NOT Vend."Block Payment Tolerance" THEN BEGIN
                                                                    GLSetup.GET;
                                                                    IF (VendLedgEntry."Pmt. Discount Date" <> 0D) THEN
                                                                      VendLedgEntry."Pmt. Disc. Tolerance Date" :=
                                                                        CALCDATE(GLSetup."Payment Discount Grace Period",VendLedgEntry."Pmt. Discount Date")
                                                                    ELSE
                                                                      VendLedgEntry."Pmt. Disc. Tolerance Date" := VendLedgEntry."Pmt. Discount Date";

                                                                    IF (VendLedgEntry."Pmt. Discount Date 2" <> 0D) AND
                                                                      (VendLedgEntry."Pmt. Discount Date 2" <> VendLedgEntry."Document Date")
                                                                    THEN
                                                                      VendLedgEntry."Pmt. Disc. Tolerance Date 2" :=
                                                                        CALCDATE(GLSetup."Payment Discount Grace Period",VendLedgEntry."Pmt. Discount Date 2")
                                                                    ELSE
                                                                      VendLedgEntry."Pmt. Disc. Tolerance Date 2" := VendLedgEntry."Pmt. Discount Date 2";

                                                                    IF (VendLedgEntry."Pmt. Discount Date 3" <> 0D) AND
                                                                      (VendLedgEntry."Pmt. Discount Date 3" <> VendLedgEntry."Document Date")
                                                                    THEN
                                                                      VendLedgEntry."Pmt. Disc. Tolerance Date 3" :=
                                                                        CALCDATE(GLSetup."Payment Discount Grace Period",VendLedgEntry."Pmt. Discount Date 3")
                                                                    ELSE
                                                                      VendLedgEntry."Pmt. Disc. Tolerance Date 3" := VendLedgEntry."Pmt. Discount Date 3";
                                                                  END;
                                                                  VendEntryEdit.RUN(VendLedgEntry);
                                                                END;
                                                                //**4PS.en
                                                              END;

                                                   CaptionML=ENU=Payment Terms Code }
    { 24  ;   ;Due Date            ;Date          ;CaptionML=ENU=Due Date }
    { 25  ;   ;Payment Discount %  ;Decimal       ;OnValidate=BEGIN
                                                                //**4PS.sn
                                                                GLSetup.GET;
                                                                IF "Payment Discount %" < GLSetup."VAT Tolerance %" THEN
                                                                  "VAT Base Discount %" := "Payment Discount %"
                                                                ELSE
                                                                  "VAT Base Discount %" := GLSetup."VAT Tolerance %";
                                                                VALIDATE("VAT Base Discount %");
                                                                //**4PS.en
                                                              END;

                                                   CaptionML=ENU=Payment Discount %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 26  ;   ;Pmt. Discount Date  ;Date          ;CaptionML=ENU=Pmt. Discount Date }
    { 27  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=ENU=Shipment Method Code }
    { 28  ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=ENU=Location Code }
    { 29  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Shortcut Dimension 1 Code;
                                                   CaptionClass='1,2,1' }
    { 30  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Shortcut Dimension 2 Code;
                                                   CaptionClass='1,2,2' }
    { 31  ;   ;Vendor Posting Group;Code10        ;TableRelation="Vendor Posting Group";
                                                   CaptionML=ENU=Vendor Posting Group;
                                                   Editable=No }
    { 32  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=ENU=Currency Code;
                                                   Editable=No }
    { 33  ;   ;Currency Factor     ;Decimal       ;CaptionML=ENU=Currency Factor;
                                                   DecimalPlaces=0:15;
                                                   MinValue=0 }
    { 35  ;   ;Prices Including VAT;Boolean       ;CaptionML=ENU=Prices Including VAT }
    { 37  ;   ;Invoice Disc. Code  ;Code20        ;CaptionML=ENU=Invoice Disc. Code }
    { 41  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=ENU=Language Code }
    { 43  ;   ;Purchaser Code      ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=ENU=Purchaser Code }
    { 44  ;   ;Order No.           ;Code20        ;TableRelation="Purchase Header".No. WHERE (Document Type=CONST(Order));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=ENU=Order No.;
                                                   Description=4PS: table relation added }
    { 46  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Purch. Comment Line" WHERE (Document Type=CONST(Posted Invoice),
                                                                                                  No.=FIELD(No.),
                                                                                                  Document Line No.=CONST(0)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 47  ;   ;No. Printed         ;Integer       ;CaptionML=ENU=No. Printed;
                                                   Editable=No }
    { 51  ;   ;On Hold             ;Code3         ;TableRelation="On Hold Code".Code;
                                                   OnValidate=VAR
                                                                OnHoldRec@1100485000 : Record 11012031;
                                                                ApprovalEntry@1100528200 : Record 454;
                                                              BEGIN
                                                                //**4PS.n
                                                                //**4PS.sn DC
                                                                IF (CurrFieldNo = FIELDNO("On Hold")) AND ApprovalEntry.READPERMISSION THEN BEGIN
                                                                  ApprovalEntry.SETRANGE("Table ID", 122);
                                                                  ApprovalEntry.SETRANGE("Document Type", ApprovalEntry."Document Type"::Invoice);
                                                                  ApprovalEntry.SETRANGE("Document No.", "No.");
                                                                  ApprovalEntry.SETFILTER(Status, '%1|%2', ApprovalEntry.Status::Created, ApprovalEntry.Status::Open);
                                                                  IF NOT ApprovalEntry.ISEMPTY THEN
                                                                    ERROR(Text11012007);
                                                                END;
                                                                //**4PS.sn DC

                                                                IF OnHoldRec.GET("On Hold") THEN
                                                                  IF OnHoldRec."Default Approvement Initials" <> '' THEN
                                                                    "Approvement Initials" := OnHoldRec."Default Approvement Initials";

                                                                UpdateOnHoldOfPurchaseInvoice("No.", "On Hold", FALSE); //C-026615
                                                              END;

                                                   CaptionML=ENU=On Hold }
    { 52  ;   ;Applies-to Doc. Type;Option        ;CaptionML=ENU=Applies-to Doc. Type;
                                                   OptionCaptionML=ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 53  ;   ;Applies-to Doc. No. ;Code20        ;OnLookup=BEGIN
                                                              VendLedgEntry.SETCURRENTKEY("Document No.");
                                                              VendLedgEntry.SETRANGE("Document Type","Applies-to Doc. Type");
                                                              VendLedgEntry.SETRANGE("Document No.","Applies-to Doc. No.");
                                                              PAGE.RUN(0,VendLedgEntry);
                                                            END;

                                                   CaptionML=ENU=Applies-to Doc. No. }
    { 55  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account";
                                                   CaptionML=ENU=Bal. Account No. }
    { 60  ;   ;Amount              ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purch. Inv. Line".Amount WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=ENU=Amount;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 61  ;   ;Amount Including VAT;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purch. Inv. Line"."Amount Including VAT" WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=ENU=Amount Including VAT;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 66  ;   ;Vendor Order No.    ;Code35        ;CaptionML=ENU=Vendor Order No. }
    { 68  ;   ;Vendor Invoice No.  ;Code35        ;CaptionML=ENU=Vendor Invoice No. }
    { 70  ;   ;VAT Registration No.;Text20        ;CaptionML=ENU=VAT Registration No. }
    { 72  ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Sell-to Customer No. }
    { 73  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=ENU=Reason Code }
    { 74  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=ENU=Gen. Bus. Posting Group }
    { 76  ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=ENU=Transaction Type }
    { 77  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=ENU=Transport Method }
    { 78  ;   ;VAT Country/Region Code;Code10     ;TableRelation=Country/Region;
                                                   CaptionML=ENU=VAT Country/Region Code }
    { 79  ;   ;Buy-from Vendor Name;Text50        ;CaptionML=ENU=Buy-from Vendor Name }
    { 80  ;   ;Buy-from Vendor Name 2;Text50      ;CaptionML=ENU=Buy-from Vendor Name 2 }
    { 81  ;   ;Buy-from Address    ;Text50        ;CaptionML=ENU=Buy-from Address }
    { 82  ;   ;Buy-from Address 2  ;Text50        ;CaptionML=ENU=Buy-from Address 2 }
    { 83  ;   ;Buy-from City       ;Text30        ;TableRelation="Post Code".City;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Buy-from City }
    { 84  ;   ;Buy-from Contact    ;Text50        ;CaptionML=ENU=Buy-from Contact }
    { 85  ;   ;Pay-to Post Code    ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Pay-to Post Code }
    { 86  ;   ;Pay-to County       ;Text30        ;CaptionML=ENU=Pay-to County }
    { 87  ;   ;Pay-to Country/Region Code;Code10  ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Pay-to Country/Region Code }
    { 88  ;   ;Buy-from Post Code  ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Buy-from Post Code }
    { 89  ;   ;Buy-from County     ;Text30        ;CaptionML=ENU=Buy-from County }
    { 90  ;   ;Buy-from Country/Region Code;Code10;TableRelation=Country/Region;
                                                   CaptionML=ENU=Buy-from Country/Region Code }
    { 91  ;   ;Ship-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Ship-to Post Code }
    { 92  ;   ;Ship-to County      ;Text30        ;CaptionML=ENU=Ship-to County }
    { 93  ;   ;Ship-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Ship-to Country/Region Code }
    { 94  ;   ;Bal. Account Type   ;Option        ;CaptionML=ENU=Bal. Account Type;
                                                   OptionCaptionML=ENU=G/L Account,Bank Account;
                                                   OptionString=G/L Account,Bank Account }
    { 95  ;   ;Order Address Code  ;Code10        ;TableRelation="Order Address".Code WHERE (Vendor No.=FIELD(Buy-from Vendor No.));
                                                   CaptionML=ENU=Order Address Code }
    { 97  ;   ;Entry Point         ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=ENU=Entry Point }
    { 98  ;   ;Correction          ;Boolean       ;CaptionML=ENU=Correction }
    { 99  ;   ;Document Date       ;Date          ;CaptionML=ENU=Document Date }
    { 101 ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=ENU=Area }
    { 102 ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=ENU=Transaction Specification }
    { 104 ;   ;Payment Method Code ;Code10        ;TableRelation="Payment Method";
                                                   CaptionML=ENU=Payment Method Code }
    { 107 ;   ;Pre-Assigned No. Series;Code10     ;TableRelation="No. Series";
                                                   CaptionML=ENU=Pre-Assigned No. Series }
    { 108 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 110 ;   ;Order No. Series    ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Order No. Series }
    { 111 ;   ;Pre-Assigned No.    ;Code20        ;CaptionML=ENU=Pre-Assigned No. }
    { 112 ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=ENU=User ID }
    { 113 ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=ENU=Source Code }
    { 114 ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=ENU=Tax Area Code }
    { 115 ;   ;Tax Liable          ;Boolean       ;CaptionML=ENU=Tax Liable }
    { 116 ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=ENU=VAT Bus. Posting Group }
    { 119 ;   ;VAT Base Discount % ;Decimal       ;CaptionML=ENU=VAT Base Discount %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 135 ;   ;Prepayment No. Series;Code10       ;TableRelation="No. Series";
                                                   CaptionML=ENU=Prepayment No. Series }
    { 140 ;   ;Prepayment Invoice  ;Boolean       ;CaptionML=ENU=Prepayment Invoice }
    { 141 ;   ;Prepayment Order No.;Code20        ;CaptionML=ENU=Prepayment Order No. }
    { 151 ;   ;Quote No.           ;Code20        ;CaptionML=ENU=Quote No.;
                                                   Editable=No }
    { 170 ;   ;Creditor No.        ;Code20        ;CaptionML=ENU=Creditor No.;
                                                   Numeric=Yes }
    { 171 ;   ;Payment Reference   ;Code50        ;CaptionML=ENU=Payment Reference;
                                                   Numeric=Yes }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=No }
    { 1300;   ;Canceled By         ;Code20        ;TableRelation="Purch. Cr. Memo Hdr.";
                                                   CaptionML=ENU=Canceled By;
                                                   Editable=No }
    { 1301;   ;Canceled            ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Purch. Cr. Memo Hdr." WHERE (Canceled=CONST(Yes),
                                                                                                   Applies-to Doc. Type=CONST(Invoice),
                                                                                                   Applies-to Doc. No.=FIELD(No.)));
                                                   CaptionML=ENU=Canceled;
                                                   Editable=No }
    { 1302;   ;Paid                ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=-Exist("Vendor Ledger Entry" WHERE (Entry No.=FIELD(Vendor Ledger Entry No.),
                                                                                                   Open=FILTER(Yes)));
                                                   CaptionML=ENU=Paid;
                                                   Editable=No }
    { 1303;   ;Remaining Amount    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE (Vendor Ledger Entry No.=FIELD(Vendor Ledger Entry No.)));
                                                   CaptionML=ENU=Remaining Amount;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 1304;   ;Vendor Ledger Entry No.;Integer    ;TableRelation="Vendor Ledger Entry"."Entry No.";
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Vendor Ledger Entry No.;
                                                   Editable=No }
    { 1305;   ;Invoice Discount Amount;Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purch. Inv. Line"."Inv. Discount Amount" WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=ENU=Invoice Discount Amount;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5050;   ;Campaign No.        ;Code20        ;TableRelation=Campaign;
                                                   CaptionML=ENU=Campaign No. }
    { 5052;   ;Buy-from Contact No.;Code20        ;TableRelation=Contact;
                                                   CaptionML=ENU=Buy-from Contact No. }
    { 5053;   ;Pay-to Contact No.  ;Code20        ;TableRelation=Contact;
                                                   CaptionML=ENU=Pay-to Contact No. }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   CaptionML=ENU=Responsibility Center }
    { 11012001;;Subcontracting Invoice;Boolean    ;CaptionML=ENU=Subcontracting Invoice }
    { 11012005;;Job No.            ;Code20        ;TableRelation=Job;
                                                   OnValidate=BEGIN
                                                                //**4PS.sn
                                                                IF "Job No." <> '' THEN BEGIN
                                                                  ProjSetupRec.GET;
                                                                  ProjRec.GET("Job No.");
                                                                   IF (ProjSetupRec."Provisions at Closure") THEN
                                                                     ProjRec.CheckProjectStatus(-1)
                                                                   ELSE
                                                                     ProjRec.CheckProjectStatus(1);

                                                                   IF (ProjRec."Project Status" < ProjRec."Project Status"::Preparation) THEN
                                                                     ERROR(Text11012001,ProjRec.TABLECAPTION,"Job No.",ProjRec.FIELDCAPTION("Project Status"),ProjRec."Project Status");

                                                                   TESTFIELD("Service Order No.", '');
                                                                END;
                                                                //**4PS.en
                                                              END;

                                                   CaptionML=ENU=Project No. }
    { 11012010;;Payment Agreement  ;Code20        ;TableRelation="Payment Agreement".Code WHERE (Sub Contractor=FIELD(Buy-from Vendor No.));
                                                   CaptionML=ENU=Payment Agreement }
    { 11012020;;Actual Effective Date;Date        ;CaptionML=ENU=Actual Effective Date }
    { 11012030;;Actual End Date    ;Date          ;CaptionML=ENU=Actual End Date }
    { 11012040;;Number of Hours    ;Decimal       ;CaptionML=ENU=Number of Hours;
                                                   MinValue=0 }
    { 11012050;;Avg. Wage Rate     ;Decimal       ;CaptionML=ENU=Avg. Wage Rate;
                                                   MinValue=0;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="Currency Code" }
    { 11012060;;Labor Amount       ;Decimal       ;CaptionML=ENU=Labor Amount;
                                                   MinValue=0;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 11012070;;Contribution Percentage Labor;Decimal;
                                                   CaptionML=ENU=Contribution Percentage Labor;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 11012071;;Contribution Percentage Total;Decimal;
                                                   CaptionML=ENU=Contribution Percentage Invoice Total;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 11012075;;Pay To Tax Authority;Boolean      ;CaptionML=ENU=Pay To Tax Authority }
    { 11012080;;Wage Charge (to B Account);Decimal;CaptionML=ENU=Wage Charge (to B Account);
                                                   MinValue=0;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 11012090;;Wage Charge (to Tax Authority);Decimal;
                                                   CaptionML=ENU=Wage Charge (to Tax Authority);
                                                   MinValue=0;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 11012100;;Nat.Ins.Contr.     ;Decimal       ;CaptionML=ENU=Nat.Ins.Contr.;
                                                   MinValue=0;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 11012110;;Text               ;Text250       ;CaptionML=ENU=Text }
    { 11012120;;Direct Posting     ;Boolean       ;InitValue=No;
                                                   CaptionML=ENU=Direct Posting }
    { 11012130;;Amount incl. VAT   ;Decimal       ;CaptionML=ENU=Amount incl. VAT;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 11012140;;VAT Prod. Posting Group;Code10    ;TableRelation="VAT Product Posting Group".Code;
                                                   CaptionML=ENU=VAT Prod. Posting Group }
    { 11012170;;Transaction Mode B Payments;Code20;CaptionML=ENU=Transaction Mode Code B Payments }
    { 11012180;;Bank Account Code B Payments;Code10;
                                                   CaptionML=ENU=Bank Account Code B Payments }
    { 11012190;;Received on Project;Code20        ;TableRelation=Job;
                                                   CaptionML=ENU=Received on Project }
    { 11012200;;Journal Template   ;Code10        ;TableRelation="Gen. Journal Template".Name WHERE (Type=CONST(Purch.Invoice Approval));
                                                   OnValidate=VAR
                                                                lvPurchInvLineRec@1100525000 : Record 11012032;
                                                                TempPurchInvLineRec@1100525001 : Record 11012032;
                                                              BEGIN
                                                                IF "Journal Template" ='' THEN
                                                                  ERROR(Text11012003);

                                                                IF "Journal Template" <> xRec."Journal Template" THEN BEGIN
                                                                  lvPurchInvLineRec.SETRANGE("Document No.","No.");
                                                                  IF lvPurchInvLineRec.FINDSET(TRUE,TRUE) THEN BEGIN
                                                                    IF CONFIRM(Text11012004,TRUE,"Journal Template") THEN BEGIN
                                                                      REPEAT
                                                                        TempPurchInvLineRec := lvPurchInvLineRec;
                                                                        TempPurchInvLineRec.DELETE;
                                                                        TempPurchInvLineRec."Journal Template Name" := "Journal Template";
                                                                        TempPurchInvLineRec.INSERT;
                                                                      UNTIL lvPurchInvLineRec.NEXT = 0;
                                                                    END ELSE
                                                                      ERROR(Text11012005);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Journal Template }
    { 11012210;;Purchase Registration Account;Code20;
                                                   TableRelation="G/L Account".No.;
                                                   CaptionML=ENU=Purchase Registration Account }
    { 11012215;;Preregister WIP    ;Boolean       ;InitValue=No;
                                                   CaptionML=ENU=Preregister WIP }
    { 11012220;;Invoice Approved   ;Boolean       ;CaptionML=ENU=Invoice Approved;
                                                   Editable=No }
    { 11012230;;Balance Due        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purch. Inv. Line".Amount WHERE (Document No.=FIELD(No.),
                                                                                                    No.=FIELD(Purchase Registration Account)));
                                                   CaptionML=ENU=Balance Due;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 11012240;;Balance Due (LCY)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purch. Inv. Line"."Amount (LCY)" WHERE (Document No.=FIELD(No.),
                                                                                                            No.=FIELD(Purchase Registration Account)));
                                                   CaptionML=ENU=Balance Due (LCY);
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 11012250;;FSC Type Code      ;Code10        ;TableRelation="FSC Type";
                                                   CaptionML=ENU=FSC Type Code }
    { 11012260;;Approvement Initials;Code10       ;TableRelation="Invoice Approval Initials".Code;
                                                   CaptionML=ENU=Approvement Initials }
    { 11012270;;Remain On Hold     ;Boolean       ;CaptionML=ENU=Remain On Hold }
    { 11012272;;Order Type (SiB)   ;Option        ;CaptionML=ENU=Order Type (SiB);
                                                   OptionCaptionML=ENU=" ,Dispatch Note,Invoice";
                                                   OptionString=[ ,DispatchNote,Invoice];
                                                   Description=DP00065 }
    { 11012290;;Bank Account No.   ;Text34        ;CaptionML=ENU=Bank Account No.;
                                                   Editable=No }
    { 11012312;;Amounts only       ;Boolean       ;OnValidate=BEGIN
                                                                //**4PS.sn
                                                                IF "Amounts only" <> xRec."Amounts only" THEN BEGIN
                                                                  InvApprLine.RESET;
                                                                  InvApprLine.SETRANGE("Journal Template Name", "Journal Template");
                                                                  InvApprLine.SETRANGE("Document Type", InvApprLine."Document Type"::"Purchase Invoice");
                                                                  InvApprLine.SETRANGE("Document No.","No.");
                                                                  IF InvApprLine.FIND('-') THEN
                                                                    ERROR(
                                                                      Text11012002,
                                                                      FIELDCAPTION("Amounts only"));
                                                                END;
                                                                //**4PS.en
                                                              END;

                                                   CaptionML=ENU=Amounts only }
    { 11012323;;Reference (Vendor) ;Text30        ;CaptionML=ENU=Reference (Vendor) }
    { 11012330;;Price Agreement    ;Boolean       ;CaptionML=ENU=Price Agreement }
    { 11012370;;Related Purch. Order No.;Code20   ;TableRelation="Purchase Header".No. WHERE (Document Type=CONST(Order),
                                                                                              Buy-from Vendor No.=FIELD(Buy-from Vendor No.));
                                                   OnValidate=VAR
                                                                lvPurchHeader@1210190007 : Record 38;
                                                                Vend@1210190000 : Record 23;
                                                              BEGIN
                                                                //**4PS
                                                                IF lvPurchHeader.GET(lvPurchHeader."Document Type"::Order, "Related Purch. Order No.") THEN BEGIN
                                                                  VALIDATE("Job No.", lvPurchHeader."Job No.");
                                                                  VALIDATE("Received on Project", lvPurchHeader."Received on Project");
                                                                  VALIDATE("Payment Terms Code",lvPurchHeader."Payment Terms Code");
                                                                END ELSE BEGIN
                                                                  Vend.GET("Pay-to Vendor No.");
                                                                  VALIDATE("Payment Terms Code", Vend."Payment Terms Code");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              //**4PS
                                                              LookupRelatedOrder;
                                                            END;

                                                   CaptionML=ENU=Related Purch.Order No. }
    { 11012430;;Interest Date      ;Date          ;CaptionML=ENU=Interest Date }
    { 11012480;;Subcontract No.    ;Code20        ;TableRelation="Subcontracter Contract".No. WHERE (Vendor No.=FIELD(Buy-from Vendor No.),
                                                                                                     Project No.=FIELD(Job No.));
                                                   CaptionML=ENU=Subcontract No.;
                                                   Description=Retention }
    { 11012580;;Amount VAT         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purch. Inv. Line"."Line VAT Amount" WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=ENU=Amount VAT;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 11012581;;Amount VAT Balance Due;Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purch. Inv. Line"."Line VAT Amount" WHERE (Document No.=FIELD(No.),
                                                                                                               No.=FIELD(Purchase Registration Account)));
                                                   CaptionML=ENU=Amount VAT Balance Due;
                                                   Editable=No }
    { 11012590;;Ext. Document ID   ;Text35        ;CaptionML=ENU=Ext. Document ID }
    { 11012630;;Company VAT Registration No.;Text20;
                                                   CaptionML=ENU=Company VAT Registration No. }
    { 11012640;;Country/Region of Origin;Code10   ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Country/Region of Origin }
    { 11012650;;Country/Region of Destination;Code10;
                                                   TableRelation=Country/Region;
                                                   CaptionML=ENU=Country/Region of Destination }
    { 11012660;;Extended VAT Determination;Boolean;CaptionML=ENU=Extended VAT Determination }
    { 11012670;;Consent Lines      ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Consent Line" WHERE (Document Type=CONST(Posted Invoice),
                                                                                           Document No.=FIELD(No.),
                                                                                           Consent=CONST(No),
                                                                                           Temporary Line=CONST(No)));
                                                   CaptionML=ENU=Consent Lines;
                                                   Editable=No }
    { 11012800;;Service Order No.  ;Code20        ;TableRelation="Service Order".No.;
                                                   OnValidate=BEGIN
                                                                //**4PS.n
                                                                IF "Service Order No." <> '' THEN BEGIN
                                                                  ServOrderRec.GET("Service Order No.");
                                                                  TESTFIELD("Job No.", '');
                                                                  ServOrderRec.CheckStatus(1);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Service Order No. }
    { 11012840;;Original Order No. ;Code20        ;CaptionML=ENU=Original Order No.;
                                                   Editable=No }
    { 11012850;;Shipping Agent Code;Code10        ;TableRelation="Shipping Agent";
                                                   CaptionML=ENU=Shipping Agent Code }
    { 11012860;;Package Tracking No.;Text30       ;CaptionML=ENU=Package Tracking No. }
    { 11020275;;Consented Date-Time;DateTime      ;CaptionML=ENU=Consented Date-Time;
                                                   Editable=No }
    { 11020276;;Status (Approval)  ;Option        ;CaptionML=ENU=Status (Approval);
                                                   OptionCaptionML=ENU=Open,Released;
                                                   OptionString=Open,Released;
                                                   Editable=No }
    { 11020477;;DMS Status         ;Option        ;CaptionML=ENU=DMS Status;
                                                   OptionCaptionML=ENU=" ,,,Awaiting Line Entry,,,Start Workflow,,,In Workflow,,,Approved,,,Rejected";
                                                   OptionString=[ ,,,Awaiting Line Entry,,,Start Workflow,,,In Workflow,,,Approved,,,Rejected];
                                                   Editable=No }
    { 11020478;;DMS Status Text    ;Text80        ;CaptionML=ENU=DMS Status Text;
                                                   Editable=No }
    { 11020479;;OLD Approval Flow Code;Code10     ;TableRelation="Approval Flow";
                                                   CaptionML=ENU=Approval Flow Code }
    { 11020480;;DC Ext. Document ID;Text35        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Purch. Inv. Header"."Ext. Document ID" WHERE (Buy-from Vendor No.=FIELD(Buy-from Vendor No.),
                                                                                                                     No.=FIELD(No.),
                                                                                                                     Order Type (SiB)=CONST(" ")));
                                                   CaptionML=ENU=Ext. Document ID;
                                                   Description=Because SiB Spoiled the use of Ext. Document ID }
    { 11020490;;Amount (LCY)       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purch. Inv. Line"."Amount (LCY)" WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=ENU=Amount (LCY);
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 11126180;;Message Type       ;Option        ;InitValue=Reference No.;
                                                   CaptionML=ENU=Message Type;
                                                   OptionCaptionML=ENU=Reference No.,Invoice Information,Message,Long Message,Tax Message;
                                                   OptionString=Reference No.,Invoice Information,Message,Long Message,Tax Message;
                                                   Description=NAVFI }
    { 11126181;No;Invoice Message  ;Text250       ;CaptionML=ENU=Invoice Message;
                                                   Description=NAVFI }
    { 11126182;No;Invoice Message 2;Text250       ;CaptionML=ENU=Invoice Message 2;
                                                   Description=NAVFI }
    { 11127975;;Export to Symbrio  ;Boolean       ;Description=I045#P6 Symbrio Invoice Handling }
    { 11127976;;Export to Symbrio Type;Option     ;CaptionML=ENU=Export to Symbrio Type;
                                                   OptionCaptionML=ENU=" ,Prelimary,Definitive";
                                                   OptionString=[ ,Prelimary,Definitive];
                                                   Description=Symbrio Invoice Handling }
    { 11127977;;Payment Reference NO;Code35       ;CaptionML=ENU=Payment Reference NO;
                                                   Description=IME253 }
    { 11128010;;EU 3-Party Trade   ;Boolean       ;CaptionML=ENU=EU 3-Party Trade;
                                                   Description=4PSSE }
    { 11128011;;Periodic Template Code;Code10     ;TableRelation="Periodic Template".Code;
                                                   CaptionML=ENU=Periodic Template Code }
    { 11128012;;Periodic Starting Date;Date       ;CaptionML=ENU=Periodic Starting Date }
    { 11128500;;KID                ;Code30        ;OnValidate=VAR
                                                                Tools@1000000000 : Codeunit 11128515;
                                                                ErrorMess@1000000001 : Text[250];
                                                              BEGIN
                                                                IF KID <> '' THEN BEGIN
                                                                  ErrorMess := Tools.CheckKID(KID);
                                                                  IF ErrorMess <> '' THEN
                                                                    ERROR(ErrorMess);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=KID;
                                                   Description=NAVNO }
    { 11128620;;Giro Acc. No.      ;Code7         ;CaptionML=ENU=Giro Acc. No.;
                                                   Description=NAVDK }
    { 12013603;;Approve            ;Boolean       ;CaptionML=ENU=Approve;
                                                   Description=ExFlow;
                                                   Editable=No }
    { 12013609;;Requisition No.    ;Code20        ;CaptionML=ENU=Requisition No.;
                                                   Description=ExFlow }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Order No.                                }
    {    ;Pre-Assigned No.                         }
    {    ;Vendor Invoice No.,Posting Date          }
    {    ;Buy-from Vendor No.                      }
    {    ;Prepayment Order No.,Prepayment Invoice  }
    {    ;Pay-to Vendor No.                        }
    {    ;Related Purch. Order No.                 }
    {    ;Export to Symbrio                        }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Buy-from Vendor No.,Pay-to Vendor No.,Posting Date,Posting Description }
    { 2   ;Brick               ;No.,Buy-from Vendor Name,Amount,Due Date,Amount Including VAT }
  }
  CODE
  {
    VAR
      PurchInvHeader@1000 : Record 122;
      PurchCommentLine@1001 : Record 43;
      VendLedgEntry@1002 : Record 25;
      ProjRec@1210190001 : Record 11072003;
      ProjSetupRec@1210190002 : Record 315;
      GLSetup@1210190004 : Record 98;
      InvApprLine@1210190006 : Record 11012032;
      ConsentLineRec@1100485000 : Record 11012226;
      PostPurchLinesDelete@1003 : Codeunit 364;
      DimMgt@1004 : Codeunit 408;
      ApprovalsMgmt@1008 : Codeunit 1535;
      UserSetupMgt@1005 : Codeunit 5700;
      Text11012001@1210190000 : TextConst 'ENU=%1 %2 has %3 %4';
      Text11012002@1210190005 : TextConst 'ENU=Invoice Approval Lines present, changing %1 not allowed';
      ServOrderRec@1100485001 : Record 11012823;
      Text11012003@1100525000 : TextConst 'ENU=Invoice Approval Jounal Template cannot be empty';
      Text11012004@1100525001 : TextConst 'ENU=Notice: Invoice Approval Jounal Template is Changed, changed invoice will be moved to %1. Continue?';
      Text11012005@1100525002 : TextConst 'ENU=Change is not Continued';
      DPA_Management@1100000999 : Codeunit 11012783;
      Text11012006@1100525003 : TextConst 'ENU=Invoice has not been processed for Consent. Apply?';
      Text11012007@1100528200 : TextConst 'ENU=On Hold Code may not be blank. It is part of the approval flow.';

    PROCEDURE PrintRecords@1(ShowRequestForm@1000 : Boolean);
    VAR
      ReportSelection@1001 : Record 77;
      DocPrint@1100485001 : Codeunit 229;
      TempReportSelection@1100485000 : TEMPORARY Record 77;
    BEGIN
      WITH PurchInvHeader DO BEGIN
        COPY(Rec);
      //**4PS
      //ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"P.Invoice");
      //ReportSelection.SETFILTER("Report ID",'<>0');
        DocPrint.GetReportSelection(TempReportSelection.Usage::"P.Invoice",TempReportSelection,ShowRequestForm);
        TempReportSelection.FIND('-');
        REPEAT
          REPORT.RUNMODAL(TempReportSelection."Report ID",ShowRequestForm,FALSE,PurchInvHeader);
        UNTIL TempReportSelection.NEXT = 0;
      END;
    END;

    PROCEDURE Navigate@2();
    VAR
      NavigateForm@1000 : Page 344;
    BEGIN
      //NavigateForm.SetDoc("Posting Date","No."); //**4PS.o
      NavigateForm.SetDoc(0D,"No."); //**4PS.n
      NavigateForm.RUN;
    END;

    PROCEDURE ShowDimensions@3();
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"No."));
    END;

    PROCEDURE SetSecurityFilterOnRespCenter@4();
    BEGIN
      IF UserSetupMgt.GetPurchasesFilter <> '' THEN BEGIN
        FILTERGROUP(2);
        SETRANGE("Responsibility Center",UserSetupMgt.GetPurchasesFilter);
        FILTERGROUP(0);
      END;
    END;

    PROCEDURE DPA_SetDefaultDpmtFromNoSeries@1100000995(xRecRef@1100525002 : RecordRef);
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      xRecRef.SETTABLE(xRec);
      DPA_Management.SetDepartmentCodeNoSeries(
        TABLENAME,
        "Shortcut Dimension 1 Code",
        "No. Series",
        xRec."No. Series" );
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(122) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 122');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Purch. Inv. Header", "Shortcut Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Shortcut Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Shortcut Dimension 1 Code");
    END;

    PROCEDURE DetermineOnHoldCode@1100525000() OnHoldCode : Code[3];
    VAR
      RelatedPOHeader@1100525000 : Record 38;
    BEGIN
      //**4PS.sn
      IF RelatedPOHeader.GET(RelatedPOHeader."Document Type"::Order, "Related Purch. Order No.") THEN
        EXIT(RelatedPOHeader.DetermineOnHoldCodeForInvoice("On Hold"));

      EXIT("On Hold");
      //**4PS.en
    END;

    PROCEDURE GetReceiptsRelatedOrderAutomat@1100525010(PurchInvHeader@1100525001 : Record 122) : Boolean;
    VAR
      InvoiceApprovalLine@1100525000 : Record 11012032;
      lvText001@1100525002 : TextConst 'ENU=Get all Receipt Lines of %1 ''%2''?';
      PurchOrder@1100525003 : Record 38;
      GetReceipt@1100525004 : Codeunit 11012023;
    BEGIN
      //**4PS
      IF (PurchInvHeader."Related Purch. Order No." = '') THEN
        EXIT(FALSE);

      InvoiceApprovalLine.SETRANGE("Document Type", InvoiceApprovalLine."Document Type"::"Purchase Invoice");
      InvoiceApprovalLine.SETRANGE("Document No.", PurchInvHeader."No.");
      IF NOT InvoiceApprovalLine.ISEMPTY THEN  //* Only if no lines present yet.
        EXIT(FALSE);

      PurchOrder.GET(PurchOrder."Document Type"::Order, PurchInvHeader."Related Purch. Order No.");
      IF PurchOrder."Purchase Order Type" = PurchOrder."Purchase Order Type"::"Blanket Order" THEN
        EXIT(FALSE);

      IF NOT CONFIRM(
        lvText001, FALSE, PurchInvHeader.FIELDCAPTION("Related Purch. Order No."), PurchInvHeader."Related Purch. Order No.")
      THEN
        EXIT(FALSE);

      InvoiceApprovalLine."Document No." := PurchInvHeader."No.";
      GetReceipt.SetPurchHeader(0, PurchInvHeader."No.");
      GetReceipt.SetGetReceiptsAutomatic;
      GetReceipt.RUN(InvoiceApprovalLine);
      EXIT(TRUE);
    END;

    PROCEDURE LookupRelatedOrder@1100525012();
    VAR
      lvPurchHeader@1100525000 : Record 38;
    BEGIN
      lvPurchHeader.SETCURRENTKEY("Document Type", "Buy-from Vendor No.", "No.");
      lvPurchHeader.SETRANGE("Document Type", lvPurchHeader."Document Type"::Order);
      //setfilter is used in stead of setrange because when Vendor No. or Job No.is empty no filter must be set.
      lvPurchHeader.SETFILTER("Buy-from Vendor No.", "Buy-from Vendor No.");
      lvPurchHeader.SETFILTER("Job No.", "Job No.");
      IF NOT "Invoice Approved" THEN
      //** T004196 sn
        lvPurchHeader.SETFILTER(Status, '%1|%2',
          lvPurchHeader.Status::Open,
          lvPurchHeader.Status::Released);
      //    lvPurchHeader.Status::"Pending Approval", not functional in rtc2013 because option caption is empty
      //    lvPurchHeader.Status::"Pending Prepayment");  idem  results in runtime error
      //  lvPurchHeader.SETFILTER(Status, '<%1', lvPurchHeader.Status::Closed); T004196 old
      //** T004196 en
      lvPurchHeader."Document Type" := lvPurchHeader."Document Type"::Order;
      //call 30784.sn
      //lvPurchHeader."No." := "Related Purch. Order No.";
      lvPurchHeader.SETRANGE("No.", "Related Purch. Order No.");
      IF lvPurchHeader.FINDFIRST THEN;
      lvPurchHeader.SETRANGE("No.");
      //call 30784.en
      IF PAGE.RUNMODAL(PAGE::"Purchase List", lvPurchHeader) = ACTION::LookupOK THEN
        IF NOT "Invoice Approved" THEN //call 30784.n
          VALIDATE("Related Purch. Order No.", lvPurchHeader."No.");
    END;

    PROCEDURE PostingAllowedInDMSStatus@1100528400() : Boolean;
    VAR
      ScanApplicationsSetup@1100528400 : Record 11012134;
    BEGIN
      //**4PS
      IF ("DMS Status" IN
        ["DMS Status"::" ",
         "DMS Status"::Approved,
         "DMS Status"::Rejected])
      THEN
        EXIT(TRUE);

      IF ScanApplicationsSetup.READPERMISSION THEN
        IF ScanApplicationsSetup.GET THEN
          CASE "DMS Status" OF
            "DMS Status"::"Awaiting Line Entry":
              EXIT(ScanApplicationsSetup."Allow Posting Aw. Line Entry");
            "DMS Status"::"Start Workflow":
              EXIT(ScanApplicationsSetup."Allow Posting Start Workflow");
            "DMS Status"::"In Workflow":
              EXIT(ScanApplicationsSetup."Allow Posting in Workflow");
          END;
    END;

    PROCEDURE AddToDMSWorkFlow@1100525001();
    VAR
      ScanApplicationsSetup@1100525000 : Record 11012134;
      PurchInvStartDMSWF@1100525001 : Codeunit 11012215;
      PurchInvByPassDMSWF@1100525002 : Codeunit 11012211;
    BEGIN
      //**4PS
      IF "DMS Status" = "DMS Status"::"Awaiting Line Entry" THEN BEGIN
        IF ScanApplicationsSetup.READPERMISSION THEN BEGIN
          ScanApplicationsSetup.GET;
          IF ScanApplicationsSetup."Ask Start Workflow" THEN BEGIN
            IF CONFIRM(Text11012006, TRUE) THEN BEGIN
              PurchInvStartDMSWF.RUN(Rec)
            END ELSE BEGIN
              PurchInvByPassDMSWF.RUN(Rec)
            END;
          END ELSE BEGIN
            IF ScanApplicationsSetup."Default Action Workflow" =
              ScanApplicationsSetup."Default Action Workflow"::Start THEN
            BEGIN
              PurchInvStartDMSWF.RUN(Rec)
            END ELSE BEGIN
              PurchInvByPassDMSWF.RUN(Rec)
            END;
          END;
        END;
      END;
    END;

    PROCEDURE UpdateOnHoldOfPurchaseInvoice@1100528403(PurchInvHeaderNo@1100528403 : Code[20];NewOnHoldCode@1100528404 : Code[3];ValidateOnHold@1100409000 : Boolean);
    VAR
      VendorLedgerEntry@1100528401 : Record 25;
    BEGIN
      //**4PS
      VendorLedgerEntry.SETCURRENTKEY("Document No.");
      VendorLedgerEntry.SETRANGE("Document No.", PurchInvHeaderNo);
      VendorLedgerEntry.SETRANGE("Document Type", VendorLedgerEntry."Document Type"::Invoice);
      IF VendorLedgerEntry.FINDSET(TRUE, FALSE) THEN
        REPEAT
          IF ValidateOnHold THEN BEGIN//C003157 validate envokes update of purch inv. header
            IF NewOnHoldCode = '' THEN BEGIN
              VendorLedgerEntry."On Hold" := '';
              VendorLedgerEntry.UpdatePostedDocumentWithoutChk;
            END ELSE
              VendorLedgerEntry.VALIDATE("On Hold", NewOnHoldCode);
          END ELSE BEGIN
            VendorLedgerEntry."On Hold" := NewOnHoldCode;
            VendorLedgerEntry."Approvement Initials" := "Approvement Initials";
          END;
          CODEUNIT.RUN(CODEUNIT::"Vend. Entry-Edit", VendorLedgerEntry);
        UNTIL VendorLedgerEntry.NEXT = 0;
    END;

    PROCEDURE EditDocuments@1100528702(DocumentTemplateTypeFilter@1210190003 : Text[250];ContactNo@1210190004 : Code[20];ContactPersonNo@1210190005 : Code[20];SendMail@1210190002 : Boolean;Recipient@1100528700 : Text[120]);
    VAR
      PurchInvLine@1100528701 : Record 123;
      Job@1100528704 : Record 11072003;
      ResponsibilityCenter@1100528705 : Record 5714;
      ProjectNo@1100528703 : Code[20];
      DocumentMailing@1210190000 : Codeunit 11012278;
      RecRef@1100525000 : RecordRef;
      DocumentLinkRIDs@1100525001 : ARRAY [5] OF RecordID;
    BEGIN
      //**4PS
      RecRef.GETTABLE(Rec);
      DocumentLinkRIDs[1] := RecRef.RECORDID;

      ProjectNo := "Received on Project";
      IF ProjectNo = '' THEN BEGIN
        PurchInvLine.SETRANGE("Document No.", "No.");
        IF PurchInvLine.FINDSET THEN
          REPEAT
            ProjectNo := PurchInvLine."Job No.";
          UNTIL (PurchInvLine.NEXT = 0) OR (ProjectNo <> '');
      END;

      IF ProjectNo <> '' THEN BEGIN
        Job.GET(ProjectNo);
        RecRef.GETTABLE(Job);
        DocumentLinkRIDs[2] := RecRef.RECORDID;
      END;

      IF ResponsibilityCenter.GET("Responsibility Center") THEN BEGIN
        RecRef.GETTABLE(ResponsibilityCenter);
        DocumentLinkRIDs[3] := RecRef.RECORDID;
      END;

      DocumentMailing.EditDocuments(
        DocumentTemplateTypeFilter, DocumentLinkRIDs,
        "Shortcut Dimension 1 Code", ContactNo, ContactPersonNo, SendMail, Recipient);
    END;

    PROCEDURE ShowPurchOrderDetails@1100409001();
    VAR
      PurchaseLineDetail@1100409000 : Record 11020660;
    BEGIN
      //**4PS  #C001139
      PurchaseLineDetail.ShowList(PurchaseLineDetail."Line Type"::"Purchase Order", "Related Purch. Order No.");
    END;

    PROCEDURE Release@1100528401();
    BEGIN
      //**4PS
      IF "Status (Approval)" = "Status (Approval)"::Released THEN
        EXIT;

      "Status (Approval)" := "Status (Approval)"::Released;
      MODIFY;
      UpdateConsentLines;
    END;

    PROCEDURE Reopen@1100528402();
    BEGIN
      //**4PS
      IF "Status (Approval)" = "Status (Approval)"::Open THEN
        EXIT;

      "Status (Approval)" := "Status (Approval)"::Open;
      MODIFY;
      DeleteConsentLines(FALSE);
    END;

    LOCAL PROCEDURE UpdateConsentLines@1100525014();
    VAR
      ConsentLine@1100528402 : Record 11012226;
      PurchasesPayablesSetup@1100528403 : Record 312;
      ConsentManagement@1100528400 : Codeunit 11012132;
      DocType@1100528401 : 'Order,Invoice,Posted Invoice,Credit Memo,Posted Credit Memo,Advice Order,Purchase Action,Purchase Quote';
    BEGIN
      //**4PS
      IF NOT ConsentLine.READPERMISSION THEN
        EXIT;
      IF NOT PurchasesPayablesSetup.GET THEN
        EXIT;
      IF NOT PurchasesPayablesSetup."Block Appr. Inv. w. Cons.Lines" THEN
        EXIT;

      IF "Status (Approval)" = "Status (Approval)"::Released THEN BEGIN
        DeleteConsentLines(FALSE);
        ConsentManagement.HandleInvoiceHeader(Rec, DocType::"Posted Invoice", FALSE, FALSE);
        ConsentManagement.AutoConsentPurchInvHeader("No.");
      END;
    END;

    LOCAL PROCEDURE DeleteConsentLines@1100525015(DeleteManualConsentLinesToo@1100525000 : Boolean);
    VAR
      PurchasesPayablesSetup@1100528401 : Record 312;
      ConsentLine@1100528400 : Record 11012226;
    BEGIN
      //**4PS
      IF NOT PurchasesPayablesSetup.GET THEN
        EXIT;
      IF NOT PurchasesPayablesSetup."Block Appr. Inv. w. Cons.Lines" THEN
        EXIT;

      ConsentLine.SETRANGE("Document Type", ConsentLine."Document Type"::"Posted Invoice");
      ConsentLine.SETRANGE("Document No.", "No.");
      ConsentLine.SETRANGE(Process, ConsentLine.Process::"Invoice Approval");

      IF NOT DeleteManualConsentLinesToo THEN
        ConsentLine.SETRANGE(Manual, FALSE);

      ConsentLine.DELETEALL;
    END;

    PROCEDURE EditConsentLinesForApprovePurchaseInvoices@1100528404();
    VAR
      Type@1100528401 : ' ,Project,Service Order';
      TypeNo@1100528400 : Code[20];
    BEGIN
      //**4PS
      CASE TRUE OF
        "Job No." <> '':
          BEGIN
            Type := Type::Project;
            TypeNo := "Job No.";
          END;
        "Service Order No." <> '':
          BEGIN
            Type := Type::"Service Order";
            TypeNo := "Service Order No.";
          END;
      END;
      RunPageConsentLines(0, Type, TypeNo);
    END;

    PROCEDURE RunPageConsentLines@1100528405(DocumentLineNo@1100528401 : Integer;Type@1100528403 : ' ,Project,Service Order';TypeNo@1100528402 : Code[20]);
    VAR
      ConsentLine@1100528400 : Record 11012226;
      ConsentLines@1100528404 : Page 11071869;
      ConsentProcess@1100528405 : 'Invoice,Invoice Approval,Advice Order,Purchase Order,Purchase Action,Purchase Quote,Credit Memo,Credit Memo Approval';
    BEGIN
      //**4PS
      IF ("DMS Status" > "DMS Status"::"Awaiting Line Entry") AND
         ("DMS Status" <> "DMS Status"::Rejected)
      THEN
        FIELDERROR("DMS Status");

      ConsentProcess := ConsentProcess::"Invoice Approval";
      ConsentLine.SETRANGE("Document Type", ConsentLine."Document Type"::"Posted Invoice");
      ConsentLine.SETRANGE("Document No.", "No.");
      IF DocumentLineNo <> 0 THEN
        ConsentLine.SETRANGE("Document Line No.", DocumentLineNo);
      ConsentLines.SETTABLEVIEW(ConsentLine);
      ConsentLines.SetDefaults(TRUE, "Buy-from Vendor No.", ConsentProcess, Type, TypeNo, DocumentLineNo);
      ConsentLines.RUNMODAL;
    END;

    PROCEDURE ShowConsentLinesForApprovePurchaseInvoices@1100528406();
    VAR
      PurchasesPayablesSetup@1100528400 : Record 312;
      ConsentLine@1100528401 : Record 11012226;
      Consenter@1100528404 : Record 11012229;
      ConsentManagement@1100528402 : Codeunit 11012132;
      ConsentLineList@1100528403 : Page 11071870;
    BEGIN
      //**4PS
      IF NOT Consenter.READPERMISSION THEN
        EXIT;
      IF NOT PurchasesPayablesSetup.GET THEN
        EXIT;

      IF PurchasesPayablesSetup."Block Appr. Inv. w. Cons.Lines" THEN BEGIN
        ConsentLine.SETRANGE("Document Type", ConsentLine."Document Type"::"Posted Invoice");
        ConsentLine.SETRANGE("Document No.", "No.");
        ConsentLineList.SETTABLEVIEW(ConsentLine);
        ConsentLineList.RUN;
      END ELSE
        ConsentManagement.HandleInvoiceHeader(Rec, 2, TRUE, FALSE);
    END;

    PROCEDURE RelatedOrderHasOpenConsentLines@1100528415() : Boolean;
    VAR
      PurchaseHeader@1100528400 : Record 38;
    BEGIN
      //**4PS
      IF "Related Purch. Order No." = '' THEN
        EXIT;

      IF PurchaseHeader.GET(PurchaseHeader."Document Type"::Order, "Related Purch. Order No.") THEN BEGIN
        PurchaseHeader.CALCFIELDS("Order Consent Lines Available");
        EXIT(PurchaseHeader."Order Consent Lines Available");
      END;
    END;

    BEGIN
    {
      4PS, dbeekman, 22-10-2008:
        - ReportSelection changed. cod229.GetReportSelection called to select reports to be printed
      4PS KK 19-11-2010: On hold when no contract returned or when no letter of credit returned.
      131113 ITERO.SB I045#P6 Added field "Export to symbrio"
      131121 ITERO.SB I045#P6 Added field "Export to Symbrio Type"
      151109 ITERO.DL IME424 new key: "Export to Symbrio"
      --- ExFlow --->
      Field 12013603 : Approve
      Field 12013609 : Requisition No.
      <-- ExFlow ---

      Version List=NAVW19.00.00.45834,NAVFI9.00.00.45834;
      NAVFI: Disabled fields: "Invoice Message", "Invoice Message 2"
    }
    END.
  }
}

