OBJECT Table 21 Cust. Ledger Entry
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00.00.44365,NAVFI9.DK9,4PS9.00,4PSSE;
  }
  PROPERTIES
  {
    Permissions=TableData 300=m;
    OnInsert=VAR
               GenJnlPostPreview@1000 : Codeunit 19;
             BEGIN
               //**4PS Generated Code. Do Not Change.sn05
               DPA_OnInsert;
               //**4PS Generated Code.en05

               GenJnlPostPreview.SaveCustLedgEntry(Rec);
             END;

    CaptionML=ENU=Cust. Ledger Entry;
    LookupPageID=Page25;
    DrillDownPageID=Page25;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=ENU=Entry No. }
    { 3   ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Customer No. }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 5   ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 6   ;   ;Document No.        ;Code20        ;OnLookup=VAR
                                                              IncomingDocument@1000 : Record 130;
                                                              SalesInvoiceHead@1100409000 : Record 112;
                                                              SalesCredMemoHead@1100409001 : Record 114;
                                                            BEGIN
                                                              //IncomingDocument.HyperlinkToDocument("Document No.","Posting Date"); //**4PS.o (C019634) Can (must now) be done by button on Page
                                                              //**4PS.sn (C019634)
                                                              CASE "Document Type" OF
                                                                "Document Type"::Invoice:
                                                                  BEGIN
                                                                    SalesInvoiceHead.SETRANGE("No.","Document No.");
                                                                    IF SalesInvoiceHead.FINDFIRST THEN
                                                                      PAGE.RUNMODAL(PAGE::"Posted Sales Invoice", SalesInvoiceHead);
                                                                  END;
                                                                "Document Type"::"Credit Memo":
                                                                  BEGIN
                                                                    SalesCredMemoHead.SETRANGE("No.","Document No.");
                                                                    IF SalesCredMemoHead.FINDFIRST THEN
                                                                      PAGE.RUNMODAL(PAGE::"Posted Sales Credit Memo", SalesCredMemoHead);
                                                                  END;
                                                              END;
                                                              //**4PS.en
                                                            END;

                                                   CaptionML=ENU=Document No. }
    { 7   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 11  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=ENU=Currency Code }
    { 13  ;   ;Amount              ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                              Entry Type=FILTER(Initial Entry|Unrealized Loss|Unrealized Gain|Realized Loss|Realized Gain|Payment Discount|'Payment Discount (VAT Excl.)'|'Payment Discount (VAT Adjustment)'|Correction of Remaining Amount|Payment Tolerance|Payment Discount Tolerance|'Payment Tolerance (VAT Excl.)'|'Payment Tolerance (VAT Adjustment)'|'Payment Discount Tolerance (VAT Excl.)'|'Payment Discount Tolerance (VAT Adjustment)'|Credit Restriction),
                                                                                                              Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Amount;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 14  ;   ;Remaining Amount    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                              Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Remaining Amount;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 15  ;   ;Original Amt. (LCY) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                      Entry Type=FILTER(Initial Entry),
                                                                                                                      Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Original Amt. (LCY);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 16  ;   ;Remaining Amt. (LCY);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                      Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Remaining Amt. (LCY);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 17  ;   ;Amount (LCY)        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                      Entry Type=FILTER(Initial Entry|Unrealized Loss|Unrealized Gain|Realized Loss|Realized Gain|Payment Discount|'Payment Discount (VAT Excl.)'|'Payment Discount (VAT Adjustment)'|Correction of Remaining Amount|Payment Tolerance|Payment Discount Tolerance|'Payment Tolerance (VAT Excl.)'|'Payment Tolerance (VAT Adjustment)'|'Payment Discount Tolerance (VAT Excl.)'|'Payment Discount Tolerance (VAT Adjustment)'|Credit Restriction),
                                                                                                                      Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Amount (LCY);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 18  ;   ;Sales (LCY)         ;Decimal       ;CaptionML=ENU=Sales (LCY);
                                                   AutoFormatType=1 }
    { 19  ;   ;Profit (LCY)        ;Decimal       ;CaptionML=ENU=Profit (LCY);
                                                   AutoFormatType=1 }
    { 20  ;   ;Inv. Discount (LCY) ;Decimal       ;CaptionML=ENU=Inv. Discount (LCY);
                                                   AutoFormatType=1 }
    { 21  ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Sell-to Customer No. }
    { 22  ;   ;Customer Posting Group;Code10      ;TableRelation="Customer Posting Group";
                                                   CaptionML=ENU=Customer Posting Group }
    { 23  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   CaptionClass='1,1,1' }
    { 24  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Global Dimension 2 Code;
                                                   CaptionClass='1,1,2' }
    { 25  ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=ENU=Salesperson Code }
    { 27  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=User ID }
    { 28  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=ENU=Source Code }
    { 33  ;   ;On Hold             ;Code3         ;TableRelation="On Hold Code".Code;
                                                   CaptionML=ENU=On Hold }
    { 34  ;   ;Applies-to Doc. Type;Option        ;CaptionML=ENU=Applies-to Doc. Type;
                                                   OptionCaptionML=ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 35  ;   ;Applies-to Doc. No. ;Code20        ;CaptionML=ENU=Applies-to Doc. No. }
    { 36  ;   ;Open                ;Boolean       ;CaptionML=ENU=Open }
    { 37  ;   ;Due Date            ;Date          ;OnValidate=VAR
                                                                ReminderEntry@1000 : Record 300;
                                                                ReminderIssue@1102601000 : Codeunit 393;
                                                              BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                                IF "Due Date" <> xRec."Due Date" THEN BEGIN
                                                                  ReminderEntry.SETCURRENTKEY("Customer Entry No.",Type);
                                                                  ReminderEntry.SETRANGE("Customer Entry No.","Entry No.");
                                                                  ReminderEntry.SETRANGE(Type,ReminderEntry.Type::Reminder);
                                                                  ReminderEntry.SETRANGE("Reminder Level","Last Issued Reminder Level");
                                                                  IF ReminderEntry.FINDLAST THEN
                                                                    ReminderIssue.ChangeDueDate(ReminderEntry,"Due Date",xRec."Due Date");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Due Date }
    { 38  ;   ;Pmt. Discount Date  ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=ENU=Pmt. Discount Date }
    { 39  ;   ;Original Pmt. Disc. Possible;Decimal;
                                                   CaptionML=ENU=Original Pmt. Disc. Possible;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 40  ;   ;Pmt. Disc. Given (LCY);Decimal     ;CaptionML=ENU=Pmt. Disc. Given (LCY);
                                                   AutoFormatType=1 }
    { 43  ;   ;Positive            ;Boolean       ;CaptionML=ENU=Positive }
    { 44  ;   ;Closed by Entry No. ;Integer       ;TableRelation="Cust. Ledger Entry";
                                                   CaptionML=ENU=Closed by Entry No. }
    { 45  ;   ;Closed at Date      ;Date          ;CaptionML=ENU=Closed at Date }
    { 46  ;   ;Closed by Amount    ;Decimal       ;CaptionML=ENU=Closed by Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 47  ;   ;Applies-to ID       ;Code50        ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=ENU=Applies-to ID }
    { 49  ;   ;Journal Batch Name  ;Code10        ;CaptionML=ENU=Journal Batch Name }
    { 50  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=ENU=Reason Code }
    { 51  ;   ;Bal. Account Type   ;Option        ;CaptionML=ENU=Bal. Account Type;
                                                   OptionCaptionML=ENU=G/L Account,Customer,Vendor,Bank Account,Fixed Asset;
                                                   OptionString=G/L Account,Customer,Vendor,Bank Account,Fixed Asset }
    { 52  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Customer)) Customer
                                                                 ELSE IF (Bal. Account Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Fixed Asset)) "Fixed Asset";
                                                   CaptionML=ENU=Bal. Account No. }
    { 53  ;   ;Transaction No.     ;Integer       ;CaptionML=ENU=Transaction No. }
    { 54  ;   ;Closed by Amount (LCY);Decimal     ;CaptionML=ENU=Closed by Amount (LCY);
                                                   AutoFormatType=1 }
    { 58  ;   ;Debit Amount        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Debit Amount" WHERE (Ledger Entry Amount=CONST(Yes),
                                                                                                                      Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                      Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Debit Amount;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 59  ;   ;Credit Amount       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Credit Amount" WHERE (Ledger Entry Amount=CONST(Yes),
                                                                                                                       Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                       Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Credit Amount;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 60  ;   ;Debit Amount (LCY)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Debit Amount (LCY)" WHERE (Ledger Entry Amount=CONST(Yes),
                                                                                                                            Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                            Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Debit Amount (LCY);
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 61  ;   ;Credit Amount (LCY) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Credit Amount (LCY)" WHERE (Ledger Entry Amount=CONST(Yes),
                                                                                                                             Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                             Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Credit Amount (LCY);
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 62  ;   ;Document Date       ;Date          ;CaptionML=ENU=Document Date }
    { 63  ;   ;External Document No.;Code35       ;CaptionML=ENU=External Document No. }
    { 64  ;   ;Calculate Interest  ;Boolean       ;CaptionML=ENU=Calculate Interest }
    { 65  ;   ;Closing Interest Calculated;Boolean;CaptionML=ENU=Closing Interest Calculated }
    { 66  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series }
    { 67  ;   ;Closed by Currency Code;Code10     ;TableRelation=Currency;
                                                   CaptionML=ENU=Closed by Currency Code }
    { 68  ;   ;Closed by Currency Amount;Decimal  ;AccessByPermission=TableData 4=R;
                                                   CaptionML=ENU=Closed by Currency Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Closed by Currency Code" }
    { 73  ;   ;Adjusted Currency Factor;Decimal   ;CaptionML=ENU=Adjusted Currency Factor;
                                                   DecimalPlaces=0:15 }
    { 74  ;   ;Original Currency Factor;Decimal   ;CaptionML=ENU=Original Currency Factor;
                                                   DecimalPlaces=0:15 }
    { 75  ;   ;Original Amount     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                              Entry Type=FILTER(Initial Entry),
                                                                                                              Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Original Amount;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 76  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Date Filter }
    { 77  ;   ;Remaining Pmt. Disc. Possible;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                                CALCFIELDS(Amount,"Original Amount");

                                                                IF "Remaining Pmt. Disc. Possible" * Amount < 0 THEN
                                                                  FIELDERROR("Remaining Pmt. Disc. Possible",STRSUBSTNO(Text000,FIELDCAPTION(Amount)));

                                                                IF ABS("Remaining Pmt. Disc. Possible") > ABS("Original Amount") THEN
                                                                  FIELDERROR("Remaining Pmt. Disc. Possible",STRSUBSTNO(Text001,FIELDCAPTION("Original Amount")));
                                                              END;

                                                   CaptionML=ENU=Remaining Pmt. Disc. Possible;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 78  ;   ;Pmt. Disc. Tolerance Date;Date     ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=ENU=Pmt. Disc. Tolerance Date }
    { 79  ;   ;Max. Payment Tolerance;Decimal     ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                                CALCFIELDS(Amount,"Remaining Amount");

                                                                IF "Max. Payment Tolerance" * Amount < 0 THEN
                                                                  FIELDERROR("Max. Payment Tolerance",STRSUBSTNO(Text000,FIELDCAPTION(Amount)));

                                                                IF ABS("Max. Payment Tolerance") > ABS("Remaining Amount") THEN
                                                                  FIELDERROR("Max. Payment Tolerance",STRSUBSTNO(Text001,FIELDCAPTION("Remaining Amount")));
                                                              END;

                                                   CaptionML=ENU=Max. Payment Tolerance;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 80  ;   ;Last Issued Reminder Level;Integer ;CaptionML=ENU=Last Issued Reminder Level }
    { 81  ;   ;Accepted Payment Tolerance;Decimal ;CaptionML=ENU=Accepted Payment Tolerance;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 82  ;   ;Accepted Pmt. Disc. Tolerance;Boolean;
                                                   CaptionML=ENU=Accepted Pmt. Disc. Tolerance }
    { 83  ;   ;Pmt. Tolerance (LCY);Decimal       ;CaptionML=ENU=Pmt. Tolerance (LCY);
                                                   AutoFormatType=1 }
    { 84  ;   ;Amount to Apply     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                                CALCFIELDS("Remaining Amount");

                                                                IF "Amount to Apply" * "Remaining Amount" < 0 THEN
                                                                  FIELDERROR("Amount to Apply",STRSUBSTNO(Text000,FIELDCAPTION("Remaining Amount")));

                                                                IF ABS("Amount to Apply") > ABS("Remaining Amount") THEN
                                                                  FIELDERROR("Amount to Apply",STRSUBSTNO(Text001,FIELDCAPTION("Remaining Amount")));
                                                              END;

                                                   CaptionML=ENU=Amount to Apply;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 85  ;   ;IC Partner Code     ;Code20        ;TableRelation="IC Partner";
                                                   CaptionML=ENU=IC Partner Code }
    { 86  ;   ;Applying Entry      ;Boolean       ;CaptionML=ENU=Applying Entry }
    { 87  ;   ;Reversed            ;Boolean       ;CaptionML=ENU=Reversed;
                                                   BlankZero=Yes }
    { 88  ;   ;Reversed by Entry No.;Integer      ;TableRelation="Cust. Ledger Entry";
                                                   CaptionML=ENU=Reversed by Entry No.;
                                                   BlankZero=Yes }
    { 89  ;   ;Reversed Entry No.  ;Integer       ;TableRelation="Cust. Ledger Entry";
                                                   CaptionML=ENU=Reversed Entry No.;
                                                   BlankZero=Yes }
    { 90  ;   ;Prepayment          ;Boolean       ;CaptionML=ENU=Prepayment }
    { 172 ;   ;Payment Method Code ;Code10        ;TableRelation="Payment Method";
                                                   OnValidate=VAR
                                                                BankAccount@1060002 : Record 270;
                                                                CustBankAcc@1060000 : Record 287;
                                                                PaymentMethod@1060001 : Record 289;
                                                                PmtExportMgt@1060003 : Codeunit 1210;
                                                              BEGIN
                                                                //>>NAVDK
                                                                GLSetup.GET;
                                                                IF GLSetup."Danish localization active" THEN BEGIN
                                                                  TESTFIELD(Open,TRUE);
                                                                  IF "Bal. Account Type" = "Bal. Account Type"::"Bank Account" THEN
                                                                    IF PaymentMethod.GET("Payment Method Code") THEN BEGIN
                                                                      IF PaymentMethod."Payment Type Validation" = PaymentMethod."Payment Type Validation"::" " THEN
                                                                        EXIT;
                                                                      PmtExportMgt.CheckCustRefundPaymentTypeValidation(PaymentMethod);
                                                                      BankAccount.GET("Bal. Account No.");
                                                                      IF CustBankAcc.GET("Customer No.","Recipient Bank Account") THEN
                                                                        PmtExportMgt.CheckBankTransferCountryRegion(BankAccount."Country/Region Code",CustBankAcc."Country/Region Code",PaymentMethod);
                                                                    END
                                                                END;
                                                                //<<NAVDK
                                                              END;

                                                   CaptionML=ENU=Payment Method Code }
    { 173 ;   ;Applies-to Ext. Doc. No.;Code35    ;CaptionML=ENU=Applies-to Ext. Doc. No. }
    { 288 ;   ;Recipient Bank Account;Code10      ;TableRelation="Customer Bank Account".Code WHERE (Customer No.=FIELD(Customer No.));
                                                   CaptionML=ENU=Recipient Bank Account }
    { 289 ;   ;Message to Recipient;Text140       ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=ENU=Message to Recipient }
    { 290 ;   ;Exported to Payment File;Boolean   ;CaptionML=ENU=Exported to Payment File;
                                                   Editable=No }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=No }
    { 1200;   ;Direct Debit Mandate ID;Code35     ;TableRelation="SEPA Direct Debit Mandate" WHERE (Customer No.=FIELD(Customer No.));
                                                   CaptionML=ENU=Direct Debit Mandate ID }
    { 11012025;;Description 2      ;Text50        ;CaptionML=ENU=Description 2 }
    { 11012030;;Approvement Initials;Code10       ;TableRelation="Invoice Approval Initials".Code;
                                                   CaptionML=ENU=Approvement Initials }
    { 11012031;;Remaining Amt. (LCY) Due Date;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                      Due Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Remaining Amt. (LCY) Due Date;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 11012032;;Remaining Amt. (LCY) Doc.Date;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                      Document Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Remaining Amt. (LCY) Doc.Date;
                                                   Editable=No }
    { 11012033;;Applied Amount (LCY);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                      Entry Type=CONST(Application),
                                                                                                                      Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Applied Amount (LCY);
                                                   Editable=No }
    { 11012034;;Payment Date Last Installment;Date;CaptionML=ENU=Payment Date Last Installment Notary }
    { 11012040;;Comment Line Present;Boolean      ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Sales Comment Line" WHERE (No.=FIELD(Document No.)));
                                                   CaptionML=ENU=Comment Line Present;
                                                   Editable=No }
    { 11012050;;Alternative Bill-to Address;Code10;TableRelation="Ship-to Address".Code WHERE (Customer No.=FIELD(Customer No.),
                                                                                               Billing Address=CONST(Yes));
                                                   CaptionML=ENU=Alternative Bill-to Address }
    { 11012060;;Labor Amount (Subcontracting);Decimal;
                                                   CaptionML=ENU=Labor Amount (Subcontracting);
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 11012070;;Blocked Amount (Subcontracting;Decimal;
                                                   CaptionML=ENU=Blocked Amount (Subcontracting);
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 11012210;;Reminder Terms Code;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer."Reminder Terms Code" WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=ENU=Reminder Terms Code;
                                                   Editable=No }
    { 11012250;;Your Reference     ;Text35        ;CaptionML=ENU=Your Reference }
    { 11012260;;Project No.        ;Code20        ;TableRelation=Job;
                                                   CaptionML=ENU=Project No.;
                                                   Description=C-019159 }
    { 11012261;;Project Description;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=ENU=Project Description;
                                                   Editable=No }
    { 11012262;;Project Manager    ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job."Project Manager" WHERE (No.=FIELD(Project No.)));
                                                   TableRelation=Employee;
                                                   CaptionML=ENU=Project Manager;
                                                   Editable=No }
    { 11012291;;Pmt. Discount Date 2;Date         ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=ENU=Pmt. Discount Date 2;
                                                   Description=4PS }
    { 11012292;;Original Pmt. Disc. Possible 2;Decimal;
                                                   CaptionML=ENU=Original Pmt. Disc. Possible 2;
                                                   Description=4PS;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 11012293;;Pmt. Disc. Tolerance Date 2;Date  ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=ENU=Pmt. Disc. Tolerance Date 2;
                                                   Description=4PS }
    { 11012294;;Pmt. Discount Date 3;Date         ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=ENU=Pmt. Discount Date 3;
                                                   Description=4PS }
    { 11012295;;Original Pmt. Disc. Possible 3;Decimal;
                                                   CaptionML=ENU=Original Pmt. Disc. Possible 3;
                                                   Description=4PS;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 11012296;;Pmt. Disc. Tolerance Date 3;Date  ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=ENU=Pmt. Disc. Tolerance Date 3;
                                                   Description=4PS }
    { 11012297;;Remain. Pmt. Disc. Possible 2;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                                CALCFIELDS(Amount,"Original Amount");

                                                                IF "Remain. Pmt. Disc. Possible 2" * Amount < 0 THEN
                                                                  FIELDERROR("Remain. Pmt. Disc. Possible 2",STRSUBSTNO(Text000,FIELDCAPTION(Amount)));

                                                                IF ABS("Remain. Pmt. Disc. Possible 2") > ABS("Original Amount") THEN
                                                                  FIELDERROR("Remain. Pmt. Disc. Possible 2",STRSUBSTNO(Text001,FIELDCAPTION("Original Amount")));
                                                              END;

                                                   CaptionML=ENU=Remaining Pmt. Disc. Possible 2;
                                                   Description=4PS;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 11012298;;Remain. Pmt. Disc. Possible 3;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                                CALCFIELDS(Amount,"Original Amount");

                                                                IF "Remain. Pmt. Disc. Possible 3" * Amount < 0 THEN
                                                                  FIELDERROR("Remain. Pmt. Disc. Possible 3",STRSUBSTNO(Text000,FIELDCAPTION(Amount)));

                                                                IF ABS("Remain. Pmt. Disc. Possible 3") > ABS("Original Amount") THEN
                                                                  FIELDERROR("Remain. Pmt. Disc. Possible 3",STRSUBSTNO(Text001,FIELDCAPTION("Original Amount")));
                                                              END;

                                                   CaptionML=ENU=Remaining Pmt. Disc. Possible 3;
                                                   Description=4PS;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 11012300;;Last Application Date;Date        ;FieldClass=FlowField;
                                                   CalcFormula=Max("Detailed Cust. Ledg. Entry"."Posting Date" WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                      Entry Type=FILTER(Application)));
                                                   CaptionML=ENU=Last Application Date;
                                                   Editable=No }
    { 11012340;;SEPA Return Code   ;Code10        ;CaptionML=ENU=SEPA Return Code;
                                                   Description=DP00674 }
    { 11012350;;Number of Refunds  ;Integer       ;CaptionML=ENU=Number of Refunds;
                                                   BlankZero=Yes;
                                                   Description=DP00674 }
    { 11012360;;Sent to Collection ;Boolean       ;CaptionML=ENU=Sent to Collection }
    { 11012362;;Sent to Collection Date;Date      ;CaptionML=ENU=Sent to Collection Date }
    { 11012365;;Number of Issued Reminders;Integer;FieldClass=FlowField;
                                                   CalcFormula=Count("Reminder/Fin. Charge Entry" WHERE (Type=CONST(Reminder),
                                                                                                         Customer Entry No.=FIELD(Entry No.),
                                                                                                         Customer No.=FIELD(Customer No.)));
                                                   CaptionML=ENU=Number of Issued Reminders;
                                                   Editable=No }
    { 11012370;;Blocked for Reminder;Code3        ;TableRelation="On Hold Code".Code;
                                                   CaptionML=ENU=Blocked for Reminder }
    { 11012375;;Blocked for Interest;Code3        ;TableRelation="On Hold Code".Code;
                                                   CaptionML=ENU=Blocked for Interest }
    { 11020254;;Credit Restriction %;Decimal      ;CaptionML=ENU=Credit Restriction %;
                                                   DecimalPlaces=0:2 }
    { 11020255;;Credit Restriction Date;Date      ;CaptionML=ENU=Credit Restriction Date }
    { 11020256;;Credit Restriction Amount;Decimal ;CaptionML=ENU=Credit Restriction Amount;
                                                   DecimalPlaces=2:2 }
    { 11020257;;Credit Restriction ;Code20        ;CaptionML=ENU=Credit Restriction }
    { 11020258;;Credit Restriction VAT Amount;Decimal;
                                                   CaptionML=ENU=Credit Restriction VAT Amount;
                                                   DecimalPlaces=2:2 }
    { 11020260;;Customer Name      ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Name WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=ENU=Customer Name;
                                                   Editable=No }
    { 11020270;;Batch Seq. No.     ;Code20        ;TableRelation="Invoice Proposal Batch Seq.";
                                                   CaptionML=ENU=Batch Seq. No.;
                                                   Editable=No }
    { 11126180;;Reference No.      ;Code20        ;CaptionML=ENU=Reference No.;
                                                   Description=NAVFI }
    { 11126181;;Disreg. Pmt. Disc. at Full Pmt;Boolean;
                                                   CaptionML=ENU=Disreg. Pmt. Disc. at Full Pmt;
                                                   Description=NAVFI }
    { 11128020;;Amount ROT         ;Decimal       ;CaptionML=ENU=Amount ROT;
                                                   Description=I.012 }
    { 11128021;;Sent to Tax Authorities Date;Date ;CaptionML=ENU=Sent to Tax Authorities Date;
                                                   Description=I.012 }
    { 11128022;;Exported Filename  ;Text250       ;CaptionML=ENU=Exported Filename;
                                                   Description=I.012 }
    { 11128023;;Rej. from Tax Authorities Date;Date;
                                                   CaptionML=ENU=Rejected from Tax Authorities Date;
                                                   Description=I.012 }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Customer No.,Posting Date,Currency Code ;SumIndexFields=Sales (LCY),Profit (LCY),Inv. Discount (LCY) }
    { No ;Customer No.,Currency Code,Posting Date  }
    {    ;Document No.                             }
    {    ;External Document No.                    }
    {    ;Customer No.,Open,Positive,Due Date,Currency Code }
    {    ;Open,Due Date                            }
    {    ;Document Type,Customer No.,Posting Date,Currency Code;
                                                   SumIndexFields=Sales (LCY),Profit (LCY),Inv. Discount (LCY);
                                                   MaintainSQLIndex=No;
                                                   MaintainSIFTIndex=No }
    {    ;Salesperson Code,Posting Date            }
    {    ;Closed by Entry No.                      }
    {    ;Transaction No.                          }
    { No ;Customer No.,Open,Positive,Calculate Interest,Due Date }
    { No ;Customer No.,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date,Currency Code;
                                                   SumIndexFields=Sales (LCY),Profit (LCY),Inv. Discount (LCY) }
    { No ;Customer No.,Open,Global Dimension 1 Code,Global Dimension 2 Code,Positive,Due Date,Currency Code }
    { No ;Open,Global Dimension 1 Code,Global Dimension 2 Code,Due Date }
    { No ;Document Type,Customer No.,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date,Currency Code }
    {    ;Customer No.,Applies-to ID,Open,Positive,Due Date }
    {    ;Open,Document No.,Global Dimension 1 Code,Global Dimension 2 Code,Due Date,Document Date }
    {    ;Customer No.,Open,Document Type,Due Date,Document Date }
    {    ;Batch Seq. No.                           }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Entry No.,Description,Customer No.,Posting Date,Document Type,Document No. }
    { 2   ;Brick               ;Document No.,Description,Remaining Amt. (LCY),Due Date }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=must have the same sign as %1';
      Text001@1001 : TextConst 'ENU=must not be larger than %1';
      DPA_Management@1100000999 : Codeunit 11012783;
      GLSetup@1002 : Record 98;

    PROCEDURE ShowDoc@7() : Boolean;
    VAR
      SalesInvoiceHdr@1003 : Record 112;
      SalesCrMemoHdr@1002 : Record 114;
      ServiceInvoiceHeader@1000 : Record 5992;
      ServiceCrMemoHeader@1001 : Record 5994;
    BEGIN
      CASE "Document Type" OF
        "Document Type"::Invoice:
          BEGIN
            IF SalesInvoiceHdr.GET("Document No.") THEN BEGIN
              PAGE.RUN(PAGE::"Posted Sales Invoice",SalesInvoiceHdr);
              EXIT(TRUE);
            END;
            IF ServiceInvoiceHeader.GET("Document No.") THEN BEGIN
              PAGE.RUN(PAGE::"Posted Service Invoice",ServiceInvoiceHeader);
              EXIT(TRUE);
            END;
          END;
        "Document Type"::"Credit Memo":
          BEGIN
            IF SalesCrMemoHdr.GET("Document No.") THEN BEGIN
              PAGE.RUN(PAGE::"Posted Sales Credit Memo",SalesCrMemoHdr);
              EXIT(TRUE);
            END;
            IF ServiceCrMemoHeader.GET("Document No.") THEN BEGIN
              PAGE.RUN(PAGE::"Posted Service Credit Memo",ServiceCrMemoHeader);
              EXIT(TRUE);
            END;
          END;
      END;
    END;

    PROCEDURE DrillDownOnEntries@1(VAR DtldCustLedgEntry@1000 : Record 379);
    VAR
      CustLedgEntry@1001 : Record 21;
    BEGIN
      CustLedgEntry.RESET;
      DtldCustLedgEntry.COPYFILTER("Customer No.",CustLedgEntry."Customer No.");
      DtldCustLedgEntry.COPYFILTER("Currency Code",CustLedgEntry."Currency Code");
      DtldCustLedgEntry.COPYFILTER("Initial Entry Global Dim. 1",CustLedgEntry."Global Dimension 1 Code");
      DtldCustLedgEntry.COPYFILTER("Initial Entry Global Dim. 2",CustLedgEntry."Global Dimension 2 Code");
      CustLedgEntry.SETCURRENTKEY("Customer No.","Posting Date");
      CustLedgEntry.SETRANGE(Open,TRUE);
      PAGE.RUN(0,CustLedgEntry);
    END;

    PROCEDURE DrillDownOnOverdueEntries@4(VAR DtldCustLedgEntry@1000 : Record 379);
    VAR
      CustLedgEntry@1001 : Record 21;
    BEGIN
      CustLedgEntry.RESET;
      DtldCustLedgEntry.COPYFILTER("Customer No.",CustLedgEntry."Customer No.");
      DtldCustLedgEntry.COPYFILTER("Currency Code",CustLedgEntry."Currency Code");
      DtldCustLedgEntry.COPYFILTER("Initial Entry Global Dim. 1",CustLedgEntry."Global Dimension 1 Code");
      DtldCustLedgEntry.COPYFILTER("Initial Entry Global Dim. 2",CustLedgEntry."Global Dimension 2 Code");
      CustLedgEntry.SETCURRENTKEY("Customer No.","Posting Date");
      CustLedgEntry.SETFILTER("Date Filter",'..%1',WORKDATE);
      CustLedgEntry.SETFILTER("Due Date",'<%1',WORKDATE);
      CustLedgEntry.SETFILTER("Remaining Amount",'<>%1',0);
      PAGE.RUN(0,CustLedgEntry);
    END;

    PROCEDURE GetOriginalCurrencyFactor@2() : Decimal;
    BEGIN
      IF "Original Currency Factor" = 0 THEN
        EXIT(1);
      EXIT("Original Currency Factor");
    END;

    PROCEDURE ShowDimensions@3();
    VAR
      DimMgt@1000 : Codeunit 408;
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"Entry No."));
    END;

    PROCEDURE SetStyle@5() : Text;
    BEGIN
      IF Open THEN BEGIN
        IF WORKDATE > "Due Date" THEN
          EXIT('Unfavorable')
      END ELSE
        IF "Closed at Date" > "Due Date" THEN
          EXIT('Attention');
      EXIT('');
    END;

    PROCEDURE CopyFromGenJnlLine@6(GenJnlLine@1000 : Record 81);
    BEGIN
      "Customer No." := GenJnlLine."Account No.";
      "Posting Date" := GenJnlLine."Posting Date";
      "Document Date" := GenJnlLine."Document Date";
      "Document Type" := GenJnlLine."Document Type";
      "Document No." := GenJnlLine."Document No.";
      "External Document No." := GenJnlLine."External Document No.";
      Description := GenJnlLine.Description;
      "Currency Code" := GenJnlLine."Currency Code";
      "Sales (LCY)" := GenJnlLine."Sales/Purch. (LCY)";
      "Profit (LCY)" := GenJnlLine."Profit (LCY)";
      "Inv. Discount (LCY)" := GenJnlLine."Inv. Discount (LCY)";
      "Sell-to Customer No." := GenJnlLine."Sell-to/Buy-from No.";
      "Customer Posting Group" := GenJnlLine."Posting Group";
      "Global Dimension 1 Code" := GenJnlLine."Shortcut Dimension 1 Code";
      "Global Dimension 2 Code" := GenJnlLine."Shortcut Dimension 2 Code";
      "Dimension Set ID" := GenJnlLine."Dimension Set ID";
      "Salesperson Code" := GenJnlLine."Salespers./Purch. Code";
      "Source Code" := GenJnlLine."Source Code";
      "On Hold" := GenJnlLine."On Hold";
      "Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type";
      "Applies-to Doc. No." := GenJnlLine."Applies-to Doc. No.";
      "Due Date" := GenJnlLine."Due Date";
      "Pmt. Discount Date" := GenJnlLine."Pmt. Discount Date";
      "Applies-to ID" := GenJnlLine."Applies-to ID";
      "Journal Batch Name" := GenJnlLine."Journal Batch Name";
      "Reason Code" := GenJnlLine."Reason Code";
      "Direct Debit Mandate ID" := GenJnlLine."Direct Debit Mandate ID";
      "User ID" := USERID;
      "Bal. Account Type" := GenJnlLine."Bal. Account Type";
      "Bal. Account No." := GenJnlLine."Bal. Account No.";
      "No. Series" := GenJnlLine."Posting No. Series";
      "IC Partner Code" := GenJnlLine."IC Partner Code";
      Prepayment := GenJnlLine.Prepayment;
      "Recipient Bank Account" := GenJnlLine."Recipient Bank Account";
      "Message to Recipient" := GenJnlLine."Message to Recipient";
      "Applies-to Ext. Doc. No." := GenJnlLine."Applies-to Ext. Doc. No.";
      "Payment Method Code" := GenJnlLine."Payment Method Code";
      "Exported to Payment File" := GenJnlLine."Exported to Payment File";

      //**4PS.sn
      "Description 2" := GenJnlLine."Description 2";
      "Pmt. Discount Date 2" := GenJnlLine."Pmt. Discount Date 2";
      "Pmt. Discount Date 3" := GenJnlLine."Pmt. Discount Date 3";
      "Alternative Bill-to Address" := GenJnlLine."Alternative Bill-to Address";
      "Labor Amount (Subcontracting)" := GenJnlLine."Labor Amount (Subcontracting)";
      "Blocked Amount (Subcontracting" := GenJnlLine."Blocked Amount (Subcontracting";
      "Credit Restriction" := GenJnlLine."Credit Restriction";
      "Credit Restriction %" := GenJnlLine."Credit Restriction %";
      "Credit Restriction Date" := GenJnlLine."Credit Restriction Date";
      "Credit Restriction Amount" := GenJnlLine."Credit Restriction Amount";
      "Credit Restriction VAT Amount" := GenJnlLine."Credit Restriction VAT Amount";
      "Your Reference" := GenJnlLine."Your Reference";  //20060706-JE
      "Project No." := GenJnlLine."Job No.";
      "SEPA Return Code" := GenJnlLine."SEPA Return Code"; //DP00674
      "Batch Seq. No." := GenJnlLine."Batch Seq. No.";
      //**4PS.en

      OnAfterCopyCustLedgerEntryFromGenJnlLine(Rec,GenJnlLine);
    END;

    PROCEDURE RecalculateAmounts@26(FromCurrencyCode@1001 : Code[10];ToCurrencyCode@1002 : Code[10];PostingDate@1003 : Date);
    VAR
      CurrExchRate@1004 : Record 330;
    BEGIN
      IF ToCurrencyCode = FromCurrencyCode THEN
        EXIT;

      "Remaining Amount" :=
      //CurrExchRate.ExchangeAmount("Remaining Amount",FromCurrencyCode,ToCurrencyCode,PostingDate); //**4PS.o
        CurrExchRate.ExchangeAmount("Remaining Amount",FromCurrencyCode,ToCurrencyCode,PostingDate,TRUE); //**4PS.n
      "Remaining Pmt. Disc. Possible" :=
      //CurrExchRate.ExchangeAmount("Remaining Pmt. Disc. Possible",FromCurrencyCode,ToCurrencyCode,PostingDate); //**4PS.o
        CurrExchRate.ExchangeAmount("Remaining Pmt. Disc. Possible",FromCurrencyCode,ToCurrencyCode,PostingDate,TRUE); //**4PS.n
      //**4PS.sn
      "Remain. Pmt. Disc. Possible 2" :=
        CurrExchRate.ExchangeAmount("Remain. Pmt. Disc. Possible 2",FromCurrencyCode,ToCurrencyCode,PostingDate,TRUE);
      "Remain. Pmt. Disc. Possible 3" :=
        CurrExchRate.ExchangeAmount("Remain. Pmt. Disc. Possible 3",FromCurrencyCode,ToCurrencyCode,PostingDate,TRUE);
      //**4PS.en
      "Accepted Payment Tolerance" :=
      //CurrExchRate.ExchangeAmount("Accepted Payment Tolerance",FromCurrencyCode,ToCurrencyCode,PostingDate); //**4PS.o
        CurrExchRate.ExchangeAmount("Accepted Payment Tolerance",FromCurrencyCode,ToCurrencyCode,PostingDate,TRUE); //**4PS.n
      "Amount to Apply" :=
      //CurrExchRate.ExchangeAmount("Amount to Apply",FromCurrencyCode,ToCurrencyCode,PostingDate); //**4PS.o
        CurrExchRate.ExchangeAmount("Amount to Apply",FromCurrencyCode,ToCurrencyCode,PostingDate,TRUE); //**4PS.n
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCopyCustLedgerEntryFromGenJnlLine@8(VAR CustLedgerEntry@1000 : Record 21;VAR GenJournalLine@1001 : Record 81);
    BEGIN
    END;

    PROCEDURE DPA_SetDefaultDpmtFromNoSeries@1100000995(xRecRef@1100525002 : RecordRef);
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      xRecRef.SETTABLE(xRec);
      DPA_Management.SetDepartmentCodeNoSeries(
        TABLENAME,
        "Global Dimension 1 Code",
        "No. Series",
        xRec."No. Series" );
    END;

    LOCAL PROCEDURE DPA_OnInsert@1100000991();
    VAR
      Dimension1Code@1100528400 : Code[20];
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      Dimension1Code :=
        DPA_Management.GetNoSeriesDepartmentCode(
          "No. Series",
          xRec."No. Series",
          DATABASE::"Cust. Ledger Entry");
      IF Dimension1Code <> '' THEN
        "Global Dimension 1 Code" := Dimension1Code;

      IF "Global Dimension 1 Code" <> '' THEN BEGIN
        VALIDATE("Global Dimension 1 Code");
      END;
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(21) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 21');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Cust. Ledger Entry", "Global Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Global Dimension 1 Code");
    END;

    PROCEDURE EditDocuments@1100528702(DocumentTemplateTypeFilter@1210190003 : Text[250];ContactNo@1210190004 : Code[20];ContactPersonNo@1210190005 : Code[20];SendMail@1210190002 : Boolean;Recipient@1100528700 : Text[120]);
    VAR
      SalesHeader@1100528701 : Record 36;
      Job@1100528704 : Record 11072003;
      ServiceOrder@1100528702 : Record 11012823;
      ResponsibilityCenter@1100528705 : Record 5714;
      DocumentMailing@1210190000 : Codeunit 11012278;
      RecRef@1100525000 : RecordRef;
      DocumentLinkRIDs@1100525001 : ARRAY [5] OF RecordID;
    BEGIN
      //**4PS
      RecRef.GETTABLE(Rec);
      DocumentLinkRIDs[1] := RecRef.RECORDID;

      IF SalesHeader.GET("Document Type", "Document No.") THEN BEGIN
        RecRef.GETTABLE(SalesHeader);
        DocumentLinkRIDs[2] := RecRef.RECORDID;

        IF Job.GET(SalesHeader."Job No.") THEN BEGIN
          RecRef.GETTABLE(Job);
          DocumentLinkRIDs[3] := RecRef.RECORDID;
        END ELSE BEGIN
          IF SalesHeader."Service Order No." <> '' THEN BEGIN
            ServiceOrder.GET(SalesHeader."Service Order No.");
            RecRef.GETTABLE(ServiceOrder);
            DocumentLinkRIDs[3] := RecRef.RECORDID;
          END;
        END;

        IF ResponsibilityCenter.GET(SalesHeader."Responsibility Center") THEN BEGIN
          RecRef.GETTABLE(ResponsibilityCenter);
          DocumentLinkRIDs[4] := RecRef.RECORDID;
        END;
      END;

      DocumentMailing.EditDocuments(
        DocumentTemplateTypeFilter, DocumentLinkRIDs, '', ContactNo, ContactPersonNo, SendMail, Recipient);
    END;

    BEGIN
    {
      //20060706-4PS    : Added field [Your Reference]

      *** 4PSSE.I015 ***
      130718 Added fields "Sent to Collection" and "Sent to Collection Date"

      *** 4PSSE.I012 ***
      130711 Added fields "Amount ROT", "Sent to Tax Authorities", "Exported File Name" and "Rejcted from Tax Authorities Date";
      Version List=NAVW19.00.00.44365,NAVFI9.00.00.44365;
      Version List=NAVW19.00.00.44365,NAVDK9.00.00.44365;
    }
    END.
  }
}

