OBJECT Table 27 Item
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00.00.45243,4PS9.00,4PSSE;
  }
  PROPERTIES
  {
    Permissions=TableData 6216=r;
    DataCaptionFields=No.,Description;
    OnInsert=BEGIN
               "Last Date Modified" := TODAY; //**4PS.n
               "Modified by" := USERID;       //**4PS.n

               IF "No." = '' THEN BEGIN
                 GetInvtSetup;
                 InvtSetup.TESTFIELD("Item Nos.");
                 NoSeriesMgt.InitSeries(InvtSetup."Item Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               DimMgt.UpdateDefaultDim(
                 DATABASE::Item,"No.",
                 "Global Dimension 1 Code","Global Dimension 2 Code");

               //**4PS.sn
               ExchangeFSA('I');
               ExchangeMOB('I', COMPANYNAME);
               CentrManagementCU.EditItem(Rec,1,xRec);
               //**4PS.en
               //**4PS Generated Code. Do Not Change.sn05
               DPA_OnInsert;
               //**4PS Generated Code.en05
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;
               "Modified by" := USERID; //**4PS Call C006789

               PlanningAssignment.ItemChange(Rec,xRec);

               //**4PS.sn
               ExchangeFSA('M');
               ExchangeMOB('M', COMPANYNAME);
               IF ItemSetup.READPERMISSION THEN BEGIN
                 ItemSetup.GET;
                 IF ItemSetup."Adjust Item Description" = ItemSetup."Adjust Item Description"::ToUpper THEN
                   Description := UPPERCASE(Description);
                 IF ItemSetup."Adjust Item Description" = ItemSetup."Adjust Item Description"::ToLower THEN
                   Description := LOWERCASE(Description);
               END;
               CentrManagementCU.EditItem(Rec,2,xRec);
               //**4PS.en
             END;

    OnDelete=VAR
               BinContent@1000 : Record 7302;
               ItemCrossReference@1001 : Record 5717;
               SocialListeningSearchTopic@1002 : Record 871;
               ItemFeature@1100485000 : Record 11020301;
               PrefVendor@1100485001 : Record 11012318;
               lvItemSalesBuyBackRateRec@1100485002 : Record 11020318;
               ProjInvEntry@1100525000 : Record 11012670;
               StandardObject@1100528600 : Record 11020334;
               ServiceObject@1100528601 : Record 11071691;
               ItemInspectionType@1100525001 : Record 11229885;
             BEGIN
               CheckJournalsAndWorksheets(0);
               CheckDocuments(0);

               MoveEntries.MoveItemEntries(Rec);

               ServiceItem.RESET;
               ServiceItem.SETRANGE("Item No.","No.");
               IF ServiceItem.FIND('-') THEN
                 REPEAT
                   ServiceItem.VALIDATE("Item No.",'');
                   ServiceItem.MODIFY(TRUE);
                 UNTIL ServiceItem.NEXT = 0;

               //**4PS.sn
               ProjInvEntry.SETCURRENTKEY("Item No.");
               ProjInvEntry.SETRANGE("Item No.", "No.");
               IF ProjInvEntry.FINDFIRST THEN
                 ERROR(Text023,TABLECAPTION,"No.",ProjInvEntry.TABLECAPTION);  //db, 18-06-14: C012780
               //**4PS.en

               ItemBudgetEntry.SETCURRENTKEY("Analysis Area","Budget Name","Item No.");
               ItemBudgetEntry.SETRANGE("Item No.","No.");
               ItemBudgetEntry.DELETEALL(TRUE);

               ItemSub.RESET;
               ItemSub.SETRANGE(Type,ItemSub.Type::Item);
               ItemSub.SETRANGE("No.","No.");
               ItemSub.DELETEALL;

               ItemSub.RESET;
               ItemSub.SETRANGE("Substitute Type",ItemSub."Substitute Type"::Item);
               ItemSub.SETRANGE("Substitute No.","No.");
               ItemSub.DELETEALL;

               SKU.RESET;
               SKU.SETCURRENTKEY("Item No.");
               SKU.SETRANGE("Item No.","No.");
               SKU.DELETEALL;

               NonstockItemMgt.NonstockItemDel(Rec);
               CommentLine.SETRANGE("Table Name",CommentLine."Table Name"::Item);
               CommentLine.SETRANGE("No.","No.");
               CommentLine.DELETEALL;

               ItemVend.SETCURRENTKEY("Item No.");
               ItemVend.SETRANGE("Item No.","No.");
               ItemVend.DELETEALL;

               SalesPrice.SETRANGE("Item No.","No.");
               SalesPrice.DELETEALL;

               SalesLineDisc.SETRANGE(Type,SalesLineDisc.Type::Item);
               SalesLineDisc.SETRANGE(Code,"No.");
               SalesLineDisc.DELETEALL;

               SalesPrepmtPct.SETRANGE("Item No.","No.");
               SalesPrepmtPct.DELETEALL;

               PurchPrice.SETRANGE("Item No.","No.");
               PurchPrice.DELETEALL;

               PurchLineDisc.SETRANGE("Item No.","No.");
               PurchLineDisc.DELETEALL;

               PurchPrepmtPct.SETRANGE("Item No.","No.");
               PurchPrepmtPct.DELETEALL;

               ItemTranslation.SETRANGE("Item No.","No.");
               ItemTranslation.DELETEALL;

               ItemUnitOfMeasure.SETRANGE("Item No.","No.");
               ItemUnitOfMeasure.DELETEALL;

               ItemVariant.SETRANGE("Item No.","No.");
               ItemVariant.DELETEALL;

               ExtTextHeader.SETRANGE("Table Name",ExtTextHeader."Table Name"::Item);
               ExtTextHeader.SETRANGE("No.","No.");
               ExtTextHeader.DELETEALL(TRUE);

               ItemAnalysisViewEntry.SETRANGE("Item No.","No.");
               ItemAnalysisViewEntry.DELETEALL;

               ItemAnalysisBudgViewEntry.SETRANGE("Item No.","No.");
               ItemAnalysisBudgViewEntry.DELETEALL;

               PlanningAssignment.SETRANGE("Item No.","No.");
               PlanningAssignment.DELETEALL;

               BOMComp.RESET;
               BOMComp.SETRANGE("Parent Item No.","No.");
               BOMComp.DELETEALL;

               TroubleshSetup.RESET;
               TroubleshSetup.SETRANGE(Type,TroubleshSetup.Type::Item);
               TroubleshSetup.SETRANGE("No.","No.");
               TroubleshSetup.DELETEALL;

               ResSkillMgt.DeleteItemResSkills("No.");
               DimMgt.DeleteDefaultDim(DATABASE::Item,"No.");

               ItemIdent.RESET;
               ItemIdent.SETCURRENTKEY("Item No.");
               ItemIdent.SETRANGE("Item No.","No.");
               ItemIdent.DELETEALL;

               ServiceItemComponent.RESET;
               ServiceItemComponent.SETRANGE(Type,ServiceItemComponent.Type::Item);
               ServiceItemComponent.SETRANGE("No.","No.");
               ServiceItemComponent.MODIFYALL("No.",'');

               BinContent.SETCURRENTKEY("Item No.");
               BinContent.SETRANGE("Item No.","No.");
               BinContent.DELETEALL;

               ItemCrossReference.SETRANGE("Item No.","No.");
               ItemCrossReference.DELETEALL;

               IF NOT SocialListeningSearchTopic.ISEMPTY THEN BEGIN
                 SocialListeningSearchTopic.FindSearchTopic(SocialListeningSearchTopic."Source Type"::Item,"No.");
                 SocialListeningSearchTopic.DELETEALL;
               END;
               //**4PS.sn
               IF ItemRelRec.GET("No.") THEN
                 ItemRelRec.DELETE;

               ItemFeature.SETRANGE("Item No.", "No.");
               ItemFeature.DELETEALL;

               PrefVendor.SETRANGE(Type, PrefVendor.Type::"Navision Item");
               PrefVendor.SETRANGE("Navision Item", "No.");
               IF PrefVendor.FINDFIRST THEN
                 PrefVendor.DELETE;

               lvItemSalesBuyBackRateRec.SETRANGE("Item No.", "No.");
               lvItemSalesBuyBackRateRec.DELETEALL;

               ItemInspectionType.SETRANGE("Item No.", "No.");
               ItemInspectionType.DELETEALL;

               StandardObject.SETRANGE("Item No.", "No.");
               StandardObject.MODIFYALL("Item No.", '', TRUE);

               ServiceObject.SETRANGE("Item No.", "No.");
               ServiceObject.MODIFYALL("Item No.", '', TRUE);

               ExchangeFSA('D');  //**4PS.n
               ExchangeMOB('D', COMPANYNAME);  //**4PS.n

               CentrManagementCU.EditItem(Rec,4,xRec);
               //**4PS.en
             END;

    OnRename=BEGIN
               "Last Date Modified" := TODAY;
               "Modified by" := USERID; //**4PS Call C006789

               ExchangeFSA('R');  //**4PS.n

               //**4PS.sn
               IF NOT SkipCentralDataMgtInOnRename THEN BEGIN
                 ExchangeMOB('R', COMPANYNAME);
                 CentrManagementCU.EditItem(Rec, 3, xRec);
               END;
               //**4PS.en
             END;

    CaptionML=ENU=Item;
    LookupPageID=Page31;
    DrillDownPageID=Page31;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;AltSearchField=Search Description;
                                                   OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  GetInvtSetup;
                                                                  NoSeriesMgt.TestManual(InvtSetup."Item Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 2   ;   ;No. 2               ;Code20        ;CaptionML=ENU=No. 2 }
    { 3   ;   ;Description         ;Text50        ;OnValidate=VAR
                                                                BomLineRec@1100485000 : Record 90;
                                                                ProdLineRec@1100485001 : Record 99000772;
                                                              BEGIN
                                                                IF ("Search Description" = UPPERCASE(xRec.Description)) OR ("Search Description" = '') THEN
                                                                  "Search Description" := Description;

                                                                IF "Created From Nonstock Item" THEN BEGIN
                                                                  NonstockItem.SETCURRENTKEY("Item No.");
                                                                  NonstockItem.SETRANGE("Item No.","No.");
                                                                  IF NonstockItem.FINDFIRST THEN
                                                                    IF NonstockItem.Description = '' THEN BEGIN
                                                                      NonstockItem.Description := Description;
                                                                      NonstockItem.MODIFY;
                                                                    END;
                                                                END;

                                                                //**4PS.sn
                                                                IF BomLineRec.READPERMISSION THEN BEGIN
                                                                  BomLineRec.SETCURRENTKEY(Type, "No.");
                                                                  BomLineRec.SETRANGE(Type, BomLineRec.Type::Item);
                                                                  BomLineRec.SETRANGE("No.", "No.");
                                                                  IF BomLineRec.FIND('-') THEN BEGIN
                                                                    REPEAT
                                                                      BomLineRec.Description := Description;
                                                                      BomLineRec.MODIFY;
                                                                    UNTIL BomLineRec.NEXT = 0;
                                                                  END;
                                                                END;

                                                                IF ProdLineRec.READPERMISSION THEN BEGIN
                                                                  ProdLineRec.SETCURRENTKEY(Type, "No.");
                                                                  ProdLineRec.SETRANGE(Type, ProdLineRec.Type::Item);
                                                                  ProdLineRec.SETRANGE("No.", "No.");
                                                                  IF ProdLineRec.FIND('-') THEN BEGIN
                                                                    REPEAT
                                                                      ProdLineRec.Description := Description;
                                                                      ProdLineRec.MODIFY;
                                                                    UNTIL ProdLineRec.NEXT = 0;
                                                                  END;
                                                                END;
                                                                //**4PS.en
                                                              END;

                                                   CaptionML=ENU=Description;
                                                   Description=4PS: 30->50 }
    { 4   ;   ;Search Description  ;Code50        ;CaptionML=ENU=Search Description }
    { 5   ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2;
                                                   Description=4PS: 30->50 }
    { 6   ;   ;Assembly BOM        ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("BOM Component" WHERE (Parent Item No.=FIELD(No.)));
                                                   CaptionML=ENU=Assembly BOM;
                                                   Editable=No }
    { 8   ;   ;Base Unit of Measure;Code10        ;TableRelation="Unit of Measure";
                                                   OnValidate=VAR
                                                                UnitOfMeasure@1000 : Record 204;
                                                              BEGIN
                                                                IF "Base Unit of Measure" <> xRec."Base Unit of Measure" THEN BEGIN
                                                                  TestNoOpenEntriesExist(FIELDCAPTION("Base Unit of Measure"));

                                                                  "Sales Unit of Measure" := "Base Unit of Measure";
                                                                  "Purch. Unit of Measure" := "Base Unit of Measure";
                                                                  IF "Base Unit of Measure" <> '' THEN BEGIN
                                                                    UnitOfMeasure.GET("Base Unit of Measure");

                                                                    IF NOT ItemUnitOfMeasure.GET("No.","Base Unit of Measure") THEN BEGIN
                                                                      ItemUnitOfMeasure.INIT;
                                                                      ItemUnitOfMeasure.VALIDATE("Item No.","No.");
                                                                      ItemUnitOfMeasure.VALIDATE(Code,"Base Unit of Measure");
                                                                      ItemUnitOfMeasure."Qty. per Unit of Measure" := 1;
                                                                      ItemUnitOfMeasure.INSERT;
                                                                    END ELSE BEGIN
                                                                      IF ItemUnitOfMeasure."Qty. per Unit of Measure" <> 1 THEN
                                                                        ERROR(STRSUBSTNO(BaseUnitOfMeasureQtyMustBeOneErr,"Base Unit of Measure",ItemUnitOfMeasure."Qty. per Unit of Measure"));
                                                                    END;
                                                                  END;
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Base Unit of Measure }
    { 9   ;   ;Price Unit Conversion;Integer      ;CaptionML=ENU=Price Unit Conversion }
    { 10  ;   ;Type                ;Option        ;OnValidate=VAR
                                                                ItemLedgEntry@1000 : Record 32;
                                                              BEGIN
                                                                ItemLedgEntry.RESET;
                                                                ItemLedgEntry.SETCURRENTKEY("Item No.");
                                                                ItemLedgEntry.SETRANGE("Item No.","No.");
                                                                IF NOT ItemLedgEntry.ISEMPTY THEN
                                                                  ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",ItemLedgEntry.TABLECAPTION);

                                                                CheckJournalsAndWorksheets(FIELDNO(Type));
                                                                CheckDocuments(FIELDNO(Type));
                                                                IF Type = Type::Service THEN BEGIN
                                                                  CALCFIELDS("Assembly BOM");
                                                                  TESTFIELD("Assembly BOM",FALSE);

                                                                  CALCFIELDS("Stockkeeping Unit Exists");
                                                                  TESTFIELD("Stockkeeping Unit Exists",FALSE);

                                                                  VALIDATE("Assembly Policy","Assembly Policy"::"Assemble-to-Stock");
                                                                  VALIDATE("Replenishment System","Replenishment System"::Purchase);
                                                                  VALIDATE(Reserve,Reserve::Never);
                                                                  VALIDATE("Inventory Posting Group",'');
                                                                  VALIDATE("Item Tracking Code",'');
                                                                  VALIDATE("Costing Method","Costing Method"::FIFO);
                                                                  VALIDATE("Production BOM No.",'');
                                                                  VALIDATE("Routing No.",'');
                                                                  VALIDATE("Reordering Policy","Reordering Policy"::" ");
                                                                  VALIDATE("Order Tracking Policy","Order Tracking Policy"::None);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Inventory,Service;
                                                   OptionString=Inventory,Service }
    { 11  ;   ;Inventory Posting Group;Code10     ;TableRelation="Inventory Posting Group";
                                                   OnValidate=BEGIN
                                                                IF "Inventory Posting Group" <> '' THEN
                                                                  TESTFIELD(Type,Type::Inventory);
                                                              END;

                                                   CaptionML=ENU=Inventory Posting Group }
    { 12  ;   ;Shelf No.           ;Code20        ;TableRelation="Shelf per Location".Code;
                                                   OnValidate=VAR
                                                                InvSetup@1100485002 : Record 313;
                                                                CompInfo@1100485001 : Record 79;
                                                                ShelfRec@1100485000 : Record 11020241;
                                                              BEGIN
                                                                //**4PS
                                                                InvSetup.GET;
                                                                CompInfo.GET;
                                                                IF "Shelf No." <> '' THEN BEGIN
                                                                  IF InvSetup."Shelfs by Location" = FALSE THEN  //db, 30-10-07
                                                                    ShelfRec.SETRANGE("Location Code", CompInfo."Location Code");
                                                                  ShelfRec.SETRANGE(Code, "Shelf No.");
                                                                  ShelfRec.FIND('-');
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Shelf No. }
    { 14  ;   ;Item Disc. Group    ;Code20        ;TableRelation="Item Discount Group";
                                                   CaptionML=ENU=Item Disc. Group }
    { 15  ;   ;Allow Invoice Disc. ;Boolean       ;InitValue=Yes;
                                                   CaptionML=ENU=Allow Invoice Disc. }
    { 16  ;   ;Statistics Group    ;Integer       ;CaptionML=ENU=Statistics Group }
    { 17  ;   ;Commission Group    ;Integer       ;CaptionML=ENU=Commission Group }
    { 18  ;   ;Unit Price          ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Price/Profit Calculation");
                                                              END;

                                                   CaptionML=ENU=Unit Price;
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 19  ;   ;Price/Profit Calculation;Option    ;OnValidate=BEGIN
                                                                CASE "Price/Profit Calculation" OF
                                                                  "Price/Profit Calculation"::"Profit=Price-Cost":
                                                                    IF "Unit Price" <> 0 THEN
                                                                      IF "Unit Cost" = 0 THEN
                                                                        "Profit %" := 0
                                                                      ELSE
                                                                        "Profit %" :=
                                                                          ROUND(
                                                                            100 * (1 - "Unit Cost" /
                                                                                   ("Unit Price" / (1 + CalcVAT))),0.00001)
                                                                    ELSE
                                                                      "Profit %" := 0;
                                                                  "Price/Profit Calculation"::"Price=Cost+Profit":
                                                                    IF "Profit %" < 100 THEN BEGIN
                                                                      GetGLSetup;
                                                                      "Unit Price" :=
                                                                        ROUND(
                                                                          ("Unit Cost" / (1 - "Profit %" / 100)) *
                                                                          (1 + CalcVAT),
                                                                          GLSetup."Unit-Amount Rounding Precision");
                                                                    END;
                                                                  //**4PS.sn
                                                                  "Price/Profit Calculation"::"Cost=Price-Profit":
                                                                    BEGIN
                                                                      GetGLSetup;
                                                                      "Unit Cost" :=
                                                                        ROUND(
                                                                          "Unit Price" * (1 - "Profit %" / 100) / (1 + CalcVAT),
                                                                          GLSetup."Unit-Amount Rounding Precision");
                                                                      IF CurrFieldNo <> 0 THEN BEGIN
                                                                        "Last Direct Cost" := "Unit Cost";  //db, 14-04-04
                                                                        IF "Unit Cost" <> xRec."Unit Cost" THEN  //db, 18-03-03 because of superfluous message as a result of changing Prod. Posting Group
                                                                          VALIDATE("Unit Cost");
                                                                      END;
                                                                    END;
                                                                  //**4PS.en
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Price/Profit Calculation;
                                                   OptionCaptionML=ENU="Profit=Price-Cost,Price=Cost+Profit,No Relationship,Cost=Price-Profit";
                                                   OptionString=Profit=Price-Cost,Price=Cost+Profit,No Relationship,Cost=Price-Profit }
    { 20  ;   ;Profit %            ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Price/Profit Calculation");
                                                              END;

                                                   CaptionML=ENU=Profit %;
                                                   DecimalPlaces=0:5 }
    { 21  ;   ;Costing Method      ;Option        ;InitValue=Standard;
                                                   OnValidate=BEGIN
                                                                IF "Costing Method" = xRec."Costing Method" THEN
                                                                  EXIT;

                                                                IF "Costing Method" <> "Costing Method"::FIFO THEN
                                                                  TESTFIELD(Type,Type::Inventory);

                                                                IF "Costing Method" = "Costing Method"::Specific THEN BEGIN
                                                                  TESTFIELD("Item Tracking Code");

                                                                  ItemTrackingCode.GET("Item Tracking Code");
                                                                  IF NOT ItemTrackingCode."SN Specific Tracking" THEN
                                                                    ERROR(
                                                                      Text018,
                                                                      ItemTrackingCode.FIELDCAPTION("SN Specific Tracking"),
                                                                      FORMAT(TRUE),ItemTrackingCode.TABLECAPTION,ItemTrackingCode.Code,
                                                                      FIELDCAPTION("Costing Method"),"Costing Method");
                                                                END;

                                                                TestNoEntriesExist(FIELDCAPTION("Costing Method"),SkipMess);  //**4PS.n

                                                                ItemCostMgt.UpdateUnitCost(Rec,'','',0,0,FALSE,FALSE,TRUE,FIELDNO("Costing Method"));
                                                              END;

                                                   CaptionML=ENU=Costing Method;
                                                   OptionCaptionML=ENU=FIFO,LIFO,Specific,Average,Standard;
                                                   OptionString=FIFO,LIFO,Specific,Average,Standard }
    { 22  ;   ;Unit Cost           ;Decimal       ;OnValidate=BEGIN
                                                                //**4PS.sn
                                                                IF (CurrFieldNo = FIELDNO("Unit Cost")) AND
                                                                   (("Costing Method" = "Costing Method"::Standard) OR
                                                                    ("Price/Profit Calculation" = "Price/Profit Calculation"::"Cost=Price-Profit"))
                                                                THEN
                                                                  FIELDERROR("Unit Cost", Text11012002);
                                                                //**4PS.en

                                                                IF "Costing Method" = "Costing Method"::Standard THEN
                                                                //**4PS.sn
                                                                IF (CurrFieldNo = FIELDNO("Unit Cost")) AND
                                                                   (("Costing Method" = "Costing Method"::Standard) OR
                                                                    ("Price/Profit Calculation" = "Price/Profit Calculation"::"Cost=Price-Profit"))
                                                                THEN
                                                                  FIELDERROR("Unit Cost", Text11012002);
                                                                //**4PS.en

                                                                IF "Costing Method" = "Costing Method"::Standard THEN
                                                                  VALIDATE("Standard Cost","Unit Cost")
                                                                ELSE
                                                                  TestNoEntriesExist(FIELDCAPTION("Unit Cost"),SkipMess);  //**4PS.n

                                                                //**4PS.sn
                                                                ItemCostMgt.UpdateSKUFromItem(Rec, FIELDNO("Unit Cost"));  //**4PS.n
                                                                IF "Price/Profit Calculation" < "Price/Profit Calculation"::"No Relationship" THEN
                                                                  //beware of recursion between validate triggers //db, 31-10-05 (melding 7121)
                                                                //**4PS.en
                                                                  VALIDATE("Price/Profit Calculation");
                                                              END;

                                                   CaptionML=ENU=Unit Cost;
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 24  ;   ;Standard Cost       ;Decimal       ;OnValidate=BEGIN
                                                                //**4PS.sn
                                                                IF (CurrFieldNo = FIELDNO("Standard Cost")) AND ("Price/Profit Calculation" = "Price/Profit Calculation"::"Cost=Price-Profit")
                                                                THEN
                                                                  FIELDERROR("Standard Cost", Text11012002);
                                                                //**4PS.en

                                                                IF ("Costing Method" = "Costing Method"::Standard) AND (CurrFieldNo <> 0) THEN
                                                                  IF NOT GUIALLOWED THEN BEGIN
                                                                    "Standard Cost" := xRec."Standard Cost";
                                                                    EXIT;
                                                                  END ELSE BEGIN  //**4PS.n
                                                                    TestNoEntriesExist(FIELDCAPTION("Standard Cost"),SkipMess);  //**4PS.n
                                                                    IF NOT
                                                                       CONFIRM(
                                                                         Text020 +
                                                                         Text021 +
                                                                         Text022,FALSE,
                                                                         FIELDCAPTION("Standard Cost"))
                                                                    THEN BEGIN
                                                                      "Standard Cost" := xRec."Standard Cost";
                                                                      EXIT;
                                                                    //**4PS.sn:
                                                                    END ELSE BEGIN
                                                                      CALCFIELDS("Item Vendor", "Item Manufacturer");
                                                                      IF "Item Vendor" + "Item Manufacturer" = '' THEN
                                                                        VALIDATE("Last Direct Cost", "Standard Cost");  //M11152
                                                                    //**4PS.en
                                                                    END;
                                                                  END;  //**4PS.n

                                                                ItemCostMgt.UpdateSKUFromItem(Rec, FIELDNO("Standard Cost"));  //**4PS.n
                                                                ItemCostMgt.UpdateUnitCost(Rec,'','',0,0,FALSE,FALSE,TRUE,FIELDNO("Standard Cost"));
                                                              END;

                                                   CaptionML=ENU=Standard Cost;
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 25  ;   ;Last Direct Cost    ;Decimal       ;OnValidate=BEGIN
                                                                //**4PS.sn
                                                                SkipMess := TRUE;
                                                                TestNoEntriesExist(FIELDCAPTION("Last Direct Cost"),SkipMess);  //db,16-07-08
                                                                IF SkipMess = FALSE THEN BEGIN
                                                                  "Unit Cost" := "Last Direct Cost";
                                                                  ItemCostMgt.UpdateSKUFromItem(Rec, FIELDNO("Unit Cost"));  //db, 20-01-10
                                                                  "Standard Cost" := "Last Direct Cost";
                                                                  ItemCostMgt.UpdateSKUFromItem(Rec, FIELDNO("Standard Cost"));  //db, 20-01-10
                                                                END ELSE BEGIN
                                                                  SkipMess := FALSE;
                                                                END;
                                                                ItemCostMgt.UpdateSKUFromItem(Rec, FIELDNO("Last Direct Cost"));
                                                                IF CurrFieldNo = FIELDNO("Last Direct Cost") THEN BEGIN
                                                                  "Source Revaluation" := USERID;
                                                                END;
                                                                //**4PS.en
                                                              END;

                                                   CaptionML=ENU=Last Direct Cost;
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 28  ;   ;Indirect Cost %     ;Decimal       ;OnValidate=BEGIN
                                                                ItemCostMgt.UpdateUnitCost(Rec,'','',0,0,FALSE,FALSE,TRUE,FIELDNO("Indirect Cost %"));
                                                              END;

                                                   CaptionML=ENU=Indirect Cost %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 29  ;   ;Cost is Adjusted    ;Boolean       ;InitValue=Yes;
                                                   CaptionML=ENU=Cost is Adjusted;
                                                   Editable=No }
    { 30  ;   ;Allow Online Adjustment;Boolean    ;InitValue=Yes;
                                                   CaptionML=ENU=Allow Online Adjustment;
                                                   Editable=No }
    { 31  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                IF (xRec."Vendor No." <> "Vendor No.") AND
                                                                   ("Vendor No." <> '')
                                                                THEN
                                                                  IF Vend.GET("Vendor No.") THEN
                                                                    "Lead Time Calculation" := Vend."Lead Time Calculation";

                                                                //**4PS.sn
                                                                ItemCostMgt.UpdateSKUFromItem(Rec, FIELDNO("Vendor No."));  //db, 03-09-12: 19781
                                                                UpdateItemVendor(Rec, xRec);  //db, 03-09-12: 19781
                                                                //**4PS.en
                                                              END;

                                                   ValidateTableRelation=Yes;
                                                   TestTableRelation=Yes;
                                                   CaptionML=ENU=Vendor No. }
    { 32  ;   ;Vendor Item No.     ;Text20        ;OnValidate=BEGIN
                                                                //**4PS.sn
                                                                ItemCostMgt.UpdateSKUFromItem(Rec, FIELDNO("Vendor Item No."));  //db, 03-09-12: 19781
                                                                UpdateItemVendor(Rec, xRec);  //db, 03-09-12: 19781
                                                                //**4PS.en
                                                              END;

                                                   CaptionML=ENU=Vendor Item No. }
    { 33  ;   ;Lead Time Calculation;DateFormula  ;AccessByPermission=TableData 120=R;
                                                   CaptionML=ENU=Lead Time Calculation }
    { 34  ;   ;Reorder Point       ;Decimal       ;AccessByPermission=TableData 244=R;
                                                   CaptionML=ENU=Reorder Point;
                                                   DecimalPlaces=0:5 }
    { 35  ;   ;Maximum Inventory   ;Decimal       ;AccessByPermission=TableData 244=R;
                                                   CaptionML=ENU=Maximum Inventory;
                                                   DecimalPlaces=0:5 }
    { 36  ;   ;Reorder Quantity    ;Decimal       ;AccessByPermission=TableData 244=R;
                                                   CaptionML=ENU=Reorder Quantity;
                                                   DecimalPlaces=0:5 }
    { 37  ;   ;Alternative Item No.;Code20        ;TableRelation=Item;
                                                   CaptionML=ENU=Alternative Item No. }
    { 38  ;   ;Unit List Price     ;Decimal       ;CaptionML=ENU=Unit List Price;
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 39  ;   ;Duty Due %          ;Decimal       ;CaptionML=ENU=Duty Due %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 40  ;   ;Duty Code           ;Code10        ;CaptionML=ENU=Duty Code }
    { 41  ;   ;Gross Weight        ;Decimal       ;CaptionML=ENU=Gross Weight;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 42  ;   ;Net Weight          ;Decimal       ;CaptionML=ENU=Net Weight;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 43  ;   ;Units per Parcel    ;Decimal       ;CaptionML=ENU=Units per Parcel;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 44  ;   ;Unit Volume         ;Decimal       ;CaptionML=ENU=Unit Volume;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 45  ;   ;Durability          ;Code10        ;CaptionML=ENU=Durability }
    { 46  ;   ;Freight Type        ;Code10        ;CaptionML=ENU=Freight Type }
    { 47  ;   ;Tariff No.          ;Code20        ;TableRelation="Tariff Number";
                                                   CaptionML=ENU=Tariff No. }
    { 48  ;   ;Duty Unit Conversion;Decimal       ;CaptionML=ENU=Duty Unit Conversion;
                                                   DecimalPlaces=0:5 }
    { 49  ;   ;Country/Region Purchased Code;Code10;
                                                   TableRelation=Country/Region;
                                                   CaptionML=ENU=Country/Region Purchased Code }
    { 50  ;   ;Budget Quantity     ;Decimal       ;CaptionML=ENU=Budget Quantity;
                                                   DecimalPlaces=0:5 }
    { 51  ;   ;Budgeted Amount     ;Decimal       ;CaptionML=ENU=Budgeted Amount;
                                                   AutoFormatType=1 }
    { 52  ;   ;Budget Profit       ;Decimal       ;CaptionML=ENU=Budget Profit;
                                                   AutoFormatType=1 }
    { 53  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Comment Line" WHERE (Table Name=CONST(Item),
                                                                                           No.=FIELD(No.)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 54  ;   ;Blocked             ;Boolean       ;OnValidate=BEGIN
                                                                //**4PS.n
                                                                IF Blocked THEN BEGIN
                                                                  "Purchase Blocked" := TRUE;
                                                                  "Inventory Blocked" := TRUE; // 22793.n
                                                                  "Advice Blocked" := TRUE;
                                                                  "Sales Blocked" := TRUE;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Blocked }
    { 55  ;   ;Cost is Posted to G/L;Boolean      ;FieldClass=FlowField;
                                                   CalcFormula=-Exist("Post Value Entry to G/L" WHERE (Item No.=FIELD(No.)));
                                                   CaptionML=ENU=Cost is Posted to G/L;
                                                   Editable=No }
    { 62  ;   ;Last Date Modified  ;Date          ;CaptionML=ENU=Last Date Modified;
                                                   Editable=No }
    { 64  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Date Filter }
    { 65  ;   ;Global Dimension 1 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Global Dimension 1 Filter;
                                                   CaptionClass='1,3,1' }
    { 66  ;   ;Global Dimension 2 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Global Dimension 2 Filter;
                                                   CaptionClass='1,3,2' }
    { 67  ;   ;Location Filter     ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation=Location;
                                                   CaptionML=ENU=Location Filter }
    { 68  ;   ;Inventory           ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Ledger Entry".Quantity WHERE (Item No.=FIELD(No.),
                                                                                                       Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                       Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                       Location Code=FIELD(Location Filter),
                                                                                                       Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                       Variant Code=FIELD(Variant Filter),
                                                                                                       Lot No.=FIELD(Lot No. Filter),
                                                                                                       Serial No.=FIELD(Serial No. Filter)));
                                                   CaptionML=ENU=Inventory;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 69  ;   ;Net Invoiced Qty.   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Ledger Entry"."Invoiced Quantity" WHERE (Item No.=FIELD(No.),
                                                                                                                  Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                  Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                  Location Code=FIELD(Location Filter),
                                                                                                                  Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                  Variant Code=FIELD(Variant Filter),
                                                                                                                  Lot No.=FIELD(Lot No. Filter),
                                                                                                                  Serial No.=FIELD(Serial No. Filter)));
                                                   CaptionML=ENU=Net Invoiced Qty.;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 70  ;   ;Net Change          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Ledger Entry".Quantity WHERE (Item No.=FIELD(No.),
                                                                                                       Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                       Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                       Location Code=FIELD(Location Filter),
                                                                                                       Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                       Posting Date=FIELD(Date Filter),
                                                                                                       Variant Code=FIELD(Variant Filter),
                                                                                                       Lot No.=FIELD(Lot No. Filter),
                                                                                                       Serial No.=FIELD(Serial No. Filter)));
                                                   CaptionML=ENU=Net Change;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 71  ;   ;Purchases (Qty.)    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Ledger Entry"."Invoiced Quantity" WHERE (Entry Type=CONST(Purchase),
                                                                                                                  Item No.=FIELD(No.),
                                                                                                                  Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                  Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                  Location Code=FIELD(Location Filter),
                                                                                                                  Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                  Variant Code=FIELD(Variant Filter),
                                                                                                                  Posting Date=FIELD(Date Filter),
                                                                                                                  Lot No.=FIELD(Lot No. Filter),
                                                                                                                  Serial No.=FIELD(Serial No. Filter)));
                                                   CaptionML=ENU=Purchases (Qty.);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 72  ;   ;Sales (Qty.)        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Value Entry"."Invoiced Quantity" WHERE (Item Ledger Entry Type=CONST(Sale),
                                                                                                             Item No.=FIELD(No.),
                                                                                                             Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                             Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                             Location Code=FIELD(Location Filter),
                                                                                                             Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                             Variant Code=FIELD(Variant Filter),
                                                                                                             Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Sales (Qty.);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 73  ;   ;Positive Adjmt. (Qty.);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Ledger Entry"."Invoiced Quantity" WHERE (Entry Type=CONST(Positive Adjmt.),
                                                                                                                  Item No.=FIELD(No.),
                                                                                                                  Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                  Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                  Location Code=FIELD(Location Filter),
                                                                                                                  Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                  Variant Code=FIELD(Variant Filter),
                                                                                                                  Posting Date=FIELD(Date Filter),
                                                                                                                  Lot No.=FIELD(Lot No. Filter),
                                                                                                                  Serial No.=FIELD(Serial No. Filter)));
                                                   CaptionML=ENU=Positive Adjmt. (Qty.);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 74  ;   ;Negative Adjmt. (Qty.);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Item Ledger Entry"."Invoiced Quantity" WHERE (Entry Type=CONST(Negative Adjmt.),
                                                                                                                   Item No.=FIELD(No.),
                                                                                                                   Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                   Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                   Location Code=FIELD(Location Filter),
                                                                                                                   Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                   Variant Code=FIELD(Variant Filter),
                                                                                                                   Posting Date=FIELD(Date Filter),
                                                                                                                   Lot No.=FIELD(Lot No. Filter),
                                                                                                                   Serial No.=FIELD(Serial No. Filter)));
                                                   CaptionML=ENU=Negative Adjmt. (Qty.);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 77  ;   ;Purchases (LCY)     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Purchase Amount (Actual)" WHERE (Item Ledger Entry Type=CONST(Purchase),
                                                                                                                   Item No.=FIELD(No.),
                                                                                                                   Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                   Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                   Location Code=FIELD(Location Filter),
                                                                                                                   Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                   Variant Code=FIELD(Variant Filter),
                                                                                                                   Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Purchases (LCY);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 78  ;   ;Sales (LCY)         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Sales Amount (Actual)" WHERE (Item Ledger Entry Type=CONST(Sale),
                                                                                                                Item No.=FIELD(No.),
                                                                                                                Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                Location Code=FIELD(Location Filter),
                                                                                                                Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                Variant Code=FIELD(Variant Filter),
                                                                                                                Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Sales (LCY);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 79  ;   ;Positive Adjmt. (LCY);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Cost Amount (Actual)" WHERE (Item Ledger Entry Type=CONST(Positive Adjmt.),
                                                                                                               Item No.=FIELD(No.),
                                                                                                               Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                               Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                               Location Code=FIELD(Location Filter),
                                                                                                               Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                               Variant Code=FIELD(Variant Filter),
                                                                                                               Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Positive Adjmt. (LCY);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 80  ;   ;Negative Adjmt. (LCY);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Cost Amount (Actual)" WHERE (Item Ledger Entry Type=CONST(Negative Adjmt.),
                                                                                                               Item No.=FIELD(No.),
                                                                                                               Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                               Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                               Location Code=FIELD(Location Filter),
                                                                                                               Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                               Variant Code=FIELD(Variant Filter),
                                                                                                               Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Negative Adjmt. (LCY);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 83  ;   ;COGS (LCY)          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Value Entry"."Cost Amount (Actual)" WHERE (Item Ledger Entry Type=CONST(Sale),
                                                                                                                Item No.=FIELD(No.),
                                                                                                                Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                Location Code=FIELD(Location Filter),
                                                                                                                Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                Variant Code=FIELD(Variant Filter),
                                                                                                                Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=COGS (LCY);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 84  ;   ;Qty. on Purch. Order;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Outstanding Qty. (Base)" WHERE (Document Type=CONST(Order),
                                                                                                                    Item No.=FIELD(No.),
                                                                                                                    Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                    Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                    Location Code=FIELD(Location Filter),
                                                                                                                    Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                    Variant Code=FIELD(Variant Filter),
                                                                                                                    Expected Receipt Date=FIELD(Date Filter)));
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=ENU=Qty. on Purch. Order;
                                                   DecimalPlaces=0:5;
                                                   Description=[4PS: filter (type=item) removed, (item no.=no.)changed; key 2 (tabel 39) extended/HBK:  Must be key 5 (this key contains dimensions)!];
                                                   Editable=No }
    { 85  ;   ;Qty. on Sales Order ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Line"."Outstanding Qty. (Base)" WHERE (Document Type=CONST(Order),
                                                                                                                 Type=CONST(Item),
                                                                                                                 No.=FIELD(No.),
                                                                                                                 Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                 Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                 Location Code=FIELD(Location Filter),
                                                                                                                 Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                 Variant Code=FIELD(Variant Filter),
                                                                                                                 Shipment Date=FIELD(Date Filter)));
                                                   AccessByPermission=TableData 110=R;
                                                   CaptionML=ENU=Qty. on Sales Order;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 87  ;   ;Price Includes VAT  ;Boolean       ;OnValidate=VAR
                                                                VATPostingSetup@1000 : Record 325;
                                                                SalesSetup@1001 : Record 311;
                                                              BEGIN
                                                                IF "Price Includes VAT" THEN BEGIN
                                                                  SalesSetup.GET;
                                                                  IF SalesSetup."VAT Bus. Posting Gr. (Price)" <> '' THEN
                                                                    "VAT Bus. Posting Gr. (Price)" := SalesSetup."VAT Bus. Posting Gr. (Price)";
                                                                  VATPostingSetup.GET("VAT Bus. Posting Gr. (Price)","VAT Prod. Posting Group");
                                                                END;
                                                                VALIDATE("Price/Profit Calculation");
                                                              END;

                                                   CaptionML=ENU=Price Includes VAT }
    { 89  ;   ;Drop Shipment Filter;Boolean       ;FieldClass=FlowFilter;
                                                   AccessByPermission=TableData 223=R;
                                                   CaptionML=ENU=Drop Shipment Filter }
    { 90  ;   ;VAT Bus. Posting Gr. (Price);Code10;TableRelation="VAT Business Posting Group";
                                                   OnValidate=BEGIN
                                                                VALIDATE("Price/Profit Calculation");
                                                              END;

                                                   CaptionML=ENU=VAT Bus. Posting Gr. (Price) }
    { 91  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   OnValidate=BEGIN
                                                                IF xRec."Gen. Prod. Posting Group" <> "Gen. Prod. Posting Group" THEN BEGIN
                                                                  IF CurrFieldNo <> 0 THEN
                                                                    IF ProdOrderExist THEN
                                                                      IF NOT CONFIRM(
                                                                           Text024 +
                                                                           Text022,FALSE,
                                                                           FIELDCAPTION("Gen. Prod. Posting Group"))
                                                                      THEN BEGIN
                                                                        "Gen. Prod. Posting Group" := xRec."Gen. Prod. Posting Group";
                                                                        EXIT;
                                                                      END;

                                                                  IF GenProdPostingGrp.ValidateVatProdPostingGroup(GenProdPostingGrp,"Gen. Prod. Posting Group") THEN
                                                                    VALIDATE("VAT Prod. Posting Group",GenProdPostingGrp."Def. VAT Prod. Posting Group");
                                                                END;

                                                                VALIDATE("Price/Profit Calculation");
                                                              END;

                                                   CaptionML=ENU=Gen. Prod. Posting Group }
    { 92  ;   ;Picture             ;BLOB          ;CaptionML=ENU=Picture;
                                                   SubType=Bitmap }
    { 93  ;   ;Transferred (Qty.)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Ledger Entry"."Invoiced Quantity" WHERE (Entry Type=CONST(Transfer),
                                                                                                                  Item No.=FIELD(No.),
                                                                                                                  Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                  Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                  Location Code=FIELD(Location Filter),
                                                                                                                  Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                  Variant Code=FIELD(Variant Filter),
                                                                                                                  Posting Date=FIELD(Date Filter),
                                                                                                                  Lot No.=FIELD(Lot No. Filter),
                                                                                                                  Serial No.=FIELD(Serial No. Filter)));
                                                   CaptionML=ENU=Transferred (Qty.);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 94  ;   ;Transferred (LCY)   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Sales Amount (Actual)" WHERE (Item Ledger Entry Type=CONST(Transfer),
                                                                                                                Item No.=FIELD(No.),
                                                                                                                Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                Location Code=FIELD(Location Filter),
                                                                                                                Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                Variant Code=FIELD(Variant Filter),
                                                                                                                Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Transferred (LCY);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 95  ;   ;Country/Region of Origin Code;Code10;
                                                   TableRelation=Country/Region;
                                                   CaptionML=ENU=Country/Region of Origin Code }
    { 96  ;   ;Automatic Ext. Texts;Boolean       ;CaptionML=ENU=Automatic Ext. Texts }
    { 97  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 98  ;   ;Tax Group Code      ;Code10        ;TableRelation="Tax Group";
                                                   CaptionML=ENU=Tax Group Code }
    { 99  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   OnValidate=BEGIN
                                                                VALIDATE("Price/Profit Calculation");
                                                              END;

                                                   CaptionML=ENU=VAT Prod. Posting Group }
    { 100 ;   ;Reserve             ;Option        ;InitValue=Optional;
                                                   OnValidate=BEGIN
                                                                IF Reserve <> Reserve::Never THEN
                                                                  TESTFIELD(Type,Type::Inventory);
                                                              END;

                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=ENU=Reserve;
                                                   OptionCaptionML=ENU=Never,Optional,Always;
                                                   OptionString=Never,Optional,Always }
    { 101 ;   ;Reserved Qty. on Inventory;Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                Source Type=CONST(32),
                                                                                                                Source Subtype=CONST(0),
                                                                                                                Reservation Status=CONST(Reservation),
                                                                                                                Serial No.=FIELD(Serial No. Filter),
                                                                                                                Lot No.=FIELD(Lot No. Filter),
                                                                                                                Location Code=FIELD(Location Filter),
                                                                                                                Variant Code=FIELD(Variant Filter)));
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=ENU=Reserved Qty. on Inventory;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 102 ;   ;Reserved Qty. on Purch. Orders;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                Source Type=CONST(39),
                                                                                                                Source Subtype=CONST(1),
                                                                                                                Reservation Status=CONST(Reservation),
                                                                                                                Location Code=FIELD(Location Filter),
                                                                                                                Variant Code=FIELD(Variant Filter),
                                                                                                                Expected Receipt Date=FIELD(Date Filter)));
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=ENU=Reserved Qty. on Purch. Orders;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 103 ;   ;Reserved Qty. on Sales Orders;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=-Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                 Source Type=CONST(37),
                                                                                                                 Source Subtype=CONST(1),
                                                                                                                 Reservation Status=CONST(Reservation),
                                                                                                                 Location Code=FIELD(Location Filter),
                                                                                                                 Variant Code=FIELD(Variant Filter),
                                                                                                                 Shipment Date=FIELD(Date Filter)));
                                                   AccessByPermission=TableData 110=R;
                                                   CaptionML=ENU=Reserved Qty. on Sales Orders;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 105 ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   CaptionClass='1,1,1' }
    { 106 ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                               Cost Type=CONST(Material));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=ENU=Global Dimension 2 Code;
                                                   CaptionClass='1,1,2' }
    { 107 ;   ;Res. Qty. on Outbound Transfer;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=-Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                 Source Type=CONST(5741),
                                                                                                                 Source Subtype=CONST(0),
                                                                                                                 Reservation Status=CONST(Reservation),
                                                                                                                 Location Code=FIELD(Location Filter),
                                                                                                                 Variant Code=FIELD(Variant Filter),
                                                                                                                 Shipment Date=FIELD(Date Filter)));
                                                   AccessByPermission=TableData 5740=R;
                                                   CaptionML=ENU=Res. Qty. on Outbound Transfer;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 108 ;   ;Res. Qty. on Inbound Transfer;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                Source Type=CONST(5741),
                                                                                                                Source Subtype=CONST(1),
                                                                                                                Reservation Status=CONST(Reservation),
                                                                                                                Location Code=FIELD(Location Filter),
                                                                                                                Variant Code=FIELD(Variant Filter),
                                                                                                                Expected Receipt Date=FIELD(Date Filter)));
                                                   AccessByPermission=TableData 5740=R;
                                                   CaptionML=ENU=Res. Qty. on Inbound Transfer;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 109 ;   ;Res. Qty. on Sales Returns;Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                Source Type=CONST(37),
                                                                                                                Source Subtype=CONST(5),
                                                                                                                Reservation Status=CONST(Reservation),
                                                                                                                Location Code=FIELD(Location Filter),
                                                                                                                Variant Code=FIELD(Variant Filter),
                                                                                                                Shipment Date=FIELD(Date Filter)));
                                                   AccessByPermission=TableData 6660=R;
                                                   CaptionML=ENU=Res. Qty. on Sales Returns;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 110 ;   ;Res. Qty. on Purch. Returns;Decimal;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                 Source Type=CONST(39),
                                                                                                                 Source Subtype=CONST(5),
                                                                                                                 Reservation Status=CONST(Reservation),
                                                                                                                 Location Code=FIELD(Location Filter),
                                                                                                                 Variant Code=FIELD(Variant Filter),
                                                                                                                 Expected Receipt Date=FIELD(Date Filter)));
                                                   AccessByPermission=TableData 6650=R;
                                                   CaptionML=ENU=Res. Qty. on Purch. Returns;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 120 ;   ;Stockout Warning    ;Option        ;CaptionML=ENU=Stockout Warning;
                                                   OptionCaptionML=ENU=Default,No,Yes;
                                                   OptionString=Default,No,Yes }
    { 121 ;   ;Prevent Negative Inventory;Option  ;CaptionML=ENU=Prevent Negative Inventory;
                                                   OptionCaptionML=ENU=Default,No,Yes;
                                                   OptionString=Default,No,Yes }
    { 200 ;   ;Cost of Open Production Orders;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Line"."Cost Amount" WHERE (Status=FILTER(Planned|Firm Planned|Released),
                                                                                                           Item No.=FIELD(No.)));
                                                   CaptionML=ENU=Cost of Open Production Orders }
    { 521 ;   ;Application Wksh. User ID;Code128  ;CaptionML=ENU=Application Wksh. User ID }
    { 910 ;   ;Assembly Policy     ;Option        ;OnValidate=BEGIN
                                                                IF "Assembly Policy" = "Assembly Policy"::"Assemble-to-Order" THEN
                                                                  TESTFIELD("Replenishment System","Replenishment System"::Assembly);
                                                                IF Type = Type::Service THEN
                                                                  TESTFIELD("Assembly Policy","Assembly Policy"::"Assemble-to-Stock");
                                                              END;

                                                   AccessByPermission=TableData 90=R;
                                                   CaptionML=ENU=Assembly Policy;
                                                   OptionCaptionML=ENU=Assemble-to-Stock,Assemble-to-Order;
                                                   OptionString=Assemble-to-Stock,Assemble-to-Order }
    { 929 ;   ;Res. Qty. on Assembly Order;Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                Source Type=CONST(900),
                                                                                                                Source Subtype=CONST(1),
                                                                                                                Reservation Status=CONST(Reservation),
                                                                                                                Location Code=FIELD(Location Filter),
                                                                                                                Variant Code=FIELD(Variant Filter),
                                                                                                                Expected Receipt Date=FIELD(Date Filter)));
                                                   AccessByPermission=TableData 90=R;
                                                   CaptionML=ENU=Res. Qty. on Assembly Order;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 930 ;   ;Res. Qty. on  Asm. Comp.;Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                 Source Type=CONST(901),
                                                                                                                 Source Subtype=CONST(1),
                                                                                                                 Reservation Status=CONST(Reservation),
                                                                                                                 Location Code=FIELD(Location Filter),
                                                                                                                 Variant Code=FIELD(Variant Filter),
                                                                                                                 Shipment Date=FIELD(Date Filter)));
                                                   AccessByPermission=TableData 90=R;
                                                   CaptionML=ENU=Res. Qty. on  Asm. Comp.;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 977 ;   ;Qty. on Assembly Order;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Assembly Header"."Remaining Quantity (Base)" WHERE (Document Type=CONST(Order),
                                                                                                                        Item No.=FIELD(No.),
                                                                                                                        Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                        Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                        Location Code=FIELD(Location Filter),
                                                                                                                        Variant Code=FIELD(Variant Filter),
                                                                                                                        Due Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Qty. on Assembly Order;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 978 ;   ;Qty. on Asm. Component;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Assembly Line"."Remaining Quantity (Base)" WHERE (Document Type=CONST(Order),
                                                                                                                      Type=CONST(Item),
                                                                                                                      No.=FIELD(No.),
                                                                                                                      Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                      Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                      Location Code=FIELD(Location Filter),
                                                                                                                      Variant Code=FIELD(Variant Filter),
                                                                                                                      Due Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Qty. on Asm. Component;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 1001;   ;Qty. on Job Order   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Job Planning Line"."Remaining Qty. (Base)" WHERE (Status=CONST(Order),
                                                                                                                      Type=CONST(Item),
                                                                                                                      No.=FIELD(No.),
                                                                                                                      Location Code=FIELD(Location Filter),
                                                                                                                      Variant Code=FIELD(Variant Filter),
                                                                                                                      Planning Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Qty. on Job Order;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 1002;   ;Res. Qty. on Job Order;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                 Source Type=CONST(11020401),
                                                                                                                 Source Subtype=CONST(2),
                                                                                                                 Reservation Status=CONST(Reservation),
                                                                                                                 Location Code=FIELD(Location Filter),
                                                                                                                 Variant Code=FIELD(Variant Filter),
                                                                                                                 Shipment Date=FIELD(Date Filter)));
                                                   AccessByPermission=TableData 11072003=R;
                                                   CaptionML=ENU=Res. Qty. on Job Order;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 1217;   ;GTIN                ;Code14        ;CaptionML=ENU=GTIN;
                                                   Numeric=Yes }
    { 1700;   ;Default Deferral Template Code;Code10;
                                                   TableRelation="Deferral Template"."Deferral Code";
                                                   CaptionML=ENU=Default Deferral Template Code }
    { 5400;   ;Low-Level Code      ;Integer       ;CaptionML=ENU=Low-Level Code;
                                                   Editable=No }
    { 5401;   ;Lot Size            ;Decimal       ;AccessByPermission=TableData 5405=R;
                                                   CaptionML=ENU=Lot Size;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 5402;   ;Serial Nos.         ;Code10        ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF "Serial Nos." <> '' THEN
                                                                  TESTFIELD("Item Tracking Code");
                                                              END;

                                                   CaptionML=ENU=Serial Nos. }
    { 5403;   ;Last Unit Cost Calc. Date;Date     ;CaptionML=ENU=Last Unit Cost Calc. Date;
                                                   Editable=No }
    { 5404;   ;Rolled-up Material Cost;Decimal    ;CaptionML=ENU=Rolled-up Material Cost;
                                                   DecimalPlaces=2:5;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 5405;   ;Rolled-up Capacity Cost;Decimal    ;CaptionML=ENU=Rolled-up Capacity Cost;
                                                   DecimalPlaces=2:5;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 5407;   ;Scrap %             ;Decimal       ;AccessByPermission=TableData 5405=R;
                                                   CaptionML=ENU=Scrap %;
                                                   DecimalPlaces=0:2;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 5409;   ;Inventory Value Zero;Boolean       ;OnValidate=BEGIN
                                                                CheckForProductionOutput("No.");
                                                              END;

                                                   CaptionML=ENU=Inventory Value Zero }
    { 5410;   ;Discrete Order Quantity;Integer    ;CaptionML=ENU=Discrete Order Quantity;
                                                   MinValue=0 }
    { 5411;   ;Minimum Order Quantity;Decimal     ;OnValidate=BEGIN
                                                                //**4PS.n #T000419
                                                                IF ("Minimum Order Quantity" <> 0) AND
                                                                   ("Maximum Order Quantity" <> 0) AND
                                                                   ("Minimum Order Quantity" > "Maximum Order Quantity")
                                                                THEN
                                                                  ERROR(Text11012001, FIELDCAPTION("Minimum Order Quantity"), FIELDCAPTION("Maximum Order Quantity"));
                                                              END;

                                                   AccessByPermission=TableData 244=R;
                                                   CaptionML=ENU=Minimum Order Quantity;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 5412;   ;Maximum Order Quantity;Decimal     ;OnValidate=BEGIN
                                                                //**4PS.n #T000419
                                                                IF ("Minimum Order Quantity" <> 0) AND
                                                                   ("Maximum Order Quantity" <> 0) AND
                                                                   ("Maximum Order Quantity" < "Minimum Order Quantity")
                                                                THEN
                                                                  ERROR(Text11012000, FIELDCAPTION("Maximum Order Quantity"), FIELDCAPTION("Minimum Order Quantity"));
                                                              END;

                                                   AccessByPermission=TableData 244=R;
                                                   CaptionML=ENU=Maximum Order Quantity;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 5413;   ;Safety Stock Quantity;Decimal      ;AccessByPermission=TableData 244=R;
                                                   CaptionML=ENU=Safety Stock Quantity;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 5414;   ;Order Multiple      ;Decimal       ;AccessByPermission=TableData 244=R;
                                                   CaptionML=ENU=Order Multiple;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 5415;   ;Safety Lead Time    ;DateFormula   ;AccessByPermission=TableData 244=R;
                                                   CaptionML=ENU=Safety Lead Time }
    { 5417;   ;Flushing Method     ;Option        ;AccessByPermission=TableData 5405=R;
                                                   CaptionML=ENU=Flushing Method;
                                                   OptionCaptionML=ENU=Manual,Forward,Backward,Pick + Forward,Pick + Backward;
                                                   OptionString=Manual,Forward,Backward,Pick + Forward,Pick + Backward }
    { 5419;   ;Replenishment System;Option        ;OnValidate=BEGIN
                                                                IF "Replenishment System" <> "Replenishment System"::Assembly THEN
                                                                  TESTFIELD("Assembly Policy","Assembly Policy"::"Assemble-to-Stock");
                                                                IF "Replenishment System" <> "Replenishment System"::Purchase THEN
                                                                  TESTFIELD(Type,Type::Inventory);
                                                              END;

                                                   AccessByPermission=TableData 244=R;
                                                   CaptionML=ENU=Replenishment System;
                                                   OptionCaptionML=ENU=Purchase,Prod. Order,,Assembly;
                                                   OptionString=Purchase,Prod. Order,,Assembly }
    { 5420;   ;Scheduled Receipt (Qty.);Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Line"."Remaining Qty. (Base)" WHERE (Status=FILTER(Firm Planned|Released),
                                                                                                                     Item No.=FIELD(No.),
                                                                                                                     Variant Code=FIELD(Variant Filter),
                                                                                                                     Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                     Location Code=FIELD(Location Filter),
                                                                                                                     Due Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Scheduled Receipt (Qty.);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5421;   ;Scheduled Need (Qty.);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Component"."Remaining Qty. (Base)" WHERE (Status=FILTER(Planned..Released),
                                                                                                                          Item No.=FIELD(No.),
                                                                                                                          Variant Code=FIELD(Variant Filter),
                                                                                                                          Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                          Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                          Location Code=FIELD(Location Filter),
                                                                                                                          Due Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Scheduled Need (Qty.);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5422;   ;Rounding Precision  ;Decimal       ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                IF "Rounding Precision" <= 0 THEN
                                                                  FIELDERROR("Rounding Precision",Text027);
                                                              END;

                                                   AccessByPermission=TableData 5405=R;
                                                   CaptionML=ENU=Rounding Precision;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 5423;   ;Bin Filter          ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Bin.Code WHERE (Location Code=FIELD(Location Filter));
                                                   CaptionML=ENU=Bin Filter }
    { 5424;   ;Variant Filter      ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=ENU=Variant Filter }
    { 5425;   ;Sales Unit of Measure;Code10       ;TableRelation=IF (No.=FILTER(<>'')) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE "Unit of Measure";
                                                   CaptionML=ENU=Sales Unit of Measure }
    { 5426;   ;Purch. Unit of Measure;Code10      ;TableRelation=IF (No.=FILTER(<>'')) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE "Unit of Measure";
                                                   CaptionML=ENU=Purch. Unit of Measure }
    { 5428;   ;Time Bucket         ;DateFormula   ;OnValidate=BEGIN
                                                                CalendarMgt.CheckDateFormulaPositive("Time Bucket");
                                                              END;

                                                   AccessByPermission=TableData 244=R;
                                                   CaptionML=ENU=Time Bucket }
    { 5429;   ;Reserved Qty. on Prod. Order;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                Source Type=CONST(5406),
                                                                                                                Source Subtype=FILTER(1..3),
                                                                                                                Reservation Status=CONST(Reservation),
                                                                                                                Location Code=FIELD(Location Filter),
                                                                                                                Variant Code=FIELD(Variant Filter),
                                                                                                                Expected Receipt Date=FIELD(Date Filter)));
                                                   AccessByPermission=TableData 5405=R;
                                                   CaptionML=ENU=Reserved Qty. on Prod. Order;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5430;   ;Res. Qty. on Prod. Order Comp.;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=-Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                 Source Type=CONST(5407),
                                                                                                                 Source Subtype=FILTER(1..3),
                                                                                                                 Reservation Status=CONST(Reservation),
                                                                                                                 Location Code=FIELD(Location Filter),
                                                                                                                 Variant Code=FIELD(Variant Filter),
                                                                                                                 Shipment Date=FIELD(Date Filter)));
                                                   AccessByPermission=TableData 5405=R;
                                                   CaptionML=ENU=Res. Qty. on Prod. Order Comp.;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5431;   ;Res. Qty. on Req. Line;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                Source Type=CONST(246),
                                                                                                                Source Subtype=FILTER(0),
                                                                                                                Reservation Status=CONST(Reservation),
                                                                                                                Location Code=FIELD(Location Filter),
                                                                                                                Variant Code=FIELD(Variant Filter),
                                                                                                                Expected Receipt Date=FIELD(Date Filter)));
                                                   AccessByPermission=TableData 244=R;
                                                   CaptionML=ENU=Res. Qty. on Req. Line;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5440;   ;Reordering Policy   ;Option        ;OnValidate=BEGIN
                                                                "Include Inventory" :=
                                                                  "Reordering Policy" IN ["Reordering Policy"::"Lot-for-Lot",
                                                                                          "Reordering Policy"::"Maximum Qty.",
                                                                                          "Reordering Policy"::"Fixed Reorder Qty."];

                                                                IF "Reordering Policy" <> "Reordering Policy"::" " THEN
                                                                  TESTFIELD(Type,Type::Inventory);
                                                              END;

                                                   AccessByPermission=TableData 244=R;
                                                   CaptionML=ENU=Reordering Policy;
                                                   OptionCaptionML=ENU=" ,Fixed Reorder Qty.,Maximum Qty.,Order,Lot-for-Lot";
                                                   OptionString=[ ,Fixed Reorder Qty.,Maximum Qty.,Order,Lot-for-Lot] }
    { 5441;   ;Include Inventory   ;Boolean       ;AccessByPermission=TableData 244=R;
                                                   CaptionML=ENU=Include Inventory }
    { 5442;   ;Manufacturing Policy;Option        ;AccessByPermission=TableData 244=R;
                                                   CaptionML=ENU=Manufacturing Policy;
                                                   OptionCaptionML=ENU=Make-to-Stock,Make-to-Order;
                                                   OptionString=Make-to-Stock,Make-to-Order }
    { 5443;   ;Rescheduling Period ;DateFormula   ;OnValidate=BEGIN
                                                                CalendarMgt.CheckDateFormulaPositive("Rescheduling Period");
                                                              END;

                                                   AccessByPermission=TableData 244=R;
                                                   CaptionML=ENU=Rescheduling Period }
    { 5444;   ;Lot Accumulation Period;DateFormula;OnValidate=BEGIN
                                                                CalendarMgt.CheckDateFormulaPositive("Lot Accumulation Period");
                                                              END;

                                                   AccessByPermission=TableData 244=R;
                                                   CaptionML=ENU=Lot Accumulation Period }
    { 5445;   ;Dampener Period     ;DateFormula   ;OnValidate=BEGIN
                                                                CalendarMgt.CheckDateFormulaPositive("Dampener Period");
                                                              END;

                                                   AccessByPermission=TableData 244=R;
                                                   CaptionML=ENU=Dampener Period }
    { 5446;   ;Dampener Quantity   ;Decimal       ;AccessByPermission=TableData 244=R;
                                                   CaptionML=ENU=Dampener Quantity;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 5447;   ;Overflow Level      ;Decimal       ;AccessByPermission=TableData 244=R;
                                                   CaptionML=ENU=Overflow Level;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 5449;   ;Planning Transfer Ship. (Qty).;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Requisition Line"."Quantity (Base)" WHERE (Replenishment System=CONST(Transfer),
                                                                                                               Type=CONST(Item),
                                                                                                               No.=FIELD(No.),
                                                                                                               Variant Code=FIELD(Variant Filter),
                                                                                                               Transfer-from Code=FIELD(Location Filter),
                                                                                                               Transfer Shipment Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Planning Transfer Ship. (Qty).;
                                                   Editable=No }
    { 5450;   ;Planning Worksheet (Qty.);Decimal  ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Requisition Line"."Quantity (Base)" WHERE (Planning Line Origin=CONST(Planning),
                                                                                                               Type=CONST(Item),
                                                                                                               No.=FIELD(No.),
                                                                                                               Location Code=FIELD(Location Filter),
                                                                                                               Variant Code=FIELD(Variant Filter),
                                                                                                               Due Date=FIELD(Date Filter),
                                                                                                               Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                               Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter)));
                                                   CaptionML=ENU=Planning Worksheet (Qty.);
                                                   Editable=No }
    { 5700;   ;Stockkeeping Unit Exists;Boolean   ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Stockkeeping Unit" WHERE (Item No.=FIELD(No.)));
                                                   CaptionML=ENU=Stockkeeping Unit Exists;
                                                   Editable=No }
    { 5701;   ;Manufacturer Code   ;Code10        ;TableRelation=Manufacturer;
                                                   CaptionML=ENU=Manufacturer Code }
    { 5702;   ;Item Category Code  ;Code10        ;TableRelation="Item Category";
                                                   OnValidate=BEGIN
                                                                IF "Item Category Code" <> xRec."Item Category Code" THEN BEGIN
                                                                  IF ItemCategory.GET("Item Category Code") THEN BEGIN
                                                                    IF "Gen. Prod. Posting Group" = '' THEN
                                                                      VALIDATE("Gen. Prod. Posting Group",ItemCategory."Def. Gen. Prod. Posting Group");
                                                                    IF ("VAT Prod. Posting Group" = '') OR
                                                                       (GenProdPostingGrp.ValidateVatProdPostingGroup(GenProdPostingGrp,"Gen. Prod. Posting Group") AND
                                                                        ("Gen. Prod. Posting Group" = ItemCategory."Def. Gen. Prod. Posting Group") AND
                                                                        ("VAT Prod. Posting Group" = GenProdPostingGrp."Def. VAT Prod. Posting Group"))
                                                                    THEN
                                                                      VALIDATE("VAT Prod. Posting Group",ItemCategory."Def. VAT Prod. Posting Group");
                                                                    IF "Inventory Posting Group" = '' THEN
                                                                      VALIDATE("Inventory Posting Group",ItemCategory."Def. Inventory Posting Group");
                                                                    IF "Tax Group Code" = '' THEN
                                                                      VALIDATE("Tax Group Code",ItemCategory."Def. Tax Group Code");
                                                                    VALIDATE("Costing Method",ItemCategory."Def. Costing Method");
                                                                  END;

                                                                  IF NOT ProductGrp.GET("Item Category Code","Product Group Code") THEN
                                                                    VALIDATE("Product Group Code",'')
                                                                  ELSE
                                                                    VALIDATE("Product Group Code");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Item Category Code }
    { 5703;   ;Created From Nonstock Item;Boolean ;AccessByPermission=TableData 5718=R;
                                                   CaptionML=ENU=Created From Nonstock Item;
                                                   Editable=No }
    { 5704;   ;Product Group Code  ;Code10        ;TableRelation="Product Group".Code WHERE (Item Category Code=FIELD(Item Category Code));
                                                   CaptionML=ENU=Product Group Code }
    { 5706;   ;Substitutes Exist   ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Item Substitution" WHERE (Type=CONST(Item),
                                                                                                No.=FIELD(No.)));
                                                   CaptionML=ENU=Substitutes Exist;
                                                   Editable=No }
    { 5707;   ;Qty. in Transit     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Transfer Line"."Qty. in Transit (Base)" WHERE (Derived From Line No.=CONST(0),
                                                                                                                   Item No.=FIELD(No.),
                                                                                                                   Transfer-to Code=FIELD(Location Filter),
                                                                                                                   Variant Code=FIELD(Variant Filter),
                                                                                                                   Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                   Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                   Receipt Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Qty. in Transit;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5708;   ;Trans. Ord. Receipt (Qty.);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Transfer Line"."Outstanding Qty. (Base)" WHERE (Derived From Line No.=CONST(0),
                                                                                                                    Item No.=FIELD(No.),
                                                                                                                    Transfer-to Code=FIELD(Location Filter),
                                                                                                                    Variant Code=FIELD(Variant Filter),
                                                                                                                    Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                    Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                    Receipt Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Trans. Ord. Receipt (Qty.);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5709;   ;Trans. Ord. Shipment (Qty.);Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Transfer Line"."Outstanding Qty. (Base)" WHERE (Derived From Line No.=CONST(0),
                                                                                                                    Item No.=FIELD(No.),
                                                                                                                    Transfer-from Code=FIELD(Location Filter),
                                                                                                                    Variant Code=FIELD(Variant Filter),
                                                                                                                    Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                    Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                    Shipment Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Trans. Ord. Shipment (Qty.);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5776;   ;Qty. Assigned to ship;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Warehouse Shipment Line"."Qty. Outstanding (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                              Location Code=FIELD(Location Filter),
                                                                                                                              Variant Code=FIELD(Variant Filter),
                                                                                                                              Due Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Qty. Assigned to ship;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5777;   ;Qty. Picked         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Warehouse Shipment Line"."Qty. Picked (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                         Location Code=FIELD(Location Filter),
                                                                                                                         Variant Code=FIELD(Variant Filter),
                                                                                                                         Due Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Qty. Picked;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5900;   ;Service Item Group  ;Code10        ;TableRelation="Service Item Group".Code;
                                                   OnValidate=VAR
                                                                ResSkill@1000 : Record 5956;
                                                              BEGIN
                                                                IF xRec."Service Item Group" <> "Service Item Group" THEN BEGIN
                                                                  IF NOT ResSkillMgt.ChangeRelationWithGroup(
                                                                       ResSkill.Type::Item,
                                                                       "No.",
                                                                       ResSkill.Type::"Service Item Group",
                                                                       "Service Item Group",
                                                                       xRec."Service Item Group")
                                                                  THEN
                                                                    "Service Item Group" := xRec."Service Item Group";
                                                                END ELSE
                                                                  ResSkillMgt.RevalidateRelation(
                                                                    ResSkill.Type::Item,
                                                                    "No.",
                                                                    ResSkill.Type::"Service Item Group",
                                                                    "Service Item Group")
                                                              END;

                                                   CaptionML=ENU=Service Item Group }
    { 5901;   ;Qty. on Service Order;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Service Line"."Outstanding Qty. (Base)" WHERE (Document Type=CONST(Order),
                                                                                                                   Type=CONST(Item),
                                                                                                                   No.=FIELD(No.),
                                                                                                                   Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                   Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                   Location Code=FIELD(Location Filter),
                                                                                                                   Variant Code=FIELD(Variant Filter),
                                                                                                                   Needed by Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Qty. on Service Order;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5902;   ;Res. Qty. on Service Orders;Decimal;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                 Source Type=CONST(5902),
                                                                                                                 Source Subtype=CONST(1),
                                                                                                                 Reservation Status=CONST(Reservation),
                                                                                                                 Location Code=FIELD(Location Filter),
                                                                                                                 Variant Code=FIELD(Variant Filter),
                                                                                                                 Shipment Date=FIELD(Date Filter)));
                                                   AccessByPermission=TableData 5900=R;
                                                   CaptionML=ENU=Res. Qty. on Service Orders;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 6500;   ;Item Tracking Code  ;Code10        ;TableRelation="Item Tracking Code";
                                                   OnValidate=BEGIN
                                                                IF "Item Tracking Code" <> '' THEN
                                                                  TESTFIELD(Type,Type::Inventory);
                                                                IF "Item Tracking Code" = xRec."Item Tracking Code" THEN
                                                                  EXIT;

                                                                IF NOT ItemTrackingCode.GET("Item Tracking Code") THEN
                                                                  CLEAR(ItemTrackingCode);

                                                                IF NOT ItemTrackingCode2.GET(xRec."Item Tracking Code") THEN
                                                                  CLEAR(ItemTrackingCode2);

                                                                IF (ItemTrackingCode."SN Specific Tracking" <> ItemTrackingCode2."SN Specific Tracking") OR
                                                                   (ItemTrackingCode."Lot Specific Tracking" <> ItemTrackingCode2."Lot Specific Tracking")
                                                                THEN
                                                                  TestNoEntriesExist(FIELDCAPTION("Item Tracking Code"),SkipMess);  //**4PS.n

                                                                IF "Costing Method" = "Costing Method"::Specific THEN BEGIN
                                                                  TestNoEntriesExist(FIELDCAPTION("Item Tracking Code"),SkipMess);  //**4PS.n

                                                                  TESTFIELD("Item Tracking Code");

                                                                  ItemTrackingCode.GET("Item Tracking Code");
                                                                  IF NOT ItemTrackingCode."SN Specific Tracking" THEN
                                                                    ERROR(
                                                                      Text018,
                                                                      ItemTrackingCode.FIELDCAPTION("SN Specific Tracking"),
                                                                      FORMAT(TRUE),ItemTrackingCode.TABLECAPTION,ItemTrackingCode.Code,
                                                                      FIELDCAPTION("Costing Method"),"Costing Method");
                                                                END;

                                                                TestNoOpenDocumentsWithTrackingExist;
                                                              END;

                                                   CaptionML=ENU=Item Tracking Code }
    { 6501;   ;Lot Nos.            ;Code10        ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF "Lot Nos." <> '' THEN
                                                                  TESTFIELD("Item Tracking Code");
                                                              END;

                                                   CaptionML=ENU=Lot Nos. }
    { 6502;   ;Expiration Calculation;DateFormula ;CaptionML=ENU=Expiration Calculation }
    { 6503;   ;Lot No. Filter      ;Code20        ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Lot No. Filter }
    { 6504;   ;Serial No. Filter   ;Code40        ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Serial No. Filter }
    { 6650;   ;Qty. on Purch. Return;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Outstanding Qty. (Base)" WHERE (Document Type=CONST(Return Order),
                                                                                                                    Type=CONST(Item),
                                                                                                                    No.=FIELD(No.),
                                                                                                                    Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                    Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                    Location Code=FIELD(Location Filter),
                                                                                                                    Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                    Variant Code=FIELD(Variant Filter),
                                                                                                                    Expected Receipt Date=FIELD(Date Filter)));
                                                   AccessByPermission=TableData 6660=R;
                                                   CaptionML=ENU=Qty. on Purch. Return;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 6660;   ;Qty. on Sales Return;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Line"."Outstanding Qty. (Base)" WHERE (Document Type=CONST(Return Order),
                                                                                                                 Type=CONST(Item),
                                                                                                                 No.=FIELD(No.),
                                                                                                                 Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                 Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                 Location Code=FIELD(Location Filter),
                                                                                                                 Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                 Variant Code=FIELD(Variant Filter),
                                                                                                                 Shipment Date=FIELD(Date Filter)));
                                                   AccessByPermission=TableData 6650=R;
                                                   CaptionML=ENU=Qty. on Sales Return;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 7171;   ;No. of Substitutes  ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Item Substitution" WHERE (Type=CONST(Item),
                                                                                                No.=FIELD(No.)));
                                                   CaptionML=ENU=No. of Substitutes;
                                                   Editable=No }
    { 7301;   ;Special Equipment Code;Code10      ;TableRelation="Special Equipment";
                                                   CaptionML=ENU=Special Equipment Code }
    { 7302;   ;Put-away Template Code;Code10      ;TableRelation="Put-away Template Header";
                                                   CaptionML=ENU=Put-away Template Code }
    { 7307;   ;Put-away Unit of Measure Code;Code10;
                                                   TableRelation=IF (No.=FILTER(<>'')) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE "Unit of Measure";
                                                   AccessByPermission=TableData 7340=R;
                                                   CaptionML=ENU=Put-away Unit of Measure Code }
    { 7380;   ;Phys Invt Counting Period Code;Code10;
                                                   TableRelation="Phys. Invt. Counting Period";
                                                   OnValidate=VAR
                                                                PhysInvtCountPeriod@1000 : Record 7381;
                                                                PhysInvtCountPeriodMgt@1001 : Codeunit 7380;
                                                              BEGIN
                                                                IF "Phys Invt Counting Period Code" <> '' THEN BEGIN
                                                                  PhysInvtCountPeriod.GET("Phys Invt Counting Period Code");
                                                                  PhysInvtCountPeriod.TESTFIELD("Count Frequency per Year");
                                                                  IF "Phys Invt Counting Period Code" <> xRec."Phys Invt Counting Period Code" THEN BEGIN
                                                                    IF CurrFieldNo <> 0 THEN
                                                                      IF NOT CONFIRM(
                                                                           Text7380,
                                                                           FALSE,
                                                                           FIELDCAPTION("Phys Invt Counting Period Code"),
                                                                           FIELDCAPTION("Next Counting Start Date"),
                                                                           FIELDCAPTION("Next Counting End Date"))
                                                                      THEN
                                                                        ERROR(Text7381);

                                                                    PhysInvtCountPeriodMgt.CalcPeriod(
                                                                      "Last Counting Period Update","Next Counting Start Date","Next Counting End Date",
                                                                      PhysInvtCountPeriod."Count Frequency per Year",
                                                                      ("Last Counting Period Update" = 0D) OR
                                                                      ("Phys Invt Counting Period Code" <> xRec."Phys Invt Counting Period Code"));
                                                                  END;
                                                                END ELSE BEGIN
                                                                  IF CurrFieldNo <> 0 THEN
                                                                    IF NOT CONFIRM(Text003,FALSE,FIELDCAPTION("Phys Invt Counting Period Code")) THEN
                                                                      ERROR(Text7381);
                                                                  "Next Counting Start Date" := 0D;
                                                                  "Next Counting End Date" := 0D;
                                                                  "Last Counting Period Update" := 0D;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Phys Invt Counting Period Code }
    { 7381;   ;Last Counting Period Update;Date   ;AccessByPermission=TableData 7380=R;
                                                   CaptionML=ENU=Last Counting Period Update;
                                                   Editable=No }
    { 7383;   ;Last Phys. Invt. Date;Date         ;FieldClass=FlowField;
                                                   CalcFormula=Max("Phys. Inventory Ledger Entry"."Posting Date" WHERE (Item No.=FIELD(No.),
                                                                                                                        Phys Invt Counting Period Type=FILTER(' '|Item)));
                                                   CaptionML=ENU=Last Phys. Invt. Date;
                                                   Editable=No }
    { 7384;   ;Use Cross-Docking   ;Boolean       ;InitValue=Yes;
                                                   AccessByPermission=TableData 7302=R;
                                                   CaptionML=ENU=Use Cross-Docking }
    { 7385;   ;Next Counting Start Date;Date      ;CaptionML=ENU=Next Counting Start Date;
                                                   Editable=No }
    { 7386;   ;Next Counting End Date;Date        ;CaptionML=ENU=Next Counting End Date;
                                                   Editable=No }
    { 7700;   ;Identifier Code     ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Item Identifier".Code WHERE (Item No.=FIELD(No.)));
                                                   CaptionML=ENU=Identifier Code;
                                                   Editable=No }
    { 11012000;;Main Group         ;Code10        ;TableRelation="MGS Code".Code WHERE (Classification=CONST(Main Group));
                                                   OnValidate=BEGIN
                                                                IF "Main Group" <> '' THEN BEGIN
                                                                  //VALIDATE(Group);        //* It was not possible to change headgroup when 'Group' was filled,
                                                                  //VALIDATE("Sub Group");  //* the old value was immediately restored.
                                                                  IF Group <> '' THEN BEGIN
                                                                    IF (NOT MGSRec.GET(Group)) OR
                                                                       (MGSRec.Classification <> MGSRec.Classification::Group) OR
                                                                       (MGSRec."Main Group" <> "Main Group")
                                                                    THEN BEGIN
                                                                      Group := '';
                                                                      "Sub Group" := '';
                                                                    END;
                                                                  END;
                                                                  IF "Sub Group" <> '' THEN BEGIN
                                                                    IF (NOT MGSRec.GET("Sub Group")) OR
                                                                       (MGSRec.Classification <> MGSRec.Classification::"Sub Group") OR
                                                                       (MGSRec."Main Group" <> "Main Group") OR
                                                                       (MGSRec.Group <>  Group)
                                                                    THEN
                                                                      "Sub Group" := '';
                                                                  END;
                                                                END ELSE BEGIN
                                                                  Group := '';
                                                                  "Sub Group" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Main Group }
    { 11012010;;Group              ;Code10        ;TableRelation="MGS Code".Code WHERE (Classification=CONST(Group));
                                                   OnValidate=BEGIN
                                                                //**4PS
                                                                IF Group <> '' THEN BEGIN
                                                                  MGSRec.GET(Group);
                                                                  "Main Group" := MGSRec."Main Group";
                                                                  IF "Sub Group" <> '' THEN BEGIN
                                                                    IF (NOT MGSRec.GET("Sub Group")) OR
                                                                       (MGSRec.Classification <> MGSRec.Classification::"Sub Group") OR
                                                                       (MGSRec."Main Group" <> "Main Group") OR
                                                                       (MGSRec.Group <>  Group)
                                                                    THEN
                                                                      "Sub Group" := '';
                                                                  END;
                                                                END ELSE
                                                                  "Sub Group" := '';
                                                              END;

                                                   OnLookup=BEGIN
                                                              //**4PS
                                                              MGSRec.RESET;
                                                              MGSRec.SETRANGE(Classification, MGSRec.Classification::Group);
                                                              IF "Main Group" <> '' THEN
                                                                MGSRec.SETRANGE("Main Group", "Main Group");
                                                              MGSRec.Code := Group;
                                                              IF PAGE.RUNMODAL(0, MGSRec) = ACTION::LookupOK THEN BEGIN
                                                                MGSRec.TESTFIELD(Classification, MGSRec.Classification::Group);
                                                                VALIDATE(Group, MGSRec.Code);
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Group }
    { 11012020;;Sub Group          ;Code10        ;TableRelation="MGS Code".Code WHERE (Classification=CONST(Sub Group));
                                                   OnValidate=BEGIN
                                                                //**4PS
                                                                IF "Sub Group" <> '' THEN BEGIN
                                                                  MGSRec.GET("Sub Group");
                                                                  "Main Group" := MGSRec."Main Group";
                                                                  Group := MGSRec.Group;
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              //**4PS
                                                              MGSRec.RESET;
                                                              MGSRec.SETRANGE(Classification, MGSRec.Classification::"Sub Group");
                                                              IF "Main Group" <> '' THEN
                                                                MGSRec.SETRANGE("Main Group", "Main Group");
                                                              IF Group <> '' THEN
                                                                MGSRec.SETRANGE(Group, Group);
                                                              MGSRec.Code := "Sub Group";
                                                              IF PAGE.RUNMODAL(0, MGSRec) = ACTION::LookupOK THEN BEGIN
                                                                MGSRec.TESTFIELD(Classification, MGSRec.Classification::"Sub Group");
                                                                VALIDATE("Sub Group", MGSRec.Code);
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Sub Group }
    { 11012040;;Qty. on Item Journal Project;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Journal Line"."Quantity (Reserved)" WHERE (Item No.=FIELD(No.),
                                                                                                                    Entry Type=CONST(Sale),
                                                                                                                    Job No.=FILTER(<>''),
                                                                                                                    Service Order No.=FILTER(''),
                                                                                                                    Location Code=FIELD(Location Filter),
                                                                                                                    Variant Code=FIELD(Variant Filter),
                                                                                                                    Bin Code=FIELD(Bin Filter),
                                                                                                                    Delivery Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Qty. on Item Journal Project;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 11012045;;Qty. on Item Journal Service;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Journal Line"."Quantity (Reserved)" WHERE (Item No.=FIELD(No.),
                                                                                                                    Entry Type=CONST(Sale),
                                                                                                                    Service Order No.=FILTER(<>''),
                                                                                                                    Location Code=FIELD(Location Filter),
                                                                                                                    Variant Code=FIELD(Variant Filter),
                                                                                                                    Bin Code=FIELD(Bin Filter),
                                                                                                                    Delivery Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Qty. on Item Journal Service;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 11012050;;Sub Operation Code ;Code20        ;TableRelation="Sub Operation";
                                                   CaptionML=ENU=Sub Operation Code }
    { 11012060;;Text               ;Text250       ;CaptionML=ENU=Text }
    { 11012070;;Item Manufacturer  ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Item Relation"."Basic Item" WHERE (Navision Item=FIELD(No.)));
                                                   CaptionML=ENU=Item Manufacturer;
                                                   Editable=No }
    { 11012071;;Manufacturer       ;Code15        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Item Relation".Manufacturer WHERE (Navision Item=FIELD(No.)));
                                                   CaptionML=ENU=Manufacturer;
                                                   Editable=No }
    { 11012075;;Item Vendor        ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Item Relation"."Trade Item" WHERE (Navision Item=FIELD(No.)));
                                                   CaptionML=ENU=Item Vendor;
                                                   Editable=No }
    { 11012076;;Vendor (Trade Item);Code15        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Item Relation".Vendor WHERE (Navision Item=FIELD(No.)));
                                                   CaptionML=ENU=Vendor (Trade Item);
                                                   Editable=No }
    { 11012080;;GTIN Code          ;Code20        ;CaptionML=ENU=GTIN Code }
    { 11012085;;Item Series        ;Text40        ;CaptionML=ENU=Item Series }
    { 11012090;;Item Type          ;Text40        ;CaptionML=ENU=Item Type }
    { 11012095;;Item Brand         ;Text40        ;CaptionML=ENU=Item Brand }
    { 11012100;;Weight             ;Decimal       ;CaptionML=ENU=Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 11012110;;Inventory for Projects;Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Project Inventory Entry".Quantity WHERE (Item No.=FIELD(No.),
                                                                                                             Location Code=FIELD(Location Filter),
                                                                                                             Shelf No.=FIELD(Bin Filter),
                                                                                                             Posting Date=FIELD(UPPERLIMIT(Date Filter)),
                                                                                                             Project No.=FIELD(Project Filter)));
                                                   CaptionML=ENU=Project Inventory;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 11012120;;Serviced Item      ;Boolean       ;CaptionML=ENU=Serviced Item;
                                                   Description=expired from update 4.00-008 }
    { 11012130;;Removal Contribution;Decimal      ;CaptionML=ENU=Removal Contribution;
                                                   AutoFormatType=2 }
    { 11012140;;Cost Object (Removal);Code20      ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                               Cost Type=FILTER(Material|Sundry));
                                                   CaptionML=ENU=Cost Object (Removal Contribution) }
    { 11012150;;Language Code      ;Code10        ;TableRelation=Language;
                                                   CaptionML=ENU=Language Code;
                                                   Description=test diekus (tbv Alewijnse) }
    { 11012151;;Description Translation;Text50    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Item Translation".Description WHERE (Item No.=FIELD(No.),
                                                                                                            Language Code=FIELD(Language Code)));
                                                   OnValidate=BEGIN
                                                                IF ("Search Description" = UPPERCASE(xRec.Description)) OR ("Search Description" = '') THEN
                                                                //"Search Description" := Description;  //**4PS.o
                                                                  "Search Description" := COPYSTR(Description, 1, MAXSTRLEN("Search Description"));  //**4PS.n

                                                                IF "Created From Nonstock Item" THEN BEGIN
                                                                  NonstockItem.SETCURRENTKEY("Item No.");
                                                                  NonstockItem.SETRANGE("Item No.","No.");
                                                                  IF NonstockItem.FIND('-') THEN
                                                                    IF NonstockItem.Description = '' THEN BEGIN
                                                                      NonstockItem.Description := Description;
                                                                      NonstockItem.MODIFY;
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Description Translation;
                                                   Description=test diekus (tbv Alewijnse);
                                                   Editable=No }
    { 11012152;;Description 2 Translation;Text50  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Item Translation"."Description 2" WHERE (Item No.=FIELD(No.),
                                                                                                                Language Code=FIELD(Language Code)));
                                                   OnValidate=BEGIN
                                                                IF ("Search Description" = UPPERCASE(xRec.Description)) OR ("Search Description" = '') THEN
                                                                //"Search Description" := Description;  //**4PS.o
                                                                  "Search Description" := COPYSTR(Description, 1, MAXSTRLEN("Search Description"));  //**4PS.n

                                                                IF "Created From Nonstock Item" THEN BEGIN
                                                                  NonstockItem.SETCURRENTKEY("Item No.");
                                                                  NonstockItem.SETRANGE("Item No.","No.");
                                                                  IF NonstockItem.FIND('-') THEN
                                                                    IF NonstockItem.Description = '' THEN BEGIN
                                                                      NonstockItem.Description := Description;
                                                                      NonstockItem.MODIFY;
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Description 2 Translation;
                                                   Description=test diekus (tbv Alewijnse);
                                                   Editable=No }
    { 11012153;;E-Plan Item        ;Code50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("E-Plan Item".No. WHERE (Navision Item=FIELD(No.)));
                                                   CaptionML=ENU=E-Plan Item;
                                                   Editable=No }
    { 11012160;;CP Available       ;Boolean       ;CaptionML=ENU=Available on Internet }
    { 11012170;;Source Revaluation ;Code50        ;CaptionML=ENU=Source Revaluation }
    { 11012180;;Parent Item        ;Code20        ;TableRelation=Item.No.;
                                                   OnValidate=BEGIN
                                                                CheckParentItem;
                                                              END;

                                                   CaptionML=ENU=Parent Item }
    { 11012191;;Sales/Buy-Back Item (Plant);Boolean;
                                                   OnValidate=VAR
                                                                lvPlantSetupRec@1100485002 : Record 11012550;
                                                                lvItemSalesBuyBackRateRec@1100485000 : Record 11020318;
                                                                lvLicensePlantExtendedCU@1100485001 : Codeunit 11012579;
                                                                lvText11012001@1100485003 : TextConst 'ENU=Not allowed, there are still Sales/Buy Back Rates present.';
                                                              BEGIN
                                                                IF "Sales/Buy-Back Item (Plant)" THEN BEGIN
                                                                  //* Check if plant and plant extended for item on Plant Order is allowed
                                                                  lvPlantSetupRec.GET;
                                                                  lvLicensePlantExtendedCU.LicenseTablePlantItem(TRUE,11012557);
                                                                END ELSE BEGIN
                                                                  lvItemSalesBuyBackRateRec.SETRANGE("Item No.", "No.");
                                                                  IF lvItemSalesBuyBackRateRec.FINDFIRST THEN
                                                                    ERROR(lvText11012001);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Sales/Buy-Back Item (Plant);
                                                   Description=At Sales/Buy-Back of items through Plant Order }
    { 11012195;;Count Weight in Load/Unload TO;Boolean;
                                                   CaptionML=ENU=Count Weight in Load/Unload Cost (Plant Transport Order) }
    { 11012200;;Qty. on Plant Order;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Order Line"."Qty. for Item Reservation" WHERE (Item No.=FIELD(No.),
                                                                                                                         Location Code=FIELD(Location Filter),
                                                                                                                         Variant Code=FIELD(Variant Filter),
                                                                                                                         Transfer Date=FIELD(Date Filter),
                                                                                                                         Posted=CONST(No)));
                                                   CaptionML=ENU=Qty. on Plant Order;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 11012210;;Purchase Blocked   ;Boolean       ;OnValidate=BEGIN
                                                                //**4PS.n
                                                                IF Blocked THEN
                                                                  TESTFIELD("Purchase Blocked", TRUE);
                                                              END;

                                                   CaptionML=ENU=Purchase Blocked }
    { 11012215;;Inventory Blocked  ;Boolean       ;OnValidate=BEGIN
                                                                //**4PS.n, 22793
                                                                IF Blocked THEN
                                                                  TESTFIELD("Inventory Blocked", TRUE);
                                                              END;

                                                   CaptionML=ENU=Inventory Blocked }
    { 11012216;;Advice Blocked     ;Boolean       ;OnValidate=BEGIN
                                                                //**4PS.n
                                                                IF Blocked THEN
                                                                  TESTFIELD("Advice Blocked", TRUE);
                                                              END;

                                                   CaptionML=ENU=Advice Blocked }
    { 11012217;;Sales Blocked      ;Boolean       ;OnValidate=BEGIN
                                                                //**4PS.n
                                                                IF Blocked THEN
                                                                  TESTFIELD("Sales Blocked", TRUE);
                                                              END;

                                                   CaptionML=ENU=Sales Blocked }
    { 11012220;;Qty. on Purch. Order (Inv.);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Outstanding Qty. (Base)" WHERE (Document Type=CONST(Order),
                                                                                                                    Type=CONST(Item),
                                                                                                                    Item No.=FIELD(No.),
                                                                                                                    Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                    Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                    Location Code=FIELD(Location Filter),
                                                                                                                    Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                    Variant Code=FIELD(Variant Filter),
                                                                                                                    Expected Receipt Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Qty. on Purch. Order (Inv.);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 11012221;;Qty. on Purch. Order (Project);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Outstanding Qty. (Base)" WHERE (Document Type=CONST(Order),
                                                                                                                    Type=FILTER(G/L Account),
                                                                                                                    Item No.=FIELD(No.),
                                                                                                                    Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                    Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                    Location Code=FIELD(Location Filter),
                                                                                                                    Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                    Variant Code=FIELD(Variant Filter),
                                                                                                                    Expected Receipt Date=FIELD(Date Filter),
                                                                                                                    Job No.=FIELD(Project Filter)));
                                                   CaptionML=ENU=Qty. on Purch. Order (Project);
                                                   DecimalPlaces=0:5;
                                                   Description=HBK: Added Job No. to key 5;
                                                   Editable=No }
    { 11012222;;Qty. on Advice Order;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Advice Order Line"."Quantity (Advice)" WHERE (Item No.=FIELD(No.),
                                                                                                                  Process Status=CONST(Released)));
                                                   CaptionML=ENU=Qty. on Released Advice Order;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 11012223;;Adv Ord allways via Inventory;Boolean;
                                                   CaptionML=ENU=Advice Orders allways via Inventory;
                                                   Description=NOT USED }
    { 11012224;;Qty. on Purch. Order (Service);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Outstanding Qty. (Base)" WHERE (Document Type=CONST(Order),
                                                                                                                    Type=FILTER(G/L Account),
                                                                                                                    Item No.=FIELD(No.),
                                                                                                                    Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                    Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                    Location Code=FIELD(Location Filter),
                                                                                                                    Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                    Variant Code=FIELD(Variant Filter),
                                                                                                                    Expected Receipt Date=FIELD(Date Filter),
                                                                                                                    Service Order No.=FIELD(Service Order Filter)));
                                                   CaptionML=ENU=Qty. on Purch. Order (Service);
                                                   DecimalPlaces=0:5;
                                                   Description=Added Service Order No. to key 5;
                                                   Editable=No }
    { 11012225;;Project Filter     ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Job;
                                                   CaptionML=ENU=Project Filter }
    { 11012226;;Service Order Filter;Code20       ;FieldClass=FlowFilter;
                                                   TableRelation=Job;
                                                   CaptionML=ENU=Service Order Filter }
    { 11012227;;Advice Order allways;Option       ;CaptionML=ENU=Advice Orders always;
                                                   OptionCaptionML=ENU=Not Set,Inventory,Purchase,Requisition;
                                                   OptionString=Not Set,Inventory,Purchase,Requisition }
    { 11012230;;Good Customs       ;Boolean       ;CaptionML=ENU=Custom Goods }
    { 11012240;;Nondurable         ;Boolean       ;CaptionML=ENU=Nondurable }
    { 11012300;;Logistics on Component Level;Boolean;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Assembly BOM");
                                                                IF "Logistics on Component Level" THEN
                                                                  TESTFIELD("Assembly BOM",TRUE);
                                                              END;

                                                   CaptionML=ENU=Logistics on Component Level }
    { 11012310;;Parcels Qty.       ;Integer       ;InitValue=1;
                                                   CaptionML=ENU=Parcels Qty.;
                                                   MinValue=0 }
    { 11012320;;Allow Link Item Docs to Purch.;Boolean;
                                                   OnValidate=VAR
                                                                PurchSetup@1100528000 : Record 312;
                                                              BEGIN
                                                                //**4PS
                                                                IF "Allow Link Item Docs to Purch." THEN BEGIN
                                                                  PurchSetup.GET;
                                                                  PurchSetup.TESTFIELD("Allow Link Item Docs to Purch.", TRUE);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Allow Link Item Document to Purchase Order }
    { 11012400;;Vendor Name        ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Vendor No.)));
                                                   CaptionML=ENU=Vendor Name;
                                                   Editable=No }
    { 11012410;;Forecast Code      ;Code10        ;TableRelation="Stock Forecast";
                                                   CaptionML=ENU=Forecast Code }
    { 11012411;;Budget Name Filter ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation="Item Budget Name" WHERE (Analysis Area=CONST(Sales));
                                                   CaptionML=ENU=Budget Name Filter }
    { 11012412;;Budget Dimension 1 Filter;Code20  ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Budget Dimension 1 Filter }
    { 11012415;;Quantity on Sales Budget;Decimal  ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Budget Entry".Quantity WHERE (Item No.=FIELD(No.),
                                                                                                       Location Code=FIELD(Location Filter),
                                                                                                       Date=FIELD(Date Filter),
                                                                                                       Budget Dimension 1 Code=FIELD(Budget Dimension 1 Filter),
                                                                                                       Budget Name=FIELD(Budget Name Filter),
                                                                                                       Analysis Area=CONST(Sales)));
                                                   CaptionML=ENU=Quantity on Sales Budget;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 11012420;;Modified by        ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Modified by;
                                                   Editable=No }
    { 11012500;;Order via Plant Request;Boolean   ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                //DP00898
                                                              END;

                                                   CaptionML=ENU=Order via Plant Request }
    { 11012990;;Export to FSA      ;Boolean       ;CaptionML=ENU=Export to Field Service;
                                                   Description=Indication new/changed. BDA= Buitendienstadmin. (Field Service Admin.) }
    { 11012991;;Date/Time Export to FSA;DateTime  ;CaptionML=ENU=Date/Time Export to Field Service }
    { 11012992;;Active in FSA      ;Boolean       ;CaptionML=ENU=Available for in Field Service }
    { 11012996;;Demand Time Calculation;DateFormula;
                                                   CaptionML=ENU=Demand Time Calculation }
    { 11012997;;Blanket Order Plan Item;Boolean   ;CaptionML=ENU=Blanket Order Plan Item }
    { 11125762;;Glazing Application Code;Code20   ;TableRelation="Glazing Application";
                                                   CaptionML=ENU=Glazing Application Code }
    { 11125763;;Glazing Ordering Code;Code20      ;CaptionML=ENU=Glazing Ordering Code }
    { 11125764;;Min. Sfc. Area Driemaat (m2);Decimal;
                                                   CaptionML=ENU=Min. Sfc. Area Cutting Loss (m2);
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 11125770;;Reason Code F-Gases Mandatory;Boolean;
                                                   CaptionML=ENU=Reason Code F-Gases Mandatory }
    { 11125780;;Standard Object No.;Code20        ;TableRelation="Standard Object";
                                                   CaptionML=ENU=Standard Object No. }
    { 11125790;;Generic Filter     ;Text50        ;CaptionML=ENU=Generic Filter;
                                                   Editable=No }
    { 99000750;;Routing No.        ;Code20        ;TableRelation="Routing Header";
                                                   OnValidate=BEGIN
                                                                IF "Routing No." <> '' THEN
                                                                  TESTFIELD(Type,Type::Inventory);

                                                                PlanningAssignment.RoutingReplace(Rec,xRec."Routing No.");

                                                                IF "Routing No." <> xRec."Routing No." THEN
                                                                  ItemCostMgt.UpdateUnitCost(Rec,'','',0,0,FALSE,FALSE,TRUE,FIELDNO("Routing No."));
                                                              END;

                                                   CaptionML=ENU=Routing No. }
    { 99000751;;Production BOM No. ;Code20        ;TableRelation="Production BOM Header";
                                                   OnValidate=VAR
                                                                MfgSetup@1000 : Record 99000765;
                                                                ProdBOMHeader@1001 : Record 99000771;
                                                                ItemUnitOfMeasure@1003 : Record 5404;
                                                                CalcLowLevel@1002 : Codeunit 99000793;
                                                              BEGIN
                                                                IF "Production BOM No." <> '' THEN
                                                                  TESTFIELD(Type,Type::Inventory);

                                                                PlanningAssignment.BomReplace(Rec,xRec."Production BOM No.");

                                                                IF "Production BOM No." <> xRec."Production BOM No." THEN
                                                                  ItemCostMgt.UpdateUnitCost(Rec,'','',0,0,FALSE,FALSE,TRUE,FIELDNO("Production BOM No."));

                                                                IF ("Production BOM No." <> '') AND ("Production BOM No." <> xRec."Production BOM No.") THEN BEGIN
                                                                  ProdBOMHeader.GET("Production BOM No.");
                                                                  ItemUnitOfMeasure.GET("No.",ProdBOMHeader."Unit of Measure Code");
                                                                  IF ProdBOMHeader.Status = ProdBOMHeader.Status::Certified THEN BEGIN
                                                                    MfgSetup.GET;
                                                                    IF MfgSetup."Dynamic Low-Level Code" THEN
                                                                      CalcLowLevel.RUN(Rec);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Production BOM No. }
    { 99000752;;Single-Level Material Cost;Decimal;CaptionML=ENU=Single-Level Material Cost;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 99000753;;Single-Level Capacity Cost;Decimal;CaptionML=ENU=Single-Level Capacity Cost;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 99000754;;Single-Level Subcontrd. Cost;Decimal;
                                                   CaptionML=ENU=Single-Level Subcontrd. Cost;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 99000755;;Single-Level Cap. Ovhd Cost;Decimal;
                                                   CaptionML=ENU=Single-Level Cap. Ovhd Cost;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 99000756;;Single-Level Mfg. Ovhd Cost;Decimal;
                                                   CaptionML=ENU=Single-Level Mfg. Ovhd Cost;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 99000757;;Overhead Rate      ;Decimal       ;AccessByPermission=TableData 5405=R;
                                                   CaptionML=ENU=Overhead Rate;
                                                   AutoFormatType=2 }
    { 99000758;;Rolled-up Subcontracted Cost;Decimal;
                                                   AccessByPermission=TableData 5405=R;
                                                   CaptionML=ENU=Rolled-up Subcontracted Cost;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 99000759;;Rolled-up Mfg. Ovhd Cost;Decimal  ;CaptionML=ENU=Rolled-up Mfg. Ovhd Cost;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 99000760;;Rolled-up Cap. Overhead Cost;Decimal;
                                                   CaptionML=ENU=Rolled-up Cap. Overhead Cost;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 99000761;;Planning Issues (Qty.);Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Planning Component"."Expected Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                          Due Date=FIELD(Date Filter),
                                                                                                                          Location Code=FIELD(Location Filter),
                                                                                                                          Variant Code=FIELD(Variant Filter),
                                                                                                                          Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                          Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                          Planning Line Origin=CONST(" ")));
                                                   CaptionML=ENU=Planning Issues (Qty.);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 99000762;;Planning Receipt (Qty.);Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Requisition Line"."Quantity (Base)" WHERE (Type=CONST(Item),
                                                                                                               No.=FIELD(No.),
                                                                                                               Due Date=FIELD(Date Filter),
                                                                                                               Location Code=FIELD(Location Filter),
                                                                                                               Variant Code=FIELD(Variant Filter),
                                                                                                               Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                               Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter)));
                                                   CaptionML=ENU=Planning Receipt (Qty.);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 99000765;;Planned Order Receipt (Qty.);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Line"."Remaining Qty. (Base)" WHERE (Status=CONST(Planned),
                                                                                                                     Item No.=FIELD(No.),
                                                                                                                     Variant Code=FIELD(Variant Filter),
                                                                                                                     Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                     Location Code=FIELD(Location Filter),
                                                                                                                     Due Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Planned Order Receipt (Qty.);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 99000766;;FP Order Receipt (Qty.);Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Line"."Remaining Qty. (Base)" WHERE (Status=CONST(Firm Planned),
                                                                                                                     Item No.=FIELD(No.),
                                                                                                                     Variant Code=FIELD(Variant Filter),
                                                                                                                     Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                     Location Code=FIELD(Location Filter),
                                                                                                                     Due Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=FP Order Receipt (Qty.);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 99000767;;Rel. Order Receipt (Qty.);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Line"."Remaining Qty. (Base)" WHERE (Status=CONST(Released),
                                                                                                                     Item No.=FIELD(No.),
                                                                                                                     Variant Code=FIELD(Variant Filter),
                                                                                                                     Shortcut Dimension 1 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                     Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                     Location Code=FIELD(Location Filter),
                                                                                                                     Due Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Rel. Order Receipt (Qty.);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 99000768;;Planning Release (Qty.);Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Requisition Line"."Quantity (Base)" WHERE (Type=CONST(Item),
                                                                                                               No.=FIELD(No.),
                                                                                                               Starting Date=FIELD(Date Filter),
                                                                                                               Location Code=FIELD(Location Filter),
                                                                                                               Variant Code=FIELD(Variant Filter),
                                                                                                               Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                               Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter)));
                                                   CaptionML=ENU=Planning Release (Qty.);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 99000769;;Planned Order Release (Qty.);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Line"."Remaining Qty. (Base)" WHERE (Status=CONST(Planned),
                                                                                                                     Item No.=FIELD(No.),
                                                                                                                     Variant Code=FIELD(Variant Filter),
                                                                                                                     Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Shortcut Dimension 2 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Location Code=FIELD(Location Filter),
                                                                                                                     Starting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Planned Order Release (Qty.);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 99000770;;Purch. Req. Receipt (Qty.);Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Requisition Line"."Quantity (Base)" WHERE (Type=CONST(Item),
                                                                                                               No.=FIELD(No.),
                                                                                                               Variant Code=FIELD(Variant Filter),
                                                                                                               Location Code=FIELD(Location Filter),
                                                                                                               Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                               Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                               Due Date=FIELD(Date Filter),
                                                                                                               Planning Line Origin=CONST(" ")));
                                                   CaptionML=ENU=Purch. Req. Receipt (Qty.);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 99000771;;Purch. Req. Release (Qty.);Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Requisition Line"."Quantity (Base)" WHERE (Type=CONST(Item),
                                                                                                               No.=FIELD(No.),
                                                                                                               Location Code=FIELD(Location Filter),
                                                                                                               Variant Code=FIELD(Variant Filter),
                                                                                                               Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                               Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                               Order Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Purch. Req. Release (Qty.);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 99000773;;Order Tracking Policy;Option      ;OnValidate=VAR
                                                                ReservEntry@1000 : Record 337;
                                                                ActionMessageEntry@1001 : Record 99000849;
                                                                TempReservationEntry@1002 : TEMPORARY Record 337;
                                                              BEGIN
                                                                IF "Order Tracking Policy" <> "Order Tracking Policy"::None THEN
                                                                  TESTFIELD(Type,Type::Inventory);
                                                                IF xRec."Order Tracking Policy" = "Order Tracking Policy" THEN
                                                                  EXIT;
                                                                IF "Order Tracking Policy" > xRec."Order Tracking Policy" THEN BEGIN
                                                                  MESSAGE(Text99000000 +
                                                                    Text99000001,
                                                                    SELECTSTR("Order Tracking Policy",Text99000002));
                                                                END ELSE BEGIN
                                                                  ActionMessageEntry.SETCURRENTKEY("Reservation Entry");
                                                                  ReservEntry.SETCURRENTKEY("Item No.","Variant Code","Location Code","Reservation Status");
                                                                  ReservEntry.SETRANGE("Item No.","No.");
                                                                  ReservEntry.SETRANGE("Reservation Status",ReservEntry."Reservation Status"::Tracking,ReservEntry."Reservation Status"::Surplus);
                                                                  IF ReservEntry.FIND('-') THEN
                                                                    REPEAT
                                                                      ActionMessageEntry.SETRANGE("Reservation Entry",ReservEntry."Entry No.");
                                                                      ActionMessageEntry.DELETEALL;
                                                                      IF "Order Tracking Policy" = "Order Tracking Policy"::None THEN
                                                                        IF ReservEntry.TrackingExists THEN BEGIN
                                                                          TempReservationEntry := ReservEntry;
                                                                          TempReservationEntry."Reservation Status" := TempReservationEntry."Reservation Status"::Surplus;
                                                                          TempReservationEntry.INSERT;
                                                                        END ELSE
                                                                          ReservEntry.DELETE;
                                                                    UNTIL ReservEntry.NEXT = 0;

                                                                  IF TempReservationEntry.FIND('-') THEN
                                                                    REPEAT
                                                                      ReservEntry := TempReservationEntry;
                                                                      ReservEntry.MODIFY;
                                                                    UNTIL TempReservationEntry.NEXT = 0;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Order Tracking Policy;
                                                   OptionCaptionML=ENU=None,Tracking Only,Tracking & Action Msg.;
                                                   OptionString=None,Tracking Only,Tracking & Action Msg. }
    { 99000774;;Prod. Forecast Quantity (Base);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Production Forecast Entry"."Forecast Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                                 Production Forecast Name=FIELD(Production Forecast Name),
                                                                                                                                 Forecast Date=FIELD(Date Filter),
                                                                                                                                 Location Code=FIELD(Location Filter),
                                                                                                                                 Component Forecast=FIELD(Component Forecast)));
                                                   CaptionML=ENU=Prod. Forecast Quantity (Base);
                                                   DecimalPlaces=0:5 }
    { 99000775;;Production Forecast Name;Code10   ;FieldClass=FlowFilter;
                                                   TableRelation="Production Forecast Name";
                                                   CaptionML=ENU=Production Forecast Name }
    { 99000776;;Component Forecast ;Boolean       ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Component Forecast }
    { 99000777;;Qty. on Prod. Order;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Line"."Remaining Qty. (Base)" WHERE (Status=FILTER(Planned..Released),
                                                                                                                     Item No.=FIELD(No.),
                                                                                                                     Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                     Location Code=FIELD(Location Filter),
                                                                                                                     Variant Code=FIELD(Variant Filter),
                                                                                                                     Due Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Qty. on Prod. Order;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 99000778;;Qty. on Component Lines;Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Component"."Remaining Qty. (Base)" WHERE (Status=FILTER(Planned..Released),
                                                                                                                          Item No.=FIELD(No.),
                                                                                                                          Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                          Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                          Location Code=FIELD(Location Filter),
                                                                                                                          Variant Code=FIELD(Variant Filter),
                                                                                                                          Due Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Qty. on Component Lines;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 99000875;;Critical           ;Boolean       ;CaptionML=ENU=Critical }
    { 99008500;;Common Item No.    ;Code20        ;CaptionML=ENU=Common Item No. }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Search Description                       }
    {    ;Inventory Posting Group                  }
    {    ;Shelf No.                                }
    {    ;Vendor No.                               }
    {    ;Gen. Prod. Posting Group                 }
    {    ;Low-Level Code                           }
    {    ;Production BOM No.                       }
    {    ;Routing No.                              }
    {    ;Vendor Item No.,Vendor No.               }
    {    ;Common Item No.                          }
    {    ;Service Item Group                       }
    {    ;Cost is Adjusted,Allow Online Adjustment }
    {    ;Description                              }
    {    ;Base Unit of Measure                     }
    {    ;Type                                     }
    {    ;Main Group,Group,Sub Group               }
    {    ;Global Dimension 2 Code                  }
    {    ;Glazing Application Code                 }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Description,Search Description,Base Unit of Measure,Unit Price }
    { 2   ;Brick               ;No.,Description,Inventory,Unit Price,Base Unit of Measure,Description 2 }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot delete %1 %2 because there is at least one outstanding Purchase %3 that includes this item.';
      Text001@1001 : TextConst 'ENU=You cannot delete %1 %2 because there is at least one outstanding Sales %3 that includes this item.';
      Text002@1002 : TextConst 'ENU=You cannot delete %1 %2 because there are one or more outstanding production orders that include this item.';
      Text003@1057 : TextConst 'ENU=Do you want to change %1?';
      Text004@1064 : TextConst 'ENU=You cannot delete %1 %2 because there are one or more certified Production BOM that include this item.';
      Text006@1003 : TextConst 'ENU=Prices including VAT cannot be calculated when %1 is %2.';
      Text007@1004 : TextConst 'ENU=You cannot change %1 because there are one or more ledger entries for this item.';
      Text008@1005 : TextConst 'ENU=You cannot change %1 because there is at least one outstanding Purchase %2 that include this item.';
      Text014@1006 : TextConst 'ENU=You cannot delete %1 %2 because there are one or more production order component lines that include this item with a remaining quantity that is not 0.';
      Text016@1008 : TextConst 'ENU=You cannot delete %1 %2 because there are one or more outstanding transfer orders that include this item.';
      Text017@1009 : TextConst 'ENU=You cannot delete %1 %2 because there is at least one outstanding Service %3 that includes this item.';
      Text018@1010 : TextConst 'ENU=%1 must be %2 in %3 %4 when %5 is %6.';
      Text019@1011 : TextConst 'ENU=You cannot change %1 because there are one or more open ledger entries for this item.';
      Text020@1012 : TextConst 'ENU="There may be orders and open ledger entries for the item. "';
      Text021@1013 : TextConst 'ENU=If you change %1 it may affect new orders and entries.\\';
      Text022@1014 : TextConst 'ENU=Do you want to change %1?';
      GLSetup@1053 : Record 98;
      InvtSetup@1015 : Record 313;
      Text023@1066 : TextConst 'ENU=You cannot delete %1 %2 because there is at least one %3 that includes this item.';
      Text024@1072 : TextConst 'ENU=If you change %1 it may affect existing production orders.\';
      Text025@1055 : TextConst 'ENU=%1 must be an integer because %2 %3 is set up to use %4.';
      Text026@1077 : TextConst 'ENU=%1 cannot be changed because the %2 has work in process (WIP). Changing the value may offset the WIP account.';
      Text7380@1058 : TextConst '@@@=If you change the Phys Invt Counting Period Code, the Next Counting Start Date and Next Counting End Date are calculated.\Do you still want to change the Phys Invt Counting Period Code?;ENU=If you change the %1, the %2 and %3 are calculated.\Do you still want to change the %1?';
      Text7381@1056 : TextConst 'ENU=Cancelled.';
      Text11012000@1100409000 : TextConst 'ENU=%1 must be greater than/equal to %2.';
      Text11012001@1100409001 : TextConst 'ENU=%1 must be less than/equal to %2.';
      Text11012002@1100485000 : TextConst 'ENU=may not be modified';
      Text99000000@1017 : TextConst 'ENU=The change will not affect existing entries.\';
      CommentLine@1018 : Record 97;
      Text99000001@1019 : TextConst 'ENU=If you want to generate %1 for existing entries, you must run a regenerative planning.';
      ItemVend@1020 : Record 99;
      Text99000002@1021 : TextConst 'ENU=tracking,tracking and action messages';
      SalesPrice@1022 : Record 7002;
      SalesLineDisc@1059 : Record 7004;
      SalesPrepmtPct@1051 : Record 459;
      PurchPrice@1060 : Record 7012;
      PurchLineDisc@1061 : Record 7014;
      PurchPrepmtPct@1076 : Record 460;
      ItemTranslation@1023 : Record 30;
      BOMComp@1024 : Record 90;
      PurchOrderLine@1025 : Record 39;
      SalesOrderLine@1026 : Record 37;
      VATPostingSetup@1027 : Record 325;
      ExtTextHeader@1028 : Record 279;
      GenProdPostingGrp@1029 : Record 251;
      ItemUnitOfMeasure@1030 : Record 5404;
      ItemVariant@1031 : Record 5401;
      ItemJnlLine@1007 : Record 83;
      ProdOrderLine@1032 : Record 5406;
      ProdOrderComp@1033 : Record 5407;
      PlanningAssignment@1035 : Record 99000850;
      SKU@1036 : Record 5700;
      ItemTrackingCode@1037 : Record 6502;
      ItemTrackingCode2@1038 : Record 6502;
      ServInvLine@1039 : Record 5902;
      ItemSub@1040 : Record 5715;
      ItemCategory@1041 : Record 5722;
      TransLine@1042 : Record 5741;
      Vend@1016 : Record 23;
      NonstockItem@1034 : Record 5718;
      ProdBOMHeader@1062 : Record 99000771;
      ProdBOMLine@1063 : Record 99000772;
      ItemIdent@1065 : Record 7704;
      RequisitionLine@1067 : Record 246;
      ItemBudgetEntry@1075 : Record 7134;
      ItemAnalysisViewEntry@1074 : Record 7154;
      ItemAnalysisBudgViewEntry@1073 : Record 7156;
      TroubleshSetup@1050 : Record 5945;
      ServiceItem@1068 : Record 5940;
      ServiceContractLine@1069 : Record 5964;
      ServiceItemComponent@1070 : Record 5941;
      ProductGrp@1048 : Record 5723;
      NoSeriesMgt@1043 : Codeunit 396;
      MoveEntries@1044 : Codeunit 361;
      DimMgt@1045 : Codeunit 408;
      NonstockItemMgt@1046 : Codeunit 5703;
      ItemCostMgt@1047 : Codeunit 5804;
      ResSkillMgt@1071 : Codeunit 5931;
      CalendarMgt@1054 : Codeunit 7600;
      HasInvtSetup@1049 : Boolean;
      GLSetupRead@1052 : Boolean;
      Text027@1078 : TextConst '@@@=starts with "Rounding Precision";ENU=must be greater than 0.';
      Text028@1080 : TextConst 'ENU=You cannot perform this action because entries for item %1 are unapplied in %2 by user %3.';
      CannotChangeFieldErr@1079 : TextConst '@@@="%1 = field name, %2 = item table name, %3 = item No., %4 = table name";ENU=You cannot change the %1 field on %2 %3 because there exists at least one %4 then includes this item.';
      BaseUnitOfMeasureQtyMustBeOneErr@1081 : TextConst '@@@="%1 Name of Unit of measure (e.g. BOX, PCS, KG...), %2 Qty. of %1 per base unit of measure ";ENU=The quantity per base unit of measure must be 1. %1 is set up with %2 per unit of measure.\\You can change this setup in the Item Units of Measure window.';
      OpenDocumentTrackingErr@1082 : TextConst 'ENU="You cannot change ""Item Tracking Code"" because there is at least one open document that includes this item with specified tracking: Source Type = %1, Document No. = %2."';
      ItemSetup@1210190002 : Record 11012300;
      ItemRelRec@11012024 : Record 11012319;
      MGSRec@1210190005 : Record 11012321;
      MainRec@11012027 : Record 27;
      CentrManagementCU@1210190004 : Codeunit 11012010;
      SkipMess@1100485002 : Boolean;
      CompanyLogistics@1100525000 : Text[50];
      DPA_Management@1100000999 : Codeunit 11012783;
      SkipModify@1100528400 : Boolean;
      SkipCentralDataMgtInOnRename@1100528700 : Boolean;

    PROCEDURE AssistEdit@2() : Boolean;
    BEGIN
      GetInvtSetup;
      InvtSetup.TESTFIELD("Item Nos.");
      IF NoSeriesMgt.SelectSeries(InvtSetup."Item Nos.",xRec."No. Series","No. Series") THEN BEGIN
        NoSeriesMgt.SetSeries("No.");
        EXIT(TRUE);
      END;
    END;

    PROCEDURE FindItemVend@5(VAR ItemVend@1000 : Record 99;LocationCode@1002 : Code[10]);
    VAR
      GetPlanningParameters@1004 : Codeunit 99000855;
    BEGIN
      TESTFIELD("No.");
      ItemVend.RESET;
      ItemVend.SETRANGE("Item No.","No.");
      ItemVend.SETRANGE("Vendor No.",ItemVend."Vendor No.");
      ItemVend.SETRANGE("Variant Code",ItemVend."Variant Code");

      IF NOT ItemVend.FIND('+') THEN BEGIN
        ItemVend."Item No." := "No.";
        ItemVend."Vendor Item No." := '';
        GetPlanningParameters.AtSKU(SKU,"No.",ItemVend."Variant Code",LocationCode);
        IF ItemVend."Vendor No." = '' THEN
          ItemVend."Vendor No." := SKU."Vendor No.";
        IF ItemVend."Vendor Item No." = '' THEN
          ItemVend."Vendor Item No." := SKU."Vendor Item No.";
        ItemVend."Lead Time Calculation" := SKU."Lead Time Calculation";
      END;
      IF FORMAT(ItemVend."Lead Time Calculation") = '' THEN
        IF Vend.GET(ItemVend."Vendor No.") THEN
          ItemVend."Lead Time Calculation" := Vend."Lead Time Calculation";
      ItemVend.RESET;
    END;

    LOCAL PROCEDURE ValidateShortcutDimCode@8(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.SaveDefaultDim(DATABASE::Item,"No.",FieldNumber,ShortcutDimCode);
      //MODIFY;      //**4PS.o
      IF NOT SkipModify THEN //**4PS.n
        MODIFY(TRUE);  //**4PS.n
    END;

    PROCEDURE TestNoEntriesExist@1006(CurrentFieldName@1000 : Text[100];VAR SkipMess@1100485000 : Boolean);
    VAR
      ItemLedgEntry@1001 : Record 32;
    BEGIN
      //**4PS function changed to global
      //**4PS.sn
      IF (CurrentFieldName = FIELDCAPTION("Unit Cost")) OR
         (CurrentFieldName = FIELDCAPTION("Standard Cost")) OR
         (CurrentFieldName = FIELDCAPTION("Last Direct Cost")) THEN BEGIN
        IF (GetItemLedgerEntryInventory = 0) THEN BEGIN
          SkipMess := FALSE;
          EXIT;
        END;
      END;
      //**4PS.en

      ItemLedgEntry.SETCURRENTKEY("Item No.");
      ItemLedgEntry.SETRANGE("Item No.","No.");
      IF NOT ItemLedgEntry.ISEMPTY THEN
      //**4PS.sn
      BEGIN
        IF SkipMess = TRUE THEN EXIT;
      //**4PS.en
        ERROR(
          Text007,
          CurrentFieldName);
      END;  //**4PS.n

      PurchOrderLine.SETCURRENTKEY("Document Type",Type,"Item No.","No.");  //**4PS.n
      PurchOrderLine.SETFILTER(
        "Document Type",'%1|%2',
        PurchOrderLine."Document Type"::Order,
        PurchOrderLine."Document Type"::"Return Order");
      //**4PS.sn
      //PurchOrderLine.SETRANGE(Type,PurchOrderLine.Type::Item);
      PurchOrderLine.SETRANGE("Item No.","No.");
      //**4PS.en
      IF PurchOrderLine.FINDFIRST THEN
      //**4PS.sn
      BEGIN
        IF SkipMess = TRUE THEN EXIT;
      //**4PS.en
        ERROR(
          Text008,
          CurrentFieldName,
          PurchOrderLine."Document Type");
      END;  //**4PS.n
    END;

    LOCAL PROCEDURE TestNoOpenEntriesExist@4(CurrentFieldName@1000 : Text[100]);
    VAR
      ItemLedgEntry@1001 : Record 32;
    BEGIN
      ItemLedgEntry.SETCURRENTKEY("Item No.",Open);
      ItemLedgEntry.SETRANGE("Item No.","No.");
      ItemLedgEntry.SETRANGE(Open,TRUE);
      IF NOT ItemLedgEntry.ISEMPTY THEN
        ERROR(
          Text019,
          CurrentFieldName);
    END;

    LOCAL PROCEDURE TestNoOpenDocumentsWithTrackingExist@42();
    VAR
      TrackingSpecification@1000 : Record 336;
      ReservationEntry@1001 : Record 337;
      RecRef@1004 : RecordRef;
      SourceType@1002 : Integer;
      SourceID@1003 : Code[20];
    BEGIN
      IF ItemTrackingCode2.Code = '' THEN
        EXIT;

      TrackingSpecification.SETRANGE("Item No.","No.");
      IF TrackingSpecification.FINDFIRST THEN BEGIN
        SourceType := TrackingSpecification."Source Type";
        SourceID := TrackingSpecification."Source ID";
      END ELSE BEGIN
        ReservationEntry.SETRANGE("Item No.","No.");
        ReservationEntry.SETFILTER("Item Tracking",'<>%1',ReservationEntry."Item Tracking"::None);
        IF ReservationEntry.FINDFIRST THEN BEGIN
          SourceType := ReservationEntry."Source Type";
          SourceID := ReservationEntry."Source ID";
        END;
      END;

      IF SourceType = 0 THEN
        EXIT;

      RecRef.OPEN(SourceType);
      ERROR(OpenDocumentTrackingErr,RecRef.CAPTION,SourceID);
    END;

    PROCEDURE ItemSKUGet@11(VAR Item@1000 : Record 27;LocationCode@1001 : Code[10];VariantCode@1002 : Code[10]);
    VAR
      SKU@1003 : Record 5700;
    BEGIN
      IF Item.GET("No.") THEN BEGIN
        IF SKU.GET(LocationCode,Item."No.",VariantCode) THEN
          Item."Shelf No." := SKU."Shelf No.";
      END;
    END;

    LOCAL PROCEDURE GetInvtSetup@14();
    BEGIN
      IF NOT HasInvtSetup THEN BEGIN
        InvtSetup.GET;
        HasInvtSetup := TRUE;
      END;
    END;

    PROCEDURE IsMfgItem@1() : Boolean;
    BEGIN
      EXIT("Replenishment System" = "Replenishment System"::"Prod. Order");
    END;

    PROCEDURE IsAssemblyItem@24() : Boolean;
    BEGIN
      EXIT("Replenishment System" = "Replenishment System"::Assembly);
    END;

    PROCEDURE HasBOM@18() : Boolean;
    BEGIN
      CALCFIELDS("Assembly BOM");
      EXIT("Assembly BOM" OR ("Production BOM No." <> ''));
    END;

    LOCAL PROCEDURE GetGLSetup@6();
    BEGIN
      IF NOT GLSetupRead THEN
        GLSetup.GET;
      GLSetupRead := TRUE;
    END;

    LOCAL PROCEDURE ProdOrderExist@7() : Boolean;
    BEGIN
      ProdOrderLine.SETCURRENTKEY(Status,"Item No.");
      ProdOrderLine.SETFILTER(Status,'..%1',ProdOrderLine.Status::Released);
      ProdOrderLine.SETRANGE("Item No.","No.");
      IF NOT ProdOrderLine.ISEMPTY THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE CheckSerialNoQty@15(ItemNo@1000 : Code[20];FieldName@1001 : Text[30];Quantity@1002 : Decimal);
    VAR
      ItemRec@1003 : Record 27;
      ItemTrackingCode3@1004 : Record 6502;
    BEGIN
      IF Quantity = ROUND(Quantity,1) THEN
        EXIT;
      IF NOT ItemRec.GET(ItemNo) THEN
        EXIT;
      IF ItemRec."Item Tracking Code" = '' THEN
        EXIT;
      IF NOT ItemTrackingCode3.GET(ItemRec."Item Tracking Code") THEN
        EXIT;
      IF ItemTrackingCode3."SN Specific Tracking" THEN
        ERROR(Text025,
          FieldName,
          TABLECAPTION,
          ItemNo,
          ItemTrackingCode3.FIELDCAPTION("SN Specific Tracking"));
    END;

    LOCAL PROCEDURE CheckForProductionOutput@17(ItemNo@1000 : Code[20]);
    VAR
      ItemLedgEntry@1001 : Record 32;
    BEGIN
      CLEAR(ItemLedgEntry);
      ItemLedgEntry.SETCURRENTKEY("Item No.","Entry Type","Variant Code","Drop Shipment","Location Code","Posting Date");
      ItemLedgEntry.SETRANGE("Item No.",ItemNo);
      ItemLedgEntry.SETRANGE("Entry Type",ItemLedgEntry."Entry Type"::Output);
      IF NOT ItemLedgEntry.ISEMPTY THEN
        ERROR(Text026,FIELDCAPTION("Inventory Value Zero"),TABLECAPTION);
    END;

    PROCEDURE CheckBlockedByApplWorksheet@19();
    VAR
      ApplicationWorksheet@1000 : Page 521;
    BEGIN
      IF "Application Wksh. User ID" <> '' THEN
        ERROR(Text028,"No.",ApplicationWorksheet.CAPTION,"Application Wksh. User ID");
    END;

    PROCEDURE ShowTimelineFromItem@20(VAR Item@1000 : Record 27);
    VAR
      ItemAvailByTimeline@1001 : Page 5540;
    BEGIN
      ItemAvailByTimeline.SetItem(Item);
      ItemAvailByTimeline.RUN;
    END;

    PROCEDURE ShowTimelineFromSKU@21(ItemNo@1000 : Code[20];LocationCode@1001 : Code[10];VariantCode@1002 : Code[10]);
    VAR
      Item@1003 : Record 27;
    BEGIN
      Item.GET(ItemNo);
      Item.SETRANGE("No.",Item."No.");
      Item.SETRANGE("Variant Filter",VariantCode);
      Item.SETRANGE("Location Filter",LocationCode);
      ShowTimelineFromItem(Item);
    END;

    LOCAL PROCEDURE CheckJournalsAndWorksheets@22(CurrFieldNo@1001 : Integer);
    BEGIN
      CheckItemJnlLine(CurrFieldNo);
      CheckStdCostWksh(CurrFieldNo);
      CheckReqLine(CurrFieldNo);
    END;

    LOCAL PROCEDURE CheckItemJnlLine@44(CurrFieldNo@1000 : Integer);
    BEGIN
      ItemJnlLine.SETRANGE("Item No.","No.");
      IF NOT ItemJnlLine.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text023,TABLECAPTION,"No.",ItemJnlLine.TABLECAPTION);
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",ItemJnlLine.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckStdCostWksh@45(CurrFieldNo@1000 : Integer);
    VAR
      StdCostWksh@1001 : Record 5841;
    BEGIN
      StdCostWksh.RESET;
      StdCostWksh.SETRANGE(Type,StdCostWksh.Type::Item);
      StdCostWksh.SETRANGE("No.","No.");
      IF NOT StdCostWksh.ISEMPTY THEN
        IF CurrFieldNo = 0 THEN
          ERROR(Text023,TABLECAPTION,"No.",StdCostWksh.TABLECAPTION);
    END;

    LOCAL PROCEDURE CheckReqLine@46(CurrFieldNo@1000 : Integer);
    BEGIN
      RequisitionLine.SETCURRENTKEY(Type,"No.");
      RequisitionLine.SETRANGE(Type,RequisitionLine.Type::Item);
      RequisitionLine.SETRANGE("No.","No.");
      IF NOT RequisitionLine.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text023,TABLECAPTION,"No.",RequisitionLine.TABLECAPTION);
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",RequisitionLine.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckDocuments@23(CurrFieldNo@1002 : Integer);
    BEGIN
      CheckBOM(CurrFieldNo);
      CheckPurchLine(CurrFieldNo);
      CheckSalesLine(CurrFieldNo);
      CheckProdOrderLine(CurrFieldNo);
      CheckProdOrderCompLine(CurrFieldNo);
      CheckPlanningCompLine(CurrFieldNo);
      CheckTransLine(CurrFieldNo);
      CheckServLine(CurrFieldNo);
      CheckProdBOMLine(CurrFieldNo);
      CheckServContractLine(CurrFieldNo);
      CheckAsmHeader(CurrFieldNo);
      CheckAsmLine(CurrFieldNo);
      CheckJobPlanningLine(CurrFieldNo);
    END;

    LOCAL PROCEDURE CheckBOM@25(CurrFieldNo@1000 : Integer);
    BEGIN
      BOMComp.RESET;
      BOMComp.SETCURRENTKEY(Type,"No.");
      BOMComp.SETRANGE(Type,BOMComp.Type::Item);
      BOMComp.SETRANGE("No.","No.");
      IF NOT BOMComp.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text023,TABLECAPTION,"No.",BOMComp.TABLECAPTION);
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",BOMComp.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckPurchLine@26(CurrFieldNo@1000 : Integer);
    BEGIN
      PurchOrderLine.SETCURRENTKEY(Type,"No.");
      PurchOrderLine.SETRANGE(Type,PurchOrderLine.Type::Item);
      PurchOrderLine.SETRANGE("No.","No.");
      IF NOT PurchOrderLine.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text000,TABLECAPTION,"No.",PurchOrderLine."Document Type");
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",PurchOrderLine.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckSalesLine@28(CurrFieldNo@1000 : Integer);
    BEGIN
      SalesOrderLine.SETCURRENTKEY(Type,"No.");
      SalesOrderLine.SETRANGE(Type,SalesOrderLine.Type::Item);
      SalesOrderLine.SETRANGE("No.","No.");
      IF NOT SalesOrderLine.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text001,TABLECAPTION,"No.",SalesOrderLine."Document Type");
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",SalesOrderLine.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckProdOrderLine@39(CurrFieldNo@1000 : Integer);
    BEGIN
      IF ProdOrderExist THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text002,TABLECAPTION,"No.");
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",ProdOrderLine.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckProdOrderCompLine@31(CurrFieldNo@1000 : Integer);
    BEGIN
      ProdOrderComp.SETCURRENTKEY(Status,"Item No.");
      ProdOrderComp.SETFILTER(Status,'..%1',ProdOrderComp.Status::Released);
      ProdOrderComp.SETRANGE("Item No.","No.");
      IF NOT ProdOrderComp.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text014,TABLECAPTION,"No.");
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",ProdOrderComp.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckPlanningCompLine@38(CurrFieldNo@1000 : Integer);
    VAR
      PlanningComponent@1005 : Record 99000829;
    BEGIN
      PlanningComponent.SETCURRENTKEY("Item No.","Variant Code","Location Code","Due Date","Planning Line Origin");
      PlanningComponent.SETRANGE("Item No.","No.");
      IF NOT PlanningComponent.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text023,TABLECAPTION,"No.",PlanningComponent.TABLECAPTION);
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",PlanningComponent.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckTransLine@37(CurrFieldNo@1000 : Integer);
    BEGIN
      TransLine.SETCURRENTKEY("Item No.");
      TransLine.SETRANGE("Item No.","No.");
      IF NOT TransLine.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text016,TABLECAPTION,"No.");
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",TransLine.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckServLine@36(CurrFieldNo@1000 : Integer);
    BEGIN
      ServInvLine.RESET;
      ServInvLine.SETCURRENTKEY(Type,"No.");
      ServInvLine.SETRANGE(Type,ServInvLine.Type::Item);
      ServInvLine.SETRANGE("No.","No.");
      IF NOT ServInvLine.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text017,TABLECAPTION,"No.",ServInvLine."Document Type");
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",ServInvLine.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckProdBOMLine@30(CurrFieldNo@1000 : Integer);
    BEGIN
      ProdBOMLine.RESET;
      ProdBOMLine.SETCURRENTKEY(Type,"No.");
      ProdBOMLine.SETRANGE(Type,ProdBOMLine.Type::Item);
      ProdBOMLine.SETRANGE("No.","No.");
      IF ProdBOMLine.FIND('-') THEN BEGIN
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",ProdBOMLine.TABLECAPTION);
        IF CurrFieldNo = 0 THEN
          REPEAT
            IF ProdBOMHeader.GET(ProdBOMLine."Production BOM No.") AND
               (ProdBOMHeader.Status = ProdBOMHeader.Status::Certified)
            THEN
              ERROR(Text004,TABLECAPTION,"No.");
          UNTIL ProdBOMLine.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE CheckServContractLine@35(CurrFieldNo@1000 : Integer);
    BEGIN
      ServiceContractLine.RESET;
      ServiceContractLine.SETRANGE("Item No.","No.");
      IF NOT ServiceContractLine.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text023,TABLECAPTION,"No.",ServiceContractLine.TABLECAPTION);
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",ServiceContractLine.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckAsmHeader@32(CurrFieldNo@1000 : Integer);
    VAR
      AsmHeader@1004 : Record 900;
    BEGIN
      AsmHeader.SETCURRENTKEY("Document Type","Item No.");
      AsmHeader.SETRANGE("Item No.","No.");
      IF NOT AsmHeader.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text023,TABLECAPTION,"No.",AsmHeader.TABLECAPTION);
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",AsmHeader.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckAsmLine@27(CurrFieldNo@1000 : Integer);
    VAR
      AsmLine@1003 : Record 901;
    BEGIN
      AsmLine.SETCURRENTKEY(Type,"No.");
      AsmLine.SETRANGE(Type,AsmLine.Type::Item);
      AsmLine.SETRANGE("No.","No.");
      IF NOT AsmLine.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text023,TABLECAPTION,"No.",AsmLine.TABLECAPTION);
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",AsmLine.TABLECAPTION);
      END;
    END;

    PROCEDURE PreventNegativeInventory@33() : Boolean;
    VAR
      InventorySetup@1000 : Record 313;
    BEGIN
      CASE "Prevent Negative Inventory" OF
        "Prevent Negative Inventory"::Yes:
          EXIT(TRUE);
        "Prevent Negative Inventory"::No:
          EXIT(FALSE);
        "Prevent Negative Inventory"::Default:
          BEGIN
            InventorySetup.GET;
            EXIT(InventorySetup."Prevent Negative Inventory");
          END;
      END;
    END;

    LOCAL PROCEDURE CheckJobPlanningLine@34(CurrFieldNo@1000 : Integer);
    VAR
      JobPlanningLine@1001 : Record 11020401;
    BEGIN
      JobPlanningLine.SETCURRENTKEY(Type,"No.");
      JobPlanningLine.SETRANGE(Type,JobPlanningLine.Type::Item);
      JobPlanningLine.SETRANGE("No.","No.");
      IF NOT JobPlanningLine.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text023,TABLECAPTION,"No.",JobPlanningLine.TABLECAPTION);
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",JobPlanningLine.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CalcVAT@40() : Decimal;
    BEGIN
      IF "Price Includes VAT" THEN BEGIN
        VATPostingSetup.GET("VAT Bus. Posting Gr. (Price)","VAT Prod. Posting Group");
        CASE VATPostingSetup."VAT Calculation Type" OF
          VATPostingSetup."VAT Calculation Type"::"Reverse Charge VAT":
            VATPostingSetup."VAT %" := 0;
          VATPostingSetup."VAT Calculation Type"::"Sales Tax":
            ERROR(
              Text006,
              VATPostingSetup.FIELDCAPTION("VAT Calculation Type"),
              VATPostingSetup."VAT Calculation Type");
        END;
      END ELSE
        CLEAR(VATPostingSetup);

      EXIT(VATPostingSetup."VAT %" / 100);
    END;

    PROCEDURE CalcUnitPriceExclVAT@41() : Decimal;
    BEGIN
      GetGLSetup;
      IF 1 + CalcVAT = 0 THEN
        EXIT(0);
      EXIT(ROUND("Unit Price" / (1 + CalcVAT),GLSetup."Unit-Amount Rounding Precision"));
    END;

    PROCEDURE ProcessItemRelation@1210190001(lvType@11012000 : 'BasicItem,TradeItem';lvItem@1210190011 : Code[20];lvSerie@1210190016 : Code[20];lvBasicItemRec@1210190007 : Record 11012316;lvTradeItemRec@11012002 : Record 11012317);
    VAR
      lvVendorRelationRec@11012005 : Record 11012313;
      lvEtimUnitRec@1210190002 : Record 11012307;
      lvUnitRec@1210190009 : Record 204;
      lvDiscHistRec@1100525000 : Record 11012312;
      lvRefDate@1100485001 : Date;
      lvItemPresent@1210190003 : Boolean;
      lvApplUnit@1210190004 : Code[10];
      lvPackUnit@1210190005 : Code[10];
      lvPackFactor@1210190006 : Decimal;
      lvOldPrice@1210190008 : Decimal;
      lvNewPrice@1210190015 : Decimal;
      lvDiscType@1100525001 : 'Purchase,Sales';
      ItemMgt@1100525002 : Codeunit 11012033;
      SkipItemInfo@1210190000 : Boolean;
      SkipPriceInfo@1210190001 : Boolean;
      CheckPriceDisc@1100409000 : Boolean;
      OldMainRec@1100409002 : Record 27;
    BEGIN
      //**4PS
      lvItemPresent := FALSE;
      GetGLSetup;  //db, 29-10-08: M13162 (round Unit Cost+Price)

      //db.sn, 19-12-11: M31760
      InvtSetup.GET;
      SkipItemInfo := (InvtSetup."Item Info Trade Item Leading"=FALSE);
      SkipPriceInfo := (InvtSetup."Price Info Trade Item Leading"=FALSE);
      //db.en, 19-12-11: M31760
      //db.sn, 30-10-12: C002288
      CheckPriceDisc := (InvtSetup."Update Price-Profit Relation" <> InvtSetup."Update Price-Profit Relation"::None);
      //db.en, 30-10-12: C002288

      CASE lvType OF
        lvType::BasicItem:
          BEGIN
            IF MainRec.GET(lvItem) THEN lvItemPresent := TRUE;

            WITH MainRec DO BEGIN
              IF lvItemPresent = FALSE THEN BEGIN
                INIT;
                "No." := lvItem;
                "No. Series" := lvSerie;
                GetDefaultItem;
                INSERT;
                //db.sn, 19-12-11: M31760
                SkipItemInfo := FALSE;
                SkipPriceInfo := FALSE;
                CheckPriceDisc := TRUE;  //db, 30-10-12: C002288
                //db.en, 19-12-11: M31760
              END;

              IF SkipItemInfo = FALSE THEN BEGIN  //db, 19-12-11: M31760
                Description := COPYSTR(lvBasicItemRec."Product Description", 1, MAXSTRLEN(Description));
                VALIDATE(Description);
                "Description 2":= COPYSTR(lvBasicItemRec."Product Description 2", 1, MAXSTRLEN("Description 2"));
              END;

              IF (SkipPriceInfo = FALSE) OR  //db, 19-12-11: M31760;
                 (CheckPriceDisc = TRUE) THEN BEGIN  //db, 30-10-12: C002288
                lvApplUnit := lvBasicItemRec."Application Unit";
                IF lvApplUnit = '' THEN
                  lvApplUnit := "Base Unit of Measure";
                lvPackUnit := lvBasicItemRec."Packaging Unit";
                lvPackFactor := lvBasicItemRec."Qty. per Unit of Measure";
                IF lvPackFactor = 0 THEN
                  lvPackFactor := 1;
                IF lvPackUnit = '' THEN
                  lvPackUnit := lvApplUnit;
              END;

              IF SkipItemInfo = FALSE THEN BEGIN  //db, 19-12-11: M31760
                "Item Series" := lvBasicItemRec."Item Series";
                "Item Type" := lvBasicItemRec."Item Type";
                "Item Brand" := lvBasicItemRec."Item Brand";
                "GTIN Code" := lvBasicItemRec."GTIN Code";
                IF lvBasicItemRec."Sub Operation Code" <> '' THEN
                  "Sub Operation Code" := lvBasicItemRec."Sub Operation Code";
                IF lvBasicItemRec."Cost Object" <> '' THEN
                  VALIDATE("Global Dimension 2 Code", lvBasicItemRec."Cost Object");
                IF lvBasicItemRec."Cost Object (Removal)" <> '' THEN
                  "Cost Object (Removal)" := lvBasicItemRec."Cost Object (Removal)";
              END;

              //db.sn, 30-10-12: C002288
              IF (SkipPriceInfo = FALSE) OR (CheckPriceDisc = TRUE) THEN BEGIN
                lvRefDate := ItemMgt.CheckRefDateLevel('');
                ItemMgt.GetPriceBasicItem(lvBasicItemRec, lvRefDate, '', '', '', FALSE);
                ItemMgt.CheckDiscountLevel(lvTradeItemRec, lvDiscHistRec, TRUE, 0, '', lvRefDate, lvDiscType::Purchase);
              END;
              //db.en, 30-10-12: C002288

              IF SkipPriceInfo = FALSE THEN BEGIN  //db, 19-12-11: M31760
                IF lvBasicItemRec."Removal Contribution" <> 0 THEN
                  "Removal Contribution" := lvBasicItemRec."Removal Contribution";
                //lvRefDate := ItemMgt.CheckRefDateLevel('');
                //ItemMgt.GetPriceBasicItem(lvBasicItemRec, lvRefDate, '', '', '', FALSE);  //db, 02-10-08: M12833
                //ItemMgt.CheckDiscountLevel(lvTradeItemRec, lvDiscHistRec, TRUE, 0, '', lvRefDate, lvDiscType::Purchase);
                IF lvDiscHistRec."Sales Discount Group" <> '' THEN
                  "Item Disc. Group" := lvDiscHistRec."Sales Discount Group";
              END;  //db, 30-10-12: C002288

              IF CheckPriceDisc = TRUE THEN BEGIN  //db, 30-10-12: C002288
                lvOldPrice := "Last Direct Cost";  //instead of "Standard Cost";
                IF UpdateFieldByItemRelation(FIELDNO("Last Direct Cost"), lvItemPresent) THEN
                   "Last Direct Cost" := ROUND(lvBasicItemRec."Nett Price" / lvPackFactor, GLSetup."Unit-Amount Rounding Precision");
                VALIDATE("Last Direct Cost");

                //db.sn, 20-12-07 (call 10918)
                lvNewPrice := "Last Direct Cost";
                SkipMess := TRUE;
                TestNoEntriesExist(FIELDCAPTION("Last Direct Cost"),SkipMess);
                IF SkipMess = FALSE THEN BEGIN
                  "Unit Cost" := lvNewPrice;
                  "Standard Cost" := lvNewPrice;
                END ELSE BEGIN
                  SkipMess := FALSE;
                END;
                //db.en, 20-12-07

                IF UpdateFieldByItemRelation(FIELDNO("Unit Price"), lvItemPresent) THEN
                  "Unit Price" := ROUND(lvBasicItemRec."Gross Price" / lvPackFactor, GLSetup."Unit-Amount Rounding Precision");
                IF UpdateFieldByItemRelation(FIELDNO("Profit %"), lvItemPresent) THEN
                  "Profit %" := lvBasicItemRec."Discount Percentage";
                IF UpdateFieldByItemRelation(0, lvItemPresent) THEN BEGIN
                  IF (lvItemPresent) THEN
                    VALIDATE("Base Unit of Measure", lvApplUnit)
                  ELSE
                    "Base Unit of Measure" := lvApplUnit;
                  "Sales Unit of Measure" := lvApplUnit;
                  "Purch. Unit of Measure"  := lvPackUnit;
                END;

                VALIDATE("Unit Price");
                IF lvOldPrice <> lvNewPrice THEN
                  "Source Revaluation" := '2BA';
              END;
              "Last Date Modified" := TODAY;  //db, 09-07-13: C004352
              "Modified by" := USERID; //**4PS Call C006789
              MODIFY;
            END;
          END;

        lvType::TradeItem:
          BEGIN
            IF MainRec.GET(lvItem) THEN lvItemPresent := TRUE;

            WITH MainRec DO BEGIN
              IF lvItemPresent = FALSE THEN BEGIN
                INIT;
                "No." := lvItem;
                "No. Series" := lvSerie;
                GetDefaultItem;
                INSERT;
                //db.sn, 19-12-11: M31760
                SkipItemInfo := FALSE;
                SkipPriceInfo := FALSE;
                CheckPriceDisc := TRUE;  //db, 30-10-12: C002288
                //db.en, 19-12-11: M31760
              END;

              OldMainRec := MainRec;  //db, 19-10-12: C003086

              IF SkipItemInfo = FALSE THEN BEGIN  //db, 19-12-11: M31760
                Description := COPYSTR(lvTradeItemRec."Item Description", 1, MAXSTRLEN(Description));
                VALIDATE(Description);
                "Description 2":= COPYSTR(lvTradeItemRec."Item Description 2", 1, MAXSTRLEN("Description 2"));
              END;

              IF (SkipPriceInfo = FALSE) OR  //db, 19-12-11: M31760;
                 (CheckPriceDisc = TRUE) THEN BEGIN  //db, 30-10-12: C002288
                lvApplUnit := lvTradeItemRec."Application Unit";
                IF lvEtimUnitRec.GET(lvTradeItemRec."Application Unit") THEN
                  IF lvEtimUnitRec."Unit (NAV)" <> '' THEN
                    lvApplUnit := lvEtimUnitRec."Unit (NAV)";
                IF lvApplUnit = '' THEN
                  lvApplUnit := "Base Unit of Measure";
                lvPackUnit := lvTradeItemRec."Packaging Unit";
                lvPackFactor := lvTradeItemRec."Qty. per Unit of Measure";
                IF lvPackFactor = 0 THEN
                  lvPackFactor := 1;
                IF lvPackUnit = '' THEN
                  lvPackUnit := lvApplUnit;
              END;

              IF SkipItemInfo = FALSE THEN BEGIN  //db, 19-12-11: M31760
                "Item Series" := lvBasicItemRec."Item Series";
                "Item Type" := lvBasicItemRec."Item Type";
                "Item Brand" := lvBasicItemRec."Item Brand";

                IF NOT lvVendorRelationRec.GET(lvTradeItemRec.Vendor) THEN
                  lvVendorRelationRec.INIT;

                "Vendor No." := lvVendorRelationRec."Vendor (Purchase)";
                "Vendor Item No." := lvTradeItemRec."Item Code";
                //db.sn, 20-09-12: 19781; 19-10-12: C003086
                //ItemCostMgt.UpdateSKUFromItem(Rec, FIELDNO("Vendor No."));
                //ItemCostMgt.UpdateSKUFromItem(Rec, FIELDNO("Vendor Item No."));
                //UpdateItemVendor(Rec, xRec);
                //db.en, 20-09-12: 19781; 19-10-12: C003086
                "GTIN Code" := lvTradeItemRec."GTIN Code (Item)";
                //EVALUATE("Lead Time Calculation", STRSUBSTNO(Text11012001, lvTradeItemRec."Delivery Period"));
                IF lvTradeItemRec."Sub Operation Code" <> '' THEN
                  "Sub Operation Code" := lvTradeItemRec."Sub Operation Code";
                IF lvTradeItemRec."Cost Object" <> '' THEN
                  VALIDATE("Global Dimension 2 Code", lvTradeItemRec."Cost Object");
                IF lvTradeItemRec."Cost Object (Removal)" <> '' THEN
                  "Cost Object (Removal)" := lvTradeItemRec."Cost Object (Removal)";
              END ELSE BEGIN
                //db.sn, 19-10-12: C003086
                CALCFIELDS("Vendor (Trade Item)", "Item Vendor");
                IF ("Vendor (Trade Item)" <> '') AND ("Item Vendor" <> '') THEN BEGIN
                  IF NOT lvVendorRelationRec.GET("Vendor (Trade Item)") THEN
                    lvVendorRelationRec.INIT;
                  "Vendor No." := lvVendorRelationRec."Vendor (Purchase)";
                  "Vendor Item No." := "Item Vendor";
                END;
                //db.en, 19-10-12: C003086
              END;

              //db.sn, 19-10-12: C003086
              IF (OldMainRec."Vendor No." <> "Vendor No.") THEN
                ItemCostMgt.UpdateSKUFromItem(MainRec, FIELDNO("Vendor No."));
              IF (OldMainRec."Vendor Item No." <> "Vendor Item No.") THEN
                ItemCostMgt.UpdateSKUFromItem(MainRec, FIELDNO("Vendor Item No."));
              IF (OldMainRec."Vendor No." <> "Vendor No.") OR (OldMainRec."Vendor Item No." <> "Vendor Item No.") THEN
                UpdateItemVendor(MainRec, OldMainRec);
              //db.en, 19-10-12: C003086

              //db.sn, 30-10-12: C002288
              IF (SkipPriceInfo = FALSE) OR (CheckPriceDisc = TRUE) THEN BEGIN
                lvRefDate := ItemMgt.CheckRefDateLevel('');
                ItemMgt.GetPriceTradeItem(lvTradeItemRec, lvRefDate, '', '', '');
                ItemMgt.CheckDiscountLevel(lvTradeItemRec, lvDiscHistRec, TRUE, 0, '', lvRefDate, lvDiscType::Purchase);
              END;
              //db.en, 30-10-12: C002288

              IF SkipPriceInfo = FALSE THEN BEGIN  //db, 19-12-11: M31760
                IF lvTradeItemRec."Removal Contribution" <> 0 THEN
                  "Removal Contribution" := lvTradeItemRec."Removal Contribution";
                //lvRefDate := ItemMgt.CheckRefDateLevel('');
                //ItemMgt.GetPriceTradeItem(lvTradeItemRec, lvRefDate, '', '', '');  //db, 02-10-08: M12833
                //ItemMgt.CheckDiscountLevel(lvTradeItemRec, lvDiscHistRec, TRUE, 0, '', lvRefDate, lvDiscType::Purchase);
                IF lvDiscHistRec."Sales Discount Group" <> '' THEN
                  "Item Disc. Group" := lvDiscHistRec."Sales Discount Group";
              END;  //db, 30-10-12: C002288

              IF CheckPriceDisc = TRUE THEN BEGIN  //db, 30-10-12: C002288
                lvOldPrice := "Last Direct Cost";  //instead of "Standard Cost";
                IF UpdateFieldByItemRelation(FIELDNO("Last Direct Cost"), lvItemPresent) THEN
                  "Last Direct Cost" := ROUND(lvTradeItemRec."Nett Price" / lvPackFactor, GLSetup."Unit-Amount Rounding Precision");
                VALIDATE("Last Direct Cost");

                //db.sn, 20-12-07 (call 10918)
                lvNewPrice := "Last Direct Cost";
                SkipMess := TRUE;
                TestNoEntriesExist(FIELDCAPTION("Last Direct Cost"),SkipMess);
                IF SkipMess = FALSE THEN BEGIN
                  "Unit Cost" := lvNewPrice;
                  "Standard Cost" := lvNewPrice;
                END ELSE BEGIN
                  SkipMess := FALSE;
                END;
                //db.en, 20-12-07

                IF UpdateFieldByItemRelation(FIELDNO("Unit Price"), lvItemPresent) THEN
                  "Unit Price" := ROUND(lvTradeItemRec."Gross Price" / lvPackFactor, GLSetup."Unit-Amount Rounding Precision");
                IF UpdateFieldByItemRelation(FIELDNO("Profit %"), lvItemPresent) THEN
                  "Profit %" := lvTradeItemRec."Discount Percentage";
                IF UpdateFieldByItemRelation(0, lvItemPresent) THEN BEGIN
                  IF (lvItemPresent) THEN
                    VALIDATE("Base Unit of Measure", lvApplUnit)
                  ELSE
                    "Base Unit of Measure" := lvApplUnit;
                  "Sales Unit of Measure" := lvApplUnit;
                  "Purch. Unit of Measure" := lvPackUnit;
                  "Reorder Quantity" := lvTradeItemRec."Minimum Order Quantity";
                  "Minimum Order Quantity" := lvTradeItemRec."Minimum Order Quantity";
                END;

                VALIDATE("Unit Price");
                IF lvOldPrice <> lvNewPrice THEN
                  "Source Revaluation" := '2BA';
              END;
              "Last Date Modified" := TODAY;  //db, 09-07-13: C004352
              "Modified by" := USERID; //**4PS Call C006789
              MODIFY;
            END;
          END;
      END;

      IF SkipPriceInfo = FALSE THEN BEGIN  //db, 19-12-11: M31760
        lvUnitRec.GET(lvApplUnit);
        IF NOT ItemUnitOfMeasure.GET(lvItem, lvApplUnit) THEN BEGIN
          ItemUnitOfMeasure.INIT;
          ItemUnitOfMeasure."Item No." := lvItem;
          ItemUnitOfMeasure.Code := lvApplUnit;
          ItemUnitOfMeasure."Qty. per Unit of Measure" := 1;
          ItemUnitOfMeasure.INSERT;
        END;

        IF lvPackUnit <> lvApplUnit THEN BEGIN
          lvUnitRec.GET(lvPackUnit);
          IF NOT ItemUnitOfMeasure.GET(lvItem, lvPackUnit) THEN BEGIN
            ItemUnitOfMeasure.INIT;
            ItemUnitOfMeasure."Item No." := lvItem;
            ItemUnitOfMeasure.Code := lvPackUnit;
            ItemUnitOfMeasure.INSERT;
          END;
          IF lvPackFactor <> 0 THEN
            ItemUnitOfMeasure."Qty. per Unit of Measure" := lvPackFactor;
          ItemUnitOfMeasure.MODIFY;
        END;
      END;

      IF NOT ItemRelRec.GET(lvItem) THEN BEGIN
        ItemRelRec.INIT;
        ItemRelRec."Navision Item" := lvItem;
        CASE lvType OF
          lvType::BasicItem:
            BEGIN
              ItemRelRec."Basic Item" := lvBasicItemRec."Product Code";
              ItemRelRec.Manufacturer := lvBasicItemRec.Manufacturer;
              ItemRelRec."Trade Item" := '';
              ItemRelRec.Vendor := '';
            END;
          lvType::TradeItem:
            BEGIN
              ItemRelRec."Basic Item" := lvTradeItemRec."Product Code";
              ItemRelRec.Manufacturer := lvTradeItemRec.Manufacturer;
              ItemRelRec."Trade Item" := lvTradeItemRec."Item Code";
              ItemRelRec.Vendor := lvTradeItemRec.Vendor;
            END;
        END;
        ItemRelRec."GTIN Code" := MainRec."GTIN Code";
        ItemRelRec."Source Type" := lvType;
        ItemRelRec."Generated Link" := TRUE;
        ItemRelRec.INSERT;
      END;

      IF lvItemPresent = FALSE THEN BEGIN
        CentrManagementCU.EditItem(MainRec,1,MainRec);
        CentrManagementCU.EditItemRelation(ItemRelRec,1,ItemRelRec);
      END ELSE BEGIN
        CentrManagementCU.EditItem(MainRec,2,MainRec);
      END;
    END;

    PROCEDURE GetDefaultItem@1210190003();
    VAR
      DefItemRec@11012002 : Record 27;
      DefaultChecked@11012001 : Boolean;
    BEGIN
      //**4PS
      IF NOT DefaultChecked THEN BEGIN
        InvtSetup.GET;
        IF NOT DefItemRec.GET(InvtSetup."Default Item") THEN DefItemRec.INIT;
        DefaultChecked := TRUE;
      END;

      "Global Dimension 2 Code" := DefItemRec."Global Dimension 2 Code";
      "Costing Method" := DefItemRec."Costing Method";
      "Price/Profit Calculation" := DefItemRec."Price/Profit Calculation";
      "Profit %" := DefItemRec."Profit %";
      "Gen. Prod. Posting Group" := DefItemRec."Gen. Prod. Posting Group";
      "VAT Prod. Posting Group" := DefItemRec."VAT Prod. Posting Group";
      "Inventory Posting Group" := DefItemRec."Inventory Posting Group";
      Reserve := DefItemRec.Reserve;
      "Maximum Inventory" := DefItemRec."Maximum Inventory";
      "Reorder Point" := DefItemRec."Reorder Point";
      "Reorder Quantity" := DefItemRec."Reorder Quantity";
      "Base Unit of Measure" := DefItemRec."Base Unit of Measure";
      "Language Code" := DefItemRec."Language Code";
    END;

    PROCEDURE GetPurchaseUnitPrice@1210190000(lvType@1210190000 : Integer) : Decimal;
    BEGIN
      //**4PS
      IF NOT ItemUnitOfMeasure.GET("No.", "Purch. Unit of Measure") THEN
        ItemUnitOfMeasure.INIT;
      IF ItemUnitOfMeasure."Qty. per Unit of Measure" = 0 THEN
        ItemUnitOfMeasure."Qty. per Unit of Measure" := 1;

      IF lvType = 0 THEN
        EXIT( "Unit Cost" * ItemUnitOfMeasure."Qty. per Unit of Measure" )
      ELSE
        EXIT( "Unit Price" * ItemUnitOfMeasure."Qty. per Unit of Measure" );
    END;

    PROCEDURE ExchangeFSA@1100485002(IMode@1100485003 : Code[1]);
    VAR
      lvProjSetupRec@1100485001 : Record 315;
      lvFieldVisionExchangeMgtCU@1100485000 : Codeunit 11012091;
    BEGIN
      //**4PS
      IF IMode = 'I' THEN BEGIN
        "Export to FSA" := FALSE;
        "Date/Time Export to FSA" := 0DT;
      END;
      lvProjSetupRec.GET;
      IF lvProjSetupRec."Field Service Active" THEN BEGIN
        IF IMode <> 'D' THEN BEGIN
          IF "Active in FSA" OR ((NOT "Active in FSA") AND ("Date/Time Export to FSA" <> 0DT)) THEN
            "Export to FSA" := TRUE;
          IF IMode = 'R' THEN
            lvFieldVisionExchangeMgtCU.StoreDeletedItem(xRec);
        END ELSE BEGIN
          lvFieldVisionExchangeMgtCU.StoreDeletedItem(Rec);
        END;
      END;
    END;

    PROCEDURE ExchangeMOB@1100528703(Mode@1100528702 : Code[1];Company@1100528703 : Text[50]);
    VAR
      JobsSetup@1100528700 : Record 315;
      DeletedDataMgtMobile@1100528701 : Codeunit 11012440;
    BEGIN
      //**4PS.n
      IF (Company <> '') THEN
        JobsSetup.CHANGECOMPANY(Company);
      JobsSetup.GET;
      IF NOT JobsSetup."4PS-Mobile Active" THEN
        EXIT;

      IF (Mode = 'D') THEN
        DeletedDataMgtMobile.StoreDeletedItem(Rec, Company);

      IF (Mode = 'R') THEN
        IF (xRec."No." = '') THEN
          DeletedDataMgtMobile.StoreDeletedItem(Rec, Company)
        ELSE
          DeletedDataMgtMobile.StoreDeletedItem(xRec, Company);
    END;

    PROCEDURE CheckParentItem@1210190011();
    VAR
      lvItemRec@1210190000 : Record 27;
      lvItem@1210190002 : Code[20];
      lvText000@1100485000 : TextConst 'ENU=Recursion';
    BEGIN
      //**4PS
      lvItem := "Parent Item";
      WHILE lvItem <> '' DO BEGIN
        IF "No." = lvItem THEN
          ERROR(lvText000);
        IF NOT lvItemRec.GET(lvItem) THEN EXIT;
        lvItem := lvItemRec."Parent Item";
      END;
    END;

    PROCEDURE UpdateFieldByItemRelation@1100525000(CalledBy@1100525000 : Integer;lvItemPresent@1100525001 : Boolean) : Boolean;
    BEGIN
      //**4PS
      IF lvItemPresent = FALSE THEN
        IF CalledBy <> FIELDNO("Profit %") THEN  //db, 31-10-14 (wait for check on InvtSetup while profit can be set be default item)
          EXIT(TRUE);

      IF CalledBy = FIELDNO("Last Direct Cost") THEN EXIT(TRUE);

      InvtSetup.GET;

      CASE InvtSetup."Update Price-Profit Relation" OF
        InvtSetup."Update Price-Profit Relation"::"Update Price+Profit":
          BEGIN
            EXIT(TRUE);
          END;
        InvtSetup."Update Price-Profit Relation"::"Fix Profit":
          BEGIN
            IF CalledBy = FIELDNO("Profit %") THEN EXIT(FALSE);
          END;
        InvtSetup."Update Price-Profit Relation"::None:
          BEGIN
            EXIT(FALSE);
          END;
      END;

      EXIT(TRUE);
    END;

    PROCEDURE QtyOnBudgetLines@1100525001() Qty : Decimal;
    VAR
      Project@1100525001 : Record 11072003;
      BudgetLine@1100525000 : Record 11012001;
      CountLine@1100525002 : Boolean;
    BEGIN
      //**4PS
      IF "No." = '' THEN  //23194.n  If called with item empty, then performance killer
        EXIT;
      WITH BudgetLine DO BEGIN
        SETRANGE("Item No.","No.");
        SETFILTER("Project No.",Rec.GETFILTER("Project Filter"));
        SETRANGE(Advised,FALSE);
        IF FINDFIRST THEN BEGIN
          REPEAT
            { //23194.so
            IF Project."No." <> "Project No." THEN
              IF NOT Project.GET("Project No.") THEN
                CLEAR(Project);
            IF Project."Project Status" IN
              [Project."Project Status"::Estimation,
              Project."Project Status"::Preparation,
              Project."Project Status"::Production]
            THEN
              Qty += Quantity;
            } //23194.eo
            //23194.sn
            IF Project."No." <> "Project No." THEN BEGIN
              CountLine := Project.GET("Project No.");
              IF (NOT CountLine) THEN
                Project."No." := "Project No."
              ELSE BEGIN
                IF (Project."Project Status" > Project."Project Status"::Production) THEN
                  CountLine := FALSE;
              END;
              IF (NOT CountLine) THEN BEGIN
                FILTERGROUP(9);
                SETRANGE("Project No.", "Project No.");
                FINDLAST;  // Pointer on last record of the project (first field of current key is "Project No.")
                SETRANGE("Project No.");  //* Reset filter
                FILTERGROUP(0);
              END;
            END;
            IF CountLine THEN
              Qty += Quantity;
            //23194.en
          UNTIL NEXT = 0;
        END;
      END;
    END;

    PROCEDURE QtyOnAdviceOrderLines@1100525002(VAR QtyPurchase@1100525004 : Decimal;VAR QtyInventory@1100525005 : Decimal) Qty : Decimal;
    VAR
      Project@1100525001 : Record 11072003;
      AdviceOrderLine@1100525000 : Record 11012055;
      ServOrder@1100525002 : Record 11012823;
      CountLine@1100525003 : Boolean;
      CountLineProj@1100525006 : Boolean;
      CountLineServ@1100525007 : Boolean;
    BEGIN
      //**4PS
      QtyPurchase := 0;
      QtyInventory := 0;
      IF "No." = '' THEN  //23194.n  If called with item empty, then performance killer
        EXIT;
      WITH AdviceOrderLine DO BEGIN
        SETCURRENTKEY("Item No.");
        SETRANGE("Item No.","No.");
        SETFILTER("Project No.",Rec.GETFILTER("Project Filter"));
        SETFILTER("Receipt Date",Rec.GETFILTER("Date Filter"));
        IF FINDSET THEN BEGIN
          REPEAT
            { //23194.so
            IF Project."No." <> "Project No." THEN
              IF NOT Project.GET("Project No.") THEN
                CLEAR(Project);
            IF Project."Project Status" IN
              [Project."Project Status"::Estimation,
              Project."Project Status"::Preparation,
              Project."Project Status"::Production]
            THEN
              Qty += "Quantity (Advice)";
            } //23194.eo
            //23194.sn
            //* Note: Use 'IF "Project Status" ..., do not set a filter on "Process Status" because of performance killer in SQL.
      //      IF (NOT Processed) AND ("Process Status" <= "Process Status"::Released) THEN BEGIN
            IF (NOT Processed) AND (("Process Status" <= "Process Status"::Released) OR ("Process Status" = "Process Status"::"On Hold")) THEN BEGIN       //CALL 27071
              IF "Record Type" <> "Record Type"::ServOrder THEN BEGIN
                IF Project."No." <> "Project No." THEN BEGIN
                  CountLineProj := Project.GET("Project No.");
                  IF (NOT CountLineProj) THEN
                    Project."No." := "Project No."
                  ELSE BEGIN
                    IF (Project."Project Status" > Project."Project Status"::Production) THEN
                      CountLineProj := FALSE;
                  END;
                END;
                CountLine := CountLineProj;
              END ELSE BEGIN
                IF ServOrder."No." <> "Service Order No." THEN BEGIN
                  CountLineServ := ServOrder.GET("Service Order No.");
                  IF (NOT CountLineServ) THEN
                    ServOrder."No." := "Service Order No."
                  ELSE BEGIN
                    IF (ServOrder.Status > ServOrder.Status::"In Process") THEN
                      CountLineServ := FALSE;
                  END;
                END;
                CountLine := CountLineServ;
              END;
              IF CountLine THEN BEGIN
                Qty += "Quantity (Advice)";
                IF Transaction IN [Transaction::Purchase,Transaction::Requisition] THEN
                  QtyPurchase += "Quantity (Advice)"
                ELSE
                  QtyInventory += "Quantity (Advice)";
              END;
            END;
            //23194.en
          UNTIL NEXT = 0;
        END;
      END;
    END;

    PROCEDURE QtyOnProjMatReqLines@1100525003() Result : Decimal;
    VAR
      Item@1100525002 : Record 27;
      ProjMatReqLine@1100525000 : Record 11012526;
      RemainingQuantity@1100525001 : Decimal;
    BEGIN
      //**4PS
      IF "No." = '' THEN EXIT(0);  //db, 09-10-15

      Item.COPY(Rec);
      IF ProjMatReqLine.FindLinesWithItemToPlan(Item) THEN BEGIN
        REPEAT
          RemainingQuantity := ProjMatReqLine.GetRemainingQuantity;
          Result := Result + RemainingQuantity;
        UNTIL ProjMatReqLine.NEXT = 0;
      END;
    END;

    PROCEDURE CalcItemSalesPriceForCustomer@1100528400(Quantity@1100528400 : Decimal;QtyPerUnitOfMeasure@1100528401 : Decimal;CustomerNo@1100528402 : Code[20];StartingDate@1100528403 : Date) : Decimal;
    VAR
      SalesPriceCalcMgt@1100528404 : Codeunit 7000;
    BEGIN
      //**4PS //kkleermaker, 110721, M23540
      IF CustomerNo <> '' THEN
        EXIT(
          SalesPriceCalcMgt.CalcItemSalesPriceForCustomer(
            Quantity,
            QtyPerUnitOfMeasure,
            "No.",
            CustomerNo,
            StartingDate));
    END;

    PROCEDURE LookupItemNoWithSalesPrice@1100528401(VAR ItemNo@1100528403 : Code[20];Quantity@1100528404 : Decimal;QuantityPerUnit@1100528405 : Decimal;CustomerNo@1100528401 : Code[20];StartingDate@1100528406 : Date);
    VAR
      Item@1100528402 : Record 27;
      ItemList@1100528400 : Page 31;
    BEGIN
      //**4PS //kkleermaker, 110721, M23540
      ItemList.SetVarsForCalcItemSalesPrice(
        Quantity,
        QuantityPerUnit,
        CustomerNo,
        StartingDate);

      ItemList.LOOKUPMODE(TRUE);
      IF Item.GET(ItemNo) THEN
        ItemList.SETRECORD(Item);
      IF ItemList.RUNMODAL = ACTION::LookupOK THEN
        ItemList.GETRECORD(Item);

      ItemNo := Item."No.";
    END;

    PROCEDURE DPA_SetDefaultDpmtFromNoSeries@1100000995(xRecRef@1100525002 : RecordRef);
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      xRecRef.SETTABLE(xRec);
      DPA_Management.SetDepartmentCodeNoSeries(
        TABLENAME,
        "Global Dimension 1 Code",
        "No. Series",
        xRec."No. Series" );
    END;

    LOCAL PROCEDURE DPA_OnInsert@1100000991();
    VAR
      Dimension1Code@1100528400 : Code[20];
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      Dimension1Code :=
        DPA_Management.GetNoSeriesDepartmentCode(
          "No. Series",
          xRec."No. Series",
          DATABASE::Item);
      IF Dimension1Code <> '' THEN
        "Global Dimension 1 Code" := Dimension1Code;

      IF "Global Dimension 1 Code" <> '' THEN BEGIN
        SkipModify := TRUE;
        VALIDATE("Global Dimension 1 Code");
        SkipModify := FALSE;
      END;
    END;

    PROCEDURE SetCompanyLogistics@1100485000(lCompanyLogistics@1100485000 : Text[50]);
    BEGIN
      //**4PS
      CompanyLogistics := lCompanyLogistics;
    END;

    PROCEDURE GetItemLedgerEntryInventory@1100528300() : Decimal;
    VAR
      ItemLedgerEntry@1100528300 : Record 32;
      TotalInventory@1100528301 : Decimal;
      Dimension1Code@1100528400 : Code[20];
    BEGIN
      //**4PS
      ItemLedgerEntry.SETCURRENTKEY("Item No.");
      ItemLedgerEntry.SETRANGE("Item No.", "No.");
      IF (NOT ItemLedgerEntry.FINDFIRST) THEN
        EXIT(0);

      REPEAT
        TotalInventory += ItemLedgerEntry.Quantity;
      UNTIL (ItemLedgerEntry.NEXT = 0);
      EXIT(TotalInventory);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Filter"));
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(27) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 27');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::Item, "Global Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Global Dimension 1 Code");
    END;

    PROCEDURE UpdateItemVendor@1100409000(ItemNew@1100409000 : Record 27;ItemOld@1100409001 : Record 27);
    VAR
      ItemVendor@1100409003 : Record 99;
    BEGIN
      //**4PS
      //db, 03-09-12: 19781
      ItemVendor.SETRANGE("Item No.", ItemNew."No.");
      ItemVendor.SETRANGE("Vendor No.", ItemOld."Vendor No.");
      ItemVendor.SETRANGE("Source Type", ItemVendor."Source Type"::Item);
      ItemVendor.MODIFYALL("Vendor Item No.", ItemNew."Vendor Item No.");
    END;

    PROCEDURE DrillDownQtyOnPlantOrder@1100529000();
    VAR
      PlantOrderLine@1100529000 : Record 11012557;
    BEGIN
      //DP00690
      PlantOrderLine.SETCURRENTKEY("Item No.", Posted, "Location Code", "Variant Code", "Transfer Date");
      PlantOrderLine.SETRANGE("Item No.", "No.");
      PlantOrderLine.SETRANGE(Posted, FALSE);
      IF GETFILTER("Location Filter") <> '' THEN
        COPYFILTER("Location Filter", PlantOrderLine."Location Code");
      IF GETFILTER("Variant Filter") <> '' THEN
        COPYFILTER("Variant Filter", PlantOrderLine."Variant Code");
      IF GETFILTER("Date Filter") <> '' THEN
        COPYFILTER("Date Filter", PlantOrderLine."Transfer Date");
      PAGE.RUNMODAL(PAGE::"Plant Order Item Line List", PlantOrderLine);
    END;

    PROCEDURE GetTradeItemUnitPrices@1100528402(VAR GrossPriceInventoryUnit@1100528407 : Decimal;VAR NettPriceInventoryUnit@1100528406 : Decimal;VAR GrossPricePurchaseUnit@1100528405 : Decimal;VAR NettPricePurchaseUnit@1100528404 : Decimal;VAR DiscPerc@1100528403 : Decimal);
    VAR
      TradeItem@1100528402 : Record 11012317;
      ValidateItems@1100528400 : Codeunit 11012033;
      RefDate@1100528401 : Date;
    BEGIN
      //**4PS
      GrossPriceInventoryUnit := 0;
      NettPriceInventoryUnit := 0;
      GrossPricePurchaseUnit := 0;
      NettPricePurchaseUnit := 0;
      DiscPerc := 0;

      CALCFIELDS("Vendor (Trade Item)", "Item Vendor");
      IF ("Vendor (Trade Item)" = '') AND
         ("Item Vendor" = '')
      THEN
        EXIT;

      IF TradeItem.GET("Vendor (Trade Item)", "Item Vendor") THEN BEGIN
        RefDate := ValidateItems.CheckRefDateLevel('');
        TradeItem.GetActualPrice(RefDate, '', '');
        TradeItem.GetUnitPrices(
          GrossPriceInventoryUnit, NettPriceInventoryUnit, GrossPricePurchaseUnit,
          NettPricePurchaseUnit, DiscPerc);
      END;
    END;

    PROCEDURE GetProjectMaterialRequirement@1100525006() Result : Decimal;
    VAR
      ProjSetup@1100525000 : Record 315;
      ProjMatReqLine@1100525001 : Record 11012526;
    BEGIN
      //**4PS
      IF "No." = '' THEN EXIT(0);  //db, 09-10-15

      ProjSetup.GET;
      IF NOT ProjSetup."Apply ProjMat for ReqLine" THEN EXIT(0);

      ProjMatReqLine.SETCURRENTKEY("Item No.");
      ProjMatReqLine.SETRANGE("Item No.", "No.");
      IF ProjMatReqLine.FINDSET THEN BEGIN
        REPEAT
          Result := Result + ProjMatReqLine.GetRemainingQuantity;
        UNTIL ProjMatReqLine.NEXT = 0;
      END;

      EXIT(Result);
    END;

    PROCEDURE DrillDownQtyOnProjMatReqLine@1100525005();
    VAR
      ProjMatReqLine@1100525000 : Record 11012526;
    BEGIN
      //**4PS
      ProjMatReqLine.SETCURRENTKEY("Item No.");  //db, 02-11-15: including sort on Delivery Date
      ProjMatReqLine.SETRANGE("Item No.", "No.");
      IF ProjMatReqLine.FINDSET THEN BEGIN
        REPEAT
          IF ProjMatReqLine.GetRemainingQuantity <> 0 THEN
            ProjMatReqLine.MARK := TRUE;
        UNTIL ProjMatReqLine.NEXT = 0;
      END;
      ProjMatReqLine.MARKEDONLY(TRUE);
      PAGE.RUNMODAL(0, ProjMatReqLine);
    END;

    PROCEDURE DrillDownProjectInventory@1100525004();
    VAR
      ProjInventEntryRec@1100525001 : Record 11012670;
      ProjInventListFrm@1100525000 : Page 11012673;
    BEGIN
      //**4PS
      ProjInventEntryRec.SETRANGE("Item No.", "No.");
      ProjInventListFrm.SETTABLEVIEW(ProjInventEntryRec);
      ProjInventListFrm.SetDefaultKeyNo(4);  //* Item
      ProjInventListFrm.RUNMODAL;
    END;

    PROCEDURE SetSkipCentralDataMgtInOnRename@1100528700(Value@1100528700 : Boolean);
    BEGIN
      SkipCentralDataMgtInOnRename := Value;
    END;

    BEGIN
    {
      4PS
      - extra fields (head/sub)-group + extra information for base/trade items
      - Item field extended from 30 to 50 related to base/trade items
      4PS HBK 07-07-09 Field added: MPS Item
      4PS HBK 09-07-09 Fields added: Demand Time Calculation and Blanket Order Plan Item
      4PS HBK 07-05-10 Fields added: "Qty. on Purch. Order (Inv.)" and "Qty. on Purch. Order (Project)"
      4PS HBK 07-05-10 Added Project Filter in Flowfield Inventory for Projects
      4PS HBK 07-05-10 Added functions QtyOnBudgetLines and QtyOnAdviceOrderLines

      //**4PS: db, 25-03-13: C006659 (declaration SerialNo 20->40)
    }
    END.
  }
}

