OBJECT Table 270 Bank Account
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00.00.45480,NAVFI9.DK9,4PS9.00,4PSSE.DK.FI;
  }
  PROPERTIES
  {
    Permissions=TableData 271=r;
    DataCaptionFields=No.,Name;
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 GLSetup.GET;
                 GLSetup.TESTFIELD("Bank Account Nos.");
                 NoSeriesMgt.InitSeries(GLSetup."Bank Account Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               IF NOT InsertFromContact THEN
                 UpdateContFromBank.OnInsert(Rec);

               DimMgt.UpdateDefaultDim(
                 DATABASE::"Bank Account","No.",
                 "Global Dimension 1 Code","Global Dimension 2 Code");
               //**4PS Generated Code. Do Not Change.sn05
               DPA_OnInsert;
               //**4PS Generated Code.en05
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;

               //**4PS.sn #C013204
               IF (IBAN <> '') AND (STRLEN("SWIFT Code") <> 8) THEN
                 MESSAGE(Text11000000, FIELDCAPTION("SWIFT Code"), "SWIFT Code");
               //**4PS.en #C013204

               IF (Name <> xRec.Name) OR
                  ("Search Name" <> xRec."Search Name") OR
                  ("Name 2" <> xRec."Name 2") OR
                  (Address <> xRec.Address) OR
                  ("Address 2" <> xRec."Address 2") OR
                  (City <> xRec.City) OR
                  ("Phone No." <> xRec."Phone No.") OR
                  ("Telex No." <> xRec."Telex No.") OR
                  ("Territory Code" <> xRec."Territory Code") OR
                  ("Currency Code" <> xRec."Currency Code") OR
                  ("Language Code" <> xRec."Language Code") OR
                  ("Our Contact Code" <> xRec."Our Contact Code") OR
                  ("Country/Region Code" <> xRec."Country/Region Code") OR
                  ("Fax No." <> xRec."Fax No.") OR
                  ("Telex Answer Back" <> xRec."Telex Answer Back") OR
                  ("Post Code" <> xRec."Post Code") OR
                  (County <> xRec.County) OR
                  ("E-Mail" <> xRec."E-Mail") OR
                  ("Home Page" <> xRec."Home Page")
               THEN BEGIN
                 MODIFY;
                 UpdateContFromBank.OnModify(Rec);
                 IF NOT FIND THEN BEGIN
                   RESET;
                   IF FIND THEN;
                 END;
               END;
             END;

    OnDelete=BEGIN
               MoveEntries.MoveBankAccEntries(Rec);

               CommentLine.SETRANGE("Table Name",CommentLine."Table Name"::"Bank Account");
               CommentLine.SETRANGE("No.","No.");
               CommentLine.DELETEALL;

               UpdateContFromBank.OnDelete(Rec);

               DimMgt.DeleteDefaultDim(DATABASE::"Bank Account","No.");
             END;

    OnRename=BEGIN
               "Last Date Modified" := TODAY;
             END;

    CaptionML=ENU=Bank Account;
    LookupPageID=Page371;
    DrillDownPageID=Page371;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;AltSearchField=Search Name;
                                                   OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  GLSetup.GET;
                                                                  NoSeriesMgt.TestManual(GLSetup."Bank Account Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 2   ;   ;Name                ;Text50        ;OnValidate=BEGIN
                                                                IF ("Search Name" = UPPERCASE(xRec.Name)) OR ("Search Name" = '') THEN
                                                                  "Search Name" := Name;
                                                              END;

                                                   CaptionML=ENU=Name }
    { 3   ;   ;Search Name         ;Code50        ;CaptionML=ENU=Search Name }
    { 4   ;   ;Name 2              ;Text50        ;CaptionML=ENU=Name 2 }
    { 5   ;   ;Address             ;Text50        ;CaptionML=ENU=Address }
    { 6   ;   ;Address 2           ;Text50        ;CaptionML=ENU=Address 2 }
    { 7   ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=City }
    { 8   ;   ;Contact             ;Text50        ;CaptionML=ENU=Contact }
    { 9   ;   ;Phone No.           ;Text30        ;OnValidate=BEGIN
                                                                PhoneNumberFormatting.ValidatePhoneNumber("Country/Region Code", "Phone No."); //**4PS.n
                                                              END;

                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Phone No. }
    { 10  ;   ;Telex No.           ;Text20        ;CaptionML=ENU=Telex No. }
    { 13  ;   ;Bank Account No.    ;Text30        ;OnValidate=VAR
                                                                lvBankAccountRec@1210190000 : Record 270;
                                                              BEGIN
                                                                //**4PS.sn
                                                                IF "Bank Account No." <> '' THEN BEGIN
                                                                  lvBankAccountRec.SETCURRENTKEY("Bank Account No.");
                                                                  lvBankAccountRec.SETFILTER("No.", '<>%1', "No.");
                                                                  lvBankAccountRec.SETRANGE("Bank Account No.","Bank Account No.");
                                                                  IF lvBankAccountRec.FINDFIRST THEN
                                                                    MESSAGE(Text11012000, FIELDCAPTION("Bank Account No."), "Bank Account No.",FIELDCAPTION("No."), lvBankAccountRec."No.") ;
                                                                END;
                                                                //**4PS.en

                                                                //>>NAVDK
                                                                GLSetup.GET;
                                                                IF GLSetup."Danish localization active" AND ("Bank Account No." <> '') AND (STRLEN("Bank Account No.") < 10) THEN
                                                                  "Bank Account No." := PADSTR('',10 - STRLEN("Bank Account No."),'0') + "Bank Account No.";
                                                                //<<NAVDK
                                                                //>>NAVFI
                                                                IF GLSetup."Finnish localization active" THEN
                                                                  IF ("Country/Region Code"= '') OR ("Country/Region Code"= 'FI') THEN BEGIN
                                                                    IF STRLEN("Bank Account No.") > 15 THEN
                                                                      ERROR(Text1090000,FIELDCAPTION("Bank Account No."));
                                                                    IF "Bank Account No." <> '' THEN
                                                                      BankNosCheck.CheckBankAccount ("Bank Account No.","No.");
                                                                  END;
                                                                //<<NAVFI
                                                              END;

                                                   CaptionML=ENU=Bank Account No. }
    { 14  ;   ;Transit No.         ;Text20        ;CaptionML=ENU=Transit No. }
    { 15  ;   ;Territory Code      ;Code10        ;TableRelation=Territory;
                                                   CaptionML=ENU=Territory Code }
    { 16  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   CaptionClass='1,1,1' }
    { 17  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=ENU=Global Dimension 2 Code;
                                                   CaptionClass='1,1,2' }
    { 18  ;   ;Chain Name          ;Code10        ;CaptionML=ENU=Chain Name }
    { 20  ;   ;Min. Balance        ;Decimal       ;CaptionML=ENU=Min. Balance;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 21  ;   ;Bank Acc. Posting Group;Code10     ;TableRelation="Bank Account Posting Group";
                                                   CaptionML=ENU=Bank Acc. Posting Group }
    { 22  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF "Currency Code" = xRec."Currency Code" THEN
                                                                  EXIT;

                                                                BankAcc.RESET;
                                                                BankAcc := Rec;
                                                                BankAcc.CALCFIELDS(Balance,"Balance (LCY)");
                                                                BankAcc.TESTFIELD(Balance,0);
                                                                BankAcc.TESTFIELD("Balance (LCY)",0);

                                                                IF NOT BankAccLedgEntry.SETCURRENTKEY("Bank Account No.",Open) THEN
                                                                  BankAccLedgEntry.SETCURRENTKEY("Bank Account No.");
                                                                BankAccLedgEntry.SETRANGE("Bank Account No.","No.");
                                                                BankAccLedgEntry.SETRANGE(Open,TRUE);
                                                                IF BankAccLedgEntry.FINDLAST THEN
                                                                  ERROR(
                                                                    Text000,
                                                                    FIELDCAPTION("Currency Code"));
                                                              END;

                                                   CaptionML=ENU=Currency Code }
    { 24  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=ENU=Language Code }
    { 26  ;   ;Statistics Group    ;Integer       ;CaptionML=ENU=Statistics Group }
    { 29  ;   ;Our Contact Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=ENU=Our Contact Code }
    { 35  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   OnValidate=BEGIN
                                                                //NAVFI
                                                                GLSetup.GET;
                                                                IF GLSetup."Finnish localization active" THEN
                                                                  VALIDATE("Bank Account No.");
                                                              END;

                                                   CaptionML=ENU=Country/Region Code }
    { 37  ;   ;Amount              ;Decimal       ;CaptionML=ENU=Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 38  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Comment Line" WHERE (Table Name=CONST(Bank Account),
                                                                                           No.=FIELD(No.)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 39  ;   ;Blocked             ;Boolean       ;CaptionML=ENU=Blocked }
    { 41  ;   ;Last Statement No.  ;Code20        ;CaptionML=ENU=Last Statement No. }
    { 42  ;   ;Last Payment Statement No.;Code20  ;OnValidate=VAR
                                                                TextManagement@1000 : Codeunit 41;
                                                              BEGIN
                                                                TextManagement.EvaluateIncStr("Last Payment Statement No.",FIELDCAPTION("Last Payment Statement No."));
                                                              END;

                                                   CaptionML=ENU=Last Payment Statement No. }
    { 54  ;   ;Last Date Modified  ;Date          ;CaptionML=ENU=Last Date Modified;
                                                   Editable=No }
    { 55  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Date Filter }
    { 56  ;   ;Global Dimension 1 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Global Dimension 1 Filter;
                                                   CaptionClass='1,3,1' }
    { 57  ;   ;Global Dimension 2 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Global Dimension 2 Filter;
                                                   CaptionClass='1,3,2' }
    { 58  ;   ;Balance             ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Bank Account Ledger Entry".Amount WHERE (Bank Account No.=FIELD(No.),
                                                                                                             Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                             Global Dimension 2 Code=FIELD(Global Dimension 2 Filter)));
                                                   CaptionML=ENU=Balance;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 59  ;   ;Balance (LCY)       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Bank Account Ledger Entry"."Amount (LCY)" WHERE (Bank Account No.=FIELD(No.),
                                                                                                                     Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Global Dimension 2 Code=FIELD(Global Dimension 2 Filter)));
                                                   CaptionML=ENU=Balance (LCY);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 60  ;   ;Net Change          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Bank Account Ledger Entry".Amount WHERE (Bank Account No.=FIELD(No.),
                                                                                                             Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                             Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                             Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Net Change;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 61  ;   ;Net Change (LCY)    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Bank Account Ledger Entry"."Amount (LCY)" WHERE (Bank Account No.=FIELD(No.),
                                                                                                                     Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                     Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Net Change (LCY);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 62  ;   ;Total on Checks     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Check Ledger Entry".Amount WHERE (Bank Account No.=FIELD(No.),
                                                                                                      Entry Status=FILTER(Posted),
                                                                                                      Statement Status=FILTER(<>Closed)));
                                                   CaptionML=ENU=Total on Checks;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 84  ;   ;Fax No.             ;Text30        ;OnValidate=BEGIN
                                                                PhoneNumberFormatting.ValidatePhoneNumber("Country/Region Code", "Fax No."); //**4PS.n
                                                              END;

                                                   CaptionML=ENU=Fax No. }
    { 85  ;   ;Telex Answer Back   ;Text20        ;CaptionML=ENU=Telex Answer Back }
    { 89  ;   ;Picture             ;BLOB          ;CaptionML=ENU=Picture;
                                                   SubType=Bitmap }
    { 91  ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Post Code }
    { 92  ;   ;County              ;Text30        ;CaptionML=ENU=County }
    { 93  ;   ;Last Check No.      ;Code20        ;AccessByPermission=TableData 272=R;
                                                   CaptionML=ENU=Last Check No. }
    { 94  ;   ;Balance Last Statement;Decimal     ;CaptionML=ENU=Balance Last Statement;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 95  ;   ;Balance at Date     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Bank Account Ledger Entry".Amount WHERE (Bank Account No.=FIELD(No.),
                                                                                                             Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                             Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                             Posting Date=FIELD(UPPERLIMIT(Date Filter))));
                                                   CaptionML=ENU=Balance at Date;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 96  ;   ;Balance at Date (LCY);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Bank Account Ledger Entry"."Amount (LCY)" WHERE (Bank Account No.=FIELD(No.),
                                                                                                                     Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                     Posting Date=FIELD(UPPERLIMIT(Date Filter))));
                                                   CaptionML=ENU=Balance at Date (LCY);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 97  ;   ;Debit Amount        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Bank Account Ledger Entry"."Debit Amount" WHERE (Bank Account No.=FIELD(No.),
                                                                                                                     Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                     Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Debit Amount;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 98  ;   ;Credit Amount       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Bank Account Ledger Entry"."Credit Amount" WHERE (Bank Account No.=FIELD(No.),
                                                                                                                      Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                      Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                      Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Credit Amount;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 99  ;   ;Debit Amount (LCY)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Bank Account Ledger Entry"."Debit Amount (LCY)" WHERE (Bank Account No.=FIELD(No.),
                                                                                                                           Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                           Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                           Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Debit Amount (LCY);
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 100 ;   ;Credit Amount (LCY) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Bank Account Ledger Entry"."Credit Amount (LCY)" WHERE (Bank Account No.=FIELD(No.),
                                                                                                                            Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                            Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                            Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Credit Amount (LCY);
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 101 ;   ;Bank Branch No.     ;Text20        ;OnValidate=BEGIN
                                                                //>>NAVDK
                                                                GLSetup.GET;
                                                                IF GLSetup."Danish localization active" AND ("Bank Branch No." <> '') AND (STRLEN("Bank Branch No.") < 4) THEN
                                                                  "Bank Branch No." := PADSTR('',4 - STRLEN("Bank Branch No."),'0') + "Bank Branch No.";
                                                                //<<NAVDK
                                                              END;

                                                   CaptionML=ENU=Bank Branch No. }
    { 102 ;   ;E-Mail              ;Text80        ;OnValidate=VAR
                                                                RecRef@1100528700 : RecordRef;
                                                                FldRef@1100528701 : FieldRef;
                                                              BEGIN
                                                                //**4PS.sn
                                                                RecRef.GETTABLE(Rec);
                                                                FldRef := RecRef.FIELD(FIELDNO("E-Mail"));
                                                                ContactDataValidation.ValidateEmail(FldRef, "E-Mail");
                                                                //**4PS.en
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=ENU=E-Mail }
    { 103 ;   ;Home Page           ;Text80        ;ExtendedDatatype=URL;
                                                   CaptionML=ENU=Home Page }
    { 107 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 108 ;   ;Check Report ID     ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Report));
                                                   CaptionML=ENU=Check Report ID }
    { 109 ;   ;Check Report Name   ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Name" WHERE (Object Type=CONST(Report),
                                                                                                             Object ID=FIELD(Check Report ID)));
                                                   CaptionML=ENU=Check Report Name;
                                                   Editable=No }
    { 110 ;   ;IBAN                ;Code50        ;OnValidate=VAR
                                                                CompanyInfo@1000 : Record 79;
                                                                lvBankAccountRec@1210190000 : Record 270;
                                                              BEGIN
                                                                CompanyInfo.CheckIBAN(IBAN);
                                                                //**4PS.sn
                                                                IF IBAN <> '' THEN BEGIN
                                                                  lvBankAccountRec.SETCURRENTKEY(IBAN);
                                                                  lvBankAccountRec.SETFILTER("No.", '<>%1', "No.");
                                                                  lvBankAccountRec.SETRANGE(IBAN,IBAN);
                                                                  IF lvBankAccountRec.FINDFIRST THEN
                                                                    MESSAGE(Text11012000, FIELDCAPTION(IBAN), IBAN,FIELDCAPTION("No."), lvBankAccountRec."No.") ;
                                                                END;
                                                                //**4PS.en
                                                              END;

                                                   CaptionML=ENU=IBAN }
    { 111 ;   ;SWIFT Code          ;Code20        ;CaptionML=ENU=SWIFT Code }
    { 113 ;   ;Bank Statement Import Format;Code20;TableRelation="Bank Export/Import Setup".Code WHERE (Direction=CONST(Import));
                                                   CaptionML=ENU=Bank Statement Import Format }
    { 115 ;   ;Credit Transfer Msg. Nos.;Code10   ;TableRelation="No. Series";
                                                   CaptionML=ENU=Credit Transfer Msg. Nos. }
    { 116 ;   ;Direct Debit Msg. Nos.;Code10      ;TableRelation="No. Series";
                                                   CaptionML=ENU=Direct Debit Msg. Nos. }
    { 117 ;   ;SEPA Direct Debit Exp. Format;Code20;
                                                   TableRelation="Bank Export/Import Setup".Code WHERE (Direction=CONST(Export));
                                                   CaptionML=ENU=SEPA Direct Debit Exp. Format }
    { 170 ;   ;Creditor No.        ;Code35        ;CaptionML=ENU=Creditor No. }
    { 1210;   ;Payment Export Format;Code20       ;TableRelation="Bank Export/Import Setup".Code WHERE (Direction=CONST(Export));
                                                   CaptionML=ENU=Payment Export Format }
    { 1211;   ;Bank Clearing Code  ;Text50        ;CaptionML=ENU=Bank Clearing Code }
    { 1212;   ;Bank Clearing Standard;Text50      ;TableRelation="Bank Clearing Standard";
                                                   CaptionML=ENU=Bank Clearing Standard }
    { 1213;   ;Bank Name - Data Conversion;Text50 ;TableRelation="Bank Data Conv. Bank" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Bank Name - Data Conversion }
    { 1250;   ;Match Tolerance Type;Option        ;OnValidate=BEGIN
                                                                IF "Match Tolerance Type" <> xRec."Match Tolerance Type" THEN
                                                                  "Match Tolerance Value" := 0;
                                                              END;

                                                   CaptionML=ENU=Match Tolerance Type;
                                                   OptionCaptionML=ENU=Percentage,Amount;
                                                   OptionString=Percentage,Amount }
    { 1251;   ;Match Tolerance Value;Decimal      ;OnValidate=BEGIN
                                                                IF "Match Tolerance Value" < 0 THEN
                                                                  ERROR(InvalidValueErr);

                                                                IF "Match Tolerance Type" = "Match Tolerance Type"::Percentage THEN
                                                                  IF "Match Tolerance Value" > 99 THEN
                                                                    ERROR(InvalidPercentageValueErr,FIELDCAPTION("Match Tolerance Type"),
                                                                      FORMAT("Match Tolerance Type"::Percentage));
                                                              END;

                                                   CaptionML=ENU=Match Tolerance Value;
                                                   DecimalPlaces=0:5 }
    { 1260;   ;Positive Pay Export Code;Code20    ;TableRelation="Bank Export/Import Setup".Code WHERE (Direction=CONST(Export-Positive Pay));
                                                   CaptionML=ENU=Positive Pay Export Code }
    { 11012000;;B-Account          ;Boolean       ;CaptionML=ENU=B-Account }
    { 11012010;;BTL91 ID           ;Code4         ;CaptionML=ENU=BTL91 ID }
    { 11012020;;Limit No. of Descriptions to;Option;
                                                   CaptionML=ENU=Limit No. of Descriptions to;
                                                   OptionCaptionML=ENU=" ,,2 Lines,3 Lines";
                                                   OptionString=[ ,,2 Lines,3 Lines] }
    { 11012030;;Batchbooking SEPA  ;Boolean       ;CaptionML=ENU=Batchbooking SEPA }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Search Name                              }
    {    ;Bank Acc. Posting Group                  }
    {    ;Currency Code                            }
    {    ;Country/Region Code                      }
    {    ;Bank Account No.                         }
    {    ;IBAN                                     }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Name,Bank Account No.,Currency Code  }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot change %1 because there are one or more open ledger entries for this bank account.';
      Text003@1003 : TextConst 'ENU=Do you wish to create a contact for %1 %2?';
      GLSetup@1004 : Record 98;
      BankAcc@1005 : Record 270;
      BankAccLedgEntry@1006 : Record 271;
      CommentLine@1007 : Record 97;
      PostCode@1008 : Record 225;
      NoSeriesMgt@1009 : Codeunit 396;
      MoveEntries@1010 : Codeunit 361;
      UpdateContFromBank@1011 : Codeunit 5058;
      DimMgt@1012 : Codeunit 408;
      ContactDataValidation@1100528700 : Codeunit 11012275;
      PhoneNumberFormatting@1100528701 : Codeunit 11012276;
      InsertFromContact@1013 : Boolean;
      Text004@1014 : TextConst 'ENU=Before you can use Online Map, you must fill in the Online Map Setup window.\See Setting Up Online Map in Help.';
      BankAccIdentifierIsEmptyErr@1001 : TextConst 'ENU=You must specify either a %1 or an %2.';
      InvalidPercentageValueErr@1002 : TextConst '@@@=%1 is "field caption and %2 is "Percentage";ENU=If %1 is %2, then the value must be between 0 and 99.';
      InvalidValueErr@1015 : TextConst 'ENU=The value must be positive.';
      DPA_Management@1100000999 : Codeunit 11012783;
      Text11000000@1100525000 : TextConst 'ENU=%1 %2 may not be filled out correctly.';
      Text11012000@1210190000 : TextConst 'ENU=%1 %2 already exists at %3 %4';
      SkipModify@1100528400 : Boolean;
      Text11012001@1100409000 : TextConst 'ENU=You are not authorized for %1 %2.';
      BankNosCheck@1090010 : Codeunit 11126182;
      Text1090000@1090000 : TextConst 'ENU=Domestic %1 must not exceed 15 characters.';

    PROCEDURE AssistEdit@2(OldBankAcc@1000 : Record 270) : Boolean;
    BEGIN
      WITH BankAcc DO BEGIN
        BankAcc := Rec;
        GLSetup.GET;
        GLSetup.TESTFIELD("Bank Account Nos.");
        IF NoSeriesMgt.SelectSeries(GLSetup."Bank Account Nos.",OldBankAcc."No. Series","No. Series") THEN BEGIN
          GLSetup.GET;
          GLSetup.TESTFIELD("Bank Account Nos.");
          NoSeriesMgt.SetSeries("No.");
          Rec := BankAcc;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.SaveDefaultDim(DATABASE::"Bank Account","No.",FieldNumber,ShortcutDimCode);
      IF NOT SkipModify THEN //**4PS.n
        MODIFY;
    END;

    PROCEDURE ShowContact@1();
    VAR
      ContBusRel@1000 : Record 5054;
      Cont@1001 : Record 5050;
    BEGIN
      IF "No." = '' THEN
        EXIT;

      ContBusRel.SETCURRENTKEY("Link to Table","No.");
      ContBusRel.SETRANGE("Link to Table",ContBusRel."Link to Table"::"Bank Account");
      ContBusRel.SETRANGE("No.","No.");
      IF NOT ContBusRel.FINDFIRST THEN BEGIN
        IF NOT CONFIRM(Text003,FALSE,TABLECAPTION,"No.") THEN
          EXIT;
        UpdateContFromBank.InsertNewContact(Rec,FALSE);
        ContBusRel.FINDFIRST;
      END;
      COMMIT;

      Cont.SETCURRENTKEY("Company Name","Company No.",Type,Name);
      //Cont.SETRANGE("Company No.",ContBusRel."Contact No."); //**4PS.o
      Cont.SETRANGE("Company No.",ContBusRel."Contact No."); //**4PS.n
      PAGE.RUN(PAGE::"Contact List",Cont);
      EXIT;
    END;

    PROCEDURE SetInsertFromContact@3(FromContact@1000 : Boolean);
    BEGIN
      InsertFromContact := FromContact;
    END;

    PROCEDURE GetPaymentExportCodeunitID@6() : Integer;
    VAR
      BankExportImportSetup@1000 : Record 1200;
    BEGIN
      GetBankExportImportSetup(BankExportImportSetup);
      EXIT(BankExportImportSetup."Processing Codeunit ID");
    END;

    PROCEDURE GetPaymentExportXMLPortID@4() : Integer;
    VAR
      BankExportImportSetup@1000 : Record 1200;
    BEGIN
      GetBankExportImportSetup(BankExportImportSetup);
      BankExportImportSetup.TESTFIELD("Processing XMLport ID");
      EXIT(BankExportImportSetup."Processing XMLport ID");
    END;

    PROCEDURE GetDDExportCodeunitID@11() : Integer;
    VAR
      BankExportImportSetup@1000 : Record 1200;
    BEGIN
      GetDDExportImportSetup(BankExportImportSetup);
      BankExportImportSetup.TESTFIELD("Processing Codeunit ID");
      EXIT(BankExportImportSetup."Processing Codeunit ID");
    END;

    PROCEDURE GetDDExportXMLPortID@9() : Integer;
    VAR
      BankExportImportSetup@1000 : Record 1200;
    BEGIN
      GetDDExportImportSetup(BankExportImportSetup);
      BankExportImportSetup.TESTFIELD("Processing XMLport ID");
      EXIT(BankExportImportSetup."Processing XMLport ID");
    END;

    PROCEDURE GetBankExportImportSetup@8(VAR BankExportImportSetup@1001 : Record 1200);
    BEGIN
      TESTFIELD("Payment Export Format");
      BankExportImportSetup.GET("Payment Export Format");
    END;

    PROCEDURE GetDDExportImportSetup@12(VAR BankExportImportSetup@1001 : Record 1200);
    BEGIN
      TESTFIELD("SEPA Direct Debit Exp. Format");
      BankExportImportSetup.GET("SEPA Direct Debit Exp. Format");
    END;

    PROCEDURE GetCreditTransferMessageNo@5() : Code[20];
    VAR
      NoSeriesManagement@1000 : Codeunit 396;
    BEGIN
      TESTFIELD("Credit Transfer Msg. Nos.");
      EXIT(NoSeriesManagement.GetNextNo("Credit Transfer Msg. Nos.",TODAY,TRUE));
    END;

    PROCEDURE GetDirectDebitMessageNo@10() : Code[20];
    VAR
      NoSeriesManagement@1000 : Codeunit 396;
    BEGIN
      TESTFIELD("Direct Debit Msg. Nos.");
      EXIT(NoSeriesManagement.GetNextNo("Direct Debit Msg. Nos.",TODAY,TRUE));
    END;

    PROCEDURE DisplayMap@7();
    VAR
      MapPoint@1001 : Record 800;
      MapMgt@1000 : Codeunit 802;
    BEGIN
      IF MapPoint.FINDFIRST THEN
        MapMgt.MakeSelection(DATABASE::"Bank Account",GETPOSITION)
      ELSE
        MESSAGE(Text004);
    END;

    PROCEDURE GetDataExchDef@13(VAR DataExchDef@1000 : Record 1222);
    VAR
      BankExportImportSetup@1001 : Record 1200;
    BEGIN
      TESTFIELD("Bank Statement Import Format");

      BankExportImportSetup.GET("Bank Statement Import Format");
      BankExportImportSetup.TESTFIELD("Data Exch. Def. Code");

      DataExchDef.GET(BankExportImportSetup."Data Exch. Def. Code");
      DataExchDef.TESTFIELD(Type,DataExchDef.Type::"Bank Statement Import");
    END;

    PROCEDURE GetBankAccountNoWithCheck@14() AccountNo : Text;
    BEGIN
      AccountNo := GetBankAccountNo;
      IF AccountNo = '' THEN
        ERROR(BankAccIdentifierIsEmptyErr,FIELDCAPTION("Bank Account No."),FIELDCAPTION(IBAN));
    END;

    PROCEDURE GetBankAccountNo@15() : Text;
    BEGIN
      //>>NAVDK
      GLSetup.GET;
      IF GLSetup."Danish localization active" THEN BEGIN
              IF ("Bank Branch No." = '') OR ("Bank Account No." = '') THEN
                EXIT(DELCHR(IBAN,'=<>'));

              EXIT("Bank Branch No." + "Bank Account No.");
            END;
      //<<NAVDK

      IF IBAN <> '' THEN
        EXIT(DELCHR(IBAN,'=<>'));

      IF "Bank Account No." <> '' THEN
        EXIT("Bank Account No.");
    END;

    PROCEDURE IsInLocalCurrency@16() : Boolean;
    VAR
      GeneralLedgerSetup@1000 : Record 98;
    BEGIN
      IF "Currency Code" = '' THEN
        EXIT(TRUE);

      GeneralLedgerSetup.GET;
      EXIT("Currency Code" = GeneralLedgerSetup.GetCurrencyCode(''));
    END;

    PROCEDURE GetPosPayExportCodeunitID@17() : Integer;
    VAR
      BankExportImportSetup@1000 : Record 1200;
    BEGIN
      TESTFIELD("Positive Pay Export Code");
      BankExportImportSetup.GET("Positive Pay Export Code");
      EXIT(BankExportImportSetup."Processing Codeunit ID");
    END;

    PROCEDURE FilterBankAccounts@1100525003();
    VAR
      UserSetup@1100409000 : Record 91;
      ApplyFilter@1100525001 : Boolean;
    BEGIN
      //**4PS DP00664
      GLSetup.GET;
      IF GLSetup."Bank Account Filter Telebank" = '' THEN
        EXIT;

      IF UserSetup.GET(USERID) THEN
        ApplyFilter := NOT UserSetup."Ignore Bank Account Filter"
      ELSE
        ApplyFilter := TRUE;

      IF ApplyFilter THEN BEGIN
        FILTERGROUP(11);
        SETFILTER("No.", GLSetup."Bank Account Filter Telebank");
        FILTERGROUP(0);
      END;
    END;

    PROCEDURE CheckBankAccountInFilter@1100409000();
    VAR
      BankAccount@1100409000 : Record 270;
    BEGIN
      //**4PS DP00664 C018798
      BankAccount.COPY(Rec);
      BankAccount.FilterBankAccounts;
      IF NOT BankAccount.FIND('=') THEN
        ERROR(Text11012001,TABLECAPTION,"No.");
    END;

    PROCEDURE DPA_SetDefaultDpmtFromNoSeries@1100000995(xRecRef@1100525002 : RecordRef);
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      xRecRef.SETTABLE(xRec);
      DPA_Management.SetDepartmentCodeNoSeries(
        TABLENAME,
        "Global Dimension 1 Code",
        "No. Series",
        xRec."No. Series" );
    END;

    LOCAL PROCEDURE DPA_OnInsert@1100000991();
    VAR
      Dimension1Code@1100528400 : Code[20];
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      Dimension1Code :=
        DPA_Management.GetNoSeriesDepartmentCode(
          "No. Series",
          xRec."No. Series",
          DATABASE::"Bank Account");
      IF Dimension1Code <> '' THEN
        "Global Dimension 1 Code" := Dimension1Code;

      IF "Global Dimension 1 Code" <> '' THEN BEGIN
        SkipModify := TRUE;
        VALIDATE("Global Dimension 1 Code");
        SkipModify := FALSE;
      END;
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Filter"));
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(270) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 270');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Bank Account", "Global Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Global Dimension 1 Code");
    END;

    BEGIN
    {
      Version List=NAVW19.00.00.45480,NAVFI9.00.00.45480;
      Version List=NAVW19.00.00.45480,NAVDK9.00.00.45480;
    }
    END.
  }
}

