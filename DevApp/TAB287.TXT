OBJECT Table 287 Customer Bank Account
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00.00.45480,NAVFI9.DK9,4PS9.00,4PSSE.FI.DK;
  }
  PROPERTIES
  {
    DataCaptionFields=Customer No.,Code,Name;
    OnInsert=BEGIN
               //**4PS.sn
               CentrProspMngmt.EditCustomerBank(Rec,1,xRec);
               //**4PS.en
             END;

    OnModify=BEGIN
               //**4PS.sn
               IF (IBAN <> '') AND (STRLEN("SWIFT Code") <> 8) THEN
                 MESSAGE(Text1000001, FIELDCAPTION("SWIFT Code"), "SWIFT Code");
               CentrProspMngmt.EditCustomerBank(Rec,2,xRec);
               //**4PS.en
             END;

    OnDelete=VAR
               CustLedgerEntry@1000 : Record 21;
               Customer@1001 : Record 18;
             BEGIN
               CustLedgerEntry.SETRANGE("Customer No.","Customer No.");
               CustLedgerEntry.SETRANGE("Recipient Bank Account",Code);
               CustLedgerEntry.SETRANGE(Open,TRUE);
               IF NOT CustLedgerEntry.ISEMPTY THEN
                 ERROR(BankAccDeleteErr);
               IF Customer.GET("Customer No.") AND (Customer."Preferred Bank Account" = Code) THEN BEGIN
                 Customer."Preferred Bank Account" := '';
               //Customer.MODIFY; //**4PS.o
                 Customer.MODIFY; //**4PS.n
               END;

               //**4PS.sn
               CentrProspMngmt.EditCustomerBank(Rec,4,xRec);
               //**4PS.en
             END;

    CaptionML=ENU=Customer Bank Account;
    LookupPageID=Page424;
    DrillDownPageID=Page424;
  }
  FIELDS
  {
    { 1   ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Customer No.;
                                                   NotBlank=Yes }
    { 2   ;   ;Code                ;Code10        ;OnValidate=BEGIN
                                                                //**4PS.sn
                                                                IF Code <> xRec.Code THEN BEGIN
                                                                  BankAccRec := xRec;
                                                                  IF BankAccRec.FIND THEN
                                                                    CentrProspMngmt.EditCustomerBank(Rec,3,xRec);
                                                                END;
                                                                //**4PS.en
                                                              END;

                                                   CaptionML=ENU=Code;
                                                   NotBlank=Yes }
    { 3   ;   ;Name                ;Text50        ;CaptionML=ENU=Name }
    { 5   ;   ;Name 2              ;Text50        ;CaptionML=ENU=Name 2 }
    { 6   ;   ;Address             ;Text50        ;CaptionML=ENU=Address }
    { 7   ;   ;Address 2           ;Text50        ;CaptionML=ENU=Address 2 }
    { 8   ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=City }
    { 9   ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Post Code }
    { 10  ;   ;Contact             ;Text50        ;CaptionML=ENU=Contact }
    { 11  ;   ;Phone No.           ;Text30        ;OnValidate=BEGIN
                                                                PhoneNumberFormatting.ValidatePhoneNumber("Country/Region Code", "Phone No."); //**4PS.n
                                                              END;

                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Phone No. }
    { 12  ;   ;Telex No.           ;Text20        ;CaptionML=ENU=Telex No. }
    { 13  ;   ;Bank Branch No.     ;Text20        ;OnValidate=BEGIN
                                                                //>>NAVDK
                                                                GLSetup.GET;
                                                                IF GLSetup."Danish localization active" THEN
                                                                  IF ("Bank Branch No." <> '') AND (STRLEN("Bank Branch No.") < 4) THEN
                                                                    "Bank Branch No." := PADSTR('',4 - STRLEN("Bank Branch No."),'0') + "Bank Branch No.";
                                                                //<<NAVDK
                                                              END;

                                                   CaptionML=ENU=Bank Branch No. }
    { 14  ;   ;Bank Account No.    ;Text30        ;OnValidate=VAR
                                                                lvBankAccountRec@1210190000 : Record 287;
                                                                lvMessage@1210190001 : Boolean;
                                                              BEGIN
                                                                //**4PS.sn
                                                                IF "Bank Account No." <> '' THEN BEGIN
                                                                  lvBankAccountRec.SETCURRENTKEY("Bank Account No.");
                                                                  lvBankAccountRec.SETRANGE("Bank Account No.","Bank Account No.");
                                                                  IF lvBankAccountRec.FINDSET THEN BEGIN
                                                                    REPEAT
                                                                      IF (lvBankAccountRec."Customer No." <> "Customer No.") OR (lvBankAccountRec.Code <> Code) THEN BEGIN
                                                                        MESSAGE(Text11012000, FIELDCAPTION("Bank Account No."), "Bank Account No.",
                                                                                              FIELDCAPTION("Customer No."), lvBankAccountRec."Customer No.",
                                                                                              FIELDCAPTION(Code), lvBankAccountRec.Code) ;
                                                                        lvMessage := TRUE;
                                                                      END;
                                                                    UNTIL (lvBankAccountRec.NEXT = 0) OR lvMessage
                                                                  END;
                                                                END;
                                                                //**4PS.en

                                                                //>>NAVDK
                                                                GLSetup.GET;
                                                                IF GLSetup."Danish localization active" THEN
                                                                  IF ("Bank Account No." <> '') AND (STRLEN("Bank Account No.") < 10) THEN
                                                                    "Bank Account No." := PADSTR('',10 - STRLEN("Bank Account No."),'0') + "Bank Account No.";
                                                                //<<NAVDK
                                                                //>>NAVFI
                                                                IF GLSetup."Finnish localization active" THEN
                                                                  IF ("Country/Region Code" = '') OR ("Country/Region Code" = 'FI') THEN BEGIN
                                                                    IF STRLEN("Bank Account No.") > 15 THEN
                                                                      ERROR(Text1090000,FIELDCAPTION("Bank Account No."));
                                                                    IF "Bank Account No." <> '' THEN
                                                                      BankNosCheck.CheckBankAccount ("Bank Account No.",Code);
                                                                  END;
                                                                //<<NAVFI
                                                              END;

                                                   CaptionML=ENU=Bank Account No. }
    { 15  ;   ;Transit No.         ;Text20        ;CaptionML=ENU=Transit No. }
    { 16  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=ENU=Currency Code }
    { 17  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   OnValidate=BEGIN
                                                                //NAVFI
                                                                GLSetup.GET;
                                                                IF GLSetup."Finnish localization active" THEN
                                                                  VALIDATE("Bank Account No.");
                                                              END;

                                                   CaptionML=ENU=Country/Region Code }
    { 18  ;   ;County              ;Text30        ;CaptionML=ENU=County }
    { 19  ;   ;Fax No.             ;Text30        ;CaptionML=ENU=Fax No. }
    { 20  ;   ;Telex Answer Back   ;Text20        ;CaptionML=ENU=Telex Answer Back }
    { 21  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=ENU=Language Code }
    { 22  ;   ;E-Mail              ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=ENU=E-Mail }
    { 23  ;   ;Home Page           ;Text80        ;ExtendedDatatype=URL;
                                                   CaptionML=ENU=Home Page }
    { 24  ;   ;IBAN                ;Code50        ;OnValidate=VAR
                                                                CompanyInfo@1000 : Record 79;
                                                                lvBankAccountRec@1210190000 : Record 287;
                                                                lvMessage@1210190001 : Boolean;
                                                              BEGIN
                                                                CompanyInfo.CheckIBAN(IBAN);
                                                                //**4PS.sn
                                                                IF IBAN <> '' THEN BEGIN
                                                                  lvBankAccountRec.SETCURRENTKEY(IBAN);
                                                                  lvBankAccountRec.SETRANGE(IBAN,IBAN);
                                                                  IF lvBankAccountRec.FINDSET THEN BEGIN
                                                                    REPEAT
                                                                      IF (lvBankAccountRec."Customer No." <> "Customer No.") OR (lvBankAccountRec.Code <> Code) THEN BEGIN
                                                                        MESSAGE(Text11012000, FIELDCAPTION(IBAN), IBAN,
                                                                                              FIELDCAPTION("Customer No."), lvBankAccountRec."Customer No.",
                                                                                              FIELDCAPTION(Code), lvBankAccountRec.Code) ;
                                                                        lvMessage := TRUE;
                                                                      END;
                                                                    UNTIL (lvBankAccountRec.NEXT = 0) OR lvMessage
                                                                  END;
                                                                END;
                                                                //**4PS.en
                                                              END;

                                                   CaptionML=ENU=IBAN }
    { 25  ;   ;SWIFT Code          ;Code20        ;CaptionML=ENU=SWIFT Code }
    { 1211;   ;Bank Clearing Code  ;Text50        ;CaptionML=ENU=Bank Clearing Code }
    { 1212;   ;Bank Clearing Standard;Text50      ;TableRelation="Bank Clearing Standard";
                                                   CaptionML=ENU=Bank Clearing Standard }
    { 11126181;;Clearing Code      ;Text35        ;CaptionML=ENU=Clearing Code;
                                                   Description=NAVFI }
  }
  KEYS
  {
    {    ;Customer No.,Code                       ;Clustered=Yes }
    {    ;Bank Account No.                         }
    {    ;IBAN                                     }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;Code,Name,Phone No.,Contact              }
  }
  CODE
  {
    VAR
      PostCode@1000 : Record 225;
      BankAccIdentifierIsEmptyErr@1001 : TextConst 'ENU=You must specify either a Bank Account No. or an IBAN.';
      BankAccDeleteErr@1002 : TextConst 'ENU=You cannot delete this bank account because there are one or more open ledger entries associated with the bank account.';
      BankAccRec@11012002 : Record 287;
      CentrProspMngmt@11012004 : Codeunit 11012010;
      Text1000001@1100525000 : TextConst 'ENU=%1 %2 may be incorrect.';
      Text11012000@1210190000 : TextConst 'ENU=%1 %2 already exists at %3 %4 %5 %6';
      PhoneNumberFormatting@1100528700 : Codeunit 11012276;
      GLSetup@11001 : Record 98;
      BankNosCheck@1090002 : Codeunit 11126182;
      Text1090000@1090000 : TextConst 'ENU=Domestic %1 must not exceed 15 characters.';

    PROCEDURE GetBankAccountNoWithCheck@14() AccountNo : Text;
    BEGIN
      AccountNo := GetBankAccountNo;
      IF AccountNo = '' THEN
        ERROR(BankAccIdentifierIsEmptyErr);
    END;

    PROCEDURE GetBankAccountNo@1() : Text;
    BEGIN
                        //>>NAVDK
                        GLSetup.GET;
                        IF GLSetup."Danish localization active" THEN BEGIN
              IF ("Bank Branch No." = '') OR ("Bank Account No." = '') THEN
              EXIT(DELCHR(IBAN,'=<>'));

              EXIT("Bank Branch No." + "Bank Account No.");
                        END;
                        //<<NAVDK
      IF IBAN <> '' THEN
        EXIT(DELCHR(IBAN,'=<>'));

      IF "Bank Account No." <> '' THEN
        EXIT("Bank Account No.");
    END;

    BEGIN
    {
      Version List=NAVW19.00.00.45480,NAVFI9.00.00.45480;
      Version List=NAVW19.00.00.45480,NAVDK9.00.00.45480;
    }
    END.
  }
}

