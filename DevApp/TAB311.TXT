OBJECT Table 311 Sales & Receivables Setup
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Sales & Receivables Setup;
    LookupPageID=Page459;
    DrillDownPageID=Page459;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 2   ;   ;Discount Posting    ;Option        ;CaptionML=ENU=Discount Posting;
                                                   OptionCaptionML=ENU=No Discounts,Invoice Discounts,Line Discounts,All Discounts;
                                                   OptionString=No Discounts,Invoice Discounts,Line Discounts,All Discounts }
    { 4   ;   ;Credit Warnings     ;Option        ;CaptionML=ENU=Credit Warnings;
                                                   OptionCaptionML=ENU=Both Warnings,Credit Limit,Overdue Balance,No Warning;
                                                   OptionString=Both Warnings,Credit Limit,Overdue Balance,No Warning }
    { 5   ;   ;Stockout Warning    ;Boolean       ;InitValue=Yes;
                                                   CaptionML=ENU=Stockout Warning }
    { 6   ;   ;Shipment on Invoice ;Boolean       ;AccessByPermission=TableData 110=R;
                                                   CaptionML=ENU=Shipment on Invoice }
    { 7   ;   ;Invoice Rounding    ;Boolean       ;CaptionML=ENU=Invoice Rounding }
    { 8   ;   ;Ext. Doc. No. Mandatory;Boolean    ;CaptionML=ENU=Ext. Doc. No. Mandatory }
    { 9   ;   ;Customer Nos.       ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Customer Nos. }
    { 10  ;   ;Quote Nos.          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Quote Nos. }
    { 11  ;   ;Order Nos.          ;Code10        ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 110=R;
                                                   CaptionML=ENU=Order Nos. }
    { 12  ;   ;Invoice Nos.        ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Invoice Nos. }
    { 13  ;   ;Posted Invoice Nos. ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Posted Invoice Nos. }
    { 14  ;   ;Credit Memo Nos.    ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Credit Memo Nos. }
    { 15  ;   ;Posted Credit Memo Nos.;Code10     ;TableRelation="No. Series";
                                                   CaptionML=ENU=Posted Credit Memo Nos. }
    { 16  ;   ;Posted Shipment Nos.;Code10        ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 110=R;
                                                   CaptionML=ENU=Posted Shipment Nos. }
    { 17  ;   ;Reminder Nos.       ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Reminder Nos. }
    { 18  ;   ;Issued Reminder Nos.;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Issued Reminder Nos. }
    { 19  ;   ;Fin. Chrg. Memo Nos.;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Fin. Chrg. Memo Nos. }
    { 20  ;   ;Issued Fin. Chrg. M. Nos.;Code10   ;TableRelation="No. Series";
                                                   CaptionML=ENU=Issued Fin. Chrg. M. Nos. }
    { 21  ;   ;Posted Prepmt. Inv. Nos.;Code10    ;TableRelation="No. Series";
                                                   CaptionML=ENU=Posted Prepmt. Inv. Nos. }
    { 22  ;   ;Posted Prepmt. Cr. Memo Nos.;Code10;TableRelation="No. Series";
                                                   CaptionML=ENU=Posted Prepmt. Cr. Memo Nos. }
    { 23  ;   ;Blanket Order Nos.  ;Code10        ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 110=R;
                                                   CaptionML=ENU=Blanket Order Nos.;
                                                   Description=4PS: Raam  -> Afroep }
    { 24  ;   ;Calc. Inv. Discount ;Boolean       ;CaptionML=ENU=Calc. Inv. Discount }
    { 25  ;   ;Appln. between Currencies;Option   ;AccessByPermission=TableData 4=R;
                                                   CaptionML=ENU=Appln. between Currencies;
                                                   OptionCaptionML=ENU=None,EMU,All;
                                                   OptionString=None,EMU,All }
    { 26  ;   ;Copy Comments Blanket to Order;Boolean;
                                                   InitValue=Yes;
                                                   AccessByPermission=TableData 110=R;
                                                   CaptionML=ENU=Copy Comments Blanket to Order;
                                                   Description=4PS: Raam  -> Afroep }
    { 27  ;   ;Copy Comments Order to Invoice;Boolean;
                                                   InitValue=Yes;
                                                   AccessByPermission=TableData 110=R;
                                                   CaptionML=ENU=Copy Comments Order to Invoice }
    { 28  ;   ;Copy Comments Order to Shpt.;Boolean;
                                                   InitValue=Yes;
                                                   AccessByPermission=TableData 110=R;
                                                   CaptionML=ENU=Copy Comments Order to Shpt. }
    { 29  ;   ;Allow VAT Difference;Boolean       ;CaptionML=ENU=Allow VAT Difference }
    { 30  ;   ;Calc. Inv. Disc. per VAT ID;Boolean;CaptionML=ENU=Calc. Inv. Disc. per VAT ID }
    { 31  ;   ;Logo Position on Documents;Option  ;CaptionML=ENU=Logo Position on Documents;
                                                   OptionCaptionML=ENU=No Logo,Left,Center,Right;
                                                   OptionString=No Logo,Left,Center,Right }
    { 32  ;   ;Check Prepmt. when Posting;Boolean ;CaptionML=ENU=Check Prepmt. when Posting }
    { 35  ;   ;Default Posting Date;Option        ;CaptionML=ENU=Default Posting Date;
                                                   OptionCaptionML=ENU=Work Date,No Date;
                                                   OptionString=Work Date,No Date }
    { 36  ;   ;Default Quantity to Ship;Option    ;AccessByPermission=TableData 110=R;
                                                   CaptionML=ENU=Default Quantity to Ship;
                                                   OptionCaptionML=ENU=Remainder,Blank;
                                                   OptionString=Remainder,Blank }
    { 37  ;   ;Archive Quotes and Orders;Boolean  ;CaptionML=ENU=Archive Quotes and Orders }
    { 38  ;   ;Post with Job Queue ;Boolean       ;CaptionML=ENU=Post with Job Queue }
    { 39  ;   ;Job Queue Category Code;Code10     ;TableRelation="Job Queue Category";
                                                   CaptionML=ENU=Job Queue Category Code }
    { 40  ;   ;Job Queue Priority for Post;Integer;InitValue=1000;
                                                   OnValidate=BEGIN
                                                                IF "Job Queue Priority for Post" < 0 THEN
                                                                  ERROR(Text001);
                                                              END;

                                                   CaptionML=ENU=Job Queue Priority for Post;
                                                   MinValue=0 }
    { 41  ;   ;Post & Print with Job Queue;Boolean;CaptionML=ENU=Post & Print with Job Queue }
    { 42  ;   ;Job Q. Prio. for Post & Print;Integer;
                                                   InitValue=1000;
                                                   OnValidate=BEGIN
                                                                IF "Job Queue Priority for Post" < 0 THEN
                                                                  ERROR(Text001);
                                                              END;

                                                   CaptionML=ENU=Job Q. Prio. for Post & Print;
                                                   MinValue=0 }
    { 43  ;   ;Notify On Success   ;Boolean       ;CaptionML=ENU=Notify On Success }
    { 44  ;   ;VAT Bus. Posting Gr. (Price);Code10;TableRelation="VAT Business Posting Group";
                                                   CaptionML=ENU=VAT Bus. Posting Gr. (Price) }
    { 45  ;   ;Direct Debit Mandate Nos.;Code10   ;TableRelation="No. Series";
                                                   CaptionML=ENU=Direct Debit Mandate Nos. }
    { 5800;   ;Posted Return Receipt Nos.;Code10  ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 6660=R;
                                                   CaptionML=ENU=Posted Return Receipt Nos. }
    { 5801;   ;Copy Cmts Ret.Ord. to Ret.Rcpt;Boolean;
                                                   InitValue=Yes;
                                                   AccessByPermission=TableData 6660=R;
                                                   CaptionML=ENU=Copy Cmts Ret.Ord. to Ret.Rcpt }
    { 5802;   ;Copy Cmts Ret.Ord. to Cr. Memo;Boolean;
                                                   InitValue=Yes;
                                                   AccessByPermission=TableData 6660=R;
                                                   CaptionML=ENU=Copy Cmts Ret.Ord. to Cr. Memo }
    { 6600;   ;Return Order Nos.   ;Code10        ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 6660=R;
                                                   CaptionML=ENU=Return Order Nos. }
    { 6601;   ;Return Receipt on Credit Memo;Boolean;
                                                   AccessByPermission=TableData 6660=R;
                                                   CaptionML=ENU=Return Receipt on Credit Memo }
    { 6602;   ;Exact Cost Reversing Mandatory;Boolean;
                                                   CaptionML=ENU=Exact Cost Reversing Mandatory }
    { 7101;   ;Customer Group Dimension Code;Code20;
                                                   TableRelation=Dimension;
                                                   CaptionML=ENU=Customer Group Dimension Code }
    { 7102;   ;Salesperson Dimension Code;Code20  ;TableRelation=Dimension;
                                                   CaptionML=ENU=Salesperson Dimension Code }
    { 11012000;;One Installment per Invoice;Boolean;
                                                   CaptionML=ENU=One Installment per Invoice }
    { 11012011;;Invoice Sales Orders;Option       ;CaptionML=ENU=Invoice Sales Orders;
                                                   OptionCaptionML=ENU=No,Yes - Not Posted Invoice,Yes - Posted Invoice;
                                                   OptionString=No,NotPosted,Posted }
    { 11012012;;Invoice Return Orders;Option      ;CaptionML=ENU=Invoice Return Orders;
                                                   OptionCaptionML=ENU=No,Yes - Not Posted Credit Memo,Yes - Posted Credit Memo;
                                                   OptionString=No,NotPosted,Posted }
    { 11012020;;Generated Invoices Editable;Boolean;
                                                   CaptionML=ENU=Generated Invoices Editable }
    { 11012025;;Direct Delivery    ;Option        ;InitValue=No;
                                                   CaptionML=ENU=Direct Delivery;
                                                   OptionCaptionML=ENU=No,Yes,Yes - project/service only;
                                                   OptionString=No,Yes,Yes - project/service only }
    { 11012030;;Plant Depot Logistics;Code20      ;OnValidate=VAR
                                                                lvPlantLocRec@1100485000 : Record 11012554;
                                                              BEGIN
                                                                //**4PS
                                                                IF "Plant Depot Logistics" = '' THEN
                                                                  EXIT;
                                                                GetLogisticsCompanySeparated();
                                                                lvPlantLocRec.CHANGECOMPANY(CompanyLogistics);
                                                                lvPlantLocRec.GET("Plant Depot Logistics");
                                                                lvPlantLocRec.TESTFIELD(Depot, TRUE);
                                                              END;

                                                   OnLookup=VAR
                                                              lvPlantLocRec@1100485000 : Record 11012554;
                                                            BEGIN
                                                              //**4PS
                                                              GetLogisticsCompanySeparated();
                                                              lvPlantLocRec.CHANGECOMPANY(CompanyLogistics);
                                                              lvPlantLocRec.FILTERGROUP(6);
                                                              lvPlantLocRec.SETRANGE(Depot, TRUE);
                                                              lvPlantLocRec.FILTERGROUP(0);
                                                              lvPlantLocRec.Code := "Plant Depot Logistics";
                                                              IF PAGE.RUNMODAL(0, lvPlantLocRec) = ACTION::LookupOK THEN
                                                                VALIDATE("Plant Depot Logistics", lvPlantLocRec.Code);
                                                            END;

                                                   CaptionML=ENU=Plant Depot Logistics (Default);
                                                   Description=Default plant depot logistics (From location), for granule 'Separated Sales / Logistic" }
    { 11012035;;Location Code Logistics;Code10    ;OnValidate=VAR
                                                                lvLocRec@1100485000 : Record 14;
                                                              BEGIN
                                                                //**4PS
                                                                IF "Location Code Logistics" = '' THEN
                                                                  EXIT;
                                                                GetLogisticsCompanySeparated();
                                                                lvLocRec.CHANGECOMPANY(CompanyLogistics);
                                                                lvLocRec.GET("Location Code Logistics");
                                                                lvLocRec.TESTFIELD("Use As In-Transit", FALSE);
                                                              END;

                                                   OnLookup=VAR
                                                              lvLocRec@1100485000 : Record 14;
                                                            BEGIN
                                                              //**4PS
                                                              GetLogisticsCompanySeparated();
                                                              lvLocRec.CHANGECOMPANY(CompanyLogistics);
                                                              lvLocRec.FILTERGROUP(6);
                                                              lvLocRec.SETRANGE("Use As In-Transit", FALSE);
                                                              lvLocRec.FILTERGROUP(0);
                                                              lvLocRec.Code := "Location Code Logistics";
                                                              IF PAGE.RUNMODAL(0, lvLocRec) = ACTION::LookupOK THEN
                                                                VALIDATE("Location Code Logistics", lvLocRec.Code);
                                                            END;

                                                   CaptionML=ENU=Location Code Logistics (Default);
                                                   Description=Default location/depot logistics (From location) for items, for granule 'Separated Sales / Logistic" }
    { 11012040;;Min. Days To Invoice one Week;Integer;
                                                   CaptionML=ENU=Minimum Days To Invoice one Week;
                                                   MinValue=0;
                                                   MaxValue=7;
                                                   BlankZero=Yes }
    { 11012050;;Credit Reason Code Obligatory;Boolean;
                                                   CaptionML=ENU=Credit Reason Code Obligatory }
    { 11012060;;Archive Quote on Create Order;Boolean;
                                                   CaptionML=ENU=Archive Quote on Create Order }
    { 11012070;;Post only released Invoices;Boolean;
                                                   CaptionML=ENU=Post only released Invoices }
    { 11012075;;Release Sales Orders Required;Boolean;
                                                   CaptionML=ENU=Release Sales Orders Required }
    { 11012080;;Create Customer via Relation;Boolean;
                                                   CaptionML=ENU=Create Customer via Relation }
    { 11012300;;Replace Posting Date;Boolean      ;CaptionML=ENU=Replace Posting Date }
    { 11012310;;Replace Document Date;Boolean     ;CaptionML=ENU=Replace Document Date }
    { 11012550;;Internal Plant Invoice Nos.;Code10;TableRelation="No. Series";
                                                   CaptionML=ENU=Internal Plant Invoice Nos. }
    { 11012551;;Posted Internal Plant Invoices;Code10;
                                                   TableRelation="No. Series";
                                                   CaptionML=ENU=Posted Internal Plant Invoices }
    { 11012552;;Internal Plant Credit Memos;Code10;TableRelation="No. Series";
                                                   CaptionML=ENU=Internal Plant Credit Memos }
    { 11012553;;Posted Int. Plant Credit Memos;Code10;
                                                   TableRelation="No. Series";
                                                   CaptionML=ENU=Posted Int. Plant Credit Memos }
    { 11012554;;Plant Invoice Nos. ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Plant Invoice Nos. }
    { 11012555;;Posted Plant Invoice Nos.;Code10  ;TableRelation="No. Series";
                                                   CaptionML=ENU=Posted Plant Invoice Nos. }
    { 11012556;;Plant Credit Memo Nos.;Code10     ;TableRelation="No. Series";
                                                   CaptionML=ENU=Plant Credit Memo Nos. }
    { 11012557;;Posted Plant Credit Memos;Code10  ;TableRelation="No. Series";
                                                   CaptionML=ENU=Posted Plant Credit Memos }
    { 11012560;;Calculate B Amounts based on;Option;
                                                   CaptionML=ENU=Calculate B Amounts based on;
                                                   OptionCaptionML=ENU=Labor Amount,Invoice Amount;
                                                   OptionString=Labor Amount,Invoice Amount }
    { 11012600;;PDF Export Path    ;Text250       ;CaptionML=ENU=PDF Export Path }
    { 11012601;;XML Export Path    ;Text250       ;CaptionML=ENU=XML Export Path }
    { 11012606;;Export XMLport Sales Inv.;Integer ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(XMLport));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("XMLport Name Sales Inv.");
                                                              END;

                                                   OnLookup=VAR
                                                              AllObjWithCaption@1100525000 : Record 2000000058;
                                                            BEGIN
                                                              AllObjWithCaption.SETRANGE("Object Type",AllObjWithCaption."Object Type"::XMLport);
                                                              IF PAGE.RUNMODAL(PAGE::Objects,AllObjWithCaption) = ACTION::LookupOK THEN
                                                                VALIDATE("Export XMLport Sales Inv.",AllObjWithCaption."Object ID");
                                                            END;

                                                   CaptionML=ENU=Export XMLport Sales Inv.;
                                                   BlankZero=Yes }
    { 11012607;;XMLport Name Sales Inv.;Text80    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(XMLport),
                                                                                                                Object ID=FIELD(Export XMLport Sales Inv.)));
                                                   CaptionML=ENU=XMLport Name Sales Inv.;
                                                   Editable=No }
    { 11012608;;Export XMLport Cr. Memo;Integer   ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(XMLport));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("XMLport Name Cr. Memo");
                                                              END;

                                                   OnLookup=VAR
                                                              AllObjWithCaption@1100525000 : Record 2000000058;
                                                            BEGIN
                                                              AllObjWithCaption.SETRANGE("Object Type",AllObjWithCaption."Object Type"::XMLport);
                                                              IF PAGE.RUNMODAL(PAGE::Objects,AllObjWithCaption) = ACTION::LookupOK THEN
                                                                VALIDATE("Export XMLport Cr. Memo",AllObjWithCaption."Object ID");
                                                            END;

                                                   CaptionML=ENU=Export XMLport Cr. Memo;
                                                   BlankZero=Yes }
    { 11012609;;XMLport Name Cr. Memo;Text80      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(XMLport),
                                                                                                                Object ID=FIELD(Export XMLport Cr. Memo)));
                                                   CaptionML=ENU=XMLport Name Cr. Memo;
                                                   Editable=No }
    { 11012610;;Charge Removal Contribution;Boolean;
                                                   CaptionML=ENU=Charge Removal Contribution }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1000 : TextConst 'ENU=Job Queue Priority must be zero or positive.';
      CompanyLogistics@1100485000 : Text[30];

    PROCEDURE GetLegalStatement@11() : Text;
    BEGIN
      EXIT('');
    END;

    PROCEDURE JobQueueActive@1() : Boolean;
    BEGIN
      GET;
      EXIT("Post with Job Queue" OR "Post & Print with Job Queue");
    END;

    PROCEDURE GetLogisticsCompanySeparated@1100485006();
    VAR
      PlantMgtCompRec@1100485000 : Record 11020586;
    BEGIN
      //**4PS.n
      IF CompanyLogistics = '' THEN
        CompanyLogistics := PlantMgtCompRec.GetPlantCompanySalesRental(TRUE);
    END;

    BEGIN
    END.
  }
}

