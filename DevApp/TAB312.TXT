OBJECT Table 312 Purchases & Payables Setup
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,NAVSE9.FI9.NO9,4PS9.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=ENU=Purchases & Payables Setup;
    LookupPageID=Page460;
    DrillDownPageID=Page460;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 2   ;   ;Discount Posting    ;Option        ;CaptionML=ENU=Discount Posting;
                                                   OptionCaptionML=ENU=No Discounts,Invoice Discounts,Line Discounts,All Discounts;
                                                   OptionString=No Discounts,Invoice Discounts,Line Discounts,All Discounts }
    { 6   ;   ;Receipt on Invoice  ;Boolean       ;AccessByPermission=TableData 120=R;
                                                   CaptionML=ENU=Receipt on Invoice }
    { 7   ;   ;Invoice Rounding    ;Boolean       ;CaptionML=ENU=Invoice Rounding }
    { 8   ;   ;Ext. Doc. No. Mandatory;Boolean    ;InitValue=Yes;
                                                   CaptionML=ENU=Ext. Doc. No. Mandatory }
    { 9   ;   ;Vendor Nos.         ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Vendor Nos. }
    { 10  ;   ;Quote Nos.          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Quote Nos. }
    { 11  ;   ;Order Nos.          ;Code10        ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=ENU=Order Nos. }
    { 12  ;   ;Invoice Nos.        ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Invoice Nos. }
    { 13  ;   ;Posted Invoice Nos. ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Posted Invoice Nos. }
    { 14  ;   ;Credit Memo Nos.    ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Credit Memo Nos. }
    { 15  ;   ;Posted Credit Memo Nos.;Code10     ;TableRelation="No. Series";
                                                   CaptionML=ENU=Posted Credit Memo Nos. }
    { 16  ;   ;Posted Receipt Nos. ;Code10        ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=ENU=Posted Receipt Nos. }
    { 19  ;   ;Blanket Order Nos.  ;Code10        ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=ENU=Blanket Order Nos.;
                                                   Description=4PS: Raam  -> Afroep }
    { 20  ;   ;Calc. Inv. Discount ;Boolean       ;AccessByPermission=TableData 24=R;
                                                   CaptionML=ENU=Calc. Inv. Discount }
    { 21  ;   ;Appln. between Currencies;Option   ;AccessByPermission=TableData 4=R;
                                                   CaptionML=ENU=Appln. between Currencies;
                                                   OptionCaptionML=ENU=None,EMU,All;
                                                   OptionString=None,EMU,All }
    { 22  ;   ;Copy Comments Blanket to Order;Boolean;
                                                   InitValue=Yes;
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=ENU=Copy Comments Blanket to Order;
                                                   Description=4PS: Raam  -> Afroep }
    { 23  ;   ;Copy Comments Order to Invoice;Boolean;
                                                   InitValue=Yes;
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=ENU=Copy Comments Order to Invoice }
    { 24  ;   ;Copy Comments Order to Receipt;Boolean;
                                                   InitValue=Yes;
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=ENU=Copy Comments Order to Receipt }
    { 25  ;   ;Allow VAT Difference;Boolean       ;CaptionML=ENU=Allow VAT Difference }
    { 26  ;   ;Calc. Inv. Disc. per VAT ID;Boolean;CaptionML=ENU=Calc. Inv. Disc. per VAT ID }
    { 27  ;   ;Posted Prepmt. Inv. Nos.;Code10    ;TableRelation="No. Series";
                                                   CaptionML=ENU=Posted Prepmt. Inv. Nos. }
    { 28  ;   ;Posted Prepmt. Cr. Memo Nos.;Code10;TableRelation="No. Series";
                                                   CaptionML=ENU=Posted Prepmt. Cr. Memo Nos. }
    { 29  ;   ;Check Prepmt. when Posting;Boolean ;CaptionML=ENU=Check Prepmt. when Posting }
    { 35  ;   ;Default Posting Date;Option        ;CaptionML=ENU=Default Posting Date;
                                                   OptionCaptionML=ENU=Work Date,No Date;
                                                   OptionString=Work Date,No Date }
    { 36  ;   ;Default Qty. to Receive;Option     ;AccessByPermission=TableData 120=R;
                                                   CaptionML=ENU=Default Qty. to Receive;
                                                   OptionCaptionML=ENU=Remainder,Blank;
                                                   OptionString=Remainder,Blank;
                                                   Description=4PS: This field may not be used in 4PS-Construct, in conflict with 4PS functionality 'Direct Receipt' (fieldno 11012025);
                                                   Editable=No }
    { 37  ;   ;Archive Quotes and Orders;Boolean  ;CaptionML=ENU=Archive Quotes and Orders }
    { 38  ;   ;Post with Job Queue ;Boolean       ;CaptionML=ENU=Post with Job Queue }
    { 39  ;   ;Job Queue Category Code;Code10     ;TableRelation="Job Queue Category";
                                                   CaptionML=ENU=Job Queue Category Code }
    { 40  ;   ;Job Queue Priority for Post;Integer;InitValue=1000;
                                                   OnValidate=BEGIN
                                                                IF "Job Queue Priority for Post" < 0 THEN
                                                                  ERROR(Text001);
                                                              END;

                                                   CaptionML=ENU=Job Queue Priority for Post;
                                                   MinValue=0 }
    { 41  ;   ;Post & Print with Job Queue;Boolean;CaptionML=ENU=Post & Print with Job Queue }
    { 42  ;   ;Job Q. Prio. for Post & Print;Integer;
                                                   InitValue=1000;
                                                   OnValidate=BEGIN
                                                                IF "Job Queue Priority for Post" < 0 THEN
                                                                  ERROR(Text001);
                                                              END;

                                                   CaptionML=ENU=Job Q. Prio. for Post & Print;
                                                   MinValue=0 }
    { 43  ;   ;Notify On Success   ;Boolean       ;CaptionML=ENU=Notify On Success }
    { 1217;   ;Debit Acc. for Non-Item Lines;Code20;
                                                   TableRelation="G/L Account" WHERE (Direct Posting=CONST(Yes),
                                                                                      Account Type=CONST(Posting),
                                                                                      Blocked=CONST(No));
                                                   CaptionML=ENU=Debit Acc. for Non-Item Lines }
    { 1218;   ;Credit Acc. for Non-Item Lines;Code20;
                                                   TableRelation="G/L Account" WHERE (Direct Posting=CONST(Yes),
                                                                                      Account Type=CONST(Posting),
                                                                                      Blocked=CONST(No));
                                                   CaptionML=ENU=Credit Acc. for Non-Item Lines }
    { 5800;   ;Posted Return Shpt. Nos.;Code10    ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 6650=R;
                                                   CaptionML=ENU=Posted Return Shpt. Nos. }
    { 5801;   ;Copy Cmts Ret.Ord. to Ret.Shpt;Boolean;
                                                   InitValue=Yes;
                                                   AccessByPermission=TableData 6650=R;
                                                   CaptionML=ENU=Copy Cmts Ret.Ord. to Ret.Shpt }
    { 5802;   ;Copy Cmts Ret.Ord. to Cr. Memo;Boolean;
                                                   InitValue=Yes;
                                                   AccessByPermission=TableData 6650=R;
                                                   CaptionML=ENU=Copy Cmts Ret.Ord. to Cr. Memo }
    { 6600;   ;Return Order Nos.   ;Code10        ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 6650=R;
                                                   CaptionML=ENU=Return Order Nos. }
    { 6601;   ;Return Shipment on Credit Memo;Boolean;
                                                   AccessByPermission=TableData 6650=R;
                                                   CaptionML=ENU=Return Shipment on Credit Memo }
    { 6602;   ;Exact Cost Reversing Mandatory;Boolean;
                                                   CaptionML=ENU=Exact Cost Reversing Mandatory }
    { 11012000;;Purchase Registration Account;Code20;
                                                   TableRelation="G/L Account".No.;
                                                   OnValidate=BEGIN
                                                                IF "Purchase Registration Account" <> '' THEN BEGIN
                                                                  IF "Purchase Registration Account" = "Preregistration WIP Account" THEN
                                                                    FIELDERROR("Purchase Registration Account", STRSUBSTNO(Text11012001, FIELDCAPTION("Preregistration WIP Account")));
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Purchase Registration Account }
    { 11012010;;Invoice Purchase Orders;Boolean   ;CaptionML=ENU=Invoice Purchase Orders }
    { 11012020;;Close Pl.Ext.Rent Ord. on Rcpt;Boolean;
                                                   OnValidate=BEGIN
                                                                //**4PS.n
                                                                IF "Close Pl.Ext.Rent Ord. on Rcpt" THEN BEGIN
                                                                  //* This field may only be set if Plant is active (plantsetup present and in license)
                                                                  //* and external rent of plant is allowed ("Cost Component Rent" filled).
                                                                  PlantSetup.GET;
                                                                  PlantSetup.TESTFIELD("Cost Component Rent");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Close Plant External Rent Order on Receipt }
    { 11012025;;Direct Receipt     ;Option        ;InitValue=No;
                                                   OnValidate=BEGIN
                                                                IF "Direct Receipt" = "Direct Receipt"::No THEN
                                                                  "Direct Post Order" := FALSE;
                                                              END;

                                                   CaptionML=ENU=Direct Receipt;
                                                   OptionCaptionML=ENU=No,Yes,Yes - project/service only,Yes - not project/service,Yes - project location only;
                                                   OptionString=No,Yes,Yes - project/service only,Yes - not project/service,Yes - project location only }
    { 11012026;;Direct Receipt Pl. Transport;Boolean;
                                                   CaptionML=ENU=Direct Receipt Plant Transport }
    { 11012027;;Invoice Date ICF   ;Option        ;CaptionML=ENU=Invoice Date ICF;
                                                   OptionCaptionML=ENU=ICF Invoice Date,Workdate;
                                                   OptionString=ICF Invoice Date,Workdate }
    { 11012030;;Use Invoice Induction Note;Boolean;CaptionML=ENU=Use Invoice Induction Note }
    { 11012040;;Approve Purchase Invoices;Boolean ;OnValidate=BEGIN
                                                                IF "Approve Purchase Invoices" <> xRec."Approve Purchase Invoices" THEN
                                                                  "Default Invoice Lines Input" := NOT "Approve Purchase Invoices";
                                                              END;

                                                   CaptionML=ENU=Approve Purchase Invoices }
    { 11012041;;Approve ICF Purchase Invoices;Boolean;
                                                   CaptionML=ENU=Approve ICF Purchase Invoices }
    { 11012045;;Preregister WIP Purch. Inv.;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Preregister WIP Purch. Inv." = TRUE THEN BEGIN
                                                                  IF "VAT Indicator (Purchase)" = "VAT Indicator (Purchase)"::"No VAT"  THEN
                                                                    FIELDERROR("Preregister WIP Purch. Inv.", STRSUBSTNO(Text11012008, "Preregister WIP Purch. Inv.",
                                                                      FIELDCAPTION( "VAT Indicator (Purchase)"), "VAT Indicator (Purchase)"));
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Preregister WIP Purchase Invoices }
    { 11012046;;Preregistration WIP Account;Code20;TableRelation="G/L Account".No. WHERE (Direct Posting=FILTER(No),
                                                                                          WIP Account=FILTER(Yes));
                                                   OnValidate=BEGIN
                                                                IF "Preregistration WIP Account" <> '' THEN BEGIN
                                                                  IF "Preregistration WIP Account" = "Purchase Registration Account" THEN
                                                                    FIELDERROR("Preregistration WIP Account", STRSUBSTNO(Text11012001, FIELDCAPTION("Purchase Registration Account")));
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Preregistration WIP Account }
    { 11012050;;Lend In Orders Nos.;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Lend In Order Nos. }
    { 11012051;;Plant Hire Order Nos. (Hours);Code10;
                                                   TableRelation="No. Series";
                                                   CaptionML=ENU=Plant Hire Order Nos. (Hours) }
    { 11012060;;Posting Date Invoice Approvals;Option;
                                                   CaptionML=ENU=Posting Date Approvals (Default);
                                                   OptionCaptionML=ENU=Work Date,Invoice Posting Date;
                                                   OptionString=Current Date,Invoice Posting Date }
    { 11012070;;Inv.Appr.Converted ;Boolean       ;CaptionML=ENU=Inv.Appr.Converted }
    { 11012074;;Release Purch. Quotes Required;Boolean;
                                                   CaptionML=ENU=Release Purch. Quotes Required }
    { 11012075;;Release Purch Orders Required;Boolean;
                                                   CaptionML=ENU=Release Purchase Orders Required }
    { 11012077;;Release Invoice Appr. Required;Boolean;
                                                   CaptionML=ENU=Release Invoice Appr. Required }
    { 11012078;;Block Posting Receipts;Boolean    ;CaptionML=ENU="Block Posting Receipt (Contract, Letter of Credit) " }
    { 11012080;;Locations Nos.     ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Locations Nos. }
    { 11012090;;Default Invoice Lines Input;Boolean;
                                                   CaptionML=ENU=Default Invoice Lines Input }
    { 11012100;;Default Only Amounts Orders;Boolean;
                                                   CaptionML=ENU=Default Only Amounts Purchase }
    { 11012105;;Only Amounts Purchase Actions;Boolean;
                                                   CaptionML=ENU=Default Only Amounts Project Purchase Actions }
    { 11012110;;Price Agreement    ;Option        ;CaptionML=ENU=Price Agreement;
                                                   OptionCaptionML=ENU=" ,Order,Company";
                                                   OptionString=[ ,Order,Company] }
    { 11012120;;Create Order by Cost Type;Boolean ;CaptionML=ENU=Create Order by Cost Type }
    { 11012130;;Create Vendor via Relation;Boolean;CaptionML=ENU=Create Vendor via Relation }
    { 11012140;;Allow Link Item Docs to Purch.;Boolean;
                                                   CaptionML=ENU=Allow Link Item Document to Purchase Order }
    { 11012210;;Margin Amount (Header);Decimal    ;CaptionML=ENU=Margin Amount (Invoice/Receipt);
                                                   MinValue=0 }
    { 11012220;;Margin % (Header)  ;Decimal       ;CaptionML=ENU=Margin Percentage (Invoice/Receipt);
                                                   MinValue=0 }
    { 11012230;;Margin Amount (Detail);Decimal    ;CaptionML=ENU=Margin Amount (ICB/ICF Line);
                                                   MinValue=0 }
    { 11012240;;Margin % (Detail)  ;Decimal       ;CaptionML=ENU=Margin Percentage (ICB/ICF Line);
                                                   MinValue=0 }
    { 11012245;;No Check Inv.Amt. with Receipt;Boolean;
                                                   CaptionML=ENU=No Check Invoice Amount with Receipt }
    { 11012250;;Pay Not-Approved Invoices;Option  ;CaptionML=ENU=Pay Not-Approved Invoices;
                                                   OptionCaptionML=ENU=Only Manual,Yes,No;
                                                   OptionString=Only Manual,Yes,No }
    { 11012260;;Max. Score Assessment;Integer     ;InitValue=10;
                                                   OnValidate=VAR
                                                                Ass@1100525000 : Record 11012294;
                                                              BEGIN
                                                                IF Ass.FINDLAST THEN BEGIN
                                                                  IF "Max. Score Assessment" < Ass.Score THEN
                                                                    FIELDERROR("Max. Score Assessment");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Max. Score Assessment;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 11012270;;Block Invoices Mandatory;Boolean  ;CaptionML=ENU=Block Invoices Mandatory }
    { 11012280;;Not Post Inv. without Bank No.;Boolean;
                                                   CaptionML=ENU=Do Not Post Invoice without Bank No. }
    { 11012290;;Bank Account Check ;Boolean       ;CaptionML=ENU=Bank Account Check }
    { 11012300;;Replace Posting Date;Boolean      ;CaptionML=ENU=Replace Posting Date }
    { 11012310;;Replace Document Date;Boolean     ;CaptionML=ENU=Replace Document Date }
    { 11012320;;MTC Account No.    ;Code20        ;TableRelation="G/L Account".No.;
                                                   CaptionML=ENU=Multi Tank Card Account No. }
    { 11012325;;MTC Registration in Dimension;Code20;
                                                   TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                GeneralLedgerSetup.GET();
                                                                IF (GeneralLedgerSetup."Global Dimension 1 Code" = "MTC Registration in Dimension") OR
                                                                   (GeneralLedgerSetup."Global Dimension 2 Code" = "MTC Registration in Dimension") THEN
                                                                    ERROR(Text11012009);
                                                              END;

                                                   CaptionML=ENU=Multi Tank Card Registration in Dimension }
    { 11012340;;Scanning Application Purch.Inv;Option;
                                                   OnValidate=BEGIN
                                                                //**4PS
                                                                IF NOT ScannedInvFileNameIsAllowed THEN BEGIN//kkleermaker.n, 110614, m27909
                                                                  TESTFIELD("File Location Scanned Invoices", '');
                                                                  TESTFIELD("File Extension Scanned Inv", '');
                                                                END ELSE
                                                                  "Auto Fill Ext. Document ID" := '';

                                                                IF "Scanning Application Purch.Inv" <> "Scanning Application Purch.Inv"::Managemind THEN
                                                                  "Use Doc. Date as Posting Date" := FALSE;
                                                              END;

                                                   CaptionML=ENU=Scan Application Purchase Invoices;
                                                   OptionCaptionML=ENU=None,Managemind,LIP,Basware,Donau,,,,,d.3,Whitevision,Xtendis,Document Capture,,,,,,,,,,,,Other,External weblink;
                                                   OptionString=None,Managemind,LIP,Basware,Donau,,,,,d.3,Whitevision,Xtendis,Document Capture,,,,,,,,,,,,Other,ExtWeblink;
                                                   Description=,,,,,,,,,,,,,,,,,,,, }
    { 11012350;;Req. Template Name - Bar Code;Code10;
                                                   TableRelation="Req. Wksh. Template";
                                                   CaptionML=ENU=Req. Template Name;
                                                   Description=For Barcodescanner (see T11012061/F11012124) }
    { 11012351;;Req. Jnl. Batch Name -Bar Code;Code10;
                                                   TableRelation="Requisition Wksh. Name".Name WHERE (Worksheet Template Name=FIELD(Req. Template Name - Bar Code));
                                                   CaptionML=ENU=Req. Journal Batch Name;
                                                   Description=For Barcodescanner (see T11012061/F11012124) }
    { 11012360;;Vendor Charge Project/Service;Boolean;
                                                   CaptionML=ENU=Book Vendor Charge on Project/Service Order }
    { 11012365;;Deleted Disc. Project/Service;Boolean;
                                                   CaptionML=ENU=Book Deleteded Discount on Project/Service Order }
    { 11012380;;Use Consent OLD    ;Boolean       ;OnValidate=BEGIN
                                                                //**4PS
                                                                IF "Use Consent OLD" THEN
                                                                  "Start Consent date" := WORKDATE
                                                                ELSE
                                                                  CLEAR("Start Consent date");
                                                              END;

                                                   CaptionML=ENU=Use Consent }
    { 11012400;;Start Consent date ;Date          ;CaptionML=ENU=Start Consent date }
    { 11012410;;Purchase Action Auto Close;Boolean;CaptionML=ENU=Purchase Action Auto Close }
    { 11012420;;File Location Scanned Invoices;Text100;
                                                   OnValidate=BEGIN
                                                                //**4PS
                                                                IF "File Location Scanned Invoices" <> '' THEN BEGIN
                                                                  //CheckScannedInvFileName;//kkleermaker.n, 110614, m27909  //*32089.o
                                                                  //*32089.sn
                                                                  IF NOT ScannedInvFileNameIsAllowed THEN BEGIN
                                                                    FIELDERROR("File Location Scanned Invoices",
                                                                      STRSUBSTNO(Text11012003, FIELDCAPTION("Scanning Application Purch.Inv"), "Scanning Application Purch.Inv"));
                                                                  END;
                                                                  //*32089.en
                                                                  //CloseWithBackSlash("File Location Scanned Invoices");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=File Location Scanned Invoices }
    { 11012430;;File Extension Scanned Inv;Code10 ;OnValidate=BEGIN
                                                                //**4PS
                                                                IF "File Extension Scanned Inv" <> '' THEN BEGIN
                                                                  //CheckScannedInvFileName;//kkleermaker.n, 110614, m27909  //*32089.o
                                                                  //*32089.sn
                                                                  IF NOT ScannedInvFileNameIsAllowed THEN BEGIN
                                                                    FIELDERROR("File Extension Scanned Inv",
                                                                      STRSUBSTNO(Text11012003, FIELDCAPTION("Scanning Application Purch.Inv"), "Scanning Application Purch.Inv"));
                                                                  END;
                                                                  //*32089.en
                                                                  "File Extension Scanned Inv" := DELCHR("File Extension Scanned Inv", '=', '.')
                                                                END;
                                                              END;

                                                   CaptionML=ENU=File Extension Scanned Invoices }
    { 11012440;;VAT Indicator (Purchase);Option   ;OnValidate=BEGIN
                                                                IF "VAT Indicator (Purchase)" = "VAT Indicator (Purchase)"::"No VAT"  THEN
                                                                  IF "Preregister WIP Purch. Inv." = TRUE THEN BEGIN
                                                                    FIELDERROR("VAT Indicator (Purchase)", STRSUBSTNO(Text11012008,  "VAT Indicator (Purchase)",
                                                                    FIELDCAPTION("Preregister WIP Purch. Inv."), "Preregister WIP Purch. Inv."));
                                                                END;
                                                              END;

                                                   CaptionML=ENU=VAT Indicator;
                                                   OptionCaptionML=ENU=VAT,No VAT;
                                                   OptionString=VAT,No VAT }
    { 11012448;;VAT Cost Object Labor;Code20      ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                               Cost Type=CONST(Labor));
                                                   CaptionML=ENU=VAT Cost Object Labor }
    { 11012449;;VAT Cost Object Material;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                               Cost Type=CONST(Material));
                                                   CaptionML=ENU=VAT Cost Object Material }
    { 11012450;;VAT Cost Object Subcontracting;Code20;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                               Cost Type=CONST(Subcontracting));
                                                   CaptionML=ENU=VAT Cost Object Subcontracting }
    { 11012451;;VAT Cost Object Plant;Code20      ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                               Cost Type=CONST(Plant));
                                                   CaptionML=ENU=VAT Cost Object Plant }
    { 11012452;;VAT Cost Object Sundry;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                               Cost Type=CONST(Sundry));
                                                   CaptionML=ENU=VAT Cost Object Sundry }
    { 11012460;;Use Consent Advanced OLD;Boolean  ;CaptionML=ENU=Use Consent Advanced }
    { 11012465;;Consent Amount     ;Decimal       ;CaptionML=ENU=Consent Amount }
    { 11012470;;Block Appr. Inv. w. Cons.Lines;Boolean;
                                                   CaptionML=ENU=Block Appr. Inv. w. Cons.Lines }
    { 11012480;;Direct Post Order  ;Boolean       ;OnValidate=BEGIN
                                                                IF ("Direct Post Order") AND ("Direct Receipt" = "Direct Receipt"::No) THEN
                                                                  TESTFIELD("Direct Receipt", "Direct Receipt"::Yes);
                                                              END;

                                                   CaptionML=ENU=Direct Post Order }
    { 11012481;;Determine Approval Template;Option;CaptionML=ENU=Determine Approval Template;
                                                   OptionCaptionML=ENU=Vendor,Global Dimension 1 Code;
                                                   OptionString=Vendor,GlobalDim1 }
    { 11012482;;Server Name        ;Text50        ;CaptionML=ENU=Server Name }
    { 11012490;;Strategic Purchasing;Boolean      ;OnValidate=BEGIN
                                                                IF NOT "Strategic Purchasing" THEN
                                                                  "Strategic Purch. for Quotes" := FALSE;
                                                              END;

                                                   CaptionML=ENU=Strategic Purchasing }
    { 11012491;;Strategic Purch. for Quotes;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Strategic Purch. for Quotes" THEN
                                                                  "Strategic Purchasing" := TRUE;
                                                              END;

                                                   CaptionML=ENU=Strategic Purch. for Quotes }
    { 11012500;;Auto Fill Ext. Document ID;Text10 ;CaptionML=ENU=Auto Fill Ext. Document ID }
    { 11012510;;ICF Invoice Nos.   ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=ICF Invoice Nos. }
    { 11012520;;ICF Posted Invoice Nos.;Code10    ;TableRelation="No. Series";
                                                   CaptionML=ENU=ICF Posted Invoice Nos. }
    { 11012530;;ICF Credit Memo Nos.;Code10       ;TableRelation="No. Series";
                                                   CaptionML=ENU=ICF Credit Memo Nos. }
    { 11012540;;ICF Posted Credit Memo Nos.;Code10;TableRelation="No. Series";
                                                   CaptionML=ENU=ICF Posted Credit Memo Nos. }
    { 11012545;;File Location ICF Files;Text100   ;CaptionML=ENU=File Location Processed ICF Files }
    { 11012550;;Default Purchase Plan Quote;Code10;TableRelation="Purchase Plan" WHERE (Applies to=CONST(PurchQuote));
                                                   CaptionML=ENU=Default Purchase Plan Quote }
    { 11012560;;Default Purchase Plan Order;Code10;TableRelation="Purchase Plan" WHERE (Applies to=CONST(PurchOrder));
                                                   CaptionML=ENU=Default Purchase Plan Order }
    { 11012561;;Default Purchase Plan Blanket;Code10;
                                                   TableRelation="Purchase Plan" WHERE (Applies to=CONST(PurchOrder));
                                                   CaptionML=ENU=Default Purchase Plan Blanket Order }
    { 11012562;;Default Purchase Plan Return;Code10;
                                                   TableRelation="Purchase Plan" WHERE (Applies to=CONST(PurchOrder));
                                                   CaptionML=ENU=Default Phase Purchase Return Order }
    { 11012563;;Default Purchase Plan ICM Ord.;Code10;
                                                   TableRelation="Purchase Plan" WHERE (Applies to=CONST(PurchOrder));
                                                   CaptionML=ENU=Default Purchase Plan ICM Order }
    { 11012565;;PDF Invoice Nos.   ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=PDF Invoice Nos. }
    { 11012567;;PDF Credit Memo Nos.;Code10       ;TableRelation="No. Series";
                                                   CaptionML=ENU=PDF Credit Memo Nos. }
    { 11012570;;Use Consent Advice Orders;Boolean ;OnValidate=BEGIN
                                                                //**4PS
                                                                IF ConsentIsUsed THEN
                                                                  "Start Consent date" := WORKDATE
                                                                ELSE
                                                                  CLEAR("Start Consent date");
                                                              END;

                                                   CaptionML=ENU=Use Consent Advice Orders }
    { 11012573;;Use Consent Purchase Actions;Boolean;
                                                   OnValidate=BEGIN
                                                                //**4PS
                                                                IF ConsentIsUsed THEN
                                                                  "Start Consent date" := WORKDATE
                                                                ELSE
                                                                  CLEAR("Start Consent date");
                                                              END;

                                                   CaptionML=ENU=Use Consent Purchase Actions }
    { 11012574;;Use Consent Purchase Quotes;Boolean;
                                                   OnValidate=BEGIN
                                                                //**4PS
                                                                IF ConsentIsUsed THEN
                                                                  "Start Consent date" := WORKDATE
                                                                ELSE
                                                                  CLEAR("Start Consent date");
                                                              END;

                                                   CaptionML=ENU=Use Consent Purchase Quotes }
    { 11012575;;Use Consent Purchase Orders;Boolean;
                                                   OnValidate=BEGIN
                                                                //**4PS
                                                                IF ConsentIsUsed THEN
                                                                  "Start Consent date" := WORKDATE
                                                                ELSE
                                                                  CLEAR("Start Consent date");
                                                              END;

                                                   CaptionML=ENU=Use Consent Purchase Orders }
    { 11012580;;Use Consent Purchase Invoices;Boolean;
                                                   OnValidate=BEGIN
                                                                //**4PS
                                                                IF ConsentIsUsed THEN
                                                                  "Start Consent date" := WORKDATE
                                                                ELSE
                                                                  CLEAR("Start Consent date");
                                                              END;

                                                   CaptionML=ENU=Use Consent Purchase Invoices }
    { 11012581;;Use Consent Approval Entries;Boolean;
                                                   CaptionML=ENU=Use Consent for Approval Entries }
    { 11012585;;Super Consenter Denied Lines;Code50;
                                                   TableRelation=Consenter;
                                                   CaptionML=ENU=Super Consenter Denied Lines }
    { 11012590;;ICK Order Nos.     ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=ICK Order Nos. }
    { 11012600;;Use Doc. Date as Posting Date;Boolean;
                                                   CaptionML=ENU=Use Document Date as Posting Date }
    { 11012610;;Vendor Filter      ;Code80        ;TableRelation="Vendor Posting Group";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Vendor Filter }
    { 11012620;;COC Check Date     ;Option        ;CaptionML=ENU=COC Date Check;
                                                   OptionCaptionML=ENU=Due Date,Payment Date,Document Date;
                                                   OptionString=Due Date,Payment Date,Document Date }
    { 11012625;;Check Dupl. Vend. Invoice Nos.;Option;
                                                   CaptionML=ENU=Check Dupl. Vendor Invoice Nos.;
                                                   OptionCaptionML=ENU=No Date Restriction,In Calendar Year;
                                                   OptionString=No Date Restriction,In Calendar Year }
    { 11012630;;On Hold No Contract;Boolean       ;CaptionML=ENU=On Hold No Contract }
    { 11012640;;On Hold Code No Contract;Code3    ;TableRelation="On Hold Code";
                                                   CaptionML=ENU=On Hold Code No Contract }
    { 11012650;;On Hold No Letter of Credit;Boolean;
                                                   CaptionML=ENU=On Hold No Letter of Credit }
    { 11012660;;On Hold Code No Letter of Cr.;Code3;
                                                   TableRelation="On Hold Code";
                                                   CaptionML=ENU=On Hold Code No Letter of Credit }
    { 11012665;;On Hold Maintainable;Boolean      ;CaptionML=ENU=On Hold Maintainable by Approve }
    { 11012670;;Min. Amt. Letter of Credit;Decimal;CaptionML=ENU=Min. Amt. Letter of Credit;
                                                   DecimalPlaces=2:2 }
    { 11012680;;Subcontract No. Type;Option       ;CaptionML=ENU=Subcontract No. Type;
                                                   OptionCaptionML=ENU="No. Series,Contract No. = Job No.";
                                                   OptionString=No. Series,Contract No. = Job No. }
    { 11012690;;Subcontract No. Nos.;Code10       ;TableRelation="No. Series";
                                                   CaptionML=ENU=Subcontract No. Nos. }
    { 11012700;;Payment Agreement Mandatory;Boolean;
                                                   CaptionML=ENU=Payment Agreement Mandatory }
    { 11012705;;Credit Memo by G-Account allow;Boolean;
                                                   CaptionML=ENU=Settle Credit Memos by G-Account allowed }
    { 11012710;;Default Authority Type;Code20     ;TableRelation="Authority Type";
                                                   CaptionML=ENU=Default Authority Type }
    { 11012720;;Invoices on Bank Account;Boolean  ;CaptionML=ENU=Invoices on Bank Account }
    { 11012730;;Allow Nonworking Receipt Date;Boolean;
                                                   CaptionML=ENU=Receipt Date on free day allowed }
    { 11012800;;Registration per User;Boolean     ;CaptionML=ENU=Registration per User }
    { 11012810;;Reference (ICM) Based on;Option   ;CaptionML=ENU=Reference (ICM) Based on;
                                                   OptionCaptionML=ENU=Purchaser,Project Manager,Formula;
                                                   OptionString=Purchaser,Project Manager,Formula }
    { 11012820;;Retention Invoice Nos.;Code10     ;TableRelation="No. Series";
                                                   CaptionML=ENU=Retention Invoice Nos. }
    { 11012830;;Retention Posted Invoice Nos.;Code10;
                                                   TableRelation="No. Series";
                                                   CaptionML=ENU=Retention Posted Invoice Nos. }
    { 11012840;;Web Service GS1    ;Code10        ;TableRelation="Web Service URL".Code WHERE (Type=CONST(GS1));
                                                   CaptionML=ENU=Web Service GS1 }
    { 11012850;;GS1 Invoice Nos.   ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=GS1 Invoice Nos. }
    { 11012860;;GS1 Posted Invoice Nos.;Code10    ;TableRelation="No. Series";
                                                   CaptionML=ENU=GS1 Posted Invoice Nos. }
    { 11012870;;GS1 Credit Memo Nos.;Code10       ;TableRelation="No. Series";
                                                   CaptionML=ENU=GS1 Credit Memo Nos. }
    { 11012880;;GS1 Posted Credit Memo Nos.;Code10;TableRelation="No. Series";
                                                   CaptionML=ENU=GS1 Posted Credit Memo Nos. }
    { 11012890;;Zip Code Check Mandatory;Boolean  ;CaptionML=ENU=Zip Code Check Mandatory }
    { 11012891;;General Reference ICM;Text30      ;CaptionML=ENU=General Reference ICM }
    { 11012900;;Do Not Post Purch. Orders;Boolean ;CaptionML=ENU=Do Not Post Generated Purch. Orders automatically }
    { 11012910;;Plan Req. Lines in the Past;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=Plan Req. Lines in the Past }
    { 11012920;;Allow Post Receipt during Reg.;Boolean;
                                                   CaptionML=ENU=Allow Post Receipt during Registration }
    { 11012930;;Vendor Assessment Period;DateFormula;
                                                   CaptionML=ENU=Vendor Assessment Period;
                                                   Description=From UK }
    { 11012931;;INSBOU Document Type;Code10       ;TableRelation="Document Type";
                                                   CaptionML=ENU=INSBOU Document Type }
    { 11012940;;Block Extra Receipts;Boolean      ;CaptionML=ENU=Block Extra Receipts }
    { 11012950;;Return Reason Not Mandatory;Boolean;
                                                   CaptionML=ENU=Return Reason Not Mandatory }
    { 11126180;;Bank Batch Nos.    ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Bank Batch Nos.;
                                                   Description=NAVFI }
    { 11128010;;Inward Reg. Nos.   ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Inward Reg. Nos.;
                                                   Description=NAVSE }
    { 11128011;;Inward Posting Description;Text50 ;CaptionML=ENU=Inward Posting Description;
                                                   Description=NAVSE }
    { 11128012;;Reverse Posting Description;Text50;CaptionML=ENU=Reverse Posting Description;
                                                   Description=NAVSE }
    { 11128014;;Latest Return Date Calc.;DateFormula;
                                                   CaptionML=ENU=Latest Return Date Calc.;
                                                   Description=NAVSE }
    { 11128015;;Accumulated Inward Reg. Lines;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Accumulated Inward Reg. Lines" THEN BEGIN
                                                                   "Copy Dimensions to Inward Reg.":= FALSE;
                                                                  MODIFY;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Accumulated Inward Reg. Lines;
                                                   Description=NAVSE }
    { 11128016;;Def. Inward Reg. Prod. Post Gr;Code10;
                                                   TableRelation="Gen. Product Posting Group";
                                                   CaptionML=ENU=Def. Inward Reg. Prod. Post Gr;
                                                   Description=NAVSE }
    { 11128017;;Copy Dimensions to Inward Reg.;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Copy Dimensions to Inward Reg." THEN BEGIN
                                                                  "Accumulated Inward Reg. Lines" := FALSE;
                                                                  MODIFY;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Copy Dimensions to Inward Reg.;
                                                   Description=NAVSE }
    { 11128018;;File Path and Name BG Sweden;Text250;
                                                   CaptionML=ENU=File Path and Name BG Sweden }
    { 11128019;;File Path and Name BG Foreign;Text250;
                                                   CaptionML=ENU=File Path and Name BG Foreign }
    { 11128020;;File Path and Name PG Sweden;Text250;
                                                   CaptionML=ENU=File Path and Name PG Sweden }
    { 11128021;;File Path and Name PG Foreign;Text250;
                                                   CaptionML=ENU=File Path and Name PG Foreign }
    { 11128022;;Information Line BG Sweden;Text37 ;CaptionML=ENU=Information Line BG Sweden }
    { 11128023;;Due Date for Information Line;Date;CaptionML=ENU=Due Date for Information Line }
    { 11128024;;Part. Pay. Nos.    ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Part. Pay. Nos.;
                                                   Description=NAVSE }
    { 11128025;;Part. Pay. Bal- Account No;Code20 ;TableRelation="G/L Account";
                                                   CaptionML=ENU=Part. Pay. Bal- Account No }
    { 11128026;;EUR Currency       ;Code20        ;TableRelation=Currency;
                                                   CaptionML=ENU=EUR Currency }
    { 11128027;;Description Part. Payment;Text30  ;CaptionML=ENU=Description Part. Payment }
    { 11128028;;BG Foreign File Format;Option     ;CaptionML=ENU=BG Foreign File Format;
                                                   OptionCaptionML=ENU=" ,SE Banken SISU,Swedbank SPISU,Handelsbanken UTLI,Nordea BGC,Nordea Axess";
                                                   OptionString=[ ,SE Banken SISU,Swedbank SPISU,Handelsbanken UTLI,Nordea BGC,Nordea Axess] }
    { 11128029;;Payment No.        ;Code5         ;CaptionML=ENU=Payment No.;
                                                   Numeric=Yes }
    { 11128030;;Check Giro Account ;Boolean       ;CaptionML=ENU=Check Giro Account }
    { 11128031;;Show Inward Reg. in Balances;Boolean;
                                                   CaptionML=ENU=Show Inward Reg. in Balances;
                                                   Description=NAVSE }
    { 11128032;;Use Per. in Inward Reg.;Boolean   ;CaptionML=ENU=Use Per. in Inward Reg. }
    { 11128033;;Approval Invoice Rounding;Boolean ;CaptionML=ENU=Approval Invoice Rounding }
    { 11128035;;External Hyperlink Docviewer;Text250;
                                                   CaptionML=ENU=Hyperlink Document Viewer }
    { 11128036;;Fileformat BG/PG export;Option    ;OptionString=850 (DOS EU),437 (DOS US),1252 (Windows) }
    { 11128040;;SEPA Message Count ;Integer       ;Description=I016 }
    { 11128041;;File Path and Name SEPA;Text250   ;CaptionML=ENU=Filepath and Name SEPA Payments;
                                                   Description=I016 }
    { 11128510;;Amt. Spec limit to Norges Bank;Decimal;
                                                   OnValidate=BEGIN
                                                                IF "Amt. Spec limit to Norges Bank" < 0 THEN
                                                                  ERROR(Text15000000,FIELDCAPTION("Amt. Spec limit to Norges Bank"));
                                                              END;

                                                   CaptionML=ENU=Amt. Spec limit to Norges Bank;
                                                   DecimalPlaces=0:0;
                                                   Description=NAVNO;
                                                   AutoFormatType=1 }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1000 : TextConst 'ENU=Job Queue Priority must be zero or positive.';
      Text11012001@1100525005 : TextConst 'ENU=may not be equal to %1';
      Text11012002@1100485000 : TextConst 'ENU=No scanned document present of Document No. %1, Vendor %2.';
      Text11012003@1100525000 : TextConst 'ENU=not allowed for %1 ''%2''';
      Text11012008@1100525006 : TextConst 'ENU=may not be equal to %1, when %2 equals %3';
      Text11012009@1100525009 : TextConst 'ENU=It is forbidden to use Dimension ''Cost Center'' or ''Cost Object''';
      GeneralLedgerSetup@1100525007 : Record 98;
      PlantSetup@1100525008 : Record 11012550;
      Text11012010@1210190000 : TextConst 'ENU=File ''%1'' could not be found.\\Please make sure field %2 in %3 is set correctly.';
      FileMgt@1100525500 : Codeunit 419;
      OperatingSystemMgt@1100409000 : Codeunit 11012364;
      Text15000000@15000000 : TextConst 'ENU=%1 must not be negative.';

    PROCEDURE JobQueueActive@1() : Boolean;
    BEGIN
      GET;
      EXIT("Post with Job Queue" OR "Post & Print with Job Queue");
    END;

    PROCEDURE ShowScannedDocumentWithDocNo@1100485001(IDocNo@1100485000 : Code[20]);
    BEGIN
      //**4PS
      ShowScannedDocumentWithDocNoInSupplComp(IDocNo, '');
    END;

    PROCEDURE ShowScannedDocumentWithDocNoInSupplComp@1100528405(IDocNo@1100485000 : Code[20];SupplyingCompany@1100528400 : Text[30]);
    VAR
      lvPurchInvoiceRec@1100485005 : Record 122;
      lvPurchCredMemRec@1100485004 : Record 124;
      lvPurchHeadRec@1100485006 : Record 38;
      lvFound@1100485003 : Boolean;
      lvVendorNo@1100485002 : Code[20];
      lvExtDocID@1100485001 : Text[50];
      lvDocType@1100528200 : Integer;
    BEGIN
      //**4PS
      IF SupplyingCompany <> '' THEN BEGIN
        lvPurchInvoiceRec.CHANGECOMPANY(SupplyingCompany);
        lvPurchCredMemRec.CHANGECOMPANY(SupplyingCompany);
        lvPurchHeadRec.CHANGECOMPANY(SupplyingCompany);
      END;

      lvFound := FALSE;
      IF IDocNo = '' THEN
        EXIT;

      IF NOT lvFound THEN BEGIN
        lvFound := lvPurchInvoiceRec.GET(IDocNo);
        IF lvFound THEN BEGIN
          lvExtDocID := lvPurchInvoiceRec."Ext. Document ID";
          lvVendorNo := lvPurchInvoiceRec."Buy-from Vendor No.";
          lvDocType := 2;
        END
      END;
      IF NOT lvFound THEN BEGIN
        lvFound := lvPurchCredMemRec.GET(IDocNo);
        IF lvFound THEN BEGIN
          lvExtDocID := lvPurchCredMemRec."Ext. Document ID";
          lvVendorNo := lvPurchCredMemRec."Buy-from Vendor No.";
          lvDocType := 3;
        END;
      END;
      IF NOT lvFound THEN BEGIN
        lvFound := lvPurchHeadRec.GET(lvPurchHeadRec."Document Type"::Invoice, IDocNo);
        IF lvFound THEN BEGIN
          lvExtDocID := lvPurchHeadRec."Ext. Document ID";
          lvVendorNo := lvPurchHeadRec."Buy-from Vendor No.";
          lvDocType := 2;
        END
      END;
      IF NOT lvFound THEN BEGIN
        lvFound := lvPurchHeadRec.GET(lvPurchHeadRec."Document Type"::"Credit Memo", IDocNo);
        IF lvFound THEN BEGIN
          lvExtDocID := lvPurchHeadRec."Ext. Document ID";
          lvVendorNo := lvPurchHeadRec."Buy-from Vendor No.";
          lvDocType := 3;
        END
      END;

      IF NOT lvFound THEN
        EXIT;

      ShowScannedDocumentInSupplComp(lvDocType,IDocNo,lvVendorNo,lvExtDocID,SupplyingCompany);
    END;

    PROCEDURE ShowScannedDocument@1100485004(IDocType@1100528202 : Integer;IDocNo@1100485002 : Code[20];IVendorNo@1100485003 : Code[20];IExtDocID@1100485004 : Text[50]);
    BEGIN
      //**4PS
      ShowScannedDocumentInSupplComp(IDocType, IDocNo, IVendorNo, IExtDocID, '');
    END;

    LOCAL PROCEDURE ShowScannedDocumentInSupplComp@1100528403(IDocType@1100528202 : Integer;IDocNo@1100485002 : Code[20];IVendorNo@1100485003 : Code[20];IExtDocID@1100485004 : Text[50];SupplyingCompany@1100528400 : Text[30]);
    VAR
      lvPurchSetupRec@1100485001 : Record 312;
      lvScanApplSetupRec@1100485000 : Record 11012134;
      lvScanInvMngRec@1100485006 : Record 11012133;
      lvObjShell@1100485005 : Automation "{50A7E9B0-70EF-11D1-B75A-00A0C90564FE} 1.0:{13709620-C279-11CE-A49E-444553540000}:'Microsoft Shell Controls And Automation'.Shell";
      DebriefPurchInvHDonau@1100525001 : Record 11012136;
      PurchaseHeader@1210190001 : Record 38;
      PurchInvHeader@1100525000 : Record 122;
      PurchCrMemoHdr@1100525002 : Record 124;
      WhiteVisionMgt@1100528300 : Codeunit 11012084;
      IDYNDocument@1100528200 : Record 6085590;
      DocMgt@1100528201 : Codeunit 6085578;
    BEGIN
      //**4PS
      IF SupplyingCompany <> '' THEN BEGIN
        lvPurchSetupRec.CHANGECOMPANY(SupplyingCompany);
        lvScanApplSetupRec.CHANGECOMPANY(SupplyingCompany);
        lvScanInvMngRec.CHANGECOMPANY(SupplyingCompany);
        DebriefPurchInvHDonau.CHANGECOMPANY(SupplyingCompany);
        PurchaseHeader.CHANGECOMPANY(SupplyingCompany);
        PurchInvHeader.CHANGECOMPANY(SupplyingCompany);
        PurchCrMemoHdr.CHANGECOMPANY(SupplyingCompany);
        IDYNDocument.CHANGECOMPANY(SupplyingCompany);
      END;

      lvPurchSetupRec.GET;
      IF lvPurchSetupRec."Scanning Application Purch.Inv" = lvPurchSetupRec."Scanning Application Purch.Inv"::None THEN
        lvPurchSetupRec.FIELDERROR("Scanning Application Purch.Inv");

      CASE lvPurchSetupRec."Scanning Application Purch.Inv" OF
        lvPurchSetupRec."Scanning Application Purch.Inv"::Managemind:
          BEGIN
            lvScanInvMngRec.SETRANGE("Buy-from Vendor No.",IVendorNo);
            lvScanInvMngRec.SETRANGE("Document No.",IDocNo);
            IF NOT lvScanInvMngRec.FINDFIRST THEN
              MESSAGE(Text11012002,IDocNo,IVendorNo) //kzwerver, 110614, c, #C-028867
            ELSE BEGIN
              CREATE(lvObjShell, FALSE, TRUE);
              lvObjShell.Open(lvScanInvMngRec."Document UNC");
              CLEAR(lvObjShell);
            END;
          END;
        lvPurchSetupRec."Scanning Application Purch.Inv"::LIP:
          BEGIN
            IF IExtDocID = '' THEN
              MESSAGE(Text11012002,IDocNo,IVendorNo) //kzwerver, 110614, c, #C-028867
            ELSE BEGIN
              lvScanApplSetupRec.GET;
              lvScanApplSetupRec.TESTFIELD("Hyperlink Document Viewer");
              OperatingSystemMgt.ClientShell(
                STRSUBSTNO('"%1"', lvScanApplSetupRec."Hyperlink Document Viewer"),
                STRSUBSTNO('"%1"', IExtDocID),
                FALSE);
            END;
          END;
        lvPurchSetupRec."Scanning Application Purch.Inv"::Basware:
          BEGIN
            IF IExtDocID = '' THEN
              MESSAGE(Text11012002,IDocNo,IVendorNo) //kzwerver, 110614, c, #C-028867
            ELSE BEGIN
              lvScanApplSetupRec.GET;
              lvScanApplSetupRec.TESTFIELD("Hyperlink Document Viewer");
              HYPERLINK(STRSUBSTNO(lvScanApplSetupRec."Hyperlink Document Viewer",IExtDocID));
            END;
          END;
        lvPurchSetupRec."Scanning Application Purch.Inv"::Donau:
          BEGIN
            IF NOT DebriefPurchInvHDonau.FindDebriefHeader(IDocNo, SupplyingCompany) THEN
              ERROR(Text11012002,DebriefPurchInvHDonau.TABLECAPTION);
            lvPurchSetupRec.TESTFIELD("Server Name");
            CREATE(lvObjShell, FALSE, TRUE);
            //lvObjShell.Open(
            //  lvPurchSetupRec."Server Name" +
            //  '?dmnr=' +
            //  DebriefPurchInvHDonau."Donau ID" +
            //  '?dfnr=' +
            //  IDocNo );
            //Call C003330 sn
            lvObjShell.Open(
              lvPurchSetupRec."Server Name" +
              '?id=' +
              DebriefPurchInvHDonau."Donau ID" );
            //Call C003330 en

            CLEAR(lvObjShell);
          END;
        // jhoek.140211.begin
        lvPurchSetupRec."Scanning Application Purch.Inv"::"d.3":
          BEGIN
            lvScanApplSetupRec.GET;
            CASE TRUE OF // document type as a normal function parameter would have been nice?! :(
              PurchInvHeader.GET(IDocNo):
                HYPERLINK(lvScanApplSetupRec.BuildD3Url(0,IDocNo));
              PurchCrMemoHdr.GET(IDocNo):
                HYPERLINK(lvScanApplSetupRec.BuildD3Url(1,IDocNo));
              // jhoek.190511.begin
              PurchaseHeader.GET(PurchaseHeader."Document Type"::Invoice, IDocNo):
                HYPERLINK(lvScanApplSetupRec.BuildD3Url(0, IDocNo));
              PurchaseHeader.GET(PurchaseHeader."Document Type"::"Credit Memo", IDocNo):
                HYPERLINK(lvScanApplSetupRec.BuildD3Url(1, IDocNo));
              // jhoek.190511.end
            END;
          END;
        // jhoek.140211.end
        lvPurchSetupRec."Scanning Application Purch.Inv"::Whitevision:
          BEGIN
            WhiteVisionMgt.SetSupplyingCompany(SupplyingCompany);
            WhiteVisionMgt.LoadDocuments(IDocNo, TRUE);
            WhiteVisionMgt.ShowDocument;
          END;
        //*32089.sn
        lvPurchSetupRec."Scanning Application Purch.Inv"::Xtendis:
          BEGIN
            IF IExtDocID = '' THEN
              MESSAGE(Text11012002,IDocNo,IVendorNo)
            ELSE BEGIN
              lvPurchSetupRec.TESTFIELD("File Location Scanned Invoices");
              IF lvPurchSetupRec."File Extension Scanned Inv" = ''  THEN
                HYPERLINK(lvPurchSetupRec."File Location Scanned Invoices" + IExtDocID)
              ELSE
                HYPERLINK(lvPurchSetupRec."File Location Scanned Invoices" + IExtDocID +
                  '.' + lvPurchSetupRec."File Extension Scanned Inv");
            END;
          END;
        //*32089.en
        //**4PS IDYN DC
        lvPurchSetupRec."Scanning Application Purch.Inv"::"Document Capture":
          BEGIN
            IF IExtDocID = '' THEN
              MESSAGE(Text11012002,IDocNo,IVendorNo)
            ELSE BEGIN
              DocMgt.SetSupplyingCompany(SupplyingCompany);
              IF DocMgt.GetNoOfDocForDoc(DATABASE::"Purchase Header",IDocType,IDocNo,0) > 0 THEN BEGIN
                DocMgt.LookupDocsForDoc(DATABASE::"Purchase Header",IDocType,IDocNo,0)
              END ELSE BEGIN
                IDYNDocument.SetSupplyingCompany(SupplyingCompany);
                IDYNDocument.GET(IExtDocID);
                IDYNDocument.OpenPDFFile;
              END;
            END;
          END;
        //**4PSIDYN DC
        lvPurchSetupRec."Scanning Application Purch.Inv"::Other:
          IF IExtDocID = '' THEN
            MESSAGE(Text11012002,IDocNo,IVendorNo) //kzwerver, 110614, c, #C-028867
          ELSE
            OpenFileInScannedInvFileDir(lvPurchSetupRec, IExtDocID);//kkleermaker.n, 110614, m27909
      //>>151105
        lvPurchSetupRec."Scanning Application Purch.Inv"::ExtWeblink:
          BEGIN
            IF (IDocNo = '') AND (IExtDocID = '') THEN
              MESSAGE(Text11012002,IDocNo,IVendorNo)
            ELSE BEGIN
              TESTFIELD("External Hyperlink Docviewer");
              HYPERLINK(STRSUBSTNO("External Hyperlink Docviewer",IDocNo,IExtDocID));
            END;
          END;
      //<<151105
      END;
    END;

    PROCEDURE ScannedInvFileNameIsAllowed@1100528400() : Boolean;
    BEGIN
      //**4PS.sn
      IF ("Scanning Application Purch.Inv" = "Scanning Application Purch.Inv"::Other) OR
         ("Scanning Application Purch.Inv" = "Scanning Application Purch.Inv"::Whitevision) OR
         ("Scanning Application Purch.Inv" = "Scanning Application Purch.Inv"::Xtendis)  //*32089
      THEN
        EXIT(TRUE)
      //**4PS.en
    END;

    LOCAL PROCEDURE OpenFileInScannedInvFileDir@1100528402(PurchasesPayablesSetup@1100528400 : Record 312;FileName@1100528402 : Text[50]);
    VAR
      FullFileName@1100528401 : Text[260];
      ObjShell@1100528403 : Automation "{50A7E9B0-70EF-11D1-B75A-00A0C90564FE} 1.0:{13709620-C279-11CE-A49E-444553540000}:'Microsoft Shell Controls And Automation'.Shell";
    BEGIN
      //**4PS.sn
      PurchasesPayablesSetup.TESTFIELD("File Location Scanned Invoices");
      PurchasesPayablesSetup.TESTFIELD("File Extension Scanned Inv");
      FullFileName :=
        STRSUBSTNO(
          '%1%2.%3',
          PurchasesPayablesSetup."File Location Scanned Invoices",
          FileName,
          PurchasesPayablesSetup."File Extension Scanned Inv");
      IF NOT FileMgt.ClientFileExists(FullFileName) THEN BEGIN
        MESSAGE(
          Text11012010,
          FullFileName,
          PurchasesPayablesSetup.FIELDCAPTION("File Extension Scanned Inv"),
          PurchasesPayablesSetup.TABLECAPTION);
        EXIT;
      END ELSE BEGIN
        CREATE(ObjShell, FALSE, TRUE);
        ObjShell.Open(FullFileName);
        CLEAR(ObjShell);
      END;
      //**4PS.en
    END;

    PROCEDURE OpenExternalDocumentSiB@1100525000(FileName@1100528402 : Text[50]);
    VAR
      FullFileName@1100528401 : Text[260];
      ObjShell@1100528403 : Automation "{50A7E9B0-70EF-11D1-B75A-00A0C90564FE} 1.0:{13709620-C279-11CE-A49E-444553540000}:'Microsoft Shell Controls And Automation'.Shell";
      SibSetup@1100525000 : Record 11072650;
    BEGIN
      //**4PS
      IF FileName = '' THEN EXIT;  //db, 16-09-14
      SibSetup.GET;
      SibSetup.TESTFIELD("Folder Processed Purch.Inv.");
      //SibSetup.TESTFIELD("File Extension Scanned Inv");
      FullFileName :=
        STRSUBSTNO(
          '%1%2.%3',
          SibSetup."Folder Processed Purch.Inv.",
          FileName,
          'PDF');  //SibSetup."File Extension Scanned Inv");
      IF NOT FileMgt.ClientFileExists(FullFileName) THEN BEGIN
        MESSAGE(
          Text11012010,
          FullFileName,
          SibSetup.FIELDCAPTION("Folder Processed Purch.Inv."),
          SibSetup.TABLECAPTION);
        EXIT;
      END ELSE BEGIN
        CREATE(ObjShell, FALSE, TRUE);
        ObjShell.Open(FullFileName);
        CLEAR(ObjShell);
      END;
    END;

    PROCEDURE ConsentIsUsed@1100528401() : Boolean;
    BEGIN
      //**4PS
      IF "Use Consent Advice Orders" OR
         "Use Consent Purchase Actions" OR
         "Use Consent Purchase Quotes" OR
         "Use Consent Purchase Orders" OR
         "Use Consent Purchase Invoices"
      THEN
        EXIT(TRUE);
    END;

    BEGIN
    {
      4PS
      - Field Purchase Registration Account added for invoice registration.
      - Field Registration invoices added.
      4PS02 HBK 07-08-09 Added Field "Strategic Purchasing"
      4PS03 HBK 19-05-10 Added Field "Strategic Purch. for Quotes"

      *** I016 ***
      131022 Added two new fields for SEPA: SEPA Message Count
                                            SEPA File Path
      151105 added optionstring to field 11012340 Scanning Application Purch.Inv
             new field 11128035
    }
    END.
  }
}

