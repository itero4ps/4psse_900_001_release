OBJECT Table 365 Analysis View Entry
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW18.00,4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Analysis View Entry;
  }
  FIELDS
  {
    { 1   ;   ;Analysis View Code  ;Code10        ;TableRelation="Analysis View" WHERE (Account Source=FIELD(Account Source));
                                                   CaptionML=ENU=Analysis View Code;
                                                   NotBlank=Yes }
    { 2   ;   ;Business Unit Code  ;Code10        ;TableRelation="Business Unit";
                                                   CaptionML=ENU=Business Unit Code }
    { 3   ;   ;Account No.         ;Code20        ;TableRelation=IF (Account Source=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Account Source=CONST(Cash Flow Account)) "Cash Flow Account";
                                                   CaptionML=ENU=Account No. }
    { 4   ;   ;Dimension 1 Value Code;Code20      ;AccessByPermission=TableData 348=R;
                                                   CaptionML=ENU=Dimension 1 Value Code;
                                                   CaptionClass=GetCaptionClass(1) }
    { 5   ;   ;Dimension 2 Value Code;Code20      ;AccessByPermission=TableData 348=R;
                                                   CaptionML=ENU=Dimension 2 Value Code;
                                                   CaptionClass=GetCaptionClass(2) }
    { 6   ;   ;Dimension 3 Value Code;Code20      ;AccessByPermission=TableData 350=R;
                                                   CaptionML=ENU=Dimension 3 Value Code;
                                                   CaptionClass=GetCaptionClass(3) }
    { 7   ;   ;Dimension 4 Value Code;Code20      ;AccessByPermission=TableData 350=R;
                                                   CaptionML=ENU=Dimension 4 Value Code;
                                                   CaptionClass=GetCaptionClass(4) }
    { 8   ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 9   ;   ;Entry No.           ;Integer       ;CaptionML=ENU=Entry No. }
    { 10  ;   ;Amount              ;Decimal       ;OnLookup=BEGIN
                                                              DrillDown;
                                                            END;

                                                   CaptionML=ENU=Amount;
                                                   AutoFormatType=1 }
    { 11  ;   ;Debit Amount        ;Decimal       ;CaptionML=ENU=Debit Amount;
                                                   AutoFormatType=1 }
    { 12  ;   ;Credit Amount       ;Decimal       ;CaptionML=ENU=Credit Amount;
                                                   AutoFormatType=1 }
    { 13  ;   ;Add.-Curr. Amount   ;Decimal       ;AccessByPermission=TableData 4=R;
                                                   CaptionML=ENU=Add.-Curr. Amount;
                                                   AutoFormatType=1 }
    { 14  ;   ;Add.-Curr. Debit Amount;Decimal    ;AccessByPermission=TableData 4=R;
                                                   CaptionML=ENU=Add.-Curr. Debit Amount;
                                                   AutoFormatType=1 }
    { 15  ;   ;Add.-Curr. Credit Amount;Decimal   ;AccessByPermission=TableData 4=R;
                                                   CaptionML=ENU=Add.-Curr. Credit Amount;
                                                   AutoFormatType=1 }
    { 16  ;   ;Account Source      ;Option        ;CaptionML=ENU=Account Source;
                                                   OptionCaptionML=ENU=G/L Account,Cash Flow Account;
                                                   OptionString=G/L Account,Cash Flow Account }
    { 17  ;   ;Cash Flow Forecast No.;Code20      ;TableRelation="Cash Flow Forecast";
                                                   CaptionML=ENU=Cash Flow Forecast No. }
  }
  KEYS
  {
    {    ;Analysis View Code,Account No.,Account Source,Dimension 1 Value Code,Dimension 2 Value Code,Dimension 3 Value Code,Dimension 4 Value Code,Business Unit Code,Posting Date,Entry No.,Cash Flow Forecast No.;
                                                   SumIndexFields=Amount,Debit Amount,Credit Amount,Add.-Curr. Amount,Add.-Curr. Debit Amount,Add.-Curr. Credit Amount;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=1,5,,Dimension 1 Value Code';
      Text001@1001 : TextConst 'ENU=1,5,,Dimension 2 Value Code';
      Text002@1002 : TextConst 'ENU=1,5,,Dimension 3 Value Code';
      Text003@1003 : TextConst 'ENU=1,5,,Dimension 4 Value Code';
      AnalysisView@1004 : Record 363;
      DPA_Management@1100000999 : Codeunit 11012783;

    PROCEDURE DPA_GetDimFilters@1100525000(StdDimFilter@1100525000 : Boolean) : Boolean;
    VAR
      UseDimFilter@1100525002 : Boolean;
      i@1100525003 : Integer;
    BEGIN
      //kkleermaker.sn, 110926, M27772
      IF StdDimFilter THEN
        EXIT(TRUE);
      //kkleermaker.en, 110926, M27772

      //dbeekman.sn: 23512
      IF NOT DPA_IsActive THEN
        EXIT(StdDimFilter);
      //dbeekman.en

      FOR i := 10 DOWNTO 0 DO BEGIN;
        UseDimFilter := (DPA_GetFiltersFltrGrp(i) <> '');
        IF UseDimFilter THEN EXIT(TRUE);
      END;
    END;

    PROCEDURE DPA_SetAccSchedule@1100525010(AccScheduleCode@1100525000 : Code[20];AnalysisViewCode@1100525001 : Code[10]);
    BEGIN
      //dbeekman.sn: 23512
      IF NOT DPA_IsActive THEN
        EXIT;
      //dbeekman.en

      DPA_Management.SetAccSchedule(AccScheduleCode, AnalysisViewCode);
    END;

    PROCEDURE GetCaptionClass@7(AnalysisViewDimType@1000 : Integer) : Text[250];
    BEGIN
      IF AnalysisView.Code <> "Analysis View Code" THEN
        AnalysisView.GET("Analysis View Code");
      CASE AnalysisViewDimType OF
        1:
          BEGIN
            IF AnalysisView."Dimension 1 Code" <> '' THEN
              EXIT('1,5,' + AnalysisView."Dimension 1 Code");

            EXIT(Text000);
          END;
        2:
          BEGIN
            IF AnalysisView."Dimension 2 Code" <> '' THEN
              EXIT('1,5,' + AnalysisView."Dimension 2 Code");

            EXIT(Text001);
          END;
        3:
          BEGIN
            IF AnalysisView."Dimension 3 Code" <> '' THEN
              EXIT('1,5,' + AnalysisView."Dimension 3 Code");

            EXIT(Text002);
          END;
        4:
          BEGIN
            IF AnalysisView."Dimension 4 Code" <> '' THEN
              EXIT('1,5,' + AnalysisView."Dimension 4 Code");

            EXIT(Text003);
          END;
      END;
    END;

    LOCAL PROCEDURE DrillDown@1();
    VAR
      TempGLEntry@1000 : TEMPORARY Record 17;
      TempCFForecastEntry@1002 : TEMPORARY Record 847;
      AnalysisViewEntryToGLEntries@1001 : Codeunit 413;
    BEGIN
      IF "Account Source" = "Account Source"::"G/L Account" THEN BEGIN
        TempGLEntry.RESET;
        TempGLEntry.DELETEALL;
        AnalysisViewEntryToGLEntries.GetGLEntries(Rec,TempGLEntry);
        PAGE.RUNMODAL(PAGE::"General Ledger Entries",TempGLEntry);
      END ELSE BEGIN
        TempCFForecastEntry.RESET;
        TempCFForecastEntry.DELETEALL;
        AnalysisViewEntryToGLEntries.GetCFLedgEntries(Rec,TempCFForecastEntry);
        PAGE.RUNMODAL(PAGE::"Cash Flow Forecast Entries",TempCFForecastEntry);
      END;
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}

