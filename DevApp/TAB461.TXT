OBJECT Table 461 Prepayment Inv. Line Buffer
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Prepayment Inv. Line Buffer;
  }
  FIELDS
  {
    { 1   ;   ;G/L Account No.     ;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=ENU=G/L Account No. }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 3   ;   ;Amount              ;Decimal       ;CaptionML=ENU=Amount;
                                                   AutoFormatType=2 }
    { 4   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 5   ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=ENU=Gen. Bus. Posting Group }
    { 6   ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=ENU=Gen. Prod. Posting Group }
    { 7   ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=ENU=VAT Bus. Posting Group }
    { 8   ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT Prod. Posting Group }
    { 9   ;   ;VAT Amount          ;Decimal       ;CaptionML=ENU=VAT Amount;
                                                   AutoFormatType=1 }
    { 10  ;   ;VAT Calculation Type;Option        ;CaptionML=ENU=VAT Calculation Type;
                                                   OptionCaptionML=ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                   OptionString=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax }
    { 11  ;   ;VAT Base Amount     ;Decimal       ;CaptionML=ENU=VAT Base Amount;
                                                   AutoFormatType=1 }
    { 12  ;   ;Amount (ACY)        ;Decimal       ;CaptionML=ENU=Amount (ACY);
                                                   AutoFormatType=1 }
    { 13  ;   ;VAT Amount (ACY)    ;Decimal       ;CaptionML=ENU=VAT Amount (ACY);
                                                   AutoFormatType=1 }
    { 14  ;   ;VAT Base Amount (ACY);Decimal      ;CaptionML=ENU=VAT Base Amount (ACY);
                                                   AutoFormatType=1 }
    { 15  ;   ;VAT Difference      ;Decimal       ;CaptionML=ENU=VAT Difference;
                                                   AutoFormatType=1 }
    { 16  ;   ;VAT %               ;Decimal       ;CaptionML=ENU=VAT %;
                                                   DecimalPlaces=1:1 }
    { 17  ;   ;VAT Identifier      ;Code10        ;CaptionML=ENU=VAT Identifier;
                                                   Editable=No }
    { 19  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   CaptionClass='1,1,1' }
    { 20  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Global Dimension 2 Code;
                                                   CaptionClass='1,1,2' }
    { 21  ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                   CaptionML=ENU=Job No. }
    { 22  ;   ;Amount Incl. VAT    ;Decimal       ;CaptionML=ENU=Amount Incl. VAT;
                                                   AutoFormatType=1 }
    { 24  ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=ENU=Tax Area Code }
    { 25  ;   ;Tax Liable          ;Boolean       ;CaptionML=ENU=Tax Liable }
    { 26  ;   ;Tax Group Code      ;Code10        ;TableRelation="Tax Group";
                                                   CaptionML=ENU=Tax Group Code }
    { 27  ;   ;Invoice Rounding    ;Boolean       ;CaptionML=ENU=Invoice Rounding }
    { 28  ;   ;Adjustment          ;Boolean       ;CaptionML=ENU=Adjustment }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=No }
    { 1001;   ;Job Task No.        ;Code20        ;TableRelation="Job Task";
                                                   CaptionML=ENU=Job Task No. }
  }
  KEYS
  {
    {    ;G/L Account No.,Job No.,Tax Area Code,Tax Liable,Tax Group Code,Invoice Rounding,Adjustment,Line No.,Dimension Set ID;
                                                   SumIndexFields=Amount,Amount Incl. VAT;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Adjustment                               }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DPA_Management@1100000999 : Codeunit 11012783;

    PROCEDURE IncrAmounts@1(PrepmtInvLineBuf@1001 : Record 461);
    BEGIN
      Amount := Amount + PrepmtInvLineBuf.Amount;
      "Amount Incl. VAT" := "Amount Incl. VAT" + PrepmtInvLineBuf."Amount Incl. VAT";
      "VAT Amount" := "VAT Amount" + PrepmtInvLineBuf."VAT Amount";
      "VAT Base Amount" := "VAT Base Amount" + PrepmtInvLineBuf."VAT Base Amount";
      "Amount (ACY)" := "Amount (ACY)" + PrepmtInvLineBuf."Amount (ACY)";
      "VAT Amount (ACY)" := "VAT Amount (ACY)" + PrepmtInvLineBuf."VAT Amount (ACY)";
      "VAT Base Amount (ACY)" := "VAT Base Amount (ACY)" + PrepmtInvLineBuf."VAT Base Amount (ACY)";
      "VAT Difference" := "VAT Difference" + PrepmtInvLineBuf."VAT Difference";
    END;

    PROCEDURE ReverseAmounts@2();
    BEGIN
      Amount := -Amount;
      "Amount Incl. VAT" := -"Amount Incl. VAT";
      "VAT Amount" := -"VAT Amount";
      "VAT Base Amount" := -"VAT Base Amount";
      "Amount (ACY)" := -"Amount (ACY)";
      "VAT Amount (ACY)" := -"VAT Amount (ACY)";
      "VAT Base Amount (ACY)" := -"VAT Base Amount (ACY)";
      "VAT Difference" := -"VAT Difference";
    END;

    PROCEDURE InsertInvLineBuffer@3(PrepmtInvLineBuf2@1000 : Record 461);
    BEGIN
      Rec := PrepmtInvLineBuf2;
      IF FIND THEN BEGIN
        IncrAmounts(PrepmtInvLineBuf2);
        MODIFY;
      END ELSE
        INSERT;
    END;

    PROCEDURE CopyWithLineNo@4(PrepmtInvLineBuf@1001 : Record 461;LineNo@1002 : Integer);
    BEGIN
      Rec := PrepmtInvLineBuf;
      "Line No." := LineNo;
      INSERT;
    END;

    PROCEDURE SetFilterOnPKey@5(PrepmtInvLineBuf@1001 : Record 461);
    BEGIN
      RESET;
      SETRANGE("G/L Account No.",PrepmtInvLineBuf."G/L Account No.");
      SETRANGE("Dimension Set ID",PrepmtInvLineBuf."Dimension Set ID");
      SETRANGE("Job No.",PrepmtInvLineBuf."Job No.");
      SETRANGE("Tax Area Code",PrepmtInvLineBuf."Tax Area Code");
      SETRANGE("Tax Liable",PrepmtInvLineBuf."Tax Liable");
      SETRANGE("Tax Group Code",PrepmtInvLineBuf."Tax Group Code");
      SETRANGE("Invoice Rounding",PrepmtInvLineBuf."Invoice Rounding");
      SETRANGE(Adjustment,PrepmtInvLineBuf.Adjustment);
      IF PrepmtInvLineBuf."Line No." <> 0 THEN
        SETRANGE("Line No.",PrepmtInvLineBuf."Line No.");
    END;

    PROCEDURE FillAdjInvLineBuffer@6(PrepmtInvLineBuf@1000 : Record 461;GLAccountNo@1003 : Code[20];CorrAmount@1002 : Decimal;CorrAmountACY@1001 : Decimal);
    BEGIN
      INIT;
      Adjustment := TRUE;
      "G/L Account No." := GLAccountNo;
      Amount := CorrAmount;
      "Amount Incl. VAT" := CorrAmount;
      "Amount (ACY)" := CorrAmountACY;
      "Line No." := PrepmtInvLineBuf."Line No.";
      "Global Dimension 1 Code" := PrepmtInvLineBuf."Global Dimension 1 Code";
      "Global Dimension 2 Code" := PrepmtInvLineBuf."Global Dimension 2 Code";
      "Dimension Set ID" := PrepmtInvLineBuf."Dimension Set ID";
      Description := PrepmtInvLineBuf.Description;
    END;

    PROCEDURE FillFromGLAcc@7(CompressPrepayment@1002 : Boolean);
    VAR
      GLAcc@1001 : Record 15;
    BEGIN
      GLAcc.GET("G/L Account No.");
      "Gen. Prod. Posting Group" := GLAcc."Gen. Prod. Posting Group";
      "VAT Prod. Posting Group" := GLAcc."VAT Prod. Posting Group";
      IF CompressPrepayment THEN
        Description := GLAcc.Name;
    END;

    PROCEDURE AdjustVATBase@8(VATAdjustment@1002 : ARRAY [2] OF Decimal);
    BEGIN
      IF Amount <> "Amount Incl. VAT" THEN BEGIN
        Amount := Amount + VATAdjustment[1];
        "VAT Base Amount" := Amount;
        "VAT Amount" := "VAT Amount" + VATAdjustment[2];
        "Amount Incl. VAT" := Amount + "VAT Amount";
      END;
    END;

    PROCEDURE AmountsToArray@9(VAR VATAmount@1001 : ARRAY [2] OF Decimal);
    BEGIN
      VATAmount[1] := Amount;
      VATAmount[2] := "Amount Incl. VAT" - Amount;
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(461) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 461');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Prepayment Inv. Line Buffer", "Global Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Global Dimension 1 Code");
    END;

    BEGIN
    END.
  }
}

