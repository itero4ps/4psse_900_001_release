OBJECT Table 49 Invoice Post. Buffer
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00.00.45480,4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Invoice Post. Buffer;
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Prepmt. Exch. Rate Difference,G/L Account,Item,Resource,Fixed Asset;
                                                   OptionString=Prepmt. Exch. Rate Difference,G/L Account,Item,Resource,Fixed Asset }
    { 2   ;   ;G/L Account         ;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=ENU=G/L Account }
    { 4   ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   CaptionClass='1,1,1' }
    { 5   ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Global Dimension 2 Code;
                                                   CaptionClass='1,1,2' }
    { 6   ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                   CaptionML=ENU=Project No. }
    { 7   ;   ;Amount              ;Decimal       ;CaptionML=ENU=Amount;
                                                   AutoFormatType=1 }
    { 8   ;   ;VAT Amount          ;Decimal       ;CaptionML=ENU=VAT Amount;
                                                   AutoFormatType=1 }
    { 10  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=ENU=Gen. Bus. Posting Group }
    { 11  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=ENU=Gen. Prod. Posting Group }
    { 12  ;   ;VAT Calculation Type;Option        ;CaptionML=ENU=VAT Calculation Type;
                                                   OptionCaptionML=ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                   OptionString=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax }
    { 14  ;   ;VAT Base Amount     ;Decimal       ;CaptionML=ENU=VAT Base Amount;
                                                   AutoFormatType=1 }
    { 17  ;   ;System-Created Entry;Boolean       ;CaptionML=ENU=System-Created Entry }
    { 18  ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=ENU=Tax Area Code }
    { 19  ;   ;Tax Liable          ;Boolean       ;CaptionML=ENU=Tax Liable }
    { 20  ;   ;Tax Group Code      ;Code10        ;TableRelation="Tax Group";
                                                   CaptionML=ENU=Tax Group Code }
    { 21  ;   ;Quantity            ;Decimal       ;CaptionML=ENU=Quantity;
                                                   DecimalPlaces=1:5 }
    { 22  ;   ;Use Tax             ;Boolean       ;CaptionML=ENU=Use Tax }
    { 23  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=ENU=VAT Bus. Posting Group }
    { 24  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT Prod. Posting Group }
    { 25  ;   ;Amount (ACY)        ;Decimal       ;CaptionML=ENU=Amount (ACY);
                                                   AutoFormatType=1 }
    { 26  ;   ;VAT Amount (ACY)    ;Decimal       ;CaptionML=ENU=VAT Amount (ACY);
                                                   AutoFormatType=1 }
    { 29  ;   ;VAT Base Amount (ACY);Decimal      ;CaptionML=ENU=VAT Base Amount (ACY);
                                                   AutoFormatType=1 }
    { 31  ;   ;VAT Difference      ;Decimal       ;CaptionML=ENU=VAT Difference;
                                                   AutoFormatType=1 }
    { 32  ;   ;VAT %               ;Decimal       ;CaptionML=ENU=VAT %;
                                                   DecimalPlaces=1:1 }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=No }
    { 1700;   ;Deferral Code       ;Code10        ;TableRelation="Deferral Template"."Deferral Code";
                                                   CaptionML=ENU=Deferral Code }
    { 1701;   ;Deferral Line No.   ;Integer       ;CaptionML=ENU=Deferral Line No. }
    { 5600;   ;FA Posting Date     ;Date          ;CaptionML=ENU=FA Posting Date }
    { 5601;   ;FA Posting Type     ;Option        ;CaptionML=ENU=FA Posting Type;
                                                   OptionCaptionML=ENU=" ,Acquisition Cost,Maintenance";
                                                   OptionString=[ ,Acquisition Cost,Maintenance] }
    { 5602;   ;Depreciation Book Code;Code10      ;TableRelation="Depreciation Book";
                                                   CaptionML=ENU=Depreciation Book Code }
    { 5603;   ;Salvage Value       ;Decimal       ;CaptionML=ENU=Salvage Value;
                                                   AutoFormatType=1 }
    { 5605;   ;Depr. until FA Posting Date;Boolean;CaptionML=ENU=Depr. until FA Posting Date }
    { 5606;   ;Depr. Acquisition Cost;Boolean     ;CaptionML=ENU=Depr. Acquisition Cost }
    { 5609;   ;Maintenance Code    ;Code10        ;TableRelation=Maintenance;
                                                   CaptionML=ENU=Maintenance Code }
    { 5610;   ;Insurance No.       ;Code20        ;TableRelation=Insurance;
                                                   CaptionML=ENU=Insurance No. }
    { 5611;   ;Budgeted FA No.     ;Code20        ;TableRelation="Fixed Asset";
                                                   CaptionML=ENU=Budgeted FA No. }
    { 5612;   ;Duplicate in Depreciation Book;Code10;
                                                   TableRelation="Depreciation Book";
                                                   CaptionML=ENU=Duplicate in Depreciation Book }
    { 5613;   ;Use Duplication List;Boolean       ;CaptionML=ENU=Use Duplication List }
    { 5614;   ;Fixed Asset Line No.;Integer       ;CaptionML=ENU=Fixed Asset Line No. }
    { 11012000;;Description        ;Text50        ;CaptionML=ENU=Description }
    { 11012005;;Description 2      ;Text50        ;CaptionML=ENU=Description 2 }
    { 11012010;;Bal. Account No.   ;Code20        ;CaptionML=ENU=Bal. Account No. }
    { 11012020;;Element            ;Code20        ;CaptionML=ENU=Element }
    { 11012030;;Service Order No.  ;Code20        ;TableRelation="Service Order".No.;
                                                   CaptionML=ENU=Service Order No. }
    { 11012040;;Service Contract No.;Code20       ;TableRelation=Service-Contract.No.;
                                                   CaptionML=ENU=Service Contract No.;
                                                   Editable=No }
    { 11012041;;Service Location No.;Code20       ;CaptionML=ENU=Service Location No. }
    { 11012050;;Origin Type        ;Option        ;CaptionML=ENU=Origin Type;
                                                   OptionCaptionML=ENU=" ,Project,Service,Plant";
                                                   OptionString=[ ,Project,Service,Plant] }
    { 11012060;;Intercompany Transaction;Boolean  ;CaptionML=ENU=Intercompany Transaction }
    { 11012061;;Receiving Company  ;Text30        ;TableRelation=Company;
                                                   CaptionML=ENU=Receiving Company }
    { 11012070;;Cost Component     ;Code20        ;TableRelation="Cost Component".Code;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Cost Component }
    { 11012080;;Employee No.       ;Code20        ;TableRelation=Employee;
                                                   CaptionML=ENU=Employee No. }
    { 11012090;;Buy-Back Item (Plant Order);Boolean;
                                                   CaptionML=ENU=Buy-Back Item (Plant Order) }
    { 11012100;;Block VAT Posting  ;Boolean       ;CaptionML=ENU=Block VAT Posting }
    { 11012110;;Retention Amount   ;Decimal       ;CaptionML=ENU=Retention Amount;
                                                   Description=Retention;
                                                   AutoFormatType=1 }
    { 11012120;;Retention Amount (ACY);Decimal    ;CaptionML=ENU=Retention Amount (ACY);
                                                   Description=Retention;
                                                   AutoFormatType=1 }
    { 11012130;;Applies-to Retention ID;Integer   ;CaptionML=ENU=Applies-to Retention ID;
                                                   Description=Retention }
    { 11012140;;Purchase Order     ;Code20        ;TableRelation="Purchase Header";
                                                   CaptionML=ENU=Purchase Order }
    { 11012150;;Warranty Object    ;Code10        ;CaptionML=ENU=Warranty Object }
    { 11012160;;Extension Contract ;Code10        ;CaptionML=ENU=Extension Contract }
    { 11012170;;Cost Type Cost Plus Line;Option   ;CaptionML=ENU=Cost Type Cost Plus Line;
                                                   OptionCaptionML=ENU=Labor,Material,Subcontracting,Plant,Sundry,Revenue;
                                                   OptionString=Labor,Material,Subcontracting,Plant,Sundry,Revenue;
                                                   Editable=No }
    { 11012180;;Plant Invoice      ;Boolean       ;CaptionML=ENU=Plant Invoice;
                                                   Editable=No }
    { 11012190;;Rental Unit        ;Code20        ;CaptionML=ENU=Rental Unit }
    { 11012191;;Rental Unit Line Type;Option      ;CaptionML=ENU=Rental Unit Line Type;
                                                   OptionCaptionML=ENU=" ,Rent,Service Cost,Utilities";
                                                   OptionString=[ ,Rent,ServiceCost,Utilities] }
    { 11012200;;Buffer Line No.    ;Integer       ;CaptionML=ENU=Buffer Line No. }
    { 11012210;;Posting Date       ;Date          ;CaptionML=ENU=Posting Date }
    { 11012900;;Expense Allowance Scheme;Boolean  ;CaptionML=ENU=Expense Allowance Scheme }
  }
  KEYS
  {
    {    ;Type,G/L Account,Gen. Bus. Posting Group,Gen. Prod. Posting Group,VAT Bus. Posting Group,VAT Prod. Posting Group,Dimension Set ID,Job No.,Fixed Asset Line No.,Deferral Code,Description,Bal. Account No.,Service Order No.,Service Contract No.,Buy-Back Item (Plant Order),Warranty Object,Buffer Line No.,FA Posting Type,Description 2;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DPA_Management@1100000999 : Codeunit 11012783;

    PROCEDURE PrepareSales@1(VAR SalesLine@1000 : Record 37);
    BEGIN
      CLEAR(Rec);
      Type := SalesLine.Type;
      "System-Created Entry" := TRUE;
      "Gen. Bus. Posting Group" := SalesLine."Gen. Bus. Posting Group";
      "Gen. Prod. Posting Group" := SalesLine."Gen. Prod. Posting Group";
      "VAT Bus. Posting Group" := SalesLine."VAT Bus. Posting Group";
      "VAT Prod. Posting Group" := SalesLine."VAT Prod. Posting Group";
      "VAT Calculation Type" := SalesLine."VAT Calculation Type";
      "Global Dimension 1 Code" := SalesLine."Shortcut Dimension 1 Code";
      "Global Dimension 2 Code" := SalesLine."Shortcut Dimension 2 Code";
      "Dimension Set ID" := SalesLine."Dimension Set ID";
      "Job No." := SalesLine."Job No.";
      "VAT %" := SalesLine."VAT %";
      "VAT Difference" := SalesLine."VAT Difference";
      "Deferral Code" := SalesLine."Deferral Code";
      IF Type = Type::"Fixed Asset" THEN BEGIN
        "FA Posting Date" := SalesLine."FA Posting Date";
        "Depreciation Book Code" := SalesLine."Depreciation Book Code";
        "Depr. until FA Posting Date" := SalesLine."Depr. until FA Posting Date";
        "Duplicate in Depreciation Book" := SalesLine."Duplicate in Depreciation Book";
        "Use Duplication List" := SalesLine."Use Duplication List";
      END;

      IF "VAT Calculation Type" = "VAT Calculation Type"::"Sales Tax" THEN BEGIN
        "Tax Area Code" := SalesLine."Tax Area Code";
        "Tax Group Code" := SalesLine."Tax Group Code";
        "Tax Liable" := SalesLine."Tax Liable";
        "Use Tax" := FALSE;
        Quantity := SalesLine."Qty. to Invoice (Base)";
      END;

      IF SalesLine."Line Discount %" = 100 THEN BEGIN
        "VAT Base Amount" := 0;
        "VAT Base Amount (ACY)" := 0;
        "VAT Amount" := 0;
        "VAT Amount (ACY)" := 0;
      END;
    END;

    PROCEDURE CalcDiscount@2(PricesInclVAT@1000 : Boolean;DiscountAmount@1001 : Decimal;DiscountAmountACY@1002 : Decimal);
    VAR
      CurrencyLCY@1003 : Record 4;
      CurrencyACY@1004 : Record 4;
      GLSetup@1005 : Record 98;
    BEGIN
      CurrencyLCY.InitRoundingPrecision;
      GLSetup.GET;
      IF GLSetup."Additional Reporting Currency" <> '' THEN
        CurrencyACY.GET(GLSetup."Additional Reporting Currency")
      ELSE
        CurrencyACY := CurrencyLCY;
      "VAT Amount" := ROUND(
          CalcVATAmount(PricesInclVAT,DiscountAmount,"VAT %"),
          CurrencyLCY."Amount Rounding Precision",
          CurrencyLCY.VATRoundingDirection);
      "VAT Amount (ACY)" := ROUND(
          CalcVATAmount(PricesInclVAT,DiscountAmountACY,"VAT %"),
          CurrencyACY."Amount Rounding Precision",
          CurrencyACY.VATRoundingDirection);

      IF PricesInclVAT AND ("VAT %" <> 0) THEN BEGIN
        "VAT Base Amount" := DiscountAmount - "VAT Amount";
        "VAT Base Amount (ACY)" := DiscountAmountACY - "VAT Amount (ACY)";
      END ELSE BEGIN
        "VAT Base Amount" := DiscountAmount;
        "VAT Base Amount (ACY)" := DiscountAmountACY;
      END;
      Amount := "VAT Base Amount";
      "Amount (ACY)" := "VAT Base Amount (ACY)";
    END;

    LOCAL PROCEDURE CalcVATAmount@3(ValueInclVAT@1000 : Boolean;Value@1001 : Decimal;"VAT%"@1002 : Decimal) : Decimal;
    BEGIN
      IF "VAT%" = 0 THEN
        EXIT(0);
      IF ValueInclVAT THEN
        EXIT(Value / (1 + ("VAT%" / 100)) * ("VAT%" / 100));

      EXIT(Value * ("VAT%" / 100));
    END;

    PROCEDURE SetAccount@4(Account@1000 : Code[20];VAR TotalVAT@1004 : Decimal;VAR TotalVATACY@1003 : Decimal;VAR TotalAmount@1002 : Decimal;VAR TotalAmountACY@1001 : Decimal);
    BEGIN
      TotalVAT := TotalVAT - "VAT Amount";
      TotalVATACY := TotalVATACY - "VAT Amount (ACY)";
      TotalAmount := TotalAmount - Amount;
      TotalAmountACY := TotalAmountACY - "Amount (ACY)";
      "G/L Account" := Account;
    END;

    PROCEDURE SetAmounts@5(TotalVAT@1003 : Decimal;TotalVATACY@1002 : Decimal;TotalAmount@1001 : Decimal;TotalAmountACY@1000 : Decimal;VATDifference@1004 : Decimal);
    BEGIN
      Amount := TotalAmount;
      "VAT Base Amount" := TotalAmount;
      "VAT Amount" := TotalVAT;
      "Amount (ACY)" := TotalAmountACY;
      "VAT Base Amount (ACY)" := TotalAmountACY;
      "VAT Amount (ACY)" := TotalVATACY;
      "VAT Difference" := "VAT Difference";
    END;

    PROCEDURE PreparePurchase@6(VAR PurchLine@1000 : Record 39);
    BEGIN
      CLEAR(Rec);
      Type := PurchLine.Type;
      "System-Created Entry" := TRUE;
      "Gen. Bus. Posting Group" := PurchLine."Gen. Bus. Posting Group";
      "Gen. Prod. Posting Group" := PurchLine."Gen. Prod. Posting Group";
      "VAT Bus. Posting Group" := PurchLine."VAT Bus. Posting Group";
      "VAT Prod. Posting Group" := PurchLine."VAT Prod. Posting Group";
      "VAT Calculation Type" := PurchLine."VAT Calculation Type";
      "Global Dimension 1 Code" := PurchLine."Shortcut Dimension 1 Code";
      "Global Dimension 2 Code" := PurchLine."Shortcut Dimension 2 Code";
      "Dimension Set ID" := PurchLine."Dimension Set ID";
      "Job No." := PurchLine."Job No.";
      "VAT %" := PurchLine."VAT %";
      "VAT Difference" := PurchLine."VAT Difference";
      "Deferral Code" := PurchLine."Deferral Code";
      IF Type = Type::"Fixed Asset" THEN BEGIN
        "FA Posting Date" := PurchLine."FA Posting Date";
        "Depreciation Book Code" := PurchLine."Depreciation Book Code";
        "Depr. until FA Posting Date" := PurchLine."Depr. until FA Posting Date";
        "Duplicate in Depreciation Book" := PurchLine."Duplicate in Depreciation Book";
        "Use Duplication List" := PurchLine."Use Duplication List";
        "FA Posting Type" := PurchLine."FA Posting Type";
        "Depreciation Book Code" := PurchLine."Depreciation Book Code";
        "Salvage Value" := PurchLine."Salvage Value";
        "Depr. Acquisition Cost" := PurchLine."Depr. Acquisition Cost";
        "Maintenance Code" := PurchLine."Maintenance Code";
        "Insurance No." := PurchLine."Insurance No.";
        "Budgeted FA No." := PurchLine."Budgeted FA No.";
      END;
      Quantity := PurchLine."Qty. to Invoice (Base)";  //**4PS.n  C-02732

      IF "VAT Calculation Type" = "VAT Calculation Type"::"Sales Tax" THEN BEGIN
        "Tax Area Code" := PurchLine."Tax Area Code";
        "Tax Group Code" := PurchLine."Tax Group Code";
        "Tax Liable" := PurchLine."Tax Liable";
        "Use Tax" := FALSE;
        Quantity := PurchLine."Qty. to Invoice (Base)";
      END;

      IF PurchLine."Line Discount %" = 100 THEN BEGIN
        "VAT Base Amount" := 0;
        "VAT Base Amount (ACY)" := 0;
        "VAT Amount" := 0;
        "VAT Amount (ACY)" := 0;
      END;
    END;

    PROCEDURE CalcDiscountNoVAT@7(DiscountAmount@1001 : Decimal;DiscountAmountACY@1002 : Decimal);
    BEGIN
      "VAT Base Amount" := DiscountAmount;
      "VAT Base Amount (ACY)" := DiscountAmountACY;
      Amount := "VAT Base Amount";
      "Amount (ACY)" := "VAT Base Amount (ACY)";
    END;

    PROCEDURE SetSalesTax@8(PurchaseLine@1000 : Record 39);
    BEGIN
      "Tax Area Code" := PurchaseLine."Tax Area Code";
      "Tax Liable" := PurchaseLine."Tax Liable";
      "Tax Group Code" := PurchaseLine."Tax Group Code";
      "Use Tax" := PurchaseLine."Use Tax";
      Quantity := PurchaseLine."Qty. to Invoice (Base)";
    END;

    PROCEDURE ReverseAmounts@9();
    BEGIN
      Amount := -Amount;
      "VAT Base Amount" := -"VAT Base Amount";
      "Amount (ACY)" := -"Amount (ACY)";
      "VAT Base Amount (ACY)" := -"VAT Base Amount (ACY)";
      "VAT Amount" := -"VAT Amount";
      "VAT Amount (ACY)" := -"VAT Amount (ACY)";
    END;

    PROCEDURE SetAmountsNoVAT@10(TotalAmount@1001 : Decimal;TotalAmountACY@1000 : Decimal;VATDifference@1004 : Decimal);
    BEGIN
      Amount := TotalAmount;
      "VAT Base Amount" := TotalAmount;
      "VAT Amount" := 0;
      "Amount (ACY)" := TotalAmountACY;
      "VAT Base Amount (ACY)" := TotalAmountACY;
      "VAT Amount (ACY)" := 0;
      "VAT Difference" := "VAT Difference";
    END;

    PROCEDURE PrepareService@11(VAR ServiceLine@1000 : Record 5902);
    BEGIN
      CLEAR(Rec);
      CASE ServiceLine.Type OF
        ServiceLine.Type::Item:
          Type := Type::Item;
        ServiceLine.Type::Resource:
          Type := Type::Resource;
        ServiceLine.Type::"G/L Account":
          Type := Type::"G/L Account";
      END;
      "System-Created Entry" := TRUE;
      "Gen. Bus. Posting Group" := ServiceLine."Gen. Bus. Posting Group";
      "Gen. Prod. Posting Group" := ServiceLine."Gen. Prod. Posting Group";
      "VAT Bus. Posting Group" := ServiceLine."VAT Bus. Posting Group";
      "VAT Prod. Posting Group" := ServiceLine."VAT Prod. Posting Group";
      "VAT Calculation Type" := ServiceLine."VAT Calculation Type";
      "Global Dimension 1 Code" := ServiceLine."Shortcut Dimension 1 Code";
      "Global Dimension 2 Code" := ServiceLine."Shortcut Dimension 2 Code";
      "Dimension Set ID" := ServiceLine."Dimension Set ID";
      "Job No." := ServiceLine."Job No.";
      "VAT %" := ServiceLine."VAT %";
      "VAT Difference" := ServiceLine."VAT Difference";
      IF "VAT Calculation Type" = "VAT Calculation Type"::"Sales Tax" THEN BEGIN
        "Tax Area Code" := ServiceLine."Tax Area Code";
        "Tax Group Code" := ServiceLine."Tax Group Code";
        "Tax Liable" := ServiceLine."Tax Liable";
        "Use Tax" := FALSE;
        Quantity := ServiceLine."Qty. to Invoice (Base)";
      END;

      IF ServiceLine."Line Discount %" = 100 THEN BEGIN
        "VAT Base Amount" := 0;
        "VAT Base Amount (ACY)" := 0;
        "VAT Amount" := 0;
        "VAT Amount (ACY)" := 0;
      END;
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(49) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 49');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Invoice Post. Buffer", "Global Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Global Dimension 1 Code");
    END;

    BEGIN
    {
      4PS
      D. Borkent, 15-08-2005:
      - Fields (Tax Area Code, Tax Liable, Tax Group Code, Use Tax) deleted from index
        because of limit (252 bytes) when collecting invoices per serviceorder/contract
    }
    END.
  }
}

