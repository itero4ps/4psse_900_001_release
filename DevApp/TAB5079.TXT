OBJECT Table 5079 Marketing Setup
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,4PS9.00;
  }
  PROPERTIES
  {
    Permissions=TableData 1261=rimd;
    OnModify=BEGIN
               UpdateLocalSetup; //**4PS.n
             END;

    CaptionML=ENU=Marketing Setup;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 2   ;   ;Contact Nos.        ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Contact Person Nos. }
    { 3   ;   ;Campaign Nos.       ;Code10        ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 11072034=R;
                                                   CaptionML=ENU=Campaign Nos. }
    { 4   ;   ;Segment Nos.        ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Segment Nos. }
    { 5   ;   ;To-do Nos.          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=To-do Nos. }
    { 6   ;   ;Opportunity Nos.    ;Code10        ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 11072042=R;
                                                   CaptionML=ENU=Opportunity Nos. }
    { 7   ;   ;Bus. Rel. Code for Customers;Code10;TableRelation="Business Relation";
                                                   CaptionML=ENU=Bus. Rel. Code for Customers }
    { 8   ;   ;Bus. Rel. Code for Vendors;Code10  ;TableRelation="Business Relation";
                                                   CaptionML=ENU=Bus. Rel. Code for Vendors }
    { 9   ;   ;Bus. Rel. Code for Bank Accs.;Code10;
                                                   TableRelation="Business Relation";
                                                   CaptionML=ENU=Bus. Rel. Code for Bank Accs. }
    { 22  ;   ;Inherit Salesperson Code;Boolean   ;InitValue=Yes;
                                                   CaptionML=ENU=Inherit Salesperson Code }
    { 23  ;   ;Inherit Territory Code;Boolean     ;InitValue=Yes;
                                                   CaptionML=ENU=Inherit Territory Code }
    { 24  ;   ;Inherit Country/Region Code;Boolean;InitValue=Yes;
                                                   CaptionML=ENU=Inherit Country/Region Code }
    { 25  ;   ;Inherit Language Code;Boolean      ;InitValue=Yes;
                                                   CaptionML=ENU=Inherit Language Code }
    { 26  ;   ;Inherit Address Details;Boolean    ;InitValue=Yes;
                                                   CaptionML=ENU=Inherit Address Details }
    { 27  ;   ;Inherit Communication Details;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=Inherit Communication Details }
    { 28  ;   ;Default Salesperson Code;Code10    ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=ENU=Default Salesperson Code }
    { 29  ;   ;Default Territory Code;Code10      ;TableRelation=Territory;
                                                   CaptionML=ENU=Default Territory Code }
    { 30  ;   ;Default Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Default Country/Region Code }
    { 31  ;   ;Default Language Code;Code10       ;TableRelation=Language;
                                                   CaptionML=ENU=Default Language Code }
    { 33  ;   ;Default Sales Cycle Code;Code10    ;TableRelation="Sales Cycle";
                                                   CaptionML=ENU=Default Sales Cycle Code }
    { 35  ;   ;Attachment Storage Type;Option     ;CaptionML=ENU=Attachment Storage Type;
                                                   OptionCaptionML=ENU=Embedded,Disk File;
                                                   OptionString=Embedded,Disk File }
    { 36  ;   ;Attachment Storage Location;Text250;CaptionML=ENU=Attachment Storage Location }
    { 37  ;   ;Autosearch for Duplicates;Boolean  ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF "Autosearch for Duplicates" THEN
                                                                  "Maintain Dupl. Search Strings" := TRUE;
                                                              END;

                                                   CaptionML=ENU=Autosearch for Duplicates }
    { 38  ;   ;Search Hit %        ;Integer       ;InitValue=60;
                                                   CaptionML=ENU=Search Hit %;
                                                   MinValue=1;
                                                   MaxValue=100;
                                                   NotBlank=Yes }
    { 39  ;   ;Maintain Dupl. Search Strings;Boolean;
                                                   InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF NOT "Maintain Dupl. Search Strings" THEN
                                                                  "Autosearch for Duplicates" := FALSE;
                                                              END;

                                                   CaptionML=ENU=Maintain Dupl. Search Strings;
                                                   NotBlank=Yes }
    { 50  ;   ;Mergefield Language ID;Integer     ;TableRelation="Windows Language";
                                                   CaptionML=ENU=Mergefield Language ID;
                                                   BlankZero=Yes }
    { 51  ;   ;Def. Company Salutation Code;Code10;TableRelation=Salutation;
                                                   CaptionML=ENU=Def. Company Salutation Code }
    { 52  ;   ;Default Person Salutation Code;Code10;
                                                   TableRelation=Salutation;
                                                   CaptionML=ENU=Default Person Salutation Code }
    { 53  ;   ;Default Correspondence Type;Option ;CaptionML=ENU=Default Correspondence Type;
                                                   OptionCaptionML=ENU=" ,Hard Copy,E-Mail,Fax";
                                                   OptionString=[ ,Hard Copy,E-Mail,Fax] }
    { 56  ;   ;Queue Folder Path   ;Text250       ;CaptionML=ENU=Queue Folder Path;
                                                   Editable=No }
    { 57  ;   ;Queue Folder UID    ;BLOB          ;CaptionML=ENU=Queue Folder UID }
    { 59  ;   ;Storage Folder Path ;Text250       ;CaptionML=ENU=Storage Folder Path;
                                                   Editable=No }
    { 60  ;   ;Storage Folder UID  ;BLOB          ;CaptionML=ENU=Storage Folder UID }
    { 67  ;   ;Default To-do Date Calculation;DateFormula;
                                                   CaptionML=ENU=Default To-do Date Calculation }
    { 68  ;   ;Enable Connector    ;Boolean       ;OnValidate=BEGIN
                                                                CASE "Enable Connector" OF
                                                                  TRUE:
                                                                    IF CONFIRM(Text005,FALSE) THEN BEGIN
                                                                      IF InheritanceEnabled THEN
                                                                        IF NOT CONFIRM(Text009,FALSE) THEN
                                                                          ERROR('');
                                                                      IntegrationManagement.EnableConnector;
                                                                      MESSAGE(Text006);
                                                                    END ELSE
                                                                      ERROR('');
                                                                  FALSE:
                                                                    IF CONFIRM(Text007,FALSE) THEN BEGIN
                                                                      IntegrationManagement.DisableConnector;
                                                                      MESSAGE(Text008);
                                                                    END ELSE
                                                                      ERROR('');
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Enable Connector }
    { 69  ;   ;Autodiscovery E-Mail Address;Text250;
                                                   CaptionML=ENU=Autodiscovery E-Mail Address }
    { 70  ;   ;Email Batch Size    ;Integer       ;CaptionML=ENU=Email Batch Size;
                                                   MinValue=0 }
    { 71  ;   ;Exchange Service URL;Text250       ;CaptionML=ENU=Exchange Service URL }
    { 72  ;   ;Exchange Account User Name;Text250 ;CaptionML=ENU=Exchange Account User Name }
    { 73  ;   ;Exchange Account Password Key;GUID ;CaptionML=ENU=Exchange Account Password Key }
    { 11012000;;Try-out Nos.       ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Try-out Nos. }
    { 11012010;;Try-out Quote Nos. ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Try-out Quote Nos. }
    { 11012020;;Central Management ;Boolean       ;OnValidate=VAR
                                                                LeadingCompany@1210190000 : Text[50];
                                                              BEGIN
                                                                //**4PS
                                                                //X016.sn
                                                                LeadingCompany := CompRelationRec.GetLeadingCompany(DATABASE::"Marketing Setup","Central Management");
                                                                IF NOT "Central Management" THEN BEGIN
                                                                  CompRelationRec.UpdateCompanyRelation(DATABASE::"Marketing Setup", '');
                                                                  InitFlagsCentralMgt;
                                                                END ELSE BEGIN
                                                                  IF LeadingCompany <> '' THEN
                                                                    CompRelationRec.UpdateCompanyRelation(DATABASE::"Marketing Setup", LeadingCompany);
                                                                END;
                                                                UpdateLocalSetup;
                                                                //X016.en
                                                              END;

                                                   CaptionML=ENU=Central Management }
    { 11012030;;Leading Company    ;Text80        ;TableRelation=Company;
                                                   OnValidate=BEGIN
                                                                //**4PS
                                                                //X016.sn
                                                                //IF "Leading Company" <> '' THEN
                                                                //  TESTFIELD("Central Management");
                                                                //CompRelRec.CheckLeadingCompany(DATABASE::"Marketing Setup", "Leading Company");
                                                                //CompRelRec.UpdateCompanyRelaltion(DATABASE::"Marketing Setup", "Leading Company");
                                                                //UpdateLocalSetup;
                                                                //X016.en
                                                              END;

                                                   CaptionML=ENU=Leading Company;
                                                   Description=expired }
    { 11012040;;Companies          ;Boolean       ;OnValidate=BEGIN
                                                                //**4PS.n
                                                                IF NOT Companies THEN BEGIN
                                                                  VALIDATE(Persons, FALSE);
                                                                  "Company Features" := FALSE;
                                                                  "Company Alt. Addresses" := FALSE;
                                                                  "Industry Groups" := FALSE;
                                                                  Tradenames := FALSE;
                                                                  IF NOT Persons THEN BEGIN  //**4PS02.sn
                                                                    "Allow Decentral Comp./Pers." := FALSE;
                                                                    "Mailing Groups" := FALSE;
                                                                    Salespersons := FALSE;
                                                                  END;                       //**4PS02.en
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Companies }
    { 11012041;;Allow Decentral Comp./Pers.;Boolean;
                                                   CaptionML=ENU=Allow Decentral Comp./Pers. }
    { 11012045;;Company Features   ;Boolean       ;CaptionML=ENU=Company Features }
    { 11012046;;Company Alt. Addresses;Boolean    ;CaptionML=ENU=Alternative Company Addresses }
    { 11012050;;Customers          ;Boolean       ;OnValidate=BEGIN
                                                                //**4PS.n
                                                                IF NOT Customers THEN BEGIN
                                                                  "Allow Decentral Customers" := FALSE;
                                                                  "Customer Addresses" := FALSE;
                                                                  "Credit Limit by Date" := FALSE;
                                                                  "Customer Default Dimensions" := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Customer }
    { 11012051;;Allow Decentral Customers;Boolean ;CaptionML=ENU=Allow Decentral Customers }
    { 11012055;;Customer Addresses ;Boolean       ;CaptionML=ENU=Customer Addresses }
    { 11012056;;Credit Limit by Date;Boolean      ;CaptionML=ENU=Credit Limit by Date }
    { 11012060;;Vendors            ;Boolean       ;OnValidate=BEGIN
                                                                //**4PS.n
                                                                IF NOT Vendors THEN BEGIN
                                                                  "Allow Decentral Vendors" := FALSE;
                                                                  "Order Addresses" := FALSE;
                                                                  "Payment Agreements" := FALSE;
                                                                  "Vendor Employees" := FALSE;
                                                                  "Vendor Categories" := FALSE;  //DP00268
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Vendor }
    { 11012061;;Order Addresses    ;Boolean       ;CaptionML=ENU=Order Addresses }
    { 11012062;;Comments           ;Boolean       ;CaptionML=ENU=Comments }
    { 11012063;;Allow Decentral Vendors;Boolean   ;CaptionML=ENU=Allow Decentral Vendors }
    { 11012065;;Payment Agreements ;Boolean       ;CaptionML=ENU=Payment Agreements }
    { 11012066;;Vendor Employees   ;Boolean       ;CaptionML=ENU=Vendor Employees }
    { 11012067;;Vendor Categories  ;Boolean       ;CaptionML=ENU=Vendor Categories }
    { 11012068;;Salespersons       ;Boolean       ;CaptionML=ENU=Salespersons }
    { 11012070;;Mailing Groups for Contact;Boolean;CaptionML=ENU=Segment at Contact }
    { 11012080;;Sector for Relation;Boolean       ;CaptionML=ENU=Industry Group at Contact }
    { 11012100;;Document Nos.      ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Document Nos. }
    { 11012101;;External Document Nos.;Code10     ;TableRelation="No. Series";
                                                   CaptionML=ENU=External Document Nos. }
    { 11012110;;Persons            ;Boolean       ;OnValidate=BEGIN
                                                                //**4PS.n
                                                                IF Persons THEN
                                                                  Companies := TRUE
                                                                ELSE BEGIN
                                                                  "Contactperson Features" := FALSE;
                                                                  "Person Features" := FALSE;
                                                                  "Person Alt. Addresses" := FALSE;
                                                                  "Function Groups" := FALSE;
                                                                  IF NOT Companies THEN
                                                                    "Allow Decentral Comp./Pers." := FALSE;
                                                                    "Mailing Groups" := FALSE;
                                                                    Salespersons := FALSE;  //**4PS02.n
                                                                END;
                                                              END;

                                                   CaptionML=ENU=(Contact)persons }
    { 11012114;;Contactperson Features;Boolean    ;CaptionML=ENU=Contactperson Features }
    { 11012115;;Person Features    ;Boolean       ;CaptionML=ENU=Person Features }
    { 11012116;;Person Alt. Addresses;Boolean     ;CaptionML=ENU=Alternative Adresses per person }
    { 11012120;;Default Due Date Activities;DateFormula;
                                                   CaptionML=ENU=Default Due Date Activities }
    { 11012130;;Bus. Rel. Code for Employees;Code10;
                                                   TableRelation="Business Relation";
                                                   OnValidate=BEGIN
                                                                IF ("Bus. Rel. Code for Employees" = '')  AND "Incl. Bus. Rel. Ext. Employees" THEN
                                                                  "Incl. Bus. Rel. Ext. Employees" := FALSE;
                                                              END;

                                                   CaptionML=ENU=Bus. Rel. Code for Employees }
    { 11012131;;Incl. Bus. Rel. Ext. Employees;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Incl. Bus. Rel. Ext. Employees" THEN
                                                                  TESTFIELD("Bus. Rel. Code for Employees");
                                                              END;

                                                   CaptionML=ENU=Incl. Rel. for External Employees;
                                                   Description=Obsolete w025474 }
    { 11012140;;Shortcut Dimension Employees;Code20;
                                                   TableRelation=Dimension;
                                                   CaptionML=ENU=Shortcut Dimension Employees }
    { 11012150;;Default Ext. Doc. Directory;Text250;
                                                   OnValidate=BEGIN
                                                                //**4PS
                                                                FileMgt.AddBackSlashToDirectoryName("Default Ext. Doc. Directory");
                                                              END;

                                                   CaptionML=ENU=Default Storage Directory External Documents }
    { 11012155;;Default Source Dir.Ext.Doc;Text250;OnValidate=BEGIN
                                                                //**4PS
                                                                FileMgt.AddBackSlashToDirectoryName("Default Ext. Doc. Directory");
                                                              END;

                                                   CaptionML=ENU=Default Source Directory External Documents }
    { 11012156;;Remove SourceFile  ;Option        ;CaptionML=ENU=Remove SourceFile;
                                                   OptionCaptionML=ENU=Only from Default Map,Allways,Never;
                                                   OptionString=Only from Default Map,Allways,Never }
    { 11012160;;Search Directory   ;BLOB          ;CaptionML=ENU=Search Directory;
                                                   SubType=User-Defined }
    { 11012170;;Show only own documents;Boolean   ;CaptionML=ENU=Show only own documents }
    { 11012180;;Generate Project allowed;Boolean  ;CaptionML=ENU=Generate Project allowed }
    { 11012190;;Default Male Salutation Code;Code10;
                                                   TableRelation=Salutation;
                                                   CaptionML=ENU=Default Male Salutation Code }
    { 11012200;;Default Female Salutation Code;Code10;
                                                   TableRelation=Salutation;
                                                   CaptionML=ENU=Default Female Salutation Code }
    { 11012210;;Contact Feature Gr. Funnel;Text50 ;TableRelation="Contact Feature Group".Description;
                                                   CaptionML=ENU=Contact Feature Group Pipeline Funnel }
    { 11012220;;Required Features Alert;Boolean   ;CaptionML=ENU=Required Features Alert }
    { 11012230;;Document Group     ;Code10        ;TableRelation="Document Group";
                                                   CaptionML=ENU=Documentgroup }
    { 11012241;;Mailing Groups     ;Boolean       ;CaptionML=ENU=Mailing Groups }
    { 11012242;;Industry Groups    ;Boolean       ;CaptionML=ENU=Industry Groups }
    { 11012243;;Function Groups    ;Boolean       ;CaptionML=ENU=Function Groups }
    { 11012244;;Tradenames         ;Boolean       ;CaptionML=ENU=Tradenames }
    { 11012250;;Inherit No. at Successor;Boolean  ;CaptionML=ENU=Inherit No. at Try-out Successor }
    { 11012251;;Inherit Sales Rep. Code;Boolean   ;InitValue=Yes;
                                                   CaptionML=ENU=Inherit Sales Rep. Code }
    { 11012252;;Inherit Purchaser Code;Boolean    ;CaptionML=ENU=Inherit Purchaser Code }
    { 11012260;;Dir. Sharepoint XML In;Text150    ;OnValidate=BEGIN
                                                                //**4PS
                                                                FileMgt.AddBackSlashToDirectoryName("Dir. Sharepoint XML In");
                                                              END;

                                                   CaptionML=ENU=Directory Sharepoint XML In }
    { 11012261;;Dir. Sharepoint XML Out;Text150   ;OnValidate=BEGIN
                                                                //**4PS
                                                                FileMgt.AddBackSlashToDirectoryName("Dir. Sharepoint XML Out");
                                                              END;

                                                   CaptionML=ENU=Directory Sharepoint XML Out }
    { 11012262;;Dir. Sharepoint XML Processed;Text150;
                                                   OnValidate=BEGIN
                                                                //**4PS
                                                                FileMgt.AddBackSlashToDirectoryName("Dir. Sharepoint XML Processed");
                                                              END;

                                                   CaptionML=ENU=Directory Sharepoint XML Processed }
    { 11012263;;Sharepoint XMLNS   ;Text80        ;CaptionML=ENU=Sharepoint XMLNS }
    { 11012264;;Sharepoint Timer   ;Integer       ;CaptionML=ENU=Sharepoint Timer;
                                                   MinValue=15 }
    { 11012265;;Codeunit No. Import Sharepoint;Integer;
                                                   TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Codeunit));
                                                   OnValidate=BEGIN
                                                                "Codeunit Name Import" := TranslateObject(ObjectRec."Object Type"::Codeunit,"Codeunit No. Import Sharepoint");
                                                              END;

                                                   OnLookup=VAR
                                                              AllObjWithCaption@1100485000 : Record 2000000058;
                                                            BEGIN
                                                              AllObjWithCaption.SETRANGE("Object Type", AllObjWithCaption."Object Type"::Codeunit);
                                                              IF PAGE.RUNMODAL(PAGE::Objects,AllObjWithCaption) = ACTION::LookupOK THEN BEGIN
                                                                "Codeunit No. Import Sharepoint" := AllObjWithCaption."Object ID";
                                                                VALIDATE("Codeunit No. Import Sharepoint");
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Codeunit No. Import Sharepoint }
    { 11012266;;Codeunit Name Import;Text30       ;CaptionML=ENU=Codeunit Name Import }
    { 11012267;;Codeunit No. Export Sharepoint;Integer;
                                                   TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Codeunit));
                                                   OnValidate=BEGIN
                                                                "Codeunit Name Export" := TranslateObject(ObjectRec."Object Type"::Codeunit, "Codeunit No. Export Sharepoint")
                                                              END;

                                                   OnLookup=VAR
                                                              AllObjWithCaption@1100485000 : Record 2000000058;
                                                            BEGIN
                                                              AllObjWithCaption.SETRANGE("Object Type", AllObjWithCaption."Object Type"::Codeunit);
                                                              IF PAGE.RUNMODAL(PAGE::Objects,AllObjWithCaption) = ACTION::LookupOK THEN BEGIN
                                                                "Codeunit No. Export Sharepoint" := AllObjWithCaption."Object ID";
                                                                VALIDATE("Codeunit No. Export Sharepoint");
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Codeunit No. Export Sharepoint }
    { 11012268;;Codeunit Name Export;Text30       ;CaptionML=ENU=Codeunit Name Export }
    { 11012269;;Dir. Sharepoint XML Failed;Text150;OnValidate=BEGIN
                                                                //**4PS
                                                                FileMgt.AddBackSlashToDirectoryName("Dir. Sharepoint XML Processed");
                                                              END;

                                                   CaptionML=ENU=Directory Sharepoint XML Failed }
    { 11012270;;Extension Filename Sharepoint;Text5;
                                                   CaptionML=ENU=Extension Filename Sharepoint }
    { 11012280;;Contact Nos. Employers;Code10     ;TableRelation="No. Series";
                                                   CaptionML=ENU=Contact Nos. Employers }
    { 11012290;;Contact Nos. Employees;Code10     ;TableRelation="No. Series";
                                                   CaptionML=ENU=Contact Nos. Employees }
    { 11012300;;Bus. Rel. Code for Employers;Code10;
                                                   TableRelation="Business Relation";
                                                   CaptionML=ENU=Bus. Rel. Code for Employers }
    { 11012310;;Custom Reference Format;Text30    ;CaptionML=ENU=Custom Reference Format }
    { 11012320;;Documentation System;Option       ;CaptionML=ENU=Documentation System;
                                                   OptionCaptionML=ENU=" ,Sharepoint,LIP,D3";
                                                   OptionString=[ ,Sharepoint,LIP,D3] }
    { 11012330;;LIP Library        ;Text150       ;CaptionML=ENU=LIP Library }
    { 11012340;;LIP Hummingbird exe;Text150       ;CaptionML=ENU=LIP Hummingbird exe }
    { 11012350;;Extension Hummingbird Appl.;Text5 ;CaptionML=ENU=Extension Hummingbird Appl. }
    { 11012360;;Version Mgt. Word Doc.;Boolean    ;CaptionML=ENU=Version Management in Word Documents (Misc.) }
    { 11012370;;Use Citrix Client  ;Boolean       ;CaptionML=ENU=Use Citrix Client }
    { 11012375;;Modify Filename to be Unique;Boolean;
                                                   CaptionML=ENU=Modify Filename to be Unique }
    { 11012380;;Inherit Visit Address Details;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=Inherit Visit Address Details }
    { 11012390;;Relational Structure;Boolean      ;CaptionML=ENU=Relational Structure (Project & Service) }
    { 11012400;;By-pass Phone Call Wizard;Boolean ;CaptionML=ENU=By-pass Phone Call Wizard;
                                                   Description=call C-017123 }
    { 11012410;;Format Full Name Person;Option    ;InitValue=Title;
                                                   OnValidate=BEGIN
                                                                //M25982 Dont know if theh following is desirable, wait until remarks of users.
                                                                //then it could be activated.
                                                                //RelationRec.RESET;
                                                                //RelationRec.SETRANGE(Type, RelationRec.Type::Person);
                                                                //IF RelationRec.FINDSET(TRUE, FALSE) THEN BEGIN
                                                                //  MODIFY; //Setup is read in contact table
                                                                //  REPEAT
                                                                //    RelationRec.Name := RelationRec.CalculatedName(1);
                                                                //    RelationRec."Name 2" := RelationRec.CalculatedName(2);
                                                                //    RelationRec.MODIFY(TRUE);
                                                                //  UNTIL RelationRec.NEXT = 0;
                                                                //END;
                                                              END;

                                                   CaptionML=ENU=Format Full Name Contact;
                                                   OptionCaptionML=ENU=First Name-Middle Name-Last Name,Initials-Middle Name-Last Name,Title-Initials-Middle Name-Last Name-Title,Initials-(First Name)-Middle Name-Last Name,Last Name-First Name-Middle Name,Last Name-Initials-Middle Name,Title-Last Name-Initials-Middle Name-Title,Last Name-Initials-(First Name)-Middle Name;
                                                   OptionString=First,Initials,Title,InitialsFirst,Last,LastInitials,LastTitle,LastInitialsFirst }
    { 11012420;;Reference Tool Nos.;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Reference Tool Nos. }
    { 11012430;;Phone Number Meta Data XML;Text80 ;CaptionML=ENU=Phone Number Meta Data XML }
    { 11012440;;Person Nos.        ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Person Nos. }
    { 11012450;;Company Nos.       ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Company Nos. }
    { 11012460;;Only Create Obl. Features Aut.;Boolean;
                                                   CaptionML=ENU=Only Create Obl. Features Aut. }
    { 11012470;;Document Type for Inv. Doc.;Code10;TableRelation="Document Type";
                                                   CaptionML=ENU=Document Type for Invoice Document;
                                                   Description=OLD }
    { 11012480;;Customer Default Dimensions;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Customer Default Dimensions" THEN
                                                                  TESTFIELD(Customers);
                                                              END;

                                                   CaptionML=ENU=Customer Default Dimensions }
    { 11012490;;Tradenames in Name Validation;Boolean;
                                                   CaptionML=ENU=Include Tradenames in Name validations }
    { 11020310;;D3 Folder Code     ;Text4         ;CaptionML=ENU=D3 Folder Code }
    { 11020311;;D3 Field No.       ;Text2         ;CaptionML=ENU=D3 Field No.. }
    { 11128201;;Path to Bankgiro   ;Text80        ;CaptionML=ENU=Path to Bankgiro;
                                                   Description=I024 150->80 }
    { 11128203;;Activate Bankgiro  ;Boolean       ;CaptionML=ENU=Activate Check for Bankgiro;
                                                   Description=I024 }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text005@1003 : TextConst 'ENU=Do you want to enable integration with the Connector for Microsoft Dynamics?';
      Text006@1004 : TextConst 'ENU=Integration with the Connector for Microsoft Dynamics is enabled.';
      IntegrationManagement@1005 : Codeunit 5150;
      Text007@1006 : TextConst 'ENU=Do you want to disable integration with the Connector for Microsoft Dynamics?';
      Text008@1007 : TextConst 'ENU=Integration with the Connector for Microsoft Dynamics is disabled.';
      Text009@1008 : TextConst 'ENU=Enabling the Connector while Inheritance is enabled may lead to data corruption. Do you want to continue?';
      Text010@1000 : TextConst 'ENU=The queue and storage folders cannot be the same. Choose a different folder.';
      ExchangeAccountNotConfiguredErr@1001 : TextConst 'ENU=The Exchange account for Email logging is not configured.';
      CompRelationRec@1210190000 : Record 11012059;
      MarketingSetup@1100485000 : Record 5079;
      ObjectRec@1100485001 : Record 2000000058;
      FileMgt@1100525000 : Codeunit 419;

    LOCAL PROCEDURE InheritanceEnabled@1() : Boolean;
    BEGIN
      EXIT("Inherit Salesperson Code" OR
        "Inherit Territory Code" OR
        "Inherit Country/Region Code" OR
        "Inherit Language Code" OR
        "Inherit Address Details" OR
        "Inherit Communication Details");
    END;

    PROCEDURE SetQueueFolder@2(ExchangeFolder@1000 : Record 5320);
    VAR
      InStream@1001 : InStream;
      OutStream@1002 : OutStream;
    BEGIN
      IF (ExchangeFolder.FullPath = "Storage Folder Path") AND (ExchangeFolder.FullPath <> '') THEN
        ERROR(Text010);
      IF (ExchangeFolder.ReadUniqueID = GetStorageFolderUID) AND ExchangeFolder."Unique ID".HASVALUE THEN
        ERROR(Text010);

      "Queue Folder Path" := ExchangeFolder.FullPath;

      ExchangeFolder."Unique ID".CREATEINSTREAM(InStream);
      "Queue Folder UID".CREATEOUTSTREAM(OutStream);
      COPYSTREAM(OutStream,InStream);
      MODIFY;
    END;

    PROCEDURE SetStorageFolder@3(ExchangeFolder@1000 : Record 5320);
    VAR
      InStream@1001 : InStream;
      OutStream@1002 : OutStream;
    BEGIN
      IF (ExchangeFolder.FullPath = "Queue Folder Path") AND (ExchangeFolder.FullPath <> '') THEN
        ERROR(Text010);
      IF (ExchangeFolder.ReadUniqueID = GetQueueFolderUID) AND ExchangeFolder."Unique ID".HASVALUE THEN
        ERROR(Text010);

      "Storage Folder Path" := ExchangeFolder.FullPath;

      ExchangeFolder."Unique ID".CREATEINSTREAM(InStream);
      "Storage Folder UID".CREATEOUTSTREAM(OutStream);
      COPYSTREAM(OutStream,InStream);
      MODIFY;
    END;

    PROCEDURE GetQueueFolderUID@7() Return : Text;
    VAR
      Stream@1000 : InStream;
    BEGIN
      CALCFIELDS("Queue Folder UID");
      "Queue Folder UID".CREATEINSTREAM(Stream);
      Stream.READTEXT(Return);
    END;

    PROCEDURE GetStorageFolderUID@8() Return : Text;
    VAR
      Stream@1000 : InStream;
    BEGIN
      CALCFIELDS("Storage Folder UID");
      "Storage Folder UID".CREATEINSTREAM(Stream);
      Stream.READTEXT(Return);
    END;

    PROCEDURE SetExchangeAccountPassword@4(PasswordText@1001 : Text);
    VAR
      ServicePassword@1000 : Record 1261;
    BEGIN
      IF ISNULLGUID("Exchange Account Password Key") OR NOT ServicePassword.GET("Exchange Account Password Key") THEN BEGIN
        ServicePassword.SavePassword(PasswordText);
        ServicePassword.INSERT(TRUE);
        "Exchange Account Password Key" := ServicePassword.Key;
      END ELSE BEGIN
        ServicePassword.SavePassword(PasswordText);
        ServicePassword.MODIFY;
      END;
    END;

    PROCEDURE CreateExchangeAccountCredentials@5(VAR Credentials@1000 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.NetworkCredential");
    VAR
      ServicePassword@1001 : Record 1261;
    BEGIN
      IF "Exchange Account User Name" = '' THEN
        ERROR(ExchangeAccountNotConfiguredErr);
      IF ISNULLGUID("Exchange Account Password Key") OR NOT ServicePassword.GET("Exchange Account Password Key") THEN
        ERROR(ExchangeAccountNotConfiguredErr);

      Credentials := Credentials.NetworkCredential("Exchange Account User Name",ServicePassword.GetPassword);
    END;

    PROCEDURE UpdateLocalSetup@1100485000();
    VAR
      LeadingCompany@1210190000 : Text[50];
      CompRec@1210190001 : Record 2000000006;
    BEGIN
      //**4PS
      //X016.sn
      CompRelationRec.SETRANGE("Company Contact Data", COMPANYNAME);
      CompRelationRec.SETFILTER(Company, '<>%1', COMPANYNAME);
      IF CompRelationRec.FIND('-') THEN BEGIN
        REPEAT
          MarketingSetup.CHANGECOMPANY(CompRelationRec.Company);
          MarketingSetup.GET;
          IF MarketingSetup."Central Management" THEN BEGIN
            CopyFlagsCentralMgt(MarketingSetup, Rec);
            MarketingSetup.MODIFY;
          END;
        UNTIL CompRelationRec.NEXT = 0;
      END;

      IF "Central Management" AND (xRec."Central Management" <> "Central Management") THEN BEGIN
        LeadingCompany := CompRelationRec.GetLeadingCompany(DATABASE::"Marketing Setup","Central Management");
        IF (LeadingCompany <> '') AND (LeadingCompany <> COMPANYNAME) THEN BEGIN
          IF CompRec.GET(LeadingCompany) THEN BEGIN
            MarketingSetup.CHANGECOMPANY(LeadingCompany);
            MarketingSetup.GET;
            CopyFlagsCentralMgt(Rec, MarketingSetup);
          END;
        END;
      END;
      //X016.en
    END;

    PROCEDURE InitFlagsCentralMgt@1210190000();
    BEGIN
      //**4PS
      //X016.sn
      Companies := FALSE;
      "Allow Decentral Comp./Pers." := FALSE;
      Persons :=  FALSE;
      Customers := FALSE;
      "Allow Decentral Customers" := FALSE;
      "Customer Default Dimensions" := FALSE;
      Vendors := FALSE;
      "Allow Decentral Vendors" := FALSE;
      Comments := FALSE;
      "Company Features" := FALSE;
      "Contactperson Features" := FALSE;
      "Person Features" := FALSE;
      "Company Alt. Addresses" := FALSE;
      "Person Alt. Addresses" := FALSE;
      "Order Addresses" := FALSE;
      "Customer Addresses" := FALSE;
      "Credit Limit by Date" := FALSE;
      "Mailing Groups" := FALSE;
      "Industry Groups" := FALSE;
      "Function Groups" := FALSE;
      Tradenames := FALSE;
      "Payment Agreements" := FALSE;
      "Vendor Employees" := FALSE;
      "Vendor Categories" := FALSE;  //DP00268
      Salespersons := FALSE;
      //X016.en
    END;

    PROCEDURE CopyFlagsCentralMgt@1210190001(VAR MarketingSetup1@1210190000 : Record 5079;VAR MarketingSetup2@1210190001 : Record 5079);
    BEGIN
      //**4PS
      //X016.sn
      MarketingSetup1.Companies := MarketingSetup2.Companies;
      MarketingSetup1."Allow Decentral Comp./Pers." := MarketingSetup2."Allow Decentral Comp./Pers.";
      MarketingSetup1.Persons :=  MarketingSetup2.Persons;
      MarketingSetup1.Customers := MarketingSetup2.Customers;
      MarketingSetup1."Allow Decentral Customers" := MarketingSetup2."Allow Decentral Customers";
      MarketingSetup1."Customer Default Dimensions" := MarketingSetup2."Customer Default Dimensions";
      MarketingSetup1.Vendors := MarketingSetup2.Vendors;
      MarketingSetup1."Allow Decentral Vendors" := MarketingSetup2."Allow Decentral Vendors";
      MarketingSetup1.Comments := MarketingSetup2.Comments;
      MarketingSetup1."Company Features" := MarketingSetup2."Company Features";
      MarketingSetup1."Contactperson Features" := MarketingSetup2."Contactperson Features";
      MarketingSetup1."Person Features" := MarketingSetup2."Person Features";
      MarketingSetup1."Company Alt. Addresses" := MarketingSetup2."Company Alt. Addresses";
      MarketingSetup1."Person Alt. Addresses" := MarketingSetup2."Person Alt. Addresses";
      MarketingSetup1."Order Addresses" := MarketingSetup2."Order Addresses";
      MarketingSetup1."Customer Addresses" := MarketingSetup2."Customer Addresses";
      MarketingSetup1."Credit Limit by Date" := MarketingSetup2."Credit Limit by Date";
      MarketingSetup1."Mailing Groups" := MarketingSetup2."Mailing Groups";
      MarketingSetup1."Industry Groups" := MarketingSetup2."Industry Groups";
      MarketingSetup1."Function Groups" := MarketingSetup2."Function Groups";
      MarketingSetup1.Tradenames := MarketingSetup2.Tradenames;
      MarketingSetup1."Payment Agreements" := MarketingSetup2."Payment Agreements";
      MarketingSetup1."Vendor Employees" := MarketingSetup2."Vendor Employees";
      MarketingSetup1."Vendor Categories" := MarketingSetup2."Vendor Categories";  //DP00268
      MarketingSetup1.Salespersons := MarketingSetup2.Salespersons;
      //X016.en
    END;

    PROCEDURE TranslateObject@1000000001(ObjectType@1000 : ' ,Table,Form,Report,Dataport,Codeunit';ObjectID@1001 : Integer) : Text[250];
    BEGIN
      IF ObjectRec.GET(ObjectType,ObjectID) THEN BEGIN
        EXIT(ObjectRec."Object Caption");
      END;
    END;

    BEGIN
    {
      X016: multiple central management companies for one operating company (db, 22-08-11)

      *** I0024 ***
      130828 Added field "Path to Bankgiro"
      151118 Added field "Activate Bankgiro"
    }
    END.
  }
}

