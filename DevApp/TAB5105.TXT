OBJECT Table 5105 Customer Template
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               DPA_OnInsert; //**4PS.n
               DimMgt.UpdateDefaultDim(
                 DATABASE::"Customer Template",Code,
                 "Global Dimension 1 Code","Global Dimension 2 Code");

               //"Invoice Disc. Code" := Code; //**4PS.o C028107
               //**4PS.sn
               ProjSetup.GET;
               "Item Price Cost Plus Project" := ProjSetup."Item Price Cost Plus Entry";
               "Default Collect Invoices By" := ProjSetup."Default Collect Invoices By";  //C005810.n
               //**4PS.en
             END;

    OnDelete=BEGIN
               DimMgt.DeleteDefaultDim(DATABASE::"Customer Template",Code);
               //**4PS.sn
               CustSurchRec.RESET;  //db, 23-06-08
               CustSurchRec.SETRANGE("Record Type", CustSurchRec."Record Type"::Common);
               CustSurchRec.SETFILTER("Customer No.", '%1', '');
               CustSurchRec.SETRANGE(Code, Code);
               CustSurchRec.DELETEALL;
               //**4PS.en
             END;

    CaptionML=ENU=Customer Template;
    LookupPageID=Page5156;
    DrillDownPageID=Page5156;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=ENU=Code;
                                                   NotBlank=Yes }
    { 2   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 15  ;   ;Territory Code      ;Code10        ;TableRelation=Territory;
                                                   CaptionML=ENU=Territory Code }
    { 16  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   CaptionClass='1,1,1' }
    { 17  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=ENU=Global Dimension 2 Code;
                                                   CaptionClass='1,1,2' }
    { 21  ;   ;Customer Posting Group;Code10      ;TableRelation="Customer Posting Group";
                                                   CaptionML=ENU=Customer Posting Group }
    { 22  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=ENU=Currency Code }
    { 23  ;   ;Customer Price Group;Code10        ;TableRelation="Customer Price Group";
                                                   CaptionML=ENU=Customer Price Group }
    { 27  ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   CaptionML=ENU=Payment Terms Code }
    { 30  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=ENU=Shipment Method Code }
    { 33  ;   ;Invoice Disc. Code  ;Code20        ;TableRelation=Customer;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Invoice Disc. Code }
    { 34  ;   ;Customer Disc. Group;Code20        ;TableRelation="Customer Discount Group";
                                                   CaptionML=ENU=Customer Disc. Group }
    { 35  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Country/Region Code }
    { 47  ;   ;Payment Method Code ;Code10        ;TableRelation="Payment Method";
                                                   CaptionML=ENU=Payment Method Code }
    { 88  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   OnValidate=BEGIN
                                                                IF xRec."Gen. Bus. Posting Group" <> "Gen. Bus. Posting Group" THEN
                                                                  IF GenBusPostingGrp.ValidateVatBusPostingGroup(GenBusPostingGrp,"Gen. Bus. Posting Group") THEN
                                                                    VALIDATE("VAT Bus. Posting Group",GenBusPostingGrp."Def. VAT Bus. Posting Group");
                                                              END;

                                                   CaptionML=ENU=Gen. Bus. Posting Group }
    { 110 ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=ENU=VAT Bus. Posting Group }
    { 7001;   ;Allow Line Disc.    ;Boolean       ;CaptionML=ENU=Allow Line Disc. }
    { 11012000;;Create Contact     ;Option        ;CaptionML=ENU=Create Contact;
                                                   OptionCaptionML=ENU=Generate,Manual;
                                                   OptionString=Generate,Manual }
    { 11012005;;Create Contact as  ;Option        ;CaptionML=ENU=Create Contact as;
                                                   OptionCaptionML=ENU=Company,Person;
                                                   OptionString=Company,Person }
    { 11012010;;Reminder Terms Code;Code10        ;TableRelation="Reminder Terms";
                                                   CaptionML=ENU=Reminder Terms Code }
    { 11012020;;Transaction Mode Code;Code20      ;CaptionML=ENU=Transaction Mode Code }
    { 11012030;;VAT Prod. Posting Group;Code10    ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT Prod. Posting Group }
    { 11012040;;Fin. Charge Terms Code;Code10     ;TableRelation="Finance Charge Terms";
                                                   CaptionML=ENU=Fin. Charge Terms Code }
    { 11012050;;Cost Object        ;Code20        ;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Revenue),
                                                                                               Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Cost Object }
    { 11012060;;Project Contract Type;Option      ;CaptionML=ENU=Project Contract Type;
                                                   OptionCaptionML=ENU=Maincontracting,Subcontracting;
                                                   OptionString=Maincontracting,Subcontracting }
    { 11012070;;Surcharge % Labor  ;Decimal       ;CaptionML=ENU=Surcharge % Labor }
    { 11012080;;Surcharge % Material;Decimal      ;CaptionML=ENU=Surcharge % Material }
    { 11012090;;Surcharge % Subcontr.;Decimal     ;CaptionML=ENU=Surcharge % Subcontr. }
    { 11012100;;Surcharge % Plant  ;Decimal       ;CaptionML=ENU=Surcharge % Plant }
    { 11012110;;Surcharge % Sundry ;Decimal       ;CaptionML=ENU=Surcharge % Sundry }
    { 11012120;;Urgency            ;Code10        ;TableRelation="Urgency Codes by Customer".Urgency;
                                                   CaptionML=ENU=Urgency }
    { 11012130;;Invoice Layout Code;Code10        ;TableRelation="Invoice Layout";
                                                   CaptionML=ENU=Invoice Layout Code }
    { 11012132;;Partner Type       ;Option        ;OnValidate=BEGIN
                                                                //**4PS DP00613
                                                                  IF NOT CONFIRM(PartnerTypeMismatchMsg,FALSE) THEN
                                                                    ERROR('')
                                                              END;

                                                   CaptionML=ENU=Partner Type;
                                                   OptionCaptionML=ENU=" ,Company,Person";
                                                   OptionString=[ ,Company,Person] }
    { 11012140;;Surcharge % Labor (Est);Decimal   ;CaptionML=ENU=Surcharge % Labor (Estimate);
                                                   Description=DP00381 }
    { 11012141;;Surcharge % Material (Est);Decimal;CaptionML=ENU=Surcharge % Material (Estimate);
                                                   Description=DP00381 }
    { 11012142;;Surcharge % Subcontr. (Est);Decimal;
                                                   CaptionML=ENU=Surcharge % Subcontracting (Estimate);
                                                   Description=DP00381 }
    { 11012143;;Surcharge % Plant (Est);Decimal   ;CaptionML=ENU=Surcharge % Plant (Estimate);
                                                   Description=DP00381 }
    { 11012144;;Surcharge % Sundry (Est);Decimal  ;CaptionML=ENU=Surcharge % Sundry (Estimate);
                                                   Description=DP00381 }
    { 11012331;;% Labor            ;Decimal       ;CaptionML=ENU=% Labor;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   AutoFormatType=1 }
    { 11012332;;% to B Account     ;Decimal       ;CaptionML=ENU=% to B Account;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 11012340;;Item Price Cost Plus Project;Option;
                                                   CaptionML=ENU=Item Price Cost Plus Project;
                                                   OptionCaptionML=ENU=CostPrice,Gross Price - Sales Discount;
                                                   OptionString=CostPrice,GrossMin }
    { 11012341;;Item Price Estimate;Option        ;CaptionML=ENU=Item Price Estimate;
                                                   OptionCaptionML=ENU=CostPrice,Gross Price - Sales Discount;
                                                   OptionString=CostPrice,GrossMin;
                                                   Description=DP00381 }
    { 11012342;;Item Price Cost Plus Service;Option;
                                                   CaptionML=ENU=Item Price Cost Plus Service;
                                                   OptionCaptionML=ENU=CostPrice,Gross Price - Sales Discount;
                                                   OptionString=CostPrice,GrossMin }
    { 11012350;;Language Code      ;Code10        ;TableRelation=Language;
                                                   CaptionML=ENU=Language Code }
    { 11012360;;Purch Discount Term Group;Code20  ;TableRelation="Discount Term Group".Code WHERE (Level=CONST(Customer),
                                                                                                   Type=FILTER(Common|Purchase));
                                                   CaptionML=ENU=Purchase Discount Term Group;
                                                   Description=DP00381 }
    { 11012361;;Sales Discount Term Group;Code20  ;TableRelation="Discount Term Group".Code WHERE (Level=CONST(Customer),
                                                                                                   Type=FILTER(Common|Sales));
                                                   CaptionML=ENU=Sales Discount Term Group;
                                                   Description=DP00381 }
    { 11012370;;Default Collect Invoices By;Option;CaptionML=ENU=Default Collect Invoices By;
                                                   OptionCaptionML=ENU=Supervisor,Principal,Project,Commission,Settlement Sheet,Main Project;
                                                   OptionString=Supervisor,Principal,Project,Commission,Settlement Sheet,Main Project }
    { 11012375;;Collect Project Invoices By;Option;CaptionML=ENU=Collect Project Invoices on Collective List by;
                                                   OptionCaptionML=ENU=Collective-List,Main Project,Project,Commission,Settlement Sheet,Cost Plus Entry;
                                                   OptionString=Collective-List,Main Project,Project,Commission,Settlement Sheet,Cost Plus Entry }
    { 11012380;;Collect SO Invoices By;Option     ;CaptionML=ENU=Collect Service Order Invoices By;
                                                   OptionCaptionML=ENU=Customer,Service Contract,Service Location,Service Order,Complex,Customer - Bill-to Contact Person;
                                                   OptionString=Customer,Service Contract,Service Location,Service Order,Complex,Customer - Bill-to Contact Person }
    { 11020254;;Credit Restriction ;Code20        ;TableRelation="Credit Restriction";
                                                   CaptionML=ENU=Credit Restriction }
    { 11020255;;Invoice Copies     ;Integer       ;CaptionML=ENU=Invoice Copies;
                                                   Description=**4PS** (NLD Factuurexemplaren changed to Aantal kopiefacturen) }
    { 11020256;;Prices Including VAT;Boolean      ;CaptionML=ENU=Prices Including VAT }
    { 11020260;;Settlement Method  ;Option        ;CaptionML=ENU=Settlement Method;
                                                   OptionCaptionML=ENU=Fixed Price,Cost Plus;
                                                   OptionString=Fixed Price,Cost Plus }
    { 11125800;;SO Appointment Letter Code;Code10 ;TableRelation="SO Appointment Letter";
                                                   OnValidate=BEGIN
                                                                IF "SO Appointment Letter Code" <> '' THEN
                                                                  TESTFIELD("Maintenance Appointments by", "Maintenance Appointments by"::Letter);
                                                              END;

                                                   CaptionML=ENU=SO Appointment Letter }
    { 11125850;;Maintenance Appointments by;Option;OnValidate=BEGIN
                                                                IF "Maintenance Appointments by" <> "Maintenance Appointments by"::Letter THEN
                                                                  "SO Appointment Letter Code" := '';
                                                              END;

                                                   CaptionML=ENU=Maintenance Appointments by;
                                                   OptionCaptionML=ENU=" ,Letter,E-Mail";
                                                   OptionString=[ ,Letter,E-Mail] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,Description,Country/Region Code,Customer Posting Group }
  }
  CODE
  {
    VAR
      GenBusPostingGrp@1001 : Record 250;
      ProjSetup@1100485000 : Record 315;
      DimMgt@1000 : Codeunit 408;
      CustSurchRec@1100485001 : Record 11020367;
      DPA_Management@1100000999 : Codeunit 11012783;
      SkipModify@1100528400 : Boolean;
      PartnerTypeMismatchMsg@1100528500 : TextConst 'ENU=The Partner Type does not match the Partner Type defined in Transaction Mode. Do you still want to change the Partner Type?';

    LOCAL PROCEDURE ValidateShortcutDimCode@1(FieldNumber@1001 : Integer;VAR ShortcutDimCode@1000 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.SaveDefaultDim(DATABASE::"Customer Template",Code,FieldNumber,ShortcutDimCode);
      IF NOT SkipModify THEN //**4PS.n
        MODIFY;
    END;

    LOCAL PROCEDURE DPA_OnInsert@1100000991();
    BEGIN
      //**4PS
      IF NOT DPA_IsActive THEN
        EXIT;

      IF "Global Dimension 1 Code" <> '' THEN BEGIN
        SkipModify := TRUE;
        VALIDATE("Global Dimension 1 Code");
        SkipModify := FALSE;
      END;
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(5105) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 5105');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Customer Template", "Global Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Global Dimension 1 Code");
    END;

    BEGIN
    {
      4PS, C028107, 15-12-15, Removed code and var in lookup of field "Invoice Disc. Code"
    }
    END.
  }
}

