OBJECT Table 5832 Capacity Ledger Entry
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,4PS9.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Capacity Ledger Entry;
    LookupPageID=Page5832;
    DrillDownPageID=Page5832;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=ENU=Entry No. }
    { 2   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Machine Center)) "Machine Center"
                                                                 ELSE IF (Type=CONST(Work Center)) "Work Center"
                                                                 ELSE IF (Type=CONST(Resource)) Resource;
                                                   CaptionML=ENU=No. }
    { 3   ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 4   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Work Center,Machine Center, ,Resource;
                                                   OptionString=Work Center,Machine Center, ,Resource }
    { 6   ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No. }
    { 7   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 8   ;   ;Operation No.       ;Code10        ;CaptionML=ENU=Operation No. }
    { 9   ;   ;Work Center No.     ;Code20        ;TableRelation="Work Center";
                                                   CaptionML=ENU=Work Center No. }
    { 10  ;   ;Quantity            ;Decimal       ;CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5 }
    { 11  ;   ;Setup Time          ;Decimal       ;CaptionML=ENU=Setup Time;
                                                   DecimalPlaces=0:5 }
    { 12  ;   ;Run Time            ;Decimal       ;CaptionML=ENU=Run Time;
                                                   DecimalPlaces=0:5 }
    { 13  ;   ;Stop Time           ;Decimal       ;CaptionML=ENU=Stop Time;
                                                   DecimalPlaces=0:5 }
    { 15  ;   ;Invoiced Quantity   ;Decimal       ;CaptionML=ENU=Invoiced Quantity;
                                                   DecimalPlaces=0:5 }
    { 16  ;   ;Output Quantity     ;Decimal       ;CaptionML=ENU=Output Quantity;
                                                   DecimalPlaces=0:5 }
    { 17  ;   ;Scrap Quantity      ;Decimal       ;CaptionML=ENU=Scrap Quantity;
                                                   DecimalPlaces=0:5 }
    { 19  ;   ;Concurrent Capacity ;Decimal       ;CaptionML=ENU=Concurrent Capacity }
    { 28  ;   ;Cap. Unit of Measure Code;Code10   ;TableRelation="Capacity Unit of Measure";
                                                   CaptionML=ENU=Cap. Unit of Measure Code }
    { 29  ;   ;Qty. per Cap. Unit of Measure;Decimal;
                                                   CaptionML=ENU=Qty. per Cap. Unit of Measure;
                                                   DecimalPlaces=0:5 }
    { 33  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   CaptionClass='1,1,1' }
    { 34  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Global Dimension 2 Code;
                                                   CaptionClass='1,1,2' }
    { 39  ;   ;Last Output Line    ;Boolean       ;CaptionML=ENU=Last Output Line }
    { 42  ;   ;Completely Invoiced ;Boolean       ;CaptionML=ENU=Completely Invoiced }
    { 43  ;   ;Starting Time       ;Time          ;CaptionML=ENU=Starting Time }
    { 44  ;   ;Ending Time         ;Time          ;CaptionML=ENU=Ending Time }
    { 52  ;   ;Routing No.         ;Code20        ;TableRelation="Routing Header";
                                                   CaptionML=ENU=Routing No. }
    { 53  ;   ;Routing Reference No.;Integer      ;CaptionML=ENU=Routing Reference No. }
    { 56  ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=ENU=Item No. }
    { 57  ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=ENU=Variant Code }
    { 58  ;   ;Unit of Measure Code;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=ENU=Unit of Measure Code }
    { 59  ;   ;Qty. per Unit of Measure;Decimal   ;CaptionML=ENU=Qty. per Unit of Measure;
                                                   DecimalPlaces=0:5 }
    { 60  ;   ;Document Date       ;Date          ;CaptionML=ENU=Document Date }
    { 61  ;   ;External Document No.;Code35       ;CaptionML=ENU=External Document No. }
    { 65  ;   ;Stop Code           ;Code10        ;TableRelation=Stop;
                                                   CaptionML=ENU=Stop Code }
    { 66  ;   ;Scrap Code          ;Code10        ;TableRelation=Scrap;
                                                   CaptionML=ENU=Scrap Code }
    { 68  ;   ;Work Center Group Code;Code10      ;TableRelation="Work Center Group";
                                                   CaptionML=ENU=Work Center Group Code }
    { 69  ;   ;Work Shift Code     ;Code10        ;TableRelation="Work Shift";
                                                   CaptionML=ENU=Work Shift Code }
    { 71  ;   ;Direct Cost         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Cost Amount (Actual)" WHERE (Capacity Ledger Entry No.=FIELD(Entry No.),
                                                                                                               Entry Type=CONST(Direct Cost)));
                                                   CaptionML=ENU=Direct Cost;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 72  ;   ;Overhead Cost       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Cost Amount (Actual)" WHERE (Capacity Ledger Entry No.=FIELD(Entry No.),
                                                                                                               Entry Type=CONST(Indirect Cost)));
                                                   CaptionML=ENU=Overhead Cost;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 76  ;   ;Direct Cost (ACY)   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Cost Amount (Actual) (ACY)" WHERE (Capacity Ledger Entry No.=FIELD(Entry No.),
                                                                                                                     Entry Type=CONST(Direct Cost)));
                                                   CaptionML=ENU=Direct Cost (ACY);
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 77  ;   ;Overhead Cost (ACY) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Cost Amount (Actual) (ACY)" WHERE (Capacity Ledger Entry No.=FIELD(Entry No.),
                                                                                                                     Entry Type=CONST(Indirect Cost)));
                                                   CaptionML=ENU=Overhead Cost (ACY);
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 78  ;   ;Subcontracting      ;Boolean       ;CaptionML=ENU=Subcontracting }
    { 90  ;   ;Order Type          ;Option        ;CaptionML=ENU=Order Type;
                                                   OptionCaptionML=ENU=" ,Production,Transfer,Service,Assembly";
                                                   OptionString=[ ,Production,Transfer,Service,Assembly];
                                                   Editable=No }
    { 91  ;   ;Order No.           ;Code20        ;TableRelation=IF (Order Type=CONST(Production)) "Production Order".No. WHERE (Status=FILTER(Released..));
                                                   CaptionML=ENU=Order No.;
                                                   Editable=No }
    { 92  ;   ;Order Line No.      ;Integer       ;TableRelation=IF (Order Type=CONST(Production)) "Prod. Order Line"."Line No." WHERE (Status=FILTER(Released..),
                                                                                                                                        Prod. Order No.=FIELD(Order No.));
                                                   CaptionML=ENU=Order Line No.;
                                                   Editable=No }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Document No.,Posting Date                }
    {    ;Order Type,Order No.,Order Line No.,Routing No.,Routing Reference No.,Operation No.,Last Output Line;
                                                   SumIndexFields=Quantity,Output Quantity;
                                                   MaintainSIFTIndex=No }
    {    ;Work Center No.,Work Shift Code,Posting Date }
    {    ;Type,No.,Work Shift Code,Item No.,Posting Date }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Entry No.,Description,Type,No.,Posting Date,Document No. }
  }
  CODE
  {
    VAR
      GLSetup@1000 : Record 98;
      GLSetupRead@1001 : Boolean;
      DPA_Management@1100000999 : Codeunit 11012783;

    LOCAL PROCEDURE GetCurrencyCode@4() : Code[10];
    BEGIN
      IF GLSetupRead THEN BEGIN
        GLSetup.GET;
        GLSetupRead := TRUE;
      END;
      EXIT(GLSetup."Additional Reporting Currency");
    END;

    PROCEDURE ShowDimensions@1();
    VAR
      DimMgt@1000 : Codeunit 408;
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"Entry No."));
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(5832) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 5832');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Capacity Ledger Entry", "Global Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Global Dimension 1 Code");
    END;

    BEGIN
    END.
  }
}

