OBJECT Table 5907 Service Ledger Entry
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00,4PS9.00,No part of 4PS Construct;
  }
  PROPERTIES
  {
    OnInsert=VAR
               GenJnlPostPreview@1000 : Codeunit 19;
             BEGIN
               GenJnlPostPreview.SaveServiceLedgEntry(Rec);
             END;

    OnModify=VAR
               GenJnlPostPreview@1000 : Codeunit 19;
             BEGIN
               GenJnlPostPreview.ModifyServiceLedgEntry(Rec);
             END;

    CaptionML=ENU=Service Ledger Entry;
    LookupPageID=Page5912;
    DrillDownPageID=Page5912;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=ENU=Entry No. }
    { 2   ;   ;Service Contract No.;Code20        ;TableRelation="Service Contract Header"."Contract No." WHERE (Contract Type=CONST(Contract));
                                                   CaptionML=ENU=Service Contract No. }
    { 3   ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund,Shipment";
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund,Shipment] }
    { 4   ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No. }
    { 5   ;   ;Serv. Contract Acc. Gr. Code;Code10;TableRelation="Service Contract Account Group".Code;
                                                   CaptionML=ENU=Serv. Contract Acc. Gr. Code }
    { 6   ;   ;Document Line No.   ;Integer       ;CaptionML=ENU=Document Line No. }
    { 8   ;   ;Moved from Prepaid Acc.;Boolean    ;CaptionML=ENU=Moved from Prepaid Acc. }
    { 9   ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 11  ;   ;Amount (LCY)        ;Decimal       ;CaptionML=ENU=Amount (LCY);
                                                   AutoFormatType=1 }
    { 12  ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Customer No. }
    { 13  ;   ;Ship-to Code        ;Code10        ;TableRelation="Ship-to Address".Code WHERE (Customer No.=FIELD(Customer No.));
                                                   CaptionML=ENU=Ship-to Code }
    { 14  ;   ;Item No. (Serviced) ;Code20        ;TableRelation=Item;
                                                   CaptionML=ENU=Item No. (Serviced) }
    { 15  ;   ;Serial No. (Serviced);Code20       ;CaptionML=ENU=Serial No. (Serviced) }
    { 16  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=ENU=User ID }
    { 17  ;   ;Contract Invoice Period;Text30     ;CaptionML=ENU=Contract Invoice Period }
    { 18  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   CaptionClass='1,2,1' }
    { 19  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Global Dimension 2 Code;
                                                   CaptionClass='1,2,2' }
    { 20  ;   ;Service Item No. (Serviced);Code20 ;TableRelation="Service Item";
                                                   CaptionML=ENU=Service Item No. (Serviced) }
    { 21  ;   ;Variant Code (Serviced);Code10     ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD("Item No. (Serviced)"));
                                                   CaptionML=ENU=Variant Code (Serviced) }
    { 22  ;   ;Contract Group Code ;Code10        ;TableRelation="Contract Group".Code;
                                                   CaptionML=ENU=Contract Group Code }
    { 23  ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,Resource,Item,Service Cost,Service Contract,G/L Account";
                                                   OptionString=[ ,Resource,Item,Service Cost,Service Contract,G/L Account] }
    { 24  ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Service Contract)) "Service Contract Header"."Contract No." WHERE (Contract Type=CONST(Contract))
                                                                 ELSE IF (Type=CONST(" ")) "Standard Text"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Resource)) Resource
                                                                 ELSE IF (Type=CONST(Service Cost)) "Service Cost"
                                                                 ELSE IF (Type=CONST(G/L Account)) "G/L Account";
                                                   CaptionML=ENU=No. }
    { 25  ;   ;Cost Amount         ;Decimal       ;CaptionML=ENU=Cost Amount;
                                                   AutoFormatType=1 }
    { 26  ;   ;Discount Amount     ;Decimal       ;CaptionML=ENU=Discount Amount;
                                                   AutoFormatType=1 }
    { 27  ;   ;Unit Cost           ;Decimal       ;CaptionML=ENU=Unit Cost;
                                                   AutoFormatType=2 }
    { 28  ;   ;Quantity            ;Decimal       ;CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5 }
    { 29  ;   ;Charged Qty.        ;Decimal       ;CaptionML=ENU=Charged Qty.;
                                                   DecimalPlaces=0:5 }
    { 30  ;   ;Unit Price          ;Decimal       ;CaptionML=ENU=Unit Price;
                                                   AutoFormatType=2 }
    { 31  ;   ;Discount %          ;Decimal       ;CaptionML=ENU=Discount %;
                                                   DecimalPlaces=0:5 }
    { 32  ;   ;Contract Disc. Amount;Decimal      ;CaptionML=ENU=Contract Disc. Amount;
                                                   AutoFormatType=1 }
    { 33  ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Bill-to Customer No. }
    { 34  ;   ;Fault Reason Code   ;Code10        ;TableRelation="Fault Reason Code";
                                                   CaptionML=ENU=Fault Reason Code }
    { 35  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 37  ;   ;Service Order Type  ;Code10        ;TableRelation="Service Order Type";
                                                   CaptionML=ENU=Service Order Type }
    { 39  ;   ;Service Order No.   ;Code20        ;OnLookup=BEGIN
                                                              CLEAR(ServOrderMgt);
                                                              ServOrderMgt.ServHeaderLookup(1,"Service Order No.");
                                                            END;

                                                   CaptionML=ENU=Service Order No. }
    { 40  ;   ;Job No.             ;Code20        ;TableRelation=Job.No. WHERE (Bill-to Customer No.=FIELD(Bill-to Customer No.));
                                                   CaptionML=ENU=Job No. }
    { 41  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=ENU=Gen. Bus. Posting Group }
    { 42  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=ENU=Gen. Prod. Posting Group }
    { 43  ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=ENU=Location Code }
    { 44  ;   ;Unit of Measure Code;Code10        ;TableRelation="Unit of Measure";
                                                   CaptionML=ENU=Unit of Measure Code }
    { 45  ;   ;Work Type Code      ;Code10        ;TableRelation="Work Type";
                                                   CaptionML=ENU=Work Type Code }
    { 46  ;   ;Bin Code            ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Location Code));
                                                   CaptionML=ENU=Bin Code }
    { 47  ;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   CaptionML=ENU=Responsibility Center }
    { 48  ;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=ENU=Variant Code }
    { 50  ;   ;Entry Type          ;Option        ;CaptionML=ENU=Entry Type;
                                                   OptionCaptionML=ENU=Usage,Sale,Consume,Contract;
                                                   OptionString=Usage,Sale,Consume,Contract }
    { 51  ;   ;Open                ;Boolean       ;CaptionML=ENU=Open }
    { 52  ;   ;Serv. Price Adjmt. Gr. Code;Code10 ;TableRelation="Service Price Adjustment Group";
                                                   CaptionML=ENU=Serv. Price Adjmt. Gr. Code }
    { 53  ;   ;Service Price Group Code;Code10    ;TableRelation="Service Price Group";
                                                   CaptionML=ENU=Service Price Group Code }
    { 54  ;   ;Prepaid             ;Boolean       ;CaptionML=ENU=Prepaid }
    { 55  ;   ;Apply Until Entry No.;Integer      ;CaptionML=ENU=Apply Until Entry No. }
    { 56  ;   ;Applies-to Entry No.;Integer       ;AccessByPermission=TableData 27=R;
                                                   CaptionML=ENU=Applies-to Entry No. }
    { 57  ;   ;Amount              ;Decimal       ;CaptionML=ENU=Amount;
                                                   AutoFormatType=1 }
    { 58  ;   ;Job Task No.        ;Code20        ;TableRelation="Job Task"."Job Task No." WHERE (Job No.=FIELD(Job No.));
                                                   CaptionML=ENU=Job Task No. }
    { 59  ;   ;Job Line Type       ;Option        ;InitValue=Schedule;
                                                   CaptionML=ENU=Job Line Type;
                                                   OptionCaptionML=ENU=" ,Schedule,Contract,Both Schedule and Contract";
                                                   OptionString=[ ,Schedule,Contract,Both Schedule and Contract] }
    { 60  ;   ;Job Posted          ;Boolean       ;CaptionML=ENU=Job Posted }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Document No.,Posting Date                }
    {    ;Entry Type,Document Type,Document No.,Document Line No. }
    {    ;Service Contract No.,Entry No.,Entry Type,Type,Moved from Prepaid Acc.,Posting Date,Open,Prepaid,Service Item No. (Serviced),Customer No.,Contract Group Code,Responsibility Center;
                                                   SumIndexFields=Amount (LCY),Cost Amount,Quantity,Charged Qty.,Contract Disc. Amount }
    {    ;Service Order No.,Service Item No. (Serviced),Entry Type,Moved from Prepaid Acc.,Posting Date,Open,Type,Service Contract No.;
                                                   SumIndexFields=Amount (LCY),Cost Amount,Quantity,Charged Qty.,Amount }
    {    ;Type,No.,Entry Type,Moved from Prepaid Acc.,Posting Date,Open,Prepaid;
                                                   SumIndexFields=Amount (LCY),Cost Amount,Quantity,Charged Qty. }
    {    ;Service Item No. (Serviced),Entry Type,Moved from Prepaid Acc.,Type,Posting Date,Open,Service Contract No.,Prepaid,Customer No.,Contract Group Code,Responsibility Center;
                                                   SumIndexFields=Amount (LCY),Cost Amount }
    {    ;Service Item No. (Serviced),Entry Type,Type,Service Contract No.,Posting Date,Service Order No.;
                                                   SumIndexFields=Amount (LCY),Cost Amount,Quantity,Charged Qty. }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Entry No.,Entry Type,Service Contract No.,Posting Date }
  }
  CODE
  {
    VAR
      ServOrderMgt@1001 : Codeunit 5900;
      DimMgt@1000 : Codeunit 408;
      DPA_Management@1100000999 : Codeunit 11012783;

    PROCEDURE ShowDimensions@1();
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"Entry No."));
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(5907) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 5907');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Service Ledger Entry", "Global Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Global Dimension 1 Code");
    END;

    BEGIN
    END.
  }
}

