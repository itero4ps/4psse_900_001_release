OBJECT Table 5992 Service Invoice Header
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00.00.43897,NAVFI9.DK9.NO9,4PS9.00;
  }
  PROPERTIES
  {
    Permissions=TableData 5950=rimd;
    DataCaptionFields=No.,Name;
    OnInsert=BEGIN
               //**4PS Generated Code. Do Not Change.sn05
               DPA_OnInsert;
               //**4PS Generated Code.en05
             END;

    OnDelete=BEGIN
               TESTFIELD("No. Printed");
               LOCKTABLE;

               ServInvLine.RESET;
               ServInvLine.SETRANGE("Document No.","No.");
               ServInvLine.DELETEALL;

               ServCommentLine.RESET;
               ServCommentLine.SETRANGE("Table Name",ServCommentLine."Table Name"::"Service Invoice Header");
               ServCommentLine.SETRANGE("No.","No.");
               ServCommentLine.DELETEALL;
             END;

    CaptionML=ENU=Service Invoice Header;
    LookupPageID=Page5977;
    DrillDownPageID=Page5977;
  }
  FIELDS
  {
    { 2   ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Customer No.;
                                                   NotBlank=Yes }
    { 3   ;   ;No.                 ;Code20        ;CaptionML=ENU=No. }
    { 4   ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Bill-to Customer No.;
                                                   NotBlank=Yes }
    { 5   ;   ;Bill-to Name        ;Text50        ;CaptionML=ENU=Bill-to Name }
    { 6   ;   ;Bill-to Name 2      ;Text50        ;CaptionML=ENU=Bill-to Name 2 }
    { 7   ;   ;Bill-to Address     ;Text50        ;CaptionML=ENU=Bill-to Address }
    { 8   ;   ;Bill-to Address 2   ;Text50        ;CaptionML=ENU=Bill-to Address 2 }
    { 9   ;   ;Bill-to City        ;Text30        ;TableRelation="Post Code".City;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Bill-to City }
    { 10  ;   ;Bill-to Contact     ;Text50        ;CaptionML=ENU=Bill-to Contact }
    { 11  ;   ;Your Reference      ;Text35        ;CaptionML=ENU=Your Reference }
    { 12  ;   ;Ship-to Code        ;Code10        ;TableRelation="Ship-to Address".Code WHERE (Customer No.=FIELD(Customer No.));
                                                   CaptionML=ENU=Ship-to Code }
    { 13  ;   ;Ship-to Name        ;Text50        ;CaptionML=ENU=Ship-to Name }
    { 14  ;   ;Ship-to Name 2      ;Text50        ;CaptionML=ENU=Ship-to Name 2 }
    { 15  ;   ;Ship-to Address     ;Text50        ;CaptionML=ENU=Ship-to Address }
    { 16  ;   ;Ship-to Address 2   ;Text50        ;CaptionML=ENU=Ship-to Address 2 }
    { 17  ;   ;Ship-to City        ;Text30        ;TableRelation="Post Code".City;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Ship-to City }
    { 18  ;   ;Ship-to Contact     ;Text50        ;CaptionML=ENU=Ship-to Contact }
    { 19  ;   ;Order Date          ;Date          ;CaptionML=ENU=Order Date;
                                                   NotBlank=Yes }
    { 20  ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 22  ;   ;Posting Description ;Text50        ;CaptionML=ENU=Posting Description }
    { 23  ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   CaptionML=ENU=Payment Terms Code }
    { 24  ;   ;Due Date            ;Date          ;CaptionML=ENU=Due Date }
    { 25  ;   ;Payment Discount %  ;Decimal       ;CaptionML=ENU=Payment Discount %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 26  ;   ;Pmt. Discount Date  ;Date          ;CaptionML=ENU=Pmt. Discount Date }
    { 28  ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=ENU=Location Code }
    { 29  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Shortcut Dimension 1 Code;
                                                   CaptionClass='1,2,1' }
    { 30  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Shortcut Dimension 2 Code;
                                                   CaptionClass='1,2,2' }
    { 31  ;   ;Customer Posting Group;Code10      ;TableRelation="Customer Posting Group";
                                                   CaptionML=ENU=Customer Posting Group;
                                                   Editable=No }
    { 32  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=ENU=Currency Code;
                                                   Editable=No }
    { 33  ;   ;Currency Factor     ;Decimal       ;CaptionML=ENU=Currency Factor;
                                                   DecimalPlaces=0:15;
                                                   MinValue=0 }
    { 34  ;   ;Customer Price Group;Code10        ;TableRelation="Customer Price Group";
                                                   CaptionML=ENU=Customer Price Group }
    { 35  ;   ;Prices Including VAT;Boolean       ;CaptionML=ENU=Prices Including VAT }
    { 37  ;   ;Invoice Disc. Code  ;Code20        ;CaptionML=ENU=Invoice Disc. Code }
    { 40  ;   ;Customer Disc. Group;Code20        ;TableRelation="Customer Discount Group";
                                                   CaptionML=ENU=Customer Disc. Group }
    { 41  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=ENU=Language Code }
    { 43  ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=ENU=Salesperson Code }
    { 44  ;   ;Order No.           ;Code20        ;CaptionML=ENU=Order No. }
    { 46  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Service Comment Line" WHERE (Table Name=CONST(Service Invoice Header),
                                                                                                   No.=FIELD(No.),
                                                                                                   Type=CONST(General)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 47  ;   ;No. Printed         ;Integer       ;CaptionML=ENU=No. Printed;
                                                   Editable=No }
    { 52  ;   ;Applies-to Doc. Type;Option        ;CaptionML=ENU=Applies-to Doc. Type;
                                                   OptionCaptionML=ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 53  ;   ;Applies-to Doc. No. ;Code20        ;OnLookup=BEGIN
                                                              CustLedgEntry.SETCURRENTKEY("Document Type");
                                                              CustLedgEntry.SETRANGE("Document Type","Applies-to Doc. Type");
                                                              CustLedgEntry.SETRANGE("Document No.","Applies-to Doc. No.");
                                                              PAGE.RUN(0,CustLedgEntry);
                                                            END;

                                                   CaptionML=ENU=Applies-to Doc. No. }
    { 55  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account";
                                                   CaptionML=ENU=Bal. Account No. }
    { 61  ;   ;Amount Including VAT;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Service Invoice Line"."Amount Including VAT" WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=ENU=Amount Including VAT;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 62  ;   ;Shipping No.        ;Code20        ;CaptionML=ENU=Shipping No. }
    { 63  ;   ;Posting No.         ;Code20        ;CaptionML=ENU=Posting No. }
    { 64  ;   ;Last Shipping No.   ;Code20        ;TableRelation="Sales Shipment Header";
                                                   CaptionML=ENU=Last Shipping No.;
                                                   Editable=No }
    { 65  ;   ;Last Posting No.    ;Code20        ;TableRelation="Sales Invoice Header";
                                                   CaptionML=ENU=Last Posting No.;
                                                   Editable=No }
    { 70  ;   ;VAT Registration No.;Text20        ;CaptionML=ENU=VAT Registration No. }
    { 73  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=ENU=Reason Code }
    { 74  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=ENU=Gen. Bus. Posting Group }
    { 75  ;   ;EU 3-Party Trade    ;Boolean       ;CaptionML=ENU=EU 3-Party Trade }
    { 76  ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=ENU=Transaction Type }
    { 77  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=ENU=Transport Method }
    { 78  ;   ;VAT Country/Region Code;Code10     ;TableRelation=Country/Region;
                                                   CaptionML=ENU=VAT Country/Region Code }
    { 79  ;   ;Name                ;Text50        ;CaptionML=ENU=Name }
    { 80  ;   ;Name 2              ;Text50        ;CaptionML=ENU=Name 2 }
    { 81  ;   ;Address             ;Text50        ;CaptionML=ENU=Address }
    { 82  ;   ;Address 2           ;Text50        ;CaptionML=ENU=Address 2 }
    { 83  ;   ;City                ;Text30        ;TableRelation="Post Code".City;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=City }
    { 84  ;   ;Contact Name        ;Text50        ;CaptionML=ENU=Contact Name }
    { 85  ;   ;Bill-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Bill-to Post Code }
    { 86  ;   ;Bill-to County      ;Text30        ;CaptionML=ENU=Bill-to County }
    { 87  ;   ;Bill-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Bill-to Country/Region Code }
    { 88  ;   ;Post Code           ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Post Code }
    { 89  ;   ;County              ;Text30        ;CaptionML=ENU=County }
    { 90  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Country/Region Code }
    { 91  ;   ;Ship-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Ship-to Post Code }
    { 92  ;   ;Ship-to County      ;Text30        ;CaptionML=ENU=Ship-to County }
    { 93  ;   ;Ship-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Ship-to Country/Region Code }
    { 94  ;   ;Bal. Account Type   ;Option        ;CaptionML=ENU=Bal. Account Type;
                                                   OptionCaptionML=ENU=G/L Account,Bank Account;
                                                   OptionString=G/L Account,Bank Account }
    { 97  ;   ;Exit Point          ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=ENU=Exit Point }
    { 98  ;   ;Correction          ;Boolean       ;CaptionML=ENU=Correction }
    { 99  ;   ;Document Date       ;Date          ;CaptionML=ENU=Document Date }
    { 101 ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=ENU=Area }
    { 102 ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=ENU=Transaction Specification }
    { 104 ;   ;Payment Method Code ;Code10        ;TableRelation="Payment Method";
                                                   CaptionML=ENU=Payment Method Code }
    { 107 ;   ;Pre-Assigned No. Series;Code10     ;TableRelation="No. Series";
                                                   CaptionML=ENU=Pre-Assigned No. Series;
                                                   Editable=No }
    { 108 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series }
    { 109 ;   ;Shipping No. Series ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Shipping No. Series }
    { 110 ;   ;Order No. Series    ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Order No. Series }
    { 111 ;   ;Pre-Assigned No.    ;Code20        ;CaptionML=ENU=Pre-Assigned No. }
    { 112 ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=ENU=User ID }
    { 113 ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=ENU=Source Code }
    { 114 ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=ENU=Tax Area Code }
    { 115 ;   ;Tax Liable          ;Boolean       ;CaptionML=ENU=Tax Liable }
    { 116 ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=ENU=VAT Bus. Posting Group }
    { 119 ;   ;VAT Base Discount % ;Decimal       ;CaptionML=ENU=VAT Base Discount %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=No }
    { 710 ;   ;Document Exchange Identifier;Text50;CaptionML=ENU=Document Exchange Identifier }
    { 711 ;   ;Document Exchange Status;Option    ;CaptionML=ENU=Document Exchange Status;
                                                   OptionCaptionML=ENU=Not Sent,Sent to Document Exchange Service,Delivered to Recipient,Delivery Failed,Pending Connection to Recipient;
                                                   OptionString=Not Sent,Sent to Document Exchange Service,Delivered to Recipient,Delivery Failed,Pending Connection to Recipient }
    { 712 ;   ;Doc. Exch. Original Identifier;Text50;
                                                   CaptionML=ENU=Doc. Exch. Original Identifier }
    { 5052;   ;Contact No.         ;Code20        ;TableRelation=Contact;
                                                   CaptionML=ENU=Contact No. }
    { 5053;   ;Bill-to Contact No. ;Code20        ;TableRelation=Contact;
                                                   CaptionML=ENU=Bill-to Contact No. }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   CaptionML=ENU=Responsibility Center }
    { 5902;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 5904;   ;Service Order Type  ;Code10        ;TableRelation="Service Order Type";
                                                   CaptionML=ENU=Service Order Type }
    { 5905;   ;Link Service to Service Item;Boolean;
                                                   CaptionML=ENU=Link Service to Service Item }
    { 5907;   ;Priority            ;Option        ;CaptionML=ENU=Priority;
                                                   OptionCaptionML=ENU=Low,Medium,High;
                                                   OptionString=Low,Medium,High;
                                                   Editable=No }
    { 5911;   ;Allocated Hours     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Service Order Allocation"."Allocated Hours" WHERE (Document Type=CONST(Order),
                                                                                                                       Document No.=FIELD(No.),
                                                                                                                       Resource No.=FIELD(Resource Filter),
                                                                                                                       Status=FILTER(Active|Finished),
                                                                                                                       Resource Group No.=FIELD(Resource Group Filter)));
                                                   CaptionML=ENU=Allocated Hours;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5915;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Phone No. }
    { 5916;   ;E-Mail              ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=ENU=E-Mail }
    { 5917;   ;Phone No. 2         ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Phone No. 2 }
    { 5918;   ;Fax No.             ;Text30        ;CaptionML=ENU=Fax No. }
    { 5921;   ;No. of Unallocated Items;Integer   ;FieldClass=FlowField;
                                                   CalcFormula=Count("Service Item Line" WHERE (Document Type=CONST(Order),
                                                                                                Document No.=FIELD(No.),
                                                                                                No. of Active/Finished Allocs=CONST(0)));
                                                   CaptionML=ENU=No. of Unallocated Items;
                                                   Editable=No }
    { 5923;   ;Order Time          ;Time          ;CaptionML=ENU=Order Time;
                                                   NotBlank=Yes }
    { 5924;   ;Default Response Time (Hours);Decimal;
                                                   CaptionML=ENU=Default Response Time (Hours);
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 5925;   ;Actual Response Time (Hours);Decimal;
                                                   CaptionML=ENU=Actual Response Time (Hours);
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   Editable=No }
    { 5926;   ;Service Time (Hours);Decimal       ;CaptionML=ENU=Service Time (Hours);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5927;   ;Response Date       ;Date          ;CaptionML=ENU=Response Date;
                                                   Editable=No }
    { 5928;   ;Response Time       ;Time          ;CaptionML=ENU=Response Time;
                                                   Editable=No }
    { 5929;   ;Starting Date       ;Date          ;CaptionML=ENU=Starting Date }
    { 5930;   ;Starting Time       ;Time          ;CaptionML=ENU=Starting Time }
    { 5931;   ;Finishing Date      ;Date          ;CaptionML=ENU=Finishing Date }
    { 5932;   ;Finishing Time      ;Time          ;CaptionML=ENU=Finishing Time }
    { 5933;   ;Contract Serv. Hours Exist;Boolean ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Service Hour" WHERE (Service Contract No.=FIELD(Contract No.)));
                                                   CaptionML=ENU=Contract Serv. Hours Exist;
                                                   Editable=No }
    { 5934;   ;Reallocation Needed ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Service Order Allocation" WHERE (Status=CONST(Reallocation Needed),
                                                                                                       Resource No.=FIELD(Resource Filter),
                                                                                                       Document Type=CONST(Order),
                                                                                                       Document No.=FIELD(No.),
                                                                                                       Resource Group No.=FIELD(Resource Group Filter)));
                                                   CaptionML=ENU=Reallocation Needed;
                                                   Editable=No }
    { 5936;   ;Notify Customer     ;Option        ;CaptionML=ENU=Notify Customer;
                                                   OptionCaptionML=ENU=No,By Phone 1,By Phone 2,By Fax,By E-Mail;
                                                   OptionString=No,By Phone 1,By Phone 2,By Fax,By E-Mail }
    { 5937;   ;Max. Labor Unit Price;Decimal      ;CaptionML=ENU=Max. Labor Unit Price;
                                                   BlankZero=Yes;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="Currency Code" }
    { 5938;   ;Warning Status      ;Option        ;CaptionML=ENU=Warning Status;
                                                   OptionCaptionML=ENU=" ,First Warning,Second Warning,Third Warning";
                                                   OptionString=[ ,First Warning,Second Warning,Third Warning] }
    { 5939;   ;No. of Allocations  ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Service Order Allocation" WHERE (Document Type=CONST(Order),
                                                                                                       Document No.=FIELD(No.),
                                                                                                       Resource No.=FIELD(Resource Filter),
                                                                                                       Resource Group No.=FIELD(Resource Group Filter),
                                                                                                       Status=FILTER(Active|Finished)));
                                                   CaptionML=ENU=No. of Allocations;
                                                   Editable=No }
    { 5940;   ;Contract No.        ;Code20        ;TableRelation="Service Contract Header"."Contract No." WHERE (Contract Type=CONST(Contract),
                                                                                                                 Customer No.=FIELD(Customer No.),
                                                                                                                 Ship-to Code=FIELD(Ship-to Code),
                                                                                                                 Bill-to Customer No.=FIELD(Bill-to Customer No.));
                                                   CaptionML=ENU=Contract No. }
    { 5951;   ;Type Filter         ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Type Filter;
                                                   OptionCaptionML=ENU=" ,Resource,Item,Service Cost,Service Contract";
                                                   OptionString=[ ,Resource,Item,Service Cost,Service Contract] }
    { 5952;   ;Customer Filter     ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Customer.No.;
                                                   CaptionML=ENU=Customer Filter }
    { 5953;   ;Resource Filter     ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Resource;
                                                   CaptionML=ENU=Resource Filter }
    { 5954;   ;Contract Filter     ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation="Service Contract Header"."Contract No." WHERE (Contract Type=CONST(Contract));
                                                   CaptionML=ENU=Contract Filter }
    { 5955;   ;Ship-to Fax No.     ;Text30        ;CaptionML=ENU=Ship-to Fax No. }
    { 5956;   ;Ship-to E-Mail      ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=ENU=Ship-to E-Mail }
    { 5957;   ;Resource Group Filter;Code20       ;FieldClass=FlowFilter;
                                                   TableRelation="Resource Group";
                                                   CaptionML=ENU=Resource Group Filter }
    { 5958;   ;Ship-to Phone       ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Ship-to Phone }
    { 5959;   ;Ship-to Phone 2     ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Ship-to Phone 2 }
    { 5966;   ;Service Zone Filter ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Service Zone".Code;
                                                   CaptionML=ENU=Service Zone Filter }
    { 5968;   ;Service Zone Code   ;Code10        ;TableRelation="Service Zone".Code;
                                                   CaptionML=ENU=Service Zone Code;
                                                   Editable=No }
    { 5981;   ;Expected Finishing Date;Date       ;CaptionML=ENU=Expected Finishing Date }
    { 7001;   ;Allow Line Disc.    ;Boolean       ;CaptionML=ENU=Allow Line Disc. }
    { 11126180;;Reference No.      ;Code20        ;CaptionML=ENU=Reference No.;
                                                   Description=NAVFI;
                                                   Editable=Yes }
    { 11128500;;GLN                ;Code13        ;CaptionML=ENU=GLN;
                                                   Description=NAVNO }
    { 11128501;;Account Code NO    ;Text30        ;CaptionML=ENU=Account Code NO;
                                                   Description=NAVNO }
    { 11128504;;E-Invoice Created  ;Boolean       ;CaptionML=ENU=E-Invoice Created;
                                                   Description=NAVNO;
                                                   Editable=No }
    { 11128505;;E-Invoice          ;Boolean       ;CaptionML=ENU=E-Invoice;
                                                   Description=NAVNO }
    { 11128506;;External Document No.;Code35      ;CaptionML=ENU=External Document No.;
                                                   Description=NAVNO }
    { 11128507;;Delivery Date      ;Date          ;CaptionML=ENU=Delivery Date;
                                                   Description=NAVNO }
    { 11128570;;EAN No.            ;Code13        ;CaptionML=ENU=EAN No.;
                                                   Description=NAVDK }
    { 11128571;;Account Code DK    ;Text30        ;CaptionML=ENU=Account Code DK;
                                                   Description=NAVDK }
    { 11128572;;Electronic Invoice Created;Boolean;CaptionML=ENU=Electronic Invoice Created;
                                                   Description=NAVDK;
                                                   Editable=No }
    { 11128574;;OIOUBL Profile Code;Code10        ;TableRelation="OIOUBL Profile";
                                                   CaptionML=ENU=OIOUBL Profile Code }
    { 11128578;;Contact Role       ;Option        ;CaptionML=ENU=Contact Role;
                                                   OptionCaptionML=ENU=" ,,,Purchase Responsible,,,Accountant,,,Budget Responsible,,,Requisitioner";
                                                   OptionString=[ ,,,Purchase Responsible,,,Accountant,,,Budget Responsible,,,Requisitioner];
                                                   Description=NAVDK }
    { 11128590;;Payment Channel    ;Option        ;CaptionML=ENU=Payment Channel;
                                                   OptionCaptionML=ENU=" ,Payment Slip,Account Transfer,National Clearing,Direct Debit";
                                                   OptionString=[ ,Payment Slip,Account Transfer,National Clearing,Direct Debit];
                                                   Description=NAVDK }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Order No.                                }
    {    ;Customer No.,Order Date                  }
    {    ;Contract No.,Posting Date                }
    {    ;Response Date,Response Time,Priority     }
    {    ;Priority,Response Date,Response Time     }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Customer No.,Bill-to Customer No.,Contract No.,Posting Date }
  }
  CODE
  {
    VAR
      CustLedgEntry@1001 : Record 21;
      ServCommentLine@1004 : Record 5906;
      ServInvHeader@1003 : Record 5992;
      ServInvLine@1005 : Record 5993;
      DimMgt@1006 : Codeunit 408;
      UserSetupMgt@1000 : Codeunit 5700;
      CheckLatestQst@1007 : TextConst '@@@=%1 is Document Exchange Status;ENU=Do you want to check the latest status of the electronic document?';
      DPA_Management@1100000999 : Codeunit 11012783;

    PROCEDURE Navigate@1();
    VAR
      NavigateForm@1000 : Page 344;
    BEGIN
      NavigateForm.SetDoc("Posting Date","No.");
      NavigateForm.RUN;
    END;

    PROCEDURE SendRecords@6();
    VAR
      DocumentSendingProfile@1001 : Record 60;
      TempDocumentSendingProfile@1000 : TEMPORARY Record 60;
      ReportDistributionManagement@1002 : Codeunit 452;
    BEGIN
      DocumentSendingProfile.GetDefaultForCustomer("Bill-to Customer No.",DocumentSendingProfile);
      COMMIT;

      TempDocumentSendingProfile.INIT;
      TempDocumentSendingProfile.Code := DocumentSendingProfile.Code;
      TempDocumentSendingProfile.VALIDATE("One Related Party Selected",IsSingleCustomerSelected);
      TempDocumentSendingProfile.SetDocumentUsage(Rec);
      TempDocumentSendingProfile.INSERT;

      IF PAGE.RUNMODAL(PAGE::"Select Sending Options",TempDocumentSendingProfile) = ACTION::LookupOK THEN
        ReportDistributionManagement.SendDocumentReport(TempDocumentSendingProfile,Rec);
    END;

    PROCEDURE PrintRecords@2(ShowRequestForm@1000 : Boolean);
    VAR
      ReportSelection@1001 : Record 77;
    BEGIN
      WITH ServInvHeader DO BEGIN
        COPY(Rec);
        FINDFIRST;
        ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"SM.Invoice");
        ReportSelection.SETFILTER("Report ID",'<>0');
        ReportSelection.FIND('-');
        REPEAT
          REPORT.RUNMODAL(ReportSelection."Report ID",ShowRequestForm,FALSE,ServInvHeader);
        UNTIL ReportSelection.NEXT = 0;
      END;
    END;

    PROCEDURE LookupAdjmtValueEntries@3();
    VAR
      ValueEntry@1000 : Record 5802;
    BEGIN
      ValueEntry.SETCURRENTKEY("Document No.");
      ValueEntry.SETRANGE("Document No.","No.");
      ValueEntry.SETRANGE("Document Type",ValueEntry."Document Type"::"Service Invoice");
      ValueEntry.SETRANGE(Adjustment,TRUE);
      PAGE.RUNMODAL(0,ValueEntry);
    END;

    PROCEDURE ShowDimensions@4();
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"No."));
    END;

    PROCEDURE SetSecurityFilterOnRespCenter@5();
    BEGIN
      IF UserSetupMgt.GetServiceFilter <> '' THEN BEGIN
        FILTERGROUP(2);
        SETRANGE("Responsibility Center",UserSetupMgt.GetServiceFilter);
        FILTERGROUP(0);
      END;
    END;

    PROCEDURE DocExchStatusDrillDown@8();
    VAR
      DocExchLinks@1001 : Codeunit 1411;
      DocExchServiceMgt@1000 : Codeunit 1410;
    BEGIN
      CASE "Document Exchange Status" OF
        "Document Exchange Status"::"Not Sent":
          EXIT;
        "Document Exchange Status"::"Sent to Document Exchange Service",
        "Document Exchange Status"::"Pending Connection to Recipient":
          IF CONFIRM(CheckLatestQst,TRUE) THEN
            DocExchLinks.CheckAndUpdateDocExchServiceInvoiceStatus(Rec);
        "Document Exchange Status"::"Delivered to Recipient":
          BEGIN
            HYPERLINK(DocExchServiceMgt.GetExternalDocURL("Document Exchange Identifier"));
            EXIT;
          END;
      END;

      ShowActivityLog;
    END;

    PROCEDURE ShowActivityLog@116();
    VAR
      ActivityLog@1000 : Record 710;
    BEGIN
      ActivityLog.ShowEntries(RECORDID);
    END;

    PROCEDURE GetDocExchStatusStyle@13() : Text;
    BEGIN
      CASE "Document Exchange Status" OF
        "Document Exchange Status"::"Not Sent":
          EXIT('Standard');
        "Document Exchange Status"::"Sent to Document Exchange Service":
          EXIT('Ambiguous');
        "Document Exchange Status"::"Delivered to Recipient":
          EXIT('Favorable');
        ELSE
          EXIT('Unfavorable');
      END;
    END;

    LOCAL PROCEDURE IsSingleCustomerSelected@7() : Boolean;
    VAR
      SelectedCount@1001 : Integer;
      CustomerCount@1000 : Integer;
      BillToCustomerNoFilter@1002 : Text;
    BEGIN
      SelectedCount := COUNT;

      IF SelectedCount < 1 THEN
        EXIT(FALSE);

      IF SelectedCount = 1 THEN
        EXIT(TRUE);

      BillToCustomerNoFilter := GETFILTER("Bill-to Customer No.");
      SETRANGE("Bill-to Customer No.","Bill-to Customer No.");
      CustomerCount := COUNT;
      SETFILTER("Bill-to Customer No.",BillToCustomerNoFilter);

      EXIT(SelectedCount = CustomerCount);
    END;

    PROCEDURE DPA_SetDefaultDpmtFromNoSeries@1100000995(xRecRef@1100525002 : RecordRef);
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      xRecRef.SETTABLE(xRec);
      DPA_Management.SetDepartmentCodeNoSeries(
        TABLENAME,
        "Shortcut Dimension 1 Code",
        "No. Series",
        xRec."No. Series" );
    END;

    LOCAL PROCEDURE DPA_OnInsert@1100000991();
    VAR
      Dimension1Code@1100528400 : Code[20];
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      Dimension1Code :=
        DPA_Management.GetNoSeriesDepartmentCode(
          "No. Series",
          xRec."No. Series",
          DATABASE::"Service Invoice Header");
      IF Dimension1Code <> '' THEN
        "Shortcut Dimension 1 Code" := Dimension1Code;

      IF "Shortcut Dimension 1 Code" <> '' THEN
        VALIDATE("Shortcut Dimension 1 Code");
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(5992) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 5992');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Service Invoice Header", "Shortcut Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Shortcut Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Shortcut Dimension 1 Code");
    END;

    PROCEDURE AccountCodeLineSpecified@1101100000(CountryCode@1100285500 : Code[10]) : Boolean;
    VAR
      ServInvLine@1101100000 : Record 5993;
    BEGIN
      ServInvLine.RESET;
      ServInvLine.SETRANGE("Document No.", "No.");
      ServInvLine.SETFILTER(Type, '>%1', ServInvLine.Type::" ");
      CASE CountryCode OF
        'DK': ServInvLine.SETFILTER("Account Code DK", '<>%1&<>%2', '', "Account Code DK");
        'NO': ServInvLine.SETFILTER("Account Code NO", '<>%1&<>%2', '', "Account Code NO");
      END;
      EXIT(NOT ServInvLine.ISEMPTY);
    END;

    PROCEDURE TaxLineSpecified@1101100001() : Boolean;
    VAR
      ServInvLine@1101100001 : Record 5993;
    BEGIN
      ServInvLine.RESET;
      ServInvLine.SETRANGE("Document No.", "No.");
      ServInvLine.SETFILTER(Type, '>%1', ServInvLine.Type::" ");
      ServInvLine.FIND('-');
      ServInvLine.SETFILTER("VAT %", '<>%1', ServInvLine."VAT %");
      EXIT(NOT ServInvLine.ISEMPTY);
    END;

    BEGIN
    {
      Version List=NAVW19.00.00.43897,NAVFI9.00.00.43897;
      Version List=NAVW19.00.00.43897,NAVDK9.00.00.43897;
      Version List=NAVW19.00.00.43897,NAVNO9.00.00.43897;
    }
    END.
  }
}

