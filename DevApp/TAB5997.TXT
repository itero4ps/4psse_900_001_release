OBJECT Table 5997 Standard Service Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW19.00.00.45480,4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               DPA_OnInsert; //**4PS.n
               LOCKTABLE;
               StdServCode.GET("Standard Service Code");
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    CaptionML=ENU=Standard Service Line;
  }
  FIELDS
  {
    { 1   ;   ;Standard Service Code;Code10       ;TableRelation="Standard Service Code";
                                                   CaptionML=ENU=Standard Service Code;
                                                   Editable=No }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No.;
                                                   Editable=No }
    { 3   ;   ;Type                ;Option        ;OnValidate=VAR
                                                                OldType@1000 : Integer;
                                                              BEGIN
                                                                OldType := Type;
                                                                INIT;
                                                                Type := OldType;
                                                              END;

                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,Item,Resource,Cost,G/L Account";
                                                   OptionString=[ ,Item,Resource,Cost,G/L Account] }
    { 4   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(" ")) "Standard Text"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Resource)) Resource
                                                                 ELSE IF (Type=CONST(Cost)) "Service Cost"
                                                                 ELSE IF (Type=CONST(G/L Account)) "G/L Account";
                                                   OnValidate=VAR
                                                                StdTxt@1000 : Record 7;
                                                                GLAcc@1001 : Record 15;
                                                                Item@1002 : Record 27;
                                                                Res@1003 : Record 156;
                                                                ServCost@1004 : Record 5905;
                                                              BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  Quantity := 0;
                                                                  "Amount Excl. VAT" := 0;
                                                                  "Unit of Measure Code" := '';
                                                                  Description := '';
                                                                  IF "No." = '' THEN
                                                                    EXIT;
                                                                  StdServCode.GET("Standard Service Code");
                                                                  CASE Type OF
                                                                    Type::" ":
                                                                      BEGIN
                                                                        StdTxt.GET("No.");
                                                                        Description := StdTxt.Description;
                                                                      END;
                                                                    Type::Item:
                                                                      BEGIN
                                                                        Item.GET("No.");
                                                                        Item.TESTFIELD(Blocked,FALSE);
                                                                        Item.TESTFIELD("Inventory Posting Group");
                                                                        Item.TESTFIELD("Gen. Prod. Posting Group");
                                                                        Description := Item.Description;
                                                                        "Unit of Measure Code" := Item."Sales Unit of Measure";
                                                                        "Variant Code" := '';
                                                                      END;
                                                                    Type::Resource:
                                                                      BEGIN
                                                                        Res.GET("No.");
                                                                        Res.TESTFIELD(Blocked,FALSE);
                                                                        Res.TESTFIELD("Gen. Prod. Posting Group");
                                                                        Description := Res.Name;
                                                                        "Unit of Measure Code" := Res."Base Unit of Measure";
                                                                      END;
                                                                    Type::Cost:
                                                                      BEGIN
                                                                        ServCost.GET("No.");
                                                                        GLAcc.GET(ServCost."Account No.");
                                                                        GLAcc.TESTFIELD("Gen. Prod. Posting Group");
                                                                        Description := ServCost.Description;
                                                                        Quantity := ServCost."Default Quantity";
                                                                        "Unit of Measure Code" := ServCost."Unit of Measure Code";
                                                                      END;
                                                                    Type::"G/L Account":
                                                                      BEGIN
                                                                        GLAcc.GET("No.");
                                                                        GLAcc.CheckGLAcc;
                                                                        GLAcc.TESTFIELD("Direct Posting",TRUE);
                                                                        Description := GLAcc.Name;
                                                                      END;
                                                                  END;
                                                                END;

                                                                CreateDim(DimMgt.TypeToTableID5(Type),"No.");
                                                              END;

                                                   CaptionML=ENU=No. }
    { 5   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 6   ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD(Type);
                                                                TESTFIELD("No.");
                                                                IF Quantity < 0 THEN
                                                                  FIELDERROR(Quantity,Text002);
                                                              END;

                                                   CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 7   ;   ;Amount Excl. VAT    ;Decimal       ;OnValidate=BEGIN
                                                                IF Type <> Type::"G/L Account" THEN
                                                                  FIELDERROR(Type,STRSUBSTNO(Text001,Type));
                                                              END;

                                                   CaptionML=ENU=Amount Excl. VAT;
                                                   BlankZero=Yes;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrency }
    { 8   ;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE "Unit of Measure";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Type);
                                                              END;

                                                   CaptionML=ENU=Unit of Measure Code }
    { 9   ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=ENU=Shortcut Dimension 1 Code;
                                                   CaptionClass='1,2,1' }
    { 10  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=ENU=Shortcut Dimension 2 Code;
                                                   CaptionClass='1,2,2' }
    { 11  ;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   OnValidate=VAR
                                                                Item@1000 : Record 27;
                                                                ItemVariant@1001 : Record 5401;
                                                              BEGIN
                                                                IF "Variant Code" = '' THEN BEGIN
                                                                  IF Type = Type::Item THEN BEGIN
                                                                    Item.GET("No.");
                                                                    Description := Item.Description;
                                                                  END;
                                                                  EXIT;
                                                                END;

                                                                TESTFIELD(Type,Type::Item);
                                                                ItemVariant.GET("No.","Variant Code");
                                                                Description := ItemVariant.Description;
                                                              END;

                                                   CaptionML=ENU=Variant Code }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Standard Service Code,Line No.          ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      StdServCode@1001 : Record 5996;
      DimMgt@1002 : Codeunit 408;
      Text000@1003 : TextConst 'ENU=You cannot rename a %1.';
      Text001@1004 : TextConst 'ENU=must not be %1';
      Text002@1005 : TextConst 'ENU=must be positive';
      DPA_Management@1100000999 : Codeunit 11012783;

    PROCEDURE EmptyLine@5() : Boolean;
    BEGIN
      EXIT(("No." = '') AND (Quantity = 0))
    END;

    PROCEDURE InsertLine@1() : Boolean;
    BEGIN
      EXIT((Type = Type::" ") OR NOT EmptyLine);
    END;

    LOCAL PROCEDURE GetCurrency@2() : Code[10];
    BEGIN
      IF StdServCode.GET("Standard Service Code") THEN
        EXIT(StdServCode."Currency Code");
      EXIT('');
    END;

    PROCEDURE ShowDimensions@25();
    BEGIN
      DimMgt.SetTableID(DATABASE::"Standard Service Line"); //**4PS.n
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet2(
          "Dimension Set ID",STRSUBSTNO('%1 %2 %3',TABLECAPTION,"No.","Line No."),
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
      MODIFY;
    END;

    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    PROCEDURE LookupShortcutDimCode@28(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    PROCEDURE ShowShortcutDimCode@27(VAR ShortcutDimCode@1000 : ARRAY [8] OF Code[20]);
    BEGIN
      DimMgt.GetShortcutDimensions("Dimension Set ID",ShortcutDimCode);
    END;

    LOCAL PROCEDURE CreateDim@26(Type1@1000 : Integer;No1@1001 : Code[20]);
    VAR
      SourceCodeSetup@1006 : Record 242;
      TableID@1007 : ARRAY [10] OF Integer;
      No@1008 : ARRAY [10] OF Code[20];
    BEGIN
      SourceCodeSetup.GET;

      TableID[1] := Type1;
      No[1] := No1;
      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';

      "Dimension Set ID" :=
        DimMgt.GetDefaultDimID(
          TableID,No,SourceCodeSetup."Service Management",
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code",0,0);
    END;

    LOCAL PROCEDURE DPA_OnInsert@1100000991();
    BEGIN
      //**4PS
      IF NOT DPA_IsActive THEN
        EXIT;

      IF "Shortcut Dimension 1 Code" <> '' THEN
        VALIDATE("Shortcut Dimension 1 Code");
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DepartmentAuthorizObject.READPERMISSION THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(5997) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 5997');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Standard Service Line", "Shortcut Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Shortcut Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Shortcut Dimension 1 Code");
    END;

    BEGIN
    END.
  }
}

