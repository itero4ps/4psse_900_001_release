OBJECT Table 6085579 Template
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW13.70.00.4.04,4PS9.00;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Source Sub Type;
    OnInsert=VAR
               PurchSetup@1100528200 : Record 312;
             BEGIN
               IF "No." = '' THEN BEGIN
                 DCSetup.GET;
                 DCSetup.TESTFIELD("Template Nos.");
                 NoSeriesMgt.InitSeries(DCSetup."Template Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               //**4PS.sn
               PurchSetup.GET;
               IF PurchSetup."Approve Purchase Invoices" THEN BEGIN
                 "Invoice Lines Input" := PurchSetup."Default Invoice Lines Input";
               END ELSE
                 "Invoice Lines Input" := TRUE;
               //**4PS.en
             END;

    OnDelete=VAR
               Field@1000000000 : Record 6085580;
               Document@1000000001 : Record 6085590;
               DataTransl@1000000003 : Record 6085584;
               SearchText@161024012 : Record 6085588;
             BEGIN
               IF "Source Sub Type" <> "Source Sub Type"::" " THEN
                 IF NOT CONFIRM(Text005) THEN
                   ERROR('');

               Document.SETRANGE("Template No.","No.");
               Document.SETFILTER(Status,'>%1',Document.Status::Open);
               IF NOT Document.ISEMPTY THEN
                 ERROR(Text001);

               Document.SETRANGE(Status,Document.Status::Open);
               IF Document.COUNT > 0 THEN BEGIN
                 IF NOT CONFIRM(Text002,FALSE,Document.COUNT) THEN
                   ERROR('');
                 Document.MODIFYALL("Template No.",'',TRUE);
               END;

               DataTransl.SETRANGE("Template No.","No.");
               DataTransl.DELETEALL(TRUE);

               Field.SETRANGE("Template No.","No.");
               Field.DELETEALL(TRUE);

               SearchText.SETRANGE("Template No.","No.");
               SearchText.DELETEALL(TRUE);
             END;

    CaptionML=ENU=Template;
    LookupPageID=Page6085591;
    DrillDownPageID=Page6085591;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=ENU=No.;
                                                   NotBlank=Yes }
    { 2   ;   ;Category Code       ;Code10        ;TableRelation="DC Document Category";
                                                   CaptionML=ENU=Category Code }
    { 3   ;   ;Source Type         ;Option        ;CaptionML=ENU=Source Type;
                                                   OptionCaptionML=ENU=System,Vendor,Contact,Customer,Job,Item,Fixed Asset,Employee;
                                                   OptionString=System,Vendor,Contact,Customer,Job,Item,Fixed Asset,Employee }
    { 4   ;   ;Source No.          ;Code20        ;CaptionML=ENU=Source No. }
    { 5   ;   ;Source Record ID Tree ID;Integer   ;TableRelation="Record ID Tree";
                                                   CaptionML=ENU=Source Record ID }
    { 6   ;   ;Default             ;Boolean       ;CaptionML=ENU=Default }
    { 7   ;   ;Source Sub Type     ;Option        ;CaptionML=ENU=Source Sub Type;
                                                   OptionCaptionML=ENU=" ,Identification,Master";
                                                   OptionString=[ ,Identification,Master] }
    { 8   ;   ;Codeunit ID: After Capture;Integer ;TableRelation=Object.ID WHERE (Type=CONST(Codeunit));
                                                   CaptionML=ENU=Codeunit ID: After Capture;
                                                   BlankZero=Yes }
    { 9   ;   ;Recognize Lines     ;Option        ;CaptionML=ENU=Recognize Lines;
                                                   OptionCaptionML=ENU=No,Yes;
                                                   OptionString=No,Yes }
    { 10  ;   ;Description         ;Text30        ;CaptionML=ENU=Description }
    { 11  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 12  ;   ;Codeunit ID: Line Validation;Integer;
                                                   TableRelation=Object.ID WHERE (Type=CONST(Codeunit));
                                                   CaptionML=ENU=Codeunit ID: Line Validation;
                                                   BlankZero=Yes }
    { 13  ;   ;Codeunit ID: Doc. Validation;Integer;
                                                   TableRelation=Object.ID WHERE (Type=CONST(Codeunit));
                                                   CaptionML=ENU=Codeunit ID: Doc. Validation;
                                                   BlankZero=Yes }
    { 14  ;   ;Codeunit ID: Register;Integer      ;TableRelation=Object.ID WHERE (Type=CONST(Codeunit));
                                                   CaptionML=ENU=Codeunit ID: Register;
                                                   BlankZero=Yes }
    { 15  ;   ;Codeunit Name: After Capture;Text30;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Codeunit),
                                                                                         ID=FIELD(Codeunit ID: After Capture)));
                                                   CaptionML=ENU=Codeunit Name: After Capture;
                                                   Editable=No }
    { 16  ;   ;Codeunit Name: Line Validat.;Text30;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Codeunit),
                                                                                         ID=FIELD(Codeunit ID: Line Validation)));
                                                   CaptionML=ENU=Codeunit Name: Line Validation;
                                                   Editable=No }
    { 17  ;   ;Codeunit Name: Doc. Validat.;Text30;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Codeunit),
                                                                                         ID=FIELD(Codeunit ID: Doc. Validation)));
                                                   CaptionML=ENU=Codeunit Name: Doc. Validation;
                                                   Editable=No }
    { 18  ;   ;Codeunit Name: Register;Text30     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Codeunit),
                                                                                         ID=FIELD(Codeunit ID: Register)));
                                                   CaptionML=ENU=Codeunit Name: Register;
                                                   Editable=No }
    { 19  ;   ;Search Text         ;Code200       ;OnValidate=BEGIN
                                                                TESTFIELD("Source Sub Type","Source Sub Type"::" ");
                                                              END;

                                                   CaptionML=ENU=Search Text }
    { 20  ;   ;Codeunit ID: Transl. (Doc);Integer ;TableRelation=Object.ID WHERE (Type=CONST(Codeunit));
                                                   CaptionML=ENU=Codeunit ID: Transl. (Doc);
                                                   BlankZero=Yes }
    { 21  ;   ;Codeunit Name: Transl. (Doc);Text30;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Codeunit),
                                                                                         ID=FIELD("Codeunit ID: Transl. (Doc)")));
                                                   CaptionML=ENU=Codeunit Name: Transl. (Doc);
                                                   Editable=No }
    { 22  ;   ;Codeunit ID: Show Match;Integer    ;TableRelation=Object.ID WHERE (Type=CONST(Codeunit));
                                                   CaptionML=ENU=Codeunit ID: Show Match;
                                                   BlankZero=Yes }
    { 23  ;   ;Codeunit Name: Show Match;Text30   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Codeunit),
                                                                                         ID=FIELD(Codeunit ID: Show Match)));
                                                   CaptionML=ENU=Codeunit Name: Show Match;
                                                   Editable=No }
    { 24  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   OnValidate=VAR
                                                                Field@1000000000 : Record 6085580;
                                                              BEGIN
                                                                IF "Language Code" = xRec."Language Code" THEN
                                                                  EXIT;

                                                                IF NOT CONFIRM(Text004,TRUE,FIELDCAPTION("Language Code")) THEN
                                                                  EXIT;

                                                                Field.SETRANGE("Template No.","No.");
                                                                Field.MODIFYALL("Language Code","Language Code");
                                                              END;

                                                   CaptionML=ENU=Language Code }
    { 25  ;   ;Codeunit ID: Transl. (Temp);Integer;TableRelation=Object.ID WHERE (Type=CONST(Codeunit));
                                                   CaptionML=ENU=Codeunit ID: Transl. (Templ.);
                                                   BlankZero=Yes }
    { 26  ;   ;Codeunit Name: Transl. (Temp);Text30;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Codeunit),
                                                                                         ID=FIELD("Codeunit ID: Transl. (Temp)")));
                                                   CaptionML=ENU=Codeunit Name: Transl. (Templ.);
                                                   Editable=No }
    { 27  ;   ;Codeunit ID: Register (Y/N);Integer;TableRelation=Object.ID WHERE (Type=CONST(Codeunit));
                                                   CaptionML=ENU=Codeunit ID: Register (Y/N);
                                                   BlankZero=Yes }
    { 28  ;   ;Codeunit Name: Register (Y/N);Text30;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Codeunit),
                                                                                         ID=FIELD("Codeunit ID: Register (Y/N)")));
                                                   CaptionML=ENU=Codeunit Name: Register (Y/N);
                                                   Editable=No }
    { 29  ;   ;Hide Registration Messages;Boolean ;CaptionML=ENU=Hide Registration Messages }
    { 30  ;   ;Show Document After Register;Option;CaptionML=ENU=Show Document After Register;
                                                   OptionCaptionML=ENU=Ask,Always,Never;
                                                   OptionString=Ask,Always,Never }
    { 31  ;   ;Codeunit ID: After Step 1;Integer  ;TableRelation=Object.ID WHERE (Type=CONST(Codeunit));
                                                   CaptionML=ENU=Codeunit ID: After Step 1;
                                                   BlankZero=Yes }
    { 32  ;   ;Codeunit ID: After Step 2;Integer  ;TableRelation=Object.ID WHERE (Type=CONST(Codeunit));
                                                   CaptionML=ENU=Codeunit ID: After Step 2;
                                                   BlankZero=Yes }
    { 33  ;   ;Codeunit Name: After Step 1;Text30 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Codeunit),
                                                                                         ID=FIELD(Codeunit ID: After Step 1)));
                                                   CaptionML=ENU=Codeunit Name: After Step 1;
                                                   Editable=No }
    { 34  ;   ;Codeunit Name: After Step 2;Text30 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Codeunit),
                                                                                         ID=FIELD(Codeunit ID: After Step 2)));
                                                   CaptionML=ENU=Codeunit Name: After Step 2;
                                                   Editable=No }
    { 35  ;   ;First Table Line Has Captions;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=First Table Line Has Captions }
    { 36  ;   ;Codeunit ID: Line Capture;Integer  ;TableRelation=Object.ID WHERE (Type=CONST(Codeunit));
                                                   CaptionML=ENU=Codeunit ID: Line Capture;
                                                   BlankZero=Yes }
    { 37  ;   ;Codeunit Name: Line Capture;Text30 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Codeunit),
                                                                                         ID=FIELD(Codeunit ID: Line Capture)));
                                                   CaptionML=ENU=Codeunit Name: Line Capture;
                                                   Editable=No }
    { 38  ;   ;No. of Search Texts ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Template Search Text" WHERE (Template No.=FIELD(No.)));
                                                   CaptionML=ENU=No. of Search Texts;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 39  ;   ;Auto Receive Order Variance;Boolean;CaptionML=ENU=Auto Receive Order Variance }
    { 40  ;   ;Auto Ship Return Order Var.;Boolean;CaptionML=ENU=Auto Ship Return Order Variance }
    { 41  ;   ;Posting Date        ;Option        ;CaptionML=ENU=Posting Date;
                                                   OptionCaptionML=ENU=Use Document Date (recognized on document),Use today;
                                                   OptionString=Use Document Date (recognized on document),Use today }
    { 42  ;   ;Date Format         ;Option        ;OnValidate=VAR
                                                                Field@161024012 : Record 6085580;
                                                              BEGIN
                                                                IF "Date Format" = xRec."Date Format" THEN
                                                                  EXIT;

                                                                IF NOT CONFIRM(Text004,TRUE,FIELDCAPTION("Date Format")) THEN
                                                                  EXIT;

                                                                Field.SETRANGE("Template No.","No.");
                                                                Field.SETRANGE("Data Type",Field."Data Type"::Date);
                                                                Field.MODIFYALL("Date Format","Date Format"+1);
                                                              END;

                                                   CaptionML=ENU=Date Format;
                                                   OptionCaptionML=ENU=Day / Month / Year,Month / Day / Year,Year / Day / Month,Year / Month / Day,Day / Year / Month,Month / Year / Day;
                                                   OptionString=Day / Month / Year,Month / Day / Year,Year / Day / Month,Year / Month / Day,Day / Year / Month,Month / Year / Day }
    { 43  ;   ;Master Template No. ;Code20        ;TableRelation=Template;
                                                   CaptionML=ENU=Master Template No. }
    { 44  ;   ;Prices Including VAT;Boolean       ;CaptionML=ENU=Prices Including VAT }
    { 101 ;   ;Purch. Auto Match   ;Boolean       ;CaptionML=ENU=Auto Match }
    { 102 ;   ;Purch. Validate VAT Calc.;Boolean  ;CaptionML=ENU=Validate VAT Calculation }
    { 103 ;   ;Validate Line Totals;Boolean       ;CaptionML=ENU=Validate Line Totals }
    { 104 ;   ;Purch. Inv. Reg. Step 1;Option     ;CaptionML=ENU=Invoice Reg. Step 1;
                                                   OptionCaptionML=ENU=" ,Create Invoice,Match Order & Create Invoice,Match & Update Order";
                                                   OptionString=[ ,Create Invoice,Match Order & Create Invoice,Match & Update Order] }
    { 105 ;   ;Purch. Inv. Reg. Step 2;Option     ;CaptionML=ENU=Invoice Reg. Step 2;
                                                   OptionCaptionML=ENU=" ,Submit for Approval,Release,Post";
                                                   OptionString=[ ,Submit for Approval,Release,Post] }
    { 106 ;   ;Allowed Variance Amount;Decimal    ;CaptionML=ENU=Allowed Variance Amount }
    { 107 ;   ;Purch. Match Order No.;Option      ;CaptionML=ENU=Match Order No.;
                                                   OptionCaptionML=ENU=No,Yes - always,Yes - if present;
                                                   OptionString=No,Yes - always,Yes - if present }
    { 108 ;   ;Purch. Match Item No.;Option       ;CaptionML=ENU=Match Item No.;
                                                   OptionCaptionML=ENU=No,Yes - always,Yes - if present;
                                                   OptionString=No,Yes - always,Yes - if present }
    { 109 ;   ;Purch. Match Quantity;Option       ;CaptionML=ENU=Match Quantity;
                                                   OptionCaptionML=ENU=No,Yes - always,Yes - if present;
                                                   OptionString=No,Yes - always,Yes - if present }
    { 110 ;   ;Purch. Match Unit Cost;Option      ;CaptionML=ENU=Match Unit Cost;
                                                   OptionCaptionML=ENU=No,Yes - always,Yes - if present;
                                                   OptionString=No,Yes - always,Yes - if present }
    { 111 ;   ;Purch. Use Vend. Purch. Code;Boolean;
                                                   CaptionML=ENU=Always Use Vend. Purch. Code }
    { 112 ;   ;Purch. Cr.Memo Reg. Step 1;Option  ;CaptionML=ENU=Credit Memo Reg. Step 1;
                                                   OptionCaptionML=ENU=" ,Create Credit Memo,Match Return Order & Create Credit Memo,Match & Update Return Order";
                                                   OptionString=[ ,Create Credit Memo,Match Return Order & Create Credit Memo,Match & Update Return Order] }
    { 113 ;   ;Purch. Cr.Memo Reg. Step 2;Option  ;CaptionML=ENU=Credit Memo Reg. Step 2;
                                                   OptionCaptionML=ENU=" ,Submit for Approval,Release,Post";
                                                   OptionString=[ ,Submit for Approval,Release,Post] }
    { 114 ;   ;Line Total Header Formula;Code250  ;CaptionML=ENU=Line Total Header Formula }
    { 115 ;   ;Allow Register without Amounts;Boolean;
                                                   CaptionML=ENU=Allow Register w/o Amounts }
    { 116 ;   ;Purch. Amount Approval Valid.;Option;
                                                   CaptionML=ENU=Amount Approval Validation;
                                                   OptionCaptionML=ENU=Amount Excl. VAT and Amount Incl. VAT must match imported amounts,Only Amount Incl. VAT must match imported amounts,Only Amount Excl. VAT must match imported amounts,No match required;
                                                   OptionString=Amount Excl. VAT and Amount Incl. VAT must match imported amounts,Only Amount Incl. VAT must match imported amounts,Only Amount Excl. VAT must match imported amounts,No match required }
    { 117 ;   ;Variance Posting Account;Code20    ;TableRelation="G/L Account";
                                                   OnValidate=VAR
                                                                GLAcc@161024012 : Record 15;
                                                              BEGIN
                                                                IF "Variance Posting Account" = '' THEN
                                                                  EXIT;

                                                                GLAcc.GET("Variance Posting Account");
                                                                GLAcc.TESTFIELD("Direct Posting",TRUE);
                                                                GLAcc.TESTFIELD(Blocked,FALSE);
                                                              END;

                                                   CaptionML=ENU=Variance Posting Account }
    { 118 ;   ;Purch. Auto App. within Var.;Boolean;
                                                   CaptionML=ENU=Auto Approve within Variance }
    { 119 ;   ;Approval Flow Code  ;Code10        ;TableRelation="Approval Flow";
                                                   CaptionML=ENU=Approval Flow Code }
    { 120 ;   ;Use Vendor/Customer Item Nos.;Boolean;
                                                   CaptionML=ENU=Use Vendor/Customer Item Nos. }
    { 121 ;   ;Translate Item Nos. to;Option      ;CaptionML=ENU=Translate Item Nos. to;
                                                   OptionCaptionML=ENU=" ,Item Cross Reference,Vendor Item,Document Capture Line Translation";
                                                   OptionString=[ ,Item Cross Reference,Vendor Item,Document Capture Line Translation] }
    { 122 ;   ;Allowed Variance %  ;Decimal       ;CaptionML=ENU=Allowed Variance %;
                                                   MinValue=0 }
    { 123 ;   ;Copy Matched Header Dimensions;Boolean;
                                                   CaptionML=ENU=Copy Matched Header Dimensions }
    { 130 ;   ;Translate to Type   ;Option        ;CaptionML=ENU=Translate to Type (Default);
                                                   OptionCaptionML=ENU=" ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)";
                                                   OptionString=[ ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)] }
    { 200 ;   ;Interaction Template Code;Code10   ;TableRelation="Interaction Template";
                                                   CaptionML=ENU=Interaction Template Code }
    { 300 ;   ;Sales Order Reg. Step 1;Option     ;CaptionML=ENU=Order Reg. Step 1;
                                                   OptionCaptionML=ENU=" ,,Create Order";
                                                   OptionString=[ ,,Create Order] }
    { 301 ;   ;Sales Order Reg. Step 2;Option     ;CaptionML=ENU=Order Reg. Step 2;
                                                   OptionCaptionML=ENU=" ,Submit for Approval,Release";
                                                   OptionString=[ ,Submit for Approval,Release] }
    { 302 ;   ;Merge from same E-mail;Boolean     ;CaptionML=ENU=Merge from same E-mail }
    { 303 ;   ;Sales Cr.Memo Reg. Step 1;Option   ;CaptionML=ENU=Credit Memo Reg. Step 1;
                                                   OptionCaptionML=ENU=" ,Create Credit Memo";
                                                   OptionString=[ ,Create Credit Memo] }
    { 304 ;   ;Sales Cr.Memo Reg. Step 2;Option   ;CaptionML=ENU=Credit Memo Reg. Step 2;
                                                   OptionCaptionML=ENU=" ,Submit for Approval,Release";
                                                   OptionString=[ ,Submit for Approval,Release,Post] }
    { 11012001;;Use E-mail Date for Doc. Date;Boolean }
    { 11012002;;Amounts Only       ;Boolean       ;CaptionML=ENU=Amounts Only }
    { 11012003;;Invoice Lines Input;Boolean       ;InitValue=No;
                                                   OnValidate=VAR
                                                                PurchSetup@1100528200 : Record 312;
                                                              BEGIN
                                                                //**4PS
                                                                PurchSetup.GET;
                                                                IF ("Invoice Lines Input") AND
                                                                   (PurchSetup."Approve Purchase Invoices") AND
                                                                   (PurchSetup."VAT Indicator (Purchase)" = PurchSetup."VAT Indicator (Purchase)" ::"No VAT") THEN
                                                                  ERROR(Text11012001);
                                                              END;

                                                   CaptionML=ENU=Invoice Lines Input }
    { 11012004;;Company Name Top   ;Integer       ;CaptionML=ENU=Company Name Top }
    { 11012005;;Company Name Bottom;Integer       ;CaptionML=ENU=Company Name Bottom }
    { 11012006;;Company Name Left  ;Integer       ;CaptionML=ENU=Company Name Left }
    { 11012007;;Company Name Right ;Integer       ;CaptionML=ENU=Company Name Right }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Category Code,Source Sub Type            }
    {    ;Search Text                              }
    {    ;Category Code,Source Record ID Tree ID   }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DCSetup@1000000004 : Record 6085573;
      NoSeriesMgt@1000000000 : Codeunit 396;
      Text001@1000000001 : TextConst 'ENU=This template can not be deleted because it has been used on one or more registered or rejected documents.';
      Text002@1000000002 : TextConst 'ENU=This template is used on %1 open documents.\\If you delete this template it will be removed from these documents and you must manually select anohter template.\\Do you wish to continue?';
      Text003@1000000003 : TextConst 'ENU=&Create New';
      Text004@1000000005 : TextConst 'ENU=Do you wish to update %1 on all fields?';
      Text005@1000000006 : TextConst 'ENU=WARNING\\Your are about to delete a system template.\\Do you wish to continue?';
      Text006@161024012 : TextConst 'ENU=N/A';
      Text007@161024013 : TextConst 'ENU=You must specify Source ID.';
      Text008@1160040000 : TextConst 'ENU=Source ID';
      Text11012001@1100528200 : TextConst 'ENU=Not allowed with Purchase Setup VAT Indicator ''No VAT''';

    PROCEDURE CreateNew@1000000008(DocCatCode@1000000000 : Code[20];NewRecIDTreeID@1000000004 : Integer;CopyAllFields@161024019 : Boolean) : Code[20];
    VAR
      DocCat@161024018 : Record 6085575;
      Template@1000000001 : Record 6085579;
      Template2@1000000002 : Record 6085579;
      TempTemplate@161024012 : TEMPORARY Record 6085579;
      Vendor@161024013 : Record 23;
      Customer@161024014 : Record 18;
      Field@161024016 : Record 6085580;
      TemplateNos@1000000007 : ARRAY [100] OF Code[20];
      NewLanguageCode@161024015 : Code[20];
      OptionString@1000000005 : Text[1024];
      i@1000000006 : Integer;
      OptionNumber@1000000008 : Integer;
    BEGIN
      DocCat.GET(DocCatCode);
      IF DocCat."Source Table No." <> 0 THEN
        IF (NewRecIDTreeID = 0) THEN
          ERROR(Text007);

      Template.SETCURRENTKEY("Category Code","Source Record ID Tree ID");
      Template.SETRANGE("Category Code",DocCatCode);
      Template.SETRANGE("Source Sub Type","Source Sub Type"::" ");
      Template.SETRANGE("Source Record ID Tree ID",NewRecIDTreeID);
      MakeUniqueNames(Template,TempTemplate);
      IF TempTemplate.FINDSET THEN BEGIN
        REPEAT
          i := i + 1;
          TemplateNos[i] := TempTemplate."No.";

          IF OptionString = '' THEN
            OptionString := TempTemplate.Description
          ELSE
            OptionString := OptionString + ',' + TempTemplate.Description;

        UNTIL TempTemplate.NEXT = 0;
        OptionString := OptionString + ',' + Text003;

        IF STRLEN(OptionString) < 290 THEN BEGIN
          OptionNumber := STRMENU(OptionString);

          IF OptionNumber = 0 THEN
            EXIT;

          IF TemplateNos[OptionNumber] <> '' THEN
            EXIT(TemplateNos[OptionNumber]);
        END ELSE BEGIN
          TempTemplate.INIT;
          TempTemplate."No." := 'CREATE';
          TempTemplate.Description := DELCHR(Text003,'=','&');
          TempTemplate.INSERT;

          IF PAGE.RUNMODAL(0,TempTemplate) <> ACTION::LookupOK THEN
            EXIT;

          IF TempTemplate."No." <> 'CREATE' THEN
            EXIT(TempTemplate."No.");
        END;
      END;

      Template.RESET;
      Template.SETCURRENTKEY("Category Code","Source Sub Type");
      Template.SETRANGE("Category Code",DocCatCode);
      Template.SETRANGE("Source Sub Type",Template."Source Sub Type"::Master);
      Template.FINDFIRST;
      IF Template.COUNT > 1 THEN
        IF PAGE.RUNMODAL(0,Template) <> ACTION::LookupOK THEN
          EXIT;

      Template2.GET(Template.Clone('',Template,Template."Category Code",'',CopyAllFields));

      Template2."Source Record ID Tree ID" := NewRecIDTreeID;
      Template2."Source Sub Type" := Template2."Source Sub Type"::" ";
      Template2.Default := OptionNumber = 0;
      Template2."Master Template No." := Template."No.";
      //**4PS.sn
      Template2.Description := COPYSTR(Template2.GetSourceName, 1, MAXSTRLEN(Description));
      //**4PS.en

      IF DocCat."Source Table No." = DATABASE::Vendor THEN BEGIN
        Vendor.GET(Template2.GetSourceID);

        IF Vendor."Language Code" <> Template2."Language Code" THEN
          NewLanguageCode := Vendor."Language Code";

        Template2."Prices Including VAT" := Vendor."Prices Including VAT";
      END ELSE IF DocCat."Source Table No." = DATABASE::Customer THEN BEGIN
        Customer.GET(Template2.GetSourceID);

        IF Customer."Language Code" <> Template2."Language Code" THEN
          NewLanguageCode := Customer."Language Code";

        Template2."Prices Including VAT" := Customer."Prices Including VAT";
      END;

      IF NewLanguageCode <> '' THEN BEGIN
        Template2."Language Code" := NewLanguageCode;
        Field.SETRANGE("Template No.",Template2."No.");
        Field.MODIFYALL("Language Code",NewLanguageCode);
      END;

      Template2.MODIFY(TRUE);
      EXIT(Template2."No.");
    END;

    PROCEDURE MakeUniqueNames@161024015(VAR Template@161024012 : Record 6085579;VAR TempTemplate@161024013 : Record 6085579);
    VAR
      RecIDMgt@1160040000 : Codeunit 6085604;
      Desc@161024014 : Text[50];
      i@161024015 : Integer;
    BEGIN
      IF Template.FINDSET THEN
        REPEAT
          Desc := RecIDMgt.FormatFilterValue(Template.Description,MAXSTRLEN(Template.Description));

          TempTemplate.SETRANGE(Description,Desc);
          WHILE TempTemplate.FINDFIRST DO BEGIN
            i := i + 1;
            Desc := RecIDMgt.FormatFilterValue(
              Template.Description,
              MAXSTRLEN(Template.Description) - 3 - STRLEN(FORMAT(i))) + ' (' + FORMAT(i) + ')';
            TempTemplate.SETRANGE(Description,Desc);
          END;

          TempTemplate := Template;
          TempTemplate.Description := Desc;
          TempTemplate.INSERT;
        UNTIL Template.NEXT = 0;

      TempTemplate.SETRANGE(Description);
    END;

    PROCEDURE Clone@1000000000(FromCompany@1160040001 : Text[30];VAR FromTemplate@161024012 : Record 6085579;ToDocCatCode@1160040000 : Code[10];ToTemplNo@1160040002 : Code[20];IncludeAllFields@161024014 : Boolean) : Code[20];
    VAR
      ToTemplate@1000000001 : Record 6085579;
      FromField@1000000000 : Record 6085580;
      FromDataTransl@1000000007 : Record 6085584;
      ToDataTransl@1000000008 : Record 6085584;
    BEGIN
      ToTemplate := FromTemplate;
      ToTemplate."Category Code" := ToDocCatCode;
      ToTemplate."No." := ToTemplNo;
      ToTemplate.INSERT(TRUE);

      //**4PS.sn
      ToTemplate."Invoice Lines Input" := Rec."Invoice Lines Input";
      ToTemplate.MODIFY;
      //**4PS.en
      IF FromCompany <> '' THEN BEGIN
        FromField.CHANGECOMPANY(FromCompany);
        FromDataTransl.CHANGECOMPANY(FromCompany);
      END;

      FromField.SETRANGE("Template No.",FromTemplate."No.");
      IF NOT IncludeAllFields THEN
        FromField.SETRANGE("Insert on new Templates",TRUE);

      IF FromField.FINDSET THEN
        REPEAT
          FromField.Clone(FromCompany,FromField,ToTemplate);
        UNTIL FromField.NEXT = 0;

      FromDataTransl.SETRANGE("Template No.",FromTemplate."No.");
      IF FromDataTransl.FINDSET THEN
        REPEAT
          ToDataTransl := FromDataTransl;
          ToDataTransl."Template No." := ToTemplate."No.";
          ToDataTransl.INSERT(TRUE);
        UNTIL FromDataTransl.NEXT = 0;

      EXIT(ToTemplate."No.");
    END;

    PROCEDURE AssistEdit@2(OldTempl@1000 : Record 6085579) : Boolean;
    VAR
      Templ@1001 : Record 6085579;
    BEGIN
      WITH Templ DO BEGIN
        Templ := Rec;
        DCSetup.GET;
        DCSetup.TESTFIELD("Template Nos.");

        IF NoSeriesMgt.SelectSeries(DCSetup."Template Nos.",OldTempl."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := Templ;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE GetSourceName@161024012() : Text[50];
    VAR
      DocCat@1160040001 : Record 6085575;
      RecIDMgt@1160040000 : Codeunit 6085604;
    BEGIN
      IF DocCat.GET("Category Code")THEN
        EXIT(RecIDMgt.GetFieldValue("Source Record ID Tree ID",DocCat."Source Field No. (Name)"));
    END;

    PROCEDURE ManuallyAddTemplField@161024013() : Boolean;
    VAR
      Template@161024013 : Record 6085579;
      Field@161024014 : Record 6085580;
      Field2@161024016 : Record 6085580;
      TempField@161024015 : TEMPORARY Record 6085580;
      TemplFieldList@161024012 : Page 6085602;
    BEGIN
      Template.SETRANGE("Category Code","Category Code");
      Template.SETRANGE("Source Sub Type",Template."Source Sub Type"::Master);
      IF Template.FINDSET THEN
        REPEAT
          Field.SETRANGE("Template No.",Template."No.");
          IF Field.FINDSET THEN
            REPEAT
              IF NOT Field2.GET("No.",Field.Type,Field.Code) THEN BEGIN
                TempField := Field;
                TempField.INSERT;
              END;
            UNTIL Field.NEXT = 0;
        UNTIL Template.NEXT = 0;

      TempField.SETCURRENTKEY("Template No.",Type,"Sort Order");
      IF TempField.FINDFIRST THEN;
      IF PAGE.RUNMODAL(PAGE::"Template Field List",TempField) = ACTION::LookupOK THEN BEGIN
        Field.GET(TempField."Template No.",TempField.Type,TempField.Code);
        Field.Clone('',Field,Rec);

        IF TempField."G/L Account Field Code" <> '' THEN
          IF Field.GET(TempField."Template No.",TempField.Type,TempField."G/L Account Field Code") THEN
            Field.Clone('',Field,Rec);

        EXIT(TRUE);
      END;
    END;

    PROCEDURE FormulaOnLookup@161024014(VAR Text@161024012 : Text[1024]) : Boolean;
    VAR
      TemplField@161024013 : Record 6085580;
    BEGIN
      TemplField.FILTERGROUP(2);
      TemplField.SETCURRENTKEY("Template No.",Type,"Sort Order");
      TemplField.SETRANGE("Template No.","No.");
      TemplField.SETRANGE(Type,TemplField.Type::Header);
      TemplField.SETRANGE("Data Type",TemplField."Data Type"::Number);
      TemplField.FILTERGROUP(0);
      IF PAGE.RUNMODAL(0,TemplField) = ACTION::LookupOK THEN BEGIN
        Text := TemplField.Code;
        EXIT(TRUE);
      END;
    END;

    PROCEDURE SetSourceID@1160040001(KeyValues@1160040000 : Text[250]);
    VAR
      DocCat@1160040001 : Record 6085575;
      RecIDMgt@1160040002 : Codeunit 6085604;
    BEGIN
      TESTFIELD("Source Sub Type","Source Sub Type"::" ");
      DocCat.GET("Category Code");
      "Source Record ID Tree ID" :=
        RecIDMgt.GetRecIDTreeID2(DocCat."Source Table No.",DocCat."Source Field No.",DocCat."Document Category GUID",KeyValues);
      IF MODIFY THEN;
    END;

    PROCEDURE GetSourceID@1160040000() : Text[250];
    VAR
      DocCat@1160040001 : Record 6085575;
      RecIDMgt@1160040000 : Codeunit 6085604;
    BEGIN
      IF DocCat.GET("Category Code") THEN
        EXIT(RecIDMgt.GetKeyValue("Source Record ID Tree ID",DocCat."Source Field No."))
      ELSE
        EXIT(RecIDMgt.GetKeyValue("Source Record ID Tree ID",1));
    END;

    BEGIN
    END.
  }
}

