OBJECT Table 6085590 DC Document
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=DCW13.70.00.4.00.03,4PS9.00;
  }
  PROPERTIES
  {
    DataCaptionFields=No.;
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 GetDCSetup;
                 DCSetup.TESTFIELD("Document Nos.");
                 NoSeriesMgt.InitSeries(DCSetup."Document Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               "Imported Date-Time" := CURRENTDATETIME;
               "Imported by" := USERID;
               "Import Day" := DATE2DMY(DT2DATE("Imported Date-Time"),1);
               "Import Month" := DATE2DMY(DT2DATE("Imported Date-Time"),2);
               "Import Year" := DATE2DMY(DT2DATE("Imported Date-Time"),3);
             END;

    OnDelete=VAR
               Document@1160040000 : Record 6085590;
               Page@1000000000 : Record 6085591;
               Value@1000000001 : Record 6085593;
               PurchDocMatch@161024012 : Record 6085700;
             BEGIN
               IF NOT "Allow Delete" THEN
                 TestStatus;

               Page.SETRANGE("Document No.","No.");
               Page.DELETEALL(TRUE);

               Value.SETRANGE("Document No.","No.");
               Value.DELETEALL(TRUE);

               PurchDocMatch.SETRANGE("Document No.","No.");
               PurchDocMatch.DELETEALL(TRUE);

               DeleteComments(-2);

               GetDCSetup;

               IF "File Type" = "File Type"::OCR THEN BEGIN
                 Document.SETRANGE("E-Mail GUID","E-Mail GUID");
                 Document.SETFILTER("No.",'<>%1',"No.");
                 IF NOT Document.FINDFIRST THEN
                   IF FILE.ERASE(GetEMailServerFileName) THEN;

                 IF FILE.ERASE(GetTIFServerFileName) THEN;
                 IF FILE.ERASE(GetPDFServerFileName) THEN;
               END ELSE IF "File Type" = "File Type"::Miscellaneous THEN
                 IF FILE.ERASE(GetMiscFileName) THEN;
             END;

    OnRename=BEGIN
               ERROR(Text001,TABLECAPTION);
             END;

    CaptionML=ENU=Document;
    LookupPageID=Page6085598;
    DrillDownPageID=Page6085598;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=ENU=No.;
                                                   NotBlank=Yes }
    { 2   ;   ;Document Category Code;Code10      ;TableRelation="DC Document Category";
                                                   OnValidate=VAR
                                                                Category@1000000000 : Record 6085575;
                                                              BEGIN
                                                                Category.GET("Document Category Code");
                                                                VALIDATE("Source Record ID Tree ID",0);
                                                              END;

                                                   CaptionML=ENU=Document Category Code }
    { 3   ;   ;TIFF Image File     ;BLOB          ;CaptionML=ENU=TIFF Image File }
    { 4   ;   ;Source Type         ;Option        ;CaptionML=ENU=Source Type;
                                                   OptionCaptionML=ENU=" ,Vendor,Contact,Customer,Job,Item,Fixed Asset,Employee";
                                                   OptionString=[ ,Vendor,Contact,Customer,Job,Item,Fixed Asset,Employee] }
    { 5   ;   ;Source No.          ;Code20        ;CaptionML=ENU=Source No. }
    { 6   ;   ;Template No.        ;Code20        ;TableRelation=Template WHERE (Category Code=FIELD(Document Category Code),
                                                                                 Source Record ID Tree ID=FIELD(Source Record ID Tree ID));
                                                   OnValidate=VAR
                                                                Value@1160040001 : Record 6085593;
                                                                PurchDocMatch@1160040000 : Record 6085700;
                                                                Template@1100528000 : Record 6085579;
                                                              BEGIN
                                                                TestStatus;
                                                                OK := FALSE;

                                                                //**4PS.so
                                                                //IF "Template No." <> '' THEN
                                                                //  EXIT;
                                                                //**4PS.eo
                                                                IF "Template No." = '' THEN BEGIN //**4PS.n
                                                                  Value.SETRANGE("Document No.","No.");
                                                                  Value.DELETEALL(TRUE);

                                                                  PurchDocMatch.SETRANGE("Document No.","No.");
                                                                  PurchDocMatch.DELETEALL(TRUE);

                                                                  DeleteComments(-1);
                                                                //**4PS sn
                                                                END;

                                                                IF Template.GET("Template No.") THEN  BEGIN
                                                                  "Amounts Only" := Template."Amounts Only";
                                                                  "Invoice Lines Input":= Template."Invoice Lines Input";
                                                                END;
                                                                //**4PS en
                                                              END;

                                                   CaptionML=ENU=Template No. }
    { 7   ;   ;Status              ;Option        ;OnValidate=BEGIN
                                                                IF Status = Status::Open THEN BEGIN
                                                                  "Amount Excl. VAT" := 0;
                                                                  "Amount Incl. VAT" := 0;
                                                                  "Created Doc. Type" := 0;
                                                                  "Created Doc. Subtype" := 0;
                                                                  "Created Doc. ID" := '';
                                                                  "Created Doc. Ref. No." := 0;
                                                                  EXIT;
                                                                END;

                                                                "Date-Time for Registration" := CURRENTDATETIME;
                                                              END;

                                                   CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=Open,Registered,Rejected;
                                                   OptionString=Open,Registered,Rejected }
    { 8   ;   ;No. of Pages        ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Document Page" WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=ENU=No. of Pages;
                                                   Editable=No }
    { 9   ;   ;OK                  ;Boolean       ;CaptionML=ENU=OK;
                                                   Editable=No }
    { 10  ;   ;Filename            ;Code100       ;CaptionML=ENU=Filename }
    { 11  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 12  ;   ;Template Description;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Template.Description WHERE (No.=FIELD(Template No.)));
                                                   CaptionML=ENU=Template Description;
                                                   Editable=No }
    { 13  ;   ;Created Doc. Type   ;Integer       ;CaptionML=ENU=Created Doc. Type }
    { 14  ;   ;Created Doc. Subtype;Integer       ;CaptionML=ENU=Created Doc. Subtype }
    { 15  ;   ;Created Doc. ID     ;Code20        ;CaptionML=ENU=Created Doc. ID }
    { 16  ;   ;Created Doc. Ref. No.;Integer      ;CaptionML=ENU=Created Doc. Ref. No. }
    { 17  ;   ;Description         ;Text80        ;CaptionML=ENU=Description }
    { 18  ;   ;Match Status        ;Option        ;CaptionML=ENU=Match Status;
                                                   OptionCaptionML=ENU=Unmatched,Automatically Matched,Manually Matched;
                                                   OptionString=Unmatched,Automatically Matched,Manually Matched }
    { 19  ;   ;Show after Register ;Boolean       ;CaptionML=ENU=Show After Register }
    { 20  ;   ;PDF File            ;BLOB          ;CaptionML=ENU=PDF File }
    { 21  ;   ;Import Date         ;Date          ;CaptionML=ENU=Import Date }
    { 22  ;   ;Import Time         ;Time          ;CaptionML=ENU=Import Time }
    { 23  ;   ;Register / Reject Date;Date        ;CaptionML=ENU=Register / Reject Date }
    { 24  ;   ;Register / Reject Time;Time        ;CaptionML=ENU=Register / Reject Time }
    { 25  ;   ;Imported by         ;Code50        ;CaptionML=ENU=Imported by }
    { 26  ;   ;Imported Date-Time  ;DateTime      ;CaptionML=ENU=Imported Date-Time }
    { 27  ;   ;Date-Time for Registration;DateTime;CaptionML=ENU=Date-Time for Registration }
    { 28  ;   ;File Type           ;Option        ;CaptionML=ENU=File Type;
                                                   OptionCaptionML=ENU=OCR,,,,Miscellaneous;
                                                   OptionString=OCR,,,,Miscellaneous }
    { 29  ;   ;File Extension      ;Text30        ;CaptionML=ENU=File Extension }
    { 30  ;   ;Allow Delete        ;Boolean       ;CaptionML=ENU=Allow Delete }
    { 31  ;   ;From E-Mail Address ;Text200       ;CaptionML=ENU=From E-Mail Address }
    { 32  ;   ;From E-Mail Name    ;Text200       ;CaptionML=ENU=From E-Mail Name }
    { 33  ;   ;To E-Mail Address   ;Text200       ;CaptionML=ENU=To E-Mail Address }
    { 34  ;   ;To E-Mail Name      ;Text200       ;CaptionML=ENU=To E-Mail Name }
    { 35  ;   ;E-mail Date         ;DateTime      ;CaptionML=ENU=E-mail Date }
    { 36  ;   ;E-Mail Inbox Subfolder;Text200     ;CaptionML=ENU=Inbox Subfolder }
    { 37  ;   ;E-Mail Subject      ;Text200       ;CaptionML=ENU=E-Mail Subject }
    { 38  ;   ;E-Mail GUID         ;GUID          ;CaptionML=ENU=E-Mail GUID }
    { 50  ;   ;Amount Excl. VAT    ;Decimal       ;CaptionML=ENU=Amount Excl. VAT }
    { 51  ;   ;Amount Incl. VAT    ;Decimal       ;CaptionML=ENU=Amount Incl. VAT }
    { 52  ;   ;Purch. Lines Create ;Boolean       ;CaptionML=ENU=Purch. Lines Create }
    { 53  ;   ;Import Day          ;Integer       ;CaptionML=ENU=Import Day }
    { 54  ;   ;Import Month        ;Integer       ;CaptionML=ENU=Import Month }
    { 55  ;   ;Import Year         ;Integer       ;CaptionML=ENU=Import Year }
    { 60  ;   ;Identification Barcode;Code50      ;CaptionML=ENU=Identification Barcode }
    { 61  ;   ;Source Record ID Tree ID;Integer   ;TableRelation="Record ID Tree";
                                                   OnValidate=BEGIN
                                                                TestStatus;

                                                                IF "Source Record ID Tree ID" = 0 THEN
                                                                  VALIDATE("Template No.",'')
                                                                ELSE
                                                                  VALIDATE("Template No.",GetDefaultTemplate(FALSE));
                                                              END;

                                                   CaptionML=ENU=Source Record ID Tree ID }
    { 62  ;   ;Document Status Text;Text100       ;CaptionML=ENU=Document Status Text }
    { 11012001;;Company            ;Text100       ;TableRelation=Company;
                                                   CaptionML=ENU=Company }
    { 11012002;;Amounts Only       ;Boolean       ;CaptionML=ENU=Amounts Only }
    { 11012003;;Invoice Lines Input;Boolean       ;InitValue=No;
                                                   OnValidate=VAR
                                                                PurchSetup@1100528200 : Record 312;
                                                              BEGIN
                                                                //**4PS
                                                                PurchSetup.GET;
                                                                IF ("Invoice Lines Input") AND
                                                                   (PurchSetup."Approve Purchase Invoices") AND
                                                                   (PurchSetup."VAT Indicator (Purchase)" = PurchSetup."VAT Indicator (Purchase)" ::"No VAT") THEN
                                                                  ERROR(Text11012001);
                                                              END;

                                                   CaptionML=ENU=Invoice Lines Input }
    { 11012004;;Document On Hold Code;Code10      ;TableRelation="Document On Hold Code DC";
                                                   CaptionML=ENU=Document On Hold Code }
    { 11012005;;Document Workflow Code;Code10     ;TableRelation="Document Workflow Code DC";
                                                   CaptionML=ENU=Document Workflow Code }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Status                                   }
    {    ;Document Category Code,Status            }
    {    ;Template No.,Status                      }
    {    ;Source Record ID Tree ID                 }
    {    ;Filename                                 }
    {    ;Created Doc. Type,Created Doc. Subtype,Created Doc. ID,Created Doc. Ref. No. }
    {    ;Document Category Code                   }
    {    ;E-Mail GUID                              }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DCSetup@1000000002 : Record 6085573;
      CaptureMgt@1000000006 : Codeunit 6085576;
      NoSeriesMgt@1000000003 : Codeunit 396;
      Text001@1160040001 : TextConst 'ENU=You cannot rename a %1.';
      Text002@1160040000 : TextConst 'ENU=Do you want to reject the document?';
      Text003@1160040002 : TextConst 'ENU=Do you want to create a new template for %1 %2?';
      Text004@1160040004 : TextConst 'ENU=The %1 %2 is not within the filters of the %3.';
      IsManual@161024014 : Boolean;
      Text005@1160040003 : TextConst 'ENU=There are no e-mails associated to this document.';
      GotDCSetup@1160040005 : Boolean;
      Text006@1160040006 : TextConst 'ENU=A template for %1 %2 has been found in company %3, do you want to copy this template?';
      Text11012001@1100528200 : TextConst 'ENU=Not allowed with Purchase Setup VAT Indicator ''No VAT''';
      SupplyingCompany@1100528400 : Text[30];

    PROCEDURE GetSourceNoCaption@1000000001() : Text[50];
    VAR
      DocCat@161024012 : Record 6085575;
      ObjWithCap@161024013 : Record 2000000058;
    BEGIN
      IF NOT DocCat.GET("Document Category Code") THEN
        EXIT;

      ObjWithCap.GET(ObjWithCap."Object Type"::Table,DocCat."Source Table No.");
      EXIT(ObjWithCap."Object Caption");
    END;

    PROCEDURE GetSourceNameCaption@1000000003() : Text[50];
    VAR
      Fld@161024012 : Record 2000000041;
      DocCat@161024013 : Record 6085575;
    BEGIN
      IF NOT DocCat.GET("Document Category Code") THEN
        EXIT;

      Fld.GET(DocCat."Source Table No.",DocCat."Source Field No. (Name)");
      EXIT(Fld."Field Caption");
    END;

    PROCEDURE GetSourceName@1000000000() : Text[250];
    VAR
      DocCat@1160040000 : Record 6085575;
      RecIDMgt@1160040001 : Codeunit 6085604;
    BEGIN
      IF DocCat.GET("Document Category Code") THEN
        EXIT(RecIDMgt.GetFieldValue("Source Record ID Tree ID",DocCat."Source Field No. (Name)"));
    END;

    PROCEDURE GetDefaultTemplate@1000000002(CreateNew@1000000001 : Boolean) : Code[20];
    VAR
      DocCat@1160040000 : Record 6085575;
      Template@1000000000 : Record 6085579;
      Template2@1160040004 : Record 6085579;
      FromCompany@1160040001 : Text[30];
      SourceName@1160040002 : Text[250];
      SourceID@1160040003 : Text[250];
    BEGIN
      Template.SETRANGE("Category Code","Document Category Code");
      Template.SETRANGE("Source Record ID Tree ID","Source Record ID Tree ID");
      Template.SETRANGE("Source Sub Type",Template."Source Sub Type"::" ");
      Template.SETRANGE(Default,TRUE);
      IF Template.FINDFIRST THEN BEGIN
        IF Template.COUNT = 1 THEN
          EXIT(Template."No.");

        IF CreateNew THEN
          EXIT(Template.CreateNew("Document Category Code","Source Record ID Tree ID",FALSE));

        EXIT;
      END;

      Template.SETRANGE(Default);
      IF Template.FINDFIRST THEN BEGIN
        IF Template.COUNT = 1 THEN
          EXIT(Template."No.");

        IF CreateNew THEN
          EXIT(Template.CreateNew("Document Category Code","Source Record ID Tree ID",FALSE));

        EXIT;
      END ELSE IF IsManual OR CreateNew THEN BEGIN
        DocCat.GET("Document Category Code");
        IF DocCat."Register without Template" THEN
          EXIT;

        SourceName := GetSourceName;
        SourceID := GetSourceID;

        IF FindTemplateInCompanies(FromCompany,Template,SourceName) THEN
          IF CONFIRM(Text006,TRUE,SourceID,SourceName,FromCompany) THEN BEGIN
            Template2.GET(Template.Clone(FromCompany,Template,Template."Category Code",'',TRUE));
            Template2."Source Record ID Tree ID" := "Source Record ID Tree ID";
            Template2.MODIFY;
            EXIT(Template2."No.");
          END;

        IF CONFIRM(Text003,TRUE,SourceID,SourceName) THEN
          EXIT(Template.CreateNew("Document Category Code","Source Record ID Tree ID",FALSE))
        ELSE
          ERROR('');
      END;
    END;

    PROCEDURE DeleteComments@1000000004(Area@1000000001 : Integer);
    VAR
      Comment@1000000000 : Record 6085594;
    BEGIN
      Comment.SETCURRENTKEY("Document No.");
      Comment.SETRANGE("Document No.","No.");
      IF Area = -2 THEN
        Comment.SETFILTER(Area,'<>%1',Comment.Area::Import)
      ELSE IF Area >= 0 THEN
        Comment.SETRANGE(Area,Area);
      Comment.DELETEALL;
    END;

    PROCEDURE BuildTempLinesTable@1000000005(VAR DocumentLine@1000000001 : Record 6085596);
    VAR
      Template@1000000006 : Record 6085579;
      Value@1000000000 : Record 6085593;
      Field@1000000004 : Record 6085580;
      FieldCodes@1000000005 : ARRAY [20] OF Code[20];
      NoOfLines@1000000002 : Integer;
      i@1000000003 : Integer;
    BEGIN
      IF "Template No." = '' THEN
        EXIT;

      Field.SETCURRENTKEY("Template No.",Type,"Sort Order");
      Field.SETRANGE("Template No.","Template No.");
      Field.SETRANGE(Type,Field.Type::Line);
      IF Field.FINDSET THEN
        REPEAT
          i := i + 1;
          FieldCodes[i] := Field.Code;
        UNTIL (Field.NEXT = 0) OR (i = 20);

      Value.SETCURRENTKEY("Document No.","Is Value",Type,"Line No.");
      Value.SETRANGE("Document No.","No.");
      Value.SETRANGE("Is Value",TRUE);
      Value.SETRANGE(Type,Value.Type::Line);
      IF NOT Value.FINDLAST THEN
        EXIT;

      NoOfLines := Value."Line No.";

      Template.GET("Template No.");

      FOR i := 1 TO NoOfLines DO BEGIN
        DocumentLine.INIT;
        DocumentLine."Document No." := "No.";
        DocumentLine."Template No." := "Template No.";
        DocumentLine."Line No." := i;
        Value.SETRANGE("Document No.","No.");
        Value.SETRANGE("Line No.",i);
        IF Value.FINDFIRST THEN BEGIN
          DocumentLine."Page No." := Value."Page No.";

          DocumentLine."Field Value 1" := GetValueAsText(FieldCodes[1],i);
          DocumentLine."Field Value 2" := GetValueAsText(FieldCodes[2],i);
          DocumentLine."Field Value 3" := GetValueAsText(FieldCodes[3],i);
          DocumentLine."Field Value 4" := GetValueAsText(FieldCodes[4],i);
          DocumentLine."Field Value 5" := GetValueAsText(FieldCodes[5],i);
          DocumentLine."Field Value 6" := GetValueAsText(FieldCodes[6],i);
          DocumentLine."Field Value 7" := GetValueAsText(FieldCodes[7],i);
          DocumentLine."Field Value 8" := GetValueAsText(FieldCodes[8],i);
          DocumentLine."Field Value 9" := GetValueAsText(FieldCodes[9],i);
          DocumentLine."Field Value 10" := GetValueAsText(FieldCodes[10],i);
          DocumentLine."Field Value 11" := GetValueAsText(FieldCodes[11],i);
          DocumentLine."Field Value 12" := GetValueAsText(FieldCodes[12],i);
          DocumentLine."Field Value 13" := GetValueAsText(FieldCodes[13],i);
          DocumentLine."Field Value 14" := GetValueAsText(FieldCodes[14],i);
          DocumentLine."Field Value 15" := GetValueAsText(FieldCodes[15],i);
          DocumentLine."Field Value 16" := GetValueAsText(FieldCodes[16],i);
          DocumentLine."Field Value 17" := GetValueAsText(FieldCodes[17],i);
          DocumentLine."Field Value 18" := GetValueAsText(FieldCodes[18],i);
          DocumentLine."Field Value 19" := GetValueAsText(FieldCodes[19],i);
          DocumentLine."Field Value 20" := GetValueAsText(FieldCodes[20],i);
      //END;   4PS bugfix

          IF Template."Codeunit ID: Line Validation" <> 0 THEN
            CODEUNIT.RUN(Template."Codeunit ID: Line Validation",DocumentLine)
          ELSE
            DocumentLine.OK := TRUE;

          IF NOT DocumentLine.Skip THEN
            DocumentLine.INSERT;
        END;  // 4PS bugfix
      END;
      IF DocumentLine.FINDFIRST THEN;
    END;

    PROCEDURE GetValueAsText@1000000008(FieldCode@1000000000 : Code[20];LineNo@1000000002 : Integer) : Text[250];
    VAR
      Field@1000000001 : Record 6085580;
    BEGIN
      IF Field.GET("Template No.",Field.Type::Line,FieldCode) THEN
        EXIT(CaptureMgt.GetValueAsText("No.",LineNo,Field));
    END;

    PROCEDURE AfterCapture@1000000006();
    VAR
      Template@1000000000 : Record 6085579;
    BEGIN
      IF NOT Template.GET("Template No.") THEN
        EXIT;

      IF Template."Codeunit ID: After Capture" <> 0 THEN
        CODEUNIT.RUN(Template."Codeunit ID: After Capture",Rec);
    END;

    PROCEDURE ValidateDocument@1000000007();
    VAR
      DocCat@1160040000 : Record 6085575;
      Template@1000000000 : Record 6085579;
    BEGIN
      TestStatus;
      CheckSourceTableFilter;

      IF NOT Template.GET("Template No.") THEN BEGIN
        DocCat.GET("Document Category Code");
        IF ("Source Record ID Tree ID" <> 0) AND (DocCat."Register without Template" )THEN BEGIN
          Rec.OK := TRUE;
          MODIFY;
        END;
        EXIT;
      END;

      IF Template."Codeunit ID: Doc. Validation" <> 0 THEN
        CODEUNIT.RUN(Template."Codeunit ID: Doc. Validation",Rec);
    END;

    PROCEDURE Register@1000000010(HideErrors@161024012 : Boolean);
    VAR
      DocCat@1160040000 : Record 6085575;
      Template@1000000000 : Record 6085579;
    BEGIN
      DocCat.GET("Document Category Code");
      IF DocCat."Source Table No." = 0 THEN
        EXIT;

      IF DocCat."Register without Template" THEN BEGIN
        IF NOT HideErrors THEN
          TESTFIELD("Source Record ID Tree ID")
        ELSE IF "Source Record ID Tree ID" = 0 THEN
          EXIT;

        "Created Doc. Type" := DocCat."Source Table No.";
        "Created Doc. ID" := GetSourceID;
        Status := Status::Registered;
        "Document On Hold Code" := ''; //**4PS
        MODIFY;
        EXIT;
      END ELSE IF HideErrors AND ("Template No." = '') THEN
        EXIT;

      TestSourceNoAndTemplNo;
      TestStatus;

      IF NOT Template.GET("Template No.") THEN
        EXIT;

      IF Template."Codeunit ID: Register" <> 0 THEN BEGIN
        IF NOT HideErrors THEN
          CODEUNIT.RUN(Template."Codeunit ID: Register",Rec)
        ELSE
          IF CODEUNIT.RUN(Template."Codeunit ID: Register",Rec) THEN;
      END;
    END;

    PROCEDURE RegisterYN@161024014();
    VAR
      DocCat@1160040000 : Record 6085575;
      Template@1000000000 : Record 6085579;
    BEGIN
      DocCat.GET("Document Category Code");

      IF DocCat."Register without Template" THEN BEGIN
        TESTFIELD("Source Record ID Tree ID");
        "Created Doc. Type" := DocCat."Source Table No.";
        "Created Doc. ID" := GetSourceID;
        Status := Status::Registered;
        "Document On Hold Code" := ''; //**4PS
        MODIFY;
        EXIT;
      END;

      IF DocCat."Source Table No." <> 0 THEN
        TestSourceNoAndTemplNo;
      TestStatus;

      Template.GET("Template No.");
      Template.TESTFIELD("Codeunit ID: Register (Y/N)");

      CODEUNIT.RUN(Template."Codeunit ID: Register (Y/N)",Rec);
    END;

    PROCEDURE Reject@1000000011();
    VAR
      PurchDocMatch@1160040000 : Record 6085700;
    BEGIN
      TestStatus;

      IF NOT CONFIRM(Text002) THEN
        EXIT;

      PurchDocMatch.SETRANGE("Document No.","No.");
      PurchDocMatch.DELETEALL(TRUE);

      VALIDATE(Status,Status::Rejected);
      MODIFY(TRUE);
    END;

    PROCEDURE Reopen@161024013();
    VAR
      DocCat@161024012 : Record 6085575;
    BEGIN
      DocCat.GET("Document Category Code");
      DocCat.TESTFIELD("Codeunit ID: Reopen");
      CODEUNIT.RUN(DocCat."Codeunit ID: Reopen",Rec);
    END;

    PROCEDURE OpenTIFFImageFile@1000000015();
    VAR
      FileSystemMgt@1160040000 : Codeunit 6085584;
    BEGIN
      FileSystemMgt.LocalShell(GetTIFFileName);
    END;

    PROCEDURE OpenPDFFile@1000000014();
    VAR
      FileSystemMgt@1160040000 : Codeunit 6085584;
    BEGIN
      IF "File Type" = "File Type"::OCR THEN
        FileSystemMgt.LocalShell(GetPDFileName)
      ELSE
        FileSystemMgt.LocalShell(GetMiscFileName);
    END;

    PROCEDURE OpenEMailFile@1160040004();
    VAR
      FileSystemMgt@1160040001 : Codeunit 6085584;
      EmptyGuid@1160040000 : GUID;
    BEGIN
      IF "E-Mail GUID" = EmptyGuid THEN
        ERROR(Text005);

      FileSystemMgt.LocalShell(GetEMailFileName);
    END;

    PROCEDURE ShowRegisteredDoc@1160040009();
    VAR
      DocCat@1160040000 : Record 6085575;
    BEGIN
      DocCat.GET("Document Category Code");
      DocCat.TESTFIELD("Codeunit ID: Show Reg. Doc.");
      CODEUNIT.RUN(DocCat."Codeunit ID: Show Reg. Doc.",Rec);
    END;

    PROCEDURE TestStatus@1000000012();
    BEGIN
      TESTFIELD(Status,Status::Open);
    END;

    PROCEDURE TestSourceNoAndTemplNo@161024012();
    BEGIN
      TESTFIELD("Source Record ID Tree ID");
      TESTFIELD("Template No.");
    END;

    PROCEDURE GetTIFFileName@1000000017() : Text[1024];
    VAR
      FileSystemMgt@1160040001 : Codeunit 6085584;
    BEGIN
      IF "No."= '' THEN
        EXIT('');

      EXIT(FileSystemMgt.GetClientFilename(GetTIFServerFileName));
    END;

    PROCEDURE GetPDFileName@1000000019() : Text[1024];
    VAR
      FileSystemMgt@1160040000 : Codeunit 6085584;
    BEGIN
      IF "No."= '' THEN
        EXIT('');

      //**4PS.sn
      IF SupplyingCompany <> '' THEN
        FileSystemMgt.SetSupplyingCompany(SupplyingCompany);
      //**4PS.en
      EXIT(FileSystemMgt.GetClientFilename(GetPDFServerFileName));
    END;

    PROCEDURE GetEMailFileName@1160040000() : Text[1024];
    VAR
      FileSystemMgt@1160040002 : Codeunit 6085584;
    BEGIN
      IF "No."= '' THEN
        EXIT('');

      EXIT(FileSystemMgt.GetClientFilename(GetEMailServerFileName));
    END;

    PROCEDURE GetTIFServerFileName@10() : Text[1024];
    VAR
      FullFilename@1160040000 : Text[1024];
    BEGIN
      IF "No."= '' THEN
        EXIT('');

      GetDCSetup;
      FullFilename := DCSetup."TIFF File Path" + DCSetup.GetDocSubDir(Rec) + "No." + '.tiff';
      CreateDirectory(FullFilename);
      EXIT(FullFilename);
    END;

    PROCEDURE GetPDFServerFileName@9() : Text[1024];
    VAR
      FullFilename@1160040000 : Text[1024];
    BEGIN
      IF "No."= '' THEN
        EXIT('');

      GetDCSetup;
      FullFilename := DCSetup."PDF File Path" + DCSetup.GetDocSubDir(Rec) + "No." + '.pdf';
      CreateDirectory(FullFilename);
      EXIT(FullFilename);
    END;

    PROCEDURE GetEMailServerFileName@8() : Text[1024];
    VAR
      FullFilename@1160040001 : Text[1024];
      FilenameGuid@1160040000 : Text[50];
    BEGIN
      IF "No."= '' THEN
        EXIT('');

      GetDCSetup;
      FilenameGuid := COPYSTR(FORMAT("E-Mail GUID"),2,36);
      FullFilename := DCSetup."E-mail File Path" + DCSetup.GetDocSubDir(Rec) + FilenameGuid + '.eml';
      CreateDirectory(FullFilename);
      EXIT(FullFilename);
    END;

    PROCEDURE GetMiscFileName@161024015() : Text[1024];
    VAR
      FullFilename@1160040000 : Text[1024];
    BEGIN
      IF "No."= '' THEN
        EXIT('');

      GetDCSetup;
      DCSetup.TESTFIELD("Miscellaneous File Path");
      FullFilename := DCSetup."Miscellaneous File Path" + DCSetup.GetDocSubDir(Rec) + "No." + '.' + "File Extension";
      CreateDirectory(FullFilename);
      EXIT(FullFilename);
    END;

    PROCEDURE CheckSourceTableFilter@1160040003();
    VAR
      DocCat@1160040005 : Record 6085575;
      Field@1160040006 : Record 6085580;
      Comment@1160040001 : Record 6085594;
      RecIDMgt@1160040002 : Codeunit 6085604;
      RecRef@1160040003 : RecordRef;
      FieldRef@1160040000 : FieldRef;
    BEGIN
      IF "Source Record ID Tree ID" = 0 THEN
        EXIT;

      RecRef.GETTABLE(Rec);

      DocCat.GET("Document Category Code");
      IF NOT RecIDMgt.IsValueWithinFilters(DocCat."Source Table No.",DocCat."Source Field No.",
        DocCat."Document Category GUID",
        RecIDMgt.GetFieldValue("Source Record ID Tree ID",DocCat."Source Field No."))
      THEN
        Comment.Add(Rec,Field,0,Comment.Area::Validation,Comment."Comment Type"::Error,
          STRSUBSTNO(Text004,RecRef.CAPTION,RecIDMgt.GetFieldValue("Source Record ID Tree ID",DocCat."Source Field No."),
          DocCat.FIELDCAPTION("Source Table No.")));
    END;

    PROCEDURE SetSourceID@1160040002(KeyValues@1160040000 : Text[250]);
    VAR
      DocCat@1160040001 : Record 6085575;
      RecIDMgt@1160040002 : Codeunit 6085604;
      SourceId@1160040003 : Integer;
    BEGIN
      IF DELCHR(KeyValues,'=',' ') = '' THEN
        KeyValues := '';

      DocCat.GET("Document Category Code");
      IF IsManual THEN BEGIN
        SourceId := RecIDMgt.SetKeyValueWithGUID(DocCat."Source Table No.",DocCat."Source Field No.",DocCat."Source Search Field No.",
            DocCat."Document Category GUID",KeyValues);
        COMMIT;

        VALIDATE("Source Record ID Tree ID",SourceId);
      END ELSE
        VALIDATE("Source Record ID Tree ID",
          RecIDMgt.SetKeyValueWithGUID(DocCat."Source Table No.",DocCat."Source Field No.",0,
            DocCat."Document Category GUID",KeyValues));

      MODIFY;
    END;

    PROCEDURE GetSourceID@1160040001() : Text[250];
    VAR
      DocCat@1160040001 : Record 6085575;
      RecIDMgt@1160040000 : Codeunit 6085604;
    BEGIN
      IF DocCat.GET("Document Category Code") THEN
        EXIT(RecIDMgt.GetKeyValue("Source Record ID Tree ID",DocCat."Source Field No."));
    END;

    PROCEDURE SetManual@161024016(NewIsManual@161024012 : Boolean);
    BEGIN
      IsManual := NewIsManual;
    END;

    PROCEDURE GetDCSetup@1160040005();
    BEGIN
      //**4PS.sn
      IF SupplyingCompany <> '' THEN
        DCSetup.CHANGECOMPANY(SupplyingCompany);
      //**4PS.en
      IF NOT GotDCSetup THEN
        DCSetup.GET;
    END;

    PROCEDURE SetDCSetup@1160040006(NewDCSetup@1160040000 : Record 6085573);
    BEGIN
      DCSetup := NewDCSetup;
      GotDCSetup := TRUE;
    END;

    PROCEDURE CreateDirectory@1160040007(FullFilename@1160040000 : Text[1024]);
    VAR
      FileSystem@1160040002 : Codeunit 6085584;
      Path@1160040001 : Text[1024];
    BEGIN
      Path := FileSystem.GetFilePath(FullFilename);

      IF NOT FileSystem.DirectoryExists(Path) THEN
        FileSystem.CreateDirectory(Path);
    END;

    PROCEDURE UpdateStatusText@1160040008();
    VAR
      DocCat@1160040000 : Record 6085575;
    BEGIN
      IF DocCat.GET("Document Category Code") THEN
        IF DocCat."Codeunit ID: Get Doc. Status" <> 0 THEN
          CODEUNIT.RUN(DocCat."Codeunit ID: Get Doc. Status",Rec);
    END;

    PROCEDURE GetSourceTableNo@1160040010() : Integer;
    VAR
      DocCat@1160040000 : Record 6085575;
    BEGIN
      IF "Document Category Code" = '' THEN
        EXIT;

      DocCat.GET("Document Category Code");
      EXIT(DocCat."Source Table No.");
    END;

    PROCEDURE FindTemplateInCompanies@1160040011(VAR FromCompany@1160040001 : Text[30];VAR FromTemplate@1160040006 : Record 6085579;SourceName@1160040000 : Text[250]) : Boolean;
    VAR
      Comp@1160040002 : Record 2000000006;
      DocCat@1160040004 : Record 6085575;
      RecIDMgt@1160040003 : Codeunit 6085604;
    BEGIN
      Comp.SETFILTER(Name,'<>%1',COMPANYNAME);
      IF Comp.FINDSET THEN
        REPEAT
          IF DocCat.CHANGECOMPANY(Comp.Name) THEN BEGIN
            IF DocCat.READPERMISSION THEN BEGIN
              IF DocCat.GET("Document Category Code") THEN BEGIN
                FromTemplate.CHANGECOMPANY(Comp.Name);
                IF FromTemplate.READPERMISSION THEN BEGIN
                  FromTemplate.SETRANGE("Category Code","Document Category Code");
                  FromTemplate.SETFILTER("Source Record ID Tree ID",'>%1',0);
                  FromTemplate.SETRANGE("Source Sub Type",FromTemplate."Source Sub Type"::" ");
                  FromTemplate.SETRANGE(Default,TRUE);
                  IF FromTemplate.FINDSET THEN;
                    REPEAT
                      IF SourceName = RecIDMgt.GetFieldValueInCompany(Comp.Name,FromTemplate."Source Record ID Tree ID",
                        DocCat."Source Field No. (Name)") THEN BEGIN
                          FromCompany := Comp.Name;
                          EXIT(TRUE);
                      END;
                    UNTIL FromTemplate.NEXT = 0;

                  FromTemplate.SETRANGE(Default);
                  IF FromTemplate.FINDSET THEN
                    REPEAT
                      IF SourceName = RecIDMgt.GetFieldValueInCompany(Comp.Name,FromTemplate."Source Record ID Tree ID",
                        DocCat."Source Field No. (Name)") THEN BEGIN
                          FromCompany := Comp.Name;
                          EXIT(TRUE);
                      END;
                    UNTIL FromTemplate.NEXT = 0;
                END;
              END;
            END;
          END;
        UNTIL Comp.NEXT = 0;
    END;

    PROCEDURE SetSupplyingCompany@1100528400(SupplyingCompany2@1100528400 : Text[30]);
    BEGIN
      //**4PS
      SupplyingCompany := SupplyingCompany2;
    END;

    BEGIN
    END.
  }
}

