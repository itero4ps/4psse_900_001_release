OBJECT Table 6086309 Expense Posting Setup
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.1.02.00;
  }
  PROPERTIES
  {
    Permissions=TableData 6086309=rimd;
    OnInsert=BEGIN
               IF "Country/Region Type" = "Country/Region Type"::Country THEN
                 TESTFIELD("Country/Region Code");
             END;

    OnModify=BEGIN
               IF "Country/Region Type" = "Country/Region Type"::Country THEN
                 TESTFIELD("Country/Region Code");
             END;

    CaptionML=ENU=Expense Posting Setup;
    LookupPageID=Page6086312;
    DrillDownPageID=Page6086312;
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Driving,Expense,Per diem;
                                                   OptionString=Driving,Expense,Per diem }
    { 2   ;   ;No.                 ;Code20        ;TableRelation="Expense Type";
                                                   CaptionML=ENU=Expense Type Code }
    { 3   ;   ;Country/Region Type ;Option        ;CaptionML=ENU=Country/Region Type;
                                                   OptionCaptionML=ENU=All Countries/Regions,Country;
                                                   OptionString=All Countries/Regions,Country }
    { 4   ;   ;Country/Region Code ;Code10        ;TableRelation=IF (Country/Region Type=CONST(Country)) Country/Region;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Type,"Country/Region Type"::Country);

                                                                IF "Country/Region Type" = "Country/Region Type"::Country THEN
                                                                  TESTFIELD("Country/Region Code");
                                                              END;

                                                   CaptionML=ENU=Country/Region Code }
    { 5   ;   ;Employee No.        ;Code50        ;TableRelation="Continia User Setup";
                                                   CaptionML=ENU=Employee No. }
    { 8   ;   ;Employee Group      ;Code20        ;TableRelation="Expense User Group";
                                                   CaptionML=ENU=Employee Group }
    { 10  ;   ;G/L Account No.     ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=VAR
                                                                GLAcc@1160040000 : Record 15;
                                                              BEGIN
                                                                GLAcc.GET("G/L Account No.");
                                                                GLAcc.CheckGLAcc;
                                                              END;

                                                   CaptionML=ENU=G/L Account No.;
                                                   NotBlank=Yes }
    { 45  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=ENU=Gen. Prod. Posting Group }
    { 58  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT Prod. Posting Group }
  }
  KEYS
  {
    {    ;Type,No.,Country/Region Type,Country/Region Code,Employee Group,Employee No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE FindPostingSetup@1160040000(Expense@1160040000 : Code[20];CountryRegion@1160040001 : Code[20];Employee@1160040002 : Code[50];Group@1160040003 : Code[20]) : Boolean;
    VAR
      ExpPostingSetup@1160040004 : Record 6086309;
    BEGIN
      ExpPostingSetup.SETRANGE("No.",Expense);
      ExpPostingSetup.SETRANGE(Type,Type::Expense);
      ExpPostingSetup.SETRANGE("Country/Region Type","Country/Region Type"::Country);
      ExpPostingSetup.SETRANGE("Country/Region Code",CountryRegion);
      ExpPostingSetup.SETRANGE("Employee No.",Employee);

      IF ExpPostingSetup.FINDFIRST THEN BEGIN
        Rec := ExpPostingSetup;
        EXIT(TRUE);
      END;

      ExpPostingSetup.SETRANGE("Country/Region Type","Country/Region Type"::"All Countries/Regions");
      ExpPostingSetup.SETRANGE("Country/Region Code");
      IF ExpPostingSetup.FINDFIRST THEN BEGIN
        Rec := ExpPostingSetup;
        EXIT(TRUE);
      END;

      ExpPostingSetup.SETRANGE("Employee No.",Employee);
      ExpPostingSetup.SETRANGE("Employee Group",Group);

      ExpPostingSetup.SETRANGE("Country/Region Type","Country/Region Type"::Country);
      ExpPostingSetup.SETRANGE("Country/Region Code",CountryRegion);
      IF ExpPostingSetup.FINDFIRST THEN BEGIN
        Rec := ExpPostingSetup;
        EXIT(TRUE);
      END;

      ExpPostingSetup.SETRANGE("Country/Region Type","Country/Region Type"::"All Countries/Regions");
      ExpPostingSetup.SETRANGE("Country/Region Code");
      IF ExpPostingSetup.FINDFIRST THEN BEGIN
        Rec := ExpPostingSetup;
        EXIT(TRUE);
      END;

      ExpPostingSetup.SETRANGE("Employee Group");
      IF ExpPostingSetup.FINDFIRST THEN BEGIN
        Rec := ExpPostingSetup;
        EXIT(TRUE);
      END;

      ExpPostingSetup.SETRANGE("Employee Group",Group);
      ExpPostingSetup.SETRANGE("Employee No.");
      IF ExpPostingSetup.FINDFIRST THEN BEGIN
        Rec := ExpPostingSetup;
        EXIT(TRUE);
      END;

      ExpPostingSetup.SETRANGE("Employee Group");
      IF ExpPostingSetup.FINDFIRST THEN BEGIN
        Rec := ExpPostingSetup;
        EXIT(TRUE);
      END;
    END;

    BEGIN
    END.
  }
}

