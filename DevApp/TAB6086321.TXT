OBJECT Table 6086321 Expense Allocation
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.1.02.00,4PS9.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               Expense@1160040001 : Record 6086320;
               SplitAndAllocationMgt@1160040000 : Codeunit 6086301;
             BEGIN
               "Entry No." := GetLastEntryNo + 1;

               TestNotPosted;

               Expense.GET("Expense Entry No.");
               SplitAndAllocationMgt.CopyExpDimToAllocationDim(Expense,Rec);

               IF NOT ("Amount %" IN [0,100]) THEN
                 Modified := TRUE;

               SplitAndAllocationMgt.InsertAllocationComment("Expense Entry No.");
             END;

    OnModify=BEGIN
               TestNotPosted;
               Modified := TRUE;
             END;

    OnDelete=VAR
               ExpenseAllocation@1160040001 : Record 6086321;
               ExpAllocationDim@1160040000 : Record 6086357;
               SplitAndAllocationMgt@1160040002 : Codeunit 6086301;
             BEGIN
               TestNotPosted;

               ExpAllocationDim.SETRANGE("Expense Allocation Entry No.","Entry No.");
               ExpAllocationDim.DELETEALL;

               ExpenseAllocation.SETCURRENTKEY("Expense Entry No.");
               ExpenseAllocation.SETRANGE("Expense Entry No.","Expense Entry No.");
               ExpenseAllocation.SETFILTER("Entry No.",'<>%1',"Entry No.");
               IF ExpenseAllocation.ISEMPTY THEN
                 SplitAndAllocationMgt.RemoveAllocationComment("Expense Entry No.");
             END;

    CaptionML=ENU=Expense Allocation;
    LookupPageID=Page6086320;
    DrillDownPageID=Page6086320;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=ENU=Entry No. }
    { 2   ;   ;Employee No.        ;Code50        ;TableRelation="Continia User Setup";
                                                   OnValidate=BEGIN
                                                                IF (CurrFieldNo <> 0) AND ("Employee No." <> xRec."Employee No.") THEN
                                                                  MESSAGE(Text001,FIELDCAPTION("Employee No."));

                                                                VALIDATE("Expense Type");
                                                              END;

                                                   CaptionML=ENU=Employee No. }
    { 4   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 5   ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
    { 6   ;   ;Document Date       ;Date          ;CaptionML=ENU=Document Date }
    { 7   ;   ;Date Created        ;Date          ;CaptionML=ENU=Date Created }
    { 8   ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   OnValidate=BEGIN
                                                                VALIDATE("Expense Type");
                                                              END;

                                                   CaptionML=ENU=Country/Region Code;
                                                   NotBlank=Yes }
    { 9   ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=ENU=Currency Code }
    { 10  ;   ;No Refund           ;Boolean       ;CaptionML=ENU=No Refund }
    { 11  ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                UpdateAmount(FIELDNO(Amount));
                                                              END;

                                                   CaptionML=ENU=Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 12  ;   ;Amount (LCY)        ;Decimal       ;CaptionML=ENU=Amount (LCY);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 17  ;   ;Created By          ;Code50        ;CaptionML=ENU=Created By }
    { 23  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=VAR
                                                                GLSetup@1160040001 : Record 98;
                                                                SplitAndAllocationMgt@1160040002 : Codeunit 6086301;
                                                              BEGIN
                                                                GLSetup.GET;
                                                                IF GLSetup."Global Dimension 1 Code" <> '' THEN
                                                                  SplitAndAllocationMgt.UpdateExpAllocDim("Entry No.",GLSetup."Global Dimension 1 Code","Global Dimension 1 Code",FALSE);
                                                              END;

                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   CaptionClass='1,1,1' }
    { 24  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=VAR
                                                                GLSetup@1160040001 : Record 98;
                                                                SplitAndAllocationMgt@1160040002 : Codeunit 6086301;
                                                              BEGIN
                                                                GLSetup.GET;
                                                                IF GLSetup."Global Dimension 2 Code" <> '' THEN
                                                                  SplitAndAllocationMgt.UpdateExpAllocDim("Entry No.",GLSetup."Global Dimension 2 Code","Global Dimension 2 Code",FALSE);
                                                              END;

                                                   CaptionML=ENU=Global Dimension 2 Code;
                                                   CaptionClass='1,1,2' }
    { 50  ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                   CaptionML=ENU=Job No. }
    { 51  ;   ;Job Task No.        ;Code20        ;TableRelation="Job Task"."Job Task No." WHERE (Job No.=FIELD(Job No.));
                                                   CaptionML=ENU=Job Task No. }
    { 60  ;   ;Cash/Private Card   ;Boolean       ;OnValidate=VAR
                                                                CEMField@1160040001 : Record 6086345;
                                                                ExpenseDim@1160040000 : Record 6086353;
                                                              BEGIN
                                                                ExpenseDim.SETRANGE("Expense Entry No.","Entry No.");
                                                                IF NOT CEMField.GET(FIELDNAME("Cash/Private Card")) THEN
                                                                  EXIT;

                                                                ExpenseDim.SETRANGE("Field Code",CEMField.Code);
                                                                ExpenseDim."Field Value" := FORMAT("Cash/Private Card");
                                                                IF NOT ExpenseDim.INSERT THEN
                                                                  ExpenseDim.MODIFY;
                                                              END;

                                                   CaptionML=ENU=Cash/Private Card;
                                                   Editable=No }
    { 73  ;   ;Original Expense Entry No.;Integer ;TableRelation=Expense;
                                                   CaptionML=ENU=Original Expense Entry No. }
    { 100 ;   ;Expense GUID        ;GUID          ;CaptionML=ENU=Expense GUID }
    { 102 ;   ;File Source         ;Option        ;CaptionML=ENU=File Source;
                                                   OptionCaptionML=ENU=E-mail,Mobile,Card Transaction;
                                                   OptionString=E-mail,Mobile,Card Transaction }
    { 110 ;   ;Expense Account     ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                "Exp. Account Manually Changed" := CurrFieldNo = FIELDNO("Expense Account");
                                                              END;

                                                   CaptionML=ENU=Expense Account }
    { 111 ;   ;Exp. Account Manually Changed;Boolean;
                                                   CaptionML=ENU=Expense Account Manually Changed }
    { 112 ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=ENU=Gen. Prod. Posting Group }
    { 113 ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT Prod. Posting Group }
    { 180 ;   ;Expense Type        ;Code20        ;TableRelation="Expense Type";
                                                   OnValidate=VAR
                                                                ContiniaUserSetup@1160040001 : Record 6086002;
                                                                Expensetype@1160040000 : Record 6086307;
                                                                ExpPostingSetup@1160040002 : Record 6086309;
                                                              BEGIN
                                                                IF NOT Expensetype.GET("Expense Type") THEN
                                                                  CLEAR(Expensetype);

                                                                VALIDATE("No Refund",Expensetype."No Refund");
                                                                VALIDATE(Fee,Expensetype.Fee);

                                                                IF (Expensetype.Code <> '') AND ExpPostingSetup.FindPostingSetup("Expense Type","Country/Region Code","Employee No.",
                                                                   ContiniaUserSetup."Expense User Group")
                                                                THEN BEGIN
                                                                  "Expense Account" := ExpPostingSetup."G/L Account No.";
                                                                  "Gen. Prod. Posting Group" := ExpPostingSetup."Gen. Prod. Posting Group";
                                                                  "VAT Prod. Posting Group" := ExpPostingSetup."VAT Prod. Posting Group";
                                                                END ELSE BEGIN
                                                                  "Expense Account" := '';
                                                                  "Gen. Prod. Posting Group" := '';
                                                                  "VAT Prod. Posting Group" := '';
                                                                END;

                                                                "Exp. Account Manually Changed" := FALSE;
                                                              END;

                                                   CaptionML=ENU=Expense Type }
    { 190 ;   ;Fee                 ;Boolean       ;CaptionML=ENU=Fee }
    { 300 ;   ;Expense Entry No.   ;Integer       ;TableRelation=Expense;
                                                   CaptionML=ENU=Expense Entry No.;
                                                   NotBlank=Yes }
    { 301 ;   ;Modified            ;Boolean       ;CaptionML=ENU=Modified }
    { 304 ;   ;Amount %            ;Decimal       ;OnValidate=BEGIN
                                                                UpdateAmount(FIELDNO("Amount %"));
                                                              END;

                                                   CaptionML=ENU=Amount %;
                                                   DecimalPlaces=0:5 }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Expense Entry No.                       ;SumIndexFields=Amount,Amount (LCY) }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1160040000 : TextConst 'ENU=When you change %1 you need to create a new expense.';
      Text002@1160040001 : TextConst 'ENU=The %1 must be inserted before you can show dimensions.';

    PROCEDURE UpdateAmount@1160040003(CalledByFieldNo@1160040002 : Integer);
    VAR
      Currency@1160040000 : Record 4;
      GLSetup@1160040005 : Record 98;
      CurrExchRate@1160040001 : Record 330;
      CurrencyDate@1160040004 : Date;
      CurrencyFactor@1160040003 : Decimal;
      Expense@1160040006 : Record 6086320;
    BEGIN
      GLSetup.GET;
      Expense.GET("Expense Entry No.");
      IF Expense."Currency Code" <> '' THEN BEGIN
        IF "Document Date" = 0D THEN
          CurrencyDate := WORKDATE
        ELSE
          CurrencyDate := "Document Date";

        IF Expense.Amount <> 0 THEN
          CurrencyFactor := Expense."Amount (LCY)" / Expense.Amount
        ELSE
          CurrencyFactor := 1;

        Currency.GET(Expense."Currency Code");
        Currency.TESTFIELD("Amount Rounding Precision");
      END ELSE BEGIN
        Currency.InitRoundingPrecision;
        CurrencyFactor := 1;
      END;

      CASE CalledByFieldNo OF
        // Amount
        FIELDNO(Amount):
          BEGIN
            IF Expense.Amount = 0 THEN BEGIN
              "Amount (LCY)" := 0;
              "Amount %" := 100;
            END ELSE BEGIN
              "Amount (LCY)" := ROUND(Amount * CurrencyFactor);
              "Amount %" := Amount / Expense.Amount * 100;
            END;
          END;

        // Amount %
        FIELDNO("Amount %"):
          BEGIN
            Amount := ROUND("Amount %" / 100 * Expense.Amount,Currency."Amount Rounding Precision");
            "Amount (LCY)" := ROUND("Amount %" / 100 * Expense."Amount (LCY)");
          END;

      END;
    END;

    PROCEDURE ShowDimensions@1160040000(ReadOnly@1160040001 : Boolean);
    VAR
      ExpenseDimMgt@1160040000 : Codeunit 6086318;
    BEGIN
      IF "Entry No." = 0 THEN
        ERROR(Text002,TABLECAPTION);
      ExpenseDimMgt.ShowExpAllocDim(Rec,ReadOnly);
    END;

    PROCEDURE ReturnPct@1160040002(AmountTotal@1160040000 : Decimal;AmountLine@1160040001 : Decimal) : Decimal;
    BEGIN
      IF AmountTotal <> 0 THEN
        EXIT(ROUND(AmountLine / AmountTotal * 100, 0.01));
    END;

    PROCEDURE ReturnAmount@1160040001(AmountTotal@1160040001 : Decimal;AmountLinePct@1160040000 : Decimal) : Decimal;
    BEGIN
      EXIT(ROUND(AmountTotal * (AmountLinePct / 100), 0.01));
    END;

    PROCEDURE GetLastEntryNo@1160040004() : Integer;
    VAR
      ExpenseAllocation@1160040000 : Record 6086321;
    BEGIN
      IF ExpenseAllocation.FINDLAST THEN
        EXIT(ExpenseAllocation."Entry No.")
      ELSE
        EXIT(1);
    END;

    PROCEDURE TestNotPosted@1160040006();
    VAR
      Expense@1160040000 : Record 6086320;
    BEGIN
      Expense.GET("Expense Entry No.");
      Expense.TESTFIELD(Posted,FALSE);
    END;

    BEGIN
    {
      4PS, Objects renumbered
    }
    END.
  }
}

