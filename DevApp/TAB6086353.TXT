OBJECT Table 6086353 Expense Dimension
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.1.02.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TestNotPosted;
               TestNotPendingExpUser;
               VALIDATE("Dimension Value Code","Dimension Value Code");
             END;

    OnModify=BEGIN
               TestNotPosted;
               TestNotPendingExpUser;
             END;

    OnDelete=VAR
               GLSetup@1160040000 : Record 98;
               Expense@1160040001 : Record 6086320;
             BEGIN
               TestNotPosted;
               TestNotPendingExpUser;

               GLSetup.GET;
               IF "Dimension Code" IN [GLSetup."Global Dimension 1 Code",GLSetup."Global Dimension 2 Code"] THEN BEGIN
                 Expense.GET("Expense Entry No.");

                 IF "Dimension Code" = GLSetup."Global Dimension 1 Code" THEN
                   Expense."Global Dimension 1 Code" := '';

                 IF "Dimension Code" = GLSetup."Global Dimension 2 Code" THEN
                   Expense."Global Dimension 2 Code" := '';

                 Expense.MODIFY;
               END;
             END;

    OnRename=BEGIN
               ERROR(Text002,TABLECAPTION);
             END;

    CaptionML=ENU=Expense Dimension;
    LookupPageID=Page6086356;
    DrillDownPageID=Page6086356;
  }
  FIELDS
  {
    { 1   ;   ;Expense Entry No.   ;Integer       ;TableRelation=Expense;
                                                   CaptionML=ENU=Expense Entry No. }
    { 2   ;   ;Dimension Code      ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=VAR
                                                                DimMgt@1160040000 : Codeunit 408;
                                                              BEGIN
                                                                IF "Dimension Code" = '' THEN
                                                                  EXIT;

                                                                IF NOT DimMgt.CheckDim("Dimension Code") THEN
                                                                  ERROR(DimMgt.GetDimErr);
                                                              END;

                                                   CaptionML=ENU=Dimension Code }
    { 3   ;   ;Dimension Value Code;Code20        ;TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Dimension Code));
                                                   OnValidate=VAR
                                                                GLSetup@1160040000 : Record 98;
                                                                Expense@1160040001 : Record 6086320;
                                                                DimMgt@1160040002 : Codeunit 408;
                                                              BEGIN
                                                                IF NOT DimMgt.CheckDimValue("Dimension Code","Dimension Value Code") THEN
                                                                  ERROR(DimMgt.GetDimErr);

                                                                GLSetup.GET;
                                                                IF NOT ("Dimension Code" IN [GLSetup."Global Dimension 1 Code",GLSetup."Global Dimension 2 Code"]) THEN
                                                                  EXIT;

                                                                Expense.GET("Expense Entry No.");

                                                                IF "Dimension Code" = GLSetup."Global Dimension 1 Code" THEN
                                                                  Expense."Global Dimension 1 Code" := "Dimension Value Code";

                                                                IF "Dimension Code" = GLSetup."Global Dimension 2 Code" THEN
                                                                  Expense."Global Dimension 2 Code" := "Dimension Value Code";

                                                                Expense.MODIFY;
                                                              END;

                                                   CaptionML=ENU=Dimension Value Code;
                                                   NotBlank=Yes }
    { 10  ;   ;Field Code          ;Code20        ;TableRelation="Field Type" WHERE (Standard Field=CONST(No),
                                                                                     Source Table No.=FILTER(<>349));
                                                   CaptionML=ENU=Field Code }
    { 20  ;   ;Field Value         ;Text250       ;TableRelation="Lookup Value".Code WHERE (Field Type Code=FIELD(Field Code));
                                                   OnValidate=VAR
                                                                FieldType@1160040000 : Record 6086345;
                                                                Date@1160040005 : Date;
                                                                DT@1160040003 : DateTime;
                                                                Dec@1160040002 : Decimal;
                                                                Int@1160040001 : Integer;
                                                                Bool@1160040004 : Boolean;
                                                              BEGIN
                                                                IF "Field Value" = '' THEN
                                                                  EXIT;

                                                                FieldType.GET("Field Code");

                                                                CASE FieldType.Type OF
                                                                  FieldType.Type::Integer:
                                                                    EVALUATE(Int,"Field Value",9);
                                                                  FieldType.Type::Date: BEGIN
                                                                    EVALUATE(DT,"Field Value",9);
                                                                    "Field Value" := FORMAT(DT2DATE(DT));
                                                                  END;
                                                                  FieldType.Type::Decimal:
                                                                    EVALUATE(Dec,"Field Value",9);
                                                                  FieldType.Type::"7":
                                                                    EVALUATE(DT,"Field Value",9);
                                                                  FieldType.Type::Boolean:
                                                                    EVALUATE(Bool,"Field Value",9);
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Field Value }
  }
  KEYS
  {
    {    ;Expense Entry No.,Dimension Code,Field Code;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PendingExpUserErr@1160040003 : TextConst 'ENU="You cannot make changes to %1 when the %2 %3 = %4."';
      SpecifyParentFieldErr@1160040000 : TextConst 'ENU=You must first specify a value for %1.';
      Text002@1160040002 : TextConst 'ENU=You cannot rename a %1.';

    LOCAL PROCEDURE TestNotPosted@37();
    VAR
      Expense@1160040000 : Record 6086320;
    BEGIN
      Expense.GET("Expense Entry No.");
      Expense.TESTFIELD(Posted,FALSE);
    END;

    LOCAL PROCEDURE TestNotPendingExpUser@1160040002();
    VAR
      Expense@1160040000 : Record 6086320;
    BEGIN
      Expense.GET("Expense Entry No.");
      IF Expense.Status = Expense.Status::"Pending Expense User" THEN
        ERROR(PendingExpUserErr,TABLECAPTION,Expense.TABLECAPTION,Expense.FIELDCAPTION(Status),Expense.Status);
    END;

    PROCEDURE LookupFieldValue@1160040005(VAR Text@1160040003 : Text[1024]) : Boolean;
    VAR
      FieldType@1160040000 : Record 6086345;
      LookupValue@1160040001 : Record 6086347;
      ExpDim@1160040002 : Record 6086353;
    BEGIN
      LookupValue.SETRANGE("Field Type Code","Field Code");

      FieldType.GET("Field Code");
      IF FieldType.GetParentFieldTypeCode <> '' THEN BEGIN
        IF NOT ExpDim.GET("Expense Entry No.",'',FieldType.GetParentFieldTypeCode) THEN
          ERROR(SpecifyParentFieldErr,FieldType.GetParentFieldTypeCode);

        ExpDim.GET("Expense Entry No.",'',FieldType.GetParentFieldTypeCode);
        LookupValue.SETRANGE("Primary Code",ExpDim."Field Value");
      END;

      IF PAGE.RUNMODAL(0,LookupValue) = ACTION::LookupOK THEN BEGIN
        Text := LookupValue.Code;
        EXIT(TRUE);
      END;
    END;

    PROCEDURE GetFieldFromDim@1160040000(Dim@1160040000 : Code[20]) : Code[20];
    VAR
      FieldType@1160040001 : Record 6086345;
    BEGIN
      EXIT(FieldType.GetFieldFromDim(Dim));
    END;

    BEGIN
    END.
  }
}

