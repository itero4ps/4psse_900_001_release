OBJECT XMLport 11012101 Imp. Contact Person
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00Toolsv1;
  }
  PROPERTIES
  {
    CaptionML=ENU=Imp. Contact Person;
    Direction=Both;
    DefaultFieldsValidation=No;
    OnInitXMLport=BEGIN
                    XMLNo := 11012101;
                    MainTableID := 5050;
                  END;

    OnPreXMLport=BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     FillConversionXMLPortFields;
                     COMMIT;
                     ERROR('');
                   END;

                   ConvMgt.DeleteConComment(XMLNo);
                   ConvMgt.CreateConComment(XMLNo,STRSUBSTNO('Import File: %1.',currXMLport.FILENAME));
                   ConvMgt.CreateConComment(XMLNo,'Start');
                 END;

    OnPostXMLport=BEGIN
                    IF NOT RunIsImportRunBln THEN
                      currXMLport.BREAK;

                    ConvMgt.CreateConComment(XMLNo,'Stop');
                    ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));
                  END;

    Format=Variable Text;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{755F5B7F-F062-4834-8364-DC4CD51C5A62}];  ;Root                ;Element ;Text     }

    { [{A7DBD164-8D3E-4F8D-B3A0-89F91BC12205}];1 ;Contact             ;Element ;Table   ;
                                                  SourceTable=Table5050;
                                                  SourceTableView=SORTING(Field1);
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              ClearFields;
                                                                            END;

                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 ContactPerson@1100409000 : Record 5050;
                                                                               BEGIN
                                                                                 StripData;
                                                                                 IF A = '' THEN
                                                                                   currXMLport.SKIP;

                                                                                 ImpLineCounter := ImpLineCounter + 1;

                                                                                 WITH Contact DO BEGIN
                                                                                   VALIDATE(Type,Type::Person);
                                                                                   IF CreateNewNosBln THEN BEGIN
                                                                                     "No." := '';
                                                                                     InitNoSeriesPerson;
                                                                                   END ELSE BEGIN
                                                                                     "No. Series" := GetNoSeriesForContactType(1);
                                                                                     "No." := A;
                                                                                   END;

                                                                                   XmlShowStatus.ShowImportCounter;

                                                                                   INSERT(TRUE);
                                                                                   IF CreateNewNosBln THEN
                                                                                     ConvMgt.FillMRKComment(MRKCommentRec."Table Name"::Contact,"No.",CommentCde,A);

                                                                                   ContCde := ConvMgt.DetermineNewMRKCode(LookupCompContactNoBln,MRKCommentRec."Table Name"::Contact,CompContactCommentCde,B);

                                                                                   IF (ContCde = '') AND (B <> '') THEN
                                                                                     ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateFieldNotFilledCommentTxt(
                                                                                       5050,
                                                                                       B,
                                                                                       FIELDCAPTION("Company No."),
                                                                                       5050,
                                                                                       "No."));

                                                                                   VALIDATE("First Name",C);
                                                                                   VALIDATE(Surname,D);
                                                                                   VALIDATE("Middle Name",E);
                                                                                   VALIDATE(Initials,F);
                                                                                   VALIDATE(Title,H);
                                                                                   IF IInt = 1 THEN
                                                                                     VALIDATE(Sex,Sex::Female)
                                                                                   ELSE
                                                                                     VALIDATE(Sex,Sex::Male);
                                                                                   "E-Mail" := J;
                                                                                   IF (K <> '') AND (K <> "Phone No.") THEN
                                                                                     "Phone No." := K;
                                                                                   "Mobile Phone No." := M;

                                                                                   Address := N;
                                                                                   "Post Code" := O;
                                                                                   City := ConvMgt.PostCodePresent(O);
                                                                                   IF City = '' THEN
                                                                                     City := P;
                                                                                   "Country/Region Code" := Q;

                                                                                   MODIFY(TRUE);

                                                                                   IF B <> '' THEN BEGIN
                                                                                     ContCde := ConvMgt.DetermineNewMRKCode(LookupCompContactNoBln,MRKCommentRec."Table Name"::Contact,CompContactCommentCde,B);
                                                                                     IF (ContCde = '') THEN
                                                                                       ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateFieldNotFilledCommentTxt(
                                                                                         5050,
                                                                                         B,
                                                                                         FIELDCAPTION("Company No."),
                                                                                         5050,
                                                                                         "No."))
                                                                                     ELSE BEGIN
                                                                                       CreateContactPerson(ContCde,"No.", '');
                                                                                       ContactPerson.SETRANGE("Company No.",ContCde);
                                                                                       ContactPerson.SETRANGE("Person No.","No.");
                                                                                       IF ContactPerson.FINDFIRST THEN BEGIN
                                                                                         IF G <> '' THEN
                                                                                           ContactPerson."Job Title" := G;
                                                                                         IF L <> '' THEN
                                                                                           ContactPerson."Extension No." := L;
                                                                                         IF R <> '' THEN
                                                                                           ContactPerson."E-Mail" := R;
                                                                                         ContactPerson.MODIFY(TRUE);
                                                                                       END;
                                                                                     END;
                                                                                   END;
                                                                                 END;
                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{5C900A9C-2240-4551-8D3B-A67A2D629F53}];2 ;A                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{5E5EE9AF-296C-4B48-B3A4-71FD1D3BDBB8}];2 ;B                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{81EF86E1-A401-49BA-998E-C96326459340}];2 ;C                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{A4D141C2-7800-4941-8428-EBDFE695445E}];2 ;D                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{7009774A-5D5B-4893-B574-E0BA7086A95E}];2 ;E                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{61A54020-5A22-4777-8499-A876D2E08C7F}];2 ;F                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{C3892DEF-6174-4845-A9BD-FA81350F4D61}];2 ;G                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{3B150350-762E-4D06-90AD-0B0A47DC3FEC}];2 ;H                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{9843402E-AD67-43E3-83FF-EC975E55B3F2}];2 ;I                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF I <> '' THEN
                                                                                    EVALUATE(IInt,I);
                                                                                END;
                                                                                 }

    { [{E7CE1720-702B-4D9A-AEFC-4D3968919ABC}];2 ;J                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{5AE9AE13-7450-478C-8D9E-AC817D7F71FF}];2 ;K                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{90053266-B5BA-4C55-8A52-DB7447E9D99D}];2 ;L                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{9AB2AB4C-715D-43E4-A2A5-6658CE4140BD}];2 ;M                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{06BCF328-E298-4C4B-AA49-4C7C37E0CFDB}];2 ;N                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{417B5AE0-F7F0-4C62-BF94-8F190859D7E1}];2 ;O                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{49450BA3-DF78-45C7-B141-CF97138EBB79}];2 ;P                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{63E88C6F-614C-4576-84AC-E6ED90488EA3}];2 ;Q                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{4DE894A5-3D25-4067-B986-25835834C5D6}];2 ;R                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      CaptionML=ENU=FIle Name;
      OnOpenPage=BEGIN
                   RunIsImportRunBln := TRUE;
                   CreateNewNosBln := TRUE;
                   LookupCompContactNoBln := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1100409010;;Container;
                  Name=Imp. Contact Person;
                  ContainerType=ContentArea }

      { 1100409009;1;Group  ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 1100525005;2;Group  ;
                  GroupType=Group }

      { 1100525001;3;Field  ;
                  CaptionML=ENU=Create New Contact Nos;
                  SourceExpr=CreateNewNosBln;
                  OnValidate=BEGIN
                               IF NOT CreateNewNosBln THEN
                                 CommentCde := '';
                             END;
                              }

      { 1100525002;3;Field  ;
                  Name=ComCde;
                  CaptionML=ENU=Comment Code for storing old Contact No.;
                  SourceExpr=CommentCde;
                  TableRelation="Comment Code" }

      { 1100525000;2;Group  ;
                  GroupType=Group }

      { 1100525003;3;Field  ;
                  CaptionML=ENU=Lookup Company Contact No. based on old Contact No.;
                  SourceExpr=LookupCompContactNoBln;
                  OnValidate=BEGIN
                               IF NOT LookupCompContactNoBln THEN
                                 CompContactCommentCde := '';
                             END;
                              }

      { 1100525004;3;Field  ;
                  Name=ContComCde;
                  CaptionML=ENU=Comment Code for searching Contact No.;
                  SourceExpr=CompContactCommentCde;
                  TableRelation="Comment Code" }

    }
  }
  CODE
  {
    VAR
      "// GENERAL"@1100409036 : Integer;
      CommentRec@1100409035 : Record 97;
      MRKCommentRec@1100409034 : Record 5061;
      ConvMgt@1100409033 : Codeunit 11020212;
      NoSerieMgt@1100409032 : Codeunit 396;
      XMLNo@1100409030 : Integer;
      MainTableID@1100409029 : Integer;
      CreateNewNosBln@1100409028 : Boolean;
      ImpLineCounter@1100409027 : Integer;
      CommentCde@1100409026 : Code[10];
      ConversionFileFormat@1100409025 : Record 11020691;
      RunIsImportRunBln@1100409024 : Boolean;
      XmlShowStatus@1100409010 : Codeunit 11130006;
      "//"@1100409023 : Integer;
      "// THIS DATAPORT"@1100409022 : Integer;
      LookupCompContactNoBln@1100409002 : Boolean;
      CompContactCommentCde@1100409001 : Code[10];
      ContCde@1100409000 : Code[20];
      Text10000@1100409006 : TextConst 'ENU=Company Contact (old No. %1) nof found for Contact Person %2';
      Text001@1100409005 : TextConst 'ENU="<empty>=Male, [1]=Female"';
      Text002@1100409004 : TextConst 'ENU=Private (Person)';
      Text003@1100409003 : TextConst 'ENU=Contact Person';
      IInt@1100409007 : Integer;
      ConfigProgressBar@1100409008 : Codeunit 8615;

    PROCEDURE StripData@1100485001();
    BEGIN
      A := DELCHR(A,'<>',' ');
      B := DELCHR(B,'<>',' ');
      C := DELCHR(C,'<>',' ');
      D := DELCHR(D,'<>',' ');
      E := DELCHR(E,'<>',' ');
      F := DELCHR(F,'<>',' ');
      G := DELCHR(G,'<>',' ');
      H := DELCHR(H,'<>',' ');
      J := DELCHR(J,'<>',' ');
      K := DELCHR(K,'=',' ');
      K := DELCHR(K,'=','.');
      L := DELCHR(L,'<>',' ');
      M := DELCHR(M,'=',' ');
      M := DELCHR(M,'=','.');
    END;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XMLNo);
        InsertColumnLine(XMLNo,'A',MainTableID,Contact.FIELDNAME("No."),'Code20','OldOrNewTxt');
        InsertColumnLine(XMLNo,'B',MainTableID,Contact.FIELDNAME("Company No."),'Code20','OldTxt');
        InsertColumnLine(XMLNo,'C',MainTableID,Contact.FIELDNAME("First Name"),'Text30','');
        InsertColumnLine(XMLNo,'D',MainTableID,Contact.FIELDNAME(Surname),'Text50','');
        InsertColumnLine(XMLNo,'E',MainTableID,Contact.FIELDNAME("Middle Name"),'Text30','');
        InsertColumnLine(XMLNo,'F',MainTableID,Contact.FIELDNAME(Initials),'Text30','');
        InsertColumnLine(XMLNo,'G',MainTableID,Contact.FIELDNAME("Job Title"),'Text50',Text003);
        InsertColumnLine(XMLNo,'H',MainTableID,Contact.FIELDNAME(Title),'Text30','');
        InsertColumnLine(XMLNo,'I',MainTableID,Contact.FIELDNAME(Sex),'Integer',Text001);
        InsertColumnLine(XMLNo,'J',MainTableID,Contact.FIELDNAME("E-Mail"),'Text80',Text002);
        InsertColumnLine(XMLNo,'K',MainTableID,Contact.FIELDNAME("Phone No."),'Text30',Text002);
        InsertColumnLine(XMLNo,'L',MainTableID,Contact.FIELDNAME("Extension No."),'Text30',Text003);
        InsertColumnLine(XMLNo,'M',MainTableID,Contact.FIELDNAME("Mobile Phone No."),'Text30',Text002);
        InsertColumnLine(XMLNo,'N',MainTableID,Contact.FIELDNAME(Address),'Text50',Text002);
        InsertColumnLine(XMLNo,'O',MainTableID,Contact.FIELDNAME("Post Code"),'Code20',Text002);
        InsertColumnLine(XMLNo,'P',MainTableID,Contact.FIELDNAME(City),'Text30',Text002);
        InsertColumnLine(XMLNo,'Q',MainTableID,Contact.FIELDNAME("Country/Region Code"),'Text10',Text002);
        InsertColumnLine(XMLNo,'R',MainTableID,Contact.FIELDNAME("E-Mail"),'Text80',Text003);
      END;
    END;

    PROCEDURE ClearFields@1100529902();
    BEGIN
      CLEAR(Contact);
      ContCde := '';
      CLEAR(A);
      CLEAR(B);
      CLEAR(C);
      CLEAR(D);
      CLEAR(E);
      CLEAR(F);
      CLEAR(G);
      CLEAR(H);
      CLEAR(I);
      CLEAR(J);
      CLEAR(K);
      CLEAR(L);
      CLEAR(M);
      CLEAR(N);
      CLEAR(O);
      CLEAR(P);
      CLEAR(Q);
      CLEAR(R);
      IInt := 0;
    END;

    PROCEDURE FillConversionXMLPortFields@1100409004();
    VAR
      ConversionXMLPort@1100409000 : Record 11020640;
    BEGIN
      ConversionXMLPort.GET(XMLNo);
      ConversionXMLPort."Main Table ID" := MainTableID;
      ConversionXMLPort."Page ID" := 5052;
      ConversionXMLPort.MODIFY;
    END;

    BEGIN
    {
      // Old No.'s are stored in Comment Table (97), marked with [CommentCde].
      // Object No is stored in [XMLNo]. In case of customisation (copy of dataport) change in OnInitDataport;
      //
      // Please use [AddConversionFileFormatLine] in case Import file format is changed.
    }
    END.
  }
}

