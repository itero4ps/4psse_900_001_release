OBJECT XMLport 11012113 Imp. Plant Type
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00Toolsv1;
  }
  PROPERTIES
  {
    CaptionML=ENU=Imp. Plant Type;
    DefaultFieldsValidation=No;
    OnInitXMLport=BEGIN
                    XMLNo := 11012113;
                    MainTableID := 11012551;
                  END;

    OnPreXMLport=BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     FillConversionXMLPortFields;
                     COMMIT;
                     ERROR('');
                   END;

                   ConvMgt.DeleteConComment(XMLNo);
                   ConvMgt.CreateConComment(XMLNo,STRSUBSTNO('Import File: %1.',currXMLport.FILENAME));
                   ConvMgt.CreateConComment(XMLNo,'Start');
                 END;

    OnPostXMLport=BEGIN
                    IF NOT RunIsImportRunBln THEN
                      currXMLport.BREAK;

                    ConvMgt.CreateConComment(XMLNo,'Stop');
                    ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));
                  END;

    Format=Variable Text;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{755F5B7F-F062-4834-8364-DC4CD51C5A62}];  ;Root                ;Element ;Text     }

    { [{A7DBD164-8D3E-4F8D-B3A0-89F91BC12205}];1 ;PlantType           ;Element ;Table   ;
                                                  SourceTable=Table11012551;
                                                  SourceTableView=SORTING(Field10);
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              ClearFields;
                                                                            END;

                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 ContactPerson@1100409000 : Record 5050;
                                                                               BEGIN
                                                                                 ImportveldenStrippen;
                                                                                 CLEAR("Plant Type");

                                                                                 WITH "Plant Type" DO BEGIN
                                                                                   VALIDATE(Code,A);
                                                                                   INSERT(TRUE);
                                                                                   ImpLineCounter := ImpLineCounter + 1;

                                                                                   VALIDATE(Description,B);
                                                                                   IF CInt = 1 THEN
                                                                                     VALIDATE(Bulk,TRUE);
                                                                                   VALIDATE("Unit of Measure",D);
                                                                                   CASE EInt OF
                                                                                     1: VALIDATE("Rental Type","Plant Type"."Rental Type"::"Sales/Buy Back");
                                                                                     2: VALIDATE("Rental Type","Plant Type"."Rental Type"::Both);
                                                                                   END;

                                                                                   VALIDATE("Current Price",FDec);
                                                                                   VALIDATE("No. of Depreciation Years",GDec);
                                                                                   VALIDATE("Scrap Value",HDec);
                                                                                   VALIDATE("Expected Occupation Perc.",IDec);

                                                                                   IF K <> '' THEN
                                                                                     VALIDATE("Gen. Prod. Posting Group",K);
                                                                                   IF L <> '' THEN
                                                                                     VALIDATE("VAT Prod. Posting Group",L);
                                                                                   IF M <> '' THEN
                                                                                     VALIDATE("Posting Group Internal",M);
                                                                                   IF N <> '' THEN
                                                                                     VALIDATE("Posting Group External",N);

                                                                                   VALIDATE("Department Code",O);
                                                                                   VALIDATE("Cost Object",P);
                                                                                   MODIFY(TRUE);

                                                                                   IF (J <> '') AND (J <> '0') THEN BEGIN
                                                                                     PlantTypeInspRec.VALIDATE("Plant Type",Code);
                                                                                     PlantTypeInspRec.VALIDATE("Inspection Type",J);
                                                                                     PlantTypeInspRec.INSERT(TRUE);
                                                                                   END;

                                                                                   IF QDec <> 0 THEN BEGIN
                                                                                     PlantRateRec.INIT;
                                                                                     PlantRateRec.VALIDATE("Rental Type",PlantRateRec."Rental Type"::Rental);
                                                                                     PlantRateRec.VALIDATE("Plant Type",Code);
                                                                                     PlantRateRec.VALIDATE("Rental Rate (Days)",QDec);
                                                                                     PlantRateRec.INSERT(TRUE);
                                                                                   END;

                                                                                   IF RDec <> 0 THEN BEGIN
                                                                                     CLEAR(ExistingPlantRateRec);
                                                                                     IF ExistingPlantRateRec.GET(ExistingPlantRateRec."Rental Type"::Rental,Code,'',0D) THEN BEGIN
                                                                                       ExistingPlantRateRec.VALIDATE("Rental Rate External (Days)",RDec);
                                                                                       ExistingPlantRateRec.MODIFY;
                                                                                     END ELSE BEGIN
                                                                                       PlantRateRec.VALIDATE("Rental Type",PlantRateRec."Rental Type"::Rental);
                                                                                       PlantRateRec.VALIDATE("Plant Type",Code);
                                                                                       PlantRateRec.VALIDATE("Rental Rate External (Days)",RDec);
                                                                                       PlantRateRec.INSERT(TRUE);
                                                                                     END;
                                                                                   END;
                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{5C900A9C-2240-4551-8D3B-A67A2D629F53}];2 ;A                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{5E5EE9AF-296C-4B48-B3A4-71FD1D3BDBB8}];2 ;B                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{81EF86E1-A401-49BA-998E-C96326459340}];2 ;C                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF C <> '' THEN
                                                                                    EVALUATE(CInt,C);
                                                                                END;
                                                                                 }

    { [{A4D141C2-7800-4941-8428-EBDFE695445E}];2 ;D                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{7009774A-5D5B-4893-B574-E0BA7086A95E}];2 ;E                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF E <> '' THEN
                                                                                    EVALUATE(EInt,E);
                                                                                END;
                                                                                 }

    { [{61A54020-5A22-4777-8499-A876D2E08C7F}];2 ;F                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF F <> '' THEN
                                                                                    EVALUATE(FDec,F);
                                                                                END;
                                                                                 }

    { [{C3892DEF-6174-4845-A9BD-FA81350F4D61}];2 ;G                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF G <> '' THEN
                                                                                    EVALUATE(GDec,G);
                                                                                END;
                                                                                 }

    { [{3B150350-762E-4D06-90AD-0B0A47DC3FEC}];2 ;H                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF H <> '' THEN
                                                                                    EVALUATE(HDec,H);
                                                                                END;
                                                                                 }

    { [{9843402E-AD67-43E3-83FF-EC975E55B3F2}];2 ;I                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF I <> '' THEN
                                                                                    EVALUATE(IDec,I);
                                                                                END;
                                                                                 }

    { [{E7CE1720-702B-4D9A-AEFC-4D3968919ABC}];2 ;J                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{5AE9AE13-7450-478C-8D9E-AC817D7F71FF}];2 ;K                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{90053266-B5BA-4C55-8A52-DB7447E9D99D}];2 ;L                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{9AB2AB4C-715D-43E4-A2A5-6658CE4140BD}];2 ;M                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{06BCF328-E298-4C4B-AA49-4C7C37E0CFDB}];2 ;N                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{417B5AE0-F7F0-4C62-BF94-8F190859D7E1}];2 ;O                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{49450BA3-DF78-45C7-B141-CF97138EBB79}];2 ;P                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{63E88C6F-614C-4576-84AC-E6ED90488EA3}];2 ;Q                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF Q <> '' THEN
                                                                                    EVALUATE(QDec,Q);
                                                                                END;
                                                                                 }

    { [{4DE894A5-3D25-4067-B986-25835834C5D6}];2 ;R                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF R <> '' THEN
                                                                                    EVALUATE(RDec,R);
                                                                                END;
                                                                                 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      CaptionML=ENU=<Imp. Plant Type>;
      OnOpenPage=BEGIN
                   RunIsImportRunBln := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1100525000;;Container;
                  Name=Dummy;
                  ContainerType=ContentArea }

    }
  }
  CODE
  {
    VAR
      PlantTypeInspRec@1100525034 : Record 11012563;
      PlantRateRec@1100525033 : Record 11012567;
      ExistingPlantRateRec@1100525032 : Record 11012567;
      ConvMgt@1100525030 : Codeunit 11020212;
      NoSerieMgt@1100525029 : Codeunit 396;
      CharSetConv@1100525028 : Codeunit 11012057;
      XMLNo@1100525027 : Integer;
      MainTableID@1100525026 : Integer;
      ImpLineCounter@1100525025 : Integer;
      ConversionFileFormat@1100525024 : Record 11020691;
      RunIsImportRunBln@1100525023 : Boolean;
      CInt@1100525020 : Integer;
      EInt@1100525018 : Integer;
      FDec@1100525017 : Decimal;
      GDec@1100525014 : Decimal;
      HDec@1100525013 : Decimal;
      IDec@1100525012 : Decimal;
      QDec@1100525001 : Decimal;
      RDec@1100525000 : Decimal;
      Text001@1100525008 : TextConst 'ENU="<empty>=Rental, [1]=Sales/Buy Back, [2]=Both"';

    PROCEDURE ImportveldenStrippen@1100485000();
    BEGIN
      B := DELCHR(B,'<>',' ');
    END;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    VAR
      PlantTypeInspectionType@1100529901 : Record 11012563;
      RentalRate@1100529900 : Record 11012567;
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XMLNo);
        InsertColumnLine(XMLNo,'A',MainTableID,"Plant Type".FIELDNAME(Code),'Code20','');
        InsertColumnLine(XMLNo,'B',MainTableID,"Plant Type".FIELDNAME(Description),'Text50','');
        InsertColumnLine(XMLNo,'C',MainTableID,"Plant Type".FIELDNAME(Bulk),'Integer','OneTrueTxt');
        InsertColumnLine(XMLNo,'D',MainTableID,"Plant Type".FIELDNAME("Unit of Measure"),'Code10','');
        InsertColumnLine(XMLNo,'E',MainTableID,"Plant Type".FIELDNAME("Rental Type"),'Integer',Text001);
        InsertColumnLine(XMLNo,'F',MainTableID,"Plant Type".FIELDNAME("Current Price"),'Decimal','');
        InsertColumnLine(XMLNo,'G',MainTableID,"Plant Type".FIELDNAME("No. of Depreciation Years"),'Decimal','');
        InsertColumnLine(XMLNo,'H',MainTableID,"Plant Type".FIELDNAME("Scrap Value"),'Decimal','');
        InsertColumnLine(XMLNo,'I',MainTableID,"Plant Type".FIELDNAME("Expected Occupation Perc."),'Decimal','');
        InsertColumnLine(XMLNo,'J',11012563,PlantTypeInspectionType.FIELDNAME("Inspection Type"),'Code20','');
        InsertColumnLine(XMLNo,'K',MainTableID,"Plant Type".FIELDNAME("Gen. Prod. Posting Group"),'Code10','');
        InsertColumnLine(XMLNo,'L',MainTableID,"Plant Type".FIELDNAME("VAT Prod. Posting Group"),'Code10','');
        InsertColumnLine(XMLNo,'M',MainTableID,"Plant Type".FIELDNAME("Posting Group Internal"),'Code10','');
        InsertColumnLine(XMLNo,'N',MainTableID,"Plant Type".FIELDNAME("Posting Group External"),'Code10','');
        InsertColumnLine(XMLNo,'O',MainTableID,"Plant Type".FIELDNAME("Department Code"),'Code20','');
        InsertColumnLine(XMLNo,'P',MainTableID,"Plant Type".FIELDNAME("Cost Object"),'Code20','');
        InsertColumnLine(XMLNo,'Q',11012567,RentalRate.FIELDNAME("Rental Rate (Days)"),'Decimal','');
        InsertColumnLine(XMLNo,'R',11012567,RentalRate.FIELDNAME("Rental Rate External (Days)"),'Decimal','');
      END;
    END;

    PROCEDURE ClearFields@1100529900();
    BEGIN
      CLEAR("Plant Type");
      CLEAR(PlantTypeInspRec);
      CLEAR(PlantRateRec);
      CLEAR(ExistingPlantRateRec);

      A := '';
      B := '';
      C := '';
      D := '';
      E := '';
      F := '';
      G := '';
      H := '';
      I := '';
      J := '';
      K := '';
      L := '';
      M := '';
      N := '';
      O := '';
      P := '';
      Q := '';
      R := '';
      CInt := 0;
      EInt := 0;
      FDec := 0;
      GDec := 0;
      HDec := 0;
      IDec := 0;
      QDec := 0;
      RDec := 0;
    END;

    PROCEDURE FillConversionXMLPortFields@1100409004();
    VAR
      ConversionXMLPort@1100409000 : Record 11020640;
    BEGIN
      ConversionXMLPort.GET(XMLNo);
      ConversionXMLPort."Main Table ID" := MainTableID;
      ConversionXMLPort."Page ID" := 11012552;
      ConversionXMLPort.MODIFY;
    END;

    BEGIN
    {
      // Old No.'s are stored in Comment Table (97), marked with [CommentCde].
      // Object No is stored in [XMLNo]. In case of customisation (copy of dataport) change in OnInitDataport;
      //
      // Please use [AddConversionFileFormatLine] in case Import file format is changed.
    }
    END.
  }
}

