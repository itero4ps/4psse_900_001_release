OBJECT XMLport 11012120 Imp. Project Commitments
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00Toolsv1;
  }
  PROPERTIES
  {
    CaptionML=ENU=Imp. Project Commitments;
    DefaultFieldsValidation=No;
    Format/Evaluate=C/SIDE Format/Evaluate;
    PreserveWhiteSpace=Yes;
    OnInitXMLport=BEGIN
                    XMLNo := 11012120;
                    MainTableID := 39;
                  END;

    OnPreXMLport=VAR
                   FileManagement@1100525001 : Codeunit 419;
                 BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     FillConversionXMLPortFields;
                     COMMIT;
                     ERROR('');
                   END;

                   IF CommitmentInWIPBln THEN
                     ConvMgt.CheckBalAccountFilled(vGLAccNo);

                   ConvMgt.CheckComCde(UseOldVendNoBln,23,VendCommentCde);
                   ConvMgt.CheckComCde(UseOldProjNoBln,11072003,ProjCommentCde);

                   ConvMgt.DeleteConComment(XMLNo);
                   ConvMgt.CreateConComment(XMLNo,STRSUBSTNO('Import File: %1.',currXMLport.FILENAME));
                   ConvMgt.CreateConComment(XMLNo,'Start');
                 END;

    OnPostXMLport=BEGIN
                    ConvMgt.CreateConComment(XMLNo,'Stop');
                    ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoOfLinesCommentTxt(38,OrderCounter));
                    ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));
                  END;

    Format=Variable Text;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{7B539476-C20A-46BC-A552-62FED55766AD}];  ;Root                ;Element ;Text     }

    { [{A667E51D-CE85-4A0D-946E-DE2CCC52ED51}];1 ;PurchaseLine        ;Element ;Table   ;
                                                  SourceTable=Table39;
                                                  SourceTableView=SORTING(Field1,Field3,Field4);
                                                  Import::OnBeforeInsertRecord=BEGIN
                                                                                 StripData;
                                                                                 IF A = '' THEN
                                                                                   currXMLport.SKIP;

                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 CLEAR("Purchase Line");

                                                                                 VendCde := ConvMgt.DetermineNewCode(UseOldVendNoBln,CommentRec."Table Name"::Vendor,VendCommentCde,B);
                                                                                 ProjCde := ConvMgt.DetermineNewCode(UseOldProjNoBln,CommentRec."Table Name"::Job,ProjCommentCde,E);

                                                                                 WITH "Purchase Line" DO BEGIN
                                                                                   IF ConvMgt.IsVendorPresent(VendCde) AND ConvMgt.IsProjectPresent(ProjCde) THEN BEGIN
                                                                                     IF NOT OrderHeaderRec.GET(OrderHeaderRec."Document Type"::Order,A) THEN BEGIN
                                                                                       OrderHeaderRec.INIT;
                                                                                       OrderHeaderRec."Document Type" := OrderHeaderRec."Document Type"::Order;
                                                                                       OrderHeaderRec."No." := A;
                                                                                       OrderHeaderRec.INSERT(TRUE);
                                                                                       OrderCounter := OrderCounter + 1;
                                                                                       IF VendCde <> '' THEN BEGIN
                                                                                         OrderHeaderRec.VALIDATE("Pay-to Vendor No.",VendCde);
                                                                                         OrderHeaderRec.VALIDATE("Buy-from Vendor No.",VendCde);
                                                                                       END;
                                                                                       OrderHeaderRec.VALIDATE("Order Date",CDate);
                                                                                       OrderHeaderRec.VALIDATE("Shortcut Dimension 1 Code",D);
                                                                                       OrderHeaderRec.VALIDATE("Amounts only",TRUE);
                                                                                       OrderHeaderRec.MODIFY(TRUE);
                                                                                       Counter := 0;
                                                                                     END;

                                                                                     IF CommitmentInWIPBln THEN BEGIN
                                                                                       AddJobLine(GDec-HDec,GDec-HDec,FALSE);
                                                                                       IF FDec-GDec <> 0 THEN
                                                                                         AddJobLine(FDec-GDec,0,TRUE);
                                                                                     END ELSE
                                                                                       AddJobLine(FDec-HDec,GDec-HDec,TRUE);

                                                                                   END ELSE BEGIN
                                                                                     IF NOT ConvMgt.IsVendorPresent(VendCde) THEN
                                                                                       ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoRecAddedCommentTxt(
                                                                                         23,
                                                                                         B,
                                                                                         MainTableID,
                                                                                         A));
                                                                                     IF NOT ConvMgt.IsProjectPresent(ProjCde) THEN
                                                                                       ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoRecAddedCommentTxt(
                                                                                         11072003,
                                                                                         E,
                                                                                         MainTableID,
                                                                                         A));
                                                                                   END;
                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{3AC77EC7-9326-4B76-BA5F-EA1F70D4DA67}];2 ;A                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=20 }

    { [{1B889F9B-B9E2-4749-96B0-D22BA1117049}];2 ;B                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{D76B46B3-243B-4FF7-8D1D-C7B64CCFA492}];2 ;C                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF C <> '' THEN
                                                                                    EVALUATE(CDate,C);
                                                                                END;

                                                  Width=50 }

    { [{11AAC24C-6612-4FE6-9973-FE5EF2EF2C43}];2 ;D                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{F0633544-507F-4C5E-A35B-A0DD95F11E63}];2 ;E                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{98E7308F-19D5-4AF6-89FB-48DB78E52124}];2 ;F                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF F <> '' THEN
                                                                                    EVALUATE(FDec,F);
                                                                                END;

                                                  Width=50 }

    { [{23B2F6EB-78F9-48FB-BC70-858F6A53A74C}];2 ;G                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF G <> '' THEN
                                                                                    EVALUATE(GDec,G);
                                                                                END;

                                                  Width=50 }

    { [{007CC416-7129-43EA-90B0-193FFE5FCA68}];2 ;H                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF H <> '' THEN
                                                                                    EVALUATE(HDec,H);
                                                                                END;

                                                  Width=50 }

    { [{8F9BF873-E7E2-450A-B9C5-33703DAFE6BE}];2 ;I                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{F0890EEC-4257-4AFD-B88A-7442730D3214}];2 ;J                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{659442CF-3753-4298-9149-BE36CD412787}];2 ;K                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   RunIsImportRunBln := TRUE;
                   UseOldVendNoBln := TRUE;
                   UseOldProjNoBln := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1100409000;;Container;
                  Name=Imp. Project Commitments;
                  ContainerType=ContentArea }

      { 1100409001;1;Group  ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 1100409002;2;Field  ;
                  CaptionML=ENU=Commitments already in WIP Conversion;
                  SourceExpr=CommitmentInWIPBln;
                  OnValidate=BEGIN
                               IF NOT CommitmentInWIPBln THEN
                                 vGLAccNo := '';
                             END;
                              }

      { 1100409003;2;Field  ;
                  Name=GLAccNo;
                  CaptionML=ENU=Balance Account No.;
                  SourceExpr=vGLAccNo;
                  TableRelation="G/L Account" }

      { 1100409010;2;Field  ;
                  CaptionML=ENU=Lookup Vendor No. based on old Vendor No.;
                  SourceExpr=UseOldVendNoBln;
                  OnValidate=BEGIN
                               IF NOT UseOldVendNoBln THEN
                                 VendCommentCde := '';
                             END;
                              }

      { 1100525000;2;Field  ;
                  Name=VendComCde;
                  CaptionML=ENU=Comment Code for searching Vendor No.;
                  SourceExpr=VendCommentCde;
                  TableRelation="Comment Code" }

      { 1100525001;2;Field  ;
                  CaptionML=ENU=Lookup Project No. based on old Project No.;
                  SourceExpr=UseOldProjNoBln;
                  OnValidate=BEGIN
                               IF NOT UseOldProjNoBln THEN
                                 ProjCommentCde := '';
                             END;
                              }

      { 1100525002;2;Field  ;
                  Name=ProjComCde;
                  CaptionML=ENU=Comment Code for searching Project No.;
                  SourceExpr=ProjCommentCde;
                  TableRelation="Comment Code" }

    }
  }
  CODE
  {
    VAR
      OrderHeaderRec@1100525038 : Record 38;
      "// GENERAL"@1100525037 : Integer;
      CommentRec@1100525036 : Record 97;
      ConvMgt@1100525035 : Codeunit 11020212;
      NoSerieMgt@1100525034 : Codeunit 396;
      XMLNo@1100525032 : Integer;
      MainTableID@1100525031 : Integer;
      ImpLineCounter@1100525029 : Integer;
      CommentCde@1100525028 : Code[10];
      ConversionFileFormat@1100525027 : Record 11020691;
      RunIsImportRunBln@1100525026 : Boolean;
      "//"@1100525025 : Integer;
      "// THIS DATAPORT"@1100525024 : Integer;
      AddressRec@1100525023 : Record 222;
      CustCde@1100525021 : Code[20];
      UseOldVendNoBln@1100525020 : Boolean;
      UseOldProjNoBln@1100525019 : Boolean;
      VendCommentCde@1100525018 : Code[10];
      ProjCommentCde@1100525017 : Code[10];
      VendCde@1100525016 : Code[20];
      ProjCde@1100525015 : Code[20];
      Counter@1100525014 : Integer;
      vGLAccNo@1100525013 : Code[20];
      CommitmentInWIPBln@1100525012 : Boolean;
      OrderCounter@1100525011 : Integer;
      CDate@1100525008 : Date;
      FDec@1100525005 : Decimal;
      GDec@1100525004 : Decimal;
      HDec@1100525003 : Decimal;
      Text001@1100525002 : TextConst 'ENU=Amount Purchased';
      Text002@1100525001 : TextConst 'ENU=Amount Received';
      Text003@1100525000 : TextConst 'ENU=Amount Invoiced';

    PROCEDURE StripData@1100485001();
    BEGIN
      A := DELCHR(A,'<>',' ');
      B := DELCHR(B,'<>',' ');
    END;

    PROCEDURE AddJobLine@1000000016(AmntOrder@1000000001 : Decimal;AmntReceived@1000000002 : Decimal;JobBln@1000000005 : Boolean);
    VAR
      lvPurchLine@1000000000 : Record 39;
    BEGIN
      Counter := Counter + 10000;

      WITH lvPurchLine DO BEGIN
        VALIDATE("Document Type","Purchase Line"."Document Type"::Order);
        VALIDATE("Document No.",A);
        VALIDATE("Line No.",Counter);
        INSERT(TRUE);
        ImpLineCounter := ImpLineCounter + 1;

        VALIDATE(Type,Type::"G/L Account");

        IF JobBln THEN BEGIN
          VALIDATE("Job No.",ProjCde);
          VALIDATE("Shortcut Dimension 2 Code",I);
          IF ConvMgt.IsProjectElementPresent(ProjCde,K) THEN
            VALIDATE(Element,K)
          ELSE
            IF K <> '' THEN
              ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateFieldNotFilledCommentTxt(
                11012010,
                STRSUBSTNO('%1-%2',ProjCde,K),
                FIELDCAPTION(Element),
                MainTableID,
                STRSUBSTNO('%1-%2',"Document No.","Line No.")));
        END ELSE
          VALIDATE("No.",vGLAccNo);

        VALIDATE("Direct Unit Cost",AmntOrder);
        IF AmntReceived <> 0 THEN
          VALIDATE("Amnt. to Receive",AmntReceived);
        VALIDATE(Description,J);
        MODIFY(TRUE);
      END;
    END;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XMLNo);
        InsertColumnLine(XMLNo,'A',MainTableID,"Purchase Line".FIELDNAME("Document No."),'Code20','');
        InsertColumnLine(XMLNo,'B',MainTableID,"Purchase Line".FIELDNAME("Pay-to Vendor No."),'Code20','OldTxt');
        InsertColumnLine(XMLNo,'C',MainTableID,"Purchase Line".FIELDNAME("Order Date"),'Date','');
        InsertColumnLine(XMLNo,'D',MainTableID,"Purchase Line".FIELDNAME("Shortcut Dimension 1 Code"),'Code20','');
        InsertColumnLine(XMLNo,'E',MainTableID,"Purchase Line".FIELDNAME("Job No."),'Code20','OldTxt');
        InsertColumnLine(XMLNo,'F',0,Text001,'Decimal',Text001);
        InsertColumnLine(XMLNo,'G',0,Text002,'Decimal',Text002);
        InsertColumnLine(XMLNo,'H',0,Text003,'Decimal',Text003);
        InsertColumnLine(XMLNo,'I',MainTableID,"Purchase Line".FIELDNAME("Shortcut Dimension 2 Code"),'Code20','');
        InsertColumnLine(XMLNo,'J',MainTableID,"Purchase Line".FIELDNAME(Description),'Text50','');
        InsertColumnLine(XMLNo,'K',MainTableID,"Purchase Line".FIELDNAME(Element),'Code20','');
      END;
    END;

    PROCEDURE ClearFields@1100529905();
    BEGIN
      CLEAR("Purchase Line");
      CLEAR(OrderHeaderRec);

      A := '';
      B := '';
      C := '';
      D := '';
      E := '';
      F := '';
      G := '';
      H := '';
      I := '';
      J := '';
      K := '';

      CDate := 0D;
      FDec := 0;
      GDec := 0;
      HDec := 0;
    END;

    PROCEDURE FillConversionXMLPortFields@1100409004();
    VAR
      ConversionXMLPort@1100409000 : Record 11020640;
    BEGIN
      ConversionXMLPort.GET(XMLNo);
      ConversionXMLPort."Main Table ID" := MainTableID;
      ConversionXMLPort."Page ID" := 11132158;
      ConversionXMLPort.MODIFY;
    END;

    BEGIN
    END.
  }
}

