OBJECT XMLport 11012123 Imp. Project Budget
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00Toolsv1;
  }
  PROPERTIES
  {
    CaptionML=ENU=Imp. Project Budget;
    DefaultFieldsValidation=No;
    Format/Evaluate=C/SIDE Format/Evaluate;
    PreserveWhiteSpace=Yes;
    OnInitXMLport=BEGIN
                    XMLNo := 11012123;
                    MainTableID := 11012001;
                  END;

    OnPreXMLport=VAR
                   FileManagement@1100525001 : Codeunit 419;
                 BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     FillConversionXMLPortFields;
                     COMMIT;
                     ERROR('');
                   END;

                   ConvMgt.CheckComCde(UseOldProjNoBln,11072003,ProjCommentCde);

                   ConvMgt.DeleteConComment(XMLNo);
                   ConvMgt.CreateConComment(XMLNo,STRSUBSTNO('Import File: %1.',currXMLport.FILENAME));
                   ConvMgt.CreateConComment(XMLNo,'Start');
                 END;

    OnPostXMLport=BEGIN
                    ConvMgt.CreateConComment(XMLNo,'Stop');
                    ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));
                  END;

    Format=Variable Text;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{7B539476-C20A-46BC-A552-62FED55766AD}];  ;Root                ;Element ;Text     }

    { [{A667E51D-CE85-4A0D-946E-DE2CCC52ED51}];1 ;BudgetLine          ;Element ;Table   ;
                                                  SourceTable=Table11012001;
                                                  SourceTableView=SORTING(Field1,Field31,Field33,Field38,Field14);
                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 lvPlantTypeRec@1100525001 : Record 11012551;
                                                                                 lvDimValueRec@1100525000 : Record 349;
                                                                               BEGIN
                                                                                 StripData;

                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 CLEAR("Budget Line");

                                                                                 IF A = '' THEN
                                                                                   currXMLport.SKIP;

                                                                                 ProjCde := ConvMgt.DetermineNewCode(UseOldProjNoBln,CommentRec."Table Name"::Job,ProjCommentCde,A);

                                                                                 WITH "Budget Line" DO BEGIN
                                                                                   IF ConvMgt.IsProjectPresent(ProjCde) THEN BEGIN
                                                                                     DimMgt.GetDimValueRec(2,C,lvDimValueRec, FALSE, ProjCde);

                                                                                     IF (lvDimValueRec.Code <> '') THEN BEGIN
                                                                                       IF lvDimValueRec."Cost Type" <> lvDimValueRec."Cost Type"::Revenue THEN BEGIN

                                                                                         IF EDec <> 0 THEN BEGIN

                                                                                           VALIDATE("Project No.",ProjCde);
                                                                                           VALIDATE("Line No.",ConvMgt.DetermineProjectBudgetLineNo(ProjCde,'','',''));
                                                                                           INSERT(TRUE);
                                                                                           ImpLineCounter := ImpLineCounter + 1;

                                                                                           "Cost Type" := lvDimValueRec."Cost Type";
                                                                                           VALIDATE("Cost Object",C);

                                                                                           IF ConvMgt.IsProjectElementPresent(ProjCde,B) THEN
                                                                                             VALIDATE(Element,B)
                                                                                           ELSE
                                                                                             IF B <> '' THEN
                                                                                               ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateFieldNotFilledCommentTxt(
                                                                                                 11012010,
                                                                                                 STRSUBSTNO('%1-%2',ProjCde,B),
                                                                                                 FIELDCAPTION(Element),
                                                                                                 MainTableID,
                                                                                                 STRSUBSTNO('%1-%2',"Project No.","Line No.")));

                                                                                           IF "Cost Type" = "Cost Type"::Labor THEN BEGIN
                                                                                             IF FDec > 0 THEN
                                                                                               VALIDATE(Rate,EDec/FDec);
                                                                                             VALIDATE(Quantity,FDec);
                                                                                             VALIDATE(Norm, 1);
                                                                                           END ELSE BEGIN
                                                                                             Quantity := 1;
                                                                                             IF I <> '' THEN
                                                                                               IF ConvMgt.IsTradeItemPresent(G,H) THEN BEGIN
                                                                                                 "Vendor (Trade Item)" := G;
                                                                                                 VALIDATE("Trade Item",H);
                                                                                               END;

                                                                                             IF I <> '' THEN
                                                                                               IF ConvMgt.IsItemPresent(I) THEN
                                                                                                 VALIDATE("Item No.",I);
                                                                                           END;
                                                                                           VALIDATE(Amount,EDec);    // To switch back to the old price

                                                                                           IF Description = '' THEN
                                                                                             Description := COPYSTR(D,1,50);

                                                                                           MODIFY(TRUE);
                                                                                         END ELSE
                                                                                           ConvMgt.CreateConComment(XMLNo,STRSUBSTNO(Text002,
                                                                                             "Budget Line".TABLECAPTION,
                                                                                             STRSUBSTNO('%1-%2',A,C)));
                                                                                       END ELSE
                                                                                         ConvMgt.CreateConComment(XMLNo,STRSUBSTNO(Text001,
                                                                                           FIELDCAPTION("Cost Object"),
                                                                                           C,
                                                                                           "Budget Line".TABLECAPTION,
                                                                                           STRSUBSTNO('%1-%2',A,C)));
                                                                                     END ELSE
                                                                                       ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoRecAddedCommentTxt(
                                                                                         349,
                                                                                         C,
                                                                                         MainTableID,
                                                                                         STRSUBSTNO('%1-%2',A,C)));
                                                                                   END ELSE
                                                                                     ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoRecAddedCommentTxt(
                                                                                       11072003,
                                                                                       A,
                                                                                       MainTableID,
                                                                                       STRSUBSTNO('%1-%2',A,C)));
                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{3AC77EC7-9326-4B76-BA5F-EA1F70D4DA67}];2 ;A                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=20 }

    { [{1B889F9B-B9E2-4749-96B0-D22BA1117049}];2 ;B                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{D76B46B3-243B-4FF7-8D1D-C7B64CCFA492}];2 ;C                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{11AAC24C-6612-4FE6-9973-FE5EF2EF2C43}];2 ;D                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{F0633544-507F-4C5E-A35B-A0DD95F11E63}];2 ;E                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF E <> '' THEN
                                                                                    EVALUATE(EDec,E);
                                                                                END;

                                                  Width=50 }

    { [{98E7308F-19D5-4AF6-89FB-48DB78E52124}];2 ;F                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF F <> '' THEN
                                                                                    EVALUATE(FDec,F);
                                                                                END;

                                                  Width=50 }

    { [{23B2F6EB-78F9-48FB-BC70-858F6A53A74C}];2 ;G                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{007CC416-7129-43EA-90B0-193FFE5FCA68}];2 ;H                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{8F9BF873-E7E2-450A-B9C5-33703DAFE6BE}];2 ;I                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   RunIsImportRunBln := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1100409000;;Container;
                  Name=Imp. Project Budget;
                  ContainerType=ContentArea }

      { 1100409001;1;Group  ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 1100525000;2;Field  ;
                  CaptionML=ENU=Lookup new Project No. based on old Project No.;
                  SourceExpr=UseOldProjNoBln;
                  OnValidate=BEGIN
                               IF NOT UseOldProjNoBln THEN
                                 ProjCommentCde := '';
                             END;
                              }

      { 1100525001;2;Field  ;
                  Name=ProjComCde;
                  CaptionML=ENU=Comment Code for searching Project No.;
                  SourceExpr=ProjCommentCde;
                  TableRelation="Comment Code" }

    }
  }
  CODE
  {
    VAR
      ConversionFileFormat@1100525020 : Record 11020691;
      RunIsImportRunBln@1100525019 : Boolean;
      FileNameTxt@1100525009 : Text[250];
      ConvMgt@1100525008 : Codeunit 11020212;
      DimMgt@1100525007 : Codeunit 408;
      ProjCde@1100525006 : Code[20];
      ProjCommentCde@1100525005 : Code[20];
      CommentRec@1100525004 : Record 97;
      UseOldProjNoBln@1100525003 : Boolean;
      XMLNo@1100525002 : Integer;
      MainTableID@1100525001 : Integer;
      ImpLineCounter@1100525000 : Integer;
      EDec@1100525014 : Decimal;
      FDec@1100525013 : Decimal;
      Text001@1100525011 : TextConst 'ENU=%1 %2 has Cost Type Revenues, No %3 added for Import File Line %4.';
      Text002@1100525010 : TextConst 'ENU=Amount not filled, No %1 added for Import File Line %2.';

    PROCEDURE StripData@1000000000();
    BEGIN
      A := DELCHR(A,'<>',' ');
      B := DELCHR(B,'<>',' ');
      C := DELCHR(C,'<>',' ');
      D := DELCHR(D,'<>',' ');
      G := DELCHR(G,'<>',' ');
      H := DELCHR(H,'<>',' ');
      I := DELCHR(I,'<>',' ');
    END;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    VAR
      ProjectPrincipal@1100529900 : Record 11012005;
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XMLNo);
        InsertColumnLine(XMLNo,'A',MainTableID,"Budget Line".FIELDNAME("Project No."),'Code20','OldTxt');
        InsertColumnLine(XMLNo,'B',MainTableID,"Budget Line".FIELDNAME(Element),'Code20','');
        InsertColumnLine(XMLNo,'C',MainTableID,"Budget Line".FIELDNAME("Cost Object"),'Code20','');
        InsertColumnLine(XMLNo,'D',MainTableID,"Budget Line".FIELDNAME(Description),'Text50','');
        InsertColumnLine(XMLNo,'E',MainTableID,"Budget Line".FIELDNAME(Amount),'Decimal','');
        InsertColumnLine(XMLNo,'F',MainTableID,"Budget Line".FIELDNAME(Quantity),'Decimal','');
        InsertColumnLine(XMLNo,'G',MainTableID,"Budget Line".FIELDNAME("Vendor (Trade Item)"),'Code15','');
        InsertColumnLine(XMLNo,'H',MainTableID,"Budget Line".FIELDNAME("Trade Item"),'Code20','');
        InsertColumnLine(XMLNo,'I',MainTableID,"Budget Line".FIELDNAME("Item No."),'Code20','');
      END;
    END;

    PROCEDURE ClearFields@1100529905();
    BEGIN
      CLEAR("Budget Line");

      A := '';
      B := '';
      C := '';
      D := '';
      E := '';
      F := '';
      G := '';
      H := '';
      I := '';
      EDec := 0;
      FDec := 0;
    END;

    PROCEDURE FillConversionXMLPortFields@1100409004();
    VAR
      ConversionXMLPort@1100409000 : Record 11020640;
    BEGIN
      ConversionXMLPort.GET(XMLNo);
      ConversionXMLPort."Main Table ID" := MainTableID;
      ConversionXMLPort."Page ID" := 0;
      ConversionXMLPort.MODIFY;
    END;

    BEGIN
    END.
  }
}

