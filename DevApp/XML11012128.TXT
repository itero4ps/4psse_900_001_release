OBJECT XMLport 11012128 Imp. Try-Out
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00Toolsv1;
  }
  PROPERTIES
  {
    DefaultFieldsValidation=No;
    Format/Evaluate=C/SIDE Format/Evaluate;
    PreserveWhiteSpace=Yes;
    OnInitXMLport=BEGIN
                    XMLNo := 11012128;
                    MainTableID := 11012750;
                  END;

    OnPreXMLport=BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     FillConversionXMLPortFields;
                     COMMIT;
                     ERROR('');
                   END;

                   GeneralLedgerSetup.GET;

                   ConvMgt.DeleteConComment(XMLNo);
                   ConvMgt.CreateConComment(XMLNo,STRSUBSTNO('Import File: %1.',currXMLport.FILENAME));
                   ConvMgt.CreateConComment(XMLNo,'Start');
                 END;

    OnPostXMLport=BEGIN
                    ConvMgt.CreateConComment(XMLNo,'Stop');
                    ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));
                  END;

    Format=Variable Text;
    FieldDelimiter=<None>;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{7B539476-C20A-46BC-A552-62FED55766AD}];  ;Root                ;Element ;Text     }

    { [{A667E51D-CE85-4A0D-946E-DE2CCC52ED51}];1 ;Contact             ;Element ;Table   ;
                                                  SourceTable=Table11012750;
                                                  SourceTableView=SORTING(Field10);
                                                  Import::OnBeforeInsertRecord=BEGIN
                                                                                 IF AllInputFieldsAreEmpty THEN
                                                                                   currXMLport.SKIP;

                                                                                 WITH "Try-out" DO BEGIN

                                                                                   IF NOT CreateNewNosBln THEN
                                                                                     Code := A
                                                                                   ELSE
                                                                                     Code := '';

                                                                                   INSERT(TRUE);
                                                                                   ImpLineCounter := ImpLineCounter + 1;

                                                                                   IF CreateNewNosBln THEN
                                                                                     ConvMgt.FillComment(CommentRec."Table Name"::"Try-out",Code,CommentCde,A);

                                                                                   VALIDATE(Description,C);

                                                                                   Address := D;
                                                                                   "Address 2" := E;
                                                                                   "Post Code" := F;
                                                                                   City := ConvMgt.PostCodePresent(F);
                                                                                   IF City = '' THEN
                                                                                     City := G;
                                                                                   VALIDATE("Territory Code",H);

                                                                                   IF I <> '' THEN
                                                                                     IF ConvMgt.IsSalesPurchasePersonPresent(I) THEN
                                                                                       VALIDATE("Salesperson Code",I)
                                                                                     ELSE
                                                                                       ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateFieldNotFilledCommentTxt(
                                                                                         13,
                                                                                         I,
                                                                                         FIELDCAPTION("Salesperson Code"),
                                                                                         MainTableID,
                                                                                         Code));

                                                                                   VALIDATE("Expected Starting Date",JDate);
                                                                                   VALIDATE("Expected End Date",KDate);

                                                                                   IF LInt = 1 THEN BEGIN
                                                                                     VALIDATE(Order,TRUE);
                                                                                     VALIDATE("Order Date",MDate);
                                                                                   END;

                                                                                   VALIDATE(Status,N);
                                                                                   IF O <> '' THEN
                                                                                     VALIDATE("Global Dimension 1 Code",O);

                                                                                   VALIDATE("Order Amount (LCY)",PDec);
                                                                                   VALIDATE("Expected Order Date",QDate);
                                                                                   VALIDATE("Scoring Percentage",RDec);
                                                                                   VALIDATE("Cost Estimate",SDec);

                                                                                   MODIFY(TRUE);

                                                                                   // Add contact
                                                                                   IF B <> '' THEN BEGIN
                                                                                     ContCde := ConvMgt.DetermineNewMRKCode(LookupCompContactNoBln,MRKCommentRec."Table Name"::Contact,CompContactCommentCde,B);
                                                                                     IF (ContCde <> '') AND ConvMgt.IsContactPresent(ContCde) THEN BEGIN
                                                                                       TryOutLine.VALIDATE("Try-out No.",Code);
                                                                                       TryOutLine.VALIDATE("Contact No.",ContCde);
                                                                                       TryOutLine.VALIDATE("Line No.",10000);
                                                                                       TryOutLine.INSERT(TRUE);
                                                                                     END ELSE
                                                                                     ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoRecAddedCommentTxt(
                                                                                       5050,
                                                                                       B,
                                                                                       11012755,
                                                                                       STRSUBSTNO('%1-%2',Code,B)));
                                                                                   END;
                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{3AC77EC7-9326-4B76-BA5F-EA1F70D4DA67}];2 ;A                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=20 }

    { [{1B889F9B-B9E2-4749-96B0-D22BA1117049}];2 ;B                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{D76B46B3-243B-4FF7-8D1D-C7B64CCFA492}];2 ;C                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{11AAC24C-6612-4FE6-9973-FE5EF2EF2C43}];2 ;D                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{F0633544-507F-4C5E-A35B-A0DD95F11E63}];2 ;E                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{98E7308F-19D5-4AF6-89FB-48DB78E52124}];2 ;F                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{23B2F6EB-78F9-48FB-BC70-858F6A53A74C}];2 ;G                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{007CC416-7129-43EA-90B0-193FFE5FCA68}];2 ;H                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{8F9BF873-E7E2-450A-B9C5-33703DAFE6BE}];2 ;I                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{F0890EEC-4257-4AFD-B88A-7442730D3214}];2 ;J                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF J <> '' THEN
                                                                                    EVALUATE(JDate,J);
                                                                                END;

                                                  Width=50 }

    { [{659442CF-3753-4298-9149-BE36CD412787}];2 ;K                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF K <> '' THEN
                                                                                    EVALUATE(KDate,K);
                                                                                END;

                                                  Width=50 }

    { [{575C2CA6-4C40-4A7F-A50C-2A6AD26B4DC0}];2 ;L                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF L <> '' THEN
                                                                                    EVALUATE(LInt,L);
                                                                                END;

                                                  Width=50 }

    { [{C820A9D4-97D5-4DE5-B9B8-37016A0E8AD8}];2 ;M                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF M <> '' THEN
                                                                                    EVALUATE(MDate,M);
                                                                                END;

                                                  Width=50 }

    { [{71D99CDA-4BD2-4C4F-864A-4C58FF70202A}];2 ;N                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{2B61BAAC-2E0C-4942-8622-A3E310053AB1}];2 ;O                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{3777C5E2-F12B-426C-AF23-B2EB58C9D28C}];2 ;P                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF P <> '' THEN
                                                                                    EVALUATE(PDec,P);
                                                                                END;

                                                  Width=50 }

    { [{C31814CC-4F91-40D0-8202-7EA73300B7CA}];2 ;Q                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF Q <> '' THEN
                                                                                    EVALUATE(QDate,Q);
                                                                                END;

                                                  Width=50 }

    { [{54BB1E52-B53E-46D1-AC10-187FE5FC9413}];2 ;R                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF R <> '' THEN
                                                                                    EVALUATE(RDec,R);
                                                                                END;

                                                  Width=50 }

    { [{559F7890-98B5-44AC-B8D0-4225985414EE}];2 ;S                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF S <> '' THEN
                                                                                    EVALUATE(SDec,S);
                                                                                END;

                                                  Width=50 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100409000;;Container;
                  ContainerType=ContentArea }

      { 1100409001;1;Group  ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 1100409002;2;Field  ;
                  CaptionML=ENU=New Contact Nos;
                  SourceExpr=CreateNewNosBln }

      { 1100409003;2;Field  ;
                  CaptionML=ENU=Comment Code old No;
                  SourceExpr=CommentCde;
                  TableRelation="Comment Code" }

      { 1100409004;1;Group  ;
                  CaptionML=ENU=Lookup;
                  GroupType=Group }

      { 1100409005;2;Field  ;
                  CaptionML=ENU=LookupCompContactNoBln;
                  SourceExpr=LookupCompContactNoBln }

      { 1100409006;2;Field  ;
                  CaptionML=ENU=CompContactCommentCde;
                  SourceExpr=CompContactCommentCde }

    }
  }
  CODE
  {
    VAR
      "// GENERAL"@1100525062 : Integer;
      CommentRec@1100525061 : Record 97;
      MRKCommentRec@1100525060 : Record 5061;
      ConvMgt@1100525059 : Codeunit 11020212;
      NoSerieMgt@1100525058 : Codeunit 396;
      XMLNo@1100525056 : Integer;
      MainTableID@1100525055 : Integer;
      CreateNewNosBln@1100525054 : Boolean;
      ImpLineCounter@1100525053 : Integer;
      CommentCde@1100525052 : Code[10];
      ConversionFileFormat@1100525051 : Record 11020691;
      "//"@1100525049 : Integer;
      "// THIS DATAPORT"@1100525048 : Integer;
      ContactSetupRec@1100525047 : Record 5079;
      Text001@1100525063 : TextConst 'ENU=Customer';
      Text002@1100525030 : TextConst 'ENU=Vendor';
      LookupCompContactNoBln@1100409006 : Boolean;
      CompContactCommentCde@1100409005 : Code[10];
      ContCde@1100409004 : Code[20];
      GeneralLedgerSetup@1100409003 : Record 98;
      TryOutLine@1100409002 : Record 11012755;
      JDate@1100409000 : Date;
      KDate@1100409001 : Date;
      LInt@1100409007 : Integer;
      MDate@1100409008 : Date;
      PDec@1100409009 : Decimal;
      QDate@1100409010 : Date;
      RDec@1100409011 : Decimal;
      SDec@1100409012 : Decimal;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    VAR
      Customer@1100529900 : Record 18;
      Vendor@1100529901 : Record 23;
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XMLNo);
        InsertColumnLine(XMLNo,'A',MainTableID,"Try-out".FIELDNAME(Code),'Code20','OldOrNewTxt');
        InsertColumnLine(XMLNo,'B',11012755,TryOutLine.FIELDNAME("Contact No."),'Code20','OldTxt');
        InsertColumnLine(XMLNo,'C',MainTableID,"Try-out".FIELDNAME(Description),'Text50','');
        InsertColumnLine(XMLNo,'D',MainTableID,"Try-out".FIELDNAME(Address),'Text50','');
        InsertColumnLine(XMLNo,'E',MainTableID,"Try-out".FIELDNAME("Address 2"),'Text50','');
        InsertColumnLine(XMLNo,'F',MainTableID,"Try-out".FIELDNAME("Post Code"),'Code20','');
        InsertColumnLine(XMLNo,'G',MainTableID,"Try-out".FIELDNAME(City),'Text30','');
        InsertColumnLine(XMLNo,'H',MainTableID,"Try-out".FIELDNAME("Territory Code"),'Code10','');
        InsertColumnLine(XMLNo,'I',MainTableID,"Try-out".FIELDNAME("Salesperson Code"),'Code20','');
        InsertColumnLine(XMLNo,'J',MainTableID,"Try-out".FIELDNAME("Expected Starting Date"),'Date','');
        InsertColumnLine(XMLNo,'K',MainTableID,"Try-out".FIELDNAME("Expected End Date"),'Date','');
        InsertColumnLine(XMLNo,'L',MainTableID,"Try-out".FIELDNAME(Order),'Integer','OneTrueTxt');
        InsertColumnLine(XMLNo,'M',MainTableID,"Try-out".FIELDNAME("Order Date"),'Date','');
        InsertColumnLine(XMLNo,'N',MainTableID,"Try-out".FIELDNAME(Status),'Code20','');
        InsertColumnLine(XMLNo,'O',MainTableID,"Try-out".FIELDNAME("Global Dimension 1 Code"),'Code20','');
        InsertColumnLine(XMLNo,'P',MainTableID,"Try-out".FIELDNAME("Order Amount (LCY)"),'Decimal','');
        InsertColumnLine(XMLNo,'Q',MainTableID,"Try-out".FIELDNAME("Expected Order Date"),'Date','');
        InsertColumnLine(XMLNo,'R',MainTableID,"Try-out".FIELDNAME("Scoring Percentage"),'Decimal','');
        InsertColumnLine(XMLNo,'S',MainTableID,"Try-out".FIELDNAME("Cost Estimate"),'Decimal','');
      END;
    END;

    PROCEDURE FillConversionXMLPortFields@1100409004();
    VAR
      ConversionXMLPort@1100409000 : Record 11020640;
    BEGIN
      ConversionXMLPort.GET(XMLNo);
      ConversionXMLPort."Main Table ID" := MainTableID;
      ConversionXMLPort."Page ID" := 11012751;
      ConversionXMLPort.MODIFY;
    END;

    PROCEDURE ClearFields@1100529900();
    BEGIN
      CLEAR("Try-out");
      CLEAR(TryOutLine);

      CLEAR(A);
      CLEAR(B);
      CLEAR(C);
      CLEAR(D);
      CLEAR(E);
      CLEAR(F);
      CLEAR(G);
      CLEAR(H);
      CLEAR(I);
      CLEAR(J);
      CLEAR(K);
      CLEAR(L);
      CLEAR(M);
      CLEAR(N);
      CLEAR(O);
      CLEAR(P);
      CLEAR(Q);
      CLEAR(R);
      CLEAR(S);

      CLEAR(JDate);
      CLEAR(KDate);
      CLEAR(LInt);
      CLEAR(MDate);
      CLEAR(PDec);
      CLEAR(QDate);
      CLEAR(RDec);
      CLEAR(SDec);
    END;

    LOCAL PROCEDURE AllInputFieldsAreEmpty@1100528401() : Boolean;
    BEGIN
      EXIT(
        (A = '') AND
        (B = '') AND
        (C = '') AND
        (D = '') AND
        (E = '') AND
        (F = '') AND
        (G = '') AND
        (H = '') AND
        (I = '') AND
        (J = '') AND
        (K = '') AND
        (L = '') AND
        (M = '') AND
        (N = '') AND
        (O = '') AND
        (P = '') AND
        (Q = '') AND
        (R = '') AND
        (S = ''));
    END;

    BEGIN
    END.
  }
}

