OBJECT XMLport 11012135 Imp. Service Location
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00Toolsv3;
  }
  PROPERTIES
  {
    CaptionML=ENU=Imp. Service Location;
    DefaultFieldsValidation=No;
    OnInitXMLport=BEGIN
                    XMLNo := 11012135;
                    MainTableID := 11012801;
                  END;

    OnPreXMLport=BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     FillConversionXMLPortFields;
                     COMMIT;
                     ERROR('');
                   END;

                   ConvMgt.CheckComCde(CreateNewNosBln,MainTableID,CommentCde);
                   ConvMgt.CheckComCde(UseOldCustNoBln,18,CustCommentCde);

                   ConvMgt.DeleteConComment(XMLNo);
                   ConvMgt.CreateConComment(XMLNo,STRSUBSTNO('Import File: %1.',currXMLport.FILENAME));
                   ConvMgt.CreateConComment(XMLNo,'Start');
                 END;

    OnPostXMLport=BEGIN
                    ConvMgt.CreateConComment(XMLNo,'Stop');
                    ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));
                  END;

    Format=Variable Text;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{755F5B7F-F062-4834-8364-DC4CD51C5A62}];  ;Root                ;Element ;Text     }

    { [{A7DBD164-8D3E-4F8D-B3A0-89F91BC12205}];1 ;ServiceLocation     ;Element ;Table   ;
                                                  VariableName=Service Location;
                                                  SourceTable=Table11012801;
                                                  SourceTableView=SORTING(Field1);
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              ClearFields;
                                                                            END;

                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 ContactPerson@1100409000 : Record 5050;
                                                                                 ResourceNo@1100529000 : Code[20];
                                                                               BEGIN
                                                                                 StripData;
                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 CLEAR("Service Location");

                                                                                 WITH "Service Location" DO BEGIN
                                                                                   CustCde := ConvMgt.DetermineNewCode(UseOldCustNoBln,CommentRec."Table Name"::Customer,CustCommentCde,B);

                                                                                   IF CreateNewNosBln THEN
                                                                                     "No." := ''
                                                                                   ELSE
                                                                                     "No." := A;

                                                                                   INSERT(TRUE);
                                                                                   IF CreateNewNosBln THEN
                                                                                     ConvMgt.FillComment(CommentRec."Table Name"::"Service Location","No.",CommentCde,A);

                                                                                   IF (CustCde <> '') AND ConvMgt.IsCustomerPresent(CustCde) THEN
                                                                                     VALIDATE("Customer No.",CustCde)
                                                                                   ELSE
                                                                                     ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateFieldNotFilledCommentTxt(
                                                                                       18,
                                                                                       B,
                                                                                       FIELDCAPTION("Customer No."),
                                                                                       MainTableID,
                                                                                       "No."));

                                                                                   VALIDATE(Description,D);
                                                                                   VALIDATE("Description 2",E);
                                                                                   VALIDATE(Address,F);
                                                                                   VALIDATE("Address 2",G);
                                                                                   "Post Code" := H;
                                                                                   City := I;

                                                                                   IF PostCode.GET("Post Code",City) THEN
                                                                                     "Post Code Group" := PostCode.Group;

                                                                                   NormalizePostCodeHouseNo();

                                                                                   City := ConvMgt.PostCodePresent(H);
                                                                                   IF City = '' THEN
                                                                                     City := I;

                                                                                   VALIDATE("Country/Region Code",J);
                                                                                   VALIDATE("Territory Code",K);

                                                                                   "Phone No." := L;
                                                                                   "Fax No." := M;
                                                                                   "Mobile Phone No." := W;
                                                                                   "E-Mail" := X;
                                                                                   IF Y <> '' THEN
                                                                                     "Contact Name" := Y;

                                                                                   VALIDATE("Global Dimension 1 Code",N);
                                                                                   VALIDATE(Type,O);
                                                                                   VALIDATE("Travel Distance",TDec);
                                                                                   VALIDATE("Travel Time",UDec);

                                                                                   IF P <> '' THEN
                                                                                     VALIDATE("Search Name",P);

                                                                                   IF Q <> '' THEN BEGIN
                                                                                     IF ConvMgt.IsEmployeePresent(F) THEN BEGIN
                                                                                       //VALIDATE("Preferred Employee",Q);  //DP00465.o
                                                                                       IF ConvMgt.IsEmployeeResource(Q, ResourceNo) THEN  //DP00465
                                                                                         VALIDATE("Preferred Employee OBS",ResourceNo)
                                                                                       ELSE BEGIN
                                                                                         ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateFieldNotFilledCommentTxt(
                                                                                         11229278,
                                                                                         Q,
                                                                                         FIELDCAPTION("Preferred Employee OBS"),
                                                                                         MainTableID,
                                                                                         "No."));
                                                                                       END;
                                                                                     END ELSE BEGIN
                                                                                       ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateFieldNotFilledCommentTxt(
                                                                                         5200,
                                                                                         Q,
                                                                                         FIELDCAPTION("Preferred Employee OBS"),
                                                                                         MainTableID,
                                                                                         "No."));
                                                                                     END;
                                                                                   END;

                                                                                   VALIDATE("Customer Feature",R);
                                                                                   VALIDATE("Complex Code",S);
                                                                                   VALIDATE("Travel Cost Code",V);
                                                                                   VALIDATE("Default Tender Code System (VE",C);

                                                                                   MODIFY(TRUE);

                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{5C900A9C-2240-4551-8D3B-A67A2D629F53}];2 ;A                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{5E5EE9AF-296C-4B48-B3A4-71FD1D3BDBB8}];2 ;B                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{81EF86E1-A401-49BA-998E-C96326459340}];2 ;C                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{A4D141C2-7800-4941-8428-EBDFE695445E}];2 ;D                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{A94DDF8B-AF48-4B38-93FE-471C5E7FDE8B}];2 ;E                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{7009774A-5D5B-4893-B574-E0BA7086A95E}];2 ;F                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{61A54020-5A22-4777-8499-A876D2E08C7F}];2 ;G                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{C3892DEF-6174-4845-A9BD-FA81350F4D61}];2 ;H                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{3B150350-762E-4D06-90AD-0B0A47DC3FEC}];2 ;I                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{079B7881-C2A9-4D33-BDD1-9AC71DDCA4F1}];2 ;J                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{07C9B57E-65F8-4CAD-BA26-FC1EF7C6A2F3}];2 ;K                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{8161E34D-3A46-41B0-8FDD-5E185F9C463E}];2 ;L                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{DB52902E-AEA2-49AF-B81D-A7BFE2B4BCC0}];2 ;M                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{67E04C3C-8FA3-4B7D-90B0-B4F78E627497}];2 ;N                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{02596068-D144-4C72-A2E7-1BFC838E7413}];2 ;O                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{C572BE13-0ECC-4054-926C-D162EC84BA43}];2 ;P                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{63E88C6F-614C-4576-84AC-E6ED90488EA3}];2 ;Q                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{4DE894A5-3D25-4067-B986-25835834C5D6}];2 ;R                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{64CC39BC-E41F-4BBE-992C-0F61A1F625B0}];2 ;S                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{A345EA35-9079-4219-A4A9-19ECE6D4D472}];2 ;T                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF T <> '' THEN
                                                                                    EVALUATE(TDec,T);
                                                                                END;
                                                                                 }

    { [{80227F89-07D2-4832-82F1-66D5E2AE22F9}];2 ;U                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF U <> '' THEN
                                                                                    EVALUATE(UDec,U);
                                                                                END;
                                                                                 }

    { [{A4F20BFC-579F-4D4B-9EF4-0BCEA57D7BB9}];2 ;V                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{CBF4615E-8F0E-43D6-B477-490FB7ECB247}];2 ;W                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{2557FF88-D523-45F8-BFF1-AC27FBFC903D}];2 ;X                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{E2312CA7-AEB6-4429-87DE-983E3F76BB7E}];2 ;Y                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      CaptionML=ENU=Imp. Service Location OBJ;
      OnOpenPage=BEGIN
                   CreateNewNosBln := TRUE;
                   UseOldCustNoBln := TRUE;
                   RunIsImportRunBln := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1100409010;;Container;
                  Name=Imp. Service Contract OBJ;
                  CaptionML=ENU=Imp. Service Contract OBJ;
                  ContainerType=ContentArea }

      { 1100409009;1;Group  ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 1100525001;2;Field  ;
                  CaptionML=ENU=Create new Service Location Nos;
                  SourceExpr=CreateNewNosBln;
                  OnValidate=BEGIN
                               IF NOT CreateNewNosBln THEN
                                 CommentCde := '';
                             END;
                              }

      { 1100525002;2;Field  ;
                  Name=ComCde;
                  CaptionML=ENU=Comment Code for storing old Service Location No.;
                  SourceExpr=CommentCde;
                  TableRelation="Comment Code" }

      { 1100525003;2;Field  ;
                  CaptionML=ENU=Lookup Customer No. based on old Customer No.;
                  SourceExpr=UseOldCustNoBln;
                  OnValidate=BEGIN
                               IF NOT UseOldCustNoBln THEN
                                 CustCommentCde := '';
                             END;
                              }

      { 1100525004;2;Field  ;
                  Name=CustComCde;
                  CaptionML=ENU=Comment Code for searching Customer No.;
                  SourceExpr=CustCommentCde;
                  TableRelation="Comment Code" }

    }
  }
  CODE
  {
    VAR
      "// GENERAL"@1100525046 : Integer;
      CommentRec@1100525045 : Record 97;
      ConvMgt@1100525044 : Codeunit 11020212;
      NoSerieMgt@1100525043 : Codeunit 396;
      XMLNo@1100525041 : Integer;
      MainTableID@1100525040 : Integer;
      CreateNewNosBln@1100525039 : Boolean;
      ImpLineCounter@1100525038 : Integer;
      CommentCde@1100525037 : Code[10];
      ConversionFileFormat@1100525036 : Record 11020691;
      RunIsImportRunBln@1100525035 : Boolean;
      "//"@1100525034 : Integer;
      "// THIS DATAPORT"@1100525033 : Integer;
      AddressRec@1100525032 : Record 222;
      UseOldCustNoBln@1100525031 : Boolean;
      CustCommentCde@1100525029 : Code[20];
      CustCde@1100525028 : Code[20];
      TDec@1100525008 : Decimal;
      UDec@1100525007 : Decimal;
      PostCode@1100525003 : Record 225;

    PROCEDURE StripData@1100485001();
    BEGIN
      A := DELCHR(A,'<>',' ');
      B := DELCHR(B,'<>',' ');
      C := DELCHR(C,'<>',' ');
      H := DELCHR(H,'<>',' ');
      I := DELCHR(I,'<>',' ');
      J := DELCHR(J,'<>',' ');
      K := DELCHR(K,'<>',' ');
      P := DELCHR(P,'<>',' ');
      Q := DELCHR(Q,'<>',' ');
      R := DELCHR(R,'<>',' ');
      S := DELCHR(S,'<>',' ');
      Y := DELCHR(Y,'<>',' ');
    END;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XMLNo);
        InsertColumnLine(XMLNo,'A',MainTableID,"Service Location".FIELDNAME("No."),'Code20','OldOrNewTxt');
        InsertColumnLine(XMLNo,'B',MainTableID,"Service Location".FIELDNAME("Customer No."),'Code20','OldTxt');
        InsertColumnLine(XMLNo,'C',MainTableID,"Service Location".FIELDNAME("Default Tender Code System (VE"),'Code10','');
        InsertColumnLine(XMLNo,'D',MainTableID,"Service Location".FIELDNAME(Description),'Text50','');
        InsertColumnLine(XMLNo,'E',MainTableID,"Service Location".FIELDNAME("Description 2"),'Text50','');
        InsertColumnLine(XMLNo,'F',MainTableID,"Service Location".FIELDNAME(Address),'Text50','');
        InsertColumnLine(XMLNo,'G',MainTableID,"Service Location".FIELDNAME("Address 2"),'Text50','');
        InsertColumnLine(XMLNo,'H',MainTableID,"Service Location".FIELDNAME("Post Code"),'Code20','');
        InsertColumnLine(XMLNo,'I',MainTableID,"Service Location".FIELDNAME(City),'Text30','');
        InsertColumnLine(XMLNo,'J',MainTableID,"Service Location".FIELDNAME("Country/Region Code"),'Code10','');
        InsertColumnLine(XMLNo,'K',MainTableID,"Service Location".FIELDNAME("Territory Code"),'Code10','');
        InsertColumnLine(XMLNo,'L',MainTableID,"Service Location".FIELDNAME("Phone No."),'Text30','');
        InsertColumnLine(XMLNo,'M',MainTableID,"Service Location".FIELDNAME("Fax No."),'Text30','');
        InsertColumnLine(XMLNo,'N',MainTableID,"Service Location".FIELDNAME("Global Dimension 1 Code"),'Code20','');
        InsertColumnLine(XMLNo,'O',MainTableID,"Service Location".FIELDNAME(Type),'Code10','');
        InsertColumnLine(XMLNo,'P',MainTableID,"Service Location".FIELDNAME("Search Name"),'Code50','');
        InsertColumnLine(XMLNo,'Q',MainTableID,"Service Location".FIELDNAME("Preferred Employee OBS"),'Code20','');
        InsertColumnLine(XMLNo,'R',MainTableID,"Service Location".FIELDNAME("Customer Feature"),'Text30','');
        InsertColumnLine(XMLNo,'S',MainTableID,"Service Location".FIELDNAME("Complex Code"),'Code10','');
        InsertColumnLine(XMLNo,'T',MainTableID,"Service Location".FIELDNAME("Travel Distance"),'Decimal','');
        InsertColumnLine(XMLNo,'U',MainTableID,"Service Location".FIELDNAME("Travel Time"),'Decimal','');
        InsertColumnLine(XMLNo,'V',MainTableID,"Service Location".FIELDNAME("Travel Cost Code"),'Code10','');
        InsertColumnLine(XMLNo,'W',MainTableID,"Service Location".FIELDNAME("Mobile Phone No."),'Text30','');
        InsertColumnLine(XMLNo,'X',MainTableID,"Service Location".FIELDNAME("E-Mail"),'Text80','');
        InsertColumnLine(XMLNo,'Y',MainTableID,"Service Location".FIELDNAME("Contact Name"),'Text50','');
      END;
    END;

    PROCEDURE ClearFields@1100529900();
    BEGIN
      CLEAR("Service Location");
      CLEAR(PostCode);

      A := '';
      B := '';
      C := '';
      D := '';
      E := '';
      F := '';
      G := '';
      H := '';
      I := '';
      J := '';
      K := '';
      L := '';
      M := '';
      N := '';
      O := '';
      P := '';
      Q := '';
      R := '';
      S := '';
      T := '';
      U := '';
      V := '';
      W := '';
      X := '';
      Y := '';
      TDec := 0;
      UDec := 0;
    END;

    PROCEDURE FillConversionXMLPortFields@1100409004();
    VAR
      ConversionXMLPort@1100409000 : Record 11020640;
    BEGIN
      ConversionXMLPort.GET(XMLNo);
      ConversionXMLPort."Main Table ID" := MainTableID;
      ConversionXMLPort."Page ID" := 11012802;
      ConversionXMLPort.MODIFY;
    END;

    BEGIN
    {
      // Old No.'s are stored in Comment Table (97), marked with [CommentCde].
      // Object No is stored in [XMLNO]. In case of customisation (copy of dataport) change in OnInitDataport;
      //
      // Please use [AddConversionFileFormatLine] in case Import file format is changed.
    }
    END.
  }
}

