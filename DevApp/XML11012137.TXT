OBJECT XMLport 11012137 Imp. Contract Object
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00Toolsv1;
  }
  PROPERTIES
  {
    CaptionML=ENU=Imp. Contract Object;
    DefaultFieldsValidation=No;
    OnInitXMLport=BEGIN
                    XMLNo := 11012137;
                    MainTableID := 11071702;
                  END;

    OnPreXMLport=BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     FillConversionXMLPortFields;
                     COMMIT;
                     ERROR('');
                   END;

                   ConvMgt.CheckComCde(UseOldContNoBln,11012812,ContCommentCde);
                   ConvMgt.CheckComCde(UseOldObjNoBln,11071691,ObjCommentCde);

                   ConvMgt.DeleteConComment(XMLNo);
                   ConvMgt.CreateConComment(XMLNo,STRSUBSTNO('Import File: %1.',currXMLport.FILENAME));
                   ConvMgt.CreateConComment(XMLNo,'Start');
                 END;

    OnPostXMLport=BEGIN
                    ConvMgt.CreateConComment(XMLNo,'Stop');
                    ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));
                  END;

    Format=Variable Text;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{755F5B7F-F062-4834-8364-DC4CD51C5A62}];  ;Root                ;Element ;Text     }

    { [{A7DBD164-8D3E-4F8D-B3A0-89F91BC12205}];1 ;ContractObject      ;Element ;Table   ;
                                                  VariableName=Contract Object;
                                                  SourceTable=Table11071702;
                                                  SourceTableView=SORTING(Field10,Field20);
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              ClearFields;
                                                                            END;

                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 ContactPerson@1100409000 : Record 5050;
                                                                               BEGIN
                                                                                 StripData;
                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 CLEAR("Contract Object");

                                                                                 WITH "Contract Object" DO BEGIN
                                                                                   ContCde := ConvMgt.DetermineNewCode(UseOldContNoBln,CommentRec."Table Name"::"Service Contract",ContCommentCde,A);
                                                                                   ObjCde := ConvMgt.DetermineNewCode(UseOldObjNoBln,CommentRec."Table Name"::ServObject,ObjCommentCde,B);

                                                                                   IF ConvMgt.IsServiceContractPresent(ContCde) THEN BEGIN
                                                                                     IF ConvMgt.IsObjectPresent(ObjCde) THEN BEGIN

                                                                                       VALIDATE("Service Contract No.",ContCde);
                                                                                       VALIDATE("Service Object No.",ObjCde);

                                                                                       INSERT(TRUE);
                                                                                       ImpLineCounter := ImpLineCounter + 1;

                                                                                       IF C <> '' THEN
                                                                                         VALIDATE("Service Package",C);
                                                                                       IF DDate <> 0D THEN
                                                                                         VALIDATE("Starting Date",DDate);
                                                                                       IF EDate <> 0D THEN
                                                                                         VALIDATE("Ending Date",EDate);
                                                                                       IF FDate <> 0D THEN
                                                                                         VALIDATE("Invoice From",FDate);
                                                                                       IF GDate <> 0D THEN
                                                                                         VALIDATE("Invoiced Until",GDate);
                                                                                       IF HDate <> 0D THEN
                                                                                         VALIDATE("Last Invoiced Until",HDate);

                                                                                       IF IDec <> 0 THEN
                                                                                         VALIDATE("Price Agreement",IDec);

                                                                                       IF J <> '' THEN
                                                                                         VALIDATE("Customer Object Group",J);

                                                                                       MODIFY(TRUE);
                                                                                     END ELSE
                                                                                       ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoRecAddedCommentTxt(
                                                                                        11071691,
                                                                                        B,
                                                                                        MainTableID,
                                                                                        STRSUBSTNO('%1-%2',A,B)));
                                                                                   END ELSE
                                                                                     ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoRecAddedCommentTxt(
                                                                                      11012812,
                                                                                      A,
                                                                                      MainTableID,
                                                                                      STRSUBSTNO('%1-%2',A,B)));
                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{5C900A9C-2240-4551-8D3B-A67A2D629F53}];2 ;A                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{5E5EE9AF-296C-4B48-B3A4-71FD1D3BDBB8}];2 ;B                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{81EF86E1-A401-49BA-998E-C96326459340}];2 ;C                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{A4D141C2-7800-4941-8428-EBDFE695445E}];2 ;D                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF D <> '' THEN
                                                                                    EVALUATE(DDate,D);
                                                                                END;
                                                                                 }

    { [{A94DDF8B-AF48-4B38-93FE-471C5E7FDE8B}];2 ;E                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF E <> '' THEN
                                                                                    EVALUATE(EDate,E);
                                                                                END;
                                                                                 }

    { [{7009774A-5D5B-4893-B574-E0BA7086A95E}];2 ;F                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF F <> '' THEN
                                                                                    EVALUATE(FDate,F);
                                                                                END;
                                                                                 }

    { [{61A54020-5A22-4777-8499-A876D2E08C7F}];2 ;G                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF G <> '' THEN
                                                                                    EVALUATE(GDate,G);
                                                                                END;
                                                                                 }

    { [{C3892DEF-6174-4845-A9BD-FA81350F4D61}];2 ;H                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF H <> '' THEN
                                                                                    EVALUATE(HDate,H);
                                                                                END;
                                                                                 }

    { [{3B150350-762E-4D06-90AD-0B0A47DC3FEC}];2 ;I                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF I <> '' THEN
                                                                                    EVALUATE(IDec,I);
                                                                                END;
                                                                                 }

    { [{079B7881-C2A9-4D33-BDD1-9AC71DDCA4F1}];2 ;J                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      CaptionML=ENU=Imp. Contract Object;
      OnOpenPage=BEGIN
                   RunIsImportRunBln := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1100409010;;Container;
                  Name=Imp. Contract Object;
                  CaptionML=ENU=Imp. Contract Object;
                  ContainerType=ContentArea }

      { 1100409009;1;Group  ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 1100525001;2;Field  ;
                  CaptionML=ENU=Lookup new Service Contract No. based on old Contract No.;
                  SourceExpr=UseOldContNoBln;
                  OnValidate=BEGIN
                               IF NOT UseOldContNoBln THEN
                                 ContCommentCde := '';
                             END;
                              }

      { 1100525002;2;Field  ;
                  Name=ContComCde;
                  CaptionML=ENU=Comment Code for searching Service Location No.;
                  SourceExpr=ContCommentCde;
                  TableRelation="Comment Code" }

      { 1100525003;2;Field  ;
                  CaptionML=ENU=Lookup new Object based on old No.;
                  SourceExpr=UseOldObjNoBln;
                  OnValidate=BEGIN

                               IF NOT UseOldObjNoBln THEN
                                 ObjCommentCde := '';
                             END;
                              }

      { 1100525004;2;Field  ;
                  Name=ObjCde;
                  CaptionML=ENU=Comment Code for searching Standard Object No.;
                  SourceExpr=ObjCommentCde;
                  TableRelation="Comment Code" }

    }
  }
  CODE
  {
    VAR
      "// GENERAL"@1100525028 : Integer;
      CommentRec@1100525027 : Record 97;
      ConvMgt@1100525026 : Codeunit 11020212;
      NoSerieMgt@1100525025 : Codeunit 396;
      XMLNo@1100525023 : Integer;
      MainTableID@1100525022 : Integer;
      ImpLineCounter@1100525021 : Integer;
      ConversionFileFormat@1100525020 : Record 11020691;
      RunIsImportRunBln@1100525019 : Boolean;
      "//"@1100525018 : Integer;
      "// THIS DATAPORT"@1100525017 : Integer;
      UseOldObjNoBln@1100525015 : Boolean;
      UseOldContNoBln@1100525014 : Boolean;
      ObjCommentCde@1100525013 : Code[20];
      ContCommentCde@1100525012 : Code[20];
      ObjCde@1100525011 : Code[20];
      ContCde@1100525010 : Code[20];
      DDate@1100525006 : Date;
      EDate@1100525005 : Date;
      FDate@1100525004 : Date;
      GDate@1100525003 : Date;
      HDate@1100525002 : Date;
      IDec@1100525001 : Decimal;

    PROCEDURE StripData@1100485001();
    BEGIN
      A := DELCHR(A,'<>',' ');
      B := DELCHR(B,'<>',' ');
      C := DELCHR(C,'<>',' ');
    END;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XMLNo);
        InsertColumnLine(XMLNo,'A',MainTableID,"Contract Object".FIELDNAME("Service Contract No."),'Code20','OldTxt');
        InsertColumnLine(XMLNo,'B',MainTableID,"Contract Object".FIELDNAME("Service Object No."),'Code20','OldTxt');
        InsertColumnLine(XMLNo,'C',MainTableID,"Contract Object".FIELDNAME("Service Package"),'Code20','');
        InsertColumnLine(XMLNo,'D',MainTableID,"Contract Object".FIELDNAME("Starting Date"),'Date','');
        InsertColumnLine(XMLNo,'E',MainTableID,"Contract Object".FIELDNAME("Ending Date"),'Date','');
        InsertColumnLine(XMLNo,'F',MainTableID,"Contract Object".FIELDNAME("Invoice From"),'Date','');
        InsertColumnLine(XMLNo,'G',MainTableID,"Contract Object".FIELDNAME("Invoiced Until"),'Date','');
        InsertColumnLine(XMLNo,'H',MainTableID,"Contract Object".FIELDNAME("Last Invoiced Until"),'Date','');
        InsertColumnLine(XMLNo,'I',MainTableID,"Contract Object".FIELDNAME("Price Agreement"),'Decimal','');
        InsertColumnLine(XMLNo,'J',MainTableID,"Contract Object".FIELDNAME("Customer Object Group"),'Code10','');
      END;
    END;

    PROCEDURE ClearFields@1100529900();
    BEGIN
      CLEAR("Contract Object");
      ObjCde := '';
      ContCde := '';

      A := '';
      B := '';
      C := '';
      D := '';
      E := '';
      F := '';
      G := '';
      H := '';
      I := '';
      J := '';
      DDate := 0D;
      EDate := 0D;
      FDate := 0D;
      GDate := 0D;
      HDate := 0D;
      IDec := 0;
    END;

    PROCEDURE FillConversionXMLPortFields@1100409004();
    VAR
      ConversionXMLPort@1100409000 : Record 11020640;
    BEGIN
      ConversionXMLPort.GET(XMLNo);
      ConversionXMLPort."Main Table ID" := MainTableID;
      ConversionXMLPort."Page ID" := 11125169;
      ConversionXMLPort.MODIFY;
    END;

    BEGIN
    {
      // Old No.'s are stored in Comment Table (97), marked with [CommentCde].
      // Object No is stored in [XMLNO]. In case of customisation (copy of dataport) change in OnInitDataport;
      //
      // Please use [AddConversionFileFormatLine] in case Import file format is changed.
    }
    END.
  }
}

