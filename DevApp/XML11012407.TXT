OBJECT XMLport 11012407 Imp. Maint. Sch. Version Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS9.00Toolsv2;
  }
  PROPERTIES
  {
    CaptionML=ENU=Imp. Maint. Scheme Version Line;
    DefaultFieldsValidation=No;
    OnInitXMLport=BEGIN
                    XMLNo := 11012407;
                    MainTableID := 11071744;
                  END;

    OnPreXMLport=BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     FillConversionXMLPortFields;
                     COMMIT;
                     ERROR('');
                   END;

                   GeneralLedgerSetup.GET;

                   ConvMgt.DeleteConComment(XMLNo);
                   ConvMgt.CreateConComment(XMLNo,STRSUBSTNO('Import File: %1.',currXMLport.FILENAME));
                   ConvMgt.CreateConComment(XMLNo,'Start');
                 END;

    OnPostXMLport=BEGIN
                    ConvMgt.CreateConComment(XMLNo,'Stop');
                    ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));
                  END;

    Format=Variable Text;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{755F5B7F-F062-4834-8364-DC4CD51C5A62}];  ;Root                ;Element ;Text     }

    { [{A7DBD164-8D3E-4F8D-B3A0-89F91BC12205}];1 ;Maint.SchemeVersionLine;Element;Table ;
                                                  SourceTable=Table11071744;
                                                  SourceTableView=SORTING(Field5,Field10,Field300,Field210,Field20);
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              ClearFields;
                                                                            END;

                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 ContractObjectMaintenance@1100525002 : Record 11071692;
                                                                                 MaintenanceSchemeVersion@1100525001 : Record 11071743;
                                                                                 DimValRec@1100525000 : Record 349;
                                                                               BEGIN
                                                                                 StripData;
                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 CLEAR("Maint. Scheme Version Line");

                                                                                 WITH "Maint. Scheme Version Line" DO BEGIN
                                                                                   IF NOT StdMaintScheme.GET(A) THEN BEGIN
                                                                                     ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoRecAddedCommentTxt(
                                                                                       11071745,
                                                                                       A,
                                                                                       MainTableID,
                                                                                       A));
                                                                                     currXMLport.SKIP;
                                                                                   END;

                                                                                   IF B <> '' THEN BEGIN
                                                                                     ObjectCde := ConvMgt.DetermineNewCode(LookupObjectBln,CommentRec."Table Name"::ServObject,ObjCommentCde,B);
                                                                                     IF ConvMgt.IsObjectPresent(ObjectCde) THEN
                                                                                       VALIDATE("Line Type","Maint. Scheme Version Line"."Line Type"::Object)
                                                                                     ELSE BEGIN
                                                                                       ConvMgt.CreateConComment(XMLNo,ConvMgt.CreateNoRecAddedCommentTxt(
                                                                                         11071691,
                                                                                         B,
                                                                                         MainTableID,
                                                                                         STRSUBSTNO('%1 %2',A,B)));
                                                                                         currXMLport.SKIP;
                                                                                     END;
                                                                                   END ELSE
                                                                                     VALIDATE("Line Type","Maint. Scheme Version Line"."Line Type"::"Maintenance Scheme");

                                                                                   IF NOT ConvMgt.MaintSchemeVersionExist("Line Type",A,ObjectCde,DMY2DATE(1,1,DATE2DMY(TODAY,3))) THEN
                                                                                     ConvMgt.AddMaintSchemeVersion("Line Type",A,ObjectCde,DMY2DATE(1,1,DATE2DMY(TODAY,3)));

                                                                                   IF B <> '' THEN BEGIN
                                                                                     "Type Code" := ObjectCde;
                                                                                     "Belongs to Scheme" := A;
                                                                                   END ELSE
                                                                                     "Type Code" := A;

                                                                                   "Index Date" := DMY2DATE(1,1,DATE2DMY(TODAY,3));
                                                                                   ImpLineCounter := ImpLineCounter + 1;
                                                                                   VALIDATE("Line No.",ImpLineCounter * 10000);
                                                                                   INSERT(TRUE);
                                                                                   IF DimValRec.GET(GeneralLedgerSetup."Global Dimension 2 Code",G) THEN BEGIN
                                                                                     VALIDATE("Cost Type",DimValRec."Cost Type");
                                                                                     VALIDATE("Cost Object",G);
                                                                                   END;
                                                                                   VALIDATE(Description,C);
                                                                                   VALIDATE(Quantity,DDec);
                                                                                   VALIDATE("Unit of Measure",E);
                                                                                   IF "Cost Type" = "Maint. Scheme Version Line"."Cost Type"::Labor THEN BEGIN
                                                                                     VALIDATE(Norm,FDec);
                                                                                     VALIDATE("Rate Code",H);
                                                                                   END ELSE
                                                                                     VALIDATE("Cost Price",IDec);
                                                                                   IF J <> '' THEN
                                                                                     VALIDATE("Cost Component",J);
                                                                                   MODIFY(TRUE);
                                                                                   CalcTotals;
                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{5C900A9C-2240-4551-8D3B-A67A2D629F53}];2 ;A                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{5E5EE9AF-296C-4B48-B3A4-71FD1D3BDBB8}];2 ;B                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{81EF86E1-A401-49BA-998E-C96326459340}];2 ;C                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{A4D141C2-7800-4941-8428-EBDFE695445E}];2 ;D                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF D <> '' THEN
                                                                                    EVALUATE(DDec,D);
                                                                                END;
                                                                                 }

    { [{A94DDF8B-AF48-4B38-93FE-471C5E7FDE8B}];2 ;E                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{7009774A-5D5B-4893-B574-E0BA7086A95E}];2 ;F                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF F <> '' THEN
                                                                                    EVALUATE(FDec,F);
                                                                                END;
                                                                                 }

    { [{61A54020-5A22-4777-8499-A876D2E08C7F}];2 ;G                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{C3892DEF-6174-4845-A9BD-FA81350F4D61}];2 ;H                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{1BABEBC8-FB98-4984-8806-4C0C9FC6B00A}];2 ;I                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF I <> '' THEN
                                                                                    EVALUATE(IDec,I);
                                                                                END;
                                                                                 }

    { [{46EE150A-26E7-4043-80C7-B2163E49DFAB}];2 ;J                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      CaptionML=ENU=Imp. Service Location OBJ;
      OnOpenPage=BEGIN
                   RunIsImportRunBln := TRUE;
                   LookupObjectBln := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1100409010;;Container;
                  Name=Imp. Maint. Sch. Vers Line ROM;
                  ContainerType=ContentArea }

      { 1100409009;1;Group  ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 1100525000;2;Field  ;
                  CaptionML=ENU=Lookup new Object based on old No.;
                  SourceExpr=LookupObjectBln;
                  OnValidate=BEGIN
                               IF NOT LookupObjectBln THEN
                                 ObjCommentCde := '';
                             END;
                              }

      { 1100525001;2;Field  ;
                  Name=ObjCde;
                  CaptionML=ENU=Comment Code for searching Standard Object No.;
                  SourceExpr=ObjCommentCde;
                  TableRelation="Comment Code" }

    }
  }
  CODE
  {
    VAR
      "// GENERAL"@1100525031 : Integer;
      CommentRec@1100525030 : Record 97;
      ConvMgt@1100525029 : Codeunit 11020212;
      NoSerieMgt@1100525025 : Codeunit 396;
      XMLNo@1100525023 : Integer;
      MainTableID@1100525022 : Integer;
      ImpLineCounter@1100525021 : Integer;
      CommentCde@1100525020 : Code[10];
      ConversionFileFormat@1100525019 : Record 11020691;
      RunIsImportRunBln@1100525018 : Boolean;
      "//"@1100525017 : Integer;
      "// THIS DATAPORT"@1100525016 : Integer;
      DDec@1100525012 : Decimal;
      FDec@1100525010 : Decimal;
      IDec@1100525007 : Decimal;
      ContractObject@1100525005 : Record 11071702;
      StdMaintScheme@1100525004 : Record 11071745;
      GeneralLedgerSetup@1100525003 : Record 98;
      ObjectCde@1100525002 : Code[20];
      LookupObjectBln@1100525001 : Boolean;
      ObjCommentCde@1100525000 : Code[20];
      Text001@1100525008 : TextConst 'ENU=In case of leval Maintenance Scheme and level Object';
      Text002@1100525006 : TextConst 'ENU=In case of leval Object';

    PROCEDURE StripData@1100485001();
    BEGIN
      A := DELCHR(A,'<>',' ');
      B := DELCHR(B,'<>',' ');
      C := DELCHR(C,'<>',' ');
    END;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    VAR
      ProjectPrincipal@1100529900 : Record 11012005;
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XMLNo);
        InsertColumnLine(XMLNo,'A',MainTableID,"Maint. Scheme Version Line".FIELDNAME(Code),'Code20',Text001);
        InsertColumnLine(XMLNo,'B',MainTableID,"Maint. Scheme Version Line".FIELDNAME(Code),'Code20',Text002);
        InsertColumnLine(XMLNo,'C',MainTableID,"Maint. Scheme Version Line".FIELDNAME(Description),'Text50','');
        InsertColumnLine(XMLNo,'D',MainTableID,"Maint. Scheme Version Line".FIELDNAME(Quantity),'Decimal','');
        InsertColumnLine(XMLNo,'E',MainTableID,"Maint. Scheme Version Line".FIELDNAME("Unit of Measure"),'Code10','');
        InsertColumnLine(XMLNo,'F',MainTableID,"Maint. Scheme Version Line".FIELDNAME(Norm),'Decimal','');
        InsertColumnLine(XMLNo,'G',MainTableID,"Maint. Scheme Version Line".FIELDNAME("Cost Object"),'Code20','');
        InsertColumnLine(XMLNo,'H',MainTableID,"Maint. Scheme Version Line".FIELDNAME("Rate Code"),'Code10','');
        InsertColumnLine(XMLNo,'I',MainTableID,"Maint. Scheme Version Line".FIELDNAME("Cost Price"),'Decimal','');
        InsertColumnLine(XMLNo,'J',MainTableID,"Maint. Scheme Version Line".FIELDNAME("Cost Component"),'Code20','');
      END;
    END;

    PROCEDURE ClearFields@1210190000();
    BEGIN
      CLEAR("Maint. Scheme Version Line");
      CLEAR(ContractObject);
      A := '';
      B := '';
      CLEAR(C);
      CLEAR(D);
      CLEAR(E);
      CLEAR(F);
      CLEAR(G);
      CLEAR(H);
      CLEAR(I);
      CLEAR(J);
    END;

    PROCEDURE FillConversionXMLPortFields@1100409004();
    VAR
      ConversionXMLPort@1100409000 : Record 11020640;
    BEGIN
      ConversionXMLPort.GET(XMLNo);
      ConversionXMLPort."Main Table ID" := MainTableID;
      ConversionXMLPort."Page ID" := 11125249;
      ConversionXMLPort.MODIFY;
    END;

    BEGIN
    {
      // Old No.'s are stored in Comment Table (97), marked with [CommentCde].
      // Object No is stored in [XMLNO]. In case of customisation (copy of dataport) change in OnInitDataport;
      //
      // Please use [AddConversionFileFormatLine] in case Import file format is changed.
    }
    END.
  }
}

