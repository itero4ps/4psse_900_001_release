OBJECT XMLport 78703 Perconec Export Time Entries-2
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSFI-CUSTSPEC-PR;
  }
  PROPERTIES
  {
    Direction=Export;
    TextEncoding=UTF-8;
    OnPreXMLport=BEGIN
                   BatchCode := FORMAT(CURRENTDATETIME);
                   FillTempTable;
                 END;

    Format=Variable Text;
    FieldDelimiter=<None>;
    FieldSeparator=[;];
    TableSeparator=<NewLine>;
    UseRequestPage=Yes;
  }
  ELEMENTS
  {
    { [{4DF9DB1D-F9FA-4543-8CFB-BA231DCB8523}];  ;DimensionFile       ;Element ;Text     }

    { [{59A6739F-A886-491D-8CD4-11E0BBACBBDF}];1 ;DimensionValue      ;Element ;Table   ;
                                                  ReqFilterFields=Field505,Field42,Field11128004;
                                                  SourceTable=Table11012085;
                                                  SourceTableView=SORTING(Field10,Field20,Field30,Field40)
                                                                  ORDER(Ascending);
                                                  Temporary=Yes }

    { [{DA2DF681-0C2E-4E67-902C-15A7CE562D3E}];2 ;PersonalNumber      ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Posted Hour Line::Employee No. }

    { [{7B4F5D7E-9E93-431D-9E5D-89523775876F}];2 ;Name                ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Posted Hour Line::Name }

    { [{2B9D6AAA-B1FC-4EBA-9F24-CD6E7FEFCA64}];2 ;SalaryItem          ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Posted Hour Line::Wage Component }

    { [{97191980-64B3-4AB8-A5BB-5E69E0329E22}];2 ;Hours               ;Element ;Field   ;
                                                  DataType=Decimal;
                                                  SourceField=Posted Hour Line::Monday }

    { [{7E872404-0C31-46BF-B558-2E2CF2FE508D}];2 ;Startingdate        ;Element ;Field   ;
                                                  DataType=Date;
                                                  SourceField=Posted Hour Line::Actual date of line }

    { [{F039F759-ED60-4200-80E2-049BDF96572E}];2 ;EndingDate          ;Element ;Field   ;
                                                  DataType=Date;
                                                  SourceField=Posted Hour Line::Actual date of line }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnInit=BEGIN
               ExportedFilter := TRUE;
             END;

    }
    CONTROLS
    {
      { 1000000003;0;Container;
                  ContainerType=ContentArea }

      { 1000000002;1;Group  ;
                  CaptionML=ENU=Options;
                  Visible=FALSE;
                  Enabled=FALSE;
                  Editable=FALSE }

      { 1000000001;2;Field  ;
                  CaptionML=ENU=Posting Date Range;
                  SourceExpr=PostingDateFilter }

      { 1000000004;2;Field  ;
                  CaptionML=ENU=Actual Date Range;
                  SourceExpr=ActualDateFilter }

      { 1000000000;2;Field  ;
                  CaptionML=ENU=Only Exported;
                  SourceExpr=ExportedFilter;
                  Visible=FALSE }

    }
  }
  CODE
  {
    VAR
      ExportedFilter@1000000000 : Boolean;
      PostingDateFilter@1000000001 : Date;
      ActualDateFilter@1000000002 : Date;
      BatchCode@1000000003 : Code[20];

    LOCAL PROCEDURE FillTempTable@1000000000();
    VAR
      PostedHourHeader@1000000000 : Record 11012085;
      recDate@1000000001 : Record 2000000007;
      FirstDateString@1000000002 : TextConst 'ENU=01.01.%1';
      LastDateString@1000000003 : TextConst 'ENU=31.12.%1';
      recDateLoop@1000000004 : Record 2000000007;
      lineCounter@1000000005 : Integer;
      Employee@1000000006 : Record 5200;
      name@1000000007 : Text;
      WageComponent@1000000008 : Record 11012014;
      WageComponentLookupCode@1000000009 : Code[10];
      ExportLineNo@1000000011 : Integer;
    BEGIN
      //PostedHourHeade
      //PostedHourHeader.SETRANGE(Year,2016);
      //PostedHourHeader.SETFILTER("Wage Component",'<>''''');
      //IF ExportedFilter=TRUE THEN BEGIN
      //  PostedHourHeader.SETRANGE(Exported,FALSE);
      //END;

      //IF PostingDateFilter <> 0D THEN BEGIN
      //END;

      //IF ActualDateFilter <> 0D THEN BEGIN
      //END;
      "Posted Hour Line".COPYFILTER("Posting Date",PostedHourHeader."Posting Date");
      "Posted Hour Line".COPYFILTER(Exported,PostedHourHeader.Exported);
      //MESSAGE(FORMAT(PostedHourHeader.GETFILTERS));
      PostedHourHeader.SETFILTER("Total Line",'<>0');

      IF PostedHourHeader.FINDFIRST THEN BEGIN
        ExportLineNo := GetLastLineNo;
        REPEAT
          //MESSAGE(FORMAT(PostedHourHeader);
          recDate.RESET;
          recDate.SETRANGE("Period Type",recDate."Period Type"::Week);
          recDate.SETRANGE("Period No.",PostedHourHeader.Week);
          //recDate.SETRANGE(ye
          recDate.SETFILTER("Period Start",'>='+FORMAT(DMY2DATE(1,1,PostedHourHeader.Year)));
          //recDate.SETFILTER("Period End",STRSUBSTNO(LastDateString,PostedHourHeader.Year));
          //PostedHourHeader.YearDateTime := CREATEDATETIME(DMY2DATE(1,1,2016),0T);// DateTime.DateTime('2',);
          IF recDate.FINDFIRST THEN BEGIN
            //REPEAT
            recDateLoop.RESET;
            recDateLoop.SETRANGE("Period Start",recDate."Period Start",recDate."Period End");
            recDateLoop.SETRANGE("Period Type",recDateLoop."Period Type"::Date);
            //lineCounter :=0;
            //MESSAGE
            IF recDateLoop.FINDFIRST THEN BEGIN
              REPEAT
                "Posted Hour Line".INIT;
                "Posted Hour Line".COPY(PostedHourHeader);
                //recDateLoop.CALCFIELDS("Period Start");

                //"Posted Hour Line"."Posting Date" := recDateLoop."Period Start";
                //"Posted Hour Line"."Posting Date" := recDateLoop."Period Start";
                "Posted Hour Line"."Line No." := lineCounter;
                name := '';
                IF Employee.GET(PostedHourHeader."Employee No.") THEN BEGIN
                  name := Employee."Last Name"+' '+ Employee."First Name";
                END ELSE BEGIN
                  name := '';
                END;
                "Posted Hour Line".Name := name;
                //MESSAGE(FORMAT(recDateLoop."Period Start"));
                CASE recDateLoop."Period Name" OF
                  'Monday': BEGIN
                    "Posted Hour Line".Monday := PostedHourHeader.Monday;
                  END;
                  'Tuesday': BEGIN
                     "Posted Hour Line".Monday := PostedHourHeader.Tuesday;
                  END;
                  'Wednesday': BEGIN
                     "Posted Hour Line".Monday := PostedHourHeader.Wednesday;
                  END;
                  'Thusday': BEGIN
                     "Posted Hour Line".Monday := PostedHourHeader.Thursday;
                  END;
                  'Friday': BEGIN
                     "Posted Hour Line".Monday := PostedHourHeader.Friday;
                  END;
                  'Saturday': BEGIN
                    "Posted Hour Line".Monday := PostedHourHeader.Saturday;
                  END;
                  'Sunday': BEGIN
                     "Posted Hour Line".Monday := PostedHourHeader.Sunday;
                  END;
                END;

                IF PostedHourHeader."Wage Component"='' THEN BEGIN
                  WageComponentLookupCode := PostedHourHeader."Wage Component";
                END ELSE BEGIN
                  WageComponentLookupCode := PostedHourHeader."Cost Code";
                END;

                IF WageComponent.GET(WageComponentLookupCode) THEN BEGIN
                   "Posted Hour Line"."Wage Component" := WageComponent."Raet/Perman Code";
                END;

                "Posted Hour Line".TESTFIELD("Wage Component");

                "Posted Hour Line"."Actual date of line" := recDateLoop."Period Start";

                IF ("Posted Hour Line"."Wage Component"<>'') AND ("Posted Hour Line".Monday<>0) THEN BEGIN
                  "Posted Hour Line"."Line No." := lineCounter;
                  //MESSAGE(FORMAT("Posted Hour Line"."Line No."));
                  "Posted Hour Line"."Document No." := BatchCode;
                  IF "Posted Hour Line".INSERT(TRUE) THEN BEGIN
                    lineCounter := lineCounter+1;
                    CreateExportedLine(PostedHourHeader,BatchCode,ExportLineNo);
                    ExportLineNo := ExportLineNo +1;
                    //PostedHourHeader.
                  //  "Posted Hour Line"
                  END;
                END;
              UNTIL recDateLoop.NEXT=0;
            END;
          END;
        UNTIL PostedHourHeader.NEXT=0;
      END;
    END;

    LOCAL PROCEDURE GetLastLineNo@1000000001() : Integer;
    VAR
      ExportedHour@1000000000 : Record 11012041;
    BEGIN
      //IF ExportedHour.COUNT = 0 THEN
      //  EXIT(1);


      IF ExportedHour.FINDLAST THEN
       EXIT(ExportedHour."Line No."+1);
    END;

    LOCAL PROCEDURE CreateExportedLine@1000000019(VAR PostedHourLine@1000000001 : Record 11012085;DocNo@1000000002 : Code[20];LineNo@1000000003 : Integer);
    VAR
      ExportedHour@1000000000 : Record 11012041;
    BEGIN
      ExportedHour.INIT;
      ExportedHour."Line No." := LineNo;
      ExportedHour."Document No." := BatchCode;
      ExportedHour."Export Document No." :=  BatchCode;
      ExportedHour."User ID" := USERID;
      ExportedHour.Date := DT2DATE(CURRENTDATETIME);
      ExportedHour.Time :=  TIME;
      //MESSAGE(FORMAT(ExportedHour));
      IF ExportedHour.INSERT THEN BEGIN
        //PostedHourLine.Exported := TRUE;
        PostedHourLine."Export Document No." :=  BatchCode;
        PostedHourLine."Exported on" := CURRENTDATETIME;
        PostedHourLine.MODIFY;
      END;
      //IF ExportedHour.FINDLAST=FALSE THEN
      //  EXIT(1)
      //ELSE
      // EXIT(ExportedHour."Line No."+1);
    END;

    BEGIN
    END.
  }
}

